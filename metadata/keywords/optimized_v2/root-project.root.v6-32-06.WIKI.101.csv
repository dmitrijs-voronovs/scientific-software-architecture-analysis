quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealVar(); Default constructor. RooRealVar(const char* name, const char* title, Double_t value, const char* unit = """"); Constructor with value and unit. RooRealVar(const char* name, const char* title, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with range and unit. Initial value is center of range. RooRealVar(const char* name, const char* title, Double_t value, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with value, range and unit. RooRealVar(const RooRealVar& other, const char* name = 0); Copy Constructor. ~RooRealVar(); Destructor; cout << ""RooRealVar::dtor("" << this << "")"" << endl ;. Double_t getValV(const RooArgSet* nset = 0) const; Return value of variable. void setVal(Double_t value); Set value of variable to 'value'. If 'value' is outside; range of object, clip value into range. void setVal(Double_t value, const char* rangeName); Set value of variable to 'value'. If 'value' is outside; range named 'rangeName' of object, clip value into that range. RooErrorVar* errorVar() const; Return a RooAbsRealLValue representing the error associated; with this variable. The callers takes ownership of the; return object. Bool_t hasBinning(const char* name) const; Returns true if variable has a binning with 'name'. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning definition with name. If binning with 'name' is not found it is created; on the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealVar.html:41089,variab,variable,41089,root/html532/RooRealVar.html,https://root.cern,https://root.cern/root/html532/RooRealVar.html,8,['variab'],['variable']
Modifiability,"titles. TString** TClassTree::fCtitles {nullptr}. protected . ![fNclasses] class titles ; Definition at line 40 of file TClassTree.h. ◆ fDerived. char** TClassTree::fDerived {nullptr}. protected . ![fNclasses] table to indicate if i derives from j ; Definition at line 37 of file TClassTree.h. ◆ fLabelDx. Float_t TClassTree::fLabelDx {0}. protected . width along x of TPaveLabels in per cent of pad ; Definition at line 27 of file TClassTree.h. ◆ fLinks. TList** TClassTree::fLinks {nullptr}. protected . ![fNclasses] for each class, the list of referenced(ing) classes ; Definition at line 43 of file TClassTree.h. ◆ fNclasses. Int_t TClassTree::fNclasses {0}. protected . current number of classes ; Definition at line 28 of file TClassTree.h. ◆ fNdata. Int_t* TClassTree::fNdata {nullptr}. protected . [fNclasses] Number of data members per class ; Definition at line 34 of file TClassTree.h. ◆ fNsons. std::vector<Int_t> TClassTree::fNsons. protected . ! internal variable, used during painting ; Definition at line 44 of file TClassTree.h. ◆ fNtsons. std::vector<Int_t> TClassTree::fNtsons. protected . ! internal variable, used during painting ; Definition at line 45 of file TClassTree.h. ◆ fOptions. TString** TClassTree::fOptions {nullptr}. protected . ![fNclasses] List of options per class ; Definition at line 41 of file TClassTree.h. ◆ fParents. Int_t* TClassTree::fParents {nullptr}. protected . [fNclasses] parent number of classes (permanent) ; Definition at line 35 of file TClassTree.h. ◆ fShowCod. Int_t TClassTree::fShowCod {0}. protected . if 1 show classes referenced by implementation ; Definition at line 29 of file TClassTree.h. ◆ fShowHas. Int_t TClassTree::fShowHas {0}. protected . if 1 show ""has a"" relationship ; Definition at line 31 of file TClassTree.h. ◆ fShowMul. Int_t TClassTree::fShowMul {0}. protected . if 1 show multiple inheritance ; Definition at line 30 of file TClassTree.h. ◆ fShowRef. Int_t TClassTree::fShowRef {0}. protected . if 1 show classes relat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTree.html:29170,variab,variable,29170,doc/master/classTClassTree.html,https://root.cern,https://root.cern/doc/master/classTClassTree.html,1,['variab'],['variable']
Modifiability,"tituents. ;  ; RooAbsData * embeddedData (RooStringView name) const;  Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. ;  ; RooExpensiveObjectCache & expensiveObjectCache ();  ; bool extendSet (const char *name, const char *newContents);  Define a named set in the workspace through a comma separated list of names of objects already in the workspace. ;  ; RooFactoryWSTool & factory ();  Return instance to factory tool. ;  ; RooAbsArg * factory (RooStringView expr);  Short-hand function for factory()->process(expr); ;  ; RooAbsReal * function (RooStringView name) const;  Retrieve function (RooAbsReal) with given name. Note that all RooAbsPdfs are also RooAbsReals. A null pointer is returned if not found. ;  ; RooAbsArg * fundArg (RooStringView name) const;  Return fundamental (i.e. ;  ; TObject * genobj (RooStringView name) const;  Return generic object with given name. ;  ; const RooArgSet * getSnapshot (const char *name) const;  Return the RooArgSet containing a snapshot of variables contained in the workspace. ;  ; RooLinkedList const & getSnapshots () const;  ; bool import (const char *fileSpec, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={});  Import a RooAbsArg or RooAbsData set from a workspace in a file. ;  ; bool import (const RooAbsArg &arg, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={});  Import a RooAbsArg object, e.g. ;  ; bool import (const RooArgSet &args, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:5857,variab,variables,5857,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['variab'],['variables']
Modifiability,"tity(const TGLContextIdentity&); virtual~TGLContextIdentity(); voidAddClientRef(); voidAddRef(TGLContext* ctx); static TClass*Class(); voidDeleteGLResources(); Int_tGetClientRefCnt() const; static TGLContextIdentity*GetCurrent(); static TGLContext*GetDefaultContextAny(); static TGLContextIdentity*GetDefaultIdentity(); TGLFontManager*GetFontManager(); Int_tGetRefCnt() const; virtual TClass*IsA() const; Bool_tIsValid() const; TGLContextIdentity&operator=(const TGLContextIdentity&); voidRegisterDLNameRangeToWipe(UInt_t base, Int_t size); voidRelease(TGLContext* ctx); voidReleaseClient(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. voidCheckDestroy(). Data Members; protected:. TGLFontManager*fFontManagerFreeType font manager. private:. Int_tfClientCnt; Int_tfCnt; list<TGLContext*>fCtxs; list<pair<unsigned int,int> >fDLTrash; static TGLContextIdentity*fgDefaultIdentity. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLContextIdentity(); Constructor. ~TGLContextIdentity(); Destructor. void AddRef(TGLContext* ctx); Add context ctx to the list of references. void Release(TGLContext* ctx); Remove context ctx from the list of references. void RegisterDLNameRangeToWipe(UInt_t base, Int_t size); Remember dl range for deletion in next MakeCurrent or dtor execution. void DeleteGLResources(); Delete GL resources registered for destruction. TGLContextIdentity* GetCurrent(); Find identitfy of current context. Static. TGLContextIdentity* GetDefaultIdentity(); Get identity of a default Gl context. Static. TGLContext* GetDefaultContextAny(); Get the first GL context with the default identity.; Can return zero, but that's OK, too. Static. TGLFontManager* GetFontManager(); Get the free-type font-manager associated with this context-identity. void CheckDestroy(); Private function called when reference count is reduced. Bool_t IsValid() const; { return fValid; }. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLContextIdentity.html:1489,Inherit,Inheritance,1489,root/html532/TGLContextIdentity.html,https://root.cern,https://root.cern/root/html532/TGLContextIdentity.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tivate the storage of the sum of squares of errors, ie TH1::Sumw2 is automatically called. ;  ; static void SmoothArray (Int_t NN, Double_t *XX, Int_t ntimes=1);  Smooth array xx, translation of Hbook routine hsmoof.F. ;  ; static void StatOverflows (Bool_t flag=kTRUE);  if flag=kTRUE, underflows and overflows are used by the Fill functions in the computation of statistics (mean value, StdDev). ;  ; static TH1 * TransformHisto (TVirtualFFT *fft, TH1 *h_output, Option_t *option);  For a given transform (first parameter), fills the histogram (second parameter) with the transform output data, specified in the third parameter If the 2nd parameter h_output is empty, a new histogram (TH1D or TH2D) is created and the user is responsible for deleting it. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:48476,inherit,inherited,48476,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,56,['inherit'],['inherited']
Modifiability,"tive but does not need to be normalized over the; variables to be generated, genVars. The function and its dependents are; cloned and so will not be disturbed during the generation process. ~RooAcceptReject(); Destructor. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio); Return a pointer to a generated event. The caller does not own the event and it; will be overwritten by a subsequent call. The input parameter 'remaining' should; contain your best guess at the total number of subsequent events you will request. const RooArgSet * nextAcceptedEvent(); Scan through events in the cache which have not been used yet,; looking for the first accepted one which is added to the specified; container. Return a pointer to the accepted event, or else zero; if we use up the cache before we accept an event. The caller does; not own the event and it will be overwritten by a subsequent call. void addEventToCache(); Add a trial event to our cache and update our estimates; of the function maximum value and integral. Double_t getFuncMax(); Empirically determine maximum value of function by taking a large number; of samples. The actual number depends on the number of dimensions in which; the sampling occurs. RooAcceptReject(); coverity[UNINIT_CTOR]. RooAcceptReject(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0). RooAbsNumGenerator* clone(const RooAbsReal& func, const RooArgSet& genVars, const RooArgSet& , const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const. Bool_t canSampleConditional() const; Advertisement of capabilities. { return kTRUE ; }. Bool_t canSampleCategories() const; { return kTRUE ; }. » Last changed: Tue Jun 30 14:30:38 2015 » Last generated: 2015-06-30 14:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAcceptReject.html:12360,config,config,12360,root/html602/RooAcceptReject.html,https://root.cern,https://root.cern/root/html602/RooAcceptReject.html,4,['config'],['config']
Modifiability,"tive formula. ;  ; Double_t EvalPrimitive4 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Short_t GetAction (Int_t code) const;  ; Short_t GetActionOptimized (Int_t code) const;  ; Int_t GetActionParam (Int_t code) const;  ; Int_t GetActionParamOptimized (Int_t code) const;  ; Int_t * GetOper () const;  ; Int_t * GetOperOptimized () const;  ; virtual Bool_t IsString (Int_t oper) const;  Return true if the expression at the index 'oper' has to be treated as a string. ;  ; void MakePrimitive (const char *expr, Int_t pos);  MakePrimitive find TFormulaPrimitive replacement for some operands. ;  ; Int_t PreCompile ();  pointer to optimal function ;  ; void SetAction (Int_t code, Int_t value, Int_t param=0);  ; void SetActionOptimized (Int_t code, Int_t value, Int_t param=0);  ; virtual Bool_t StringToNumber (Int_t code);  Try to 'demote' a string into an array bytes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TBits fAlreadyFound;  ; Double_t * fConst;  ; TString * fExpr;  ; TString * fExprOptimized;  Number of operators after optimization. ;  ; TObjArray fFunctions;  ; TObjArray fLinearParts;  ; TString * fNames;  ; Int_t fNconst;  ; Int_t fNdim;  ; Int_t fNoper;  ; Int_t fNOperOptimized;  cache for information ;  ; Int_t fNpar;  ; Int_t fNstring;  ; Int_t fNumber;  ; Int_t fNval;  ; TOperOffset * fOperOffset;  [fNOperOptimized] List of operators. (See documentation for changes made at version 7) ;  ; Int_t * fOperOptimized;  [fNOperOptimized] List of expressions ;  ; TFuncG fOptimal;  [fNPar] predefined function ;  ; Double_t * fParams;  ; TFormulaPrimitive ** fPredefined;  [fNOperOptimized] Offsets of operrands ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; Int_t * fOper;  . #include ""in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html:22030,inherit,inherited,22030,doc/master/classROOT_1_1v5_1_1TFormula.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html,1,['inherit'],['inherited']
Modifiability,"tive formula. ;  ; Double_t EvalPrimitive4 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Short_t GetAction (Int_t code) const;  ; Short_t GetActionOptimized (Int_t code) const;  ; Int_t GetActionParam (Int_t code) const;  ; Int_t GetActionParamOptimized (Int_t code) const;  ; Int_t * GetOper () const;  ; Int_t * GetOperOptimized () const;  ; virtual Bool_t IsString (Int_t oper) const;  Return true if the expression at the index 'oper' has to be treated as a string. ;  ; void MakePrimitive (const char *expr, Int_t pos);  MakePrimitive find TFormulaPrimitive replacement for some operands. ;  ; Int_t PreCompile ();  pointer to optimal function ;  ; void SetAction (Int_t code, Int_t value, Int_t param=0);  ; void SetActionOptimized (Int_t code, Int_t value, Int_t param=0);  ; virtual Bool_t StringToNumber (Int_t code);  Try to 'demote' a string into an array bytes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from ROOT::v5::TFormula; TBits fAlreadyFound;  ; Double_t * fConst;  ; TString * fExpr;  ; TString * fExprOptimized;  Number of operators after optimization. ;  ; TObjArray fFunctions;  ; TObjArray fLinearParts;  ; TString * fNames;  ; Int_t fNconst;  ; Int_t fNdim;  ; Int_t fNoper;  ; Int_t fNOperOptimized;  cache for information ;  ; Int_t fNpar;  ; Int_t fNstring;  ; Int_t fNumber;  ; Int_t fNval;  ; TOperOffset * fOperOffset;  [fNOperOptimized] List of operators. (See documentation for changes made at version 7) ;  ; Int_t * fOperOptimized;  [fNOperOptimized] List of expressions ;  ; TFuncG fOptimal;  [fNPar] predefined function ;  ; Double_t * fParams;  ; TFormulaPrimitive ** fPredefined;  [fNOperOptimized] Offsets of operrands ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html:25263,inherit,inherited,25263,doc/master/structROOT_1_1v5_1_1TF1Data.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html,1,['inherit'],['inherited']
Modifiability,"tive minimize the 1st derivative of (x-x0); kRegModeCurvature minimize the 2nd derivative of (x-x0). kRegModeSize is the regularisation scheme which often is found in; literature. The second derivative is often named curvature.; Sometimes the bias is not discussed, equivalent to a bias scale factor; of zero. The regularisation schemes kRegModeDerivative and; kRegModeCurvature have the nice feature that they create correlations; between x-bins, whereas the non-regularized unfolding tends to create; negative correlations between bins. For these regularisation schemes the; parameter tau could be tuned such that the correlations are smallest,; as an alternative to the L-curve method. If kRegModeSize is chosen or if x is a smooth function through all bins,; the regularisation condition can be set on all bins together by giving; the appropriate argument in the constructor (see examples above). If x is composed of independent groups of bins (for example,; signal and background binning in two variables), it may be necessary to; set regularisation conditions for the individual groups of bins.; In this case, give kRegModeNone in the constructor and specify; the bin grouping with calls to; RegularizeBins() specify a 1-dimensional group of bins; RegularizeBins2D() specify a 2-dimensional group of bins. Note, the class TUnfoldDensity provides an automatic setup of complex; regularisation schemes. For ultimate flexibility, the regularisation condition can be set on each; bin individually; -> give kRegModeNone in the constructor and use; RegularizeSize() regularize one bin; RegularizeDerivative() regularize the slope given by two bins; RegularizeCurvature() regularize the curvature given by three bins; AddRegularisationCondition(); define an arbitrary regulatisation condition. Function Members (Methods); public:. TUnfold(const TUnfold&); TUnfold(const TH2* hist_A, TUnfold::EHistMap histmap, TUnfold::ERegMode regmode = kRegModeSize, TUnfold::EConstraint constraint = kEConstraintAre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfold.html:7609,variab,variables,7609,root/html534/TUnfold.html,https://root.cern,https://root.cern/root/html534/TUnfold.html,2,['variab'],['variables']
Modifiability,"tive minimize the 1st derivative of (x-x0); kRegModeCurvature minimize the 2nd derivative of (x-x0). kRegModeSize is the regularisation scheme which often is found in; literature. The second derivative is often named curvature.; Sometimes the bias is not discussed, equivalent to a bias scale factor; of zero. The regularisation schemes kRegModeDerivative and; kRegModeCurvature have the nice feature that they create correlations; between x-bins, whereas the non-regularized unfolding tends to create; negative correlations between bins. For these regularisation schemes the; parameter tau could be tuned such that the correlations are smallest,; as an alternative to the L-curve method. If kRegModeSize is chosen or if x is a smooth function through all bins,; the regularisation condition can be set on all bins together by giving; the appropriate argument in the constructor (see examples above). If x is composed of independent groups of bins (for example,; signal and background binning in two variables), it may be necessary to; set regularisation conditions for the individual groups of bins.; In this case, give kRegModeNone in the constructor and specify; the bin grouping with calls to; RegularizeBins() specify a 1-dimensional group of bins; RegularizeBins2D() specify a 2-dimensional group of bins. Note, the class TUnfoldDensity provides an automatic setup of complex; regularisation schemes. For ultimate flexibility, the regularisation condition can be set on each; bin individually; -> give kRegModeNone in the constructor and use; RegularizeSize() regularize one bin; RegularizeDerivative() regularize the slope given by two bins; RegularizeCurvature() regularize the curvature given by three bins; AddRegularisationCondition(); define an arbitrary regulatisation condition. Function Members (Methods); public:. virtual~TUnfold(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnfold.html:7633,variab,variables,7633,root/html602/TUnfold.html,https://root.cern,https://root.cern/root/html602/TUnfold.html,4,['variab'],['variables']
Modifiability,"tive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTMatrixTLazy<float>::operator=(const TMatrixTLazy<float>&). private:. virtual voidFillIn(TMatrixT<float>& m) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTMatrixTLazy<float>::fColLwb; Int_tTMatrixTLazy<float>::fColUpb; Int_tTMatrixTLazy<float>::fRowLwb; Int_tTMatrixTLazy<float>::fRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void THaarMatrixT<Element> FillIn(TMatrixT<float>& m) const. » Last changed: root/matrix:$Id: TMatrixTLazy.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THaarMatrixT_float_.html:5809,Inherit,Inheritance,5809,root/html532/THaarMatrixT_float_.html,https://root.cern,https://root.cern/root/html532/THaarMatrixT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tive::GetDocOutput() const; TDocParser*TDocDirective::GetDocParser() const; THtml*TDocDirective::GetHtml() const; virtual const char*TDocDirective::GetName() const; voidTDocDirective::GetName(TString& name) const; const char*TDocDirective::GetOutputDir() const; voidTObject::MakeZombie(); voidTDocDirective::SetCounter(Int_t count); voidTDocDirective::SetParameters(const char* params); voidTDocDirective::SetParser(TDocParser* parser); voidTDocDirective::SetTag(const char* tag). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDocDirective::fCountercounter to generate unique names, -1 to ignore; TDocOutput*TDocDirective::fDocOutputparser invoking this handler; TDocParser*TDocDirective::fDocParserparser invoking this handler; THtml*TDocDirective::fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringTDocDirective::fParametersparameters to the directive; TStringTNamed::fTitleobject title. private:. TStringfTextHTML text to be kept; Bool_tfVerbatimwhether we are in a <pre></pre> block. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddLine(const TSubString& line); Add a line of HTML. Bool_t GetResult(TString& result); Set result to the HTML code that was passed in via AddLine().; Prepend a closing </pre>, append an opening <pre>. const char* GetEndTag() const; get the tag ending this directive. TDocHtmlDirective(); {}. virtual ~TDocHtmlDirective(); {}. » Author: Axel Naumann 2007-01-25 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDocHtmlDirective.html:6801,Inherit,Inheritance,6801,root/html534/TDocHtmlDirective.html,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tive; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TCondor::EStatekFree; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TCondor::EStatekSuspended; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TList*fClaimslist of claims we manage; TStringfPoolthe condor pool to be accessed; TCondor::EStatefStateour claim state; Bool_tfValidaccess to Condor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCondor(const char* pool = """"); Create Condor interface object. Uses Condor apps since there is no; API yet. ~TCondor(); Cleanup Condor interface. void Print(Option_t* option = """") const; Print master status. TCondorSlave * ClaimVM(const char* vm, const char* cmd); Claim a VirtualMachine for PROOF usage. TList * GetVirtualMachines() const; Get the names of the virtual machines in the pool.; Return a TList of TObjString or 0 in case of failure. TList * Claim(Int_t n, const char* cmd); Claim n virtual machines; This function figures out the image and performance index before returning; the list of condor slaves. TCondorSlave * Claim(const char* vmname, const char* cmd); Claim virtual machine with name vmname; This function does not figure out the image and performance index before; returning the condor slave. Bool_t SetState(TCondor::EState state); Set the state of workers. Bool_t Suspend(); Suspend worker. Bool_t Resume(); Resume worker",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCondor.html:6421,Inherit,Inheritance,6421,root/html602/TCondor.html,https://root.cern,https://root.cern/root/html602/TCondor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tively turns on or off the dictionary generation for the specified classs, struct, union, enum or namespace:; #pragma link; [C|C++|off][class|class+protected|; struct|union|enum|namespace][name];; The Dictionary of all public members of class and struct will be generated. If the ‘class+protected’ flag is used, the dictionary for protected members will also be generated. However, dictionary for protected constructor and destructor will not be generated. This ’ class+protected ’ flag will help you only for plain protected member access, but not for virtual function resolution.; If you use the ‘namespace’ flag, it is recommended to add also:; #pragma link C++ nestedclass;; #pragma link C++ nestedtypedef;; The behavior of ‘class’, ‘struct’ and ‘namespace’ flag are identical. Example:; // some C++ header definition; #ifdef __ROOTCLING__; #pragma link off all class;; #pragma link C++ class A;; #pragma link C++ class B;; #pragma link C++ class C<int>;; #pragma link C++ class+protected D;; #pragma link C++ namespace project1;; #pragma link C++ nestedclass;; #pragma link C++ nestedtypedef;; #endif; The next pragma statement selectively turns on or off the dictionary generation for global variables and typedef.; #pragma link [C|C++|off] [global|typedef] [name];; Example:; // some C/C++ header definition; #ifdef __ROOTCLING__; #pragma link off all global;; #pragma link off all typedef;; #pragma link C++ global a;; #pragma link C++ typedef Int_t;; #endif; This pragma statement turns on the dictionary generation for nested classes and nested typedefs.; #pragma link [C|C++|off] [nestedclass|nestedtypedef];; Example:; // some C/C++ header definition; #ifdef __ROOTCLING__; #pragma link off all global;; #pragma link off all typedef;; #pragma link C++ global a;; #pragma link C++ typedef Int_t;; #endif; The next pragma statements turn on or off the dictionary generation for the specified function(s) or member function(s). The list of arguments’ type is optional. If you omit argument ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:829990,variab,variables,829990,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,tives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  efficienciesMulticlass.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  ► src;  annconvergencetest.cxx;  BDT.cxx;  BDT_Reg.cxx;  BDTControlPlots.cxx;  BoostControlPlots.cxx;  compareanapp.cxx;  correlations.cxx;  correlationscatters.cxx;  correlationscattersMultiClass.cxx;  correlationsMultiClass.cxx;  CorrGui.cxx;  CorrGuiMultiClass.cxx;  deviations.cxx;  efficiencies.cxx;  efficienciesMulticlass.cxx;  likelihoodrefs.cxx;  MovieMaker.cxx;  mvaeffs.cxx;  mvas.cxx;  mvasMulticlass.cxx;  mvaweights.cxx;  network.cxx;  paracoor.cxx;  PlotFoams.cxx;  probas.cxx;  regression_averagedevs.cxx;  rulevis.cxx;  rulevisCorr.cxx;  rulevisHists.cxx;  tmvaglob.cxx;  TMVAGui.cxx;  TMVAMultiClassGui.cxx;  TMVARegGui.cxx;  variables.cxx;  variablesMultiClass.cxx;  ► tree;  ► tree;  ► doc;  ► macros;  entrylist_figure1.C;  entrylist_figure2.C;  entrylistblock_figure1.C;  ► inc;  TBasket.h;  TBasketSQL.h;  TBranch.h;  TBranchBrowsable.h;  TBranchClones.h;  TBranchElement.h;  TBranchObject.h;  TBranchRef.h;  TBranchSTL.h;  TBufferSQL.h;  TChain.h;  TChainEleme,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:93772,variab,variablesMultiClass,93772,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['variab'],['variablesMultiClass']
Modifiability,"tle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tHandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTEveWindow::IsAncestorOf(TEveWindow* win); Bool_tTEveWindow::IsCurrent() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTEveWindow::MakeCurrent(); voidTObject::MayNotUse(const char* method) const; virtual voidTEveWindow::NameTitleChanged(); virtual TEveWindowSlot*TEveWindow::NewSlot(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveViewer.html:10605,Inherit,InheritsFrom,10605,root/html532/TEveViewer.html,https://root.cern,https://root.cern/root/html532/TEveViewer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tle, . std::vector< double > & ; samplingDist, . std::vector< double > & ; sampleWeights, . const char * ; varName = nullptr . ). SamplingDistribution constructor. ; Definition at line 57 of file SamplingDistribution.cxx. ◆ SamplingDistribution() [3/5]. SamplingDistribution::SamplingDistribution ; (; const char * ; name, . const char * ; title, . const char * ; varName = nullptr . ). SamplingDistribution constructor (with name and title) ; Definition at line 68 of file SamplingDistribution.cxx. ◆ SamplingDistribution() [4/5]. SamplingDistribution::SamplingDistribution ; (; const char * ; name, . const char * ; title, . RooDataSet & ; dataSet, . const char * ; _columnName = nullptr, . const char * ; varName = nullptr . ). Creates a SamplingDistribution from a RooDataSet for debugging purposes; e.g. ; if you need a Gaussian type SamplingDistribution you can generate it from a Gaussian pdf and use the resulting RooDataSet with this constructor.; The result is the projected distribution onto varName marginalizing the other variables.; If varName is not given, the first variable will be used. This is useful mostly for RooDataSets with only one observable. ; Definition at line 85 of file SamplingDistribution.cxx. ◆ SamplingDistribution() [5/5]. SamplingDistribution::SamplingDistribution ; (; ). Default constructor for SamplingDistribution. ; SamplingDistribution default constructor. ; Definition at line 126 of file SamplingDistribution.cxx. ◆ ~SamplingDistribution(). SamplingDistribution::~SamplingDistribution ; (; ). override . Destructor of SamplingDistribution. ; SamplingDistribution destructor. ; Definition at line 131 of file SamplingDistribution.cxx. Member Function Documentation. ◆ Add(). void SamplingDistribution::Add ; (; const SamplingDistribution * ; other). merge two sampling distributions ; Merge SamplingDistributions (does nothing if nullptr is given).; If variable name was not set before, it is copied from the added SamplingDistribution. ; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html:15717,variab,variables,15717,doc/master/classRooStats_1_1SamplingDistribution.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html,1,['variab'],['variables']
Modifiability,"tle, Int_t id, TParallelCoord* gram); Normal constructor. By default, the title and the name are the expression given to TTree::Draw. The name; can be changed by the user (the label on the plot) but not the title. void AddRange(TParallelCoordRange* range); Add a range to the current selection on the axis. void DeleteVariable(); Delete variables. Int_t DistancetoPrimitive(Int_t px, Int_t py); Computes the distance from the axis. void Draw(Option_t* option = """"); Draw the axis. Bool_t Eval(Long64_t evtidx, TParallelCoordSelect* select); Check if the entry is within the range(s) of ""select"". Two ranges on a single; axis are conjugated as a ""or"": to be selected, the entry must be in one of; the ranges. void ExecuteEvent(Int_t entry, Int_t px, Int_t py); Execute the corresponding entry. void GetEntryXY(Long64_t n, Double_t& x, Double_t& y); Get the position of the variable on the graph for the n'th entry. Int_t GetEntryWeight(Long64_t evtidx); Get the entry weight: The weight of an entry for a given variable; is the bin content of the histogram bin the entry is going through. TH1F* GetHistogram(); Create or recreate the histogram. void GetMinMaxMean(); Get mean, min and max of thos variable. char* GetObjectInfo(Int_t px, Int_t py) const; Returns info about this axis. void GetQuantiles(); Get the box plot values (quantiles). Double_t GetValuefromXY(Double_t x, Double_t y); Get the value corresponding to the posiiton. void GetXYfromValue(Double_t value, Double_t& x, Double_t& y); Get a position corresponding to the value on the axis. void Init(); Initialise the TParallelVar variables. void Paint(Option_t* option = """"); Paint the axis. void PaintBoxPlot(); Paint the boxes in the case of a candle chart. void PaintHistogram(); Paint the histogram on the axis. void PaintLabels(); Paint the axis labels and titles. void Print(Option_t* option = """") const; Print the axis main datas. void SavePrimitive(ostream& out, Option_t* options); Save the TParallelCoordVar as a macro. Can be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordVar.html:11255,variab,variable,11255,root/html530/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html530/TParallelCoordVar.html,9,['variab'],['variable']
Modifiability,"tle, Int_t z, Int_t n, Double_t a);  Constructor. ;  ;  ~TGeoElement () override;  destructor ;  ; Double_t A () const;  ; void AddIsotope (TGeoIsotope *isotope, Double_t relativeAbundance);  Add an isotope for this element. All isotopes have to be isotopes of the same element. ;  ; void ComputeDerivedQuantities ();  Calculate properties for an atomic number. ;  ; Double_t GetfCoulomb () const;  ; Double_t GetfRadTsai () const;  ; TGeoIsotope * GetIsotope (Int_t i) const;  Return i-th isotope in the element. ;  ; Int_t GetNisotopes () const;  ; Double_t GetRelativeAbundance (Int_t i) const;  Return relative abundance of i-th isotope in this element. ;  ; Bool_t HasIsotopes () const;  ; Bool_t IsDefined () const;  ; Bool_t IsUsed () const;  ; Int_t N () const;  ; Double_t Neff () const;  Returns effective number of nucleons. ;  ; void SetDefined (Bool_t flag=kTRUE);  ; void SetUsed (Bool_t flag=kTRUE);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Z () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElementRN.html:4280,inherit,inherited,4280,doc/master/classTGeoElementRN.html,https://root.cern,https://root.cern/doc/master/classTGeoElementRN.html,1,['inherit'],['inherited']
Modifiability,"tle, RooAbsReal &_func, const RooArgSet &cacheObs);  Constructor taking name, title and function to be cached and fixed choice of variable to cache. ;  ;  RooCachedReal (const RooCachedReal &other, const char *name=nullptr);  Copy constructor. ;  ; bool cacheSource () const;  ; TObject * clone (const char *newname) const override;  ; bool getCdfBoundaries () const;  If true the c.d.f boundary mode is active. ;  ; TClass * IsA () const override;  ; void setCacheSource (bool flag);  ; void setCdfBoundaries (bool flag);  If flag is true the RooHistFunc that represent the cache histogram will use special boundary conditions for use with cumulative distribution functions: at the lower bound the function is forced to converge at zero and the upper bound is the function is forced to converge at 1.0. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsCachedReal;  RooAbsCachedReal ();  ;  RooAbsCachedReal (const char *name, const char *title, Int_t ipOrder=0);  Constructor. ;  ;  RooAbsCachedReal (const RooAbsCachedReal &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Forward call to implementation in relevant RooHistFunc instance. ;  ; void disableCache (bool flag);  ; bool forceAnalyticalInt (const RooAbsArg &) const override;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integration capabilities of the RooHistFunc that corresponds to the set of observables in allVars. ;  ; Int_t getInterpolationOrder () const;  ; double getValV (const RooArgSet *set=nullptr) const override;  Implementation of getVal() overriding default implementation of RooAbsReal. ;  ; virtual bool selfNormalized () const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:1708,inherit,inherited,1708,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['inherit'],['inherited']
Modifiability,"tle, RooAbsReal &real, RooAbsData &data, const RooArgSet &projDeps, RooAbsTestStatistic::Configuration const &cfg);  Create a test statistic, and optimise its calculation. ;  ;  RooAbsOptTestStatistic (const RooAbsOptTestStatistic &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsOptTestStatistic () override;  Destructor. ;  ; const char * cacheUniqueSuffix () const override;  Returns a suffix string that is unique for RooAbsOptTestStatistic instances that don't share the same cloned input data object. ;  ; double combinedValue (RooAbsReal **gofArray, Int_t nVal) const override;  Method to combined test statistic results calculated into partitions into the global result. ;  ; RooAbsData & data ();  ; const RooAbsData & data () const;  ; RooAbsReal & function ();  ; const RooAbsReal & function () const;  ; bool isDerived () const override;  Does value or shape of this arg depend on any other arg? ;  ; bool isSealed () const;  ; void seal (const char *notice="""");  ; const char * sealNotice () const;  ;  Public Member Functions inherited from RooAbsTestStatistic;  RooAbsTestStatistic (const char *name, const char *title, RooAbsReal &real, RooAbsData &data, const RooArgSet &projDeps, Configuration const &cfg);  Create a test statistic from the given function and the data. ;  ;  RooAbsTestStatistic (const RooAbsTestStatistic &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsTestStatistic () override;  Destructor. ;  ; void constOptimizeTestStatistic (ConstOpCode opcode, bool doAlsoTrackingOpt=true) override;  Forward constant term optimization management calls to component test statistics. ;  ; void enableOffsetting (bool flag) override;  ; virtual double globalNormalization () const;  ; bool isOffsetting () const override;  ; double offset () const override;  ; virtual double offsetCarry () const;  ; GOFOpMode operMode () const;  ; bool setData (RooAbsData &data, bool cloneData=true) override;  Change dataset that is used to given one. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:5924,inherit,inherited,5924,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"tle. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSimultaneous(const char* name, const char* title, RooAbsCategoryLValue& indexCat); Constructor with index category. PDFs associated with indexCat; states can be added after construction with the addPdf() function. RooSimultaneous can function without having a PDF associated; with every single state. The normalization in such cases is taken; from the number of registered PDFs, but getVal() will assert if; when called for an unregistered index state. RooSimultaneous(const char *name, const char *title, 				 const RooArgList& inPdfList, RooAbsCategoryLValue& inIndexCat); Constructor from index category and full list of PDFs.; In this constructor form, a PDF must be supplied for each indexCat state; to avoid ambiguities. The PDFS are associated in order with the state of the; index category as listed by the index categories type iterator. PDFs may not overlap (i.e. share any variables) with the index category (function). RooSimultaneous(const char *name, const char *title, 				 map<string,RooAbsPdf*> pdfMap, RooAbsCategoryLValue& inIndexCat). void initialize(RooAbsCategoryLValue& inIndexCat, std::map<std::string,RooAbsPdf*> pdfMap); First see if there are any RooSimultaneous input components. RooSimultaneous(const RooSimultaneous& other, const char* name = 0); Copy constructor. ~RooSimultaneous(); Destructor. RooAbsPdf* getPdf(const char* catName) const; Return the p.d.f associated with the given index category name. Bool_t addPdf(const RooAbsPdf& pdf, const char* catLabel); Associate given PDF with index category state label 'catLabel'.; The names state must be already defined in the index category. RooSimultaneous can function without having a PDF associated; with every single state. The normalization in such cases is taken; from the number of registered PDFs, but getVal() will assert if; when called for an unregistered index state. PDFs may not overlap (i.e. share any va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimultaneous.html:41550,variab,variables,41550,root/html526/RooSimultaneous.html,https://root.cern,https://root.cern/root/html526/RooSimultaneous.html,1,['variab'],['variables']
Modifiability,"tlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")}*; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*TGGroupFrame::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*TGGroupFrame::fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a button group widget as a C++ statement(s) on output stream out. TGButtonGroup& operator=(const TGHButtonGroup& ). TGHButtonGroup(const TGWindow* parent, const TString& title = """", GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); { }. virtual ~TGHButtonGroup(); { }. » Author: Valeriy Onuchin & Fons Rademakers 16/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:50; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGHButtonGroup.html:24946,Inherit,Inheritance,24946,root/html604/TGHButtonGroup.html,https://root.cern,https://root.cern/root/html604/TGHButtonGroup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")}*; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*TGGroupFrame::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*TGGroupFrame::fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a button group widget as a C++ statement(s) on output stream out. TGButtonGroup& operator=(const TGHButtonGroup& ). TGHButtonGroup(const TGWindow* parent, const TString& title = """", GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); { }. virtual ~TGHButtonGroup(); { }. » Author: Valeriy Onuchin & Fons Rademakers 16/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGHButtonGroup.html:24946,Inherit,Inheritance,24946,root/html602/TGHButtonGroup.html,https://root.cern,https://root.cern/root/html602/TGHButtonGroup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")}*; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*TGGroupFrame::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*TGGroupFrame::fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a button group widget as a C++ statement(s) on output stream out. TGButtonGroup& operator=(const TGVButtonGroup& ). TGVButtonGroup(const TGWindow* parent, const TString& title = """", GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); { }. virtual ~TGVButtonGroup(); { }. » Author: Valeriy Onuchin & Fons Rademakers 16/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGVButtonGroup.html:24946,Inherit,Inheritance,24946,root/html604/TGVButtonGroup.html,https://root.cern,https://root.cern/root/html604/TGVButtonGroup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")}*; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*TGGroupFrame::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*TGGroupFrame::fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a button group widget as a C++ statement(s) on output stream out. TGButtonGroup& operator=(const TGVButtonGroup& ). TGVButtonGroup(const TGWindow* parent, const TString& title = """", GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); { }. virtual ~TGVButtonGroup(); { }. » Author: Valeriy Onuchin & Fons Rademakers 16/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGVButtonGroup.html:24946,Inherit,Inheritance,24946,root/html602/TGVButtonGroup.html,https://root.cern,https://root.cern/root/html602/TGVButtonGroup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_x; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooPolynomial(); coverity[UNINIT_CTOR]. RooPolynomial(const char* name, const char* title, RooAbsReal& _x, const RooArgList& _coefList, Int_t lowestOrder = 1); Constructor. RooPolynomial(const char* name, const char* title, RooAbsReal& x). RooPolynomial(const RooPolynomial& other, const char* name = 0); Copy constructor. ~RooPolynomial(); Destructor. Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. TObject* clone(const char* newname) const; { return new RooPolynomial(*this, newname); }. » Last changed: Tue Jun 2 15:33:00 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooPolynomial.html:45031,Inherit,Inheritance,45031,root/html604/RooPolynomial.html,https://root.cern,https://root.cern/root/html604/RooPolynomial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tml into GetOutputDir() ;  ; virtual void CreateAuxiliaryFiles () const;  copy CSS, javascript file, etc to the output dir ;  ; void CreateHierarchy ();  Create the inheritance hierarchy diagram for all classes. ;  ; const TString & GetAuthorTag () const;  ; const TString & GetCharset () const;  ; virtual TClass * GetClass (const char *name) const;  Return pointer to class with name. ;  ; const TString & GetClassDocTag () const;  ; const TString & GetCopyrightTag () const;  ; const char * GetCounter () const;  ; const char * GetCounterFormat () const;  ; virtual bool GetDeclFileName (TClass *cl, Bool_t filesys, TString &out_name) const;  Return declaration file name; return the full path if filesys is true. ;  ; void GetDerivedClasses (TClass *cl, std::map< TClass *, Int_t > &derived) const;  fill derived with all classes inheriting from cl and their inheritance distance to cl ;  ; const TString & GetDocStyle () const;  ; const TString & GetDotDir () const;  ; virtual const char * GetEtcDir () const;  Get the directory containing THtml's auxiliary files ($ROOTSYS/etc/html) ;  ; const TFileDefinition & GetFileDefinition () const;  Return the TFileDefinition (or derived) object as set by SetFileDefinition(); create and return a TFileDefinition object if none was set. ;  ; const TString & GetFooter () const;  ; const TString & GetHeader () const;  ; const TString & GetHomepage () const;  ; virtual const char * GetHtmlFileName (const char *classname) const;  Get the html file name for a class named classname. ;  ; virtual void GetHtmlFileName (TClass *classPtr, TString &filename) const;  Return real HTML filename. ;  ; virtual bool GetImplFileName (TClass *cl, Bool_t filesys, TString &out_name) const;  Return implementation file name. ;  ; const TString & GetInputPath () const;  ; const TString & GetLastUpdateTag () const;  ; TList * GetLibraryDependencies ();  ; const TList * GetListOfClasses () const;  ; const TList * GetListOfModules () const;  ; TFileSysDB * GetLocal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTHtml.html:20147,inherit,inheriting,20147,doc/v632/classTHtml.html,https://root.cern,https://root.cern/doc/v632/classTHtml.html,4,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"tness: -184.957 f_0: 15 f_1: 12.9972 f_2: 0 ; ---; : fitness: -184.957 f_0: 15 f_1: 12.9972 f_2: 0 ; ---; : fitness: -184.957 f_0: 15 f_1: 12.9972 f_2: 0 ; ---; : fitness: -184.957 f_0: 15 f_1: 12.9972 f_2: 0 ; ---; FACTOR 0 : 15; FACTOR 1 : 12.9972; FACTOR 2 : 0; ; #include <iostream> // Stream declarations; #include <vector>; ; #include ""TMVA/GeneticAlgorithm.h""; #include ""TMVA/GeneticFitter.h""; #include ""TMVA/IFitterTarget.h""; ; using std::vector;; ; using namespace TMVA;; ; class MyFitness : public IFitterTarget {; public:; MyFitness() : IFitterTarget() {; }; ; // the fitness-function goes here; // the factors are optimized such that the return-value of this function is minimized; // take care!! the fitness-function must never fail, .. means: you have to prevent; // the function from reaching undefined values (such as x=0 for 1/x or so); //; // HINT: to use INTEGER variables, it is sufficient to cast the ""factor"" in the fitness-function; // to (int). In this case the variable-range has to be chosen +1 ( to get 0..5, take Interval(0,6) ); // since the introduction of ""Interval"" ranges can be defined with a third parameter; // which gives the number of bins within the interval. With that technique discrete values; // can be achieved easier. The random selection out of this discrete numbers is completely uniform.; //; Double_t EstimatorFunction( std::vector<Double_t> & factors ){; //return (10.- (int)factors.at(0) *factors.at(1) + (int)factors.at(2));; return (10.- factors.at(0) *factors.at(1) + factors.at(2));; ; //return 100.- (10 + factors.at(1)) *factors.at(2)* TMath::Abs( TMath::Sin(factors.at(0)) );; }; };; ; ; class MyGA2nd : public GeneticAlgorithm {; public:; MyGA2nd( IFitterTarget& target, Int_t size, vector<Interval*>& ranges ) : GeneticAlgorithm(target,; size, ranges ){; }; ; ; // this method has to be activated if one wants to change the behaviour of the evolution; // works only with the head version; //void Evolution(){; // fSexual = true;; // if (fSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAGAexample_8C.html:3127,variab,variable-range,3127,doc/master/TMVAGAexample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAGAexample_8C.html,1,['variab'],['variable-range']
Modifiability,"to * th1Definition textalign.C:14; This is a rotation defined in GEANT3 style. Theta and phi are the spherical angles of each axis of the rotated coordinate system with respect to the initial one. This construction allows definition of malformed rotations, e.g. not orthogonal. A check is performed and an error message is issued in this case.; Specific utilities : determinant, inverse.; Scale transformations; Represent a scale shrinking/enlargement. Data members :Double_t fScale[3]. Not fully implemented yet.; Combined transformations; Represent a rotation followed by a translation. Data members: Double_t fTranslation[3], TGeoRotation *fRotation.; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); TGeoGenTrans; Combined transformations including a scale. Not implemented.; TGeoIdentity; A generic singleton matrix representing a identity transformation NOTE: identified by the global variable gGeoIdentity. ; Definition at line 38 of file TGeoMatrix.h. Public Types; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMatrix.html:9535,variab,variable,9535,doc/master/classTGeoMatrix.html,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html,1,['variab'],['variable']
Modifiability,"to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooNumGenConfig.h>. Inheritance diagram for RooNumGenConfig:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooNumGenConfig() [1/2]. RooNumGenConfig::RooNumGenConfig ; (; ). Constructor. ; Definition at line 55 of file RooNumGenConfig.cxx. ◆ RooNumGenConfig() [2/2]. RooNumGenConfig::RooNumGenConfig ; (; const RooNumGenConfig & ; other). Copy constructor. ; Definition at line 102 of file RooNumGenConfig.cxx. ◆ ~RooNumGenConfig(). RooNumGenConfig::~RooNumGenConfig ; (; ). override . Destructor. ; Definition at line 92 of file RooNumGenConfig.cxx. Member Function Documentation. ◆ addConfigSection(). bool RooNumGenConfig::addConfigSection ; (; const RooAbsNumGenerator * ; proto, . const RooArgSet & ; inDefaultConfig . ). Add a configuration section for a particular integrator. ; Integrator name and capabilities are automatically determined from instance passed as 'proto'. The defaultConfig object is associated as the default configuration for the integrator. ; Definition at line 238 of file RooNumGenConfig.cxx. ◆ Class(). static TClass * RooNumGenConfig::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooNumGenConfig::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooNumGenConfig::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file RooNumGenConfig.h. ◆ DeclFileName(). static const char * RooNumGenConfig::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file RooNumGenConfig.h. ◆ defaultConfig(). RooNumGenConfig & RooNumGenConfig::defaultConfig ; (; ). static . Return reference to instance of default numer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenConfig.html:15649,config,configuration,15649,doc/master/classRooNumGenConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumGenConfig.html,1,['config'],['configuration']
Modifiability,"to a 2 bits unsigned integer; In case D the array elements of fVertex are converted to an unsigned 10 bits integer; In case E fChi2 is converted to a Float_t with truncated precision at 6 bits; In case F the fNsp elements of array fPointvalue are converted to an unsigned 32 bit integer Note that the range specifier must follow the dimension specifier. Case B has more precision (9 to 10 significative digits than case A (6 to 7 digits). In Case A and E, the exponent is stored as is (8 bits), for a total of 21 bits (including 1 bit for sign). The range specifier has the general format: [xmin,xmax] or [xmin,xmax,nbits]; [0,1];; [-10,100];; [-pi,pi], [-pi/2,pi/4],[-2pi,2*pi]; [-10,100,16]; [0,0,8] if nbits is not specified, or nbits <2 or nbits>16 it is set to 16. If (xmin==0 and xmax==0 and nbits <=14) the float word will have its mantissa truncated to nbits significative bits. IMPORTANT NOTE. NOTE 1; Lets assume an original variable float x: When using the format [0,0,8] (ie range not specified) you get the best relative precision when storing and reading back the truncated x, say xt. The variance of (x-xt)/x will be better than when specifying a range for the same number of bits. However the precision relative to the range (x-xt)/(xmax-xmin) will be worst, and vice-versa. The format [0,0,8] is also interesting when the range of x is infinite or unknown. NOTE 2; It is important to understand the difference with the meaning of nbits; in case of [-1,1,nbits], nbits is the total number of bits used to make the conversion from a float to an integer; in case of [0,0,nbits], nbits is the number of bits used for the mantissa, to which is added 8 bits for the exponent. See example of use of the Float16_t data type in tutorial float16.C . Implements TBuffer.; Definition at line 609 of file TBufferFile.cxx. ◆ WriteInt(). void TBufferFile::WriteInt ; (; Int_t ; i). inlineoverridevirtual . Implements TBuffer.; Reimplemented in TBufferSQL.; Definition at line 307 of file TBufferFil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferFile.html:90765,variab,variable,90765,doc/master/classTBufferFile.html,https://root.cern,https://root.cern/doc/master/classTBufferFile.html,1,['variab'],['variable']
Modifiability,"to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions;  TGViewFrame (const TGViewFrame &)=delete;  ; TGViewFrame & operator= (const TGViewFrame &)=delete;  . Private Attributes; TGView * fView;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGViewFrame.html:24511,inherit,inherited,24511,doc/master/classTGViewFrame.html,https://root.cern,https://root.cern/doc/master/classTGViewFrame.html,1,['inherit'],['inherited']
Modifiability,"to be created when the current file exceeds fgTreeMaxSize.; 9150/// (see TTree::ChangeFile); 9151/// if fFileNumber=10, the new file name will have a suffix ""_11"",; 9152/// ie, fFileNumber is incremented before setting the file name; 9153 ; 9154void TTree::SetFileNumber(Int_t number); 9155{; 9156 if (fFileNumber < 0) {; 9157 Warning(""SetFileNumber"", ""file number must be positive. Set to 0"");; 9158 fFileNumber = 0;; 9159 return;; 9160 }; 9161 fFileNumber = number;; 9162}; 9163 ; 9164////////////////////////////////////////////////////////////////////////////////; 9165/// Set all the branches in this TTree to be in decomposed object mode; 9166/// (also known as MakeClass mode).; 9167///; 9168/// For MakeClass mode 0, the TTree expects the address where the data is stored; 9169/// to be set by either the user or the TTree to the address of a full object; 9170/// through the top level branch.; 9171/// For MakeClass mode 1, this address is expected to point to a numerical type; 9172/// or C-style array (variable or not) of numerical type, representing the; 9173/// primitive data members.; 9174/// The function's primary purpose is to allow the user to access the data; 9175/// directly with numerical type variable rather than having to have the original; 9176/// set of classes (or a reproduction thereof).; 9177 ; 9178void TTree::SetMakeClass(Int_t make); 9179{; 9180 fMakeClass = make;; 9181 ; 9182 Int_t nb = fBranches.GetEntriesFast();; 9183 for (Int_t i = 0; i < nb; ++i) {; 9184 TBranch* branch = (TBranch*) fBranches.UncheckedAt(i);; 9185 branch->SetMakeClass(make);; 9186 }; 9187}; 9188 ; 9189////////////////////////////////////////////////////////////////////////////////; 9190/// Set the maximum size in bytes of a Tree file (static function).; 9191/// The default size is 100000000000LL, ie 100 Gigabytes.; 9192///; 9193/// In TTree::Fill, when the file has a size > fgMaxTreeSize,; 9194/// the function closes the current file and starts writing into; 9195/// a new file wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:354698,variab,variable,354698,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"to be in interval ;  ; RooDataHist * fKeysDataHist = nullptr;  data hist representing product ;  ; RooNDKeysPdf * fKeysPdf = nullptr;  the kernel estimation pdf ;  ; double fLeftSideTF = -1;  left side tail-fraction for interval ;  ; Int_t fNumBurnInSteps = 0;  number of steps to discard as burn in, starting from the first ;  ; RooArgSet fParameters;  parameters of interest for this interval ;  ; RooProduct * fProduct = nullptr;  the (keysPdf * heaviside) product ;  ; THnSparse * fSparseHist = nullptr;  the binned Markov Chain data ;  ; double fTFConfLevel = 0.0;  the actual conf level of tail-fraction interval ;  ; double fTFLower;  lower limit of the tail-fraction interval ;  ; double fTFUpper;  upper limit of the tail-fraction interval ;  ; bool fUseKeys = false;  whether to use kernel estimation ;  ; bool fUseSparseHist = false;  whether to use sparse hist (vs. RooDataHist) ;  ; std::vector< Int_t > fVector;  vector containing the Markov chain data ;  ; double fVecWeight = 0;  sum of weights of all entries in fVector ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; bool AcceptableConfLevel (double confLevel);  ; bool WithinDeltaFraction (double a, double b);  . Static Private Attributes; static constexpr const double DEFAULT_DELTA = 10e-6;  ; static constexpr const double DEFAULT_EPSILON = 0.01;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooStats/MCMCInterval.h>. Inheritance diagram for RooStats::MCMCInterval:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorDEFAULT_NUM_BINS . Definition at line 45 of file MCMCInterval.h. ◆ IntervalType. enum RooStats::MCMCInterval::IntervalType. EnumeratorkShortest ; kTailFraction . Definition at line 46 of file MCMCInterval.h. Constructor & Destructor Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html:23700,inherit,inherited,23700,doc/master/classRooStats_1_1MCMCInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html,1,['inherit'],['inherited']
Modifiability,"to be issued ;; Int_t_nmaxMax number of divisions; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_xmaxUpper bound in each dimension; Double_t*_xminLower bound in each dimension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooAdaptiveIntegratorND, its parameters, dependencies and capabilities with RooNumIntFactory. RooAdaptiveIntegratorND(); Default ctor. RooAdaptiveIntegratorND(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor of integral on given function binding and with given configuration. The; integration limits are taken from the definition in the function binding; _func = function. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Virtual constructor with given function and configuration. Needed by RooNumIntFactory. ~RooAdaptiveIntegratorND(); Destructor. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Double_t integral(const Double_t* yvec = 0); Evaluate integral at given function binding parameter values. RooAdaptiveIntegratorND(); Constructors, assignment etc. Bool_t canIntegrate1D() const; { return kFALSE ; }. Bool_t canIntegrate2D() const; { return kTRUE ; }. Bool_t canIntegrateND() const; { return kTRUE ; }. Bool_t canIntegrateOpenEnded() const; { return kFALSE ; }. Bool_t setUseIntegrandLimits(Bool_t flag); {_useIntegrandLimits = flag ; retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAdaptiveIntegratorND.html:7531,config,config,7531,root/html526/RooAdaptiveIntegratorND.html,https://root.cern,https://root.cern/root/html526/RooAdaptiveIntegratorND.html,20,['config'],"['config', 'configuration']"
Modifiability,"to be performed at the end of a task. ;  ; std::shared_ptr< RDFGraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< RDFGraphDrawing::GraphNode > > &visitedMap) final;  ; std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &variationName) final;  Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ;  ; void IncrChildrenCount () final;  ; void InitNode () final;  ; void InitSlot (TTreeReader *r, unsigned int slot) final;  ; void PartialReport (ROOT::RDF::RCutFlowReport &) const final;  ; void Report (ROOT::RDF::RCutFlowReport &) const final;  ; void ResetChildrenCount () final;  ; void ResetReportCount () final;  ; void SetFilter (std::unique_ptr< RFilterBase > f);  ; void StopProcessing () final;  ; void TriggerChildrenCount () final;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RFilterBase;  RFilterBase (RLoopManager *df, std::string_view name, const unsigned int nSlots, const RDFInternal::RColumnRegister &colRegister, const ColumnNames_t &columns, const std::vector< std::string > &prevVariations, const std::string &variation=""nominal"");  ;  ~RFilterBase () override;  ; std::string GetName () const;  ; bool HasName () const;  ; RFilterBase & operator= (const RFilterBase &)=delete;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RNodeBase;  RNodeBase (const std::vector< std::string > &variations={}, RLoopManager *lm=nullptr);  ; virtual ~RNodeBase ();  ; virtual RLoopManager * GetLoopManagerUnchecked ();  ; const std::vector< std::string > & GetVariations () const;  . Private Attributes; std::unique_ptr< RFilterBase > fConcreteFilter = nullptr;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Detail::RDF::RFilterBase; std::vector< ULong64_t > fAccepted = {0};  ; RDFInternal::RColumnRegister fColRegister;  ; const ROOT::RDF::ColumnNames_t fColumnNames;  ; ROOT::RVecB fIsDefine;  The nth flag signals whether the nth input c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html:1835,inherit,inherited,1835,doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RJittedFilter.html,2,['inherit'],['inherited']
Modifiability,"to be regular expression) ; Definition at line 98 of file VariableInfo.h. ◆ fLabel. TString TMVA::VariableInfo::fLabel. private . variable label, set by ""mylabel := var1 + var2"", this is a shortcut ; Definition at line 99 of file VariableInfo.h. ◆ fNormalized. Bool_t TMVA::VariableInfo::fNormalized. private . variable gets normalized ; Definition at line 108 of file VariableInfo.h. ◆ fUnit. TString TMVA::VariableInfo::fUnit. private . unit for axis labels in plots; set by third string in AddVariable ; Definition at line 101 of file VariableInfo.h. ◆ fVarCounter. Int_t TMVA::VariableInfo::fVarCounter. private . dummy variable ; Definition at line 111 of file VariableInfo.h. ◆ fVarType. Char_t TMVA::VariableInfo::fVarType. private . the variable type to be used internally ('F'-default or 'I') ; Definition at line 102 of file VariableInfo.h. ◆ fXmaxNorm. Double_t TMVA::VariableInfo::fXmaxNorm. private . maximum value for correlated/decorrelated/PCA variable ; Definition at line 104 of file VariableInfo.h. ◆ fXmeanNorm. Double_t TMVA::VariableInfo::fXmeanNorm. private . mean value for correlated/decorrelated/PCA variable ; Definition at line 105 of file VariableInfo.h. ◆ fXminNorm. Double_t TMVA::VariableInfo::fXminNorm. private . minimum value for correlated/decorrelated/PCA variable ; Definition at line 103 of file VariableInfo.h. ◆ fXrmsNorm. Double_t TMVA::VariableInfo::fXrmsNorm. private . rms value for correlated/decorrelated/PCA variable ; Definition at line 106 of file VariableInfo.h. ◆ fXvarianceNorm. Double_t TMVA::VariableInfo::fXvarianceNorm. private . variance value for correlated/decorrelated/PCA variable ; Definition at line 107 of file VariableInfo.h. Libraries for TMVA::VariableInfo:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/VariableInfo.h; tmva/tmva/src/VariableInfo.cxx. TMVAVariableInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html:21529,variab,variable,21529,doc/master/classTMVA_1_1VariableInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html,4,['variab'],['variable']
Modifiability,"to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int_t; RooTable Abstract interface for tables; RooThreshEntry Utility class for RooThresholdCategory, holding a threshold/category state pair; RooThresholdCategory Real-to-Category function defined by series of threshold; RooTrace Memory tracer utility for RooFit objects; RooTreeData Dummy class for legacy RooDataSet support; RooTreeDataStore TTree-based Data Storage class; RooTruthModel Truth resolution model (delta function); RooUnblindCPAsymVar CP-Asymmetry unblinding transformation; RooUnblindOffset Offset unblinding transformation; RooUnblindPrecision Precision unblinding transformation; RooUnblindUniform Uniform unblinding transformation; RooUniform Flat PDF in N dimensions; RooUniformBinning Uniform binning specification; RooUnitTest Abstract base class for RooFit/RooStats unit regression tests; RooVectorDataStore STL-vector-based Data Storage class; RooVectorDataStore::CatVector STL-vector-based Data Storage class; RooVectorDataStore::RealFullVector STL-vector-based Data Storage class; RooVectorDataStore::RealVector STL-vector-based Data Storage class; RooVoigtian Voigtian PDF (Gauss (x) BreitWigner); RooWorkspace Persistable project container for (composite) pdfs, functions, variables and datasets; RooWorkspace::CodeRepo Code repository for RooWorkspace; RooWorkspace::WSDir TDirectory representation of RooWorkspace; RooXYChi2Var Chi^2 function of p.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:52756,variab,variables,52756,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['variab'],['variables']
Modifiability,"to carefully watch the BDT screen output for; : the comparison between efficiencies obtained on the training and; : the independent test sample. They should be equal within statistical; : errors, in order to minimize statistical fluctuations in different samples.; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; BDTG : #events: (reweighted) sig: 1600 bkg: 1600; : #events: (unweighted) sig: 1600 bkg: 1600; : Training 100 Decision Trees ... patience please; : Elapsed time for training with 3200 events: 1.7 sec ; BDTG : [dataset] : Evaluation of BDTG on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.0183 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_BDTG.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_BDTG.class.C␛[0m; : data_RNN_CPU.root:/dataset/Method_BDT/BDTG; Factory : Training finished; : ; : Ranking input variables (method specific)...; : No variable ranking supplied by classifier: TMVA_LSTM; : No variable ranking supplied by classifier: TMVA_DNN; : No variable ranking supplied by classifier: PyKeras_LSTM; BDTG : Ranking result (top variable is best ranked); : --------------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------------; : 1 : vars_time9 : 2.245e-02; : 2 : vars_time8 : 2.023e-02; : 3 : vars_time7 : 1.907e-02; : 4 : vars_time7 : 1.907e-02; : 5 : vars_time8 : 1.847e-02; : 6 : vars_time7 : 1.771e-02; : 7 : vars_time9 : 1.708e-02; : 8 : vars_time6 : 1.653e-02; : 9 : vars_time0 : 1.650e-02; : 10 : vars_time7 : 1.626e-02; : 11 : vars_time8 : 1.623e-02; : 12 : vars_time6 : 1.532e-02; : 13 : vars_time8 : 1.530e-02; : 14 : vars_time9 : 1.520e-02; : 15 : vars_time8 : 1.487e-02; : 16 : vars_time6 : 1.421e-02; : 17 : vars_time6 : 1.421e-02; : 18 : vars_time8 : 1.381e-02; : 19 : vars_time8 : 1.379e-02;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:33883,variab,variables,33883,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['variab'],['variables']
Modifiability,"to collection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Check if ""this"" is under cursor. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Mouse and keyboard events. ;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  I cannot show bin content in a status bar - since there can be several bins in one. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option) override;  Paint a composition of 3d hists. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH3C;  TH3C ();  Constructor. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3C (const TH3C &h3c);  Copy constructor. ;  ;  ~TH3C () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3C & operator= ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:3394,variab,variable,3394,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,1,['variab'],['variable']
Modifiability,"to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGSplitter (const TGSplitter &)=delete;  ; TGSplitter & operator= (const TGSplitter &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitter.html:23887,inherit,inherited,23887,doc/master/classTGSplitter.html,https://root.cern,https://root.cern/doc/master/classTGSplitter.html,1,['inherit'],['inherited']
Modifiability,"to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGViewPort (const TGViewPort &)=delete;  ; TGViewPort & operator= (const TGViewPort &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGViewPort.html:27041,inherit,inherited,27041,doc/master/classTGViewPort.html,https://root.cern,https://root.cern/doc/master/classTGViewPort.html,1,['inherit'],['inherited']
Modifiability,"to generate that will override the default. The result is a; copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that; are not in the prototype will be added as new columns to the generated dataset. RooDataSet * generate(RooAbsPdf::GenSpec& ) const; Generate data according to a pre-configured specification created by; RooAbsPdf::prepareMultiGen(). If many identical generation requests; are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); combination than calling the standard generate() multiple times as; initialization overhead is only incurred once. RooDataSet * generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet &whatVars, const RooDataSet *prototype,				Int_t nEvents, Bool_t /*verbose*/, Bool_t randProtoOrder, Bool_t resampleProto); Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a; number of events to generate that will override th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:60052,variab,variables,60052,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"to generate that will override the default. The result is a; copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that; are not in the prototype will be added as new columns to the generated dataset. RooDataSet * generate(RooAbsPdf::GenSpec& ) const; Generate data according to a pre-configured specification created by; RooAbsPdf::prepareMultiGen(). If many identical generation requests; are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); combination than calling the standard generate() multiple times as; initialization overhead is only incurred once. RooDataSet * generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Int_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto) const; Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a; number of events to generate that will override the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:61040,variab,variables,61040,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,2,['variab'],['variables']
Modifiability,"to getParametersHook. Parameters. [in]nsetNormalisation set (optional). If a value depends on this set, it's not a parameter. . Definition at line 621 of file RooAbsArg.cxx. ◆ getProxy(). RooAbsProxy * RooAbsArg::getProxy ; (; Int_t ; index); const. Return the nth proxy from the proxy list. ; Definition at line 1444 of file RooAbsArg.cxx. ◆ getStringAttribute(). const Text_t * RooAbsArg::getStringAttribute ; (; const Text_t * ; key); const. Get string attribute mapped under key 'key'. ; Returns null pointer if no attribute exists under that key ; Definition at line 275 of file RooAbsArg.cxx. ◆ getTransientAttribute(). bool RooAbsArg::getTransientAttribute ; (; const Text_t * ; name); const. Check if a named attribute is set. ; By default, all attributes are unset. ; Definition at line 311 of file RooAbsArg.cxx. ◆ getVariables(). RooFit::OwningPtr< RooArgSet > RooAbsArg::getVariables ; (; bool ; stripDisconnected = true); const. Return RooArgSet with all variables (tree leaf nodes of expression tree) ; Definition at line 2154 of file RooAbsArg.cxx. ◆ graphVizAddConnections(). void RooAbsArg::graphVizAddConnections ; (; std::set< std::pair< RooAbsArg *, RooAbsArg * > > & ; ). protected . Utility function that inserts all point-to-point client-server connections between any two RooAbsArgs in the expression tree headed by this object in the linkSet argument. ; Definition at line 2246 of file RooAbsArg.cxx. ◆ graphVizTree() [1/2]. void RooAbsArg::graphVizTree ; (; const char * ; fileName, . const char * ; delimiter = ""\n"", . bool ; useTitle = false, . bool ; useLatex = false . ). Create a GraphViz .dot file visualizing the expression tree headed by this RooAbsArg object. ; Use the GraphViz tool suite to make e.g. a gif or ps file from the .dot file. If a node derives from RooAbsReal, its current (unnormalised) value is printed as well.; Based on concept developed by Kyle Cranmer. ; Definition at line 2169 of file RooAbsArg.cxx. ◆ graphVizTree() [2/2]. void RooAbsArg::gra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:68219,variab,variables,68219,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,1,['variab'],['variables']
Modifiability,"to histogram painter; Double_tTH2::fScalefactorScale factor; Double_tfStepX; Double_tfStepYDimensions of a partition cell; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2Poly(); Default Constructor. No boundaries specified. TH2Poly(const char* name, const char* title, Double_t xlow, Double_t xup, Double_t ylow, Double_t yup); Constructor with specified name and boundaries,; but no partition cell number. TH2Poly(const char* name, const char* title, Int_t nX, Double_t xlow, Double_t xup, Int_t nY, Double_t ylow, Double_t yup); Constructor with specified name and boundaries and partition cell number. ~TH2Poly(); Destructor. Int_t AddBin(TObject* poly); Adds a new bin to the histogram. It can be any object having the method; IsInside(). It returns the bin number in the histogram. It returns 0 if; it failed to add. To allow the histogram limits to expand when a bin; outside the limits is added, call SetFloat() before adding the bin. Int_t AddBin(Int_t n, const Double_t* x, const Double_t* y); Adds a new bin to the histogram. The number of vertices and their (x,y); coordinates are required as input. It re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2Poly.html:30694,Inherit,Inheritance,30694,root/html532/TH2Poly.html,https://root.cern,https://root.cern/root/html532/TH2Poly.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"to how createIntegral() returns an object that returns the integral. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Construct representation of -log(L) of PDF with given dataset. ;  ; virtual RooAbsPdf * createProjection (const RooArgSet &iset);  Return a p.d.f that represent a projection of this p.d.f integrated over given observables. ;  ; RooFit::OwningPtr< RooAbsReal > createScanCdf (const RooArgSet &iset, const RooArgSet &nset, Int_t numScanBins, Int_t intOrder);  ; double expectedEvents (const RooArgSet &nset) const;  Return expected number of events to be used in calculation of extended likelihood. ;  ; double extendedTerm (double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;  ; double extendedTerm (double sumEntries, RooArgSet const *nset, double sumEntriesW2=0.0, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; double extendedTerm (RooAbsData const &data, bool weightSquared, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooFitResult > fitTo (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Fit PDF to given dataset. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Generate a new dataset containing the specified variables with events sampled from our distribution. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, const RooDataSet &prototype, Int_t nEvents=0, bool verbose=false, bool ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:9911,extend,extended,9911,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,2,['extend'],['extended']
Modifiability,"to include/be wide than those of the parameter. ;  ; TClass * IsA () const override;  ; void PrintValue (Int_t i=0) const override;  Prints leaf value. ;  ; void ReadBasket (TBuffer &b) override;  Read leaf elements from Basket input buffer. ;  ; void ReadBasketExport (TBuffer &b, TClonesArray *list, Int_t n) override;  Read leaf elements from Basket input buffer and export buffer to TClonesArray objects. ;  ; bool ReadBasketFast (TBuffer &, Long64_t) override;  Deserialize input by performing byteswap as needed. ;  ; void ReadValue (std::istream &s, Char_t delim=' ') override;  Read a integer integer from std::istream s and store it into the branch buffer. ;  ; void SetAddress (void *add=nullptr) override;  Set leaf buffer data address. ;  ; virtual void SetMaximum (Short_t max);  ; virtual void SetMinimum (Short_t min);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual bool CanGenerateOffsetArray ();  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual TString GetFullName () const;  Return the full name (including the parent's branch names) of the leaf. ;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, Long64_t len);  If this branch is a branch count, return the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafS.html:2299,inherit,inherited,2299,doc/master/classTLeafS.html,https://root.cern,https://root.cern/doc/master/classTLeafS.html,1,['inherit'],['inherited']
Modifiability,to internal clone if input data. ;  ; RooAbsReal * _funcClone = nullptr;  Pointer to internal clone of input function. ;  ; RooArgSet * _funcCloneSet = nullptr;  Set owning all components of internal clone of input function. ;  ; RooArgSet * _funcObsSet = nullptr;  List of observables in the pdf expression. ;  ; double _integrateBinsPrecision {-1.};  ; RooArgSet * _normSet = nullptr;  Pointer to set with observables used for normalization. ;  ; bool _optimized = false;  ! ;  ; RooAbsData * _origData = nullptr;  Original data. ;  ; RooAbsReal * _origFunc = nullptr;  Original function. ;  ; bool _ownData = false;  Do we own the dataset. ;  ; RooArgSet * _projDeps = nullptr;  Set of projected observable. ;  ; bool _sealed = false;  Is test statistic sealed – i.e. no access to data. ;  ; TString _sealNotice;  User-defined notice shown when reading a sealed likelihood. ;  ; bool _skipZeroWeights = false;  ! Whether to skip entries with weight zero in the evaluation ;  ;  Protected Attributes inherited from RooAbsTestStatistic; std::string _addCoefRangeName;  Name of reference to be used for RooAddPdf components. ;  ; RooAbsData * _data = nullptr;  Pointer to original input dataset. ;  ; bool _doOffset = false;  Apply interval value offset to control numeric precision? ;  ; double _evalCarry = 0.0;  ! carry of Kahan sum in evaluatePartition ;  ; Int_t _extSet = 0;  ! Number of designated set to calculated extended term ;  ; RooAbsReal * _func = nullptr;  Pointer to original input function. ;  ; std::vector< std::unique_ptr< RooAbsTestStatistic > > _gofArray;  ! Array of sub-contexts representing part of the combined test statistic ;  ; GOFOpMode _gofOpMode = Slave;  Operation mode of test statistic instance. ;  ; bool _init = false;  ! Is object initialized ;  ; pRooRealMPFE * _mpfeArray = nullptr;  ! Array of parallel execution frond ends ;  ; RooFit::MPSplit _mpinterl = RooFit::BulkPartition;  Use interleaving strategy rather than N-wise split for partitioning of datase,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:60958,inherit,inherited,60958,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"to load the dictionary for 'classname'; from the list of generator.; If silent is 'true', do not warn about missing dictionary for the class.; (typically used for class that are used only for transient members). The 'requestedname' is expected to be already normalized. void LoadClassInfo() const; Try to load the classInfo (it may require parsing the header file; and/or loading data from the clang pcm). void Store(TBuffer& b) const; Store class description on I/O buffer. Bool_t IsLoaded() const; Return true if the shared library of this class is currently in the a; process's memory. Return false, after the shared library has been; unloaded or if this is an 'emulated' class created from a file's StreamerInfo. Bool_t IsStartingWithTObject() const; Returns true if this class inherits from TObject and if the start of; the TObject parts is at the very beginning of the objects.; Concretly this means that the following code is proper for this class:; ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from; TObject. Bool_t IsTObject() const; Return kTRUE is the class inherits from TObject. Bool_t IsForeign() const; Return kTRUE is the class is Foreign (the class does not have a Streamer method). void PostLoadCheck(); Do the initialization that can only be done after the CINT dictionary has; been fully populated and can not be delayed efficiently. Long_t Property() const; Set TObject::fBits and fStreamerType to cache information about the; class. The bits are; kIsTObject : the class inherits from TObject; kStartWithTObject: TObject is the left-most class in the inheritance tree; kIsForeign : the class doe not have a Streamer method; The value of fStreamerType are; kTObject : the class inherits from TObject; kForeign : the class does not have a Streamer method; kInstrumented: the class does have a Streamer method; kExternal: the class has a free standing way of streaming itself; kEmu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:53795,inherit,inherit,53795,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,4,['inherit'],['inherit']
Modifiability,"to loading to not inadvertently; 1645 // load the libraries for the classes concerned even-though the user is; 1646 // *not* using them.; 1647 // Note this call must happen before the first call to LoadLibraryMap.; 1648 assert(GetRootMapFiles() == nullptr && ""Must be called before LoadLibraryMap!"");; 1649 TClass::ReadRules(); // Read the default customization rules ...; 1650 ; 1651 LoadLibraryMap();; 1652 SetClassAutoLoading(true);; 1653}; 1654 ; 1655void TCling::ShutDown(); 1656{; 1657 fIsShuttingDown = true;; 1658 ResetGlobals();; 1659}; 1660 ; 1661////////////////////////////////////////////////////////////////////////////////; 1662/// Helper to initialize TVirtualStreamerInfo's factor early.; 1663/// Use static initialization to insure only one TStreamerInfo is created.; 1664static bool R__InitStreamerInfoFactory(); 1665{; 1666 // Use lambda since SetFactory return void.; 1667 auto setFactory = []() {; 1668 TVirtualStreamerInfo::SetFactory(new TStreamerInfo());; 1669 return kTRUE;; 1670 };; 1671 static bool doneFactory = setFactory();; 1672 return doneFactory; // avoid unused variable warning.; 1673}; 1674 ; 1675////////////////////////////////////////////////////////////////////////////////; 1676/// Register Rdict data for future loading by LoadPCM;; 1677 ; 1678void TCling::RegisterRdictForLoadPCM(const std::string &pcmFileNameFullPath, llvm::StringRef *pcmContent); 1679{; 1680 if (IsFromRootCling()); 1681 return;; 1682 ; 1683 if (llvm::sys::fs::exists(pcmFileNameFullPath)) {; 1684 ::Error(""TCling::RegisterRdictForLoadPCM"", ""Rdict '%s' is both in Module extension and in File system."", pcmFileNameFullPath.c_str());; 1685 return;; 1686 }; 1687 ; 1688 // The pcmFileNameFullPath must be resolved already because we cannot resolve; 1689 // a link to a non-existent file.; 1690 fPendingRdicts[pcmFileNameFullPath] = *pcmContent;; 1691}; 1692 ; 1693////////////////////////////////////////////////////////////////////////////////; 1694/// Tries to load a PCM from TFile; ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:62636,variab,variable,62636,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['variab'],['variable']
Modifiability,"to locally stage/cache remote files.Definition TFile.cxx:4626; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TMVA::ReaderThe Reader class serves to use the MVAs in a specific analysis context.Definition Reader.h:64; TMVA::Reader::EvaluateRegressionconst std::vector< Float_t > & EvaluateRegression(const TString &methodTag, Double_t aux=0)evaluates MVA for given set of input variablesDefinition Reader.cxx:565; TMVA::Reader::BookMVAIMethod * BookMVA(const TString &methodTag, const TString &weightfile)read method name from weight fileDefinition Reader.cxx:368; TMVA::Reader::AddSpectatorvoid AddSpectator(const TString &expression, Float_t *)Add a float spectator or expression to the reader.Definition Reader.cxx:321; TMVA::Reader::AddVariablevoid AddVariable(const TString &expression, Float_t *)Add a float variable or expression to the reader.Definition Reader.cxx:303; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Tools::SplitStringstd::vector< TString > SplitString(const TString &theOpt, const char separator) constsplits the option string at 'separator' and fills the list 'splitV' with the primitive stringsDefinition Tools.cxx:1199; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TStopwatchStopwatch class.Definition TStopwatch.h:28; TStopwatch::Startvoid Start(Bool_t reset=kTRUE)Start the stopwatch.Definition TStopwatch.cxx:58; TStopwatch::Stopvoid Stop()Stop the stopwatch.Definition TStopwatch.cxx:77; TStopwatch::Printvoid Print(Option_t *option="""") const overridePrint the real and cpu time passed between the start and stop events.Definition TStopwatch.cxx:219; TStringBasic string class.Definition TString.h:139; TString::IsNullBool_t IsNull() constDefinition TString.h:414",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegressionApplication_8C.html:11452,variab,variable,11452,doc/master/TMVARegressionApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegressionApplication_8C.html,2,['variab'],['variable']
Modifiability,"to manage multiple sockets:; {; TServerSocket *ss = new TServerSocket (9090, kTRUE);. // Accept a connection and return a full-duplex communication socket.; TSocket *s0 = ss->Accept();; TSocket *s1 = ss->Accept();. // tell the clients to start; s0->Send(""go 0"");; s1->Send(""go 1"");. // Close the server socket (unless we will use it; // later to wait for another connection).; ss->Close();. TMonitor *mon = new TMonitor;; mon->Add(s0);; mon->Add(s1);. while (1) {; TMessage *mess;; TSocket *s;; s = mon->Select();; s->Recv(mess);; ...; }; }; The full code for the example above is in $ROOTSYS/tutorials/net/hserv.C and; $ROOTSYS/tutorials/net/hclient.C.; 23 Threads; A thread is an independent flow of control that operates within the same address space as other independent flows of controls within a process. In most UNIX systems, thread and process characteristics are grouped into a single entity called a process. Sometimes, threads are called ""lightweight processes’’.; Note: This introduction is adapted from the AIX 4.3 Programmer’s Manual.; 23.1 Threads and Processes; In traditional single-threaded process systems, a process has a set of properties. In multi-threaded systems, these properties are divided between processes and threads.; 23.1.1 Process Properties; A process in a multi-threaded system is the changeable entity. It must be considered as an execution frame. It has all traditional process attributes, such as:. Process ID, process group ID, user ID, and group ID; Environment; Working directory. A process also provides a common address space and common system resources:. File descriptors; Signal actions; Shared libraries; Inter-process communication tools (such as message queues, pipes, semaphores, or shared memory). 23.1.2 Thread Properties; A thread is the schedulable entity. It has only those properties that are required to ensure its independent flow of control. These include the following properties:. Stack; Scheduling properties (such as policy or priority); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1101302,adapt,adapted,1101302,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['adapt'],['adapted']
Modifiability,"to one of the 2 functions.; If both AsDouble and AsString are present, AsDouble will be used.; AsString can return either a char*, a std::string or a TString.s; For example, the following; tree->Draw(""event.myTTimeStamp"");; will draw the same histogram as; tree->Draw(""event.myTTimeStamp.AsDouble()"");; In addition, when the object is a type TString or std::string, TTree::Draw; will call respectively TString::Data and std::string::c_str(). If the object is a TBits, the histogram will contain the index of the bit; that are turned on. Retrieving information about the tree itself. You can refer to the tree (or chain) containing the data by using the; string 'This'.; You can then could any TTree methods. For example:; tree->Draw(""This->GetReadEntry()"");; will display the local entry numbers be read.; tree->Draw(""This->GetUserInfo()->At(0)->GetName()"");; will display the name of the first 'user info' object. Special functions and variables. Entry$: A TTree::Draw formula can use the special variable Entry$; to access the entry number being read. For example to draw every; other entry use:; tree.Draw(""myvar"",""Entry$%2==0"");. Entry$ : return the current entry number (== TTree::GetReadEntry()); LocalEntry$ : return the current entry number in the current tree of a chain (== GetTree()->GetReadEntry()); Entries$ : return the total number of entries (== TTree::GetEntries()); Length$ : return the total number of element of this formula for this; entry (==TTreeFormula::GetNdata()); Iteration$: return the current iteration over this formula for this; entry (i.e. varies from 0 to Length$). Length$(formula): return the total number of element of the formula given as a; parameter.; Sum$(formula): return the sum of the value of the elements of the formula given; as a parameter. For example the mean for all the elements in; one entry can be calculated with:; Sum$(formula)/Length$(formula); Min$(formula): return the minimun (within one TTree entry) of the value of the; elements of the for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:28626,variab,variable,28626,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,1,['variab'],['variable']
Modifiability,"to one of the 2 functions.; If both AsDouble and AsString are present, AsDouble will be used.; AsString can return either a char*, a std::string or a TString.s; For example, the following; tree->Draw(""event.myTTimeStamp"");; will draw the same histogram as; tree->Draw(""event.myTTimeStamp.AsDouble()"");; In addition, when the object is a type TString or std::string, TTree::Draw; will call respectively TString::Data and std::string::c_str(). If the object is a TBits, the histogram will contain the index of the bit; that are turned on. Retrieving information about the tree itself. You can refer to the tree (or chain) containing the data by using the; string 'This'.; You can then could any TTree methods. For example:; tree->Draw(""This->GetReadEntry()"");; will display the local entry numbers be read.; tree->Draw(""This->GetUserInfo()->At(0)->GetName()"");; will display the name of the first 'user info' object. Special functions and variables. Entry$: A TTree::Draw formula can use the special variable Entry$; to access the entry number being read. For example to draw every; other entry use:; tree.Draw(""myvar"",""Entry$%2==0"");. Entry$ : return the current entry number (== TTree::GetReadEntry()); LocalEntry$ : return the current entry number in the current tree of a; chain (== GetTree()->GetReadEntry()); Entries$ : return the total number of entries (== TTree::GetEntries()); Length$ : return the total number of element of this formula for this; entry (==TTreeFormula::GetNdata()); Iteration$: return the current iteration over this formula for this; entry (i.e. varies from 0 to Length$). Length$(formula): return the total number of element of the formula given as a; parameter.; Sum$(formula): return the sum of the value of the elements of the formula given; as a parameter. For example the mean for all the elements in; one entry can be calculated with:; Sum$(formula)/Length$(formula); Min$(formula): return the minimun (within one TTree entry) of the value of the; elements of the fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:72443,variab,variable,72443,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,10,['variab'],['variable']
Modifiability,"to pass drawing options; TServerSocket*fServSockServer socket to accept call backs; TStringfSockPathUNIX socket path for communication with workers; TStringfVarExpInternal variable to pass drawing options; static Int_tfgWrksMaxMax number of workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofLite(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. ~TProofLite(); Destructor. Int_t GetNumberOfWorkers(const char* url = 0); Static method to determine the number of workers giving priority to users request.; Otherwise use the system information, if available, or just start; the minimal number, i.e. 2 . Int_t SetupWorkers(Int_t opt = 0, TList* wrks = 0); Start up PROOF worker",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofLite.html:25890,config,config,25890,root/html530/TProofLite.html,https://root.cern,https://root.cern/root/html530/TProofLite.html,9,['config'],['config']
Modifiability,"to perform node splitting; Double_tfMinSizemin number of events in node; TRandom3*fMyTrandomrandom number generator for randomised trees; Int_tfNCutsnumber of grid point in variable cut scans; UInt_tfNNodesMaxmax # of nodes; Double_tfNodePurityLimitpurity limit to decide whether a node is signal; UInt_tfNvarsnumber of variables used to separate S and B; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig ; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted ; Bool_tfRandomisedTreechoose at each node splitting a random set of variables ; TMVA::RegressionVariance*fRegTypethe separation crition used in Regression; TMVA::SeparationBase*fSepTypethe separation crition; Int_tfTreeIDjust an ID number given to the tree.. makes debugging easier as tree knows who he is.; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; Int_tfUseNvarsthe number of variables used in randomised trees;; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseSearchTreecut scan done with binary trees or simple event loop.; vector<Double_t>fVariableImportancethe relative importance of the different variables ; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc.; static const Int_tfgRandomSeedset nonzero for debugging and zero for random seeds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; DecisionTree(); default constructor using the GiniIndex as separation criterion,; no restrictions on minium number of events in a leave note or the; separation gain in the node splitting. DecisionTree(TMVA::SeparationBase* sepType, Int_t minSize, Int_t nCuts, UInt_t cls = 0, Bool_t randomisedTree = kFALSE, Int_t useNvars = 0, Bool_t usePoissonNvars = kFALSE, UInt_t nNodesMax ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTree.html:7537,variab,variables,7537,root/html528/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTree.html,2,['variab'],['variables']
Modifiability,"to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; virtual void printValue (std::ostream &os) const;  Interface to print value of object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static StorageType getDefaultStorageType ();  ; static void setDefaultStorageType (StorageType s);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:26758,inherit,inherited,26758,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,2,['inherit'],['inherited']
Modifiability,"to resolve situation when several elements of same basic type stored as FastArray; unsigned intfJsonrCnt! counter for all objects and arrays; map<const void*,unsigned int>fJsonrMap! map of recorded objects, used in JsonR to restore references; Bool_tTBuffer::fModeRead or write mode; TStringfNumericLocale! stored value of setlocale(LC_NUMERIC), which should be recovered at the end; TStringfOutBuffer! main output buffer for json code; TString*fOutput! current output buffer for json code; TObject*TBuffer::fParentPointer to parent object owning this buffer; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; TStringfSemicolon! depending from compression level, "" : "" or "":""; TObjArrayfStack! stack of streamer infos; TStringfValue! buffer for current value; Int_tTBuffer::fVersionBuffer format version; static const char*fgFloatFmt! printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferJSON(); Creates buffer object to serialize data into json. ~TBufferJSON(); destroy buffer. TString ConvertToJSON(const TObject* obj, Int_t compact = 0); converts object, inherited from TObject class, to JSON string. void SetCompact(int level); Set level of space/newline compression; 0 - no any compression; 1 - exclude spaces in the begin; 2 - remove newlines; 3 - exclude spaces as much as possible. TString ConvertToJSON(const void* obj, const TClass* cl, Int_t compact = 0); converts any type of object to JSON string; following values of compact; 0 - no any compression; 1 - exclude spaces in the begin; 2 - remove newlines; 3 - exclude spaces as much as possible. TString ConvertToJSON(const void* obj, TDataMember* member, Int_t compact = 0); converts selected data member into json. TString JsonWriteMember(const void* ptr, TDataMember* member, TClass* memberClass); Convert single data member to JSON structures; Returns string with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TBufferJSON.html:20811,Inherit,Inheritance,20811,root/html604/TBufferJSON.html,https://root.cern,https://root.cern/root/html604/TBufferJSON.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"to server. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsValid () const;  ; void Print (Option_t *option="""") const override;  Print some info about this instance. ;  ; Longptr_t ProcessLine (const char *line, Bool_t=kFALSE, Int_t *error=nullptr) override;  Parse a single command line and forward the request to the remote server where it will be processed. ;  ; Int_t SendFile (const char *file, Int_t opt=kAscii, const char *rfile=nullptr);  Send a file to the server. ;  ; Int_t SendObject (const TObject *obj);  Send object to server. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status=0) override;  Terminate this session. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; virtual void GetOptions (Int_t *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleException (Int_t sig);  Handle exceptions (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:2993,inherit,inherited,2993,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,1,['inherit'],['inherited']
Modifiability,"to store sum of squares of weights per bin.Definition TProfile2D.cxx:2043; TProfile2D::FillInt_t Fill(Double_t x, const char *namey, Double_t z) overrideIncrement cell defined by x,namey by a weight w.Definition TProfile2D.h:110; TProfile2D::GetBinErrorSqUncheckedDouble_t GetBinErrorSqUnchecked(Int_t bin) const overrideDefinition TProfile2D.h:60; TProfile2D::fBinEntriesTArrayD fBinEntriesNumber of entries per bin.Definition TProfile2D.h:34; TProfile2D::SetBinsvoid SetBins(const Int_t *nbins, const Double_t *range)Definition TProfile2D.h:49; TProfile2D::~TProfile2D~TProfile2D() overrideDefault destructor for Profile2D histograms.Definition TProfile2D.cxx:98; TProfile2D::fgApproximatestatic Bool_t fgApproximateBin error approximation option.Definition TProfile2D.h:42; TProfile2D::DivideBool_t Divide(TF1 *h1, Double_t c1=1) overridePerforms the operation: this = this/(c1*f1) .Definition TProfile2D.cxx:415; TProfile2D::SetBinsvoid SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) overrideRedefine x, y and z axis parameters with variable bin sizes.Definition TProfile2D.h:73; TProfile2D::Rebin2DTProfile2D * Rebin2D(Int_t nxgroup=2, Int_t nygroup=2, const char *newname="""") overrideRebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together.Definition TProfile2D.cxx:1552; TProfile2D::FillInt_t Fill(Double_t, Double_t) overrideIncrement cell defined by x,y by 1.Definition TProfile2D.h:56; TProfile2D::BufferEmptyInt_t BufferEmpty(Int_t action=0) overrideFill histogram with all entries in the buffer.Definition TProfile2D.cxx:291; TProfile2D::LabelsInflatevoid LabelsInflate(Option_t *axis=""X"") overrideDouble the number of bins for axis.Definition TProfile2D.cxx:990; TProfile2D::GetStatsvoid GetStats(Double_t *stats) const overrideFill the array stats from the contents of this profile.Definition TProfile2D.cxx:916; TProfile2D::GetBinEntriesvirtual Double_t GetBinEntries(Int_t bin) constReturn bin entries of a Profile2D histo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8h_source.html:17840,variab,variable,17840,doc/master/TProfile2D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8h_source.html,1,['variab'],['variable']
Modifiability,"to system seek. All arguments like in POSIX lseek. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Get info about a file: id, size, flags, modification time. ;  ; Int_t SysSync (Int_t fd) override;  Interface to system sync. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Interface to system write. All arguments like in POSIX write. ;  . Private Attributes; struct stat64 fStatBuffer;  ! (transient) Cached file status buffer (for performance) ;  ; Bool_t fStatCached;  ! (transient) is file status cached? ;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDCacheFile.html:33558,inherit,inherited,33558,doc/master/classTDCacheFile.html,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html,2,['inherit'],['inherited']
Modifiability,"to test ;  ; Bool_t fVerbose;  ! flag for extra information ;  ; TProcPool fWorkers;  ! procpool object ;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/Envelope.h>. Inheritance diagram for TMVA::Envelope:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Envelope(). Envelope::Envelope ; (; const TString & ; name, . DataLoader * ; dataloader = nullptr, . TFile * ; file = nullptr, . const TString ; options = """" . ). protected . Constructor for the initialization of Envelopes, differents Envelopes may needs differents constructors then this is a generic one protected. ; Parameters. namethe name algorithm. ; dataloaderTMVA::DataLoader object with the data. ; fileoptional file to save the results. ; optionsextra options for the algorithm. . Definition at line 40 of file Envelope.cxx. ◆ ~Envelope(). Envelope::~Envelope ; (; ). Default destructor. ; Definition at line 62 of file Envelope.cxx. Member Function Documentation. ◆ BookMethod() [1/2]. void TMVA::Envelope::BookMethod ; (; TString ; m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Envelope.html:16826,inherit,inherited,16826,doc/master/classTMVA_1_1Envelope.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Envelope.html,1,['inherit'],['inherited']
Modifiability,"to the above interpreted pdf; // The code required to make this pdf is automatically embedded in the workspace; w->factory(""CEXPR::GC('x*x+a',{x,a[1]})"");; ; // Compiled and interpreted functions (rather than pdfs) can be made with the lower case; // 'expr' and 'cexpr' types; ; // Print workspace contents; w->Print();; ; // Make workspace visible on command line; gDirectory->Add(w);; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; RooWorkspace.h; TAxis.h; TCanvas.h; gDirectory#define gDirectoryDefinition TDirectory.h:384; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; gROOT#define gROOTDefinition TROOT.h:406; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf512_wsfactory_operDefinition rf512_wsfactory_oper.py:1; ; [#1] INFO:Caching -- Changing internal binning of variable 'x' in FFT 'lxg' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#0] PROGRESS:InputArguments -- initializing physics inputs from file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials/roofit/input_histos_rf_lagrangianmorph.root with object name(s) 'pTV'; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing dataset dh_SM_NPsq0_morph; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing dataset dh_cHq3_NPsq1_morph; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing dataset dh_cHq3_NPsq2_morph; [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(w) importing code of class RooCFAuto000Pdf from /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/documentation/doxygen/RooCFAuto000Pdf.cxx and RooCFAuto000Pdf.h; ; RooWorkspace(w) w contents; ; variables; ---------; (Nbkg,Nsig,SM,a,binWidth_pTV,c,cHq3,f,m,mg,nNP0,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf512__wsfactory__oper_8C.html:4097,variab,variable,4097,doc/master/rf512__wsfactory__oper_8C.html,https://root.cern,https://root.cern/doc/master/rf512__wsfactory__oper_8C.html,1,['variab'],['variable']
Modifiability,"to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TString fClaimID;  ; TString fHostname;  ; TString fImage;  ; TString fOrdinal;  ; Int_t fPerfIdx;  ; Int_t fPort;  ; TString fWorkDir;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TCondor.h>. Inheritance diagram for TCondorSlave:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ins",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCondorSlave.html:8935,inherit,inherited,8935,doc/master/classTCondorSlave.html,https://root.cern,https://root.cern/doc/master/classTCondorSlave.html,1,['inherit'],['inherited']
Modifiability,"to the input; function and its range. The function must be one dimensional and its; range cannot include zero.; . Function Members (Methods); public:. virtual~RooInvTransform(); virtual list<Double_t>*RooAbsFunc::binBoundaries(Int_t) const; static TClass*Class(); UInt_tRooAbsFunc::getDimension() const; virtual Double_tgetMaxLimit(UInt_t index) const; virtual Double_tgetMinLimit(UInt_t index) const; virtual const char*RooAbsFunc::getName() const; virtual TClass*IsA() const; Bool_tRooAbsFunc::isValid() const; Int_tRooAbsFunc::numCall() const; virtual Double_toperator()(const Double_t[] xvector) const; RooInvTransform&operator=(const RooInvTransform&); virtual list<Double_t>*RooAbsFunc::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; voidRooAbsFunc::resetNumCall() const; virtual voidRooAbsFunc::restoreXVec() const; RooInvTransform(const RooAbsFunc& func); RooInvTransform(const RooInvTransform&); virtual voidRooAbsFunc::saveXVec() const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. UInt_tRooAbsFunc::_dimensionNumber of observables; const RooAbsFunc*_funcInput function binding; Int_tRooAbsFunc::_ncallFunction call counter; Bool_tRooAbsFunc::_validIs binding in valid state?. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooInvTransform(const RooAbsFunc& func); Constructor. RooInvTransform(const RooAbsFunc& func). virtual ~RooInvTransform(); { }. Double_t operator()(const Double_t[] xvector) const. Double_t getMinLimit(UInt_t index) const; { return 1/_func->getMaxLimit(index); }. Double_t getMaxLimit(UInt_t index) const; { return 1/_func->getMinLimit(index); }. » Last changed: Tue Jun 2 15:31:41 2015 » Last generated: 2015-06-02 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooInvTransform.html:1800,Inherit,Inheritance,1800,root/html604/RooInvTransform.html,https://root.cern,https://root.cern/root/html604/RooInvTransform.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"to the left. void SetPurity( void ); return the S/(S+B) (purity) for the node; REM: even if nodes with purity 0.01 are very PURE background nodes, they still; get a small value of the purity. void Print(ostream& os) const; print the node. void PrintRec(ostream& os) const; recursively print the node and its daughters (--> print the 'tree'). Bool_t ReadDataRecord(istream& is, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); Read the data block. void ClearNodeAndAllDaughters(); clear the nodes (their S/N, Nevents etc), just keep the structure of the tree. void ResetValidationData(); temporary stored node values (number of events, etc.) that originate; not from the training but from the validation data (used in pruning). void PrintPrune(ostream& os) const; printout of the node (can be read in with ReadDataRecord). void PrintRecPrune(ostream& os) const; recursive printout of the node and its daughters. void SetCC(Double_t cc). Float_t GetSampleMin(UInt_t ivar) const; return the minimum of variable ivar from the training sample; that pass/end up in this node. Float_t GetSampleMax(UInt_t ivar) const; return the maximum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMin(UInt_t ivar, Float_t xmin); set the minimum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMax(UInt_t ivar, Float_t xmax); set the maximum of variable ivar from the training sample; that pass/end up in this node. void ReadAttributes(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE). void AddAttributesToNode(void* node) const; add attribute to xml. void SetFisherCoeff(Int_t ivar, Double_t coeff); set fisher coefficients. void AddContentToNode(stringstream& s) const; adding attributes to tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). void ReadContent(stringstream& s); reading attributes from tree node (well, was used i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTreeNode.html:7661,variab,variable,7661,root/html528/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTreeNode.html,6,['variab'],['variable']
Modifiability,"to the list of handlers. ; If there is already a handler defined for the same base and regexp it will be replaced. ; Definition at line 569 of file TPluginManager.cxx. ◆ Class(). static TClass * TPluginManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPluginManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPluginManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 286 of file TPluginManager.h. ◆ DeclFileName(). static const char * TPluginManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 286 of file TPluginManager.h. ◆ FindHandler(). TPluginHandler * TPluginManager::FindHandler ; (; const char * ; base, . const char * ; uri = nullptr . ). Returns the handler if there exists a handler for the specified URI. ; The uri can be 0 in which case the first matching plugin handler will be returned. Returns 0 in case handler is not found. ; Definition at line 608 of file TPluginManager.cxx. ◆ IsA(). TClass * TPluginManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 286 of file TPluginManager.h. ◆ LoadHandlerMacros(). void TPluginManager::LoadHandlerMacros ; (; const char * ; path). private . Load all plugin macros from the specified path/base directory. ; Definition at line 431 of file TPluginManager.cxx. ◆ LoadHandlersFromEnv(). void TPluginManager::LoadHandlersFromEnv ; (; TEnv * ; env). Load plugin handlers specified in config file, like: ; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""TMySQLServer(...)""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""TPgSQLServer(...)""; The + allows the extension of an already defined resource (see TEnv). ; Definition at line 391 of file TPluginManager.cxx. ◆ LoadHandlersFromPluginDirs(). void TPluginManager::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:17093,plugin,plugin,17093,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,1,['plugin'],['plugin']
Modifiability,"to the output file. ;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Types::EAnalysisType fAnalysisType;  ! ;  ; Bool_t fCorrelations;  ! ;  ; std::vector< IMethod * > fIMethods;  ! vector of objects with booked methods ;  ; std::vector< ClassificationResult > fResults;  ! ;  ; Bool_t fROC;  ! ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::Envelope; std::shared_ptr< DataLoader > fDataLoader;  ! data ;  ; std::shared_ptr< TFile > fFile;  ! file to save the results ;  ; UInt_t fJobs;  ! number of jobs to run some high level algorithm in parallel ;  ; std::vector< OptionMap > fMethods;  ! Booked method information ;  ; Bool_t fModelPersistence; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html:18067,inherit,inherited,18067,doc/master/classTMVA_1_1Experimental_1_1Classification.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html,1,['inherit'],['inherited']
Modifiability,"to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; TODO --> adapt to variable,target,spectator selection; default transformation output; --> only indicate that transformation occurred. void UpdateNorm(Int_t ivar, Double_t x); TODO --> adapt to variable,target,spectator selection; update min and max of a given variable (target) and a given transformation method. void AttachXMLTo(void* parent); create XML description the transformation (write out info of selected variables). void ReadFromXML(void* trfnode); Read the input variables from the XML node. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); getinput and setoutput equivalent. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ). const Event* Transform(const TMVA::Event *const , Int_t cls) const. const Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. void SetEnabled(Bool_t e); accessors. { fEnabled = e; }. void SetNormalise(Bool_t n); { fNormalise = n; }. Bool_t IsEnabled() const; { return fEnabled; }. Bool_t IsCreated() const; { return fCreated; }. Bool_t IsNormalised() const; { return fNormalise; }. void ToggleInputSortOrder(Bool_t sortOrder); { fSortGet = sortOrder; }. void SetOu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableTransformBase.html:10095,adapt,adapt,10095,root/html534/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableTransformBase.html,6,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,"to the; integration observables; ScanNumCdf() -- Apply scanning technique if cdf integral involves numeric integration [ default ]; ScanAllCdf() -- Always apply scanning technique; ScanNoCdf() -- Never apply scanning technique; ScanParameters(Int_t nbins, -- Parameters for scanning technique of making CDF: number; Int_t intOrder) of sampled bins and order of interpolation applied on numeric cdf. RooAbsReal* createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder). RooArgSet* getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; This helper function finds and collects all constraints terms of all coponent p.d.f.s; and returns a RooArgSet with all those terms. void clearEvalError(); Clear the evaluation error flag. Bool_t evalError(); Return the evaluation error flag. void raiseEvalError(); Raise the evaluation error flag. RooNumGenConfig* defaultGeneratorConfig(); Returns the default numeric MC generator configuration for all RooAbsReals. RooNumGenConfig* specialGeneratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumGenConfig* specialGeneratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumGenConfig* getGeneratorConfig() const; Return the numeric MC generator configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setGeneratorConfig(const RooNumGenConfig& config); Set the given configurat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:76382,config,configuration,76382,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['config'],['configuration']
Modifiability,"to the; originators unique address space and can not be used by the; consumer process(es)). Consumer processes can map the memory region; from this file and access the objects stored in it via the Get(); method (which returns a copy of the object stored in the shared; memory with correct vtbl ptr set). Only objects of classes with a; Streamer() member function defined can be shared. Function Members (Methods); public:. TMapRec(const TMapRec&); TMapRec(const char* name, const TObject* obj, Int_t size, void* buf); ~TMapRec(); void*GetBuffer(Long_t offset = 0) const; Int_tGetBufSize() const; const char*GetClassName(Long_t offset = 0) const; const char*GetName(Long_t offset = 0) const; TMapRec*GetNext(Long_t offset = 0) const; TObject*GetObject() const; TMapRec&operator=(const TMapRec&). Data Members; private:. Int_tfBufSizebuffer size; void*fBufferbuffer containing object of class name; char*fClassNameclass name; char*fNameobject name; TMapRec*fNextnext MapRec in list; TObject*fObjectpointer to original object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void operator=(const TMapRec& ). const char * GetName(); { return fName; }. TMapRec(const char* name, const TObject* obj, Int_t size, void* buf). ~TMapRec(). const char * GetClassName(Long_t offset = 0) const; { return (char *)((Long_t) fClassName + offset); }. void * GetBuffer(Long_t offset = 0) const; { return (void *)((Long_t) fBuffer + offset); }. Int_t GetBufSize() const; { return fBufSize; }. TObject * GetObject() const. TMapRec * GetNext(Long_t offset = 0) const; { return (TMapRec *)((Long_t) fNext + offset); }. » Author: Fons Rademakers 08/07/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TMapFile.h 23122 2008-04-10 14:56:30Z rdm $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMapRec.html:1666,Inherit,Inheritance,1666,root/html532/TMapRec.html,https://root.cern,https://root.cern/root/html532/TMapRec.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Static returning label default font struct. ;  ; static const TGGC & GetDefaultGC ();  Static returning label default graphics context. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLabel.html:20286,inherit,inherited,20286,doc/master/classTGLabel.html,https://root.cern,https://root.cern/doc/master/classTGLabel.html,1,['inherit'],['inherited']
Modifiability,"to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TFitEditor * GetInstance (TVirtualPad *pad=nullptr, TObject *obj=nullptr);  Static method - opens the fit panel. ;  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitEditor.html:33055,inherit,inherited,33055,doc/master/classTFitEditor.html,https://root.cern,https://root.cern/doc/master/classTFitEditor.html,3,['inherit'],['inherited']
Modifiability,"to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8py.html:1815,config,configFile,1815,doc/master/rf505__asciicfg_8py.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html,1,['config'],['configFile']
Modifiability,"to(TH1* histo); voidSetHistoName(const string& HistoName); voidSetHistoPath(const string& HistoPath); voidSetInputFile(const string& InputFile); voidSetName(const string& Name); voidSetNormalizeByTheory(bool norm); voidSetStatError(RooStats::HistFactory::StatError Error); voidSetValue(Double_t Val); voidwriteToFile(string FileName, string DirName). Data Members; protected:. stringfChannelName; vector<RooStats::HistFactory::HistoFactor>fHistoFactorList; stringfHistoName; stringfHistoPath; vector<RooStats::HistFactory::HistoSys>fHistoSysList; stringfInputFile; stringfName; vector<RooStats::HistFactory::NormFactor>fNormFactorList; boolfNormalizeByTheory; vector<RooStats::HistFactory::OverallSys>fOverallSysList; vector<RooStats::HistFactory::ShapeFactor>fShapeFactorList; vector<RooStats::HistFactory::ShapeSys>fShapeSysList; RooStats::HistFactory::StatErrorfStatError; boolfStatErrorActivate; TH1*fhCountingHist; RooStats::HistFactory::HistReffhNominal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Sample(). Sample(string Name). Sample(const RooStats::HistFactory::Sample& other); constructor from name, file and path. Name of the histogram should not include the path. Sample(string Name, string HistoName, string InputFile, string HistoPath = """"). ~Sample(). void Print(ostream& = std::cout). void PrintXML(ofstream& xml). void writeToFile(string FileName, string DirName). TH1* GetHisto(); set histogram for this sample. void SetHisto(TH1* histo); { fhNominal = histo; fHistoName=histo->GetName(); }. void SetValue(Double_t Val). void ActivateStatError(); Some helper functions; Note that histogram name should not include the path of the histogram in the file.; This has to be given separatly. void ActivateStatError(string HistoName, string InputFile, string HistoPath = """"). void AddOverallSys(string Name, Double_t Low, Double_t High). void AddOverallSys(const RooStats::HistFactory::OverallSys& Sys). void AddNormFactor(string Name, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__Sample.html:3693,Inherit,Inheritance,3693,root/html534/RooStats__HistFactory__Sample.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__Sample.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"to(TH1* histo); voidSetHistoName(const string& HistoName); voidSetHistoPath(const string& HistoPath); voidSetInputFile(const string& InputFile); voidSetName(const string& Name); voidSetNormalizeByTheory(bool norm); voidSetStatError(RooStats::HistFactory::StatError Error); voidSetValue(Double_t Val); voidwriteToFile(string FileName, string DirName). Data Members; protected:. stringfChannelName; vector<RooStats::HistFactory::HistoFactor>fHistoFactorList; stringfHistoName; stringfHistoPath; vector<RooStats::HistFactory::HistoSys>fHistoSysList; stringfInputFile; stringfName; vector<RooStats::HistFactory::NormFactor>fNormFactorList; boolfNormalizeByTheory; vector<RooStats::HistFactory::OverallSys>fOverallSysList; vector<RooStats::HistFactory::ShapeFactor>fShapeFactorList; vector<RooStats::HistFactory::ShapeSys>fShapeSysList; RooStats::HistFactory::StatErrorfStatError; boolfStatErrorActivate; TH1*fhCountingHist; RooStats::HistFactory::HistReffhNominal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Sample(); { ; }. Sample(const Sample& other). Sample(string Name, string HistoName, string InputFile, string HistoPath = """"); { ; }. Sample(string Name); { ; }. ~Sample(). TH1* GetHisto(). void writeToFile(string FileName, string DirName). void SetValue(Double_t Val). void Print(ostream& = std::cout). void PrintXML(ofstream& xml). void ActivateStatError(). void ActivateStatError(string HistoName, string InputFile, string HistoPath = """"). void AddOverallSys(string Name, Double_t Low, Double_t High). void AddOverallSys(const RooStats::HistFactory::OverallSys& Sys). void AddNormFactor(string Name, Double_t Val, Double_t Low, Double_t High, bool Const = false). void AddNormFactor(const RooStats::HistFactory::NormFactor& Factor). void AddHistoSys(string Name, string HistoNameLow, string HistoFileLow, string HistoPathLow, string HistoNameHigh, string HistoFileHigh, string HistoPathHigh). void AddHistoSys(const RooStats::HistFactory::HistoSys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__Sample.html:3572,Inherit,Inheritance,3572,root/html602/RooStats__HistFactory__Sample.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__Sample.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"toClass Class Reference. ; Persistent version of a TClass. ; Definition at line 38 of file TProtoClass.h. Classes; struct  TProtoRealData;  . Public Member Functions;  TProtoClass ();  ;  TProtoClass (TClass *cl);  Initialize a TProtoClass from a TClass. ;  ;  TProtoClass (TProtoClass *pc);  ; virtual ~TProtoClass ();  Destructor. ;  ; void Delete (Option_t *opt="""") override;  Delete the containers that are usually owned by their TClass. ;  ; Bool_t FillTClass (TClass *pcl);  Move data from this TProtoClass into cl. ;  ; TList * GetBaseList ();  ; std::vector< TDataMember * > & GetData ();  ; std::vector< TString > & GetDepClasses ();  ; TList * GetEnumList ();  ; const TList * GetListOfEnums ();  ; std::vector< TProtoRealData > & GetPRDList ();  ; int GetSize ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProtoClass.html:1304,inherit,inherited,1304,doc/master/classTProtoClass.html,https://root.cern,https://root.cern/doc/master/classTProtoClass.html,1,['inherit'],['inherited']
Modifiability,"tocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Mon Jul 4 15:24:00 2011 » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSimWSTool__BuildConfig.html:5926,config,configuration,5926,root/html530/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html530/RooSimWSTool__BuildConfig.html,1,['config'],['configuration']
Modifiability,"tocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Sat Oct 9 22:38:49 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimWSTool__BuildConfig.html:5926,config,configuration,5926,root/html528/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html528/RooSimWSTool__BuildConfig.html,1,['config'],['configuration']
Modifiability,"tocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Thu Nov 3 20:09:16 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimWSTool__BuildConfig.html:5926,config,configuration,5926,root/html532/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html532/RooSimWSTool__BuildConfig.html,2,['config'],['configuration']
Modifiability,"tocol; string_masterCatName; map<string,RooSimWSTool::SplitRule>_pdfmap; map<string,string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). virtual ~BuildConfig(); {}. » Last changed: Tue Jun 30 14:35:49 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimWSTool__BuildConfig.html:5952,config,configuration,5952,root/html602/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html602/RooSimWSTool__BuildConfig.html,2,['config'],['configuration']
Modifiability,"togram h (TH1) is integrated over the channel contents for the bin range of this histogram. It is normalized to 1.; Getting one random number implies:; Generating a random number between 0 and 1 (say r1); Look in which bin in the normalized integral r1 corresponds to; Fill histogram channel ntimes random numbers are generated. SPECIAL CASE when the target histogram has the same binning as the source. in this case we simply use a poisson distribution where the mean value per bin = bincontent/integral. ; Reimplemented in TH2, and TH3.; Definition at line 3590 of file TH1.cxx. ◆ FindBin(). Int_t TH1::FindBin ; (; Double_t ; x, . Double_t ; y = 0, . Double_t ; z = 0 . ). virtual . Return Global bin number corresponding to x,y,z. ; 2-D and 3-D histograms are represented with a one dimensional structure. This has the advantage that all existing functions, such as GetBinContent, GetBinError, GetBinFunction work for all dimensions. This function tries to extend the axis if the given point belongs to an under-/overflow bin AND if CanExtendAllAxes() is true.; See also TH1::GetBin, TAxis::FindBin and TAxis::FindFixBin ; Reimplemented in TH2Poly.; Definition at line 3672 of file TH1.cxx. ◆ FindFirstBinAbove(). Int_t TH1::FindFirstBinAbove ; (; Double_t ; threshold = 0, . Int_t ; axis = 1, . Int_t ; firstBin = 1, . Int_t ; lastBin = -1 . ); const. virtual . Find first bin with content > threshold for axis (1=x, 2=y, 3=z) if no bins with content > threshold is found the function returns -1. ; The search will occur between the specified first and last bin. Specifying the value of the last bin to search to less than zero will search until the last defined bin. ; Definition at line 3734 of file TH1.cxx. ◆ FindFixBin(). Int_t TH1::FindFixBin ; (; Double_t ; x, . Double_t ; y = 0, . Double_t ; z = 0 . ); const. virtual . Return Global bin number corresponding to x,y,z. ; 2-D and 3-D histograms are represented with a one dimensional structure. This has the advantage that all existing fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:120855,extend,extend,120855,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['extend'],['extend']
Modifiability,"togram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; TH1::fBufferDouble_t * fBuffer[fBufferSize] entry bufferDefinition TH1.h:108; TH1::GetEffectiveEntriesvirtual Double_t GetEffectiveEntries() constNumber of effective entries of the histogram.Definition TH1.cxx:4448; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::fNcellsInt_t fNcellsNumber of bins(1D), cells (2D) +U/Overflows.Definition TH1.h:89; TH1::fTsumwDouble_t fTsumwTotal Sum of weights.Definition TH1.h:96; TH1::fTsumw2Double_t fTsumw2Total Sum of squares of weights.Definition TH1.h:97; TH1::fTsumwx2Double_t fTsumwx2Total Sum of weight*X*X.Definition TH1.h:99; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::GetNbinsZvirtual Int_t GetNbinsZ() constDefinition TH1.h:299; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetNbinsXvirtual Int_t GetNbinsX() constDefinition TH1.h:297; TH1::fBufferSizeInt_t fBufferSizefBuffer sizeDefinition TH1.h:107; TH1::SetBinErrorvirtual void SetBinError(Int_t bin, Double_t error)Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empt...Definition TH1.cxx:9206; TH1::fgBufferSizestatic Int_t fgBufferSize! Default buffer size for automatic histogramsDefinition TH1.h:115; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TH1::SavePrimitiveHelpvirtual void SavePrimitiveHelp(std::ostream &out, const char *hname, Option_t *option="""")Helper function for the SavePrimitive functions from TH1 or classes derived from TH1,...Definition TH1.cxx:7379; TH1::SetBinContentvirtual void SetBinContent(Int_t bin, Double_t content)Set bin content see convention for numbering bins in TH1::GetBin In case the bi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:57252,extend,extendable,57252,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"togram or scatter-plot. Profile histograms, on the other hand, are used to display the mean value of Y and its RMS for each bin in X. If Y is an unknown but single-valued approximate function of X, it will have greater precision in a profile histogram than in a scatter plot. TProfile : one dimensional profiles; TProfile2D : two dimensional profiles. The class hierarchy of histogram classes. All ROOT histogram classes are derived from the base class TH1 (see figure above). This means that two-dimensional and three-dimensional histograms are seen as a type of a one-dimensional histogram, in the same way in which multidimensional C arrays are just an abstraction of a one-dimensional contiguous block of memory.; 3.2 Creating Histograms; There are several ways in which you can create a histogram object in ROOT. The straightforward method is to use one of the several constructors provided for each concrete class in the histogram hierarchy. For more details on the constructor parameters, see the subsection “Constant or Variable Bin Width” below. Histograms may also be created by:. Calling the Clone() method of an existing histogram; Making a projection from a 2-D or 3-D histogram; Reading a histogram from a file (see Input/Output chapter). // using various constructors; TH1* h1 = new TH1I(""h1"", ""h1 title"", 100, 0.0, 4.0);; TH2* h2 = new TH2F(""h2"", ""h2 title"", 40, 0.0, 2.0, 30, -1.5, 3.5);; TH3* h3 = new TH3D(""h3"", ""h3 title"", 80, 0.0, 1.0, 100, -2.0, 2.0,; 50, 0.0, 3.0);. // cloning a histogram; TH1* hc = (TH1*)h1->Clone();. // projecting histograms; // the projections always contain double values !; TH1* hx = h2->ProjectionX(); // ! TH1D, not TH1F; TH1* hy = h2->ProjectionY(); // ! TH1D, not TH1F; 3.2.1 Constant or Variable Bin Width; The histogram classes provide a variety of ways to construct a histogram, but the most common way is to provide the name and title of histogram and for each dimension: the number of bins, the minimum x (lower edge of the first bin) and the ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:72099,Variab,Variable,72099,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Variab'],['Variable']
Modifiability,"togram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ; According to this approximate formula the error on the quantile is estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and n is the number of events used to compute the quantile and f(q) is the probability distribution for the other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be a normal distribution. ; Definition at line 2505 of file TH2.cxx. ◆ QuantilesY(). TH1D * TH2::QuantilesY ; (; Double_t ; prob = 0.5, . const char * ; name = ""_qy"" . ); const. Compute the Y distribution of quantiles in the other variable X name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ; Definition at line 2518 of file TH2.cxx. ◆ Rebin(). TH2 * TH2::Rebin ; (; Int_t ; ngroup = 2, . const char * ; newname = """", . const Double_t * ; xbins = nullptr . ). overridevirtual . Override TH1::Rebin as TH2::RebinX Rebinning in variable binning as for TH1 is not allowed If a non-null pointer is given an error is flagged see RebinX and Rebin2D. ; Reimplemented from TH1.; Definition at line 1663 of file TH2.cxx. ◆ Rebin2D(). TH2 * TH2::Rebin2D ; (; Int_t ; nxgroup = 2, . Int_t ; nygroup = 2, . const char * ; newname = """" . ). virtual . Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together. ; if newname is not blank a new temporary histogram hnew is created. else the current histogram is modified (default) The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this have to me merged into one bin of hnew If the original histogram has errors stored (via Sumw2),",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:102295,variab,variable,102295,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability,"togram. The hypothesis of identity (homogeneity) [3]; is that the two histograms represent random values with identical; distributions. It is equivalent that there exist r constants p1,...,pr,; such that. and the probability of belonging to the ith bin for some measured value; in both experiments is equal to pi. The number of events in the ith; bin is a random variable with a distribution approximated by a Poisson; probability distribution. for the first histogram and with distribution. for the second histogram. If the hypothesis of homogeneity is valid,; then the maximum likelihood estimator of pi, i=1,...,r, is. and then. has approximately a distribution [3].; The comparison procedure can include an analysis of the residuals which; is often helpful in identifying the bins of histograms responsible for; a significant overall value. Most convenient for; analysis are the adjusted (normalized) residuals [4]. If hypotheses of homogeneity are valid then residuals ri are; approximately independent and identically distributed random variables; having N(0,1) distribution. The application of the test has; restrictions related to the value of the expected frequencies Npi,; Mpi, i=1,...,r. A conservative rule formulated in [5] is that all the; expectations must be 1 or greater for both histograms. In practical; cases when expected frequencies are not known the estimated expected; frequencies can be used. Unweighted and weighted histograms comparison:. A simple modification of the ideas described above can be used for the; comparison of the usual (unweighted) and weighted histograms. Let us; denote the number of events in the ith bin in the unweighted; histogram as ni and the common weight of events in the ith bin of the; weighted histogram as wi. The total number of events in the; unweighted histogram is equal to. and the total weight of events in the weighted histogram is equal to. Let us formulate the hypothesis of identity of an unweighted histogram; to a weighted histogra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:47445,variab,variables,47445,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,10,['variab'],['variables']
Modifiability,"togramTitle = 0, const char* distributionName = 0, const char* projectionMode = 0, Bool_t useAxisBinning = kTRUE); TH1*GetRhoIstatbgr(const char* histogramName, const char* histogramTitle = 0, const char* distributionName = 0, const char* projectionMode = 0, Bool_t useAxisBinning = kTRUE, TH2** ematInv = 0); TH1*GetRhoItotal(const char* histogramName, const char* histogramTitle = 0, const char* distributionName = 0, const char* projectionMode = 0, Bool_t useAxisBinning = kTRUE, TH2** ematInv = 0); Double_tTUnfold::GetRhoMax() const; virtual Double_tGetScanVariable(Int_t mode, const char* distribution, const char* projectionMode); Double_tTUnfold::GetTau() const; virtual const char*TObject::GetTitle() const; static const char*TUnfold::GetTUnfoldVersion(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfoldDensity.html:12087,Inherit,InheritsFrom,12087,root/html534/TUnfoldDensity.html,https://root.cern,https://root.cern/root/html534/TUnfoldDensity.html,1,['Inherit'],['InheritsFrom']
Modifiability,"togramTitle = 0, const char* distributionName = 0, const char* projectionMode = 0, Bool_t useAxisBinning = kTRUE); TH1*GetRhoIstatbgr(const char* histogramName, const char* histogramTitle = 0, const char* distributionName = 0, const char* projectionMode = 0, Bool_t useAxisBinning = kTRUE, TH2** ematInv = 0); TH1*GetRhoItotal(const char* histogramName, const char* histogramTitle = 0, const char* distributionName = 0, const char* projectionMode = 0, Bool_t useAxisBinning = kTRUE, TH2** ematInv = 0); Double_tTUnfold::GetRhoMax() const; virtual Double_tGetScanVariable(Int_t mode, const char* distribution, const char* projectionMode); Double_tTUnfold::GetTau() const; virtual const char*TObject::GetTitle() const; static const char*TUnfold::GetTUnfoldVersion(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnfoldDensity.html:11668,Inherit,InheritsFrom,11668,root/html602/TUnfoldDensity.html,https://root.cern,https://root.cern/root/html602/TUnfoldDensity.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tograms which are booked have all analysis bins arranged on one axis (global bin number). TUnfoldBinning provides methods to locate the global bin number: . Use the method FindNode() to locate a group of bins (e.g. signal, control distribution, etc) by their name, then: . Use the method GetGlobalBinNumber() to locate a bin in a distribution, then: . Use the TH1::Fill() method and the bin number to fill the appropriate bin in one of the histograms booked above. . Unfolding: Specify the response matrix and the binning schemes when constructing a TUnfoldDensity object. Tell TUnfoldDensity about the data, bakcground, systematic error histograms using the corresponding methods of class TUnfoldDensity. Then run the unfolding. Use the GetXXX() methods to retreive the unfolding results into properly binned multidimensional histograms. ; Definition at line 58 of file TUnfoldBinning.h. Public Types; enum  { MAXDIM =32; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TUnfoldBinning (const char *name=nullptr, Int_t nBins=0, const char *binNames=nullptr);  create a new node without axis ;  ;  TUnfoldBinning (const TAxis &axis, Int_t includeUnderflow, Int_t includeOverflow);  create a new node containing a distribution with one axis ;  ;  ~TUnfoldBinning (void) override;  ; Bool_t AddAxis (const char *name, Int_t nBins, const Double_t *binBorders, Bool_t hasUnderflow, Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldBinning.html:3447,inherit,inherited,3447,doc/master/classTUnfoldBinning.html,https://root.cern,https://root.cern/doc/master/classTUnfoldBinning.html,1,['inherit'],['inherited']
Modifiability,"tokens) {; 575 components.addOwned(std::unique_ptr<RooAbsReal>{createIntObj(iset,nset,cfg, token.c_str())});; 576 }; 577 ; 578 const std::string title = std::string(""Integral of "") + GetTitle();; 579 const std::string fullName = std::string(GetName()) + integralNameSuffix(iset,nset,rangeName).Data();; 580 ; 581 auto out = std::make_unique<RooAddition>(fullName.c_str(), title.c_str(), components);; 582 out->addOwnedComponents(std::move(components));; 583 return RooFit::makeOwningPtr<RooAbsReal>(std::move(out));; 584}; 585 ; 586 ; 587 ; 588////////////////////////////////////////////////////////////////////////////////; 589/// Internal utility function for createIntegral() that creates the actual integral object.; 590RooFit::OwningPtr<RooAbsReal> RooAbsReal::createIntObj(const RooArgSet& iset2, const RooArgSet* nset2,; 591 const RooNumIntConfig* cfg, const char* rangeName) const; 592{; 593 // Make internal use copies of iset and nset; 594 RooArgSet iset(iset2) ;; 595 const RooArgSet* nset = nset2 ;; 596 ; 597 ; 598 // Initialize local variables perparing for recursive loop; 599 bool error = false ;; 600 const RooAbsReal* integrand = this ;; 601 std::unique_ptr<RooAbsReal> integral;; 602 ; 603 // Handle trivial case of no integration here explicitly; 604 if (iset.empty()) {; 605 ; 606 const std::string title = std::string(""Integral of "") + GetTitle();; 607 const std::string name = std::string(GetName()) + integralNameSuffix(iset,nset,rangeName).Data();; 608 ; 609 auto out = std::make_unique<RooRealIntegral>(name.c_str(), title.c_str(), *this, iset, nset, cfg, rangeName);; 610 return RooFit::makeOwningPtr<RooAbsReal>(std::move(out));; 611 }; 612 ; 613 // Process integration over remaining integration variables; 614 while(!iset.empty()) {; 615 ; 616 ; 617 // Find largest set of observables that can be integrated in one go; 618 RooArgSet innerSet ;; 619 findInnerMostIntegration(iset,innerSet,rangeName) ;; 620 ; 621 // If largest set of observables that can be integrated is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:22563,variab,variables,22563,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"tomatically included; model.fitTo(data, PrintLevel=-1); ; # Plot data and PDF overlaid, expected number of events for pdf projection normalization; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf202__extendedmlfit_8py.html:2950,extend,extended,2950,doc/master/rf202__extendedmlfit_8py.html,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html,1,['extend'],['extended']
Modifiability,"ton group to be exclusive if enable is kTRUE, or to be non-exclusive if enable is kFALSE. ;  ; virtual void SetLayoutHints (TGLayoutHints *l, TGButton *button=nullptr);  Set layout hints for the specified button or if button=0 for all buttons. ;  ; virtual void SetRadioButtonExclusive (Bool_t flag=kTRUE);  If enable is kTRUE, this button group will treat radio buttons as mutually exclusive, and other buttons according to IsExclusive(). ;  ; virtual void SetState (Bool_t state=kTRUE);  Sets the state of all the buttons in the group to enable or disable. ;  ; void SetTitle (const char *title) override;  Set or change title. ;  ; void SetTitle (TGString *title) override;  Set or change title. ;  ; virtual void Show ();  Show group of buttons. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGGroupFrame;  TGGroupFrame (const TGWindow *p, TGString *title, UInt_t options=kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Create a group frame. ;  ;  TGGroupFrame (const TGWindow *p=nullptr, const char *title=nullptr, UInt_t options=kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Create a group frame. ;  ;  ~TGGroupFrame () override;  Delete a group frame. ;  ; void DrawBorder () override;  Draw border of around the group frame. ;  ; TGDimension GetDefaultSize () const override;  Returns default size. ;  ; FontStruct_t GetFontStruct () const;  ; GContext_t GetNormGC () const;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Int_t GetTitlePos () const;  ; Bool_t HasOwnFont () const;  Returns kTRUE if text attributes are unique, returns kFALSE if text attributes are shared (global). ;  ; TClass * IsA () const override;  ; virtual void Rename (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButtonGroup.html:6203,inherit,inherited,6203,doc/master/classTGButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html,1,['inherit'],['inherited']
Modifiability,"ton*fRedoButtonButton which can repeat last node change; TListfRedoListList with nodes pointers which were top nodes; TGRadioButton*fScaleByMembersButtonSets sorting method to members; TGRadioButton*fScaleBySizeButtonSets sorting method to size; TStructNode*fSelectedObjectPointer to actual selected object on scene; TGCheckButton*fShowLinksCheckButtonEnable/Disable lines between nodes; TGLabel*fSizeLabelLabel with size of node; TGToolTip*fToolTipToolTip is showed when user mouse is over the object; TGeoVolume*fTopVolumeMain volume containing all others volumes; TGLabel*fTotalSizeLabelLabel with size of node and daughters nodes; TGTextButton*fUndoButtonButton which can restore last top node; TListfUndoListList with nodes pointers which were top nodes; TListfVisibleObjectsList with pointer to nodes which are visible; TExMapfVolumesMap with pointers to Volumes associated with nodes; static UInt_tfgCounterVolume counter; static TGeoMedium*fgMediumMaterial and medium. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGMainFrame. ←; TStructViewerGUI. Function documentation; TStructViewerGUI(TStructViewer* parent, TStructNode* nodePtr, TList* colors, const TGWindow* p = __null, UInt_t w = 800, UInt_t h = 600); Constructs window with ""w"" as width, ""h"" as height and given parent ""p"". Argument ""parent"" is a pointer to TStructViewer which contains this GUI.; This constructor build window with all controls, build map with colors, init OpenGL Viewer and create TGeoVolumes. ~TStructViewerGUI(); Destructor. void AutoRefreshButtonSlot(Bool_t on); Activated when user chage condition. void BoxHeightValueSetSlot(Long_t h); Emmited when user changes height of boxes. void CalculatePosistion(TStructNode* parent); Recursive method to calculating nodes posistion in 3D space. void CheckMaxObjects(TStructNode* parent); Check if all of nodes can be displayed on scene. Hides redendant nodes. void CloseWindow(); Delete window. voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStructViewerGUI.html:25886,Inherit,Inheritance,25886,root/html602/TStructViewerGUI.html,https://root.cern,https://root.cern/root/html602/TStructViewerGUI.html,2,['Inherit'],['Inheritance']
Modifiability,"ton; TQueryDescription*fDescquery description; TRootEmbeddedCanvas*fECanvasnode statistics embeded canvas; Long64_tfEntriesnumber of events/entries to process; TGCompositeFrame*fFA; TGCompositeFrame*fFB; TGCompositeFrame*fFCthree tabs element; TEditQueryFrame*fFDfourth tab element (edit query frame); Int_tfFilesnumber of files processed; Long64_tfFirstfirst event/entry to process; TGTextView*fInfoTextViewsummary on current query; TGLabel*fLabInfosinfos on current process; TGLabel*fLabStatusactual process status; Bool_tfModifiedkTRUE if settings have changed; Long64_tfPrevProcessedused for progress bar; Long64_tfPrevTotalused for progress bar; TGLabel*fRaterate of process in events/sec; TCanvas*fStatsCanvasnode statistics canvas; TSessionQueryFrame::EQueryStatusfStatusstatus of actual query; TGTab*fTabmain tab frame; TGLabel*fTotaltotal progress info; TSessionViewer*fViewerpointer on main viewer; TGHProgressBar*frmProgcurrent process progress bar. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSessionQueryFrame(TGWindow* parent, Int_t w, Int_t h); Constructor. ~TSessionQueryFrame(); Destructor. void Build(TSessionViewer* gui); Build query information frame. void Modified(Bool_t mod = kTRUE); Notify changes in query editor settings. void Feedback(TList* objs); Feedback function connected to Feedback signal.; Used to update feedback histograms. void UpdateHistos(TList* objs); Update feedback histograms. void Progress(Long64_t total, Long64_t processed); Update progress bar and status labels. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses); New version of Progress (just forward to the old version; for the time being). void ProgressLocal(Long64_t total, Long64_t processed); Update progress bar and status labels. void IndicateStop(Bool_t aborted); Indicate that Cancel or Stop was clicked. void ResetProgr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSessionQueryFrame.html:20922,Inherit,Inheritance,20922,root/html534/TSessionQueryFrame.html,https://root.cern,https://root.cern/root/html534/TSessionQueryFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ton; TQueryDescription*fDescquery description; TRootEmbeddedCanvas*fECanvasnode statistics embeded canvas; Long64_tfEntriesnumber of events/entries to process; TGCompositeFrame*fFA; TGCompositeFrame*fFB; TGCompositeFrame*fFCthree tabs element; TEditQueryFrame*fFDfourth tab element (edit query frame); Int_tfFilesnumber of files processed; Long64_tfFirstfirst event/entry to process; TGTextView*fInfoTextViewsummary on current query; TGLabel*fLabInfosinfos on current process; TGLabel*fLabStatusactual process status; Bool_tfModifiedkTRUE if settings have changed; Long64_tfPrevProcessedused for progress bar; Long64_tfPrevTotalused for progress bar; TGLabel*fRaterate of process in events/sec; TCanvas*fStatsCanvasnode statistics canvas; TSessionQueryFrame::EQueryStatusfStatusstatus of actual query; TGTab*fTabmain tab frame; TGLabel*fTotaltotal progress info; TSessionViewer*fViewerpointer on main viewer; TGHProgressBar*frmProgcurrent process progress bar. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSessionQueryFrame(TGWindow* parent, Int_t w, Int_t h); Constructor. ~TSessionQueryFrame(); Destructor. void Build(TSessionViewer* gui); Build query informations frame. void Modified(Bool_t mod = kTRUE); Notify changes in query editor settings. void Feedback(TList* objs); Feedback function connected to Feedback signal.; Used to update feedback histograms. void UpdateHistos(TList* objs); Update feedback histograms. void Progress(Long64_t total, Long64_t processed); Update progress bar and status labels. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses); New version of Progress (just forward to the old version; for the time being). void ProgressLocal(Long64_t total, Long64_t processed); Update progress bar and status labels. void IndicateStop(Bool_t aborted); Indicate that Cancel or Stop was clicked. void ResetProg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSessionQueryFrame.html:20903,Inherit,Inheritance,20903,root/html532/TSessionQueryFrame.html,https://root.cern,https://root.cern/root/html532/TSessionQueryFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tonName/Class button.; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGedNameFrame(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame|kHorizontalFrame); Constructor. ~TEveGedNameFrame(); Destructor. void SetModel(TObject* obj); Set model object. void SpawnEditorClone(); Create a new floating editor with current object. TEveGedEditor& operator=(const TEveGedNameFrame& ). TEveGedNameFrame(const TEveGedNameFrame& ). » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveGedNameFrame.html:19870,Inherit,Inheritance,19870,root/html534/TEveGedNameFrame.html,https://root.cern,https://root.cern/root/html534/TEveGedNameFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"too small or a; 9905 * ""range"" request was made, on the fly compression is not possible. */; 9906 int allow_on_the_fly_compression = 1;; 9907#endif; 9908 ; 9909 if ((conn == NULL) || (conn->dom_ctx == NULL) || (filep == NULL)) {; 9910 return;; 9911 }; 9912 ; 9913 is_head_request = !strcmp(conn->request_info.request_method, ""HEAD"");; 9914 ; 9915 if (mime_type == NULL) {; 9916 get_mime_type(conn, path, &mime_vec);; 9917 } else {; 9918 mime_vec.ptr = mime_type;; 9919 mime_vec.len = strlen(mime_type);; 9920 }; 9921 if (filep->stat.size > INT64_MAX) {; 9922 mg_send_http_error(conn,; 9923 500,; 9924 ""Error: File size is too large to send\n%"" INT64_FMT,; 9925 filep->stat.size);; 9926 return;; 9927 }; 9928 cl = (int64_t)filep->stat.size;; 9929 conn->status_code = 200;; 9930 range[0] = '\0';; 9931 ; 9932#if defined(USE_ZLIB); 9933 /* if this file is in fact a pre-gzipped file, rewrite its filename; 9934 * it's important to rewrite the filename after resolving; 9935 * the mime type from it, to preserve the actual file's type */; 9936 if (!conn->accept_gzip) {; 9937 allow_on_the_fly_compression = 0;; 9938 }; 9939#endif; 9940 ; 9941 /* Check if there is a range header */; 9942 range_hdr = mg_get_header(conn, ""Range"");; 9943 ; 9944 /* For gzipped files, add *.gz */; 9945 if (filep->stat.is_gzipped) {; 9946 mg_snprintf(conn, &truncated, gz_path, sizeof(gz_path), ""%s.gz"", path);; 9947 ; 9948 if (truncated) {; 9949 mg_send_http_error(conn,; 9950 500,; 9951 ""Error: Path of zipped file too long (%s)"",; 9952 path);; 9953 return;; 9954 }; 9955 ; 9956 path = gz_path;; 9957 encoding = ""gzip"";; 9958 ; 9959#if defined(USE_ZLIB); 9960 /* File is already compressed. No ""on the fly"" compression. */; 9961 allow_on_the_fly_compression = 0;; 9962#endif; 9963 } else if ((conn->accept_gzip) && (range_hdr == NULL); 9964 && (filep->stat.size >= MG_FILE_COMPRESSION_SIZE_LIMIT)) {; 9965 struct mg_file_stat file_stat;; 9966 ; 9967 mg_snprintf(conn, &truncated, gz_path, sizeof(gz_path), ""%s.gz"", path);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:284594,rewrite,rewrite,284594,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['rewrite'],['rewrite']
Modifiability,"too small or a; 9906 * ""range"" request was made, on the fly compression is not possible. */; 9907 int allow_on_the_fly_compression = 1;; 9908#endif; 9909 ; 9910 if ((conn == NULL) || (conn->dom_ctx == NULL) || (filep == NULL)) {; 9911 return;; 9912 }; 9913 ; 9914 is_head_request = !strcmp(conn->request_info.request_method, ""HEAD"");; 9915 ; 9916 if (mime_type == NULL) {; 9917 get_mime_type(conn, path, &mime_vec);; 9918 } else {; 9919 mime_vec.ptr = mime_type;; 9920 mime_vec.len = strlen(mime_type);; 9921 }; 9922 if (filep->stat.size > INT64_MAX) {; 9923 mg_send_http_error(conn,; 9924 500,; 9925 ""Error: File size is too large to send\n%"" INT64_FMT,; 9926 filep->stat.size);; 9927 return;; 9928 }; 9929 cl = (int64_t)filep->stat.size;; 9930 conn->status_code = 200;; 9931 range[0] = '\0';; 9932 ; 9933#if defined(USE_ZLIB); 9934 /* if this file is in fact a pre-gzipped file, rewrite its filename; 9935 * it's important to rewrite the filename after resolving; 9936 * the mime type from it, to preserve the actual file's type */; 9937 if (!conn->accept_gzip) {; 9938 allow_on_the_fly_compression = 0;; 9939 }; 9940#endif; 9941 ; 9942 /* Check if there is a range header */; 9943 range_hdr = mg_get_header(conn, ""Range"");; 9944 ; 9945 /* For gzipped files, add *.gz */; 9946 if (filep->stat.is_gzipped) {; 9947 mg_snprintf(conn, &truncated, gz_path, sizeof(gz_path), ""%s.gz"", path);; 9948 ; 9949 if (truncated) {; 9950 mg_send_http_error(conn,; 9951 500,; 9952 ""Error: Path of zipped file too long (%s)"",; 9953 path);; 9954 return;; 9955 }; 9956 ; 9957 path = gz_path;; 9958 encoding = ""gzip"";; 9959 ; 9960#if defined(USE_ZLIB); 9961 /* File is already compressed. No ""on the fly"" compression. */; 9962 allow_on_the_fly_compression = 0;; 9963#endif; 9964 } else if ((conn->accept_gzip) && (range_hdr == NULL); 9965 && (filep->stat.size >= MG_FILE_COMPRESSION_SIZE_LIMIT)) {; 9966 struct mg_file_stat file_stat;; 9967 ; 9968 mg_snprintf(conn, &truncated, gz_path, sizeof(gz_path), ""%s.gz"", path);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:284626,rewrite,rewrite,284626,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['rewrite'],['rewrite']
Modifiability,"tor (const TEveTrackPropagator &);  ; void DistributeOffset (const TEveVectorD &off, Int_t first_point, Int_t np, TEveVectorD &p);  Distribute offset between first and last point index and rotate momentum. ;  ; TEveTrackPropagator & operator= (const TEveTrackPropagator &);  . Friends; class TEveTrackPropagatorSubEditor;  . Additional Inherited Members;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Types inherited from TEveRefBackPtr; typedef RefMap_t::iterator RefMap_i;  ; typedef std::map< TEveElement *, Int_t > RefMap_t;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveTrackPropagator.h>. Inheritance diagram for TEveTrackPropagator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EProjTrackBreaking_e. enum TEveTrackPropagator::EProjTrackBreaking_e. EnumeratorkPTB_Break ; kPTB_UseFirstPointPos ; kPTB_UseLastPointPos . Definition at line 129 of file TEveTrackPropagator.h. ◆ EStepper_e. enum TEveTrackPropagator::EStepper_e. EnumeratorkHelix ; kRungeKutta . Definition at line 127 of file TEveTrackPropagator.h. Constructor & Destructor Documentation. ◆ TEveTrackPropagator() [1/2]. TEveTrackPropagator::TEveTrackPropagator ; (; const TEveTrackPropagator & ; ). private . ◆ TEveTrackPropagator() [2/2]. TEveTrackPropagator::TEveTrackPropag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackPropagator.html:42999,inherit,inherited,42999,doc/master/classTEveTrackPropagator.html,https://root.cern,https://root.cern/doc/master/classTEveTrackPropagator.html,3,['inherit'],['inherited']
Modifiability,"tor = 1, const RooArgSet* normVars = 0, Double_t prec = 0.001, Double_t resolution = 0.001, Bool_t shiftToZero = kFALSE, RooCurve::WingMode wmode = Extended, Int_t nEvalError = -1, Int_t doEEVal = kFALSE, Double_t eeVal = 0, Bool_t showProgress = kFALSE); Create a 1-dim curve of the value of the specified real-valued expression; as a function of x. Use the optional precision parameter to control; how precisely the smooth curve is rasterized. Use the optional argument set; to specify how the expression should be normalized. Use the optional scale; factor to rescale the expression after normalization.; If shiftToZero is set, the entire curve is shift down to make the lowest; point in of the curve go through zero. RooCurve(const char* name, const char* title, const RooAbsFunc& func, Double_t xlo, Double_t xhi, UInt_t minPoints, Double_t prec = 0.001, Double_t resolution = 0.001, Bool_t shiftToZero = kFALSE, RooCurve::WingMode wmode = Extended, Int_t nEvalError = -1, Int_t doEEVal = kFALSE, Double_t eeVal = 0); Create a 1-dim curve of the value of the specified real-valued; expression as a function of x. Use the optional precision; parameter to control how precisely the smooth curve is; rasterized. If shiftToZero is set, the entire curve is shift; down to make the lowest point in of the curve go through zero. RooCurve(const char* name, const char* title, const RooCurve& c1, const RooCurve& c2, Double_t scale1 = 1., Double_t scale2 = 1.); Constructor of curve as sum of two other curves. Csum = scale1*c1 + scale2*c2. ~RooCurve(); Destructor. void initialize(); Perform initialization that is common to all curves. void shiftCurveToZero(Double_t prevYMax); Find lowest point in curve and move all points in curve so that; lowest point will go exactly through zero. void addPoints(const RooAbsFunc& func, Double_t xlo, Double_t xhi, Int_t minPoints, Double_t prec, Double_t resolution, RooCurve::WingMode wmode, Int_t numee = 0, Bool_t doEEVal = kFALSE, Double_t eeVal = 0., list<Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCurve.html:20264,Extend,Extended,20264,root/html602/RooCurve.html,https://root.cern,https://root.cern/root/html602/RooCurve.html,2,['Extend'],['Extended']
Modifiability,tor Editor for TEveTrackPropagator class.; TEveTrackPropagatorSubEditor Sub-editor for TEveTrackPropagator class.; TEveTrans Column-major 4x4 transforamtion matrix for homogeneous coordinates.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independant format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:68966,inherit,inheritance,68966,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,3,['inherit'],['inheritance']
Modifiability,tor Editor for TEveTrackPropagator class.; TEveTrackPropagatorSubEditor Sub-editor for TEveTrackPropagator class.; TEveTrans Column-major 4x4 transforamtion matrix for homogeneous coordinates.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:72876,inherit,inheritance,72876,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['inherit'],['inheritance']
Modifiability,"tor below where zmin and zmax are specified.; H(I,J) is printed as the cell contents. The errors computed are s(I,J) if CHOPT='S' (spread option), or e(I,J) if CHOPT=' ' (error on mean).; See TProfile2D::BuildOptions for explanation of parameters; see other constructors below with all possible combinations of fix and variable bin size like in TH2D. ; Definition at line 125 of file TProfile2D.cxx. ◆ TProfile2D() [4/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup, . Option_t * ; option = """" . ). Create a 2-D Profile with variable bins in X and fix bins in Y. ; Definition at line 135 of file TProfile2D.cxx. ◆ TProfile2D() [5/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; nbinsy, . const Double_t * ; ybins, . Option_t * ; option = """" . ). Create a 2-D Profile with fix bins in X and variable bins in Y. ; Definition at line 144 of file TProfile2D.cxx. ◆ TProfile2D() [6/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins, . Option_t * ; option = """" . ). Create a 2-D Profile with variable bins in X and variable bins in Y. ; Definition at line 153 of file TProfile2D.cxx. ◆ TProfile2D() [7/7]. TProfile2D::TProfile2D ; (; const TProfile2D & ; profile). Copy constructor. ; Definition at line 206 of file TProfile2D.cxx. ◆ ~TProfile2D(). TProfile2D::~TProfile2D ; (; ). override . Default destructor for Profile2D histograms. ; Definition at line 98 of file TProfile2D.cxx. Member Function Documentation. ◆ Add() [1/3]. Bool_t TProfile2D::Add ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1 . ). overridevirtual . Replace contents of this profile2D by the addition of h1 and h2. ; this = c1*h1 + c2*h2 ; Reimplemented ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:69987,variab,variable,69987,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"tor constructor without specifying a data set; the user need to specify the models in the S+B case and B-only case,; the list of observables of the model(s) (for MC-generation), the list of parameters; that are marginalised and the prior distribution of those parameters. HybridCalculator( RooAbsData & data, RooAbsPdf& sbModel, RooAbsPdf& bModel, const RooArgSet* nuisance_parameters, RooAbsPdf* priorPdf,				 bool GenerateBinned, int testStatistics, int numToys); HybridCalculator constructor for performing hypotesis test; the user need to specify the data set, the models in the S+B case and B-only case.; In case of treatment of nuisance parameter, the user need to specify the; the list of parameters that are marginalised and the prior distribution of those parameters. HybridCalculator(RooAbsData& data, const RooStats::ModelConfig& sb_model, const RooStats::ModelConfig& b_model, bool GenerateBinned = false, int testStatistics = 1, int ntoys = 1000); Constructor with a ModelConfig object representing the signal + background model and; another model config representig the background only model; a Prior pdf for the nuiscane parameter of the signal and background can be specified in; the s+b model or the b model. If it is specified in the s+b model, the one of the s+b model will be used. ~HybridCalculator(); HybridCalculator destructor. void SetNullModel(const RooStats::ModelConfig& ); Set the model describing the null hypothesis. void SetAlternateModel(const RooStats::ModelConfig& ); Set the model describing the alternate hypothesis. void SetTestStatistic(int index); set the desired test statistics:; index=1 : likelihood ratio: 2 * log( L_sb / L_b ) (DEFAULT); index=2 : number of generated events; index=3 : profiled likelihood ratio; if the index is different to any of those values, the default is used. HybridResult* Calculate(TH1& data, unsigned int nToys, bool usePriors); first compute the test statistics for data and then prepare and run the toy-MC experiments. HybridRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HybridCalculator.html:11686,config,config,11686,root/html526/RooStats__HybridCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__HybridCalculator.html,1,['config'],['config']
Modifiability,"tor for an unlimited variable. ;  ;  MinimTransformVariable (const MinimTransformVariable &rhs);  ;  MinimTransformVariable (double lower, double upper, SinVariableTransformation *trafo);  ;  MinimTransformVariable (double lower, SqrtLowVariableTransformation *trafo);  ;  MinimTransformVariable (double upper, SqrtUpVariableTransformation *trafo);  ;  MinimTransformVariable (double value);  ; double DerivativeIntToExt (double x) const;  ; double ExternalToInternal (double x) const;  ; double FixValue () const;  ; bool HasLowerBound () const;  ; bool HasUpperBound () const;  ; double InternalToExternal (double x) const;  ; bool IsFixed () const;  ; bool IsLimited () const;  ; double LowerBound () const;  ; MinimTransformVariable & operator= (const MinimTransformVariable &rhs);  ; double UpperBound () const;  . Private Attributes; bool fBounds;  has double bound ;  ; bool fFix;  fix variable ;  ; bool fLowBound;  has lower bound ;  ; double fLower;  lower parameter limit ;  ; std::unique_ptr< MinimizerVariableTransformation > fTransform;  pointer to the minimizer transformation ;  ; bool fUpBound;  has upper bound param ;  ; double fUpper;  upper parameter limit ;  . #include <Math/MinimTransformVariable.h>; Constructor & Destructor Documentation. ◆ MinimTransformVariable() [1/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; ). inline . Default Constructor for an unlimited variable. ; Definition at line 55 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [2/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; double ; value). inline . Definition at line 61 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [3/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; double ; lower, . double ; upper, . SinVariableTransformation * ; trafo . ). inline . Definition at line 67 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [4/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html:1691,variab,variable,1691,doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,1,['variab'],['variable']
Modifiability,"tor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void CopyPoly (TSplinePoly5 const &other);  Utility called by the copy constructors and = operator. ;  . Private Attributes; Double_t fB = 0.;  First order expansion coefficient : fB*1! is the first derivative at x. ;  ; Double_t fC = 0.;  Second order expansion coefficient : fC*2! is the second derivative at x. ;  ; Double_t fD = 0.;  Third order expansion coefficient : fD*3! is the third derivative at x. ;  ; Double_t fE = 0.;  Fourth order expansion coefficient : fE*4! is the fourth derivative at x. ;  ; Double_t fF = 0.;  Fifth order expansion coefficient : fF*5! is the fifth derivative at x. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSplinePoly; Double_t fX = 0.;  Abscissa. ;  ; Double_t fY = 0.;  Constant term. ;  . #include <TSpline",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly5.html:10579,inherit,inherited,10579,doc/master/classTSplinePoly5.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly5.html,1,['inherit'],['inherited']
Modifiability,"tor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Private Attributes; static TVirtualGraphPainter * fgPainter = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualGraphPainter.h>. Inheritance diagram for TVirtualGraphPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualGraphPainter(). TVirtualGraphPainter::TVirtualGraphPainter ; (; ). inline . Definition at line 34 of file TVirtualGraphPainter.h. ◆ ~TVirtualGraphPainter(). TVirtualGraphPainter::~TVirtualGraphPainter ; (; ). inlineoverride . Definition at line 35 of file TVirtualGraphPainter.h. Member Function Documentation. ◆ Class(). static TClass * TVirtualGraphPainter::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TVirtualGraphPainter::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TVirtualGraphPainter::Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGraphPainter.html:10823,inherit,inherited,10823,doc/master/classTVirtualGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGraphPainter.html,2,['inherit'],['inherited']
Modifiability,"tor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPie * fPie {nullptr};  The TPie object that contain this slice. ;  ; Double_t fRadiusOffset;  offset from the center of the pie ;  ; Double_t fValue;  value value of this slice ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Private Attributes; Bool_t fIsActive;  ! True if is the slice under the mouse pointer ;  . Friends; class TPie;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Prot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPieSlice.html:14187,inherit,inherited,14187,doc/master/classTPieSlice.html,https://root.cern,https://root.cern/doc/master/classTPieSlice.html,1,['inherit'],['inherited']
Modifiability,"tor with a string based cut expression is recommended.; For most uses the RooAbsData::reduce() wrapper function, which uses this constructor, is the most convenient way to create a subset of an existing data ; Definition at line 594 of file RooDataSet.cxx. ◆ RooDataSet() [5/5]. RooDataSet::RooDataSet ; (; RooDataSet const & ; other, . const char * ; newname = nullptr . ). Copy constructor. ; Definition at line 601 of file RooDataSet.cxx. ◆ ~RooDataSet(). RooDataSet::~RooDataSet ; (; ). override . Destructor. ; Definition at line 725 of file RooDataSet.cxx. Member Function Documentation. ◆ add() [1/3]. void RooDataSet::add ; (; const RooArgSet & ; data, . double ; wgt, . double ; wgtError . ). Add one ore more rows of data. ; Add a data point, with its coordinates specified in the 'data' argset, to the data set.; Any variables present in 'data' but not in the dataset will be silently ignored. Parameters. [in]dataData point. ; [in]wgtEvent weight. Defaults to 1. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]wgtErrorOptional weight error. . NoteThis requires including the weight variable in the set of StoreError variables when constructing the dataset. ; Definition at line 935 of file RooDataSet.cxx. ◆ add() [2/3]. void RooDataSet::add ; (; const RooArgSet & ; indata, . double ; inweight, . double ; weightErrorLo, . double ; weightErrorHi . ). virtual . Add a data point, with its coordinates specified in the 'data' argset, to the data set. ; Any variables present in 'data' but not in the dataset will be silently ignored. Parameters. [in]indataData point. ; [in]inweightEvent weight. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]weightErrorLoAsymmetric weight error. ; [in]weightErrorHiAsymmetric weight error. . NoteThis requires including t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:42681,variab,variable,42681,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variable']
Modifiability,"tor& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidTransform(const TGLMatrix& matrix); voidTranslate(const TGLVector3& offset); const TGLVertex3&Vertex(UInt_t index) const; const TGLVertex3*Vertices() const; Double_tVolume() const; Double_tXMax() const; Double_tXMin() const; Double_tYMax() const; Double_tYMin() const; Double_tZMax() const; Double_tZMin() const. private:. Double_tMax(UInt_t index) const; Double_tMin(UInt_t index) const; voidUpdateCache(); Bool_tValidIndex(UInt_t index) const. Data Members; public:. enum EFace { kFaceLowX; kFaceHighX; kFaceLowY; kFaceHighY; kFaceLowZ; kFaceHighZ; kFaceCount; };. private:. TGLVector3fAxes[3]! box axes in global frame - cached for speed; TGLVector3fAxesNorm[3]! normalised box axes in global frame - cached for speed; Double_tfDiagonal! max box diagonal - cached for speed; TGLVertex3fVertex[8]! the 8 bounding box vertices; Double_tfVolume! box volume - cached for speed. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLBoundingBox(); Construct an empty bounding box. TGLBoundingBox(const TGLVertex3 vertex[8]); Construct a bounding box from provided 8 vertices. TGLBoundingBox(const Double_t vertex[8][3]); Construct a bounding box from provided 8 vertices. TGLBoundingBox(const TGLVertex3& lowVertex, const TGLVertex3& highVertex); Construct an global axis ALIGNED bounding box from provided low/high vertex pair. TGLBoundingBox(const TGLBoundingBox& other); Construct a bounding box as copy of existing one. ~TGLBoundingBox(); Destroy bounding box. void UpdateCache(); Update the internally cached volume and axes vectors - these are retained; for efficiency - many more reads than modifications. void Set(const TGLVertex3 vertex[8]); Set a bounding box from provided 8 vertices. void Set(const Double_t vertex[8][3]); Set a bounding box from provided 8 vertices. void Set(const TGLBoundingBox& other); Set a bounding box from vertices of other. void SetEmpty(); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLBoundingBox.html:3040,Inherit,Inheritance,3040,root/html532/TGLBoundingBox.html,https://root.cern,https://root.cern/root/html532/TGLBoundingBox.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor&); voidSaveBeltToFile(bool flag = true); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetData(RooAbsData& data); voidSetLeftSideTailFraction(Double_t leftSideFraction = 0.); virtual voidSetModel(const RooStats::ModelConfig& model); virtual voidSetNuisanceParameters(const RooArgSet&); voidSetParameterPointsToTest(RooAbsData& pointsToTest); virtual voidSetParameters(const RooArgSet&); virtual voidSetPdf(RooAbsPdf&); virtual voidSetTestSize(Double_t size); voidSetTestStatSampler(RooStats::TestStatSampler& sampler); virtual voidShowMembers(TMemberInspector&); virtual Double_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidUseAdaptiveSampling(bool flag = true). Data Members; private:. boolfAdaptiveSamplingcontrols use of adaptive sampling algorithm; Double_tfAdditionalNToysFactorgive user ability to ask for more toys; RooStats::ConfidenceBelt*fConfBelt; boolfCreateBeltcontrols use if ConfidenceBelt should be saved to a TFile; RooAbsData&fDatadata set ; Double_tfLeftSideFraction; RooStats::ModelConfig&fModel; RooAbsData*fPointsToTest; boolfSaveBeltToFilecontrols use if ConfidenceBelt should be saved to a TFile; Double_tfSizesize of the test (eg. specified rate of Type I error); RooStats::TestStatSampler*fTestStatSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NeymanConstruction(RooAbsData& data, RooStats::ModelConfig& model); default constructor; fWS = new RooWorkspace();; fOwnsWorkspace = true;; fDataName = """";; fPdfName = """";. ~NeymanConstruction(); default constructor; if(fOwnsWorkspace && fWS) delete fWS;; if(fConfBelt) delete fConfBelt;. PointSetInterval* GetInterval() const; Main interface to get a RooStats::ConfInterval.; It constructs a RooStats::SetInterval. NeymanConstruction(RooAbsData& data, RooStats::ModelConfig& model); NeymanConstruction();. void SetTestStatSampler(RooStats::TestStatSampler& sampler); in addition to interface we a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__NeymanConstruction.html:3859,adapt,adaptive,3859,root/html534/RooStats__NeymanConstruction.html,https://root.cern,https://root.cern/root/html534/RooStats__NeymanConstruction.html,2,['adapt'],['adaptive']
Modifiability,tor()(Int_t i) const; float&operator()(Int_t i); voidoperator*=(float val); voidoperator*=(const TMatrixTSparseRow_const<float>& r); voidoperator+=(float val); voidoperator+=(const TMatrixTSparseRow_const<float>& r); voidoperator=(float val); voidoperator=(const TMatrixTSparseRow_const<float>& r); TMatrixTSparseRow<float>&operator=(const TMatrixTSparseRow<float>& r); voidoperator=(const TVectorT<float>& vec); floatoperator[](Int_t i) const; float&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. const Int_t*TMatrixTSparseRow_const<float>::fColPtrcolumn index pointer; const float*TMatrixTSparseRow_const<float>::fDataPtrdata pointer; TMatrixTBase<float>*TMatrixTSparseRow_const<float>::fMatrixthe matrix I am a row of; Int_tTMatrixTSparseRow_const<float>::fNindexindex range; Int_tTMatrixTSparseRow_const<float>::fRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). const Element * GetDataPtr() const; { return fDataPtr; }. » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions r,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTSparseRow_float_.html:2445,Inherit,Inheritance,2445,root/html532/TMatrixTSparseRow_float_.html,https://root.cern,https://root.cern/root/html532/TMatrixTSparseRow_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor* (const TLorentzVector &) const;  ; TLorentzRotation & operator*= (const TLorentzRotation &);  ; TLorentzRotation & operator= (const TLorentzRotation &);  ; TLorentzRotation & operator= (const TRotation &);  ; Bool_t operator== (const TLorentzRotation &) const;  ; TLorentzRotationRow operator[] (int) const;  ; TLorentzRotation & Rotate (Double_t, const TVector3 &);  ; TLorentzRotation & Rotate (Double_t, const TVector3 *);  ; TLorentzRotation & RotateX (Double_t);  ; TLorentzRotation & RotateY (Double_t);  ; TLorentzRotation & RotateZ (Double_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TLorentzRotation & Transform (const TLorentzRotation &);  ; TLorentzRotation & Transform (const TRotation &);  ; Double_t TT () const;  ; Double_t TX () const;  ; Double_t TY () const;  ; Double_t TZ () const;  ; TLorentzVector VectorMultiplication (const TLorentzVector &) const;  ; Double_t XT () const;  ; Double_t XX () const;  ; Double_t XY () const;  ; Double_t XZ () const;  ; Double_t YT () const;  ; Double_t YX () const;  ; Double_t YY () const;  ; Double_t YZ () const;  ; Double_t ZT () const;  ; Double_t ZX () const;  ; Double_t ZY () const;  ; Double_t ZZ () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLorentzRotation.html:6399,inherit,inherited,6399,doc/master/classTLorentzRotation.html,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html,1,['inherit'],['inherited']
Modifiability,"tor*=(double val); voidoperator*=(const TMatrixTSub_const<double>& s); voidoperator*=(const TMatrixT<double>& m); voidoperator*=(const TMatrixTSym<double>& m); voidoperator+=(double val); voidoperator+=(const TMatrixTSub_const<double>& s); voidoperator+=(const TMatrixTBase<double>& m); voidoperator=(double val); voidoperator=(const TMatrixTSub_const<double>& s); TMatrixTSub<double>&operator=(const TMatrixTSub<double>& s); voidoperator=(const TMatrixTBase<double>& m); voidRank1Update(const TVectorT<double>& vec, double alpha = 1.0); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; public:. enum { kWorkMax; };. protected:. Int_tTMatrixTSub_const<double>::fColOff; TMatrixTBase<double>*TMatrixTSub_const<double>::fMatrixthe matrix I am a submatrix of; Int_tTMatrixTSub_const<double>::fNcolsSub; Int_tTMatrixTSub_const<double>::fNrowsSub; Int_tTMatrixTSub_const<double>::fRowOff. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element & operator()(Int_t i). void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). void operator+=(Element val). void operator*=(Element val). void operator*=(const TMatrixTColumn_const<Element> &c). void Rank1Update(const TVectorT<double>& vec, double alpha = 1.0). » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTSub_double_.html:2585,Inherit,Inheritance,2585,root/html532/TMatrixTSub_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTSub_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor+=(float val); voidoperator+=(const TMatrixTRow_const<float>& r); voidoperator=(float val); voidoperator=(const TMatrixTRow_const<float>& r); TMatrixTRow<float>&operator=(const TMatrixTRow<float>& r); voidoperator=(const TVectorT<float>& vec); const float&operator[](Int_t i) const; float&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTRow<float>(); TMatrixTRow<float>(const TMatrixTRow<float>& mr); TMatrixTRow<float>(TMatrixT<float>& matrix, Int_t row); TMatrixTRow<float>(TMatrixTSym<float>& matrix, Int_t row). Data Members; protected:. Int_tTMatrixTRow_const<float>::fIncif ptr = @a[row,i], then ptr+inc = @a[row,i+1]; TMatrixTBase<float>*TMatrixTRow_const<float>::fMatrixthe matrix I am a row of; const float*TMatrixTRow_const<float>::fPtrpointer to the a[row,0]; Int_tTMatrixTRow_const<float>::fRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TMatrixTRow<Element> operator=(Element val); Assign val to every element of the matrix row. void TMatrixTRow<Element> operator+=(Element val); Add val to every element of the matrix row. void TMatrixTRow<Element> operator*=(Element val); Multiply every element of the matrix row with val. void TMatrixTRow<Element> operator=(const TMatrixTRow_const<Element> &mr); Assignment operator. void TMatrixTRow<Element> operator=(const TVectorT<Element> &vec); Assign a vector to a matrix row. The vector is considered row-vector; to allow the assignment in the strict sense. void TMatrixTRow<Element> operator+=(const TMatrixTRow_const<Element> &r); Add to every element of the matrix row the corresponding element of row r. void TMatrixTRow<Element> operator*=(const TMatrixTRow_const<Element> &r); Multiply every element of the matrix row with the; corresponding element of row r. TElementActionT& operator=(const TElementActionT<Element> &); {return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTRow_float_.html:2244,Inherit,Inheritance,2244,root/html602/TMatrixTRow_float_.html,https://root.cern,https://root.cern/root/html602/TMatrixTRow_float_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor. ;  ;  GSLQuasiRandomEngine (GSLQRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLQuasiRandomEngine ();  call Terminate() ;  ; bool GenerateArray (double *begin, double *end) const;  Generate an array of quasi random numbers The iterators points to the random numbers. ;  ; void Initialize (unsigned int dimension);  initialize the generator giving the dimension of the sequence If no rng is present the default one based on Mersenne and Twister is created ;  ; std::string Name () const;  return name of generator ;  ; unsigned int NDim () const;  return the dimension of generator ;  ; double operator() () const;  Generate a random number between ]0,1[. ;  ; bool operator() (double *x) const;  Fill array x with random numbers between ]0,1[. ;  ; GSLQuasiRandomEngine & operator= (const GSLQuasiRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; unsigned int Size () const;  return the state size of generator ;  ; bool Skip (unsigned int n) const;  Skip the next n random numbers. ;  ; void Terminate ();  delete pointer to contained rng ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine; void SetType (GSLQRngWrapper *r);  internal method used by the derived class to set the type of generators ;  . #include <Math/GSLQuasiRandom.h>. Inheritance diagram for ROOT::Math::GSLQRngSobol:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLQRngSobol(). ROOT::Math::GSLQRngSobol::GSLQRngSobol ; (; ). Definition at line 168 of file GSLQuasiRandom.cxx. Libraries for ROOT::Math::GSLQRngSobol:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLQuasiRandom.h; math/mathmore/src/GSLQuasiRandom.cxx. ROOTMathGSLQRngSobol. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html:1855,inherit,inherited,1855,doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html,1,['inherit'],['inherited']
Modifiability,"tor. Double_t NormVariable(Double_t x, Double_t xmin, Double_t xmax); normalise to output range: [-1, 1]. Double_t GetSeparation(TH1* S, TH1* B) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S(x) - B(x))^2/(S(x) + B(x)) dx }. Double_t GetSeparation(const TMVA::PDF& pdfS, const TMVA::PDF& pdfB) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S(x) - B(x))2/(S(x) + B(x)) dx }. void ComputeStat(const vector<TMVA::Event*>& , vector<Float_t>* , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Int_t signalClass, Bool_t norm = kFALSE); sanity check. TMatrixD* GetSQRootMatrix(TMatrixDSym* symMat); square-root of symmetric matrix; of course the resulting sqrtMat is also symmetric, but it's easier to; treat it as a general matrix. const TMatrixD* GetCorrelationMatrix(const TMatrixD* covMat); turns covariance into correlation matrix. TH1* projNormTH1F(TTree* theTree, const TString& theVarName, const TString& name, Int_t nbins, Double_t xmin, Double_t xmax, const TString& cut); projects variable from tree into normalised histogram. Double_t NormHist(TH1* theHist, Double_t norm = 1.); normalises histogram. TList* ParseFormatLine(TString theString, const char* sep = "":""); Parse the string and cut into labels separated by "":"". vector<Int_t>* ParseANNOptionString(TString theOptions, Int_t nvar, vector<Int_t>* nodes); parse option string for ANN methods; default settings (should be defined in theOption string). Bool_t CheckSplines(const TH1* , const TSpline* ); check quality of splining by comparing splines and histograms in each bin. std::vector<Double_t> MVADiff(vector<Double_t>& , vector<Double_t>& ); computes difference between two vectors. void Scale(vector<Double_t>& , Double_t ); scales double vector. void Scale(vector<Float_t>& , Float_t ); scales float vector. void UsefulSortAscending(vector<vector<Double_t> >& , vector<TString>* vs = 0); sort 2D vector (AND in parallel a TString vector) in such a way; that th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Tools.html:7065,variab,variable,7065,root/html602/TMVA__Tools.html,https://root.cern,https://root.cern/root/html602/TMVA__Tools.html,4,['variab'],['variable']
Modifiability,"tor. Double_t NormVariable(Double_t x, Double_t xmin, Double_t xmax); normalise to output range: [-1, 1]. Double_t GetSeparation(TH1* S, TH1* B) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S(x) - B(x))^2/(S(x) + B(x)) dx }. Double_t GetSeparation(const TMVA::PDF& pdfS, const TMVA::PDF& pdfB) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S(x) - B(x))2/(S(x) + B(x)) dx }. void ComputeStat(const vector<TMVA::Event*>& , vector<Float_t>* , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Int_t signalClass, Bool_t norm = kFALSE); sanity check. TMatrixD* GetSQRootMatrix(TMatrixDSym* symMat); square-root of symmetric matrix; of course the resulting sqrtMat is also symmetric, but it's easier to; treat it as a general matrix. const TMatrixD* GetCorrelationMatrix(const TMatrixD* covMat); turns covariance into correlation matrix. TH1* projNormTH1F(TTree* theTree, const TString& theVarName, const TString& name, Int_t nbins, Double_t xmin, Double_t xmax, const TString& cut); projects variable from tree into normalised histogram. Double_t NormHist(TH1* theHist, Double_t norm = 1.0); normalises histogram. TList* ParseFormatLine(TString theString, const char* sep = "":""); Parse the string and cut into labels separated by "":"". vector<Int_t>* ParseANNOptionString(TString theOptions, Int_t nvar, vector<Int_t>* nodes); parse option string for ANN methods; default settings (should be defined in theOption string). Bool_t CheckSplines(const TH1* , const TSpline* ); check quality of splining by comparing splines and histograms in each bin. std::vector<Double_t> MVADiff(vector<Double_t>& , vector<Double_t>& ); computes difference between two vectors. void Scale(vector<Double_t>& , Double_t ); scales double vector. void Scale(vector<Float_t>& , Float_t ); scales float vector. void UsefulSortAscending(vector<std::vector<Double_t> >& , vector<TString>* vs = 0); sort 2D vector (AND in parallel a TString vector) in such a way; t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Tools.html:6481,variab,variable,6481,root/html534/TMVA__Tools.html,https://root.cern,https://root.cern/root/html534/TMVA__Tools.html,2,['variab'],['variable']
Modifiability,"tor. void GetGeometry(Int_t wid, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); Returns position and size of window ""wid"". wid - window identifier; if wid < 0 the size of the display is returned; x, y - returned window position; w, h - returned window size. const char * DisplayName(const char* = 0); Returns hostname on which the display is opened. Handle_t GetNativeEvent() const; Returns the current native event handle. ULong_t GetPixel(Color_t cindex); Returns pixel value associated to specified ROOT color number ""cindex"". void GetPlanes(Int_t& nplanes); Returns the maximum number of planes. void GetRGB(Int_t index, Float_t& r, Float_t& g, Float_t& b); Returns RGB values for color ""index"". void GetTextExtent(UInt_t& w, UInt_t& h, char* mess); Returns the size of the specified character string ""mess"". w - the text width; h - the text height; mess - the string. Int_t GetFontAscent() const; Returns the ascent of the current font (in pixels).; The ascent of a font is the distance from the baseline; to the highest position characters extend to. Int_t GetFontDescent() const; Returns the descent of the current font (in pixels.; The descent is the distance from the base line; to the lowest point characters extend to. Float_t GetTextMagnitude(); Returns the current font magnification factor. Bool_t HasTTFonts() const; Returns True when TrueType fonts are used. Window_t GetWindowID(Int_t wid); Returns the X11 window identifier. wid - workstation identifier (input). Int_t InitWindow(ULong_t window); Creates a new window and return window number.; Returns -1 if window initialization fails. Int_t AddWindow(ULong_t qwid, UInt_t w, UInt_t h); Registers a window created by Qt as a ROOT window. w, h - the width and height, which define the window size. Int_t AddPixmap(ULong_t pixid, UInt_t w, UInt_t h); Registers a pixmap created by TGLManager as a ROOT pixmap. w, h - the width and height, which define the pixmap size. void RemoveWindow(ULong_t qwid); Removes the created by Qt window ""q",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualX.html:26449,extend,extend,26449,root/html528/TVirtualX.html,https://root.cern,https://root.cern/root/html528/TVirtualX.html,4,['extend'],['extend']
Modifiability,"tor.; ; A TLegend is a Pave with several TLegendEntry(s).; x1,y1,x2,y2 are the coordinates of the Legend in the current pad; (in normalized coordinates by default); ""header"" is the title that will be displayed at the top of the legend; it is treated like a regular entry and supports TLatex. The default; is no header (header = 0).; The options are the same as for TPave Default = ""brNDC""; ; . TLegend(const TLegend& legend). Copy constuctor.; ; . TLegend& operator=(const TLegend& ). Assignment operator.; ; . ~TLegend(). Default destructor.; ; . TLegendEntry * AddEntry(const TObject* obj, const char* label = """", Option_t* option = ""lpf""). Add a new entry to this legend. ""obj"" is the object to be represented.; ""label"" is the text you wish to associate with obj in the legend.; If ""label"" is null or empty, the title of the object will be used.; ; Options are:; ; L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified; ; . TLegendEntry * AddEntry(const char* name, const char* label = """", Option_t* option = ""lpf""). Add a new entry to this legend. ""name"" is the name of an object in the pad to; be represented label is the text you wish to associate with obj in the legend; if label is null or empty, the title of the object will be used.; ; Options are:; ; L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified; ; . void Clear(Option_t* option = """"). Clear all entries in this legend, including the header.; ; . void Copy(TObject& obj) const. Copy this legend into ""obj"".; ; . void DeleteEntry(). Delete entry at the mouse position.; ; . void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLegend.html:15590,inherit,inherits,15590,root/html528/TLegend.html,https://root.cern,https://root.cern/root/html528/TLegend.html,24,['inherit'],['inherits']
Modifiability,tor.cxx. ◆ SetMaxAng(). void TEveTrackPropagator::SetMaxAng ; (; Double_t ; x). Set maximum step angle and rebuild tracks. ; Definition at line 1109 of file TEveTrackPropagator.cxx. ◆ SetMaxOrbs(). void TEveTrackPropagator::SetMaxOrbs ; (; Double_t ; x). Set maximum number of orbits and rebuild tracks. ; Definition at line 1081 of file TEveTrackPropagator.cxx. ◆ SetMaxR(). void TEveTrackPropagator::SetMaxR ; (; Double_t ; x). Set maximum radius and rebuild tracks. ; Definition at line 1063 of file TEveTrackPropagator.cxx. ◆ SetMaxStep(). void TEveTrackPropagator::SetMaxStep ; (; Double_t ; x). Set maximum step-size and rebuild tracks. ; Definition at line 1118 of file TEveTrackPropagator.cxx. ◆ SetMaxZ(). void TEveTrackPropagator::SetMaxZ ; (; Double_t ; x). Set maximum z and rebuild tracks. ; Definition at line 1072 of file TEveTrackPropagator.cxx. ◆ SetMinAng(). void TEveTrackPropagator::SetMinAng ; (; Double_t ; x). Set maximum step angle and rebuild tracks. ; WARNING – this method / variable was mis-named. ; Definition at line 1091 of file TEveTrackPropagator.cxx. ◆ SetProjTrackBreaking(). void TEveTrackPropagator::SetProjTrackBreaking ; (; UChar_t ; x). Set projection break-point mode and rebuild tracks. ; Definition at line 1226 of file TEveTrackPropagator.cxx. ◆ SetRnrCluster2Ds(). void TEveTrackPropagator::SetRnrCluster2Ds ; (; Bool_t ; x). Set rendering of 2D-clusters and rebuild tracks. ; Definition at line 1190 of file TEveTrackPropagator.cxx. ◆ SetRnrDaughters(). void TEveTrackPropagator::SetRnrDaughters ; (; Bool_t ; x). Set daughter rendering and rebuild tracks. ; Definition at line 1199 of file TEveTrackPropagator.cxx. ◆ SetRnrDecay(). void TEveTrackPropagator::SetRnrDecay ; (; Bool_t ; x). Set decay rendering and rebuild tracks. ; Definition at line 1181 of file TEveTrackPropagator.cxx. ◆ SetRnrFV(). void TEveTrackPropagator::SetRnrFV ; (; Bool_t ; x). Set first-vertex rendering and rebuild tracks. ; Definition at line 1217 of file TEveTrackPropagato,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackPropagator.html:60243,variab,variable,60243,doc/master/classTEveTrackPropagator.html,https://root.cern,https://root.cern/doc/master/classTEveTrackPropagator.html,1,['variab'],['variable']
Modifiability,"tor1D::_h! Integrator workspace; Int_tRooIntegrator1D::_maxStepsMaximum number of steps; Int_tRooIntegrator1D::_minStepsZeroMinimum number of steps to declare convergence to zero; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_tRooIntegrator1D::_range! Size of integration range; RooIntegrator1D::SummationRuleRooIntegrator1D::_rule; Double_t*RooIntegrator1D::_s! Integrator workspace; Double_tRooIntegrator1D::_savedResult! Integrator workspace; Bool_tRooIntegrator1D::_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*RooIntegrator1D::_x! do not persist; RooIntegrator1D*_xIntegratorIntegrator in first dimension; RooAbsFunc*_xintFunction binding representing integral over first dimension; Double_tRooIntegrator1D::_xmax! Upper integration bound; Double_tRooIntegrator1D::_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooIntegrator2D, is parameters and capabilities with RooNumIntFactory. RooIntegrator2D(); Default constructor. RooIntegrator2D(const RooAbsFunc& function, RooIntegrator1D::SummationRule rule = RooIntegrator1D::Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Constructor with a given function binding, summation rule,; maximum number of steps and conversion tolerance. The integration; limits are taken from the definition in the function binding. RooIntegrator2D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Constructor with a given function binding, summation rule,; maximum number of steps, conversion tolerance and an explicit; choice of integration limits on both dimensions. RooIntegrator2D(const RooAbsFunc& function, const RooNumIntConfig& config); Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooIntegrator2D.html:8565,Inherit,Inheritance,8565,root/html532/RooIntegrator2D.html,https://root.cern,https://root.cern/root/html532/RooIntegrator2D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const Scalar[] src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::Displacem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html:11045,Inherit,Inheritance,11045,root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor::_funcValPtrRRVs storing function value in context and in output dataset; RooRealVar*RooAbsNumGenerator::_funcValStore; Bool_tRooAbsNumGenerator::_isValidVerbose and valid flag; static Int_tRooPrintable::_nameLength; Double_t*_rangeRange of observables to be generated ;; RooArgSetRooAbsNumGenerator::_realVarsSets of discrete and real valued observabeles; TIterator*_rvIterIteratator over _realVars ;; TFoam*_tfoamInstance of TFOAM generator; Double_t*_vecTransfer array for FOAM output; Bool_tRooAbsNumGenerator::_verbose; Double_t*_xminLower bound of observables to be generated ;; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerSampler(RooNumGenFactory& fact); Register RooIntegrator1D, is parameters and capabilities with RooNumIntFactory. RooFoamGenerator(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0). ~RooFoamGenerator(); Destructor. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio); are we actually generating anything? (the cache always contains at least our function value). RooFoamGenerator(); {}. RooFoamGenerator(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0). RooAbsNumGenerator* clone(const RooAbsReal& func, const RooArgSet& genVars, const RooArgSet& , const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const. TFoam& engine(); { return *_tfoam; }. Bool_t canSampleConditional() const; { return kFALSE ; }. Bool_t canSampleCategories() const; { return kFALSE ; }. » Last changed: Thu Sep 23 19:59:39 2010 » Last generated: 2010-09-23 19:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooFoamGenerator.html:9589,config,config,9589,root/html528/RooFoamGenerator.html,https://root.cern,https://root.cern/root/html528/RooFoamGenerator.html,2,['config'],['config']
Modifiability,"tor::_funcValPtrRRVs storing function value in context and in output dataset; RooRealVar*RooAbsNumGenerator::_funcValStore; Bool_tRooAbsNumGenerator::_isValidVerbose and valid flag; static Int_tRooPrintable::_nameLength; Double_t*_rangeRange of observables to be generated ;; RooArgSetRooAbsNumGenerator::_realVarsSets of discrete and real valued observabeles; TIterator*_rvIterIteratator over _realVars ;; TFoam*_tfoamInstance of TFOAM generator; Double_t*_vecTransfer array for FOAM output; Bool_tRooAbsNumGenerator::_verbose; Double_t*_xminLower bound of observables to be generated ;; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerSampler(RooNumGenFactory& fact); Register RooIntegrator1D, is parameters and capabilities with RooNumIntFactory. RooFoamGenerator(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0). ~RooFoamGenerator(); Destructor. const RooArgSet * generateEvent(UInt_t remaining, Double_t& resampleRatio); are we actually generating anything? (the cache always contains at least our function value). RooFoamGenerator(); {}. RooFoamGenerator(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0). RooAbsNumGenerator* clone(const RooAbsReal& func, const RooArgSet& genVars, const RooArgSet& , const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const. TFoam& engine(); { return *_tfoam; }. Bool_t canSampleConditional() const; { return kFALSE ; }. Bool_t canSampleCategories() const; { return kFALSE ; }. » Last changed: Tue Mar 10 17:16:48 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFoamGenerator.html:9677,config,config,9677,root/html534/RooFoamGenerator.html,https://root.cern,https://root.cern/root/html534/RooFoamGenerator.html,4,['config'],['config']
Modifiability,"tor::fAbortAbort status; ClassInfo_t*fClass!; CallFunc_t*fFuncAbort!; CallFunc_t*fFuncBegin!; CallFunc_t*fFuncCut!; CallFunc_t*fFuncFill!; CallFunc_t*fFuncGetAbort!; CallFunc_t*fFuncGetStat!; CallFunc_t*fFuncInit!; CallFunc_t*fFuncInp!; CallFunc_t*fFuncNotif!; CallFunc_t*fFuncObj!; CallFunc_t*fFuncOption!; CallFunc_t*fFuncOut!; CallFunc_t*fFuncProc!; CallFunc_t*fFuncResetAbort!; CallFunc_t*fFuncSlBegin!; CallFunc_t*fFuncSlTerm!; CallFunc_t*fFuncTerm!; CallFunc_t*fFuncVersion!; TList*TSelector::fInputList of objects available during processing; TSelector*fIntSelectorPointer to interpreted selector (if interpreted); Bool_tfIsOwnerTrue if fIntSelector shoudl be deleted when the this object is deleted.; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; Long64_tTSelector::fStatusSelector status. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSelectorCint(); Default constructor for a Selector. ~TSelectorCint(); destructor for a Selector. void SetFuncProto(CallFunc_t* cf, ClassInfo_t* cl, const char* fname, const char* argtype, Bool_t required = kTRUE); Set the function prototype. void Build(TSelector* iselector, ClassInfo_t* cl, Bool_t isowner = kTRUE); Initialize the CallFunc objects when selector is interpreted. int Version() const; Invoke the Version function via the interpreter. void Init(TTree* ); Invoke the Init function via the interpreter. void Begin(TTree* tree); Invoke the Begin function via the interpreter. void SlaveBegin(TTree* ); Invoke the SlaveBegin function via the interpreter if available. Bool_t Notify(); Invoke the Notify function via the interpreter. Bool_t ProcessCut(Long64_t entry); Invoke the ProcessCut function via the interpreter. void ProcessFill(Long64_t entry); Invoke the ProcessFill function via the interpreter. Bool_t Process(Long64_t entry);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorCint.html:7422,Inherit,Inheritance,7422,root/html534/TSelectorCint.html,https://root.cern,https://root.cern/root/html534/TSelectorCint.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3C(); Constructor. ~TH3C(); Destructor. TH3C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3C(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3C(const TH3C& h3c); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3C. TH3C& operator=(const TH3C& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:08; This page has been ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH3C.html:30422,variab,variable,30422,root/html604/TH3C.html,https://root.cern,https://root.cern/root/html604/TH3C.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3C(); Constructor. ~TH3C(); Destructor. TH3C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3C(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3C(const TH3C& h3c); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3C. TH3C& operator=(const TH3C& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:09; This page has been ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3C.html:30422,variab,variable,30422,root/html602/TH3C.html,https://root.cern,https://root.cern/root/html602/TH3C.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3D(); Constructor. ~TH3D(); Destructor. TH3D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3D(const TH3D& h3d); Copy constructor. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3D. TH3D& operator=(const TH3D& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:09; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH3D.html:30447,variab,variable,30447,root/html604/TH3D.html,https://root.cern,https://root.cern/root/html604/TH3D.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3D(); Constructor. ~TH3D(); Destructor. TH3D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3D(const TH3D& h3d); Copy constructor. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3D. TH3D& operator=(const TH3D& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:09; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3D.html:30447,variab,variable,30447,root/html602/TH3D.html,https://root.cern,https://root.cern/root/html602/TH3D.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3F(); Constructor. ~TH3F(); Destructor. TH3F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3F(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3F(const TH3F& h3f); Copy constructor. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3F. TH3F& operator=(const TH3F& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:09; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH3F.html:30435,variab,variable,30435,root/html604/TH3F.html,https://root.cern,https://root.cern/root/html604/TH3F.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3F(); Constructor. ~TH3F(); Destructor. TH3F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3F(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3F(const TH3F& h3f); Copy constructor. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3F. TH3F& operator=(const TH3F& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:09; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3F.html:30435,variab,variable,30435,root/html602/TH3F.html,https://root.cern,https://root.cern/root/html602/TH3F.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3I(); Constructor. ~TH3I(); Destructor. TH3I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3I(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3I(const TH3I& h3i); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH3I& operator=(const TH3I& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:09; This page has been automatically generated. For comments or suggestions regar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH3I.html:30436,variab,variable,30436,root/html604/TH3I.html,https://root.cern,https://root.cern/root/html604/TH3I.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3I(); Constructor. ~TH3I(); Destructor. TH3I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3I(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3I(const TH3I& h3i); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH3I& operator=(const TH3I& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:09; This page has been automatically generated. For comments or suggestions regar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3I.html:30436,variab,variable,30436,root/html602/TH3I.html,https://root.cern,https://root.cern/root/html602/TH3I.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3S(); Constructor. ~TH3S(); Destructor. TH3S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3S(const TH3S& h3s); Copy Constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3S. TH3S& operator=(const TH3S& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:09; This page has been ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH3S.html:30442,variab,variable,30442,root/html604/TH3S.html,https://root.cern,https://root.cern/root/html604/TH3S.html,2,['variab'],['variable']
Modifiability,"tor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3S(); Constructor. ~TH3S(); Destructor. TH3S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); Normal constructor for fix bin size 3-D histograms. TH3S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); Normal constructor for variable bin size 3-D histograms. TH3S(const TH3S& h3s); Copy Constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this 3-D histogram structure to newth3. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. void Streamer(TBuffer& ); Stream an object of class TH3S. TH3S& operator=(const TH3S& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const; { return Double_t (fArray[bin]); }. void UpdateBinContent(Int_t bin, Double_t content); { fArray[bin] = Char_t (content); }. » Author: Rene Brun 27/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:09; This page has been ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3S.html:30442,variab,variable,30442,root/html602/TH3S.html,https://root.cern,https://root.cern/root/html602/TH3S.html,2,['variab'],['variable']
Modifiability,"tor< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void AddPreLinks (TNeuron *neuron, TObjArray *prevLayer);  add synapses connecting a neuron to its preceding layer ;  ; void BuildLayer (Int_t numNeurons, TObjArray *curLayer, TObjArray *prevLayer, Int_t layerIndex, Int_t numLayers, Bool_t from_file=false);  build a single layer with neurons and synapses connecting this layer to the previous layer ;  ; void BuildLayers (std::vector< Int_t > *layout, Bool_t from_file=false);  build the network layers ;  ; void DeleteNetwork ();  delete/clear network ;  ; void DeleteNetworkLayer (TObjArray *&layer);  delete a network layer ;  ; void ForceWeights (std::vector< Double_t > *weights);  force the synapse weights ;  ; void InitWeights ();  initialize the synapse weights randomly ;  ; void PrintLayer (TObjArray *layer) const;  print a single layer, for debugging ;  ; void PrintNeuron (TNeuron *neuron) const;  print a neuron, for debugging ;  . Private Attributes; TObjArray * fInputLayer;  cache this for fast access ;  ; TString fLayerSpec;  layout specification option ;  ; std::vector< TNeuron * > fOutputNeurons;  cache this for fast access ;  . Static Private Attributes; static const Bool_t fgDEBUG = kTRUE;  debug flag ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/MethodANNBase.h>. Inheritance diagram for TMVA::MethodANNBase:. This browser is not able to show SVG: try Firefox, Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:31075,layers,layers,31075,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,1,['layers'],['layers']
Modifiability,"tor< RooAbsArg * > > &sampleHistFuncs) const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; int fHighBin = 0;  ; int fLowBin = 0;  ; double fLumiError = 0.0;  ; double fNomLumi = 1.0;  ; std::map< std::string, double > fParamValues;  ; std::vector< std::string > fSystToFix;  . Private Member Functions; RooArgList createObservables (const TH1 *hist, RooWorkspace &proto) const;  Create observables of type RooRealVar. Creates 1 to 3 observables, depending on the type of the histogram. ;  ; void GuessObsNameVec (const TH1 *hist);  . Private Attributes; const Configuration fCfg;  ; std::string fObsName;  ; std::vector< std::string > fObsNameVec;  ; std::vector< std::string > fPreprocessFunctions;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooStats/HistFactory/HistoToWorkspaceFactoryFast.h>. Inheritance diagram for RooStats::HistFactory::HistoToWorkspaceFactoryFast:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ HistoToWorkspaceFactoryFast() [1/3]. RooStats::HistFactory::HistoToWorksp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1HistoToWorkspaceFactoryFast.html:12341,inherit,inherited,12341,doc/master/classRooStats_1_1HistFactory_1_1HistoToWorkspaceFactoryFast.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1HistoToWorkspaceFactoryFast.html,1,['inherit'],['inherited']
Modifiability,"tor< UInt_t > fEventClasses;  ; std::vector< Float_t > fEventWeights;  ; MsgLogger * fLogger;  ! message logger ;  ; std::vector< std::vector< Float_t > > fMultiClassValues;  mva values (Results) ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/ResultsMulticlass.h>. Inheritance diagram for TMVA::ResultsMulticlass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ResultsMulticlass(). TMVA::ResultsMulticlass::ResultsMulticlass ; (; const DataSetInfo * ; dsi, . TString ; resultsName . ). constructor ; Definition at line 58 of file ResultsMulticlass.cxx. ◆ ~ResultsMulticlass(). TMVA::ResultsMulticlass::~ResultsMulticlass ; (; ). destructor ; Definition at line 72 of file ResultsMulticlass.cxx. Member Function Documentation. ◆ Class(). static TClass * TMVA::ResultsMulticlass::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::ResultsMulticlass::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Versi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ResultsMulticlass.html:12969,inherit,inherited,12969,doc/master/classTMVA_1_1ResultsMulticlass.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ResultsMulticlass.html,2,['inherit'],['inherited']
Modifiability,"tor< double > fParams;  parameter values. Size is total number of parameters ;  ; std::vector< std::string > fParNames;  parameter names (only with FCN only fits, when fFitFunc=0) ;  ; int fStatus;  minimizer status code ;  ; double fVal;  minimum function value ;  ; bool fValid;  flag for indicating valid fit ;  . Friends; class Fitter;  . #include <Fit/FitResult.h>. Inheritance diagram for ROOT::Fit::FitResult:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ IModelFunction. typedef ROOT::Math::IParamMultiFunction ROOT::Fit::FitResult::IModelFunction. Definition at line 51 of file FitResult.h. Constructor & Destructor Documentation. ◆ FitResult() [1/2]. ROOT::Fit::FitResult::FitResult ; (; ). Default constructor for an empty (non valid) fit result. ; Definition at line 45 of file FitResult.cxx. ◆ FitResult() [2/2]. ROOT::Fit::FitResult::FitResult ; (; const FitConfig & ; fconfig). Constructor from a fit-config for a dummy fit (e.g. ; when only one fcn evaluation is done) ; Definition at line 52 of file FitResult.cxx. ◆ ~FitResult(). virtual ROOT::Fit::FitResult::~FitResult ; (; ). inlinevirtual . Destructor. ; Definition at line 69 of file FitResult.h. Member Function Documentation. ◆ Chi2(). double ROOT::Fit::FitResult::Chi2 ; (; ); const. inline . Return the Chi2 value after fitting In case of unbinned fits (or not defined one, see the documentation of Fitter::FitFCN) return -1 In case of binned likelihood fits (Poisson Likelihood) return the 2 * negative log-likelihood ratio using the definition of Baker-Cousins. ; Definition at line 153 of file FitResult.h. ◆ Contour(). bool ROOT::Fit::FitResult::Contour ; (; unsigned int ; ipar, . unsigned int ; jpar, . unsigned int & ; npoints, . double * ; pntsx, . double * ; pntsy, . double ; confLevel = 0.683 . ). create contour of two parameters around the minimum pass as option confidence level: default is a value of 0.683 ; Create a 2D cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html:10477,config,config,10477,doc/master/classROOT_1_1Fit_1_1FitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html,1,['config'],['config']
Modifiability,"tor<TMVA::Interval*>&fRangesparameter ranges; Double_tfTemperatureAdaptiveStepused to calculate InitialTemperature if fUseDefaultTemperature; Double_tfTemperatureScalehow fast temperature change; Bool_tfUseDefaultScaleif TRUE, SA calculates its own TemperatureScale; Bool_tfUseDefaultTemperatureif TRUE, SA calculates its own InitialTemperature (MinTemperautre). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SimulatedAnnealing(TMVA::IFitterTarget& target, const vector<TMVA::Interval*>& ranges); constructor. void SetOptions(Int_t maxCalls, Double_t initialTemperature, Double_t minTemperature, Double_t eps, TString kernelTemperatureS, Double_t temperatureScale, Double_t adaptiveSpeed, Double_t temperatureAdaptiveStep, Bool_t useDefaultScale, Bool_t useDefaultTemperature); option setter. ~SimulatedAnnealing(); destructor. void FillWithRandomValues(vector<Double_t>& parameters); random starting parameters. void ReWriteParameters(vector<Double_t>& from, vector<Double_t>& to); copy parameters. void GenerateNeighbour(vector<Double_t>& parameters, vector<Double_t>& oldParameters, Double_t currentTemperature); generate adjacent parameters. std::vector<Double_t> GenerateNeighbour(vector<Double_t>& parameters, Double_t currentTemperature); generate adjacent parameters. void GenerateNewTemperature(Double_t& currentTemperature, Int_t Iter); generate new temperature. Bool_t ShouldGoIn(Double_t currentFit, Double_t localFit, Double_t currentTemperature); result checker. void SetDefaultScale(); setting of default scale. Double_t GenerateMaxTemperature(vector<Double_t>& parameters); maximum temperature. Double_t Minimize(vector<Double_t>& parameters); minimisation algorithm. SimulatedAnnealing(TMVA::IFitterTarget& target, const vector<TMVA::Interval*>& ranges). void SetMaxCalls(Int_t mc); accessors. { fMaxCalls = mc; }. void SetInitTemp(Double_t it); { fInitialTemperature = it; }. void SetMinTemp(Double_t min); { fMinTemperature = min; }. voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__SimulatedAnnealing.html:3486,ReWrite,ReWriteParameters,3486,root/html532/TMVA__SimulatedAnnealing.html,https://root.cern,https://root.cern/root/html532/TMVA__SimulatedAnnealing.html,2,['ReWrite'],['ReWriteParameters']
Modifiability,"tor= (const TArrayC &rhs);  TArrayC assignment operator. ;  ; Char_t & operator[] (Int_t i);  ; Char_t operator[] (Int_t i) const;  ; void Reset (Char_t val=0);  ; void Set (Int_t n) override;  Set size of this array to n chars. ;  ; void Set (Int_t n, const Char_t *array);  Set size of this array to n chars and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH2; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FitOptionsMake (Option_t *option, Foption_t &Foption);  Decode string choptin and fill fitOption structure. ;  ; static Int_t GetDefaultBufferSize ();  Static function return the default buffer size for automatic histograms the parameter fgBufferSize may be changed via SetDefaultBufferSize. ;  ; static Bool_t GetDefaultSumw2 ();  Return kTRUE if TH1::Sumw2 must be called when creating new histograms. ;  ; static void SetDefaultBufferSize (Int_t buff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:43936,inherit,inherited,43936,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,2,['inherit'],['inherited']
Modifiability,"tor= (const TArrayC &rhs);  TArrayC assignment operator. ;  ; Char_t & operator[] (Int_t i);  ; Char_t operator[] (Int_t i) const;  ; void Reset (Char_t val=0);  ; void Set (Int_t n) override;  Set size of this array to n chars. ;  ; void Set (Int_t n, const Char_t *array);  Set size of this array to n chars and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH3; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FitOptionsMake (Option_t *option, Foption_t &Foption);  Decode string choptin and fill fitOption structure. ;  ; static Int_t GetDefaultBufferSize ();  Static function return the default buffer size for automatic histograms the parameter fgBufferSize may be changed via SetDefaultBufferSize. ;  ; static Bool_t GetDefaultSumw2 ();  Return kTRUE if TH1::Sumw2 must be called when creating new histograms. ;  ; static void SetDefaultBufferSize (Int_t buff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3C.html:43638,inherit,inherited,43638,doc/master/classTH3C.html,https://root.cern,https://root.cern/doc/master/classTH3C.html,2,['inherit'],['inherited']
Modifiability,"tor= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static TGComboBox * BuildHistAddComboBox (TGFrame *parent, Int_t id);  Create Line/Bar combo box. ;  ; static TGComboBox * BuildHistCoordsComboBox (TGFrame *parent, Int_t id);  Create coordinate system type combo box. ;  ; static TGComboBox * BuildHistErrorComboBox (TGFrame *parent, Int_t id);  Create error type combo box. ;  ; static TGComboBox * BuildHistTypeComboBox (TGFrame *parent, Int_t id);  Create histogram type combo box. ;  ; static TGComboBox * BuildPercentComboBox (TGFrame *parent, Int_t id);  Create Percentage combo box for bar option. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; TGCompositeFrame * f10;  Contains the Bar Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1Editor.html:31360,inherit,inherited,31360,doc/master/classTH1Editor.html,https://root.cern,https://root.cern/doc/master/classTH1Editor.html,1,['inherit'],['inherited']
Modifiability,"tor=(const TClassMenuItem&). Data Members; public:. enum EClassMenuItemType { kPopupUserFunction; kPopupSeparator; kPopupStandardList; };; enum { kIsExternal; kIsSelf; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfArgsarguments type list *** NOT CHECKED ***; TObject*fCalledObjectobject to be called; TStringfFunctionNamename of the function or method to be called; TClass*fParentparent class; Bool_tfSelfflag to indicate that object to be called is the selected one; Int_tfSelfObjectPosrang in argument list corresponding to the object being clicked on; TList*fSubMenulist of submenu items; TStringfTitletitle if not standard; Bool_tfToggleflag toggle method; TClassMenuItem::EClassMenuItemTypefTypetype flag (EClassMenuItemType). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TClassMenuItem(); Default TClassMenuItem ctor. TClassMenuItems are constructed in TClass; with a standard content but may be customized later; fType = 0 : external method/function; fType = 1 : separator; fType = 2 : standard methods list. TClassMenuItem(Int_t type, TClass* parent, const char* title = """", const char* functionname = """", TObject* obj = 0, const char* args = """", Int_t selfobjposition = -1, Bool_t self = kFALSE); TClassMenuItem ctor. TClassMenuItems are constructed in TClass; with a standard content but may be customized later; type = 0 : external method/function; type = 1 : separator; type = 2 : standard methods list; self indicates if the object to be called is the one selected; by the popup menu; selfobjposition, if non zero, indicates the position in the arguments; list of the argument corresponding to the selected (clicked) object.; This argument in the calling method should be a TObject*; Note: It is the responsabilit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClassMenuItem.html:7112,Inherit,Inheritance,7112,root/html532/TClassMenuItem.html,https://root.cern,https://root.cern/root/html532/TClassMenuItem.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor=(const TEveArrowGL&); TEveArrowGL(const TEveArrowGL&). Data Members; public:. static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesAll; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesNone; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesX; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesY; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesZ. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveArrow*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowGL(); Constructor. Bool_t SetModel(TObject* obj, const Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. TEveArrowGL(const TEveArrowGL& ). TEveArrowGL& operator=(const TEveArrowGL& ). virtual ~TEveArrowGL(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveArrowGL.html:4301,Inherit,Inheritance,4301,root/html604/TEveArrowGL.html,https://root.cern,https://root.cern/root/html604/TEveArrowGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor=(const TEveArrowGL&); TEveArrowGL(const TEveArrowGL&). Data Members; public:. static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesAll; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesNone; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesX; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesY; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesZ. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveArrow*fMModel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowGL(); Constructor. Bool_t SetModel(TObject* obj, const Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. TEveArrowGL(const TEveArrowGL& ). TEveArrowGL& operator=(const TEveArrowGL& ). virtual ~TEveArrowGL(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveArrowGL.html:4301,Inherit,Inheritance,4301,root/html602/TEveArrowGL.html,https://root.cern,https://root.cern/root/html602/TEveArrowGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor=(const TEveTextGL&); TEveTextGL(const TEveTextGL&). Data Members; public:. static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesAll; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesNone; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesX; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesY; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesZ. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TGLFontfFontFTFont wrapper; TEveText*fMmodel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); Double_tfX[4][3]3D position of font; static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTextGL(); Constructor. Bool_t SetModel(TObject* obj, const Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Actual rendering code.; Virtual from TGLLogicalShape. TEveTextGL(const TEveTextGL& ). TEveTextGL& operator=(const TEveTextGL& ). virtual ~TEveTextGL(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveTextGL.html:4355,Inherit,Inheritance,4355,root/html604/TEveTextGL.html,https://root.cern,https://root.cern/root/html604/TEveTextGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor=(const TEveTextGL&); TEveTextGL(const TEveTextGL&). Data Members; public:. static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesAll; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesNone; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesX; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesY; static TGLLogicalShape::ELODAxesTGLLogicalShape::kLODAxesZ. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TGLFontfFontFTFont wrapper; TEveText*fMmodel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); Double_tfX[4][3]3D position of font; static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTextGL(); Constructor. Bool_t SetModel(TObject* obj, const Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Actual rendering code.; Virtual from TGLLogicalShape. TEveTextGL(const TEveTextGL& ). TEveTextGL& operator=(const TEveTextGL& ). virtual ~TEveTextGL(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTextGL.html:4355,Inherit,Inheritance,4355,root/html602/TEveTextGL.html,https://root.cern,https://root.cern/root/html602/TEveTextGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tor=(const TSystemDirectory&); TSystemDirectory(const TSystemDirectory&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TOrdCollection*fDirsInBrowser; TOrdCollection*fFilesInBrowser; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSystemFile. ←; TSystemDirectory. Function documentation; TSystemDirectory(); Create a system directory object. TSystemDirectory(const char* dirname, const char* path); Create a system directory object. TSystemDirectory(const TSystemDirectory& ); copy constructor. TSystemDirectory& operator=(const TSystemDirectory& ); assignment operator. ~TSystemDirectory(); Delete system directory object. TList * GetListOfFiles() const; Returns a TList of TSystemFile objects representing the contents; of the directory. It's the responsibility of the user to delete; the list (the list owns the contained objects).; Returns 0 in case of errors. void SetDirectory(const char* name); Create a system directory object. Bool_t IsItDirectory(const char* name) const; Check if name is a directory. void Browse(TBrowser* b); Browse OS system directories. TSystemDirectory * FindDirObj(const char* name); Method that returns system directory object if it; exists in list, 0 otherwise.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSystemDirectory.html:6605,Inherit,Inheritance,6605,root/html602/TSystemDirectory.html,https://root.cern,https://root.cern/root/html602/TSystemDirectory.html,2,['Inherit'],['Inheritance']
Modifiability,"torD &y, Double_t alpha, const TVectorD &x) override;  calculate y = beta*y + alpha*(fQ*x) ;  ; void SetNonZeros (Int_t nnzQ, Int_t nnzA, Int_t nnzC);  Allocate space for the appropriate number of non-zeros in the matrices. ;  ;  Public Member Functions inherited from TQpDataBase;  TQpDataBase ();  Default constructor. ;  ;  TQpDataBase (const TQpDataBase &another);  Copy constructor. ;  ;  TQpDataBase (Int_t nx, Int_t my, Int_t mz);  Constructor. ;  ;  ~TQpDataBase () override;  ; virtual TVectorD & GetBa ();  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; TQpDataBase & operator= (const TQpDataBase &source);  Assignment operator. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataSparse.html:3426,inherit,inherited,3426,doc/master/classTQpDataSparse.html,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html,1,['inherit'],['inherited']
Modifiability,"torDetailedOutputAggregator(); RooStats::DetailedOutputAggregatorDetailedOutputAggregator(const RooStats::DetailedOutputAggregator&); const RooArgList*GetAsArgList() const; static RooArgSet*GetAsArgSet(RooFitResult* result, TString prefix = """", bool withErrorsAndPulls = false); RooDataSet*GetAsDataSet(TString name, TString title); virtual TClass*IsA() const; RooStats::DetailedOutputAggregator&operator=(const RooStats::DetailedOutputAggregator&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. RooArgList*fBuiltSet; RooDataSet*fResult. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~DetailedOutputAggregator(); destructor. RooArgSet * GetAsArgSet(RooFitResult* result, TString prefix = """", bool withErrorsAndPulls = false); static function to translate the given fit result to a RooArgSet in a generic way.; Prefix is prepended to all variable names.; LM: caller is responsible to delete the returned list and eventually also the content of the list; Note that the returned list is not owning the returned content. void AppendArgSet(const RooAbsCollection* aset, TString prefix = """"); For each variable in aset, prepend prefix to its name and add; to the internal store. Note this will not appear in the produced; dataset unless CommitSet is called. void CommitSet(double weight = 1.). RooDataSet * GetAsDataSet(TString name, TString title); Returns all detailed output as a dataset.; Ownership of the dataset is transferred to the caller. DetailedOutputAggregator(). const RooArgList* GetAsArgList() const; Returns this set of detailed output.; Note that the ownership of the returned list is not transfered; It is managed by the DetailedOutputAggregator class. » Author: Sven Kreiss, Kyle Cranmer Nov 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__DetailedOutputAggregator.html:1591,variab,variable,1591,root/html602/RooStats__DetailedOutputAggregator.html,https://root.cern,https://root.cern/root/html602/RooStats__DetailedOutputAggregator.html,4,['variab'],['variable']
Modifiability,"torMultiDim*fIntegratorpointer to multi-dimensional integrator base class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; IntegratorMultiDim(ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int ncall = 0); Generic constructor of multi dimensional Integrator. By default uses the Adaptive integration method. @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. In case no parameter values are passed the default ones used in IntegratorMultiDimOptions are used. IntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int ncall = 0); Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon methods). SetFunction(const ROOT::Math::IMultiGenFunction& f). virtual ~IntegratorMultiDim(); remove template constructor since is ambigous; Template Constructor of multi dimensional Integrator passing a generic function. By default uses the adaptive integration method. @param f integration function (generic function implementin operator()(const double *); @param dim function dimension; @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon methods). this is ambigous; template<class Function>; IntegratorMultiDim(Function & f, unsigned int dim, IntegrationMultiD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__IntegratorMultiDim.html:3283,adapt,adaptive,3283,root/html528/ROOT__Math__IntegratorMultiDim.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__IntegratorMultiDim.html,10,['adapt'],['adaptive']
Modifiability,"torOfClassesOfTreeType &eventsmap, const EvtStatsPerClass &eventCounts, const TString &normMode);  renormalisation of the TRAINING event weights ;  ; void ResetBranchAndEventAddresses (TTree *);  ; void ResetCurrentTree ();  ; Bool_t Verbose ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fComputeCorrelations = kFALSE;  Whether to force computation of correlations or not. ;  ; Bool_t fCorrelations = kFALSE;  Whether to print correlations or not. ;  ; UInt_t fCurrentEvtIdx;  the current event (to avoid reading of the same event) ;  ; TTree * fCurrentTree;  the tree, events are currently read from ;  ; std::vector< TTreeFormula * > fCutFormulas;  cuts ;  ; std::vector< TTreeFormula * > fInputFormulas;  input variables ;  ; std::vector< std::pair< TTreeFormula *, Int_t > > fInputTableFormulas;  ! input variables expression for arrays ;  ; MsgLogger * fLogger;  ! message logger ;  ; Bool_t fScaleWithPreselEff;  how to deal with requested #events in connection with preselection cuts ;  ; std::vector< TTreeFormula * > fSpectatorFormulas;  spectators ;  ; std::vector< TTreeFormula * > fTargetFormulas;  targets ;  ; Bool_t fVerbose;  Verbosity. ;  ; TString fVerboseLevel;  VerboseLevel. ;  ; std::vector< TTreeFormula * > fWeightFormula;  weights ;  . Private Types; typedef std::vector< Event * > EventVector;  ; typedef std::vector< EventVector > EventVectorOfClasses;  ; typedef std::map< Types::ETreeType, EventVectorOfClasses > EventVectorOfClassesOfTreeType;  ; typedef std::map< Types::ETreeType, EventVector > EventVectorOfTreeType;  ; typedef std::vector< EventStats > EvtStatsPerClass;  ; typedef std::vector< int > NumberPerClass;  ; typedef std::vector< Double_t > ValuePerClass;  ; typedef std::map< Types::ETreeType, ValuePerClass > ValuePerClassOfTreeType;  . Additional Inher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html:11963,variab,variables,11963,doc/master/classTMVA_1_1DataSetFactory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html,2,['variab'],['variables']
Modifiability,"torOneDim. ; Definition at line 101 of file VirtualIntegrator.h. Public Member Functions;  ~VirtualIntegratorOneDim () override;  destructor: no operation ;  ; virtual double Integral ()=0;  evaluate un-defined integral (between -inf, + inf) ;  ; virtual double Integral (const std::vector< double > &pts)=0;  evaluate integral with singular points ;  ; virtual double Integral (double a, double b)=0;  evaluate integral ;  ; virtual double IntegralCauchy (double a, double b, double c)=0;  evaluate Cauchy integral ;  ; virtual double IntegralLow (double b)=0;  evaluate integral over the (-inf, b) ;  ; virtual double IntegralUp (double a)=0;  evaluate integral over the (a, +inf) ;  ; virtual ROOT::Math::IntegratorOneDimOptions Options () const =0;  get the option used for the integration must be implemented by derived class ;  ; virtual void SetFunction (const IGenFunction &)=0;  set integration function ;  ; virtual void SetOptions (const ROOT::Math::IntegratorOneDimOptions &opt);  set the options (should be re-implemented by derived classes -if more options than tolerance exist ;  ; virtual ROOT::Math::IntegrationOneDim::Type Type () const;  return type of integrator ;  ;  Public Member Functions inherited from ROOT::Math::VirtualIntegrator; virtual ~VirtualIntegrator ();  destructor: no operation ;  ; virtual double Error () const =0;  return the estimate of the absolute Error of the last Integral calculation ;  ; virtual int NEval () const;  return number of function evaluations in calculating the integral (if integrator do not implement this function returns -1) ;  ; virtual double Result () const =0;  return the Result of the last Integral calculation ;  ; virtual void SetAbsTolerance (double)=0;  set the desired absolute Error ;  ; virtual void SetRelTolerance (double)=0;  set the desired relative Error ;  ; virtual int Status () const =0;  return the Error Status of the last Integral calculation ;  . #include <Math/VirtualIntegrator.h>. Inheritance diagram for RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html:1898,inherit,inherited,1898,doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,1,['inherit'],['inherited']
Modifiability,"torOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Transfer contents to std::vector for use below. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStepFunction.html:48178,inherit,inherited,48178,doc/master/classRooStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooStepFunction.html,1,['inherit'],['inherited']
Modifiability,"torOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoParaboloid (const TGeoParaboloid &)=delete;  ; TGeoParaboloid & operator= (const TGeoParaboloid &)=delete;  . Private Attributes; Double_t fA;  ; Double_t fB;  ; Double_t fDz;  ; Double_t fRhi;  ; Double_t fRlo;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoParaboloid.html:18984,inherit,inherited,18984,doc/master/classTGeoParaboloid.html,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html,1,['inherit'],['inherited']
Modifiability,"torOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGGC (GCValues_t *values, Bool_t calledByGCPool);  Create a graphics context (only called via TGGCPool::GetGC()). ;  ; TString GetMaskString () const;  Returns GC mask as a string - used in SavePrimitive(). ;  ; void UpdateValues (GCValues_t *v);  Update values + mask. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; GContext_t fContext;  graphics context handle ;  ; GCValues_t fValues = {};  graphics context values + mask ;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Friends; class TGGCPool;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGGC.h>. Inheritance diagram for TGGC:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGGC() [1/3]. TGGC::TGGC ; (; GCValues_t * ; values, . Bool_t ; calledByGCPool . ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGC.html:13123,inherit,inherited,13123,doc/master/classTGGC.html,https://root.cern,https://root.cern/doc/master/classTGGC.html,1,['inherit'],['inherited']
Modifiability,"torOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; CacheElem * getCache (const RooArgSet *nset) const;  ; int idxmax (const double &m) const;  ; int idxmin (const double &m) const;  ; Int_t ij (const Int_t &i, const Int_t &j) const;  ; void initialize ();  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return loo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorph.html:61594,inherit,inherited,61594,doc/master/classRooMomentMorph.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorph.html,1,['inherit'],['inherited']
Modifiability,"torOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; using SharedPropertiesMap = std::map< RooSharedProperties::UUID, std::weak_ptr< RooRealVarSharedProperties > >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ;  ; double chopAt (double what, Int_t where) const;  Utility to calculate number of decimals to show based on magnitude of error. ;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache Warning: This function copies the cached values of source, it is the callers responsibility to make sure the cache is clean. ;  ; double evaluate () const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:59059,inherit,inherited,59059,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['inherit'],['inherited']
Modifiability,"torOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidTHtml::THelperBase::SetOwner(THtml* html); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THtml::THelperBaseTHtml::THelperBase::THelperBase(); THtml::THelperBaseTHtml::THelperBase::THelperBase(const THtml::THelperBase&); THtml::TModuleDefinitionTModuleDefinition(); THtml::TModuleDefinitionTModuleDefinition(const THtml::TModuleDefinition&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; bool GetModule(TClass* cl, THtml::TFileSysEntry* fse, TString& out_modulename) const. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THtml__TModuleDefinition.html:5614,Inherit,Inheritance,5614,root/html534/THtml__TModuleDefinition.html,https://root.cern,https://root.cern/root/html534/THtml__TModuleDefinition.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"torOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*fVectorvector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; std::vector<T> * GetVector() const; { return fVector; }. Long64_t Merge(TCollection* list). » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html:6350,Inherit,Inheritance,6350,root/html534/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html,https://root.cern,https://root.cern/root/html534/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"torage meta-data of an ntuple. ; Represents the on-disk (on storage) information about an ntuple. The meta-data consists of a header and one or several footers. The header carries the ntuple schema, i.e. the fields and the associated columns and their relationships. The footer(s) carry information about one or several clusters. For every cluster, a footer stores its location and size, and for every column the range of element indexes as well as a list of pages and page locations.; The descriptor provide machine-independent (de-)serialization of headers and footers, and it provides lookup routines for ntuple objects (pages, clusters, ...). It is supposed to be usable by all RPageStorage implementations.; The serialization does not use standard ROOT streamers in order to not let it depend on libCore. The serialization uses the concept of frames: header, footer, and substructures have a preamble with version numbers and the size of the writte struct. This allows for forward and backward compatibility when the meta-data evolves. ; Definition at line 528 of file RNTupleDescriptor.hxx. Classes; class  RClusterDescriptorIterable;  Used to loop over all the clusters of an ntuple (in unspecified order) More...;  ; class  RClusterGroupDescriptorIterable;  Used to loop over all the cluster groups of an ntuple (in unspecified order) More...;  ; class  RColumnDescriptorIterable;  Used to loop over a field's associated columns. More...;  ; struct  RCreateModelOptions;  Modifiers passed to CreateModel More...;  ; class  RExtraTypeInfoDescriptorIterable;  Used to loop over all the extra type info record of an ntuple (in unspecified order) More...;  ; class  RFieldDescriptorIterable;  Used to loop over a field's child fields. More...;  ; class  RHeaderExtension;  Summarizes information about fields and the corresponding columns that were added after the header has been serialized. More...;  . Public Member Functions;  RNTupleDescriptor ()=default;  ;  RNTupleDescriptor (const RNTuple",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleDescriptor.html:1407,evolve,evolves,1407,doc/master/classROOT_1_1Experimental_1_1RNTupleDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleDescriptor.html,1,['evolve'],['evolves']
Modifiability,"torageTypeRooAbsData::defaultStorageType; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataHist(); Default constructor. RooDataHist(const char* name, const char* title, const RooArgSet& vars, const char* binningName = 0); Constructor of an empty data hist from a RooArgSet defining the dimensions; of the data space. The range and number of bins in each dimensions are taken; from getMin()getMax(),getBins() of each RooAbsArg representing that; dimension. For real dimensions, the fit range and number of bins can be set independently; of the plot range and number of bins, but it is advisable to keep the; ratio of the plot bin width and the fit bin width an integer value.; For category dimensions, the fit ranges always comprises all defined states; and each state is always has its individual bin. To effective achive binning of real dimensions with variable bins sizes,; construct a RooThresholdCategory of the real dimension to be binned variably.; Set the thresholds at the desired bin boundaries, and construct the; data hist as function of the threshold category instead of the real variable. RooDataHist(const char* name, const char* title, const RooArgSet& vars, const RooAbsData& data, Double_t initWgt = 1.); Constructor of a data hist from an existing data collection (binned or unbinned); The RooArgSet 'vars' defines the dimensions of the histogram.; The range and number of bins in each dimensions are taken; from getMin()getMax(),getBins() of each RooAbsArg representing that; dimension. For real dimensions, the fit range and number of bins can be set independently; of the plot range and number of bins, but it is advisable to keep the; ratio of the plot bin width and the fit bin width an integer value.; For category dimensions, the fit ranges always comprises all defined states; and each state is always has its individual bin. To effective achive binni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDataHist.html:21829,variab,variable,21829,root/html602/RooDataHist.html,https://root.cern,https://root.cern/root/html602/RooDataHist.html,8,['variab'],"['variable', 'variably']"
Modifiability,"torageTypeRooAbsData::defaultStorageType; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataHist(); Default constructor. RooDataHist(const char* name, const char* title, const RooArgSet& vars, const char* binningName = 0); Constructor of an empty data hist from a RooArgSet defining the dimensions; of the data space. The range and number of bins in each dimensions are taken; from getMin()getMax(),getBins() of each RooAbsArg representing that; dimension. For real dimensions, the fit range and number of bins can be set independently; of the plot range and number of bins, but it is advisable to keep the; ratio of the plot bin width and the fit bin width an integer value.; For category dimensions, the fit ranges always comprises all defined states; and each state is always has its individual bin. To effective achive binning of real dimensions with variable bins sizes,; construct a RooThresholdCategory of the real dimension to be binned variably.; Set the thresholds at the desired bin boundaries, and construct the; data hist as function of the threshold category instead of the real variable. RooDataHist(const char* name, const char* title, const RooArgSet& vars, const RooAbsData& data, Double_t initWgt = 1.0); Constructor of a data hist from an existing data collection (binned or unbinned); The RooArgSet 'vars' defines the dimensions of the histogram.; The range and number of bins in each dimensions are taken; from getMin()getMax(),getBins() of each RooAbsArg representing that; dimension. For real dimensions, the fit range and number of bins can be set independently; of the plot range and number of bins, but it is advisable to keep the; ratio of the plot bin width and the fit bin width an integer value.; For category dimensions, the fit ranges always comprises all defined states; and each state is always has its individual bin. To effective achive binn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataHist.html:20611,variab,variable,20611,root/html534/RooDataHist.html,https://root.cern,https://root.cern/root/html534/RooDataHist.html,4,['variab'],"['variable', 'variably']"
Modifiability,"tore in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; Int_t GetOffsetHeaderSize () const override;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TLeaf; using Counts_t = std::vector< Int_t >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TLeaf;  TLeaf (const TLeaf &);  Copy constructor. ;  ; Int_t * GenerateOffsetArrayBase (Int_t base, Int_t events) const;  If the class supports it, generate an offset array base. ;  ; TLeaf &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafElement.html:15827,inherit,inherited,15827,doc/master/classTLeafElement.html,https://root.cern,https://root.cern/doc/master/classTLeafElement.html,1,['inherit'],['inherited']
Modifiability,"tore objects; vector<TVirtualArray*>TBuffer::fCacheStackStack of pointers to the cache where to temporarily store the value of 'missing' data members; TExMap*fClassMapMap containing object,class pairs for reading; Int_tfDisplacementValue to be added to the map offsets; TStreamerInfo*fInfoPointer to TStreamerInfo object writing/reading the buffer; vector<TStreamerInfo*>fInfoStackStack of pointers to the TStreamerInfos; TExMap*fMapMap containing object,offset pairs for reading/writing; Int_tfMapCountNumber of objects or classes in map; Int_tfMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tfPidOffsetOffset to be added to the pid index in this key/buffer.; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; Int_tTBuffer::fVersionBuffer format version; static Int_tfgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferFile(TBuffer::EMode mode); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. TBufferFile(TBuffer::EMode mode, Int_t bufsiz); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. TBufferFile(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; to TBuffer via the buf argument. By default this buffer will be adopted; unless adopt is false.; If the new buffer is _not_ adopted and no memory allocation routine; is provided, a Fatal error will be issued if the Buffer attempts to; expand. ~TBufferFile(); Delete an I/O buffer object. Int_t GetVersio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBufferFile.html:18028,Inherit,Inheritance,18028,root/html532/TBufferFile.html,https://root.cern,https://root.cern/root/html532/TBufferFile.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tore.h. Public Member Functions;  TRootSnifferStoreXml (TString &_buf, Bool_t _compact=kFALSE);  ; void BeforeNextChild (Int_t lvl, Int_t nchld, Int_t) final;  called before next child node created ;  ; void CloseNode (Int_t lvl, Int_t numchilds) final;  Called when node should be closed. ;  ; void CreateNode (Int_t lvl, const char *nodename) final;  starts new xml node, will be closed by CloseNode ;  ; TClass * IsA () const override;  ; Bool_t IsXml () const final;  ; void SetField (Int_t lvl, const char *field, const char *value, Bool_t) final;  set field (xml attribute) in current node ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRootSnifferStore; virtual ~TRootSnifferStore ()=default;  ; TClass * GetResClass () const;  ; TDataMember * GetResMember () const;  ; Int_t GetResNumChilds () const;  ; void * GetResPtr () const;  ; Int_t GetResRestrict () const;  ; void SetResult (void *_res, TClass *_rescl, TDataMember *_resmemb, Int_t _res_chld, Int_t restr=0);  set pointer on found element, class and number of childs ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSnifferStoreXml.html:1233,inherit,inherited,1233,doc/master/classTRootSnifferStoreXml.html,https://root.cern,https://root.cern/doc/master/classTRootSnifferStoreXml.html,2,['inherit'],['inherited']
Modifiability,"tore::RealVectorRealVector(UInt_t initialCapacity = (VECTOR_BUFFER_SIZE/sizeof(Double_t))); RooVectorDataStore::RealVectorRealVector(RooAbsReal* arg, UInt_t initialCapacity = (VECTOR_BUFFER_SIZE/sizeof(Double_t))); RooVectorDataStore::RealVectorRealVector(const RooVectorDataStore::RealVector& other, RooAbsReal* real = 0); voidreserve(Int_t siz); voidreset(); voidresize(Int_t siz); voidsetBufArg(RooAbsReal* arg); voidsetBuffer(RooAbsReal* real, Double_t* newBuf); voidsetDependents(const RooArgSet& deps); voidsetNativeBuffer(Double_t* newBuf = 0); voidsetNset(RooArgSet* newNset); virtual voidShowMembers(TMemberInspector&); Int_tsize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidwrite(Int_t i). Data Members; protected:. vector<Double_t>_vec. private:. Double_t*_buf!; Double_t*_nativeBuf!; RooAbsReal*_nativeReal; RooArgSet*_nset! ; RooAbsReal*_real; RooChangeTracker*_tracker; Double_t*_vec0!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Streamer(TBuffer& ); Stream an object of class RooVectorDataStore::RealVector. Int_t fill(); Write current row. void reserve(Int_t siz); reserve storage for nEvt entries. const RooArgSet* get(Int_t idx) const. const RooArgSet* getNative(Int_t idx) const. void reset(). RealVector(UInt_t initialCapacity = (VECTOR_BUFFER_SIZE/sizeof(Double_t))). RealVector(RooAbsReal* arg, UInt_t initialCapacity = (VECTOR_BUFFER_SIZE/sizeof(Double_t))). virtual ~RealVector(). RealVector(const RooVectorDataStore::RealVector& other, RooAbsReal* real = 0). RealVector& operator=(const RooVectorDataStore::RealVector& other). void setNset(RooArgSet* newNset); { _nset = newNset ? new RooArgSet(*newNset) : 0 ; }. RooArgSet* nset() const; { return _nset ; }. void setBufArg(RooAbsReal* arg); { _nativeReal = arg ; }. const RooAbsReal* bufArg() const; { return _nativeReal ; }. void setBuffer(RooAbsReal* real, Double_t* newBuf). void setNativeBuffer(Double_t* new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooVectorDataStore__RealVector.html:1793,Inherit,Inheritance,1793,root/html534/RooVectorDataStore__RealVector.html,https://root.cern,https://root.cern/root/html534/RooVectorDataStore__RealVector.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"toreDetailedOutput(TNamed& object); voidRooAbsStudy::storeSummaryOutput(const RooArgSet& vars). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; RooArgSetfParamPoint; unsigned intfRandomSeed; TStringTNamed::fTitleobject title; RooStats::ToyMCSampler*fToyMCSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t initialize(void). Bool_t execute(void). Bool_t finalize(void). RooDataSet* merge(). ToyMCStudy(const char* name = ""ToyMCStudy"", const char* title = ""ToyMCStudy""); need to have constructor without arguments for proof. RooAbsStudy* clone(const char* = """") const; { return new ToyMCStudy(*this) ; }. virtual ~ToyMCStudy(); {}. void SetToyMCSampler(RooStats::ToyMCSampler& t); { fToyMCSampler = &t; }. void SetParamPoint(const RooArgSet& paramPoint); { fParamPoint.add(paramPoint); }. void SetRandomSeed(unsigned int seed); { fRandomSeed = seed; }. » Author: Sven Kreiss and Kyle Cranmer June 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-02 13:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ToyMCStudy.html:7033,Inherit,Inheritance,7033,root/html602/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html602/RooStats__ToyMCStudy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"toreDetailedOutput(TNamed& object); voidRooAbsStudy::storeSummaryOutput(const RooArgSet& vars). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; RooArgSetfParamPoint; unsigned intfRandomSeed; TStringTNamed::fTitleobject title; RooStats::ToyMCSampler*fToyMCSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t initialize(void). Bool_t execute(void). Bool_t finalize(void). RooDataSet* merge(). ToyMCStudy(const char* name = ""ToyMCStudy"", const char* title = ""ToyMCStudy""); need to have constructor without arguments for proof. RooAbsStudy* clone(const char* = """") const; { return new ToyMCStudy(*this) ; }. virtual ~ToyMCStudy(); {}. void SetToyMCSampler(RooStats::ToyMCSampler& t); { fToyMCSampler = &t; }. void SetParamPoint(const RooArgSet& paramPoint); { fParamPoint.add(paramPoint); }. void SetRandomSeed(unsigned int seed); { fRandomSeed = seed; }. » Author: Sven Kreiss and Kyle Cranmer June 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-02 15:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__ToyMCStudy.html:7033,Inherit,Inheritance,7033,root/html604/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html604/RooStats__ToyMCStudy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tors so we can work with radius 1 hyperspheres. Double_t ApplyKernelFunction(Double_t normalized_distance); from the normalized euclidean distance calculate the distance; for a certain kernel. Double_t KernelNormalization(Double_t pdf); Calculating the normalization factor only once (might need a reset at some point.; Can the method be restarted with different params?). Double_t GetNormalizedDistance(const TMVA::Event& base_event, const TMVA::BinarySearchTreeNode& sample_event, Double_t* dim_normalization); We use Euclidian metric here. Might not be best or most efficient. Double_t NormSinc(Double_t x); NormSinc. Double_t LanczosFilter(Int_t level, Double_t x); Lanczos Filter. Float_t GetError(Float_t countS, Float_t countB, Float_t sumW2S, Float_t sumW2B) const; statistical error estimate for RS estimator. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode). void ReadWeightsFromStream(istream& istr); read weight info from file. void WriteWeightsToStream(TFile& rf) const; write training sample (TTree) to file. void ReadWeightsFromStream(TFile& istr); read training sample from file. TMVA::MethodPDERS* ThisPDERS( void ); static pointer to this object. void UpdateThis( void ); update static this pointer. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". BinarySearchTree* GetBinaryTree( void ); accessors. { return fBinaryTree; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodPDERS.html:25250,variab,variables,25250,root/html534/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodPDERS.html,2,['variab'],['variables']
Modifiability,"tors() const; Float_tGetTarget(UInt_t itgt) const; vector<Float_t>&GetTargets() const; Float_tGetValue(UInt_t ivar) const; const vector<Float_t>&GetValues() const; const vector<UInt_t>*GetVariableArrangement() const; Double_tGetWeight() const; Bool_tIsDynamic() const; TMVA::Event&operator=(const TMVA::Event&); voidPrint(ostream& o) const; voidScaleBoostWeight(Double_t s); voidScaleWeight(Double_t s); voidSetBoostWeight(Double_t w); voidSetClass(UInt_t t); voidSetSpectator(UInt_t ivar, Float_t value); voidSetTarget(UInt_t itgt, Float_t value); voidSetVal(UInt_t ivar, Float_t val); voidSetVariableArrangement(vector<UInt_t> *const m) const; voidSetWeight(Double_t w). Data Members; private:. Double_tfBoostWeightinternal weight to be set by boosting algorithm; UInt_tfClasssignal or background type: signal=1, background=0; Bool_tfDynamicis set when the dynamic values are taken; vector<Float_t>fSpectators""visisting"" variables which are never used for any calculation; vector<Float_t>fTargetstarget values for regression; vector<Float_t>fValuesthe event values; vector<Float_t*>*fValuesDynamicthe event values; vector<UInt_t>*fVariableArrangementneeded for MethodCategories, where we can train on other than the main variables; Double_tfWeightevent weight (product of global and individual weights). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Event(); Create an Event object.; When the constructor is invoked for the first time, the class static; variable fgTracks is 0 and the TClonesArray fgTracks is created. ~Event(). Event(); constructors. Event(const TMVA::Event& ). explicit Event(const vector<Float_t>& values, const vector<Float_t>& targetValues, const vector<Float_t>& spectatorValues, UInt_t theClass = 0, Double_t weight = 1.0, Double_t boostweight = 1.0). explicit Event(const vector<Float_t>& , UInt_t theClass, Double_t weight = 1.0, Double_t boostweight = 1.0). Bool_t IsDynamic() const; accessors. {return fDynamic; }. Double_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Event.html:4991,variab,variables,4991,root/html528/TMVA__Event.html,https://root.cern,https://root.cern/root/html528/TMVA__Event.html,2,['variab'],['variables']
Modifiability,"tors(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. voidCalculatePrincipalComponents(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); voidP2X(vector<Float_t>&, const vector<Float_t>&, Int_t cls) const; voidX2P(vector<Float_t>&, const vector<Float_t>&, Int_t cls) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fEigenVectorseigenvectors; vector<TVectorD*>fMeanValuesmean values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariablePCATransform( DataSetInfo& dsi ); constructor. ~VariablePCATransform(); destructor. void Initialize(); initialization of the transformation.; Has to be called in the preparation and not in the constructor,; since the number of classes it not known at construction, but; only after the creation of the DataSet which might be later. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the principal components using the ROOT clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariablePCATransform.html:8955,variab,variables,8955,root/html530/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html530/TMVA__VariablePCATransform.html,30,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,"tors. ;  . Private Attributes; TLegend * fLegend {nullptr};  !Legend for this piechart ;  ; Float_t * fSlices {nullptr};  !Subdivisions of the slices ;  ; Float_t fSum;  !Sum for the slice values ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPie.h>. Inheritance diagram for TPie:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPie() [1/6]. TPie::TPie ; (; ). Default constructor. ; Definition at line 64 of file TPie.cxx. ◆ TPie() [2/6]. TPie::TPie ; (; const char * ; name, . const char * ; title, . Int_t ; npoints . ). This constructor creates a pie chart when only the number of the slices is known. ; The number of slices is fixed. ; Definition at line 73 of file TPie.cxx. ◆ TPie() [3/6]. TPie::TPie ; (; const char * ; name, . const char * ; title, . Int_t ; npoints, . Double_t * ; vals, . Int_t * ; colors = nullptr, . const char * ; lbls[] = nullptr . ). Normal constructor. ; The 1st and 2nd parameters are the name of the object and its title.; The number of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPie.html:22978,inherit,inherited,22978,doc/master/classTPie.html,https://root.cern,https://root.cern/doc/master/classTPie.html,2,['inherit'],['inherited']
Modifiability,"tors.; a rich interface which provides the user with more functionality such as interaction with parameters. The core of the minimization functionality and related tools (the kernel of M ) should be clearly separated from the user, who is interfacing via defined user interfaces (the API).; 2.3 Internal and external parameters; Each of the parameters to the \(\mbox{FCN}\) is defined by the user as belonging to one of the following types:. Freely variable: allowed to take on any value.; Variable with double sided limits: allowed to vary only between two limits specified by the user.; Variable with single sided limits: allowed to vary only between one upper or one lower limit specified by the user and unlimited to the other side.; Fixed: originally defined as variable, but now taking on only the value the parameter had at the moment it was fixed, or a value later assigned by the user.; Constant: taking on only one value as specified by the user. When using the minimal required interface, all variable parameters are free and unbound.; The user, in his \(\mbox{FCN}\), must of course be able to “see” all types of defined parameters, and he therefore has access to what we call the external parameter list, that is, the parameters as he defined them. On the other hand, the internal M minimizing routines only want to “see” variable parameters without limits, and so they have access only to the internal parameter list which is created from the external list by the following transformation:. Squeeze out all parameters that are not variable.; Transform all variable parameters with limits, so that the transformed parameter can vary without limits. (See the next section for details concerning this transformation.) Because this transformation is non-linear, it is recommended to avoid putting limits on parameters where they are not needed. As an example, suppose that the user has defined the following parameters:. Parameter 0, constant.; Parameter 1, freely variable.; Parameter 2, va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:11206,variab,variable,11206,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['variab'],['variable']
Modifiability,"tors.; a rich interface which provides the user with more functionality such as interaction with parameters. The core of the minimization functionality and related tools (the kernel of M ) should be clearly separated from the user, who is interfacing via defined user interfaces (the API).; 2.3 Internal and external parameters; Each of the parameters to the \(\mbox{FCN}\) is defined by the user as belonging to one of the following types:. Freely variable: allowed to take on any value.; Variable with double sided limits: allowed to vary only between two limits specified by the user.; Variable with single sided limits: allowed to vary only between one upper or one lower limit specified by the user and unlimited to the other side.; Fixed: originally defined as variable, but now taking on only the value the parameter had at the moment it was fixed, or a value later assigned by the user.; Constant: taking on only one value as specified by the user. When using the minimal required interface, all variable parameters are free and unbound.; The user, in their \(\mbox{FCN}\), must of course be able to “see” all types of defined parameters, and they therefore have access to what we call the external parameter list, that is, the parameters as he defined them. On the other hand, the internal M minimizing routines only want to “see” variable parameters without limits, and so they have access only to the internal parameter list which is created from the external list by the following transformation:. Squeeze out all parameters that are not variable.; Transform all variable parameters with limits, so that the transformed parameter can vary without limits. (See the next section for details concerning this transformation.) Because this transformation is non-linear, it is recommended to avoid putting limits on parameters where they are not needed. As an example, suppose that the user has defined the following parameters:. Parameter 0, constant.; Parameter 1, freely variable.; Parameter ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:7170,variab,variable,7170,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,2,['variab'],['variable']
Modifiability,"tors.; public:. virtual~IGradientFunctionOneDim(); virtual ROOT::Math::IBaseFunctionOneDim*ROOT::Math::IBaseFunctionOneDim::Clone() const; doubleROOT::Math::IGradientOneDim::Derivative(double x) const; doubleROOT::Math::IGradientOneDim::Derivative(const double* x) const; virtual voidFdF(double x, double& f, double& df) const; voidROOT::Math::IGradientOneDim::Gradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(); ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(const ROOT::Math::IBaseFunctionOneDim&); ROOT::Math::IGradientFunctionOneDimIGradientFunctionOneDim(); ROOT::Math::IGradientFunctionOneDimIGradientFunctionOneDim(const ROOT::Math::IGradientFunctionOneDim&); ROOT::Math::IGradientOneDimROOT::Math::IGradientOneDim::IGradientOneDim(); ROOT::Math::IGradientOneDimROOT::Math::IGradientOneDim::IGradientOneDim(const ROOT::Math::IGradientOneDim&); doubleROOT::Math::IBaseFunctionOneDim::operator()(double x) const; doubleROOT::Math::IBaseFunctionOneDim::operator()(const double* x) const; ROOT::Math::IGradientFunctionOneDim&operator=(const ROOT::Math::IGradientFunctionOneDim&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void FdF(double x, double& f, double& df) const. Optimized method to evaluate at the same time the function value and derivative at a point x.; Often both value and derivatives are needed and it is often more efficient to compute them at the same time.; Derived class should implement this method if performances play an important role and if it is faster to; evaluate value and derivative at the same time. virtual ~IGradientFunctionOneDim(). Virtual Destructor (no operations). {}. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__IGradientFunctionOneDim.html:2377,Inherit,Inheritance,2377,root/html602/ROOT__Math__IGradientFunctionOneDim.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__IGradientFunctionOneDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tors.; public:. virtual~IGradientFunctionOneDim(); virtual ROOT::Math::IBaseFunctionOneDim*ROOT::Math::IBaseFunctionOneDim::Clone() const; doubleROOT::Math::IGradientOneDim::Derivative(double x) const; doubleROOT::Math::IGradientOneDim::Derivative(const double* x) const; virtual voidFdF(double x, double& f, double& df) const; voidROOT::Math::IGradientOneDim::Gradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(); ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(const ROOT::Math::IBaseFunctionOneDim&); ROOT::Math::IGradientFunctionOneDimIGradientFunctionOneDim(); ROOT::Math::IGradientFunctionOneDimIGradientFunctionOneDim(const ROOT::Math::IGradientFunctionOneDim&); ROOT::Math::IGradientOneDimROOT::Math::IGradientOneDim::IGradientOneDim(); ROOT::Math::IGradientOneDimROOT::Math::IGradientOneDim::IGradientOneDim(const ROOT::Math::IGradientOneDim&); doubleROOT::Math::IBaseFunctionOneDim::operator()(double x) const; doubleROOT::Math::IBaseFunctionOneDim::operator()(const double* x) const; ROOT::Math::IGradientFunctionOneDim&operator=(const ROOT::Math::IGradientFunctionOneDim&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void FdF(double x, double& f, double& df) const. Optimized method to evaluate at the same time the function value and derivative at a point x.; Often both value and derivatives are needed and it is often more efficient to compute them at the same time.; Derived class should implement this method if performances play an important role and if it is faster to; evaluate value and derivative at the same time. virtual ~IGradientFunctionOneDim(). Virtual Destructor (no operations). {}. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__IGradientFunctionOneDim.html:2377,Inherit,Inheritance,2377,root/html604/ROOT__Math__IGradientFunctionOneDim.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__IGradientFunctionOneDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tors; Default constructor of GSL Integrator for Adaptive Singular integration. @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. GSLIntegrator(const ROOT::Math::IntegrationOneDim::Type type, double absTol = 1.E-9, double relTol = 1E-6, size_t size = 1000); constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. GSLIntegrator(const Integration::Type type, const Integration::GKRule rule, double absTol = 1.E-9, double relTol = 1E-6, size_t size = 1000). generic constructor for GSL Integrator. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule. It is used only for ADAPTIVE::Integration types. The possible rules are defined in the Integration::GKRule enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. GSLIntegrator(const char* type, int rule, double absTol, double relTol, size_t size); constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used; This is used by the plug-in manager (need a char * instead of enumerations). @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule (from 1 to 6); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. virtual ~GSLIntegrator(); ~GSLIntegrator();. GSLIntegrator(const ROOT::Math::GSLIntegrator& ); disable copy ctrs. GSLIntegrator & operator=(const ROOT::Math::GSLIntegrator& ). void SetFunction(const ROOT::Math::IGenFunction& f); template met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLIntegrator.html:5737,ADAPT,ADAPTIVE,5737,root/html532/ROOT__Math__GSLIntegrator.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLIntegrator.html,2,['ADAPT'],['ADAPTIVE']
Modifiability,"tory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fBasicUrl;  ; TString fBasicUrlOrg;  ; void * fFullCache;  ; Long64_t fFullCacheSize;  complete content of the file, some http server may return complete content ;  ; Bool_t fHasModRoot;  ; Bool_t fHTTP11;  ; TString fMsgGetHead;  ; TString fMsgReadBuffer;  ; TString fMsgReadBuffer10;  ; Bool_t fNoProxy;  ; TUrl fProxy;  ; Long64_t fSize;  ; TSocket * fSocket;  ; TUrl fUrlOrg;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:34860,inherit,inherited,34860,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['inherit'],['inherited']
Modifiability,"tory containing query results and status; TProofLockPath*fQueryLockQuery dir locker; TStringfSandboxPROOF sandbox root dir; TStringfSelectionInternal variable to pass drawing options; TServerSocket*fServSockServer socket to accept call backs; TStringfSockPathUNIX socket path for communication with workers; TStringfVarExpInternal variable to pass drawing options; static Int_tfgWrksMaxMax number of workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofLite(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. ~TProofLite(); Destructor. Int_t GetNumberOfWorkers(const char* url = 0); Static method to determine the number of workers giving priority to users request.; Otherwise",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofLite.html:25705,config,config,25705,root/html530/TProofLite.html,https://root.cern,https://root.cern/root/html530/TProofLite.html,6,['config'],"['config', 'configurations']"
Modifiability,"tory);; //now all objects in gDirectory will be written to ""myfile.root""; pFile->Write();; }; gDirectory#define gDirectoryDefinition TDirectory.h:384; TEfficiency::SetDirectoryvoid SetDirectory(TDirectory *dir)Sets the directory holding this TEfficiency object.Definition TEfficiency.cxx:3530; TFile::WriteInt_t Write(const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) overrideWrite memory objects to this file.Definition TFile.cxx:2436; In case you already have two filled histograms and you only want to plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt) to create a graph object. III. Filling with events; You can fill the TEfficiency object by calling the TEfficiency::Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method. The ""bPassed"" boolean flag indicates whether the current event is good (both histograms are filled) or not (only TEfficiency::fTotalHistogram is filled). The x, y and z variables determine the bin which is filled. For lower dimensions, the z- or even the y-value may be omitted.; {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);; ; //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;; ; bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }; ; pEff->Draw(""AP"");; }; kWhite@ kWhiteDefinition Rtypes.h:65; TCanvasThe Canvas class.Definition TCanvas.h:23; TEfficiency::Drawvoid Draw(Option_t *opt="""") overrideDraws the current TEfficiency object.Definition TEfficiency.cxx:2410; TEfficiency::Fillvoid Fill(Bool_t bPassed, Double_t x, Double_t y=0, Double_t z=0)This fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEfficiency.html:6378,variab,variables,6378,doc/master/classTEfficiency.html,https://root.cern,https://root.cern/doc/master/classTEfficiency.html,1,['variab'],['variables']
Modifiability,"tory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); voidSetNodeMinEvents(Int_t d); voidSetNodePurityLimit(Double_t l); voidSetNTrees(Int_t d); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidSetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); Double_tTestTreeQuality(TMVA::DecisionTree* dt); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBDT.html:16999,Config,Configurable,16999,root/html532/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBDT.html,1,['Config'],['Configurable']
Modifiability,"tory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const; voidWriteWeightsToStream(TFile& fout) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodSVM.html:12604,Config,Configurable,12604,root/html532/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodSVM.html,1,['Config'],['Configurable']
Modifiability,"tory* theTargetDir = NULL); TMVA::MethodKNNMethodKNN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""KNN"", TDirectory* theTargetDir = NULL); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& rf); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodKNN.html:9103,Config,Configurable,9103,root/html534/TMVA__MethodKNN.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodKNN.html,1,['Config'],['Configurable']
Modifiability,"tory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLayoutManager; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TList * fList;  ; TGTab * fMain;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . Private Member Functions;  TGTabLayout (const TGTabLayout &)=delete;  ; TGTabLayout & operator= (const TGTabLayout &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTabLayout.html:9689,inherit,inherited,9689,doc/master/classTGTabLayout.html,https://root.cern,https://root.cern/doc/master/classTGTabLayout.html,1,['inherit'],['inherited']
Modifiability,"tory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TCollection * fFolders;  ; Bool_t fIsOwner;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TFolder (const TFolder &folder)=delete;  ; void operator= (const TFolder &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFolder.html:15551,inherit,inherited,15551,doc/master/classTFolder.html,https://root.cern,https://root.cern/doc/master/classTFolder.html,1,['inherit'],['inherited']
Modifiability,"tory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetBrowsables (TList &list, const TBranch *branch, const TVirtualBranchBrowsable *parent=nullptr);  If the element to browse (given by either parent of branch) contains a collection (TClonesArray or something for which a TVirtualCollectionProxy exists), we will add some special objects to the browser. ;  ; static void Register ();  Wrapper for the registration method. ;  ; static void Unregister ();  Wrapper for the registration method. ;  ;  Static Public Member Functions inherited from TVirtualBranchBrowsable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FillListOfBrowsables (TList &list, const TBranch *branch, const TVirtualBranchBrowsable *parent=nullptr);  Askes all registered generators to fill their browsables into the list. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TCollectionPropertyBrowsa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollectionPropertyBrowsable.html:11510,inherit,inherited,11510,doc/master/classTCollectionPropertyBrowsable.html,https://root.cern,https://root.cern/doc/master/classTCollectionPropertyBrowsable.html,1,['inherit'],['inherited']
Modifiability,"tory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fJobID;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGridJob.h>. Inheritance diagram for TGridJob:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJob.html:9212,inherit,inherited,9212,doc/master/classTGridJob.html,https://root.cern,https://root.cern/doc/master/classTGridJob.html,1,['inherit'],['inherited']
Modifiability,"tory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TServerSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UChar_t GetAcceptOptions ();  Return default options for Accept. ;  ; static void SetAcceptOptions (UChar_t Opt);  Set default options for Accept according to modifier 'mod'. ;  ; static void ShowAcceptOptions ();  Print default options for Accept. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t GetSocketBytesRecv ();  Get total number of bytes received via all sockets. ;  ; static ULong64_t GetSocketBytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPServerSocket.html:14720,inherit,inherited,14720,doc/master/classTPServerSocket.html,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html,1,['inherit'],['inherited']
Modifiability,"tory::GetObjectChecked ; (; const char * ; namecycle, . const char * ; classname . ). virtual . See documentation of TDirectory::GetObjectCheck(const char *namecycle, const TClass *cl) ; Reimplemented in TDirectoryFile.; Definition at line 929 of file TDirectory.cxx. ◆ GetObjectChecked() [2/2]. void * TDirectory::GetObjectChecked ; (; const char * ; namecycle, . const TClass * ; expectedClass . ). virtual . Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to the type described by the 2 arguments (i.e. cl): MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; Note: We recommend using the method TDirectory::GetObject: MyClass *obj = nullptr;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }; whatstatic const char * whatDefinition stlLoader.cc:5. Reimplemented in TDirectoryFile.; Definition at line 958 of file TDirectory.cxx. ◆ GetObjectUnchecked(). void * TDirectory::GetObjectUnchecked ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to the final type, e.g. MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. Reimplemented in TDirectoryFile.; Definition at line 921 of file TDirectory.cxx. ◆ GetPath(). const char * TDirectory::GetPath ; (; ); const. virtual . Returns the full",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:38583,inherit,inheriting,38583,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,2,['inherit'],['inheriting']
Modifiability,"tory::HistoSysHistoSys(const string& Name); RooStats::HistFactory::HistoSysHistoSys(const RooStats::HistFactory::HistoSys&); RooStats::HistFactory::HistoSys&operator=(const RooStats::HistFactory::HistoSys&); voidPrint(ostream& = std::cout); voidPrintXML(ostream&); voidSetHistoHigh(TH1* High); voidSetHistoLow(TH1* Low); voidSetHistoNameHigh(const string& HistoNameHigh); voidSetHistoNameLow(const string& HistoNameLow); voidSetHistoPathHigh(const string& HistoPathHigh); voidSetHistoPathLow(const string& HistoPathLow); voidSetInputFileHigh(const string& InputFileHigh); voidSetInputFileLow(const string& InputFileLow); voidSetName(const string& Name); voidwriteToFile(const string& FileName, const string& DirName). Data Members; protected:. stringfHistoNameHigh; stringfHistoNameLow; stringfHistoPathHigh; stringfHistoPathLow; stringfInputFileHigh; stringfInputFileLow; stringfName; RooStats::HistFactory::HistReffhHigh; RooStats::HistFactory::HistReffhLow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetName(const string& Name); { fName = Name; }. std::string GetName(); { return fName; }. void Print(ostream& = std::cout). void PrintXML(ostream& ). HistoSys(); {;}. HistoSys(const std::string& Name); {;}. void writeToFile(const string& FileName, const string& DirName). void SetHistoLow(TH1* Low); { fhLow = Low; }. void SetHistoHigh(TH1* High); { fhHigh = High; }. TH1* GetHistoLow(). TH1* GetHistoHigh(). void SetInputFileLow(const string& InputFileLow); { fInputFileLow = InputFileLow; }. void SetInputFileHigh(const string& InputFileHigh); { fInputFileHigh = InputFileHigh; }. std::string GetInputFileLow(); { return fInputFileLow; }. std::string GetInputFileHigh(); { return fInputFileHigh; }. void SetHistoNameLow(const string& HistoNameLow); { fHistoNameLow = HistoNameLow; }. void SetHistoNameHigh(const string& HistoNameHigh); { fHistoNameHigh = HistoNameHigh; }. std::string GetHistoNameLow(); { return fHistoNameLow; }. std::string",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__HistoSys.html:1617,Inherit,Inheritance,1617,root/html534/RooStats__HistFactory__HistoSys.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__HistoSys.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tpServer::THttpServer ; (; const char * ; engine = ""http:8080""). constructor ; As argument, one specifies engine kind which should be created like ""http:8080"". One could specify several engines at once, separating them with semicolon ("";""). Following engines are supported: http - TCivetweb, civetweb-based implementation of http protocol; fastcgi - TFastCgi, special protocol for communicating with web servers; For each created engine one should provide socket port number like ""http:8080"" or ""fastcgi:9000"". Additional engine-specific options can be supplied with URL syntax like ""http:8080?thrds=10"". Full list of supported options should be checked in engines docu.; One also can configure following options, separated by semicolon: readonly, ro - set read-only mode (default); readwrite, rw - allows methods execution of registered objects; global - scans global ROOT lists for existing objects (default); noglobal - disable scan of global lists; cors - enable CORS header with origin=""*""; cors=domain - enable CORS header with origin=""domain""; basic_sniffer - use basic sniffer without support of hist, gpad, graph classes; For example, create http server, which allows cors headers and disable scan of global lists, one should provide ""http:8080;cors;noglobal"" as parameter; THttpServer uses JavaScript ROOT (https://root.cern/js) to implement web clients UI. Normally JSROOT sources are used from $ROOTSYS/js directory, but one could set JSROOTSYS shell variable to specify alternative location ; Definition at line 160 of file THttpServer.cxx. ◆ ~THttpServer(). THttpServer::~THttpServer ; (; ). virtual . destructor ; delete all http engines and sniffer ; Definition at line 245 of file THttpServer.cxx. Member Function Documentation. ◆ AddLocation(). void THttpServer::AddLocation ; (; const char * ; prefix, . const char * ; path . ). Add files location, which could be used in the server. ; One could map some system folder to the server like serv->AddLocation(""mydir/"", ""/home/user/spe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpServer.html:20577,config,configure,20577,doc/master/classTHttpServer.html,https://root.cern,https://root.cern/doc/master/classTHttpServer.html,1,['config'],['configure']
Modifiability,"tput() const; TDocParser*GetDocParser() const; THtml*GetHtml() const; virtual const char*GetName() const; voidGetName(TString& name) const; const char*GetOutputDir() const; voidTObject::MakeZombie(); voidSetCounter(Int_t count); voidSetParameters(const char* params); voidSetParser(TDocParser* parser); voidSetTag(const char* tag). private:. (unknown)(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfCountercounter to generate unique names, -1 to ignore; TDocOutput*fDocOutputparser invoking this handler; TDocParser*fDocParserparser invoking this handler; THtml*fHtmlparser's THtml object; TStringTNamed::fNameobject identifier; TStringfParametersparameters to the directive; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DeleteOutputFiles(const char* ext) const; Delete all output generated by the directive beginning; with Name() and ending with ext. void GetName(TString& name) const; Get the full name, based on fName, fTitle, fDocParser's tag. const char* GetOutputDir() const; Get the directory for documentation output. void SetParameters(const char* params); Given a string containing parameters in params,; we call AddParameter() for each of them.; This function splits the parameter names and; extracts their values if they are given.; Parameters are separated by "","", values are; separated from parameter names by ""="".; params being; a = ""a, b, c"", b='d,e'; will issue two calls to AddParameter(), one for; a with value ""a, b, c"" and one for b with value; ""d,e"" (each without the quotation marks). void SetParser(TDocParser* parser); Set the parser, and fDocOutput, fHtml from that. void AddParameter(const TString& , const char* = 0); {}. const char* Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocDirective.html:7199,Inherit,Inheritance,7199,root/html532/TDocDirective.html,https://root.cern,https://root.cern/root/html532/TDocDirective.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tr() );; 201 ; 202 Init();; 203}; 204 ; 205////////////////////////////////////////////////////////////////////////////////; 206/// constructor; 207 ; 208TMVA::Reader::Reader( const std::string& varNames, const TString& theOption, Bool_t verbose ); 209 : Configurable( theOption ),; 210 fDataSetManager( NULL ), // DSMTEST; 211 fDataSetInfo(),; 212 fVerbose( verbose ),; 213 fSilent ( kFALSE ),; 214 fColor ( kFALSE ),; 215 fCalculateError(kFALSE),; 216 fMvaEventError( 0 ),; 217 fMvaEventErrorUpper( 0 ),; 218 fLogger ( 0 ); 219{; 220 fDataSetManager = new DataSetManager( fDataInputHandler );; 221 fDataSetManager->AddDataSetInfo(fDataSetInfo);; 222 fLogger = new MsgLogger(this);; 223 SetConfigName( GetName() );; 224 DeclareOptions();; 225 ParseOptions();; 226 ; 227 // arguments: names of input variables given in form: ""name1:name2:name3""; 228 // verbose flag; 229 DecodeVarNames(varNames);; 230 Init();; 231}; 232 ; 233////////////////////////////////////////////////////////////////////////////////; 234/// constructor; 235 ; 236TMVA::Reader::Reader( const TString& varNames, const TString& theOption, Bool_t verbose ); 237 : Configurable( theOption ),; 238 fDataSetManager( NULL ), // DSMTEST; 239 fDataSetInfo(),; 240 fVerbose( verbose ),; 241 fSilent ( kFALSE ),; 242 fColor ( kFALSE ),; 243 fCalculateError(kFALSE),; 244 fMvaEventError( 0 ),; 245 fMvaEventErrorUpper( 0 ),; 246 fLogger ( 0 ); 247{; 248 fDataSetManager = new DataSetManager( fDataInputHandler );; 249 fDataSetManager->AddDataSetInfo(fDataSetInfo);; 250 fLogger = new MsgLogger(this);; 251 SetConfigName( GetName() );; 252 DeclareOptions();; 253 ParseOptions();; 254 ; 255 // arguments: names of input variables given in form: ""name1:name2:name3""; 256 // verbose flag; 257 DecodeVarNames(varNames);; 258 Init();; 259}; 260 ; 261////////////////////////////////////////////////////////////////////////////////; 262/// declaration of configuration options; 263 ; 264void TMVA::Reader::DeclareOptions(); 265{; 266 if (gTools().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:8602,variab,variables,8602,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"tr) ;; 1308 pc.defineString(""dsetName"",""Name"",0,"""") ;; 1309 pc.defineInt(""randProto"",""PrototypeData"",0,0) ;; 1310 pc.defineInt(""resampleProto"",""PrototypeData"",1,0) ;; 1311 pc.defineInt(""verbose"",""Verbose"",0,0) ;; 1312 pc.defineInt(""extended"",""Extended"",0,0) ;; 1313 pc.defineInt(""nEvents"",""NumEvents"",0,0) ;; 1314 pc.defineInt(""autoBinned"",""AutoBinned"",0,1) ;; 1315 pc.defineString(""binnedTag"",""GenBinned"",0,"""") ;; 1316 pc.defineMutex(""GenBinned"",""ProtoData"") ;; 1317 ; 1318 ; 1319 // Process and check varargs; 1320 pc.process(arg1,arg2,arg3,arg4,arg5,arg6) ;; 1321 if (!pc.ok(true)) {; 1322 return nullptr ;; 1323 }; 1324 ; 1325 // Decode command line arguments; 1326 RooDataSet* protoData = static_cast<RooDataSet*>(pc.getObject(""proto"",nullptr)) ;; 1327 const char* dsetName = pc.getString(""dsetName"") ;; 1328 Int_t nEvents = pc.getInt(""nEvents"") ;; 1329 bool verbose = pc.getInt(""verbose"") ;; 1330 bool randProto = pc.getInt(""randProto"") ;; 1331 bool resampleProto = pc.getInt(""resampleProto"") ;; 1332 bool extended = pc.getInt(""extended"") ;; 1333 bool autoBinned = pc.getInt(""autoBinned"") ;; 1334 const char* binnedTag = pc.getString(""binnedTag"") ;; 1335 ; 1336 RooAbsGenContext* cx = autoGenContext(whatVars,protoData,nullptr,verbose,autoBinned,binnedTag) ;; 1337 ; 1338 return new GenSpec(cx,whatVars,protoData,nEvents,extended,randProto,resampleProto,dsetName) ;; 1339}; 1340 ; 1341 ; 1342////////////////////////////////////////////////////////////////////////////////; 1343/// If many identical generation requests; 1344/// are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); 1345/// combination than calling the standard generate() multiple times as; 1346/// initialization overhead is only incurred once.; 1347 ; 1348RooFit::OwningPtr<RooDataSet> RooAbsPdf::generate(RooAbsPdf::GenSpec& spec) const; 1349{; 1350 //Int_t nEvt = spec._extended ? RooRandom::randomGenerator()->Poisson(spec._nGen) : spec._nGen ;; 1351 //Int_t nEvt = spec._extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:65537,extend,extended,65537,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,tr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTableCell; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableHeader.html:21486,inherit,inherited,21486,doc/master/classTGTableHeader.html,https://root.cern,https://root.cern/doc/master/classTGTableHeader.html,1,['inherit'],['inherited']
Modifiability,"tr, Double_t *errUpper=nullptr);  return composite MVA response ;  ; virtual Double_t GetMvaValue (Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  text streamer ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  XML streamer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; virtual void DeclareCompatibilityOptions ();  options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .xml weight file at hand ;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html:3458,inherit,inherited,3458,doc/master/classTMVA_1_1MethodCategory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html,1,['inherit'],['inherited']
Modifiability,"tr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/HistFactory/Measurement.h>. Inheritance diagram for RooStats::HistFactory::Measurement:. This browser is not a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1Measurement.html:12709,inherit,inherited,12709,doc/master/classRooStats_1_1HistFactory_1_1Measurement.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1Measurement.html,2,['inherit'],['inherited']
Modifiability,"tr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fE;  ; TVector3 fP;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLorentzVector.h>. Inheritance diagram for TLorentzVector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Scalar. typedef Double_t TLorentzVector::Scalar. Definition at line 40 of file TLorentzVector.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkX ; kY ; kZ ; kT ; kNUM_COORDINATES ; kSIZE . Definition at line 42 of file TLorentzVector.h. Constructor & Destructor Documentation. ◆ TLorentzVector() [1/6]. TLorentzVector::TLorentzVector ; (; ). inline . Definition at line 608 of file TLorentzVector.h. ◆ TLorentzVector() [2/6]. TLorentzVector::TLorentzVector ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Double_t ; t . ). inline . Definition at line 611 of file TLorentzVector.h. ◆ TL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLorentzVector.html:21473,inherit,inherited,21473,doc/master/classTLorentzVector.html,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html,2,['inherit'],['inherited']
Modifiability,"tr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGLPaintDevice; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGLWidget (Window_t glw, const TGWindow *parent, Bool_t selectInput);  Creates widget with default pixel format. ;  ; void AddContext (TGLContext *ctx) override;  Register gl-context created for this window. ;  ; std::pair< void *, void * > GetInnerData () const;  Dpy*, XVisualInfo *. ;  ; void RemoveContext (TGLContext *ctx) override;  Remove context (no real deletion, done by TGLContex dtor). ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static Window_t CreateWin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:25036,inherit,inherited,25036,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['inherit'],['inherited']
Modifiability,tr. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » TFitResultPtr. class TFitResultPtr. Function Members (Methods); public:. virtual~TFitResultPtr(); static TClass*Class(); TFitResult*Get() const; virtual TClass*IsA() const; intoperator int() const; TFitResult&operator*() const; TFitResult*operator->() const; TFitResultPtr&operator=(const TFitResultPtr& rhs); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TFitResultPtr(int status = -1); TFitResultPtr(const shared_ptr<TFitResult>& p); TFitResultPtr(TFitResult* p); TFitResultPtr(const TFitResultPtr& rhs). Data Members; private:. shared_ptr<TFitResult>fPointer! Smart Pointer to TFitResult class; intfStatusfit status code. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitResultPtr(const std::shared_ptr<TFitResult> & p); constructor from a TFitResult pointer. TFitResultPtr(TFitResult* p); constructor from a TFitResult pointer. TFitResultPtr(const TFitResultPtr& rhs). ~TFitResultPtr(); destructor - delete the contained TFitResult pointer if needed; if ( fPointer != 0); delete fPointer;. TFitResult& operator*() const; implement the de-reference operator to make the class acts as a pointer to a TFitResult; assert in case the class does not contain a pointer to TFitResult. TFitResult* operator->() const; implement the -> operator to make the class acts as a pointer to a TFitResult; assert in case the class does not contain a pointer to TFitResult. TFitResult * Get() const; return contained pointer. TFitResultPtr & operator=(const TFitResultPtr& rhs); assignment operator; if needed copy the TFitResult object and delete previous one if existing. TFitResultPtr(int status = -1); {}. operator int() const; { ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFitResultPtr.html:988,Inherit,Inheritance,988,root/html604/TFitResultPtr.html,https://root.cern,https://root.cern/root/html604/TFitResultPtr.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tr;  ! Array of summed Y high errors for fitting ;  ; std::vector< TArrayD > fEyL;  Two dimensional array of Y low errors. ;  ; Double_t * fEyLSum = nullptr;  ! Array of summed Y low errors for fitting ;  ; Int_t fNYErrors;  The amount of different y-errors. ;  ; Int_t fSumErrorsMode;  How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum = Absolute Addition. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  . #include <TGraphMultiErrors.h>. Inheritance diagram for TGraphMultiErrors:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESummationMod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:43520,inherit,inherited,43520,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,2,['inherit'],['inherited']
Modifiability,"tr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoOpticalSurface.h>. Inheritance diagram for TGeoBorderSurface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoBorderSurface() [1/2]. TGeoBorderSurface::TGeoBorderSurface ; (; ). inline . Definition at line 212 of file TGeoOpticalSurface.h. ◆ TGeoBorderSurface() [2/2]. TGeoBorderSurface::TGeoBorderSurface ; (; const char * ; name, . const char * ; ref, . TGeoOpticalSurface const * ; surf, . TGeoNode const * ; node1, . TGeoNode const * ; node2 . ). inline . Definition at line 213 of file TGeoOpticalSurface.h. ◆ ~TGeoBorderSurface(). TGeoBorderSurface::~TGeoBorderSurface ; (; ). inlineoverride . Definition at line 218 of file TGeoOpticalSurface.h. Member Function Documentation. ◆ Class(). static TClass * TGeoBorderSurface::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoBord",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBorderSurface.html:11552,inherit,inherited,11552,doc/master/classTGeoBorderSurface.html,https://root.cern,https://root.cern/doc/master/classTGeoBorderSurface.html,1,['inherit'],['inherited']
Modifiability,"tr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoOpticalSurface.h>. Inheritance diagram for TGeoSkinSurface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoSkinSurface() [1/2]. TGeoSkinSurface::TGeoSkinSurface ; (; ). inline . Definition at line 182 of file TGeoOpticalSurface.h. ◆ TGeoSkinSurface() [2/2]. TGeoSkinSurface::TGeoSkinSurface ; (; const char * ; name, . const char * ; ref, . TGeoOpticalSurface const * ; surf, . TGeoVolume const * ; vol . ). inline . Definition at line 183 of file TGeoOpticalSurface.h. ◆ ~TGeoSkinSurface(). TGeoSkinSurface::~TGeoSkinSurface ; (; ). inlineoverride . Definition at line 187 of file TGeoOpticalSurface.h. Member Function Documentation. ◆ Class(). static TClass * TGeoSkinSurface::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoSkinSurface::Class_Name ; (; ). static . ReturnsName o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSkinSurface.html:11448,inherit,inherited,11448,doc/master/classTGeoSkinSurface.html,https://root.cern,https://root.cern/doc/master/classTGeoSkinSurface.html,1,['inherit'],['inherited']
Modifiability,"tr;  ; Bool_t fCorrelations;  ; TString fCvFactoryOptions;  ; Bool_t fDrawProgressBar;  ; std::unique_ptr< Factory > fFactory;  ; std::unique_ptr< Factory > fFoldFactory;  ; Bool_t fFoldFileOutput;  ! If true: generate output file for each fold ;  ; Bool_t fFoldStatus;  ! If true: dataset is prepared ;  ; TString fJobName;  ; UInt_t fNumFolds;  ! Number of folds to prepare ;  ; UInt_t fNumWorkerProcs;  ! Number of processes to use for fold evaluation. (Default, no parallel evaluation) ;  ; TString fOutputEnsembling;  ! How to combine output of individual folds ;  ; TString fOutputFactoryOptions;  ; TFile * fOutputFile;  ; std::vector< CrossValidationResult > fResults;  ! ;  ; Bool_t fROC;  ; Bool_t fSilent;  ; std::unique_ptr< CvSplitKFolds > fSplit;  ; TString fSplitExprString;  ; TString fSplitTypeStr;  ; TString fTransformations;  ; Bool_t fVerbose;  ; TString fVerboseLevel;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::Envelope;  Envelope (const TString &name, DataLoader *dataloader=nullptr, TFile *file=nullptr, const TString options="""");  Constructor for the initialization of Envelopes, differents Envelopes may needs differents constructors then this is a generic one protected. ;  ; DataInputHandler & GetDataLoader",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CrossValidation.html:16288,inherit,inherited,16288,doc/master/classTMVA_1_1CrossValidation.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CrossValidation.html,1,['inherit'],['inherited']
Modifiability,"tr< RooArgSet > actualObservables (const RooArgSet &nset) const =0;  ; virtual RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const =0;  ; virtual const char * binningName () const;  ; std::string cacheNameSuffix (const RooArgSet &nset) const;  Construct string with unique suffix for cache objects based on observable names that define cache configuration. ;  ; virtual PdfCacheElem * createCache (const RooArgSet *nset) const;  ; void disableCache (bool flag);  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; virtual void fillCacheObject (PdfCacheElem &cache) const =0;  ; PdfCacheElem * getCache (const RooArgSet *nset, bool recalculate=true) const;  Retrieve cache object associated with given choice of observables. ;  ; virtual TString histNameSuffix () const;  ; virtual const char * inputBaseName () const =0;  ; virtual const char * payloadUniqueSuffix () const;  ; virtual RooAbsArg & pdfObservable (RooAbsArg &histObservable) const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedPdf.html:63731,inherit,inherited,63731,doc/master/classRooAbsCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedPdf.html,1,['inherit'],['inherited']
Modifiability,"tr=nullptr, const TGPicture *pic=nullptr, UInt_t w=0, Style_t s=0, UInt_t options=kHorizontalFrame, Pixel_t back=GetWhitePixel());  Create the icon & text listbox entry. ;  ;  ~TGIconLBEntry () override;  Delete icon & text listbox entry. ;  ; void DrawCopy (Handle_t id, Int_t x, Int_t y) override;  Draw copy on window/pixmap. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; const TGPicture * GetPicture () const;  ; TClass * IsA () const override;  ; virtual void SetPicture (const TGPicture *pic=nullptr);  Change the icon of listbox entry containing icon & text. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (TGLBEntry *e) override;  Update icon & text listbox entry. ;  ;  Public Member Functions inherited from TGTextLBEntry;  TGTextLBEntry (const TGWindow *p=nullptr, TGString *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t options=kHorizontalFrame, Pixel_t back=GetWhitePixel());  Create a text listbox entry. The TGString is adopted. ;  ;  ~TGTextLBEntry () override;  Delete text listbox entry. ;  ; void DrawCopy (Handle_t id, Int_t x, Int_t y) override;  Draw text listbox entry on window/pixmap. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; FontStruct_t GetFontStruct () const;  ; GContext_t GetNormGC () const;  ; const TGString * GetText () const;  ; const char * GetTitle () const override;  Returns title of object. ;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save a list box entry widget as a C++ statement(s) on output stream out. ;  ; void SetText (TGString *new_text);  Set or change text in text entry. ;  ; virtual void SetTitle (const char *text);  ; void Streamer (TBuffer &) override;  Stream an object of class T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIconLBEntry.html:1413,inherit,inherited,1413,doc/master/classTGIconLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGIconLBEntry.html,1,['inherit'],['inherited']
Modifiability,"trCallFuncSignature fHessFuncPtr! Function pointer, owned by the JIT.Definition TFormula.h:109; TFormula::GetParameterDouble_t GetParameter(const char *name) constReturns parameter value given by string.Definition TFormula.cxx:2833; TFormula::PrepareFormulaBool_t PrepareFormula(TString &formula)prepare the formula to be executed normally is called with fFormulaDefinition TFormula.cxx:1793; TFormula::fClingInitializedstd::atomic< Bool_t > fClingInitialized! Transient to force re-initializationDefinition TFormula.h:97; TFormula::GradientParvoid GradientPar(const Double_t *x, TFormula::CladStorage &result)Compute the gradient employing automatic differentiation.Definition TFormula.cxx:3222; TFormula::FillDefaultsvoid FillDefaults()Fill structures with default variables, constants and function shortcuts.Definition TFormula.cxx:902; TFormula::GetHessianFormulaTString GetHessianFormula() constDefinition TFormula.cxx:3602; TFormula::Clearvoid Clear(Option_t *option="""") overrideClear the formula setting expression to empty and reset the variables and parameters containers.Definition TFormula.cxx:767; TFormula::GetLinearPartconst TObject * GetLinearPart(Int_t i) constReturn linear part.Definition TFormula.cxx:2553; TFormula::InputFormulaIntoClingvoid InputFormulaIntoCling()Inputs formula, transfered to C++ code into Cling.Definition TFormula.cxx:876; TFormula::DoAddParametervoid DoAddParameter(const TString &name, Double_t value, bool processFormula)Adds parameter to known parameters.Definition TFormula.cxx:2743; TFormula::HandleLinearvoid HandleLinear(TString &formula)Handle linear functions defined with the operator ++.Definition TFormula.cxx:1735; TFormula::fClingNameTString fClingName! Unique name passed to Cling to define the function ( double clingName(double*x, double*p) )Definition TFormula.h:101; TFormula::GetVarNameTString GetVarName(Int_t ivar) constReturns variable name given its position in the array.Definition TFormula.cxx:2712; TFormula::SetVariablevoid SetVari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:153601,variab,variables,153601,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"trPtr = (strstr(config->fCompInfo->fElem->GetTypeName(), ""**"") != 0);; 670 ; 671 // By default assume the file version is the newest.; 672 Int_t fileVersion = kMaxInt;; 673 if (!kIsTextT) {; 674 // At this point we do *not* have a private streamer.; 675 // Get the version of the file we are reading from.; 676 TFile* file = (TFile*) buf.GetParent();; 677 if (file) {; 678 fileVersion = file->GetVersion();; 679 }; 680 }; 681 // Read the class version and byte count from the buffer.; 682 UInt_t start = 0;; 683 UInt_t count = 0;; 684 buf.ReadVersion(&start, &count, cl);; 685 if (fileVersion > 51508) {; 686 // -- Newer versions allow polymorphic pointers.; 687 // Loop over the entries in the clones array or the STL container.; 688 // for (Int_t k = 0; k < narr; ++k) {; 689 // Get the counter for the varying length array.; 690 Int_t vlen = *((Int_t *)((char *)addr /*entry pointer*/ + eoffset /*entry offset*/ +; 691 config->fCompInfo->fMethod /*counter offset*/));; 692 // Int_t realLen;; 693 // b >> realLen;; 694 // if (realLen != vlen) {; 695 // fprintf(stderr, ""read vlen: %d realLen: %s\n"", vlen, realLen);; 696 //}; 697 // Get a pointer to the array of pointers.; 698 char **pp = (char **)((char *)addr /*entry pointer*/ + ioffset /*object offset*/);; 699 // Loop over each element of the array of pointers to varying-length arrays.; 700 // if (!pp) {; 701 // continue;; 702 // }; 703 ; 704 if (pp) // SL: place it here instead of continue, which is related to for(k) loop; 705 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx) {; 706 // if (!pp[ndx]) {; 707 // -- We do not have a pointer to a varying-length array.; 708 // Error(""ReadBuffer"", ""The pointer to element %s::%s type %d (%s) is null\n"", thisVar->GetName(),; 709 // aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; 710 // continue;; 711 //}; 712 // Delete any memory at pp[ndx].; 713 if (!isPtrPtr) {; 714 cl->DeleteArray(pp[ndx]);; 715 pp[ndx] = 0;; 716 } else {; 717 // Using vlen is wrong",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:28645,config,config,28645,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"tr_t parm2) override;  Process scrollbar messages. ;  ; void ScrollDown (Int_t pixels);  ; void ScrollLeft (Int_t pixels);  ; void ScrollRight (Int_t pixels);  ; virtual void ScrollToPosition (TGLongPosition newPos);  Scroll the canvas to pos. ;  ; void ScrollUp (Int_t pixels);  ; void SetBackgroundColor (Pixel_t) override;  Set background color of the canvas frame. ;  ; void SetBackgroundPixmap (Pixmap_t p) override;  Set backgound pixmap. ;  ; void SetLayoutManager (TGLayoutManager *) override;  Set the layout manager for the composite frame. ;  ; virtual void SetVisibleStart (Int_t newTop, Int_t direction);  Scroll view in specified direction to make newTop the visible location. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TGLongPosition ToPhysical (TGLongPosition coord) const;  ; TGLongPosition ToVirtual (TGLongPosition coord) const;  ; virtual void UpdateBackgroundStart ();  set some gc values ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:13682,inherit,inherited,13682,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,1,['inherit'],['inherited']
Modifiability,"tr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TBenchmark (const TBenchmark &);  Copy constructor. ;  ; TBenchmark & operator= (const TBenchmark &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t * fCpuTime;  ; TString * fNames;  ; Int_t fNbench;  ; Int_t fNmax;  ; Float_t * fRealTime;  ; TStopwatch * fTimer;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TBenchmark.h>. Inheritance diagram for TBenchmark:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBenchmark() [1/2]. TBenchmark::TBenchmark ; (; const TBenchmark & ; bm). protected . Copy constructor. ; Definition at line 39 of file TBenchmark.cxx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBenchmark.html:11570,inherit,inherited,11570,doc/master/classTBenchmark.html,https://root.cern,https://root.cern/doc/master/classTBenchmark.html,1,['inherit'],['inherited']
Modifiability,"traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:21:50 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction1PdfBinding_double_double_.html:41504,variab,variable,41504,root/html530/RooCFunction1PdfBinding_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction1PdfBinding_double_double_.html,1,['variab'],['variable']
Modifiability,"traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Sat Oct 9 06:58:07 2010 » Last generated: 2010-10-09 06:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCFunction1PdfBinding_double_double_.html:40942,variab,variable,40942,root/html528/RooCFunction1PdfBinding_double_double_.html,https://root.cern,https://root.cern/root/html528/RooCFunction1PdfBinding_double_double_.html,1,['variab'],['variable']
Modifiability,"traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:10 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction1PdfBinding_double_double_.html:41911,variab,variable,41911,root/html532/RooCFunction1PdfBinding_double_double_.html,https://root.cern,https://root.cern/root/html532/RooCFunction1PdfBinding_double_double_.html,1,['variab'],['variable']
Modifiability,"tracking of objects in the TObjectTable. ;  . Public Attributes; TEveCluster fC;  ; TEveRecCascade fCC;  ; TEveMCRecCrossRef fGI;  ; TEveHit fH;  ; TEveMCTrack fK;  Sim-Rec cross references. ;  ; TEveRecKink fKK;  ; TEveCluster * fpC;  ; TEveRecCascade * fpCC;  ; TEveMCRecCrossRef * fpGI;  ; TEveHit * fpH;  ; TEveMCTrack * fpK;  ; TEveRecKink * fpKK;  ; TEveRecTrack * fpR;  ; TEveRecV0 * fpV0;  ; TEveRecTrack fR;  ; TTree * fTreeC;  Hits. ;  ; TTree * fTreeCC;  VO's. ;  ; TTree * fTreeGI;  Cascades. ;  ; TTree * fTreeH;  Kinematics. ;  ; TTree * fTreeK;  ; TTree * fTreeKK;  Reconstructed tracks. ;  ; TTree * fTreeR;  Clusters. ;  ; TTree * fTreeV0;  Kinks. ;  ; TEveRecV0 fV0;  . Protected Attributes; Int_t fBuffSize;  ; TDirectory * fDirectory;  ; TFile * fFile;  ; Int_t fVerbose;  . Private Member Functions;  TEveVSD (const TEveVSD &);  ; TEveVSD & operator= (const TEveVSD &);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveVSD.h>. Inheritance diagram for TEveVSD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveVSD.html:10660,inherit,inherited,10660,doc/master/classTEveVSD.html,https://root.cern,https://root.cern/doc/master/classTEveVSD.html,1,['inherit'],['inherited']
Modifiability,"tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; std::string createLabel () const;  Compile a string with all the labels of the serving categories, such as {1Jet;1Lepton;2Tag}. ;  ; value_type evaluate () const override;  Calculate the current value. ;  ; void recomputeShape () override;  Inspect all the subcategories, and enumerate and name their states. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the given vector store. ;  ; void clearTypes ();  Delete all currently defined states. ;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValueDirty=true) override;  Copy the cached value from given source and raise dirty flag. ;  ; virtual const std::map< std::string, RooAbsCategory::value_type >::value_type & defineState (const std::string &label);  Define a new state with given label. ;  ; virtual const std::map< std::string, RooAbsCategory::value_type >::value_type & defineState (const std::string &label, value_type index);  Define new state with given name and index number. ;  ; void defineStateUnchecked (const std::string &label, value_type index);  Internal version of defineState() that does not check if type already exists. ;  ; void fillTre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiCategory.html:35357,inherit,inherited,35357,doc/master/classRooMultiCategory.html,https://root.cern,https://root.cern/doc/master/classRooMultiCategory.html,1,['inherit'],['inherited']
Modifiability,"tract. ;  ;  Protected Member Functions inherited from TEveTrackList; void FindMomentumLimits (TEveElement *el, Bool_t recurse=kTRUE);  Loop over track elements of argument el and find highest pT and p. ;  ; Double_t RoundMomentumLimit (Double_t x);  Round the momentum limit up to a nice value. ;  ; void SanitizeMinMaxCuts ();  Set Min/Max cuts so that they are within detected limits. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  . Private Member Functions;  TEveTrackListProjected (const TEveTrackListProjected &);  ; TEveTrackListProjected & operator= (const TEveTrackListProjected &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackListProjected.html:37625,inherit,inherited,37625,doc/master/classTEveTrackListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackListProjected.html,1,['inherit'],['inherited']
Modifiability,"training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.016 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_PDEFoam.weights.xml␛[0m; : writing foam DiscrFoam to file; : Foams written to file: ␛[0;36mdataset/weights/TMVAClassification_PDEFoam.weights_foams.root␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_PDEFoam.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: KNN for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ KNN ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The k-nearest neighbor (k-NN) algorithm is a multi-dimensional classification; : and regression algorithm. Similarly to other TMVA algorithms, k-NN uses a set of; : training events for which a classification category/regression target is known. ; : The k-NN method compares a test event to all training events using a distance ; : function, which is an Euclidean distance in a space defined by the input variables. ; : The k-NN method, as implemented in TMVA, uses a kd-tree algorithm to perform a; : quick search for the k events with shortest distance to the test event. The method; : returns a fraction of signal events among the k neighbors. It is recommended; : that a histogram which stores the k-NN decision variable is binned with k+1 bins; : between 0 and 1.; : ; : ␛[1m--- Performance tuning via configuration options: ␛[0m; : ; : The k-NN method estimates a density of signal and background events in a ; : neighborhood around the test event. The method assumes that the density of the ; : signal and background events is uniform and constant within the neighborhood. ; : k is an adjustable parameter and it determines an average size of the ; : neighborhood. Small k values (less than 10) are sensitive to statistical ; : fluctuations and large (greater than 100) values might not sufficiently capture ; : local diffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:32710,variab,variables,32710,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"training. Double_t GetSumWeights(const TMVA::DecisionTree::EventConstList* validationSample) const; calculate the normalization factor for a pruning validation sample. UInt_t CountLeafNodes(TMVA::Node* n = __null); return the number of terminal nodes in the sub-tree below Node n. void DescendTree(TMVA::Node* n = __null); descend a tree to find all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionTree::EventConstList& eventSample, TMVA::DecisionTreeNode* node); Decide how to split a node using one of the variables that gives; the best separation of signal/background. In order to do this, for each; variable a scan of the different cut values in a grid (grid = fNCuts) is; performed and the resulting separation gains are compared.; in addition to the individual variables, one can also ask for a fisher; discriminant being built out of (some) of the variables and used as a; possible multivariate split. std::vector<Double_t> GetFisherCoefficients(const TMVA::DecisionTree::EventConstList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventConstList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTree.html:13273,variab,variableMap,13273,root/html602/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTree.html,4,['variab'],['variableMap']
Modifiability,"traits<char> >& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCallProfiling(Bool_t flag, Int_t nbinX = 40, Int_t nbinCall = 40, Int_t nCallHigh = 1000); voidsetCallWarning(Int_t threshold = 2000); voidsetConvolutionWindow(RooAbsReal& centerParam, RooAbsReal& widthParam, Double_t widthScaleFactor = 1); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumConvolution.html:24654,config,config,24654,root/html526/RooNumConvolution.html,https://root.cern,https://root.cern/root/html526/RooNumConvolution.html,1,['config'],['config']
Modifiability,"transformation = new VariableIdentityTransform(dataInfo);; 140 }; 141 else if (trName == ""D"" || trName == ""Deco"" || trName == ""Decorrelate"") {; 142 if (variables.Length() == 0) variables = ""_V_"";; 143 transformation = new VariableDecorrTransform(dataInfo);; 144 }; 145 else if (trName == ""P"" || trName == ""PCA"") {; 146 if (variables.Length() == 0) variables = ""_V_"";; 147 transformation = new VariablePCATransform(dataInfo);; 148 }; 149 else if (trName == ""U"" || trName == ""Uniform"") {; 150 if (variables.Length() == 0) variables = ""_V_,_T_"";; 151 transformation = new VariableGaussTransform(dataInfo, ""Uniform"" );; 152 }; 153 else if (trName == ""G"" || trName == ""Gauss"") {; 154 if (variables.Length() == 0) variables = ""_V_"";; 155 transformation = new VariableGaussTransform(dataInfo);; 156 }; 157 else if (trName == ""N"" || trName == ""Norm"" || trName == ""Normalise"" || trName == ""Normalize"") {; 158 if (variables.Length() == 0) variables = ""_V_,_T_"";; 159 transformation = new VariableNormalizeTransform(dataInfo);; 160 }; 161 else; 162 log << kFATAL << Form(""Dataset[%s] : "",dataInfo.GetName()); 163 << ""<ProcessOptions> Variable transform '""; 164 << trName << ""' unknown."" << Endl;; 165 ; 166 ; 167 if (transformation) {; 168 ClassInfo* clsInfo = dataInfo.GetClassInfo(idxCls);; 169 if (clsInfo); 170 log << kHEADER << Form(""[%s] : "",dataInfo.GetName()); 171 << ""Create Transformation \"""" << trName << ""\"" with reference class ""; 172 << clsInfo->GetName() << ""=(""<< idxCls <<"")"" << Endl << Endl;; 173 else; 174 log << kHEADER << Form(""[%s] : "",dataInfo.GetName()); 175 << ""Create Transformation \"""" << trName << ""\"" with events from all classes.""; 176 << Endl << Endl;; 177 ; 178 transformation->SelectInput(variables);; 179 transformationHandler.AddTransformation(transformation, idxCls);; 180 }; 181 }; 182}; 183 ; 184}; DataSetInfo.h; MsgLogger.h; Ranking.h; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; THashTable.h; TList.h; TObjString.h; Formchar * Form(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:6606,variab,variables,6606,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['variab'],['variables']
Modifiability,"transformation factor between ext/internal values. ;  ; virtual void mneig (Double_t *a, Int_t ndima, Int_t n, Int_t mits, Double_t *work, Double_t precis, Int_t &ifault);  Compute matrix eigen values. ;  ; virtual void mnemat (Double_t *emat, Int_t ndim);  Calculates the external error matrix from the internal matrix. ;  ; virtual void mnerrs (Int_t number, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &gcc);  Utility routine to get MINOS errors. ;  ; virtual void mneval (Double_t anext, Double_t &fnext, Int_t &ierev);  Evaluates the function being analysed by MNCROS. ;  ; virtual void mnexcm (const char *comand, Double_t *plist, Int_t llist, Int_t &ierflg);  Interprets a command and takes appropriate action. ;  ; virtual void mnexin (Double_t *pint);  Transforms the external parameter values U to internal values. ;  ; virtual void mnfixp (Int_t iint, Int_t &ierr);  Removes parameter IINT from the internal parameter list. ;  ; virtual void mnfree (Int_t k);  Restores one or more fixed parameter(s) to variable status. ;  ; virtual void mngrad ();  Interprets the SET GRAD command. ;  ; virtual void mnhelp (const char *command="""");  interface to Minuit help ;  ; virtual void mnhelp (TString comd);  HELP routine for MINUIT interactive commands. ;  ; virtual void mnhes1 ();  Calculate first derivatives (GRD) and uncertainties (DGRD) ;  ; virtual void mnhess ();  Calculates the full second-derivative matrix of FCN. ;  ; virtual void mnimpr ();  Attempts to improve on a good local minimum. ;  ; virtual void mninex (Double_t *pint);  Transforms from internal coordinates (PINT) to external (U) ;  ; virtual void mninit (Int_t i1, Int_t i2, Int_t i3);  Main initialization member function for MINUIT. ;  ; virtual void mnlims ();  Interprets the SET LIM command, to reset the parameter limits. ;  ; virtual void mnline (Double_t *start, Double_t fstart, Double_t *step, Double_t slope, Double_t toler);  Perform a line search from position START. ;  ; virtual void mn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:19035,variab,variable,19035,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,2,['variab'],['variable']
Modifiability,"transformation from old text files in this case regression didn't exist and there were no targets ;  ; std::vector< TString > * GetTransformationStrings (Int_t cls) const;  creates string with variable transformations applied ;  ; void Initialize ();  initialization of the normalization transformation ;  ; virtual const Event * InverseTransform (const Event *const, Int_t cls) const;  apply the inverse transformation ;  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName, Int_t part, UInt_t trCounter, Int_t cls);  creates a normalizing function TODO include target-transformation into makefunction ;  ; Bool_t PrepareTransformation (const std::vector< Event * > &);  prepare transformation ;  ; virtual void PrintTransformation (std::ostream &o);  prints the transformation ranges ;  ; virtual void ReadFromXML (void *trfnode);  Read the transformation matrices from the xml node. ;  ; void ReadTransformationFromStream (std::istream &, const TString &);  Read the variable ranges from an input stream. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  apply the normalization transformation ;  ; void WriteTransformationToStream (std::ostream &) const;  write the transformation to the stream ;  ;  Public Member Functions inherited from TMVA::VariableTransformBase;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform tf, const TString &trfName);  standard constructor ;  ; virtual ~VariableTransformBase (void);  ; virtual void CountVariableTypes (UInt_t &nvars, UInt_t &ntgts, UInt_t &nspcts) const;  count variables, targets and spectators ;  ; virtual Bool_t GetInput (const Event *event, std::vector< Float_t > &input, std::vector< Char_t > &mask, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; virtual const char * GetNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html:2867,variab,variable,2867,doc/master/classTMVA_1_1VariableNormalizeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html,1,['variab'],['variable']
Modifiability,"transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTorus (const TGeoTorus &)=delete;  ; TGeoTorus & operator= (const TGeoTorus &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fDphi;  ; Double_t fPhi1;  ; Double_t fR;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTorus.html:19269,inherit,inherited,19269,doc/master/classTGeoTorus.html,https://root.cern,https://root.cern/doc/master/classTGeoTorus.html,1,['inherit'],['inherited']
Modifiability,"transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; THStack*fHStack; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCaloDataHist.html:19393,variab,variable,19393,root/html528/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html528/TEveCaloDataHist.html,6,['variab'],['variable']
Modifiability,"transformation:. Squeeze out all parameters that are not variable.; Transform all variable parameters with limits, so that the transformed parameter can vary without limits. (See the next section for details concerning this transformation.) Because this transformation is non-linear, it is recommended to avoid putting limits on parameters where they are not needed. As an example, suppose that the user has defined the following parameters:. Parameter 0, constant.; Parameter 1, freely variable.; Parameter 2, variable with limits.; Parameter 3, constant.; Parameter 4, freely variable. Then the internal parameter list would be as follows:. Internal parameter 0 = external parameter 1.; Internal parameter 1 = external parameter 2, transformed appropriately.; Internal parameter 2 = external parameter 4. In the above example, M considers that the number of external parameters is 5, and the number of internal parameters is 3. This is the number which determines, for example, the size of the error matrix of the parameters, since only variable parameters have errors.; An important feature of M is that parameters are allowed to change types during the M minimization and analysis of a \(\mbox{FCN}\) function. Several applications in M have methods available to make variable parameters fixed and vice-versa; to impose, change, or remove limits from variable parameters; and even to define completely new parameters at any time during a run. In addition, some M applications (notably the \(\mbox{MINOS}\) error analysis) cause one or more variable parameters to be temporarily fixed during the calculation. Therefore, the correspondence between external and internal parameter lists is in general a dynamic one, and the number of internal parameters is not necessarily constant.; For more details about parameter interaction see [api:parameters].; 2.3.1 The transformation for parameters with limits; [intro:limits]; For variable parameters with double sided limits \(a\) (lower) and \(b\) (uppe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:12729,variab,variable,12729,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,4,['variab'],['variable']
Modifiability,"transformation; 134 double ExternalToInternal(double x) const {; 135 return (fTransform.get() ) ? fTransform->Ext2int(x, fLower, fUpper) : x;; 136 }; 137 ; 138private:; 139 ; 140 bool fFix; ///< fix variable; 141 bool fLowBound; ///< has lower bound; 142 bool fUpBound; ///< has upper bound param; 143 bool fBounds; ///< has double bound; 144 std::unique_ptr< MinimizerVariableTransformation> fTransform; ///< pointer to the minimizer transformation; 145 double fLower; ///< lower parameter limit; 146 double fUpper; ///< upper parameter limit; 147 ; 148};; 149 ; 150 } // end namespace Math; 151 ; 152} // end namespace ROOT; 153 ; 154 ; 155#endif /* ROOT_Math_MinimTransformVariable */; 156 ; 157 ; MinimizerVariableTransformation.h; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; ROOT::Math::MinimTransformVariableMinimTransformVariable class Contains meta information of the variables such as bounds,...Definition MinimTransformVariable.h:48; ROOT::Math::MinimTransformVariable::InternalToExternaldouble InternalToExternal(double x) constDefinition MinimTransformVariable.h:124; ROOT::Math::MinimTransformVariable::fTransformstd::unique_ptr< MinimizerVariableTransformation > fTransformpointer to the minimizer transformationDefinition MinimTransformVariable.h:144; ROOT::Math::MinimTransformVariable::LowerBounddouble LowerBound() constDefinition MinimTransformVariable.h:117; ROOT::Math::MinimTransformVariable::MinimTransformVariableMinimTransformVariable(double lower, double upper, SinVariableTransformation *trafo)Definition MinimTransformVariable.h:67; ROOT::Math::MinimTransformVariable::MinimTransformVariableMinimTransformVariable(const MinimTransformVariable &rhs)Definition MinimTransformVariable.h:86; ROOT::Math::MinimTransformVariable::fLowBoundbool fLowBoundhas lower boundDefinition MinimTransformVariable.h:141; ROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimTransformVariable_8h_source.html:5477,variab,variables,5477,doc/master/MinimTransformVariable_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimTransformVariable_8h_source.html,1,['variab'],['variables']
Modifiability,"transforms the source spectrum. ; The calling program should fill in input parameters. Transformed data are written into dest spectrum.; Function parameters:; source-pointer to the vector of source spectrum, its length should be size except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR transform. These need 2*size length to supply real and imaginary coefficients.; destVector-pointer to the vector of dest data, its length should be size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These need 2*size length to store real and imaginary coefficients. Transform methods; Goal: to analyse experimental data using orthogonal transforms. orthogonal transforms can be successfully used for the processing of nuclear spectra (not only); they can be used to remove high frequency noise, to increase signal-to-background ratio as well as to enhance low intensity components [1], to carry out e.g. Fourier analysis etc.; we have implemented the function for the calculation of the commonly used orthogonal transforms as well as functions for the filtration and enhancement of experimental data. References:; [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [2] Morhac; M., Matouoek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; [3] Morhac; M., Matouoek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac; M., Matouoek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. Example - script Transform.c:. Fig. 1 Original gamma-ray spectrum. Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; Script:; Example to illustrate Transform function (class TSpectrumTransform). To execute this example, do:; root > .x Transform.C; #include <TSpectrum>; #include ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:30463,enhance,enhancement,30463,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,"transforms. orthogonal transforms can be successfully used for the processing of nuclear spectra (not only); they can be used to remove high frequency noise, to increase signal-to-background ratio as well as to enhance low intensity components [1], to carry out e.g. Fourier analysis etc.; we have implemented the function for the calculation of the commonly used orthogonal transforms as well as functions for the filtration and enhancement of experimental data. References:; [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [2] Morhac M., Matouoek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; [3] Morhac M., Matouoek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac M., Matouoek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. Example 1 - script Transform2.c:. Fig. 1 Original two-dimensional noisy spectrum. Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; Script:; Example to illustrate Transform function (class TSpectrumTransform2). To execute this example, do; root > .x Transform2.C; void Transform2() {; Int_t i, j;; Int_t nbinsx = 256;; Int_t nbinsy = 256;; Int_t xmin = 0;; Int_t xmax = nbinsx;; Int_t ymin = 0;; Int_t ymax = nbinsy;; Double_t ** source = new Double_t *[nbinsx];; Double_t ** dest = new Double_t *[nbinsx];; for (i=0;i<nbinsx;i++); source[i]=newDouble_t[nbinsy];; for (i=0;i<nbinsx;i++); dest[i]=newDouble_t[nbinsy];; TH2F *trans = newTH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; TFile *f = new TFile(""TSpectrum2.root"");; trans=(TH2F*)f->Get(""back3;1"");; TCanvas *Tr = new TCanvas(""Tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:31865,adapt,adaptive,31865,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['adapt'],['adaptive']
Modifiability,"translated; 24// from FORTRAN to C++ and optimized.; 25//; 26// changes:; 27// 02 Apr 2001 (TG) creation; 28//; 29// ********************************************************************; 30 ; 31#include <cmath>; 32 ; 33namespace ROOT {; 34 ; 35 namespace Math {; 36 ; 37 ; 38/** Dfactir.; 39 Function to compute the determinant from a square matrix, Det(A) of; 40 dimension idim and order n. A working area ir is returned which is; 41 needed by the Dfinv routine.; 42 ; 43 @author T. Glebe; 44*/; 45template <class Matrix, unsigned int n, unsigned int idim>; 46bool Dfactir(Matrix& rhs, typename Matrix::value_type& det, unsigned int* ir); 47 // int *n, float *a, int *idim, int *ir, int *ifail, float *det, int *jfail); 48{; 49 ; 50#ifdef XXX; 51 if (idim < n || n <= 0) {; 52 return false;; 53 }; 54#endif; 55 ; 56 ; 57 /* Initialized data */; 58 typename Matrix::value_type* a = rhs.Array();; 59 ; 60 /* Local variables */; 61 unsigned int nxch, i, j, k, l;; 62 typename Matrix::value_type p, q, tf;; 63 ; 64 /* Parameter adjustments */; 65 a -= idim + 1;; 66 --ir;; 67 ; 68 /* Function Body */; 69 ; 70 // fact.inc; 71 nxch = 0;; 72 det = 1.;; 73 for (j = 1; j <= n; ++j) {; 74 const unsigned int ji = j * idim;; 75 const unsigned int jj = j + ji;; 76 ; 77 k = j;; 78 p = std::abs(a[jj]);; 79 ; 80 if (j != n) {; 81 for (i = j + 1; i <= n; ++i) {; 82 q = std::abs(a[i + ji]);; 83 if (q > p) {; 84 k = i;; 85 p = q;; 86 }; 87 } // for i; 88 ; 89 if (k != j) {; 90 for (l = 1; l <= n; ++l) {; 91 const unsigned int li = l*idim;; 92 const unsigned int jli = j + li;; 93 const unsigned int kli = k + li;; 94 tf = a[jli];; 95 a[jli] = a[kli];; 96 a[kli] = tf;; 97 } // for l; 98 ++nxch;; 99 ir[nxch] = (j << 12) + k;; 100 } // if k != j; 101 } // if j!=n; 102 ; 103 if (p <= 0.) {; 104 det = 0;; 105 return false;; 106 }; 107 ; 108 det *= a[jj];; 109#ifdef XXX; 110 t = std::abs(det);; 111 if (t < 1e-19 || t > 1e19) {; 112 det = 0;; 113 return false;; 114 }; 115#endif; 116 ; 117 a[jj] = 1. / a[jj];; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Dfactir_8h_source.html:1712,variab,variables,1712,doc/master/Dfactir_8h_source.html,https://root.cern,https://root.cern/doc/master/Dfactir_8h_source.html,1,['variab'],['variables']
Modifiability,translations. ; Implements TVirtualGeoPainter.; Definition at line 1949 of file TGeoPainter.cxx. ◆ SetCheckedNode(). void TGeoPainter::SetCheckedNode ; (; TGeoNode * ; node). overridevirtual . Select a node to be checked for overlaps. ; All overlaps not involving it will be ignored. ; Implements TVirtualGeoPainter.; Definition at line 2016 of file TGeoPainter.cxx. ◆ SetClippingShape(). void TGeoPainter::SetClippingShape ; (; TGeoShape * ; shape). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 160 of file TGeoPainter.h. ◆ SetExplodedView(). void TGeoPainter::SetExplodedView ; (; Int_t ; iopt = 0). overridevirtual . Set type of exploding view. ; Implements TVirtualGeoPainter.; Definition at line 1962 of file TGeoPainter.cxx. ◆ SetGeoManager(). void TGeoPainter::SetGeoManager ; (; TGeoManager * ; geom). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 164 of file TGeoPainter.h. ◆ SetIteratorPlugin(). void TGeoPainter::SetIteratorPlugin ; (; TGeoIteratorPlugin * ; plugin). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 165 of file TGeoPainter.h. ◆ SetNmeshPoints(). void TGeoPainter::SetNmeshPoints ; (; Int_t ; npoints). overridevirtual . Set number of points to be generated on the shape outline when checking for overlaps. ; Implements TVirtualGeoPainter.; Definition at line 2007 of file TGeoPainter.cxx. ◆ SetNsegments(). void TGeoPainter::SetNsegments ; (; Int_t ; nseg = 20). overridevirtual . Set number of segments to approximate circles. ; Implements TVirtualGeoPainter.; Definition at line 1992 of file TGeoPainter.cxx. ◆ SetRaytracing(). void TGeoPainter::SetRaytracing ; (; Bool_t ; flag = kTRUE). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.h. ◆ SetTopVisible(). void TGeoPainter::SetTopVisible ; (; Bool_t ; vis = kTRUE). overridevirtual . Set top geometry volume as visible. ; Implements TVirtualGeoPainter.; Definition at line 2050 of ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPainter.html:39873,plugin,plugin,39873,doc/master/classTGeoPainter.html,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html,1,['plugin'],['plugin']
Modifiability,"trary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending of radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMark Special-point on track: position/momentum reference, daughter creation or decay (also used in VSD).; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; range of displayed TEvePointSet's can be controlled, based on a separating quantity provided on fill-time by a user.; TEvePointS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:60924,variab,variable,60924,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['variab'],['variable']
Modifiability,"trary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending of radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePathMarkT<float> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:63242,variab,variable,63242,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,3,['variab'],['variable']
Modifiability,"trary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending on radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> ; TEvePathMarkT<float> ; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; range of displayed TEvePointSet's can be controlled, based on a separating quantity provided on fill-time by a user.; TEvePointSetArrayEditor Editor for TEvePointSetArray class.; TEvePointSetProj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:63673,variab,variable,63673,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,4,['variab'],['variable']
Modifiability,"trary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending on radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePathMarkT<float> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:66994,variab,variable,66994,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['variab'],['variable']
Modifiability,"tream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooResolutionModel; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooFormulaVar * identity ();  Return identity formula pointer. ;  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current ev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:57639,inherit,inherited,57639,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,8,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,"tream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; void attachCache (const RooAbsArg *newOwner, const RooArgSet &cachedVars) override;  Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ;  ; void createTree (RooStringView name, RooStringView title);  Create TTree object that lives in memory, independent of current location of gDirectory. ;  ; Int_t getBranchBufferSize () const;  ; void initialize ();  One-time initialization common to all constructor forms. ;  ; std::string makeTreeName () const;  Generate a name for the storage tree from the name and title of this instance. ;  ; void setBranchBufferSize (Int_t size);  ; RooArgSet varsNoWeight (const RooArgSet &allVars, const char *wgtName=nullptr);  Utility function for constructors Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. ;  ; RooRealVar * weightVar (const RooArgSet &allVars, const char *wgtName=nullptr);  Utility function for constructors Return pointer to weight variable if it is defined. ;  . Private Attributes; RooArgSet _attachedBuffers;  ! Currently attached buffers (if different from _varsww) ;  ; const RooAbsArg * _cacheOwner = nullptr;  TTree holding the cached function values. ;  ; TTree * _cacheTree = nullptr;  ; double _curWgt = 1.0;  Buffer for weights in case a batch of values is requested. ;  ; double _curWgtErr = 0.0;  Weight of current event. ;  ; double _curWgtErrHi = 0.0;  Weight of current event. ;  ; double _curWgtErrLo = 0.0;  Weight of current event. ;  ; bool _defCtor = false;  Object owning cache contents. ;  ; const double * _extSumW2Array {nullptr};  ! External sum of weights array ;  ; const double * _extWgtArray {nullptr};  ! External weight array ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeDataStore.html:20581,variab,variable,20581,doc/master/classRooTreeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooTreeDataStore.html,1,['variab'],['variable']
Modifiability,"tream a TArrayC object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Char_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  . Additional Inherited Members;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . #include <TArrayC.h>. Inheritance diagram for TArrayC:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArrayC() [1/4]. TArrayC::TArrayC ; (; ). Default TArrayC ctor. ; Definition at line 26 of file TArrayC.cxx. ◆ TArrayC() [2/4]. TArrayC::TArrayC ; (; Int_t ; n). Create TArrayC object and set array size to n chars. ; Definition at line 34 of file TArrayC.cxx. ◆ TArrayC() [3/4]. TArrayC::TArrayC ; (; Int_t ; n, . const Char_t * ; array . ). Create TArrayC object and initialize it with values of array. ; Definition at line 43 of file TArrayC.cxx. ◆ TArrayC() [4/4]. TArrayC::TArrayC ; (; const TArr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrayC.html:2598,inherit,inherited,2598,doc/master/classTArrayC.html,https://root.cern,https://root.cern/doc/master/classTArrayC.html,1,['inherit'],['inherited']
Modifiability,"tream a TArrayF object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Float_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  . Additional Inherited Members;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . #include <TArrayF.h>. Inheritance diagram for TArrayF:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArrayF() [1/4]. TArrayF::TArrayF ; (; ). Default TArrayF ctor. ; Definition at line 26 of file TArrayF.cxx. ◆ TArrayF() [2/4]. TArrayF::TArrayF ; (; Int_t ; n). Create TArrayF object and set array size to n floats. ; Definition at line 34 of file TArrayF.cxx. ◆ TArrayF() [3/4]. TArrayF::TArrayF ; (; Int_t ; n, . const Float_t * ; array . ). Create TArrayF object and initialize it with values of array. ; Definition at line 43 of file TArrayF.cxx. ◆ TArrayF() [4/4]. TArrayF::TArrayF ; (; const TA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrayF.html:2622,inherit,inherited,2622,doc/master/classTArrayF.html,https://root.cern,https://root.cern/doc/master/classTArrayF.html,1,['inherit'],['inherited']
Modifiability,"tream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const; voidWriteWeightsToStream(TFile& rf) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); Float_tTMVA::MethodBase::GetTWeight(const TMVA::Event* ev) const; const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareCompatibilityOptions(); virtual voidDeclareOptions(); Double_tGausKernel(const TMVA::kNN::Event& event_knn, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodKNN.html:12855,Config,Configurable,12855,root/html532/TMVA__MethodKNN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodKNN.html,6,['Config'],['Configurable']
Modifiability,"tream& os) const; virtual voidprintTree(ostream& os, TString indent = """") const; virtual voidprintValue(ostream& os) const; RooPrintable(); RooPrintable(const RooPrintable&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. static RooPrintable::ContentsOptionkAddress; static RooPrintable::ContentsOptionkArgs; static RooPrintable::ContentsOptionkClassName; static RooPrintable::ContentsOptionkCollectionHeader; static RooPrintable::ContentsOptionkExtras; static RooPrintable::StyleOptionkInline; static RooPrintable::ContentsOptionkName; static RooPrintable::StyleOptionkSingleLine; static RooPrintable::StyleOptionkStandard; static RooPrintable::ContentsOptionkTitle; static RooPrintable::StyleOptionkTreeStructure; static RooPrintable::ContentsOptionkValue; static RooPrintable::StyleOptionkVerbose. protected:. static Int_t_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void nameFieldLength(Int_t newLen); Set length of field reserved from printing name of RooAbsArgs in; multi-line collection printing to given amount. void printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; Print description of object on ostream, printing contents set by contents integer,; which is interpreted as an OR of 'enum ContentsOptions' values and in the style; given by 'enum StyleOption'. Each message is prefixed by string 'indent' when printed. void printValue(ostream& os) const; Interface to print value of object. void printExtras(ostream& os) const; Interface to print extras of object. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Interface for detailed printing of object. void printTree(ostream& os, TString indent = """") const; Interface for tree structure printing of object. void printArgs(ostream& os) const; Interface",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooPrintable.html:2926,Inherit,Inheritance,2926,root/html602/RooPrintable.html,https://root.cern,https://root.cern/root/html602/RooPrintable.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsAnaConvPdf.html:29124,config,config,29124,root/html528/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsAnaConvPdf.html,57,['config'],['config']
Modifiability,"tream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetOptions(TString options); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Roo2DKeysPdf.html:27389,config,config,27389,root/html528/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html528/Roo2DKeysPdf.html,1,['config'],['config']
Modifiability,"treamer IO overload. ;  ; void PopProxy () override;  Remove the last object. ;  ; void PushProxy (void *objstart) override;  Add an object. ;  ; Bool_t Reset () override;  Reset the info gathered from StreamerInfos and value's TClass. ;  ; virtual void SetOnFileClass (TClass *cl);  ; UInt_t Size () const override;  Return the current size of the container. ;  ; UInt_t Sizeof () const override;  Return the sizeof the collection object. ;  ;  Public Member Functions inherited from TVirtualCollectionProxy;  TVirtualCollectionProxy ();  ;  TVirtualCollectionProxy (TClass *cl);  ; virtual ~TVirtualCollectionProxy ();  ; virtual Int_t GetProperties () const;  Return miscallenous properties of the proxy (see TVirtualCollectionProxy::EProperty) ;  ; char * operator[] (UInt_t idx) const;  Return the address of the value at index idx ;  . Protected Member Functions; void ReadMap (UInt_t nElements, TBuffer &b);  ; void WriteMap (UInt_t nElements, TBuffer &b);  ;  Protected Member Functions inherited from TEmulatedCollectionProxy; void Expand (UInt_t nCurr, UInt_t left);  ; TGenCollectionProxy * InitializeEx (Bool_t silent) override;  Proxy initializer. ;  ; void ReadItems (int nElements, TBuffer &b);  ; void Shrink (UInt_t nCurr, UInt_t left, Bool_t force);  ; void WriteItems (int nElements, TBuffer &b);  ;  Protected Member Functions inherited from TGenCollectionProxy; void CheckFunctions () const;  Check existence of function pointers. ;  ; virtual void DeleteItem (Bool_t force, void *ptr) const;  Call to delete/destruct individual item. ;  ; TGenCollectionProxy * Initialize (Bool_t silent) const;  Proxy initializer. ;  . Private Member Functions; TEmulatedMapProxy & operator= (const TEmulatedMapProxy &rhs);  . Additional Inherited Members;  Public Types inherited from TEmulatedCollectionProxy; typedef std::vector< char > Cont_t;  ; typedef Cont_t * PCont_t;  ;  Public Types inherited from TGenCollectionProxy; enum  { kBIT_ISSTRING = 0x20000000; , kBIT_ISTSTRING = 0x40000000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedMapProxy.html:8393,inherit,inherited,8393,doc/master/classTEmulatedMapProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedMapProxy.html,1,['inherit'],['inherited']
Modifiability,"treamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. void IgnoreTObjectStreamer(Bool_t ignore = kTRUE); When the class kIgnoreTObjectStreamer bit is set, the automatically; generated Streamer will not call TObject::Streamer.; This option saves the TObject space overhead on the file.; However, the information (fBits, fUniqueID) of TObject is lost. Note that this function must be called for the class deriving; directly from TObject, eg, assuming that BigTrack derives from Track; and Track derives from TObject, one must do:; Track::Class()->IgnoreTObjectStreamer();; and not:; BigTrack::Class()->IgnoreTObjectStreamer();. Bool_t InheritsFrom(const char *classname); Return kTRUE if this class inherits from a class with name ""classname"".; note that the function returns KTRUE in case classname is the class itself. Bool_t InheritsFrom(const TClass *cl); Return kTRUE if this class inherits from class cl.; note that the function returns KTRUE in case cl is the class itself. void * DynamicCast(const TClass* base, void* obj, Bool_t up = kTRUE); Cast obj of this class type up to baseclass cl if up is true.; Cast obj of this class type down from baseclass cl if up is false.; If this class is not a baseclass of cl return 0, else the pointer; to the cl part of this (up) or to this (down). void * New(TClass::ENewType defConstructor = kClassNew) const; Return a pointer to a newly allocated object of this class.; The class must have a default constructor. For meaning of; defConstructor, see TClass::IsCallingNew(). The constructor actually called here can be customized by; using the rootcint pragma:; #pragma link C++ ioctortype UserClass;; For example, with this pragma and a class named MyClass,; this method will called the first of the following 3; constructors which exists and is public:; MyClass(UserClass*);; MyClass(TRootIOCtor*);; MyClass(); // O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClass.html:30355,inherit,inherits,30355,root/html526/TClass.html,https://root.cern,https://root.cern/root/html526/TClass.html,1,['inherit'],['inherits']
Modifiability,"treamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Bool_tLock(const char* path, Int_t timeLimit); voidTObject::MakeZombie(). private:. TLockFile(const TLockFile&); TLockFile&operator=(const TLockFile&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfPathpath to file holding the lock. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLockFile(const char* path, Int_t timeLimit = 0); Default constructor. Blocks until lock is obtained.; If a lock exists that is older than the given time limit,; the file is removed. If timeLimit <= 0, wait for ever. ~TLockFile(); Destructor. Releases the lock. Bool_t Lock(const char* path, Int_t timeLimit); Internal function that locks with the given path. TLockFile(const TLockFile& ). TLockFile& operator=(const TLockFile& ). » Author: Jan Fiete Grosse-Oetringhaus, 04.06.07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TLockFile.h 36484 2010-11-02 16:00:10Z rdm $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLockFile.html:5468,Inherit,Inheritance,5468,root/html532/TLockFile.html,https://root.cern,https://root.cern/root/html532/TLockFile.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"treamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TNDArrayT<long long>(); TNDArrayT<long long>(Int_t ndim, const Int_t* nbins, bool addOverflow = false); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. long long*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_Long64_t_.html:6477,Inherit,Inheritance,6477,root/html534/TNDArrayT_Long64_t_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_Long64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"treamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); RooSetPair(const RooSetPair&). Data Members; public:. RooArgSet*_set1; RooArgSet*_set2; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSetPair(const RooArgSet* set1 = 0, const RooArgSet* set2 = 0); Initial element ctor. virtual ~RooSetPair(); Destructor. ULong_t Hash() const. RooSetPair(const RooSetPair& ); Forbidden. » Last changed: Tue Jun 2 13:12:22 2015 » Last generated: 2015-06-02 13:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSetPair.html:5698,Inherit,Inheritance,5698,root/html602/RooSetPair.html,https://root.cern,https://root.cern/root/html602/RooSetPair.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"treamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); RooSetPair(const RooSetPair&). Data Members; public:. RooArgSet*_set1; RooArgSet*_set2; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSetPair(const RooArgSet* set1 = 0, const RooArgSet* set2 = 0); Initial element ctor. virtual ~RooSetPair(); Destructor. ULong_t Hash() const. RooSetPair(const RooSetPair& ); Forbidden. » Last changed: Tue Jun 2 15:33:43 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooSetPair.html:5698,Inherit,Inheritance,5698,root/html604/RooSetPair.html,https://root.cern,https://root.cern/root/html604/RooSetPair.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"treamerInfo* info, TVirtualCollectionProxy& proxy); Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. TStreamerInfoActions::TActionSequence * CreateWriteMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy); Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. void AddToOffset(Int_t delta); Add the (potentially negative) delta to all the configuration's offset. This is used by; TBranchElement in the case of split sub-object. TStreamerInfoActions::TActionSequence * CreateCopy(); Create a copy of this sequence. TStreamerInfoActions::TActionSequence * CreateSubSequence(const vector<Int_t>& element_ids, size_t offset); Create a sequence containing the subset of the action corresponding to the SteamerElement whose ids is contained in the vector.; 'offset' is the location of this 'class' within the object (address) that will be passed to ReadBuffer when using this sequence. void Print(Option_t* = """") const; Add the (potentially negative) delta to all the configuration's offset. This is used by; TTBranchElement in the case of split sub-object.; If opt contains 'func', also print the (mangled) name of the function that will be executed. TConfiguredAction & operator=(const TStreamerInfoActions::TActionSequence& ); WARNING: Technically this is a move assignment!. TActionSequence(); {}. TActionSequence(TVirtualStreamerInfo* info, UInt_t maxdata); { fActions.reserve(maxdata); }. ~TActionSequence(). void AddAction( action_t action, TConfiguration *conf ). » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-06-30 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerInfoActions__TActionSequence.html:8051,config,configuration,8051,root/html602/TStreamerInfoActions__TActionSequence.html,https://root.cern,https://root.cern/root/html602/TStreamerInfoActions__TActionSequence.html,2,['config'],['configuration']
Modifiability,"treamerInfo* info, TVirtualCollectionProxy& proxy); Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. TStreamerInfoActions::TActionSequence * CreateWriteMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy); Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. void AddToOffset(Int_t delta); Add the (potentially negative) delta to all the configuration's offset. This is used by; TBranchElement in the case of split sub-object. TStreamerInfoActions::TActionSequence * CreateCopy(); Create a copy of this sequence. TStreamerInfoActions::TActionSequence * CreateSubSequence(const vector<Int_t>& element_ids, size_t offset); Create a sequence containing the subset of the action corresponding to the SteamerElement whose ids is contained in the vector.; 'offset' is the location of this 'class' within the object (address) that will be passed to ReadBuffer when using this sequence. void Print(Option_t* = """") const; Add the (potentially negative) delta to all the configuration's offset. This is used by; TTBranchElement in the case of split sub-object.; If opt contains 'func', also print the (mangled) name of the function that will be executed. TConfiguredAction & operator=(const TStreamerInfoActions::TActionSequence& ); WARNING: Technically this is a move assignment!. TActionSequence(); {}. TActionSequence(TVirtualStreamerInfo* info, UInt_t maxdata); { fActions.reserve(maxdata); }. ~TActionSequence(). void AddAction( action_t action, TConfiguration *conf ). » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-09-08 17:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerInfoActions__TActionSequence.html:8009,config,configuration,8009,root/html604/TStreamerInfoActions__TActionSequence.html,https://root.cern,https://root.cern/root/html604/TStreamerInfoActions__TActionSequence.html,2,['config'],['configuration']
Modifiability,"treamerInfoActions::AssociativeLooper::ReadCollectionBasicTypestatic Int_t ReadCollectionBasicType(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2262; TStreamerInfoActions::AssociativeLooper::ReadCollectionFloat16static Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2251; TStreamerInfoActions::AssociativeLooper::SimpleReadFloat16static void SimpleReadFloat16(TBuffer &buf, void *addr, Int_t nvalues)Definition TStreamerInfoActions.cxx:2203; TStreamerInfoActions::AssociativeLooper::ReadNumericalCollectionstatic Int_t ReadNumericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2214; TStreamerInfoActions::BitsMarkerDefinition TStreamerInfoActions.cxx:67; TStreamerInfoActions::BitsMarker::Value_tUInt_t Value_tDefinition TStreamerInfoActions.cxx:68; TStreamerInfoActions::ConvertBasicType< BitsMarker, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1427; TStreamerInfoActions::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1457; TStreamerInfoActions::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1444; TStreamerInfoActions::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1414; TStreamerInfoActions::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1415; TStreamerInfoActions::GenericLooper::ConvertBasicType< BitsMarker, To, Generic >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2447; TStreamerIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:264587,config,config,264587,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"treamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  apply the principal component analysis ;  ; void WriteTransformationToStream (std::ostream &) const;  write mean values to stream ;  ;  Public Member Functions inherited from TMVA::VariableTransformBase;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform tf, const TString &trfName);  standard constructor ;  ; virtual ~VariableTransformBase (void);  ; virtual void CountVariableTypes (UInt_t &nvars, UInt_t &ntgts, UInt_t &nspcts) const;  count variables, targets and spectators ;  ; virtual Bool_t GetInput (const Event *event, std::vector< Float_t > &input, std::vector< Char_t > &mask, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; TString GetShortName () const;  ; virtual std::vector< TString > * GetTransformationStrings (Int_t cls) const;  TODO --> adapt to variable,target,spectator selection default transformation output --> only indicate that transformation occurred. ;  ; Types::EVariableTransform GetVariableTransform () const;  ; Bool_t IsCreated () const;  ; Bool_t IsEnabled () const;  ; Bool_t IsNormalised () const;  ; MsgLogger & Log () const;  ; virtual void PrintTransformation (std::ostream &);  ; virtual void SelectInput (const TString &inputVariables, Bool_t putIntoVariables=kFALSE);  select the variables/targets/spectators which serve as input to the transformation ;  ; void SetEnabled (Bool_t e);  ; void SetNormalise (Bool_t n);  ; virtual void SetOutput (Event *event, std::vector< Float_t > &output, std::vector< Char_t > &mask, const Event *oldEvent=nullptr, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; void SetOutputDataSetInfo (DataSetInfo *outputDsi);  ; void SetTMVAVersion (TMVAVersion_t v);  ; void SetUseSignalTransform (Bool_t e=kTRUE);  ; const std::vector< TMVA::VariableInfo > &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html:2790,adapt,adapt,2790,doc/master/classTMVA_1_1VariablePCATransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html,2,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,treamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Pixmap_t GetBckgndPixmap ();  Static method returning scrollbar background pixmap. ;  ; static Int_t GetScrollBarWidth ();  Static method returning the scrollbar width. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGScrollBar.html:19912,inherit,inherited,19912,doc/master/classTGScrollBar.html,https://root.cern,https://root.cern/doc/master/classTGScrollBar.html,1,['inherit'],['inherited']
Modifiability,"treamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDictionary* GetDictionary(const char* name); Retrieve the type (class, fundamental type, typedef etc); named ""name"". Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. TDictionary* GetDictionary(const type_info& typeinfo); Retrieve the type (class, fundamental type, typedef etc); with typeid typeinfo. Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. virtual ~TDictionary(); { }. Long_t Property() const. » Author: Fons Rademakers 20/06/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id: TDictionary.h 41070 2011-09-30 12:15:22Z axel $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDictionary.html:6322,Inherit,Inheritance,6322,root/html532/TDictionary.html,https://root.cern,https://root.cern/root/html532/TDictionary.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"treamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. PyObject*fCallable! callable object to be dispatched. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyDispatcher(PyObject* callable); Construct a TPyDispatcher from a callable python object. Applies python; object reference counting. TPyDispatcher(const TPyDispatcher& ); Copy constructor. Applies python object reference counting. TPyDispatcher& operator=(const TPyDispatcher& ); Assignment operator. Applies python object reference counting. ~TPyDispatcher(); Destructor. Reference counting for the held python object is in effect. PyObject* DispatchVA( const char* format, ... ); Dispatch the arguments to the held callable python object, using format to; interpret the types of the arguments. Note that format is in python style,; not in C printf style. See: http://docs.python.org/api/arg-parsing.html . PyObject* Dispatch(); pre-defined dispatches, same as per TQObject::Emit(); note that; Emit() maps exclusively to this set, so several builtin types (e.g.; Int_t, Bool_t, Float_t, etc.) have been omitted here. { return DispatchVA( 0 ); }. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPyDispatcher.html:5524,Inherit,Inheritance,5524,root/html532/TPyDispatcher.html,https://root.cern,https://root.cern/root/html532/TPyDispatcher.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"treamerNVirtual_b). inline . Definition at line 289 of file TFormula.h. Member Data Documentation. ◆ fAllParametersSetted. Bool_t TFormula::fAllParametersSetted. private . Flag to control if all parameters are setted. ; Definition at line 98 of file TFormula.h. ◆ fClingInitialized. std::atomic<Bool_t> TFormula::fClingInitialized. private . ! Transient to force re-initialization ; Definition at line 97 of file TFormula.h. ◆ fClingInput. TString TFormula::fClingInput. private . ! Input function passed to Cling ; Definition at line 93 of file TFormula.h. ◆ fClingName. TString TFormula::fClingName. private . ! Unique name passed to Cling to define the function ( double clingName(double*x, double*p) ) ; Definition at line 101 of file TFormula.h. ◆ fClingParameters. std::vector<Double_t> TFormula::fClingParameters. private . Parameter values. ; Definition at line 95 of file TFormula.h. ◆ fClingVariables. std::vector<Double_t> TFormula::fClingVariables. private . ! Cached variables ; Definition at line 94 of file TFormula.h. ◆ fConsts. std::map<TString,Double_t> TFormula::fConsts. protected . ! ; Definition at line 146 of file TFormula.h. ◆ fFormula. TString TFormula::fFormula. protected . String representing the formula expression. ; Definition at line 148 of file TFormula.h. ◆ fFuncPtr. CallFuncSignature TFormula::fFuncPtr = nullptr. private . ! Function pointer, owned by the JIT. ; Definition at line 107 of file TFormula.h. ◆ fFuncs. std::list<TFormulaFunction> TFormula::fFuncs. protected . ! ; Definition at line 143 of file TFormula.h. ◆ fFunctionsShortcuts. std::map<TString,TString> TFormula::fFunctionsShortcuts. protected . ! ; Definition at line 147 of file TFormula.h. ◆ fGradFuncPtr. CallFuncSignature TFormula::fGradFuncPtr = nullptr. private . ! Function pointer, owned by the JIT. ; Definition at line 108 of file TFormula.h. ◆ fGradGenerationInput. std::string TFormula::fGradGenerationInput. private . ! Input query to clad to generate a gradient ; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:51949,variab,variables,51949,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"treamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. static TVirtualGraphPainter*fgPainterPointer to class painter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualGraphPainter * GetPainter(); Static function returning a pointer to the current graph painter.; If the graph painter does not exist a default painter (singleton) is created. void SetPainter(TVirtualGraphPainter* painter); Static function to set an alternative histogram painter. virtual ~TVirtualGraphPainter(); { }. Int_t DistancetoPrimitiveHelper(TGraph* theGraph, Int_t px, Int_t py). void DrawPanelHelper(TGraph* theGraph). void ExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py). char * GetObjectInfoHelper(TGraph* theGraph, Int_t px, Int_t py) const. void PaintHelper(TGraph* theGraph, Option_t* option). void PaintGraph(TGraph* theGraph, Int_t npoints, const Double_t* x, const Double_t* y, Option_t* chopt). void PaintGrapHist(TGraph* theGraph, Int_t npoints, const Double_t* x, const Double_t* y, Option_t* chopt). void PaintStats(TGraph* theGraph, TF1* fit). » Author: Olivier Couet 20/05/08 » Copyright (C) 1995",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualGraphPainter.html:6097,Inherit,Inheritance,6097,root/html534/TVirtualGraphPainter.html,https://root.cern,https://root.cern/root/html534/TVirtualGraphPainter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"treamerNVirtual_b);  . Private Attributes; TWebCanvas & fCanv;  ; Bool_t fProcessing {kFALSE};  ; Bool_t fSlow {kFALSE};  ; Int_t fSlowCnt {0};  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebCanvasTimer.html:13127,inherit,inherited,13127,doc/master/classTWebCanvasTimer.html,https://root.cern,https://root.cern/doc/master/classTWebCanvasTimer.html,1,['inherit'],['inherited']
Modifiability,"treamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TView * CreateView (Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr);  Create a concrete default 3-d view via the plug-in manager. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView.html:15274,inherit,inherited,15274,doc/master/classTView.html,https://root.cern,https://root.cern/doc/master/classTView.html,1,['inherit'],['inherited']
Modifiability,"treamerPass2 () override;  Schema evolution: if histObsList wasn't filled from persistence (v1) then fill it here. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:50816,parameteriz,parameterized,50816,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,1,['parameteriz'],['parameterized']
Modifiability,"treated like variable x. ; Definition at line 1002 of file TFormula.cxx. ◆ HasGeneratedGradient(). bool TFormula::HasGeneratedGradient ; (; ); const. inline . Definition at line 232 of file TFormula.h. ◆ HasGeneratedHessian(). bool TFormula::HasGeneratedHessian ; (; ); const. inline . Definition at line 237 of file TFormula.h. ◆ HasGradientGenerationFailed(). bool TFormula::HasGradientGenerationFailed ; (; ); const. inlineprivate . Definition at line 134 of file TFormula.h. ◆ HasHessianGenerationFailed(). bool TFormula::HasHessianGenerationFailed ; (; ); const. inlineprivate . Definition at line 137 of file TFormula.h. ◆ HessianPar() [1/2]. void TFormula::HessianPar ; (; const Double_t * ; x, . Double_t * ; result . ). Definition at line 3311 of file TFormula.cxx. ◆ HessianPar() [2/2]. void TFormula::HessianPar ; (; const Double_t * ; x, . TFormula::CladStorage & ; result . ). Compute the gradient employing automatic differentiation. ; Parameters. [in]x- The given variables, if nullptr the already stored variables are used. ; [out]result- The 2D hessian matrix flattened to form a vector in row-major order. . Definition at line 3286 of file TFormula.cxx. ◆ InitLambdaExpression(). Bool_t TFormula::InitLambdaExpression ; (; const char * ; formula). private . Definition at line 605 of file TFormula.cxx. ◆ InputFormulaIntoCling(). void TFormula::InputFormulaIntoCling ; (; ). private . Inputs formula, transfered to C++ code into Cling. ; Definition at line 876 of file TFormula.cxx. ◆ IsA(). TClass * TFormula::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 289 of file TFormula.h. ◆ IsAParameterName(). Bool_t TFormula::IsAParameterName ; (; const TString & ; formula, . int ; ipos . ). staticprotected . Definition at line 353 of file TFormula.cxx. ◆ IsBracket(). Bool_t TFormula::IsBracket ; (; const char ; c). staticprotected . Definition at line 294 of file TFormula.cxx. ◆ IsDefaultVariabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:42935,variab,variables,42935,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,2,['variab'],['variables']
Modifiability,"tree called t1. There is a possibility to fill branches one by one using the method TBranch::Fill(). In this case you do not need to call TTree::Fill() method. The entries can be set by TTree::SetEntries(Double_t n). Calling this method makes sense only if the number of existing entries is null.; 12.14.2 Viewing the Tree. The tree1.root file and its tree in the browser and a leaf histogram. In the right panel of the ROOT object browse are the branches: ev, px, py, pz, and random. Note that these are shown as leaves because they are “end” branches with only one leaf. To histogram a leaf, we can simply double click on it in the browser. This is how the tree t1 looks in the Tree Viewer. Here we can add a cut and add other operations for histogramming the leaves. See “The Tree Viewer”. For example, we can plot a two dimensional histogram. The tree viewer. 12.14.3 Reading the Tree; The tree1r function shows how to read the tree and access each entry and each leaf. We first define the variables to hold the read values.; Float_t px, py, pz;; Then we tell the tree to populate these variables when reading an entry. We do this with the method TTree::SetBranchAddress. The first parameter is the branch name, and the second is the address of the variable where the branch data is to be placed. In this example, the branch name is px. This name was given when the tree was written (see tree1w). The second parameter is the address of the variable px.; t1->SetBranchAddress(""px"",&px);; 12.14.3.1 GetEntry; Once the branches have been given the address, a specific entry can be read into the variables with the method TTree::GetEntry(n). It reads all the branches for entry (n) and populates the given address accordingly. By default, GetEntry() reuses the space allocated by the previous object for each branch. You can force the previous object to be automatically deleted if you call mybranch.SetAutoDelete(kTRUE) (default is kFALSE).; Consider the example in $ROOTSYS/test/Event.h. The top-lev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:555464,variab,variables,555464,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TEvePointSelectorConsumer; ETreeVarType_e fSourceCS;  . Private Member Functions;  TEvePointSetArray (const TEvePointSetArray &);  ; TEvePointSetArray & operator= (const TEvePointSetArray &);  . Friends; class TEvePointSetArrayEditor;  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetArray.html:32250,inherit,inherited,32250,doc/master/classTEvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,"tree structure is formed:; P = Pconvex - (Pconvex-P) where (-) means 'subtraction'; Pconvex-P = P1 + P2 + ... where (+) means 'union'; Note that P1, P2, ... do not intersect each other and they are defined by subsets of the list of vertices of P. They can be split in the same way as P*; Therefore, if C(P) represents the Boolean : 'does P contains a given point?', then:; C(P) = C(Pconvex) .and. not(C(P1) | C(P2) | ...); For creating a polygon without TGeoXtru class, one has to call the constructor TGeoPolygon(nvert) and then SetXY(Double_t *x, Double_t *y) providing the arrays of X and Y vertex positions (defined clockwise) that have to 'live' longer than the polygon they will describe. This complication is due to efficiency reasons. At the end one has to call the FinishPolygon() method. ; Definition at line 19 of file TGeoPolygon.h. Public Types; enum  { kGeoConvex = (1ULL << ( 9 )); , kGeoFinishPolygon = (1ULL << ( 10 )); , kGeoACW = (1ULL << ( 11 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoPolygon ();  Dummy constructor. ;  ;  TGeoPolygon (Int_t nvert);  Default constructor. ;  ;  ~TGeoPolygon () override;  Destructor. ;  ; Double_t Area () const;  Computes area of the polygon in [length^2]. ;  ; Bool_t Contains (const Double_t *point) const;  Check if a point given by X = point[0], Y = point[1] is inside the polygon. ;  ; void Draw (Option_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPolygon.html:2089,inherit,inherited,2089,doc/master/classTGeoPolygon.html,https://root.cern,https://root.cern/doc/master/classTGeoPolygon.html,1,['inherit'],['inherited']
Modifiability,"tree, . const TString & ; className, . Double_t ; weight, . const TCut & ; cut, . const TString & ; treeType . ). number of signal events (used to compute significance) ; Definition at line 334 of file DataLoader.cxx. ◆ AddTree() [2/2]. void TMVA::DataLoader::AddTree ; (; TTree * ; tree, . const TString & ; className, . Double_t ; weight = 1.0, . const TCut & ; cut = """", . Types::ETreeType ; tt = Types::kMaxTreeType . ). Definition at line 351 of file DataLoader.cxx. ◆ AddVariable() [1/2]. void TMVA::DataLoader::AddVariable ; (; const TString & ; expression, . char ; type = 'F', . Double_t ; min = 0, . Double_t ; max = 0 . ). user inserts discriminating variable in data set info ; Definition at line 494 of file DataLoader.cxx. ◆ AddVariable() [2/2]. void TMVA::DataLoader::AddVariable ; (; const TString & ; expression, . const TString & ; title, . const TString & ; unit, . char ; type = 'F', . Double_t ; min = 0, . Double_t ; max = 0 . ). user inserts discriminating variable in data set info ; Definition at line 485 of file DataLoader.cxx. ◆ AddVariablesArray(). void TMVA::DataLoader::AddVariablesArray ; (; const TString & ; expression, . int ; size, . char ; type = 'F', . Double_t ; min = 0, . Double_t ; max = 0 . ). user inserts discriminating array of variables in data set info in case input tree provides an array of values ; Definition at line 504 of file DataLoader.cxx. ◆ Class(). static TClass * TMVA::DataLoader::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::DataLoader::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::DataLoader::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 214 of file DataLoader.h. ◆ CreateEventAssignTrees(). TTree * TMVA::DataLoader::CreateEventAssignTrees ; (; const TString & ; name). create the data assignment tree (for event-wise data assignment by user) ; Definition at line 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader.html:27781,variab,variable,27781,doc/master/classTMVA_1_1DataLoader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader.html,1,['variab'],['variable']
Modifiability,"tree, or using TChains as input) The TTreeFormulas, that hold the input expressions need to be re-associated with the new tree, which is done here. ;  ; Bool_t CheckTTreeFormula (TTreeFormula *ttf, const TString &expression, Bool_t &hasDollar);  checks a TTreeFormula for problems ;  ; void InitOptions (DataSetInfo &dsi, EvtStatsPerClass &eventsmap, TString &normMode, UInt_t &splitSeed, TString &splitMode, TString &mixMode);  the dataset splitting ;  ; MsgLogger & Log () const;  ; DataSet * MixEvents (DataSetInfo &dsi, EventVectorOfClassesOfTreeType &eventsmap, EvtStatsPerClass &eventCounts, const TString &splitMode, const TString &mixMode, const TString &normMode, UInt_t splitSeed);  Select and distribute unassigned events to kTraining and kTesting. ;  ; void RenormEvents (DataSetInfo &dsi, EventVectorOfClassesOfTreeType &eventsmap, const EvtStatsPerClass &eventCounts, const TString &normMode);  renormalisation of the TRAINING event weights ;  ; void ResetBranchAndEventAddresses (TTree *);  ; void ResetCurrentTree ();  ; Bool_t Verbose ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fComputeCorrelations = kFALSE;  Whether to force computation of correlations or not. ;  ; Bool_t fCorrelations = kFALSE;  Whether to print correlations or not. ;  ; UInt_t fCurrentEvtIdx;  the current event (to avoid reading of the same event) ;  ; TTree * fCurrentTree;  the tree, events are currently read from ;  ; std::vector< TTreeFormula * > fCutFormulas;  cuts ;  ; std::vector< TTreeFormula * > fInputFormulas;  input variables ;  ; std::vector< std::pair< TTreeFormula *, Int_t > > fInputTableFormulas;  ! input variables expression for arrays ;  ; MsgLogger * fLogger;  ! message logger ;  ; Bool_t fScaleWithPreselEff;  how to deal with requested #events in connection with preselection cut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html:11325,inherit,inherited,11325,doc/master/classTMVA_1_1DataSetFactory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html,1,['inherit'],['inherited']
Modifiability,"tribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,int>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:40 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction4Binding_double_double_double_double_int_.html:37611,variab,variable,37611,root/html534/RooCFunction4Binding_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction4Binding_double_double_double_double_int_.html,2,['variab'],['variable']
Modifiability,"tribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,int>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:17 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction4Binding_double_double_double_double_int_.html:35060,variab,variable,35060,root/html530/RooCFunction4Binding_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction4Binding_double_double_double_double_int_.html,1,['variab'],['variable']
Modifiability,"tribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,int>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:35 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction4Binding_double_double_double_double_int_.html:35439,variab,variable,35439,root/html532/RooCFunction4Binding_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html532/RooCFunction4Binding_double_double_double_double_int_.html,1,['variab'],['variable']
Modifiability,"tributed RDataFrame now supports processing an RNTuple dataset.; In distributed RDataFrame, the initialize function useful to run initialization code at the beginning of every task on a worker will now run only in the worker processes. Previously, it was also run eagerly at the point of calling, that is in the main user process. This is done to better separate the user driver environment and the worker environments. If necessary, the function passed to initialize can be called directly by the user in the main application to reproduce the same effect as before.; Some internal details of the RDataFrame implementation were reworked to decrease memory usage and runtime of programs with very deep computation graphs (more than O(10K) nodes in the same branch). Preliminary tests indicate between 30% and a factor 2.5 in memory decrease. This improvement is transparent for RDataFrame users. Graphics backends; The ROOT release 6.32 brings a lot of impressive enhancements to the Web Graphics package, greatly surpassing the features and capabilities of version 6.30. This update provides users with a more robust Web Graphics. The JSROOT version has been updated to v7.7. 2D Graphics Libraries. TMultiGraph: Add the objects from the list of functions in legend produce by TLegend.; Implement the IsInside method for TEllipse, TCrown and TDiamond. Also, a new graphics example inside.C has been added.; Two new methods in TColor: ListColors() and GetColorByname().; Make sure the option L draws closed polygon for TH2Poly.; Use Tex Gyre fonts for sans serif (similar to Helvetica) .; The new method TPad::ModifiedUpdate is short cut to call Modified() and Update() in a single call. On Mac with Cocoa, it performs an additional ProcessEvents().; Improve SetTextSize error: show code and values.; Very long text string generated a wrong SVG file.; Fix the option SAME works for TGraph2D.; Implement the title for the palette of a TH3.; Fix typo in TLegend::PaintPrimitives() and improve the exclusi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:16756,enhance,enhancements,16756,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['enhance'],['enhancements']
Modifiability,"tributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveProjected;  TEveProjected ();  Constructor. ;  ; virtual ~TEveProjected ();  Destructor. ;  ; Float_t GetDepth () const;  ; TEveProjectionManager * GetManager () const;  ; TEveProjectable * GetProjectable () const;  ; virtual void SetDepth (Float_t d);  Set depth coordinate for the element. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnRefProjectable (TEveProjectable *assumed_parent, bool notifyParent=true);  Remove reference to projectable. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t GetDefaultSmooth ();  Get default value for smooth-line drawing flag. ;  ; static void SetDefaultSmooth (Bool_t r);  Set default value for smooth-line drawing flag (default kFALSE). ;  ;  Static Public Member Functions inherited from TEvePointSet; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPointSet3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:39028,inherit,inherited,39028,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,1,['inherit'],['inherited']
Modifiability,"tributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TH3C; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; void UpdateBinContent (Int_t bin, Double_t content) override;  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH3;  TH3 ();  Default constructor. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type double. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type float. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t z, Double_t w);  Accumulate arguments in buffer. ;  ; Int_t BufferFill (Double_t, Double_t) override;  accumulate arguments in buffer. ;  ; virtual Int_t BufferFill (Double_t, Double_t, Double_t);  ; void DoFillProfileProjection (TProfile2D *p2, const TAxis &a1, const TAxis &a2, const TAxis &a3, Int_t bin1, Int_t bin2, Int_t bin3, Int_t inBin, Bool_t useWeights) const;  internal function to fill the bins of the projected profile 2D histogram called from DoProjectProfile2D ;  ; virtual TH1D * DoProject1D (const char *name, const char *title, const TAxis *projAxis, const TAx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:52513,variab,variable,52513,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,1,['variab'],['variable']
Modifiability,"tributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpline.h>. Inheritance diagram for TSpline3:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSpline3() [1/8]. TSpline3::TSpline3 ; (; ). inline . Definition at line 194 of file TSpline.h. ◆ TSpline3() [2/8]. TSpline3::TSpline3 ; (; const char * ; title, . Double_t ; x[], . Double_t ; y[], . Int_t ; n, . const char * ; opt = nullptr, . Double_t ; valbeg = 0, . Double_t ; valend = 0 . ). Third spline creator given an array of arbitrary knots in increasing abscissa order and possibly end point conditions. ; Definition at line 358 of file TSpline.cxx. ◆ TSpline3() [3/8]. TSpline3::TSpline3 ; (; const char * ; title, . Double_t ; xmin, . Double_t ; xmax, . Double_t ; y[], . Int_t ; n, . const char * ; opt = nullptr, . Double_t ; valbeg = 0, . Double_t ; valend = 0 . ). Third spline creator given an array of arbitrary function values on equidi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline3.html:20894,inherit,inherited,20894,doc/master/classTSpline3.html,https://root.cern,https://root.cern/doc/master/classTSpline3.html,1,['inherit'],['inherited']
Modifiability,"tributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpline.h>. Inheritance diagram for TSpline5:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSpline5() [1/8]. TSpline5::TSpline5 ; (; ). inline . Definition at line 250 of file TSpline.h. ◆ TSpline5() [2/8]. TSpline5::TSpline5 ; (; const char * ; title, . Double_t ; x[], . Double_t ; y[], . Int_t ; n, . const char * ; opt = nullptr, . Double_t ; b1 = 0, . Double_t ; e1 = 0, . Double_t ; b2 = 0, . Double_t ; e2 = 0 . ). Quintic natural spline creator given an array of arbitrary knots in increasing abscissa order and possibly end point conditions. ; Definition at line 1213 of file TSpline.cxx. ◆ TSpline5() [3/8]. TSpline5::TSpline5 ; (; const char * ; title, . Double_t ; xmin, . Double_t ; xmax, . Double_t ; y[], . Int_t ; n, . const char * ; opt = nullptr, . Double_t ; b1 = 0, . Double_t ; e1 = 0, . Double_t ; b2 = 0, . Double_t ; e2 = 0 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline5.html:21297,inherit,inherited,21297,doc/master/classTSpline5.html,https://root.cern,https://root.cern/doc/master/classTSpline5.html,1,['inherit'],['inherited']
Modifiability,"tributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpline.h>. Inheritance diagram for TSpline:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSpline() [1/3]. TSpline::TSpline ; (; const TSpline & ; sp). protected . Copy constructor. ; Definition at line 41 of file TSpline.cxx. ◆ TSpline() [2/3]. TSpline::TSpline ; (; ). inline . Definition at line 47 of file TSpline.h. ◆ TSpline() [3/3]. TSpline::TSpline ; (; const char * ; title, . Double_t ; delta, . Double_t ; xmin, . Double_t ; xmax, . Int_t ; np, . Bool_t ; step . ). inline . Definition at line 48 of file TSpline.h. ◆ ~TSpline(). TSpline::~TSpline ; (; ). override . Destructor. ; Definition at line 60 of file TSpline.cxx. Member Function Documentation. ◆ BuildCoeff(). virtual void TSpline::BuildCoeff ; (; ). protectedpure virtual . Implemented in TSpline3, TSpline5, TMVA::TSpline1, and TMVA::TSpline2. ◆ Class(). static TClass * TSp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline.html:17689,inherit,inherited,17689,doc/master/classTSpline.html,https://root.cern,https://root.cern/doc/master/classTSpline.html,1,['inherit'],['inherited']
Modifiability,"tributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEveBoxProjected Class ReferenceGraphics » 3D Graphics » Event Display. ; Projection of TEveBox. ; Definition at line 56 of file TEveBox.h. Public Member Functions;  TEveBoxProjected (const char *n=""TEveBoxProjected"", const char *t="""");  Constructor. ;  ;  ~TEveBoxProjected () override;  Destructor. ;  ; void ComputeBBox () override;  Compute bounding-box, virtual from TAttBBox. ;  ; TEveElement * GetProjectedAsElement () override;  Returns this projected dynamic-casted to TEveElement. ;  ; TClass * IsA () const override;  ; void SetProjection (TEveProjectionManager *mng, TEveProjectable *model) override;  This is virtual method from base-class TEveProjected. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  Re-project the box. ;  ;  Public Member Functions inherited from TEveShape;  TEveShape (const char *n=""TEveShape"", const char *t="""");  Constructor. ;  ;  ~TEveShape () override;  Destructor. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; virtual Bool_t GetDrawFrame () const;  ; virtual Color_t GetFillColor () const;  ; virtual Bool_t GetHighlightFrame () const;  ; virtual Color_t GetLineColor () const;  ; virtual Float_t GetLineWidth () const;  ; virtual Bool_t GetMiniFrame () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint this object. Only direct rendering is supported. ;  ; virtual void SetDrawFrame (Bool_t f);  ; virtual void SetFillColor (Color_t c);  ; virtual void SetHighlightFrame (Bool_t f);  ; virtual void SetLineColor (Color_t c);  ; virtual void SetLineWidth (Float_t lw);  ; void SetMainColor (Color_t color) override;  Set main color. ;  ; virtual void SetMiniFrame (Bool_t r);  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBoxProjected.html:1216,inherit,inherited,1216,doc/master/classTEveBoxProjected.html,https://root.cern,https://root.cern/doc/master/classTEveBoxProjected.html,1,['inherit'],['inherited']
Modifiability,"tributes. ==> TTree *tree = new TTree(name, title); Creates a Tree with name and title. Various kinds of branches can be added to a tree:; A - simple structures or list of variables. (may be for C or Fortran structures); B - any object (inheriting from TObject). (we expect this option be the most frequent); C - a ClonesArray. (a specialized object for collections of same class objects). ==> Case A. TBranch *branch = tree->Branch(branchname, address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t); - O : [the letter 'o', not a zero] a boolean (Bool_t); * If the address points to a single numerical variable, the leaflist is optional:; int value;; tree->Branch(branchname, &value);; * If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable (even between CINT and compiled code on the platform); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:2342,variab,variable,2342,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,8,['variab'],['variable']
Modifiability,"tributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNorm! Assume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHistFunc(); Default constructor. RooHistFunc(const char* name, const char* title, const RooArgSet& vars, const RooDataHist& dhist, Int_t intOrder = 0); Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; for the entire life span of this function. RooHistFunc(const RooHistFunc& other, const char* name = 0); Copy constructor. Double_t evaluate() const; Return the current value: The value of the bin enclosing the current coordinates; of the dependents, normalized by the histograms contents. Interpolation; is applied if the RooHistFunc is configured to do that. Double_t totVolume() const; Return the total volume spanned by the observables of the RooDataHist. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Determine integration scenario. If no interpolation is used,; RooHistFunc can perform all integrals over its dependents; an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHistFunc.html:33280,variab,variable,33280,root/html526/RooHistFunc.html,https://root.cern,https://root.cern/root/html526/RooHistFunc.html,5,['variab'],['variable']
Modifiability,"tributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNorm! Assume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHistFunc(); Default constructor. RooHistFunc(const char* name, const char* title, const RooArgSet& vars, const RooDataHist& dhist, Int_t intOrder = 0); Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; for the entire life span of this function. RooHistFunc(const char* name, const char* title, const RooArgList& funcObs, const RooArgList& histObs, const RooDataHist& dhist, Int_t intOrder = 0); Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; for the entire life span of this function. RooHistFunc(const RooHistFunc& other, const char* name = 0); Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooHistFunc.html:36869,variab,variable,36869,root/html534/RooHistFunc.html,https://root.cern,https://root.cern/root/html534/RooHistFunc.html,2,['variab'],['variable']
Modifiability,"tributes; Long64_t fFrom;  ; TProofLog * fLogger;  ; TMacro * fMacro;  ; TString fRole;  ; Long64_t fSize;  ; Long64_t fTo;  . Static Private Attributes; static Long64_t fgMaxTransferSize = 100000;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProofLog.h>. Inheritance diagram for TProofLogElem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofLogElem(). TProofLogElem::TProofLogElem ; (; const char * ; ord, . const char * ; url, . TProofLog * ; logger . ). Constructor. ; Definition at line 318 of file TProofLog.cxx. ◆ ~TProofLogElem(). TProofLogElem::~TProofLogElem ; (; ). override . Destructor. ; Definition at line 343 of file TProofLog.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofLogElem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofLogElem::Class_Name ; (; ). static . ReturnsName of this class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLogElem.html:11649,inherit,inherited,11649,doc/master/classTProofLogElem.html,https://root.cern,https://root.cern/doc/master/classTProofLogElem.html,2,['inherit'],['inherited']
Modifiability,"tributes; TObject *& fObj;  ; Bool_t fResetMustCleanupBit;  . Private Member Functions;  TObjectRefSpy (const TObjectRefSpy &s)=delete;  ; TObjectRefSpy & operator= (const TObjectRefSpy &s)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TObjectSpy.h>. Inheritance diagram for TObjectRefSpy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjectRefSpy() [1/2]. TObjectRefSpy::TObjectRefSpy ; (; const TObjectRefSpy & ; s). privatedelete . ◆ TObjectRefSpy() [2/2]. TObjectRefSpy::TObjectRefSpy ; (; TObject *& ; obj, . Bool_t ; fixMustCleanupBit = kTRUE . ). Register the object that must be spied. ; The object must have the kMustCleanup bit set. If the object has been deleted during a RecusiveRemove() operation, GetObject() will return 0. ; Definition at line 103 of file TObjectSpy.cxx. ◆ ~TObjectRefSpy(). TObjectRefSpy::~TObjectRefSpy ; (; ). virtual . Cleanup. ; Definition at line 123 of file TObjectSpy.cxx. Member Function Documentation. ◆ Class(). static TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjectRefSpy.html:9947,inherit,inherited,9947,doc/master/classTObjectRefSpy.html,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html,2,['inherit'],['inherited']
Modifiability,"tributes; UShort_t fBits2;  Second bit status word. ;  ; Int_t fFirst;  First bin to display. ;  ; THashList * fLabels;  List of labels. ;  ; Int_t fLast;  Last bin to display. ;  ; TList * fModLabs;  List of modified labels. ;  ; Int_t fNbins;  Number of bins. ;  ; TObject * fParent;  ! Object owning this axis ;  ; Bool_t fTimeDisplay;  On/off displaying time values instead of numerics. ;  ; TString fTimeFormat;  Date&time format, ex: 09/12/99 12:34:00. ;  ; TArrayD fXbins;  Bin edges array in X. ;  ; Double_t fXmax;  Upper edge of last bin. ;  ; Double_t fXmin;  Low edge of first bin. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttAxis; Color_t fAxisColor;  Color of the line axis. ;  ; Color_t fLabelColor;  Color of labels. ;  ; Style_t fLabelFont;  Font for labels. ;  ; Float_t fLabelOffset;  Offset of labels. ;  ; Float_t fLabelSize;  Size of labels. ;  ; Int_t fNdivisions;  Number of divisions(10000*n3 + 100*n2 + n1) ;  ; Float_t fTickLength;  Length of tick marks. ;  ; Color_t fTitleColor;  Color of axis title. ;  ; Style_t fTitleFont;  Font for axis title. ;  ; Float_t fTitleOffset;  Offset of axis title. ;  ; Float_t fTitleSize;  Size of axis title. ;  . #include <TAxis.h>. Inheritance diagram for TAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. private . TAxis extra status bits (stored in fBits2) . EnumeratorkAlphanumeric Axis is alphanumeric. . kCanExtend Axis can be extended. . kNotAlpha Axis is forced to be not alphanumeric. . Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis.html:21729,inherit,inherited,21729,doc/master/classTAxis.html,https://root.cern,https://root.cern/doc/master/classTAxis.html,2,['inherit'],['inherited']
Modifiability,"tributing most to the reduction of \( S\) are chosen first (TMultiDimFit::TestFunction).; In case \( \phi \) isn't defined, an alternative method of performing this second test is used: The \(L^{\mbox{th}}\) function \(\textbf{f}_L\) is accepted if (refer also to equation (13)) ; \[; \Delta S_L > \frac{S_{L-1}}{L_{max}-L}; \]. where \( S_{L-1}\) is the sum of the \( L-1\) first residuals from the \( L-1\) functions previously accepted; and \( L_{max}\) is the total number of functions allowed in the final expression of the fit (defined by user).; From this we see, that by restricting \( L_{max}\) – the number of terms in the final model – the fit is more difficult to perform, since the above selection criteria is more limiting.; The more coefficients we evaluate, the more the sum of squares of residuals \( S\) will be reduced. We can evaluate \( S\) before inverting \(\mathsf{B}\) as shown below. Coefficients and Coefficient Errors; Having found a parameterization, that is the \( F_l\)'s and \( L\), that minimizes \( S\), we still need to determine the coefficients \( c_l\). However, it's a feature of how we choose the significant functions, that the evaluation of the \( c_l\)'s becomes trivial 5. To derive \(\mathbf{c}\), we first note that equation (4) can be written as ; \[; \mathsf{F} = \mathsf{W}\mathsf{B}; \]. where ; \begin{eqnarray*}; b_{ij} = \frac{\mathbf{f}_j \bullet \mathbf{w}_i}{\mathbf{w}_i^2}; & \mbox{if} & i < j\\; 1 & \mbox{if} & i = j\\; 0 & \mbox{if} & i > j; \end{eqnarray*}. Consequently, \(\mathsf{B}\) is an upper triangle matrix, which can be readily inverted. So we now evaluate ; \[; \mathsf{F}\mathsf{B}^{-1} = \mathsf{W}; \]. The model \(\mathsf{W}\mathbf{a}\) can therefore be written as \((\mathsf{F}\mathsf{B}^{-1})\mathbf{a} = \mathsf{F}(\mathsf{B}^{-1}\mathbf{a})\,.\); The original model \(\mathsf{F}\mathbf{c}\) is therefore identical with this if ; \[; \mathbf{c} = \left(\mathsf{B}^{-1}\mathbf{a}\right) =; \left[\mathbf{a}^T\left(\mathsf{",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:11859,parameteriz,parameterization,11859,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['parameteriz'],['parameterization']
Modifiability,"tricFunctionMultiDimTemplIParamFunction interface (abstract class) describing multi-dimensional parametric functions It is a d...Definition IParamFunction.h:108; double; xDouble_t x[n]Definition legend1.C:17; HFit::FitTFitResultPtr Fit(FitObject *h1, TF1 *f1, Foption_t &option, const ROOT::Math::MinimizerOptions &moption, const char *goption, ROOT::Fit::DataRange &range)Definition HFitImpl.cxx:133; ROOT::Fit::LogLikelihoodFunctionLogLikelihoodFCN< ROOT::Math::IMultiGenFunction, ROOT::Math::IParamMultiFunction > LogLikelihoodFunctionDefinition LogLikelihoodFCN.h:180; ROOT::Fit::LogLikelihoodGradFunctionLogLikelihoodFCN< ROOT::Math::IMultiGradFunction, ROOT::Math::IParamMultiFunction > LogLikelihoodGradFunctionDefinition LogLikelihoodFCN.h:181; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::EExecutionPolicyEExecutionPolicyDefinition EExecutionPolicy.hxx:5; ROOT::EExecutionPolicy::kSequential@ kSequential; ROOT::Fit::FitUtil::Evaluate::EvalLogLstatic double EvalLogL(const IModelFunctionTempl< double > &func, const UnBinData &data, const double *p, int iWeight, bool extended, unsigned int &nPoints, ::ROOT::EExecutionPolicy executionPolicy, unsigned nChunks=0)Definition FitUtil.h:1413; ROOT::Fit::FitUtil::Evaluate::EvalLogLGradientstatic void EvalLogLGradient(const IModelFunctionTempl< double > &func, const UnBinData &data, const double *p, double *g, unsigned int &nPoints, ::ROOT::EExecutionPolicy executionPolicy=::ROOT::EExecutionPolicy::kSequential, unsigned nChunks=0)Definition FitUtil.h:1464; ROOT::Fit::FitUtil::Evaluate::EvalPdfstatic double EvalPdf(const IModelFunctionTempl< double > &func, const UnBinData &data, const double *p, unsigned int i, double *g, double *h, bool hasGrad, bool fullHessian)Definition FitUtil.h:1451. mathmathcoreincFitLogLikelihoodFCN.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:39 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html:14189,extend,extended,14189,doc/master/LogLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html,1,['extend'],['extended']
Modifiability,"tricStepFunction &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TObject * clone (const char *newname) const override;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; double * getLimits ();  ; Int_t getnBins () const;  ; TClass * IsA () const override;  ; std::list< double > * plotSamplingHint (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParametricStepFunction.html:5672,inherit,inherited,5672,doc/master/classRooParametricStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooParametricStepFunction.html,1,['inherit'],['inherited']
Modifiability,"tries ; (; ); const. virtual . Return number of entries in dataset, i.e., count unweighted entries. ; Definition at line 323 of file RooAbsData.cxx. ◆ operator=(). RooAbsData & RooAbsData::operator= ; (; const RooAbsData & ; other). Definition at line 255 of file RooAbsData.cxx. ◆ optimizeReadingWithCaching(). void RooAbsData::optimizeReadingWithCaching ; (; RooAbsArg & ; arg, . const RooArgSet & ; cacheList, . const RooArgSet & ; keepObsList . ). protectedvirtual . Prepare dataset for use with cached constant terms listed in 'cacheList' of expression 'arg'. ; Deactivate tree branches for any dataset observable that is either not used at all, or is used exclusively by cached branch nodes. ; Definition at line 2262 of file RooAbsData.cxx. ◆ plotAsymOn(). RooPlot * RooAbsData::plotAsymOn ; (; RooPlot * ; frame, . const RooAbsCategoryLValue & ; asymCat, . PlotOpt ; o . ); const. protectedvirtual . Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ), where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1 as function of the frames variable. ; The asymmetry category 'asymCat' must have exactly 2 (or 3) states defined with index values +1,-1 (and 0); The plot range and the number of plot bins is determined by the parameters of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()); The optional cut string expression can be used to select the events to be plotted. The cut specification may refer to any variable contained in the data set; The drawOptions are passed to the TH1::Draw() method ; Definition at line 1963 of file RooAbsData.cxx. ◆ plotEffOn(). RooPlot * RooAbsData::plotEffOn ; (; RooPlot * ; frame, . const RooAbsCategoryLValue & ; effCat, . PlotOpt ; o . ); const. protectedvirtual . Create and fill a histogram with the efficiency N[1] / ( N[1] + N[0] ), where N(1/0) is the number of data points with effCat=1 and effCat=0 as function of the frames variable. ; The efficiency category 'effCat' ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:53403,variab,variable,53403,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variable']
Modifiability,"tries to be distributed;; TVirtualPacketizer::EUseEstOptTVirtualPacketizer::fUseEstOptControl usage of estimated values for the progress info; Bool_tTVirtualPacketizer::fValidConstructed properly?; static TVirtualPacketizer::EUseEstOptTVirtualPacketizer::kEstAverage; static TVirtualPacketizer::EUseEstOptTVirtualPacketizer::kEstCurrent; static TVirtualPacketizer::EUseEstOptTVirtualPacketizer::kEstOff. private:. TList*fActivenodes with unfinished files; Bool_tfDefMaxWrkNodeWhether the default is used for the max workers per node; TList*fFileNodesnodes with files; Bool_tfHeuristicPSizWhether the packet size is calculated heuristically; Int_tfMaxPerfIdxmaximum of our slaves' performance index; Long_tfMaxSlaveCntmaximum number of workers per filenode (Long_t to avoid; Int_tfPacketAsAFractionused to calculate the packet size; Long64_tfPacketSizeglobal base packet size; TList*fPacketsall processed packets; TList*fUnAllocatednodes with unallocated files. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPacketizer(TDSet* dset, TList* slaves, Long64_t first, Long64_t num, TList* input, TProofProgressStatus* st); Constructor. ~TPacketizer(); Destructor. Int_t AddWorkers(TList* workers); Adds new workers. Returns the number of workers added, or -1 on failure. void RemoveUnAllocNode(TPacketizer::TFileNode* ); Remove unallocated node. void RemoveActive(TPacketizer::TFileStat* file); Remove file from the list of actives. void RemoveActiveNode(TPacketizer::TFileNode* ); Remove node from the list of actives. void Reset(); Reset the internal datastructure for packet distribution. void ValidateFiles(TDSet* dset, TList* slaves, Long64_t maxent = -1, Bool_t byfile = kFALSE); Check existence of file/dir/tree an get number of entries.; Assumes the files have been setup. Long64_t GetEntriesProcessed(TSlave* sl) const; Get entries processed by the specified slave. Float_t GetCurrentRate(Bool_t& all); Get Estimation of the current rate; just summing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPacketizer.html:11278,Inherit,Inheritance,11278,root/html604/TPacketizer.html,https://root.cern,https://root.cern/root/html604/TPacketizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tries(); const TList*THtml::TFileSysDir::GetFiles() const; virtual voidTHtml::TFileSysEntry::GetFullName(TString& fullname, Bool_t asIncluded) const; virtual const char*TObject::GetIconName() const; const TString&GetIgnore() const; Int_tTHtml::TFileSysEntry::GetLevel() const; TExMap&GetMapIno(); Int_tGetMaxLevel() const; virtual const char*THtml::TFileSysEntry::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml::TFileSysDir*THtml::TFileSysEntry::GetParent() const; const TList*THtml::TFileSysDir::GetSubDirs() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTHtml::TFileSysEntry::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); THtml::TFileSysEntry&TH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THtml__TFileSysDB.html:2801,Inherit,InheritsFrom,2801,root/html532/THtml__TFileSysDB.html,https://root.cern,https://root.cern/root/html532/THtml__TFileSysDB.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tries(); const TList*THtml::TFileSysDir::GetFiles() const; virtual voidTHtml::TFileSysEntry::GetFullName(TString& fullname, Bool_t asIncluded) const; virtual const char*TObject::GetIconName() const; const TString&GetIgnore() const; Int_tTHtml::TFileSysEntry::GetLevel() const; TExMap&GetMapIno(); Int_tGetMaxLevel() const; virtual const char*THtml::TFileSysEntry::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml::TFileSysDir*THtml::TFileSysEntry::GetParent() const; const TList*THtml::TFileSysDir::GetSubDirs() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTHtml::TFileSysEntry::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); THtml::TFileSysDB&operator=(const THtml::TFileSysDB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THtml__TFileSysDB.html:2744,Inherit,InheritsFrom,2744,root/html602/THtml__TFileSysDB.html,https://root.cern,https://root.cern/root/html602/THtml__TFileSysDB.html,2,['Inherit'],['InheritsFrom']
Modifiability,tries. private . ![fNx*fNy] current selected entries; ; Definition at line 49 of file TSpider.h. ◆ fDisplayAverage. bool TSpider::fDisplayAverage. private . Display or not the average. ; Definition at line 66 of file TSpider.h. ◆ fEntry. Long64_t TSpider::fEntry. private . Present entry number in fTree. ; Definition at line 46 of file TSpider.h. ◆ fFirstEntry. Long64_t TSpider::fFirstEntry. private . First entry. ; Definition at line 48 of file TSpider.h. ◆ fForceDim. bool TSpider::fForceDim. private . Force dimension. ; Definition at line 67 of file TSpider.h. ◆ fFormulas. TList* TSpider::fFormulas. private . List of all formulas to represent. ; Definition at line 58 of file TSpider.h. ◆ fInput. TList* TSpider::fInput. private . Used for fSelector. ; Definition at line 59 of file TSpider.h. ◆ fManager. TTreeFormulaManager* TSpider::fManager. private . Coordinator for the formulas. ; Definition at line 60 of file TSpider.h. ◆ fMax. Double_t* TSpider::fMax. private . [fNcols] Maximum value of the variables. ; Definition at line 51 of file TSpider.h. ◆ fMin. Double_t* TSpider::fMin. private . [fNcols] Minimum value of the variables. ; Definition at line 52 of file TSpider.h. ◆ fNcols. UInt_t TSpider::fNcols. private . Number of variables. ; Definition at line 44 of file TSpider.h. ◆ fNentries. Long64_t TSpider::fNentries. private . Number of entries. ; Definition at line 47 of file TSpider.h. ◆ fNx. UInt_t TSpider::fNx. private . Number of horizontal spider plots. ; Definition at line 42 of file TSpider.h. ◆ fNy. UInt_t TSpider::fNy. private . Number of vertical spider plots. ; Definition at line 43 of file TSpider.h. ◆ fPolargram. TGraphPolargram* TSpider::fPolargram. private . Polar graph. ; Definition at line 61 of file TSpider.h. ◆ fPolyList. TList* TSpider::fPolyList. private . Polygons representing the variables. ; Definition at line 62 of file TSpider.h. ◆ fSegmentDisplay. bool TSpider::fSegmentDisplay. private . True if displaying a segment plot. ; Definition a,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:32617,variab,variables,32617,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variables']
Modifiability,"tries:; // list box widget containing 10 entries; int fFirstEntry = 0, fLastEntry = 10;; char tmp[20];; TGListBox *fListBox = new TGListBox(parent, 90);; for (i = fFirstEntry; i < fLastEntry; i++) {; sprintf(tmp, ""Entry %i"", i+1);; fListBox->AddEntry(tmp, i);; }; fListBox->Resize(150, 80);; parent->AddFrame(fListBox,new TGLayoutHints(kLHintsTop|kLHintsLeft,; 5, 5, 5, 5));; We create the list box widget passing the parent window pointer and giving an ID number. Next we add entries with specified string and ID to the list box. Before adding the list box to its parent widget, it should be resized via Resize(width, height) method. The list box width and height are in pixels. The default entry layout hints are kLHintsExpandX | kLHintsTop. If you want to add entries using different ones, call the method:; TGListBox::AddEntry(TGLBEntry *lbe, TGLayoutHints *lhints);; It adds the specified TGLBEntry and TGLayoutHints to the list box. There are several methods providing a flexible entry manipulation: you can insert, add or remove list box items dynamically. The list box entry IDs are used in these methods and also in event processing routines. In our example the integer variables fFirstEntry and fLastEntry contain the information about the first and last entry IDs. You can add or remove a list box entry using them in the following way:; // adding an entry; fLastEntry++;; sprintf(tmp, ""Entry %i"", fLastEntry);; fListBox->AddEntry(tmp, fLastEntry);; fListBox->MapSubwindows();; fListBox->Layout();; . . .; // removing an entry; if (fFirstEntry < fLastEntry) {; fListBox->RemoveEntry(fFirstEntry);; fListBox->Layout();; fFirstEntry++;; }; A single-selection list box is used for selecting only one item in a list.; A multiple-selection list box permits selection of more than one item. The selected choices should be visible - you have several choices to do this:. to mark selected choices with a check mark or highlight them; to provide a summary list box to the right of the list box, cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1201456,flexible,flexible,1201456,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['flexible'],['flexible']
Modifiability,"trieveBinContent(bin);; 8753 if (value < min) min = value;; 8754 if (value > max) max = value;; 8755 }; 8756 }; 8757 }; 8758}; 8759 ; 8760////////////////////////////////////////////////////////////////////////////////; 8761/// Redefine x axis parameters.; 8762///; 8763/// The X axis parameters are modified.; 8764/// The bins content array is resized; 8765/// if errors (Sumw2) the errors array is resized; 8766/// The previous bin contents are lost; 8767/// To change only the axis limits, see TAxis::SetRange; 8768 ; 8769void TH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax); 8770{; 8771 if (GetDimension() != 1) {; 8772 Error(""SetBins"",""Operation only valid for 1-d histograms"");; 8773 return;; 8774 }; 8775 fXaxis.SetRange(0,0);; 8776 fXaxis.Set(nx,xmin,xmax);; 8777 fYaxis.Set(1,0,1);; 8778 fZaxis.Set(1,0,1);; 8779 fNcells = nx+2;; 8780 SetBinsLength(fNcells);; 8781 if (fSumw2.fN) {; 8782 fSumw2.Set(fNcells);; 8783 }; 8784}; 8785 ; 8786////////////////////////////////////////////////////////////////////////////////; 8787/// Redefine x axis parameters with variable bin sizes.; 8788///; 8789/// The X axis parameters are modified.; 8790/// The bins content array is resized; 8791/// if errors (Sumw2) the errors array is resized; 8792/// The previous bin contents are lost; 8793/// To change only the axis limits, see TAxis::SetRange; 8794/// xBins is supposed to be of length nx+1; 8795 ; 8796void TH1::SetBins(Int_t nx, const Double_t *xBins); 8797{; 8798 if (GetDimension() != 1) {; 8799 Error(""SetBins"",""Operation only valid for 1-d histograms"");; 8800 return;; 8801 }; 8802 fXaxis.SetRange(0,0);; 8803 fXaxis.Set(nx,xBins);; 8804 fYaxis.Set(1,0,1);; 8805 fZaxis.Set(1,0,1);; 8806 fNcells = nx+2;; 8807 SetBinsLength(fNcells);; 8808 if (fSumw2.fN) {; 8809 fSumw2.Set(fNcells);; 8810 }; 8811}; 8812 ; 8813////////////////////////////////////////////////////////////////////////////////; 8814/// Redefine x and y axis parameters.; 8815///; 8816/// The X and Y axis parameters are mod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:343622,variab,variable,343622,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"tring GetProofSelectorName() const; Returns apropriate TSelector class name for proof for the object that is to be drawn; assumes that Parse() method has been called before. Double_t GetParameter(int num) const; returns *num*-th parameter from brackets in the expression; in case of an error (wrong number) returns 0.0; num - number of parameter (counted from 0). Double_t GetIfSpecified(Int_t num, Double_t def) const; num - parameter number; def - default value of the parameter; returns the value of *num*-th parameter from the brackets in the variable expression; if the parameter of that number wasn't specified returns *def*. Bool_t IsSpecified(int num) const; returns kTRUE if the *num*-th parameter was specified; otherwise returns fFALSE; in case of an error (wrong num) prints an error message and; returns kFALSE. TString GetVarExp(Int_t num) const; Returns the *num*-th variable string; in case of an error prints an error message and returns an empty string. TString GetVarExp() const; Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. TString GetObjectTitle() const; Returns the desired plot title. TTreeDrawArgsParser::EOutputType DefineType(). TTreeDrawArgsParser(). Bool_t GetAdd() const; { return fAdd; }. Int_t GetDimension() const; { return fDimension; }. Bool_t GetShouldDraw() const; { return fShouldDraw; }. TString GetExp() const; { return fExp; }. Int_t GetNoParameters() const; { return fNoParameters; }. TString GetObjectName() const; { return fName; }. Bool_t GetOptionSame() const; { return fOptionSame; }. TObject * GetOriginal() const; { return fOriginal; }. TString GetSelection() const; { return fSelection; }. void SetObjectName(const char* s); { fName = s; }. void SetOriginal(TObject* o); { fOriginal = o; }. » Author: Marek Biskup 24/01/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-03-15 16:40; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeDrawArgsParser.html:9788,variab,variable,9788,root/html534/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html534/TTreeDrawArgsParser.html,2,['variab'],['variable']
Modifiability,"tring GetProofSelectorName() const; Returns apropriate TSelector class name for proof for the object that is to be drawn; assumes that Parse() method has been called before. Double_t GetParameter(int num) const; returns *num*-th parameter from brackets in the expression; in case of an error (wrong number) returns 0.0; num - number of parameter (counted from 0). Double_t GetIfSpecified(Int_t num, Double_t def) const; num - parameter number; def - default value of the parameter; returns the value of *num*-th parameter from the brackets in the variable expression; if the parameter of that number wasn't specified returns *def*. Bool_t IsSpecified(int num) const; returns kTRUE if the *num*-th parameter was specified; otherwise returns fFALSE; in case of an error (wrong num) prints an error message and; returns kFALSE. TString GetVarExp(Int_t num) const; Returns the *num*-th variable string; in case of an error prints an error message and returns an empty string. TString GetVarExp() const; Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. TString GetObjectTitle() const; Returns the desired plot title. TTreeDrawArgsParser::EOutputType DefineType(). TTreeDrawArgsParser(). Bool_t GetAdd() const; { return fAdd; }. Int_t GetDimension() const; { return fDimension; }. Bool_t GetShouldDraw() const; { return fShouldDraw; }. TString GetExp() const; { return fExp; }. Int_t GetNoParameters() const; { return fNoParameters; }. TString GetObjectName() const; { return fName; }. Bool_t GetOptionSame() const; { return fOptionSame; }. TObject * GetOriginal() const; { return fOriginal; }. TString GetSelection() const; { return fSelection; }. void SetObjectName(const char* s); { fName = s; }. void SetOriginal(TObject* o); { fOriginal = o; }. » Author: Marek Biskup 24/01/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-02 16:34; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeDrawArgsParser.html:10709,variab,variable,10709,root/html604/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html604/TTreeDrawArgsParser.html,2,['variab'],['variable']
Modifiability,"tring GetProofSelectorName() const; Returns apropriate TSelector class name for proof for the object that is to be drawn; assumes that Parse() method has been called before. Double_t GetParameter(int num) const; returns *num*-th parameter from brackets in the expression; in case of an error (wrong number) returns 0.0; num - number of parameter (counted from 0). Double_t GetIfSpecified(Int_t num, Double_t def) const; num - parameter number; def - default value of the parameter; returns the value of *num*-th parameter from the brackets in the variable expression; if the parameter of that number wasn't specified returns *def*. Bool_t IsSpecified(int num) const; returns kTRUE if the *num*-th parameter was specified; otherwise returns fFALSE; in case of an error (wrong num) prints an error message and; returns kFALSE. TString GetVarExp(Int_t num) const; Returns the *num*-th variable string; in case of an error prints an error message and returns an empty string. TString GetVarExp() const; Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. TString GetObjectTitle() const; Returns the desired plot title. TTreeDrawArgsParser::EOutputType DefineType(). TTreeDrawArgsParser(). Bool_t GetAdd() const; { return fAdd; }. Int_t GetDimension() const; { return fDimension; }. Bool_t GetShouldDraw() const; { return fShouldDraw; }. TString GetExp() const; { return fExp; }. Int_t GetNoParameters() const; { return fNoParameters; }. TString GetObjectName() const; { return fName; }. Bool_t GetOptionSame() const; { return fOptionSame; }. TObject * GetOriginal() const; { return fOriginal; }. TString GetSelection() const; { return fSelection; }. void SetObjectName(const char* s); { fName = s; }. void SetOriginal(TObject* o); { fOriginal = o; }. » Author: Marek Biskup 24/01/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeDrawArgsParser.html:10709,variab,variable,10709,root/html602/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html602/TTreeDrawArgsParser.html,2,['variab'],['variable']
Modifiability,"tring GetProofSelectorName() const; Returns apropriate TSelector class name for proof for the object that is to be drawn; assumes that Parse() method has been called before. Double_t GetParameter(int num) const; returns *num*-th parameter from brackets in the expression; in case of an error (wrong number) returns 0.0; num - number of parameter (counted from 0). Double_t GetIfSpecified(Int_t num, Double_t def) const; num - parameter number; def - default value of the parameter; returns the value of *num*-th parameter from the brackets in the variable expression; if the parameter of that number wasn't specified returns *def*. Bool_t IsSpecified(int num) const; returns kTRUE if the *num*-th parameter was specified; otherwise returns fFALSE; in case of an error (wrong num) prints an error message and; returns kFALSE. TString GetVarExp(Int_t num) const; Returns the *num*-th variable string; in case of an error prints an error message and returns an empty string. TString GetVarExp() const; Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. TString GetObjectTitle() const; Returns the desired plot title. TTreeDrawArgsParser::EOutputType DefineType(). TTreeDrawArgsParser(). Bool_t GetAdd() const; { return fAdd; }. Int_t GetDimension() const; { return fDimension; }. Bool_t GetShouldDraw() const; { return fShouldDraw; }. TString GetExp() const; { return fExp; }. Int_t GetNoParameters() const; { return fNoParameters; }. TString GetObjectName() const; { return fName; }. Bool_t GetOptionSame() const; { return fOptionSame; }. TObject * GetOriginal() const; { return fOriginal; }. TString GetSelection() const; { return fSelection; }. void SetObjectName(const char* s); { fName = s; }. void SetOriginal(TObject* o); { fOriginal = o; }. » Author: Marek Biskup 24/01/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/treeplayer:$Id: TTreeDrawArgsParser.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2010-09-23 20:22; This page has been a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeDrawArgsParser.html:9686,variab,variable,9686,root/html528/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html528/TTreeDrawArgsParser.html,1,['variab'],['variable']
Modifiability,"tring GetProofSelectorName() const; Returns apropriate TSelector class name for proof for the object that is to be drawn; assumes that Parse() method has been called before. Double_t GetParameter(int num) const; returns *num*-th parameter from brackets in the expression; in case of an error (wrong number) returns 0.0; num - number of parameter (counted from 0). Double_t GetIfSpecified(Int_t num, Double_t def) const; num - parameter number; def - default value of the parameter; returns the value of *num*-th parameter from the brackets in the variable expression; if the parameter of that number wasn't specified returns *def*. Bool_t IsSpecified(int num) const; returns kTRUE if the *num*-th parameter was specified; otherwise returns fFALSE; in case of an error (wrong num) prints an error message and; returns kFALSE. TString GetVarExp(Int_t num) const; Returns the *num*-th variable string; in case of an error prints an error message and returns an empty string. TString GetVarExp() const; Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. TString GetObjectTitle() const; Returns the desired plot title. TTreeDrawArgsParser::EOutputType DefineType(). TTreeDrawArgsParser(). Bool_t GetAdd() const; { return fAdd; }. Int_t GetDimension() const; { return fDimension; }. Bool_t GetShouldDraw() const; { return fShouldDraw; }. TString GetExp() const; { return fExp; }. Int_t GetNoParameters() const; { return fNoParameters; }. TString GetObjectName() const; { return fName; }. Bool_t GetOptionSame() const; { return fOptionSame; }. TObject * GetOriginal() const; { return fOriginal; }. TString GetSelection() const; { return fSelection; }. void SetObjectName(const char* s); { fName = s; }. void SetOriginal(TObject* o); { fOriginal = o; }. » Author: Marek Biskup 24/01/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/treeplayer:$Id: TTreeDrawArgsParser.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-07-04 15:38; This page has been a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTreeDrawArgsParser.html:9755,variab,variable,9755,root/html530/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html530/TTreeDrawArgsParser.html,1,['variab'],['variable']
Modifiability,"tring GetProofSelectorName() const; Returns apropriate TSelector class name for proof for the object that is to be drawn; assumes that Parse() method has been called before. Double_t GetParameter(int num) const; returns *num*-th parameter from brackets in the expression; in case of an error (wrong number) returns 0.0; num - number of parameter (counted from 0). Double_t GetIfSpecified(Int_t num, Double_t def) const; num - parameter number; def - default value of the parameter; returns the value of *num*-th parameter from the brackets in the variable expression; if the parameter of that number wasn't specified returns *def*. Bool_t IsSpecified(int num) const; returns kTRUE if the *num*-th parameter was specified; otherwise returns fFALSE; in case of an error (wrong num) prints an error message and; returns kFALSE. TString GetVarExp(Int_t num) const; Returns the *num*-th variable string; in case of an error prints an error message and returns an empty string. TString GetVarExp() const; Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. TString GetObjectTitle() const; Returns the desired plot title. TTreeDrawArgsParser::EOutputType DefineType(). TTreeDrawArgsParser(). Bool_t GetAdd() const; { return fAdd; }. Int_t GetDimension() const; { return fDimension; }. Bool_t GetShouldDraw() const; { return fShouldDraw; }. TString GetExp() const; { return fExp; }. Int_t GetNoParameters() const; { return fNoParameters; }. TString GetObjectName() const; { return fName; }. Bool_t GetOptionSame() const; { return fOptionSame; }. TObject * GetOriginal() const; { return fOriginal; }. TString GetSelection() const; { return fSelection; }. void SetObjectName(const char* s); { fName = s; }. void SetOriginal(TObject* o); { fOriginal = o; }. » Author: Marek Biskup 24/01/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/treeplayer:$Id: TTreeDrawArgsParser.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:23; This page has been a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTreeDrawArgsParser.html:9755,variab,variable,9755,root/html532/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html532/TTreeDrawArgsParser.html,2,['variab'],['variable']
Modifiability,"tring is adopted. ;  ;  ~TGTextLBEntry () override;  Delete text listbox entry. ;  ; void DrawCopy (Handle_t id, Int_t x, Int_t y) override;  Draw text listbox entry on window/pixmap. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; FontStruct_t GetFontStruct () const;  ; GContext_t GetNormGC () const;  ; const TGString * GetText () const;  ; const char * GetTitle () const override;  Returns title of object. ;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save a list box entry widget as a C++ statement(s) on output stream out. ;  ; void SetText (TGString *new_text);  Set or change text in text entry. ;  ; virtual void SetTitle (const char *text);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (TGLBEntry *e) override;  ;  Public Member Functions inherited from TGLBEntry;  TGLBEntry (const TGWindow *p=nullptr, Int_t id=-1, UInt_t options=kHorizontalFrame, Pixel_t back=GetWhitePixel());  Base class entry constructor. ;  ; void Activate (Bool_t a) override;  Toggle active state of listbox entry. ;  ; Int_t EntryId () const;  ; Bool_t IsActive () const override;  ; void SetBackgroundColor (Pixel_t col) override;  Set background color (override from TGWindow base class). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle ();  Toggle active state of listbox entry. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; void AddInput (UInt_t emask);  Add events spe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIconLBEntry.html:2679,inherit,inherited,2679,doc/master/classTGIconLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGIconLBEntry.html,3,['inherit'],['inherited']
Modifiability,"tring is an optional; RooFormula expression and can be used to select the subset of the data points; in 'dset' to be copied. The cut expression can refer to any variable in the; vars argset. For cuts involving variables other than those contained in; the vars argset, such as intermediate formula objects, use the; equivalent constructor accepting RooFormulaVar reference as cut specification. RooDataSet(RooDataSet const& other, const char* newname = 0); Copy constructor. RooDataSet(const char* name, const char* title, RooDataSet* ntuple, const RooArgSet& vars, const RooFormulaVar* cutVar, const char* cutRange, int nStart, int nStop, Bool_t copyCache, const char* wgtVarName = 0); Protected constructor for internal use only. RooArgSet addWgtVar(const RooArgSet& origVars, const RooAbsArg* wgtVar); Helper function for constructor that adds optional weight variable to construct; total set of observables. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Return a clone of this dataset containing only the cached variables. RooAbsData* emptyClone(const char* newName = 0, const char* newTitle = 0, const RooArgSet* vars = 0) const; Return an empty clone of this dataset. If vars is not null, only the variables in vars; are added to the definition of the empty clone. void initialize(const char* wgtVarName); Initialize the dataset. If wgtVarName is not null, interpret the observable; with that name as event weight. RooAbsData* reduceEng(const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange = 0, Int_t nStart = 0, Int_t nStop = 2000000000, Bool_t copyCache = kTRUE); Implementation of RooAbsData virtual method that drives the RooAbsData::reduce() methods. ~RooDataSet(); Destructor. RooDataHist* binnedClone(const char* newName = 0, const char* newTitle = 0) const; Return binned clone of this dataset. Double_t weight() const; Return event weight of current event. void weightError(Double_t& lo, Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataSet.html:23824,variab,variables,23824,root/html526/RooDataSet.html,https://root.cern,https://root.cern/root/html526/RooDataSet.html,5,['variab'],['variables']
Modifiability,"tring is an optional; RooFormula expression and can be used to select the subset of the data points; in 'dset' to be copied. The cut expression can refer to any variable in the; vars argset. For cuts involving variables other than those contained in; the vars argset, such as intermediate formula objects, use the; equivalent constructor accepting RooFormulaVar reference as cut specification. RooDataSet(RooDataSet const& other, const char* newname = 0); Copy constructor. RooDataSet(const char* name, const char* title, RooDataSet* ntuple, const RooArgSet& vars, const RooFormulaVar* cutVar, const char* cutRange, int nStart, int nStop, Bool_t copyCache, const char* wgtVarName = 0); Protected constructor for internal use only. RooArgSet addWgtVar(const RooArgSet& origVars, const RooAbsArg* wgtVar); Helper function for constructor that adds optional weight variable to construct; total set of observables. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Return a clone of this dataset containing only the cached variables. RooAbsData* emptyClone(const char* newName = 0, const char* newTitle = 0, const RooArgSet* vars = 0, const char* wgtVarName = 0) const; Return an empty clone of this dataset. If vars is not null, only the variables in vars; are added to the definition of the empty clone. void initialize(const char* wgtVarName); Initialize the dataset. If wgtVarName is not null, interpret the observable; with that name as event weight. RooAbsData* reduceEng(const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange = 0, Int_t nStart = 0, Int_t nStop = 2000000000, Bool_t copyCache = kTRUE); Implementation of RooAbsData virtual method that drives the RooAbsData::reduce() methods. ~RooDataSet(); Destructor. RooDataHist* binnedClone(const char* newName = 0, const char* newTitle = 0) const; Return binned clone of this dataset. Double_t weight() const; Return event weight of current event. Double_t we",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataSet.html:25716,variab,variables,25716,root/html534/RooDataSet.html,https://root.cern,https://root.cern/root/html534/RooDataSet.html,2,['variab'],['variables']
Modifiability,"tring is an optional; RooFormula expression and can be used to select the subset of the data points; in 'dset' to be copied. The cut expression can refer to any variable in the; vars argset. For cuts involving variables other than those contained in; the vars argset, such as intermediate formula objects, use the; equivalent constructor accepting RooFormulaVar reference as cut specification. RooDataSet(const RooDataSet& other, const char* newname = 0); Copy constructor. RooDataSet(const char* name, const char* title, RooDataSet* ntuple, const RooArgSet& vars, const RooFormulaVar* cutVar, const char* cutRange, int nStart, int nStop, Bool_t copyCache, const char* wgtVarName = 0); Protected constructor for internal use only. RooArgSet addWgtVar(const RooArgSet& origVars, const RooAbsArg* wgtVar); Helper function for constructor that adds optional weight variable to construct; total set of observables. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Return a clone of this dataset containing only the cached variables. RooAbsData* emptyClone(const char* newName = 0, const char* newTitle = 0, const RooArgSet* vars = 0, const char* wgtVarName = 0) const; Return an empty clone of this dataset. If vars is not null, only the variables in vars; are added to the definition of the empty clone. void initialize(const char* wgtVarName); Initialize the dataset. If wgtVarName is not null, interpret the observable; with that name as event weight. RooAbsData* reduceEng(const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange = 0, Int_t nStart = 0, Int_t nStop = 2000000000, Bool_t copyCache = kTRUE); Implementation of RooAbsData virtual method that drives the RooAbsData::reduce() methods. ~RooDataSet(); Destructor. RooDataHist* binnedClone(const char* newName = 0, const char* newTitle = 0) const; Return binned clone of this dataset. Double_t weight() const; Return event weight of current event. Double_t we",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDataSet.html:26980,variab,variables,26980,root/html602/RooDataSet.html,https://root.cern,https://root.cern/root/html602/RooDataSet.html,4,['variab'],['variables']
Modifiability,"tring terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X ; variable X, type Float_t; Y/I : variable Y, type Int_t; Y/I2 ; variable Y, type Int_t converted to a 16 bits integer. Arrays of values are supported with the following syntax:; If leaf name has the form var[nelem], where nelem is alphanumeric, then; if nelem is a leaf name, it is used as the variable size of the array,; otherwise return 0.; The leaf refered to by neleme **MUST** be an int (/I),; If leaf name has the form var[nelem], where nelem is a digit, then; it is used as the fixed size of the array.; If leaf name has the form of a multi dimenantion array (eg var[nelem][nelem2]); where nelem and nelem2 are digits) then; it is used as a 2 dimensional array of fixed size.; Any of other form is not supported. Note that the TTree will assume that all the item are contiguous in memory.; On some platform, this is not always true of the member of a struct or a class,; due to padding and alignment. Sorting your data member in order of decreasing; sizeof usually leads to their being contiguous in memory. * bufsize is the buffer size in bytes for this branch; The default value is 32000 bytes and should be ok for most cases.; You can specify a larger value (eg 256000) if your Tree is not split; and each entry is larg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBranch.html:14055,variab,variable,14055,root/html530/TBranch.html,https://root.cern,https://root.cern/root/html530/TBranch.html,1,['variab'],['variable']
Modifiability,tring& path) const; TGeoVolume*GetTopVolume() const; Int_tGetType() const; TGeoIteratorPlugin*GetUserPlugin() const; virtual TClass*IsA() const; TGeoNode*Next(); TGeoNode*operator()(); TGeoIterator&operator=(const TGeoIterator& iter); voidReset(TGeoVolume* top = 0); voidSetPluginAutoexec(Bool_t mode); voidSetTopName(const char* name); voidSetType(Int_t type); voidSetUserPlugin(TGeoIteratorPlugin* plugin); virtual voidShowMembers(TMemberInspector& insp); voidSkip(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. TGeoIterator(). private:. voidIncreaseArray(). Data Members; private:. Int_t*fArrayArray of node indices for the current path; Int_tfLevelCurrent level in the tree; TGeoHMatrix*fMatrixCurrent global matrix; Bool_tfMustResumePrivate flag to resume from current node.; Bool_tfMustStopPrivate flag to signal that the iterator has finished.; TGeoIteratorPlugin*fPluginUser iterator plugin; Bool_tfPluginAutoexecPlugin automatically executed during next() ; TGeoVolume*fTopTop volume of the iterated branch; TStringfTopNameUser name for top; Int_tfTypeType of iteration. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoIterator(TGeoVolume* top); Geometry iterator for a branch starting with a TOP node. TGeoIterator(const TGeoIterator& iter); Copy ctor. ~TGeoIterator(); Destructor. TGeoIterator & operator=(const TGeoIterator& iter); Assignment. TGeoNode * Next(); Returns next node. TGeoNode * operator()(); Returns next node. const TGeoMatrix * GetCurrentMatrix() const; Returns global matrix for current node. TGeoNode * GetNode(Int_t level) const; Returns current node at a given level. void GetPath(TString& path) const; Returns the path for the current node. void IncreaseArray(); Increase by 30 the size of the array. void Reset(TGeoVolume* top = 0); Resets the iterator for volume TOP. void SetTopName(const char* name); Set the top name for path. void Skip(); Stop iterating the current branch. The ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoIterator.html:4457,plugin,plugin,4457,root/html528/TGeoIterator.html,https://root.cern,https://root.cern/root/html528/TGeoIterator.html,4,['plugin'],['plugin']
Modifiability,"tring& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; virtual voidInit(); voidInitEventSample(); voidInitMonitorNtuple(); Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidMakeClassLinear(ostream&) const; voidMakeClassRuleCuts(ostream&) const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); voidTrainJFRuleFit(); voidTrainTMVARuleFit(); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(); virtual voidProcessOptions(). Data Membe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodRuleFit.html:14471,Config,Configurable,14471,root/html602/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodRuleFit.html,12,['Config'],['Configurable']
Modifiability,"tring& theOption); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MinuitFitter&operator=(const TMVA::MinuitFitter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitFitter.html:5000,Config,Configurable,5000,root/html602/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitFitter.html,2,['Config'],['Configurable']
Modifiability,"tring&TEveElement::GetVizTag() const; Int_tTEvePointSet::GrowFor(Int_t n_points); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEvePointSet::InitFill(Int_t subIdNum); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTPolyMarker3D::ls(Option_t* option = """") const; virtual voidMakeTrack(Bool_t recurse = kTRUE); voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTQObject::Message(const char* msg)SIGNAL ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTrack.html:13753,Inherit,InheritsFrom,13753,root/html532/TEveTrack.html,https://root.cern,https://root.cern/root/html532/TEveTrack.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tring&TEveElement::GetVizTag() const; Int_tTEvePointSet::GrowFor(Int_t n_points); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEvePointSet::InitFill(Int_t subIdNum); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTPolyMarker3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttMarker::Modify(); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveLine.html:13160,Inherit,InheritsFrom,13160,root/html532/TEveLine.html,https://root.cern,https://root.cern/root/html532/TEveLine.html,6,['Inherit'],['InheritsFrom']
Modifiability,"tring&TEveElement::GetVizTag() const; Int_tTEvePointSet::GrowFor(Int_t n_points); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEvePointSet::InitFill(Int_t subIdNum); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTPolyMarker3D::ls(Option_t* option = """") const; virtual voidMakeTrack(Bool_t recurse = kTRUE); voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttMarker::Modify(); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrack.html:13609,Inherit,InheritsFrom,13609,root/html602/TEveTrack.html,https://root.cern,https://root.cern/root/html602/TEveTrack.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tring&TEveElement::GetVizTag() const; Int_tTEvePointSet::GrowFor(Int_t n_points); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEvePointSet::InitFill(Int_t subIdNum); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTPolyMarker3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttMarker::Modify(); virtual voidTEveElement::NameTitleChanged(); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveLine.html:12995,Inherit,InheritsFrom,12995,root/html602/TEveLine.html,https://root.cern,https://root.cern/root/html602/TEveLine.html,6,['Inherit'],['InheritsFrom']
Modifiability,"tring);; dnnOptions.Append("":"");; dnnOptions.Append(archString);; ; TString dnnName = ""TMVA_DNN"";; factory->BookMethod(dataloader, TMVA::Types::kDL, dnnName, dnnOptions);; }; ; /**; ## Book Keras recurrent models; ; Book the different types of recurrent models in Keras (SimpleRNN, LSTM or GRU); ; **/; ; if (useKeras) {; ; for (int i = 0; i < 3; i++) {; ; if (use_rnn_type[i]) {; ; TString modelName = TString::Format(""model_%s.h5"", rnn_types[i].c_str());; TString trainedModelName = TString::Format(""trained_model_%s.h5"", rnn_types[i].c_str());; ; Info(""TMVA_RNN_Classification"", ""Building recurrent keras model using a %s layer"", rnn_types[i].c_str());; // create python script which can be executed; // create 2 conv2d layer + maxpool + dense; TMacro m;; m.AddLine(""import tensorflow"");; m.AddLine(""from tensorflow.keras.models import Sequential"");; m.AddLine(""from tensorflow.keras.optimizers import Adam"");; m.AddLine(""from tensorflow.keras.layers import Input, Dense, Dropout, Flatten, SimpleRNN, GRU, LSTM, Reshape, ""; ""BatchNormalization"");; m.AddLine("""");; m.AddLine(""model = Sequential() "");; m.AddLine(""model.add(Reshape((10, 30), input_shape = (10*30, )))"");; // add recurrent neural network depending on type / Use option to return the full output; if (rnn_types[i] == ""LSTM""); m.AddLine(""model.add(LSTM(units=10, return_sequences=True) )"");; else if (rnn_types[i] == ""GRU""); m.AddLine(""model.add(GRU(units=10, return_sequences=True) )"");; else; m.AddLine(""model.add(SimpleRNN(units=10, return_sequences=True) )"");; ; // m.AddLine(""model.add(BatchNormalization())"");; m.AddLine(""model.add(Flatten())""); // needed if returning the full time output sequence; m.AddLine(""model.add(Dense(64, activation = 'tanh')) "");; m.AddLine(""model.add(Dense(2, activation = 'sigmoid')) "");; m.AddLine(; ""model.compile(loss = 'binary_crossentropy', optimizer = Adam(learning_rate = 0.001), weighted_metrics = ['accuracy'])"");; m.AddLine(TString::Format(""modelName = '%s'"", modelName.Data()));; m.AddLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:68752,layers,layers,68752,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['layers'],['layers']
Modifiability,"tring, TString > > &functions);  Fill map with parametrized functions. ;  ; void FillVecFunctionsShurtCuts ();  Fill the shortcuts for vectorized functions We will replace for example sin with vecCore::Mat::Sin. ;  ; std::string GetGradientFuncName () const;  ; std::string GetHessianFuncName () const;  ; void HandleExponentiation (TString &formula);  Handling exponentiation Can handle multiple carets, eg. ;  ; void HandleFunctionArguments (TString &formula);  Handling user functions (and parametrized functions) to take variables and optionally parameters as arguments. ;  ; void HandleLinear (TString &formula);  Handle linear functions defined with the operator ++. ;  ; void HandleParametrizedFunctions (TString &formula);  Handling parametrized functions Function can be normalized, and have different variable then x. ;  ; void HandleParamRanges (TString &formula);  Handling parameter ranges, in the form of [1..5]. ;  ; void HandlePolN (TString &formula);  Handling polN If before 'pol' exist any name, this name will be treated as variable used in polynomial eg. ;  ; bool HasGradientGenerationFailed () const;  ; bool HasHessianGenerationFailed () const;  ; Bool_t InitLambdaExpression (const char *formula);  ; void InputFormulaIntoCling ();  Inputs formula, transfered to C++ code into Cling. ;  ; Bool_t PrepareEvalMethod ();  Sets TMethodCall to function inside Cling environment. ;  ; void ReInitializeEvalMethod ();  Re-initialize eval method. ;  ; void ReplaceAllNames (TString &formula, std::map< TString, TString > &substitutions);  . Static Private Member Functions; static Bool_t IsDefaultVariableName (const TString &name);  . Private Attributes; Bool_t fAllParametersSetted;  Flag to control if all parameters are setted. ;  ; std::atomic< Bool_t > fClingInitialized;  ! Transient to force re-initialization ;  ; TString fClingInput;  ! Input function passed to Cling ;  ; TString fClingName;  ! Unique name passed to Cling to define the function ( double clingName(double*x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:26731,variab,variable,26731,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"tring, bool = false); voidFormatFrameForLikelihood(RooPlot* frame, string XTitle = string(""#sigma / #sigma_{SM}""), string YTitle = string(""-log likelihood"")); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; RooStats::HistFactory::HistoToWorkspaceFactoryHistoToWorkspaceFactory(); RooStats::HistFactory::HistoToWorkspaceFactoryHistoToWorkspaceFactory(string, string, vector<string>, double = 200, double = 20, int = 0, int = 6, TFile* = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLinInterpWithConstraint(RooWorkspace* proto, TH1* nominal, vector<TH1*> lowHist, vector<TH1*> highHist, vector<string> sourceName, string prefix, string productPrefix, string systTerm, int lowBin, int highBin, vector<string>& likelihoodTermNames); virtual voidTObject::ls(Option_t* option = """") const; RooWorkspace*MakeCombinedModel(vector<string>, vector<RooWorkspace*>); TDirectory*Makedirs(TDirectory* file, vector<string> names); RooWorkspace*MakeSingleChannelModel(vector<RooStats::HistFactory::EstimateSummary> summary, vector<string> systToFix, bool doRatio = false); voidMakeTot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HistFactory__HistoToWorkspaceFactory.html:3645,Inherit,InheritsFrom,3645,root/html532/RooStats__HistFactory__HistoToWorkspaceFactory.html,https://root.cern,https://root.cern/root/html532/RooStats__HistFactory__HistoToWorkspaceFactory.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tring,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxym0; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLognormal(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _m0, RooAbsReal& _k). RooLognormal(const RooLognormal& other, const char* name = 0). Double_t evaluate() const; ln(k)<1 would correspond to sigma < 0 in the parametrization; resulting by transforming a normal random variable in its; standard parametrization to a lognormal random variable; => treat ln(k) as -ln(k) for k<1. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooLognormal(); {}. TObject* clone(const char* newname) const; { return new RooLognormal(*this,newname); }. virtual ~RooLognormal(); { }. » Last changed: Thu Sep 23 20:00:05 2010 » Last generated: 2010-09-23 20:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooLognormal.html:40373,variab,variable,40373,root/html528/RooLognormal.html,https://root.cern,https://root.cern/root/html528/RooLognormal.html,2,['variab'],['variable']
Modifiability,"tring,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:41:40 2015 » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction1PdfBinding_double_int_.html:46381,variab,variable,46381,root/html604/RooCFunction1PdfBinding_double_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction1PdfBinding_double_int_.html,2,['variab'],['variable']
Modifiability,"tring; TObjArrayfBranches! List of branches to read. Similar to fLeaces but duplicates are zeroed out.; Int_tfCodes[500]List of leaf numbers referenced in formula; Double_t*ROOT::v5::TFormula::fConst[fNconst] Array of fNconst formula constants; LongDouble_t*fConstLDlocal version of fConsts able to store bigger numbers; Int_tfCumulSizes[500][5]Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated; TObjArrayfDataMembers! List of leaf data members; Bool_tfDidBooleanOptimization! True if we executed one boolean optimization since the last time instance number 0 was evaluated; TList*fDimensionSetup! list of dimension setups, for delayed creation of the dimension information.; TString*ROOT::v5::TFormula::fExpr[fNoper] List of expressions; TString*ROOT::v5::TFormula::fExprOptimized![fNOperOptimized] List of expressions; TObjArrayfExternalCuts! List of TCutG and TEntryList used in the formula; Int_tfFixedSizes[500][5]Physical sizes of lower dimensions for each leaf; TObjArrayROOT::v5::TFormula::fFunctionsArray of function calls to make; Bool_tfHasCastRecord whether the formula contain a cast operation or not; UChar_tfHasMultipleVarDim[500]True if the corresponding variable is an array with more than one variable dimension.; Int_tfIndexes[500][5]Index of array selected by user for each leaf; TObjArrayfLeafNamesList of TNamed describing leaves; TObjArrayfLeaves! List of leaf used in this formula.; TObjArrayROOT::v5::TFormula::fLinearPartsLinear parts if the formula is linear (contains '|' or ""++""); Int_t*fLookupType[fNindex] array indicating how each leaf should be looked-up; TTreeFormulaManager*fManager! The dimension coordinator.; TObjArrayfMethods! List of leaf method calls; Int_tfMultiplicityIndicator of the variability of the formula; Int_tROOT::v5::TFormula::fNOperOptimized!Number of operators after optimization; TStringTNamed::fNameobject identifier; TString*ROOT::v5::TFormula::fNames[fNpar] Array of parameter names; Int_tfNc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeFormula.html:16556,variab,variable,16556,root/html604/TTreeFormula.html,https://root.cern,https://root.cern/root/html604/TTreeFormula.html,4,['variab'],['variable']
Modifiability,"tring>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. template <> void RooCFunction1Ref<Double_t,Double_t> ShowMembers(TMemberInspector& insp, char* parent). » Last changed: Mon Dec 7 13:46:13 2009 » Last generated: 2009-12-07 13:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction1Binding_double_double_.html:33938,variab,variable,33938,root/html526/RooCFunction1Binding_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction1Binding_double_double_.html,1,['variab'],['variable']
Modifiability,"tring>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumConvPdf(). RooNumConvPdf(const char* name, const char* title, RooRealVar& convVar, RooAbsPdf& pdf, RooAbsPdf& resmodel); Constructor of convolution operator PDF. convVar : convolution variable (on which both pdf and resmodel should depend); pdf : input 'physics' pdf; resmodel : input 'resultion' pdf. output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'. RooNumConvPdf(const RooNumConvPdf& other, const char* name = 0); Copy constructor. ~RooNumConvPdf(); Destructor. Double_t evaluate() const; Calculate and return value of p.d.f. void initialize() const; One-time initialization of object. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return appropriate generator context for this convolved p.d.f. If both pdf and resolution; model support internal generation return and optimization convolution generation context; that uses a smearing algorithm. Otherwise return a standard accept/reject sampling; context on the convoluted shape. void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the; product operator construction. TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumConvPdf.html:46198,variab,variable,46198,root/html534/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html534/RooNumConvPdf.html,2,['variab'],['variable']
Modifiability,"tringGetAuthType() const; const TString&GetBucket() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TString&GetHost() const; TS3HTTPRequest::EHTTPVerbGetHTTPVerb() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; const TString&GetObjectKey() const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringGetRequest(TS3HTTPRequest::EHTTPVerb httpVerb, Bool_t appendCRLF = kTRUE); const TString&GetSecretKey() const; const TString&GetTimeStamp() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TS3HTTPRequest&operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TS3HTTPRequest.html:3717,Inherit,InheritsFrom,3717,root/html534/TS3HTTPRequest.html,https://root.cern,https://root.cern/root/html534/TS3HTTPRequest.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tringGetAuthType() const; const TString&GetBucket() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TString&GetHost() const; TS3HTTPRequest::EHTTPVerbGetHTTPVerb() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; const TString&GetObjectKey() const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringGetRequest(TS3HTTPRequest::EHTTPVerb httpVerb, Bool_t appendCRLF = kTRUE); const TString&GetSecretKey() const; const TString&GetTimeStamp() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TS3HTTPRequest&operator=(const TS3HTTPRequest&); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TS3HTTPRequest.html:3472,Inherit,InheritsFrom,3472,root/html602/TS3HTTPRequest.html,https://root.cern,https://root.cern/root/html602/TS3HTTPRequest.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tRooAbsReal::evaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*RooAbsPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Int_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); static Bool_tRooAbsArg::inhibitDirty(); TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooResolutionModel.html:34534,extend,extended,34534,root/html532/RooResolutionModel.html,https://root.cern,https://root.cern/root/html532/RooResolutionModel.html,2,['extend'],['extended']
Modifiability,"tringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigmaL; RooRealProxysigmaR; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBifurGauss.html:42180,config,configuration,42180,root/html534/RooBifurGauss.html,https://root.cern,https://root.cern/root/html534/RooBifurGauss.html,4,['config'],['configuration']
Modifiability,"tringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyrho1; RooRealProxyrho2; RooRealProxysigp; RooRealProxyx; RooRealProxyxi.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBukinPdf.html:43878,config,configuration,43878,root/html602/RooBukinPdf.html,https://root.cern,https://root.cern/root/html602/RooBukinPdf.html,8,['config'],['configuration']
Modifiability,"tringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxym0; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooLognormal.html:39571,config,configuration,39571,root/html530/RooLognormal.html,https://root.cern,https://root.cern/root/html530/RooLognormal.html,2,['config'],['configuration']
Modifiability,"tringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tfShowTooltip; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Bool_tfUseLightColorSet; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveViewerList(const char* n = ""TEveViewerList"", const char* t = """"); Constructor. ~TEveViewerList(); Destructor. void AddElement(TEveElement* el); Call base-class implementation.; If compund is open and compound of the new element is not set,; the el's compound is set to this. void RemoveElementLocal(TEveElement* el); Decompoundofy el, call base-class version. void RemoveElementsLocal(); Decompoundofy children, call base-class version. void Connect(); Connect to TGLViewer class-signals. void Disconnect(); Disconnect from TGLViewer class-signals. void RepaintChangedViewers(Bool_t resetCameras, Bool_t dropLogicals); Repaint viewers that are tagged as changed. void RepaintAllViewers(Bool_t resetCameras, Bool_t dropLogicals); Repaint all viewers. void DeleteAnnotations(); Delete annotations from all viewers. void SceneDestructing(TEveScene* scene); Callback done from a TEveScene destructor allowing proper; removal of the scene from affect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveViewerList.html:20328,Inherit,Inheritance,20328,root/html532/TEveViewerList.html,https://root.cern,https://root.cern/root/html532/TEveViewerList.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Float_tfPhi; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Float_tfThetaCTransition theta; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetCone(const Text_t* n = ""TEveJetCone"", const Text_t* t = """"); Constructor. void ComputeBBox(); Compute bounding-box of the data. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveJetConeProjected class. Int_t AddCone(Float_t eta, Float_t phi, Float_t cone_r, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * cone_r : cone radius in eta-phi space; * length : length of the cone; * if cylinder is set and length is adapted to cylinder.; - if length is given, it will be used as scalar factor; * if cylinder is not set, length is used as length of the cone; Return 0 on sucess. Int_t AddEllipticCone(Float_t eta, Float_t phi, Float_t reta, Float_t rphi, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * (reta, rphi) : radius of cone in eta-phi space; * length : length of the cone; * if cylind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveJetCone.html:22750,Inherit,Inheritance,22750,root/html532/TEveJetCone.html,https://root.cern,https://root.cern/root/html532/TEveJetCone.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. TSeqCollection*fSecContextsList of TSecContext with cleanup info; static UChar_tfgAcceptOptDefault accept options; static SrvClup_tfgSrvAuthClupHook; static SrvAuth_tfgSrvAuthHook. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSocket. ←; TServerSocket. ←. TPServerSocket. Function documentation; TServerSocket(const char* service, Bool_t reuse = kFALSE, Int_t backlog = kDefaultBacklog, Int_t tcpwindowsize = -1); Create a server socket object for a named service. Set reuse to true; to force reuse of the server socket (i.e. do not wait for the time; out to pass). Using backlog one can set the desirable queue length; for pending connections.; Use tcpwindowsize to specify the size of the receive buffer, it has; to be specified here to make sure the window scale option is set (for; tcpwindowsize > 65KB and for platforms supporting window scaling).; Use IsValid() to check the validity of the; server socket. In case server socket is not valid use GetErrorCode(); to obtain the specific error value. These values are:; 0 = no error (socket is valid); -1 = low level socket() call failed; -2 = low level bind() call failed; -3 = low level listen() call failed; Every valid server socket is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TServerSocket.html:11121,Inherit,Inheritance,11121,root/html602/TServerSocket.html,https://root.cern,https://root.cern/root/html602/TServerSocket.html,2,['Inherit'],['Inheritance']
Modifiability,"tringTNamed::fNameobject identifier; Int_tTVirtualFitter::fNpointsNumber of points to fit; TObject*TVirtualFitter::fObjectFitpointer to object being fitted; Foption_tTVirtualFitter::fOptionstruct with the fit options; Int_tTVirtualFitter::fPointSizeNumber of words per point in the cache; TStringTNamed::fTitleobject title; TObject*TVirtualFitter::fUserFuncpointer to user theoretical function (a TF1*); Int_tTVirtualFitter::fXfirstfirst bin on X axis; Int_tTVirtualFitter::fXlastlast bin on X axis; Int_tTVirtualFitter::fYfirstfirst bin on Y axis; Int_tTVirtualFitter::fYlastlast bin on Y axis; Int_tTVirtualFitter::fZfirstfirst bin on Z axis; Int_tTVirtualFitter::fZlastlast bin on Z axis; static TStringTVirtualFitter::fgDefaultname of the default fitter (""Minuit"",""Fumili"",etc); static Double_tTVirtualFitter::fgErrorDefError definition (default=1); static TVirtualFitter*TVirtualFitter::fgFitterCurrent fitter (default TFitter); static Int_tTVirtualFitter::fgMaxiterMaximum number of iterations; static Int_tTVirtualFitter::fgMaxparMaximum number of fit parameters for current fitter; static Double_tTVirtualFitter::fgPrecisionmaximum precision. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitterFumili(). TFitterFumili(Int_t maxpar). virtual ~TFitterFumili(). Double_t Chisquare(Int_t npar, Double_t* params) const; inherited interface. void CreateMinimizer(TFitterMinuit::EMinimizerType ); virtual FunctionMinimum Minimize( int nfcn = 0, double edmval = 0.1) const;. void CreateChi2FCN(). void CreateChi2ExtendedFCN(). void CreateUnbinLikelihoodFCN(); {}. void CreateBinLikelihoodFCN(). » Author: L. Moneta 10/2005 » Copyright (c) 2005 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/minuit2:$Id: TFitterFumili.h 22730 2008-03-19 10:22:46Z moneta $ » Last generated: 2010-12-15 15:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFitterFumili.html:11850,inherit,inherited,11850,root/html528/TFitterFumili.html,https://root.cern,https://root.cern/root/html528/TFitterFumili.html,1,['inherit'],['inherited']
Modifiability,"tringTNamed::fNameobject identifier; Int_tTVirtualFitter::fNpointsNumber of points to fit; TObject*TVirtualFitter::fObjectFitpointer to object being fitted; Foption_tTVirtualFitter::fOptionstruct with the fit options; Int_tTVirtualFitter::fPointSizeNumber of words per point in the cache; TStringTNamed::fTitleobject title; TObject*TVirtualFitter::fUserFuncpointer to user theoretical function (a TF1*); Int_tTVirtualFitter::fXfirstfirst bin on X axis; Int_tTVirtualFitter::fXlastlast bin on X axis; Int_tTVirtualFitter::fYfirstfirst bin on Y axis; Int_tTVirtualFitter::fYlastlast bin on Y axis; Int_tTVirtualFitter::fZfirstfirst bin on Z axis; Int_tTVirtualFitter::fZlastlast bin on Z axis; static TStringTVirtualFitter::fgDefaultname of the default fitter (""Minuit"",""Fumili"",etc); static Double_tTVirtualFitter::fgErrorDefError definition (default=1); static TVirtualFitter*TVirtualFitter::fgFitterCurrent fitter (default TFitter); static Int_tTVirtualFitter::fgMaxiterMaximum number of iterations; static Int_tTVirtualFitter::fgMaxparMaximum number of fit parameters for current fitter; static Double_tTVirtualFitter::fgPrecisionmaximum precision. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitterFumili(). TFitterFumili(Int_t maxpar). virtual ~TFitterFumili(). Double_t Chisquare(Int_t npar, Double_t* params) const; inherited interface. void CreateMinimizer(TFitterMinuit::EMinimizerType ); virtual FunctionMinimum Minimize( int nfcn = 0, double edmval = 0.1) const;. void CreateChi2FCN(). void CreateChi2ExtendedFCN(). void CreateUnbinLikelihoodFCN(); {}. void CreateBinLikelihoodFCN(). » Author: L. Moneta 10/2005 » Copyright (c) 2005 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/minuit2:$Id: TFitterFumili.h 22730 2008-03-19 10:22:46Z moneta $ » Last generated: 2011-07-04 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFitterFumili.html:11921,inherit,inherited,11921,root/html530/TFitterFumili.html,https://root.cern,https://root.cern/root/html530/TFitterFumili.html,1,['inherit'],['inherited']
Modifiability,"tringTNamed::fNameobject identifier; Int_tTVirtualFitter::fNpointsNumber of points to fit; TObject*TVirtualFitter::fObjectFitpointer to object being fitted; Foption_tTVirtualFitter::fOptionstruct with the fit options; Int_tTVirtualFitter::fPointSizeNumber of words per point in the cache; TStringTNamed::fTitleobject title; TObject*TVirtualFitter::fUserFuncpointer to user theoretical function (a TF1*); Int_tTVirtualFitter::fXfirstfirst bin on X axis; Int_tTVirtualFitter::fXlastlast bin on X axis; Int_tTVirtualFitter::fYfirstfirst bin on Y axis; Int_tTVirtualFitter::fYlastlast bin on Y axis; Int_tTVirtualFitter::fZfirstfirst bin on Z axis; Int_tTVirtualFitter::fZlastlast bin on Z axis; static TStringTVirtualFitter::fgDefaultname of the default fitter (""Minuit"",""Fumili"",etc); static Double_tTVirtualFitter::fgErrorDefError definition (default=1); static TVirtualFitter*TVirtualFitter::fgFitterCurrent fitter (default TFitter); static Int_tTVirtualFitter::fgMaxiterMaximum number of iterations; static Int_tTVirtualFitter::fgMaxparMaximum number of fit parameters for current fitter; static Double_tTVirtualFitter::fgPrecisionmaximum precision. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitterFumili(). TFitterFumili(Int_t maxpar). virtual ~TFitterFumili(). Double_t Chisquare(Int_t npar, Double_t* params) const; inherited interface. void CreateMinimizer(TFitterMinuit::EMinimizerType ); virtual FunctionMinimum Minimize( int nfcn = 0, double edmval = 0.1) const;. void CreateChi2FCN(). void CreateChi2ExtendedFCN(). void CreateUnbinLikelihoodFCN(); {}. void CreateBinLikelihoodFCN(). » Author: L. Moneta 10/2005 » Copyright (c) 2005 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/minuit2:$Id: TFitterFumili.h 22730 2008-03-19 10:22:46Z moneta $ » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFitterFumili.html:11921,inherit,inherited,11921,root/html532/TFitterFumili.html,https://root.cern,https://root.cern/root/html532/TFitterFumili.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"tringView name, RooStringView title, const RooArgSet &vars, const RooFormulaVar *cutVar, const char *cutRange, std::size_t nStart, std::size_t nStop) override;  ; void reset () override;  ; void resetBuffers () override;  ; void resetCache () override;  ; void setArgStatus (const RooArgSet &set, bool active) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; double sumEntries () const override;  Forward fill request to appropriate subset. ;  ; double weight () const override;  ; virtual double weight () const=0;  ; double weight (Int_t index) const;  ; void weightError (double &lo, double &hi, RooAbsData::ErrorType etype=RooAbsData::Poisson) const override;  ; double weightError (RooAbsData::ErrorType etype=RooAbsData::Poisson) const override;  ;  Public Member Functions inherited from RooAbsDataStore;  RooAbsDataStore ();  ;  RooAbsDataStore (const RooAbsDataStore &other, const char *newname=nullptr);  ;  RooAbsDataStore (const RooAbsDataStore &other, const RooArgSet &vars, const char *newname=nullptr);  ;  RooAbsDataStore (RooStringView name, RooStringView title, const RooArgSet &vars);  ; RooArgSet * addColumns (const RooArgList &varList);  ; const RooArgSet & cachedVars () const;  ; virtual void checkInit () const;  ; int defaultPrintContents (Option_t *) const override;  Define default print options, for a given print style. ;  ; bool dirtyProp () const;  ; virtual RooAbsData::CategorySpans getCategoryBatches (std::size_t, std::size_t) const;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print argument of dataset, i.e. the observable names. ;  ; void printClassName (std::ostream &os) const override;  Print class name of dataset. ;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose, TString indent) const over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCompositeDataStore.html:4714,inherit,inherited,4714,doc/master/classRooCompositeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooCompositeDataStore.html,1,['inherit'],['inherited']
Modifiability,"tring_formExprFormula expression string; RooFormula*_formula! Formula engine ; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooArgSet*_nset! Normalization set to be passed along to contents; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFormulaVar.html:33873,config,configuration,33873,root/html532/RooFormulaVar.html,https://root.cern,https://root.cern/root/html532/RooFormulaVar.html,2,['config'],['configuration']
Modifiability,"tringstream buf;; 53 buf << val;; 54 ; 55 std::string ret = buf.str();; 56 return ret;; 57 }; 58 ; 59 /// safe evaluation of log(x) with a protections against negative or zero argument to the log; 60 /// smooth linear extrapolation below function values smaller than epsilon; 61 /// (better than a simple cut-off); 62 ; 63 template<class T>; 64 inline T EvalLog(T x) {; 65 static const T epsilon = T(2.0 * std::numeric_limits<double>::min());; 66#ifdef R__HAS_VECCORE; 67 T logval = vecCore::Blend<T>(x <= epsilon, x / epsilon + std::log(epsilon) - T(1.0), std::log(x));; 68#else; 69 T logval = x <= epsilon ? x / epsilon + std::log(epsilon) - T(1.0) : std::log(x);; 70#endif; 71 return logval;; 72 }; 73 ; 74 } // end namespace Util; 75 ; 76 /// \class KahanSum; 77 /// The Kahan summation is a compensated summation algorithm, which significantly reduces numerical errors; 78 /// when adding a sequence of finite-precision floating point numbers.; 79 /// This is done by keeping a separate running compensation (a variable to accumulate small errors).; 80 ///; 81 /// ### Auto-vectorisable accumulation; 82 /// This class can internally use multiple accumulators (template parameter `N`).; 83 /// When filled from a collection that supports index access from a *contiguous* block of memory,; 84 /// compilers such as gcc, clang and icc can auto-vectorise the accumulation. This happens by cycling; 85 /// through the internal accumulators based on the value of ""`index % N`"", so `N` accumulators can be filled from a block; 86 /// of `N` numbers in a single instruction.; 87 ///; 88 /// The usage of multiple accumulators might slightly increase the precision in comparison to the single-accumulator version; 89 /// with `N = 1`.; 90 /// This depends on the order and magnitude of the numbers being accumulated. Therefore, in rare cases, the accumulation; 91 /// result can change *in dependence of N*, even when the data are identical.; 92 /// The magnitude of such differences is well below the pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Util_8h_source.html:2421,variab,variable,2421,doc/master/Util_8h_source.html,https://root.cern,https://root.cern/doc/master/Util_8h_source.html,1,['variab'],['variable']
Modifiability,"tring fCPUPar;  ; TString fCPUSel;  ; TString fDataGenPar;  ; TString fDataGenSel;  ; TString fDataPar;  ; TString fDataSel;  ; TString fDataSet;  ; Bool_t fDebug;  ; TNamed * fDescription;  ; TProofBenchDataSet * fDS;  ; TPBHistType * fHistType;  ; Int_t fNFilesWrk;  ; Int_t fNHist;  ; Int_t fNtries;  ; Int_t fNumWrkMax;  ; TFile * fOutFile;  ; TString fOutFileName;  ; TProof * fProof;  ; TProof * fProofDS;  ; TPBReadType * fReadType;  ; Bool_t fReleaseCache;  ; TProofBenchRunCPU * fRunCPU;  ; TProofBenchRunDataRead * fRunDS;  ; TString fSelOption;  . Static Protected Attributes; static TF1 * fgFio = 0;  ; static TF1 * fgFioV = 0;  ; static TF1 * fgFp1 = 0;  ; static TF1 * fgFp1n = 0;  ; static TF1 * fgFp2 = 0;  ; static TF1 * fgFp2n = 0;  ; static TF1 * fgFp3 = 0;  ; static TF1 * fgFp3n = 0;  ; static TList * fgGraphs = new TList;  . Private Attributes; Bool_t fUnlinkOutfile;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofBench.h>. Inheritance diagram for TProofBench:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBench.html:13400,inherit,inherited,13400,doc/master/classTProofBench.html,https://root.cern,https://root.cern/doc/master/classTProofBench.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDCacheFile.h>. Inheritance diagram for TDCacheSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDCacheSystem(). TDCacheSystem::TDCacheSystem ; (; ). Create helper class that allows directory access via dCache. ; Definition at line 610 of file TDCacheFile.cxx. ◆ ~TDCacheSystem(). TDCacheSystem::~TDCacheSystem ; (; ). inlineoverride . Definition at line 88 of file TDCacheFile.h. Member Function Documentation. ◆ AccessPathName(). Bool_t TDCacheSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode . ). overridevirtual . Returns FALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Reimplemented from TSystem.; Definition at line 695 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheSystem::Class ; (; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDCacheSystem.html:33280,inherit,inherited,33280,doc/master/classTDCacheSystem.html,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDavixSystem.h>. Inheritance diagram for TDavixSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDavixSystem() [1/2]. TDavixSystem::TDavixSystem ; (; ). Definition at line 75 of file TDavixSystem.cxx. ◆ TDavixSystem() [2/2]. TDavixSystem::TDavixSystem ; (; const char * ; url). Definition at line 65 of file TDavixSystem.cxx. ◆ ~TDavixSystem(). TDavixSystem::~TDavixSystem ; (; ). virtual . Definition at line 85 of file TDavixSystem.cxx. Member Function Documentation. ◆ Class(). static TClass * TDavixSystem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDavixSystem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDavixSystem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 57 of file TDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixSystem.html:33306,inherit,inherited,33306,doc/master/classTDavixSystem.html,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TMacOSXSystem.h>. Inheritance diagram for TMacOSXSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMacOSXSystem() [1/2]. TMacOSXSystem::TMacOSXSystem ; (; ). Definition at line 332 of file TMacOSXSystem.mm. ◆ ~TMacOSXSystem(). TMacOSXSystem::~TMacOSXSystem ; (; ). Definition at line 340 of file TMacOSXSystem.mm. ◆ TMacOSXSystem() [2/2]. TMacOSXSystem::TMacOSXSystem ; (; const TMacOSXSystem & ; rhs). private . Member Function Documentation. ◆ AddFileHandler(). void TMacOSXSystem::AddFileHandler ; (; TFileHandler * ; h). privatevirtual . Add a file handler to the list of system file handlers. ; Only adds the handler if it is not already in the list of file handlers. ; Reimplemented from TSystem.; Definition at line 528 of file TMacOSXSystem.mm. ◆ ClassDef(). TMacOSXSystem::ClassDef ; (; TMacOSXSystem ; , . 0 ;  . ). private . ◆ CocoaIniti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMacOSXSystem.html:38386,inherit,inherited,38386,doc/master/classTMacOSXSystem.html,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TNetXNGSystem.h>. Inheritance diagram for TNetXNGSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNetXNGSystem() [1/2]. TNetXNGSystem::TNetXNGSystem ; (; Bool_t ; owner = kTRUE). Constructor: Create system class without connecting to server. ; param owner: (unused) ; Definition at line 73 of file TNetXNGSystem.cxx. ◆ TNetXNGSystem() [2/2]. TNetXNGSystem::TNetXNGSystem ; (; const char * ; url, . Bool_t ; owner = kTRUE . ). Constructor: Create system class and connect to server. ; param url: URL of the entry-point server to be contacted param owner: (unused) ; Definition at line 87 of file TNetXNGSystem.cxx. ◆ ~TNetXNGSystem(). TNetXNGSystem::~TNetXNGSystem ; (; ). virtual . Destructor. ; Definition at line 101 of file TNetXNGSystem.cxx. Member Function Documentation. ◆ Class(). static TClass * TNetXNGSystem::Class ; (; ). static . Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetXNGSystem.html:33846,inherit,inherited,33846,doc/master/classTNetXNGSystem.html,https://root.cern,https://root.cern/doc/master/classTNetXNGSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TUnixSystem.h>. Inheritance diagram for TUnixSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TUnixSystem(). TUnixSystem::TUnixSystem ; (; ). Definition at line 575 of file TUnixSystem.cxx. ◆ ~TUnixSystem(). TUnixSystem::~TUnixSystem ; (; ). virtual . Reset to original state. ; Definition at line 581 of file TUnixSystem.cxx. Member Function Documentation. ◆ Abort(). void TUnixSystem::Abort ; (; int ; code = 0). overridevirtual . Abort the application. ; Reimplemented from TSystem.; Definition at line 2202 of file TUnixSystem.cxx. ◆ AcceptConnection(). int TUnixSystem::AcceptConnection ; (; int ; sock). overridevirtual . Accept a connection. ; In case of an error return -1. In case non-blocking I/O is enabled and no connections are available return -2. ; Reimplemented from TSystem.; Definition at line 3276 of file TUnixSystem.cxx. ◆ Acce",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:37576,inherit,inherited,37576,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TWebFile.h>. Inheritance diagram for TWebSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWebSystem(). TWebSystem::TWebSystem ; (; ). Create helper class that allows directory access via httpd. ; The name must start with '-' to bypass the TSystem singleton check. ; Definition at line 1459 of file TWebFile.cxx. ◆ ~TWebSystem(). virtual TWebSystem::~TWebSystem ; (; ). inlinevirtual . Definition at line 108 of file TWebFile.h. Member Function Documentation. ◆ AccessPathName(). Bool_t TWebSystem::AccessPathName ; (; const char * ; path, . EAccessMode ; mode . ). overridevirtual . Returns FALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Reimplemented from TSystem.; Definition at line 1550 of file TWebFile.cxx. ◆ Class(). s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSystem.html:33215,inherit,inherited,33215,doc/master/classTWebSystem.html,https://root.cern,https://root.cern/doc/master/classTWebSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TWinNTSystem.h>. Inheritance diagram for TWinNTSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ThreadMsgFunc_t. typedef Bool_t(* TWinNTSystem::ThreadMsgFunc_t) (MSG *). Definition at line 61 of file TWinNTSystem.h. Constructor & Destructor Documentation. ◆ TWinNTSystem(). TWinNTSystem::TWinNTSystem ; (; ). ctor ; Definition at line 985 of file TWinNTSystem.cxx. ◆ ~TWinNTSystem(). TWinNTSystem::~TWinNTSystem ; (; ). virtual . dtor ; Definition at line 1048 of file TWinNTSystem.cxx. Member Function Documentation. ◆ Abort(). void TWinNTSystem::Abort ; (; int ; code = 0). overridevirtual . Abort the application. ; Reimplemented from TSystem.; Definition at line 3949 of file TWinNTSystem.cxx. ◆ AcceptConnection(). int TWinNTSystem::AcceptConnection ; (; int ; socket). overridevirtual . Accept a connection. ; In case of an error return -1. In case non",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:36489,inherit,inherited,36489,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TNetSystem (const TNetSystem &)=delete;  ; void * GetDirPtr () const override;  ; TNetSystem & operator= (const TNetSystem &)=delete;  . Private Attributes; Bool_t fDir;  ; void * fDirp;  ; TFTP * fFTP;  ; Bool_t fFTPOwner;  ; TString fHost;  ; Int_t fPort;  ; TString fUser;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetSystem.html:32673,inherit,inherited,32673,doc/master/classTNetSystem.html,https://root.cern,https://root.cern/doc/master/classTNetSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TSystem (const TSystem &)=delete;  ; Bool_t ExpandFileName (const char *fname, char *xname, const int kBufSize);  Private method for pathname expansion. ;  ; TSystem & operator= (const TSystem &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSystem.h>. Inheritance diagram for TSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAclicMode. enum TSystem::EAclicMode. EnumeratorkDefault ; kDebug ; kOpt . Definition at line 269 of file TSystem.h. ◆ EAclicProperties. enum TSystem::EAclicProperties. EnumeratorkFlatBuildDir . Definition at line 270 of file TSystem.h. Constructor & Destructor Documentation. ◆ TSystem() [1/2]. TSystem::TSystem ; (; const TSystem & ; ). privatedelete . ◆ TSystem() [2/2]. TSystem::TSystem ; (; const char * ; name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:32997,inherit,inherited,32997,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['inherit'],['inherited']
Modifiability,"tring fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGTransientFrame (const TGTransientFrame &)=delete;  ; TGTransientFrame & operator= (const TGTransientFrame &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Membe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTransientFrame.html:31866,inherit,inherited,31866,doc/master/classTGTransientFrame.html,https://root.cern,https://root.cern/doc/master/classTGTransientFrame.html,5,['inherit'],['inherited']
Modifiability,"tripped, and then the; label is correctly aligned. The dot, if last character of the string,; is also stripped, unless this option is specified.; One can disable the option by calling axis.SetDecimals(kTRUE).; Note the bit is set in fBits (as opposed to fBits2 in TAxis!). void SetFunction(const char* funcname = """"); Specify a function to map the axis values. void SetMaxDigits(Int_t maxd = 5); Static function to set fgMaxDigits for axis.; fgMaxDigits is the maximum number of digits permitted for the axis; labels above which the notation with 10^N is used.; For example, to accept 6 digits number like 900000 on an axis; call TGaxis::SetMaxDigits(6). The default value is 5.; fgMaxDigits must be greater than 0. void SetName(const char* name); Change the name of the axis. void SetMoreLogLabels(Bool_t more = kTRUE); Set the kMoreLogLabels bit flag.; When this option is selected more labels are drawn when in log scale; and there is a small number of decades (<3).; Note that this option is automatically inherited from TAxis. void SetNoExponent(Bool_t noExponent = kTRUE); Set the NoExponent flag.; By default, an exponent of the form 10^N is used when the label values; are either all very small or very large.; One can disable the exponent by calling axis.SetNoExponent(kTRUE). void SetOption(Option_t* option = """"); To set axis options. void SetTitle(const char* title = """"); Change the title of the axis. void SetTimeFormat(const char* tformat); Change the format used for time plotting.; The format string for date and time use the same options as the one used; in the standard strftime C function, i.e. :; for date :; %a abbreviated weekday name; %b abbreviated month name; %d day of the month (01-31); %m month (01-12); %y year without century. for time :; %H hour (24-hour clock); %I hour (12-hour clock); %p local equivalent of AM or PM; %M minute (00-59); %S seconds (00-61); %% %. void SetTimeOffset(Double_t toffset, Option_t* option = ""local""); Change the time offset.; If option =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGaxis.html:20770,inherit,inherited,20770,root/html530/TGaxis.html,https://root.cern,https://root.cern/root/html530/TGaxis.html,7,['inherit'],['inherited']
Modifiability,"trivial since we do not have a proxy for the container of _only_ the base class. For now; 1837 // punt.; 1838 ; 1839 UInt_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1840 UInt_t n = (((char*)end)-((char*)start))/incr;; 1841 char **arrptr = new char*[n];; 1842 UInt_t i = 0;; 1843 for(void *iter = start; iter != end; iter = (char*)iter + incr, ++i ) {; 1844 arrptr[i] = (char*)iter;; 1845 }; 1846 ((TStreamerInfo*)config->fInfo)->ReadBuffer(buf, arrptr, &(config->fCompInfo), /*first*/ 0, /*last*/ 1, /*narr*/ n, config->fOffset, 1|2 );; 1847 delete [] arrptr;; 1848 ; 1849 // // Idea: need to cache this result!; 1850 // TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1851 // TStreamerElement *aElement = (TStreamerElement*)info->GetElem(config->fElemId);; 1852 //; 1853 // *Int_t clversion = ((TStreamerBase*)aElement)->Get BaseVersion();; 1854 // *TClass *cle = aElement->GetNewBaseClass();; 1855 // *(TSequence *actions = CreateReadMemberWiseActions( cle->GetStreamerInfo(clversion), ???? );; 1856 //; 1857 // TSequence *actions = CreateReadMemberWiseActions( ((TStreamerBase*)aElement)->GetBaseStreamerInfo(), ???? );; 1858 //; 1859 // actions->ReadBuffer(b,start,end);; 1860 // delete actions;; 1861 ; 1862 // const Int_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1863 // for(void *iter = start; iter != end; iter = (char*)iter + incr ); 1864 // {; 1865 // ((TStreamerInfo*)(((TStreamerBase*)aElement)->GetBaseStreamerInfo())->ReadBuffer(b,arr,-1,narr,ioffset,arrayMode);; 1866 //; 1867 // ((TStreamerInfo*)config->fInfo)->ReadBuffer(buf, (char**)&iter, config->fElemId, 1, config->fOffset, 1|2 );; 1868 // }; 1869 return 0;; 1870 }; 1871 ; 1872 static INLINE_TEMPLATE_ARGS Int_t GenericRead(TBuffer &buf, void *start, const void *end, const TLoopConfiguration * loopconfig, const TConfiguration *config); 1873 {; 1874 // Well the implementation is non trivial. For now punt.; 1875 ; 1876 UInt_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1877 UInt_t n ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:76899,config,config,76899,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,9,['config'],['config']
Modifiability,"trix norm, MAX{ SUM{ |M(i,j)|, over j}, over i}. ;  ; virtual TMatrixTBase< Element > & SetMatrixArray (const Element *data, Option_t *option="""");  Copy array data to matrix . ;  ; Element SetTol (Element tol);  ; virtual TMatrixTBase< Element > & Shift (Int_t row_shift, Int_t col_shift);  Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ;  ; virtual TMatrixTBase< Element > & Sqr ();  Square each element of the matrix. ;  ; virtual TMatrixTBase< Element > & Sqrt ();  Take square root of all elements. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTBase<Element>. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Element Sum () const;  Compute sum of elements. ;  ; virtual TMatrixTBase< Element > & UnitMatrix ();  Make a unit matrix (matrix need not be a square one). ;  ; virtual TMatrixTBase< Element > & Zero ();  Set matrix elements to zero. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixT.html:16935,inherit,inherited,16935,doc/master/classTMatrixT.html,https://root.cern,https://root.cern/doc/master/classTMatrixT.html,1,['inherit'],['inherited']
Modifiability,"trix of the discriminant variable space.; . The classification of the events in signal and background classes; relies on the following characteristics (only): overall sample means,; xi, for each input variable, i,; class-specific sample means, xS(B),i,; and total covariance matrix Tij. The covariance matrix; can be decomposed into the sum of a within- (Wij); and a between-class (Bij) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, Fi, are then given by . where in TMVA is set NS=NB, so that the factor; in front of the sum simplifies to ½.; The Fisher discriminant then reads. The offset F0 centers the sample mean of xFi; at zero. Instead of using the within-class matrix, the Mahalanobis variant; determines the Fisher coefficients as follows:. with resulting xMa that are very similar to the; xFi. ; TMVA provides two outputs for the ranking of the input variables:. Fisher test: the Fisher analysis aims at simultaneously maximising; the between-class separation, while minimising the within-class dispersion.; A useful measure of the discrimination power of a variable is hence given; by the diagonal quantity: Bii/Wii.; ; Discrimination power: the value of the Fisher coefficient is a; measure of the discriminating power of a variable. The discrimination power; of set of input variables can therefore be measured by the scalar; . The corresponding numbers are printed on standard output.; ; . Function Members (Methods); public:. virtual~MethodFisher(); voidTObject::AbstractMethod(const char* method) const; voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodBase::BaseDir() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodFisher.html:2083,variab,variables,2083,root/html528/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodFisher.html,10,['variab'],['variables']
Modifiability,"trix(). bool TMinuitMinimizer::GetHessianMatrix ; (; double * ; h); const. overridevirtual . Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ; The array will be filled as h[i *ndim + j] ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 682 of file TMinuitMinimizer.cxx. ◆ GetMinosError(). bool TMinuitMinimizer::GetMinosError ; (; unsigned int ; i, . double & ; errLow, . double & ; errUp, . int ; = 0 . ). overridevirtual . minos error for variable i, return false if Minos failed ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 746 of file TMinuitMinimizer.cxx. ◆ GetVariableSettings(). bool TMinuitMinimizer::GetVariableSettings ; (; unsigned int ; ivar, . ROOT::Fit::ParameterSettings & ; var . ); const. overridevirtual . get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 411 of file TMinuitMinimizer.cxx. ◆ GlobalCC(). double TMinuitMinimizer::GlobalCC ; (; unsigned int ; i); const. overridevirtual . global correlation coefficient for variable i ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 734 of file TMinuitMinimizer.cxx. ◆ Hesse(). bool TMinuitMinimizer::Hesse ; (; ). overridevirtual . perform a full calculation of the Hessian matrix for error calculation ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1004 of file TMinuitMinimizer.cxx. ◆ InitTMinuit(). void TMinuitMinimizer::InitTMinuit ; (; int ; ndim). protected . initialize the TMinuit instance ; Definition at line 117 of file TMinuitMinimizer.cxx. ◆ IsA(). virtual TClass * TMinuitMinimizer::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 272 of file TMinuitMinimizer.h. ◆ IsFixedVariable(). bool TMinuitMinimizer::IsFixedVariable ; (; un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:17810,variab,variable,17810,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,2,['variab'],['variable']
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html534/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trixD * fYData;  Input: fY prior to bgr subtraction. ;  ;  Protected Attributes inherited from TUnfold; TMatrixDSparse * fA;  response matrix A ;  ; Double_t fBiasScale;  scale factor for the bias ;  ; EConstraint fConstraint;  type of constraint to use for the unfolding ;  ; TArrayI fHistToX;  mapping of histogram bins to matrix indices ;  ; TMatrixDSparse * fL;  regularisation conditions L ;  ; ERegMode fRegMode;  type of regularisation ;  ; TArrayD fSumOverY;  truth vector calculated from the non-normalized response matrix ;  ; Double_t fTauSquared;  regularisation parameter tau squared ;  ; TMatrixDSparse * fVyy;  covariance matrix Vyy corresponding to y ;  ; TMatrixD * fX0;  bias vector x0 ;  ; TArrayI fXToHist;  mapping of matrix indices to histogram bins ;  ; TMatrixD * fY;  input (measured) data y ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TUnfold; static void DeleteMatrix (TMatrixD **m);  delete matrix and invalidate pointer ;  ; static void DeleteMatrix (TMatrixDSparse **m);  delete sparse matrix and invalidate pointer ;  . #include <TUnfoldDensity.h>. Inheritance diagram for TUnfoldDensity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EDensityMode. enum TUnfoldDensity::EDensityMode. choice of regularisation scale factors to cinstruct the matrix L . EnumeratorkDensityModeNone no scale factors, matrix L is similar to unity matrix . kDensityModeBinWidth scale factors from multidimensional bin width . kDensityModeUser scale factors from user function in TUnfoldBinning . kDensityModeBinWidthAndUser scale factors from multidimensional bin width and user function . Definition at line 67 of file TUnfoldDensity.h. ◆ EScanTauMode. enum TUnfoldDensity::EScanTauMode. scan mode for correlation scan . EnumeratorkEScanTauRhoAvg average global correlation c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:39272,inherit,inherited,39272,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,2,['inherit'],['inherited']
Modifiability,"trixDfMinmaxmins and maxs of variables for histogramming; Int_tfNSpeciesNumber of species; Int_tfNeventsTotal number of events; Double_t*fNumbersOfEvents[fNSpecies] estimates of numbers of events in each species; Int_tfNxNumber of control variables; Int_tfNyNumber of discriminating variables; TMatrixDfPdfTot!; TMatrixDfSWeightscomputed sWeights; TObjArrayfSWeightsHistshistograms of weighted variables; TString*fSelectionSelection on the tree; TTree*fTree!; TString*fTreenameThe name of the data tree; TString*fVarexpVariables used for splot; TMatrixDfXvar!; TObjArrayfXvarHistshistograms of control variables; TMatrixDfYpdf!; TObjArrayfYpdfHistshistograms of pdfs; TMatrixDfYvar!; TObjArrayfYvarHistshistograms of discriminating variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSPlot(); default constructor (used by I/O only). TSPlot(Int_t nx, Int_t ny, Int_t ne, Int_t ns, TTree* tree); normal TSPlot constructor; nx : number of control variables; ny : number of discriminating variables; ne : total number of events; ns : number of species; tree: input data. ~TSPlot(); destructor. void Browse(TBrowser* b); To browse the histograms. void SetInitialNumbersOfSpecies(Int_t* numbers); Set the initial number of events of each species - used; as initial estimates in minuit. void MakeSPlot(Option_t* option = ""v""); Calculates the sWeights; The option controls the print level; ""Q"" - no print out; ""V"" - prints the estimated #of events in species - default; ""VV"" - as ""V"" + the minuit printing + sums of weights for control. void SPlots(Double_t* covmat, Int_t i_excl); Computes the sWeights from the covariance matrix. void GetSWeights(TMatrixD& weights); Returns the matrix of sweights. void GetSWeights(Double_t* weights); Returns the matrix of sweights. It is assumed that the array passed in the argurment is big enough. void FillXvarHists(Int_t nbins = 100); Fills the histograms of x variables (not weighted) with nbins. TObjArray* GetXva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSPlot.html:15922,variab,variables,15922,root/html528/TSPlot.html,https://root.cern,https://root.cern/root/html528/TSPlot.html,12,['variab'],['variables']
Modifiability,"trixTBase<double>*TMatrixTFlat_const<double>::GetMatrix() const; double*GetPtr() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; double&operator()(Int_t i); voidoperator*=(double val); voidoperator*=(const TMatrixTFlat_const<double>& f); voidoperator+=(double val); voidoperator+=(const TMatrixTFlat_const<double>& f); voidoperator=(double val); voidoperator=(const TMatrixTFlat_const<double>& f); TMatrixTFlat<double>&operator=(const TMatrixTFlat<double>& f); voidoperator=(const TVectorT<double>& vec); const double&operator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. TMatrixTBase<double>*TMatrixTFlat_const<double>::fMatrixthe matrix I am the diagonal of; Int_tTMatrixTFlat_const<double>::fNelems; const double*TMatrixTFlat_const<double>::fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTFlat_double_.html:2126,Inherit,Inheritance,2126,root/html534/TMatrixTFlat_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTFlat_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTRow_const<double>(); static TClass*Class(); Int_tGetInc() const; const TMatrixTBase<double>*GetMatrix() const; const double*GetPtr() const; Int_tGetRowIndex() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; TMatrixTRow_const<double>&operator=(const TMatrixTRow_const<double>& trc); const double&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTRow_const<double>(); TMatrixTRow_const<double>(const TMatrixTRow_const<double>& trc); TMatrixTRow_const<double>(const TMatrixT<double>& matrix, Int_t row); TMatrixTRow_const<double>(const TMatrixTSym<double>& matrix, Int_t row). Data Members; protected:. Int_tfIncif ptr = @a[row,i], then ptr+inc = @a[row,i+1]; TMatrixTBase<double>*fMatrixthe matrix I am a row of; const double*fPtrpointer to the a[row,0]; Int_tfRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTRow_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetRowIndex() const; { return fRowInd; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. » Last changed: root/matrix:$Id$ » Last generated: 2015-06-30 15:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTRow_const_double_.html:1806,Inherit,Inheritance,1806,root/html602/TMatrixTRow_const_double_.html,https://root.cern,https://root.cern/root/html602/TMatrixTRow_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTRow_const<double>(); static TClass*Class(); Int_tGetInc() const; const TMatrixTBase<double>*GetMatrix() const; const double*GetPtr() const; Int_tGetRowIndex() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; TMatrixTRow_const<double>&operator=(const TMatrixTRow_const<double>& trc); const double&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTRow_const<double>(); TMatrixTRow_const<double>(const TMatrixTRow_const<double>& trc); TMatrixTRow_const<double>(const TMatrixT<double>& matrix, Int_t row); TMatrixTRow_const<double>(const TMatrixTSym<double>& matrix, Int_t row). Data Members; protected:. Int_tfIncif ptr = @a[row,i], then ptr+inc = @a[row,i+1]; TMatrixTBase<double>*fMatrixthe matrix I am a row of; const double*fPtrpointer to the a[row,0]; Int_tfRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTRow_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetRowIndex() const; { return fRowInd; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMatrixTRow_const_double_.html:1806,Inherit,Inheritance,1806,root/html604/TMatrixTRow_const_double_.html,https://root.cern,https://root.cern/root/html604/TMatrixTRow_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"trixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixTRow_const<Double_t>, TMatrixDRow_const. Function Members (Methods); public:. TMatrixTRow_const<double>(); TMatrixTRow_const<double>(const TMatrixTRow_const<double>& trc); TMatrixTRow_const<double>(const TMatrixT<double>& matrix, Int_t row); TMatrixTRow_const<double>(const TMatrixTSym<double>& matrix, Int_t row); virtual~TMatrixTRow_const<double>(); static TClass*Class(); Int_tGetInc() const; const TMatrixTBase<double>*GetMatrix() const; const double*GetPtr() const; Int_tGetRowIndex() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; TMatrixTRow_const<double>&operator=(const TMatrixTRow_const<double>& trc); const double&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tfIncif ptr = @a[row,i], then ptr+inc = @a[row,i+1]; TMatrixTBase<double>*fMatrixthe matrix I am a row of; const double*fPtrpointer to the a[row,0]; Int_tfRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTRow_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetRowIndex() const; { return fRowInd; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTRow_const_double_.html:1871,Inherit,Inheritance,1871,root/html534/TMatrixTRow_const_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTRow_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"troduced in; the numerical calculation of the FCN value. The effects of; non-linearity and numerical roundoff both become more important as the; external value gets closer to one of the limits (expressed as the distance; to nearest limit divided by distance between limits). The user must; therefore be aware of the fact that, for example, if he puts limits of; (0,10^10 ) on a parameter, then the values 0.0 and 1. 0 will be; indistinguishable to the accuracy of most machines. The transformation also affects the parameter error matrix, of course, so; MINUIT does a transformation of the error matrix (and the ``parabolic''; parameter errors) when there are parameter limits. Users should however; realize that the transformation is only a linear approximation, and that; it cannot give a meaningful result if one or more parameters is very close; to a limit, where partial Pext /partial Pint #0. Therefore, it is; recommended that:. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values.; When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and checks for; positive-definiteness. Its main weakness is that it depends heavily on; knowledge of the first derivatives, and fails miserably if they are very; inaccurate. If parameter limits are needed, in spite of the side effects, then the; user should be aware of the following techniques to alleviate problems; caused by limits:. Getting the right minimum with limits. If MIGRAD converges normally to a point where no parameter is near one of; its limits, then the exis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:4532,variab,variable,4532,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,6,['variab'],['variable']
Modifiability,"trolling global inhibit of dirty state propagation; Bool_t_init! do not persist; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Int_tRooAbsPdf::_minDimNormValueCacheMinimum number of numerically integrated dimensions to activate normalization value caching; static Int_tRooPrintable::_nameLength; Int_tRooAbsPdf::_negCountNumber of negative probablities remaining to print; RooAbsReal*RooAbsPdf::_norm! Normalization integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_trac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumConvPdf.html:40903,variab,variable,40903,root/html528/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html528/RooNumConvPdf.html,1,['variab'],['variable']
Modifiability,trolling global inhibit of dirty state propagation; Bool_t_init! do not persist; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Int_tRooAbsPdf::_minDimNormValueCacheMinimum number of numerically integrated dimensions to activate normalization value caching; static Int_tRooPrintable::_nameLength; Int_tRooAbsPdf::_negCountNumber of negative probablities remaining to print; RooAbsReal*RooAbsPdf::_norm! Normalization integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; m,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNumConvPdf.html:41372,variab,variable,41372,root/html530/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html530/RooNumConvPdf.html,1,['variab'],['variable']
Modifiability,trolling global inhibit of dirty state propagation; Bool_t_init! do not persist; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Int_tRooAbsPdf::_minDimNormValueCacheMinimum number of numerically integrated dimensions to activate normalization value caching; static Int_tRooPrintable::_nameLength; Int_tRooAbsPdf::_negCountNumber of negative probablities remaining to print; RooAbsReal*RooAbsPdf::_norm! Normalization integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this objec,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumConvPdf.html:41775,variab,variable,41775,root/html532/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html532/RooNumConvPdf.html,2,['variab'],['variable']
Modifiability,"trolling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static Int_t _evalErrorCount = 0;  ; static std::map< const RooAbsArg *, std::pair< std::string, std::list< EvalError > > > _evalErrorList;  ; static ErrorLoggingMode _evalErrorMode = RooAbsReal::PrintErrors;  ; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAddPdf.h>. Inheritance diagram for RooAddPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooAddPdf() [1/6]. RooAddPdf::RooAddPdf ; (; ). inline . Definition at line 36 of file RooAddPdf.h. ◆ RooAddPdf() [2/6]. RooAddPdf::RooAddPdf ; (; const char * ; name, . const char * ; title = nullptr . ). Dummy constructor. ; Definition at line 99 of file RooAddPdf.cxx. ◆ RooAddPdf() [3/6]. RooAddPdf::RooAddPdf ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; pdf1, . RooAbsPdf & ; pdf2, . RooAbsReal & ; coef1 . ). Constructor with two PDFs and one coefficient. ; Definition at line 136 of file RooAddPdf.cxx. ◆ RooAddPdf() [4/6]. RooAddPdf::RooAddPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inPdfList . ). Generic constructor from list of extended PDFs. ; There are no coefficients as the expected nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:79200,inherit,inherited,79200,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,1,['inherit'],['inherited']
Modifiability,"trongly increases with"" << Endl;; 1736 Log() << ""the dimensionality (number of input variables) of the problem."" << Endl;; 1737 Log() << ""This behavior is due to the non-uniqueness of the solution space.""<< Endl;; 1738 Log() << Endl;; 1739 Log() << gTools().Color(""bold"") << ""--- Performance optimisation:"" << gTools().Color(""reset"") << Endl;; 1740 Log() << Endl;; 1741 Log() << ""If the dimensionality exceeds, say, 4 input variables, it is "" << Endl;; 1742 Log() << ""advisable to scrutinize the separation power of the variables,"" << Endl;; 1743 Log() << ""and to remove the weakest ones. If some among the input variables"" << Endl;; 1744 Log() << ""can be described by a single cut (e.g., because signal tends to be"" << Endl;; 1745 Log() << ""larger than background), this can be indicated to MethodCuts via"" << Endl;; 1746 Log() << ""the \""Fsmart\"" options (see option string). Choosing this option"" << Endl;; 1747 Log() << ""reduces the number of requirements for the variable from 2 (min/max)"" << Endl;; 1748 Log() << ""to a single one (TMVA finds out whether it is to be interpreted as"" << Endl;; 1749 Log() << ""min or max)."" << Endl;; 1750 Log() << Endl;; 1751 Log() << gTools().Color(""bold"") << ""--- Performance tuning via configuration options:"" << gTools().Color(""reset"") << Endl;; 1752 Log() << """" << Endl;; 1753 Log() << bold << ""Monte Carlo sampling:"" << resbold << Endl;; 1754 Log() << """" << Endl;; 1755 Log() << ""Apart form the \""Fsmart\"" option for the variables, the only way"" << Endl;; 1756 Log() << ""to improve the MC sampling is to increase the sampling rate. This"" << Endl;; 1757 Log() << ""is done via the configuration option \""MC_NRandCuts\"". The execution"" << Endl;; 1758 Log() << ""time scales linearly with the sampling rate."" << Endl;; 1759 Log() << """" << Endl;; 1760 Log() << bold << ""Genetic Algorithm:"" << resbold << Endl;; 1761 Log() << """" << Endl;; 1762 Log() << ""The algorithm terminates if no significant fitness increase has"" << Endl;; 1763 Log() << ""been achieved within ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:68718,variab,variable,68718,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['variab'],['variable']
Modifiability,"trongly peaked) likelihood output through sigmoid inversion. void DeclareCompatibilityOptions(). void ProcessOptions(). void Train( void ); create reference distributions (PDFs) from signal and background events:; fill histograms and smooth them; if decorrelation is required, compute; corresponding square-root matrices; the reference histograms require the correct boundaries. Since in Likelihood classification; the transformations are applied using both classes, also the corresponding boundaries; need to take this into account. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns the likelihood estimator for signal; fill a new Likelihood branch into the testTree. Double_t TransformLikelihoodOutput(Double_t ps, Double_t pb) const; returns transformed or non-transformed output. void WriteOptionsToStream(ostream& o, const TString& prefix) const; write options to stream. void AddWeightsXMLTo(void* parent) const; write weights to XML. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void WriteWeightsToStream(TFile& rf) const; write reference PDFs to ROOT file. void ReadWeightsFromXML(void* wghtnode); read weights from XML. void ReadWeightsFromStream(istream& istr); read weight info from file; nothing to do for this method. void ReadWeightsFromStream(TFile& istr); read reference PDF from ROOT file. void WriteMonitoringHistosToFile( void ); write histograms and PDFs to file for monitoring purposes. void MakeClassSpecificHeader(ostream& , const TString& = """") const; write specific header of the classifier (mostly include files). void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodLikelihood.h 36966 2010-11-26 09:50:13Z",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodLikelihood.html:20891,variab,variables,20891,root/html528/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodLikelihood.html,1,['variab'],['variables']
Modifiability,"trongly peaked) likelihood output through sigmoid inversion. void DeclareCompatibilityOptions(). void ProcessOptions(). void Train( void ); create reference distributions (PDFs) from signal and background events:; fill histograms and smooth them; if decorrelation is required, compute; corresponding square-root matrices; the reference histograms require the correct boundaries. Since in Likelihood classification; the transformations are applied using both classes, also the corresponding boundaries; need to take this into account. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns the likelihood estimator for signal; fill a new Likelihood branch into the testTree. Double_t TransformLikelihoodOutput(Double_t ps, Double_t pb) const; returns transformed or non-transformed output. void WriteOptionsToStream(ostream& o, const TString& prefix) const; write options to stream. void AddWeightsXMLTo(void* parent) const; write weights to XML. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void WriteWeightsToStream(TFile& rf) const; write reference PDFs to ROOT file. void ReadWeightsFromXML(void* wghtnode); read weights from XML. void ReadWeightsFromStream(istream& istr); read weight info from file; nothing to do for this method. void ReadWeightsFromStream(TFile& istr); read reference PDF from ROOT file. void WriteMonitoringHistosToFile( void ); write histograms and PDFs to file for monitoring purposes. void MakeClassSpecificHeader(ostream& , const TString& = """") const; write specific header of the classifier (mostly include files). void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Peter Speckmayer, Eckhard von Toerne, Jan Therhaag » Copyright (c) 2005-2011: *; » Last changed: roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodLikelihood.html:21511,variab,variables,21511,root/html530/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodLikelihood.html,3,['variab'],['variables']
Modifiability,"truct, TEveGeoNode, TEveGeoTopNode, TGeometry, THelix, TNode, TNodeDiv, TPolyLine3D, TPolyMarker3D, TStructViewer, TStructViewerGUI, TF1, TF2, TF3, TH1, TPolyMarker, TSpline, TFile, TMatrixTBase< Element >, TMatrixTBase< AReal >, TMatrixTBase< Double_t >, TVectorT< Element >, TVectorT< Double_t >, TMultiLayerPerceptron, TGenerator, RooAbsData, RooTreeDataStore, TTreePerfStats, TParallelCoordVar, TGItemContext, TVirtualPad, TPie, TGraph2D, TGraphPolar, TGraphPolargram, TParallelCoord, TParallelCoordRange, TSpider, RooPlot, and RooStats::SamplingDistPlot.; Definition at line 274 of file TObject.cxx. ◆ DrawClass(). void TObject::DrawClass ; (; ); const. virtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented in TSystemDirectory, TSystemFile, and TGFrame.; Definition at line 289 of file TObject.cxx. ◆ DrawClone(). TObject * TObject::DrawClone ; (; Option_t * ; option = """"); const. virtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented in TSystemDirectory, TSystemFile, TGFrame, TAxis, and TCanvas.; Definition at line 299 of file TObject.cxx. ◆ Dump(). void TObject::Dump ; (; ); const. virtual . Dump contents of object on stdout. ; Using the information in the object dictionary (class TClass) each data member is interpreted. If a data member is a pointer, the pointer value is printed; The following output is the Dump of a TArrow object: fAngle 0 Arrow opening angle (degrees); fArrowSize 0.2 Arrow Size; fOption.*fData; fX1 0.1 X of 1st point; fY1 0.15 Y of 1st point; fX2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTObject.html:31384,inherit,inheritance,31384,doc/v632/classTObject.html,https://root.cern,https://root.cern/doc/v632/classTObject.html,1,['inherit'],['inheritance']
Modifiability,"truct, TEveGeoNode, TEveGeoTopNode, TGeometry, THelix, TNode, TNodeDiv, TPolyLine3D, TPolyMarker3D, TStructViewer, TStructViewerGUI, TF1, TF2, TF3, TH1, TPolyMarker, TSpline, TFile, TMatrixTBase< Element >, TMatrixTBase< AReal >, TMatrixTBase< Double_t >, TVectorT< Element >, TVectorT< Double_t >, TMultiLayerPerceptron, TGenerator, RooAbsData, RooTreeDataStore, TTreePerfStats, TParallelCoordVar, TGItemContext, TVirtualPad, TPie, TGraph2D, TGraphPolar, TGraphPolargram, TParallelCoord, TParallelCoordRange, TSpider, RooPlot, and RooStats::SamplingDistPlot.; Definition at line 280 of file TObject.cxx. ◆ DrawClass(). void TObject::DrawClass ; (; ); const. virtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented in TSystemDirectory, TSystemFile, and TGFrame.; Definition at line 295 of file TObject.cxx. ◆ DrawClone(). TObject * TObject::DrawClone ; (; Option_t * ; option = """"); const. virtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented in TSystemDirectory, TSystemFile, TGFrame, TAxis, and TCanvas.; Definition at line 305 of file TObject.cxx. ◆ Dump(). void TObject::Dump ; (; ); const. virtual . Dump contents of object on stdout. ; Using the information in the object dictionary (class TClass) each data member is interpreted. If a data member is a pointer, the pointer value is printed; The following output is the Dump of a TArrow object: fAngle 0 Arrow opening angle (degrees); fArrowSize 0.2 Arrow Size; fOption.*fData; fX1 0.1 X of 1st point; fY1 0.15 Y of 1st point; fX2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:31097,inherit,inheritance,31097,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['inherit'],['inheritance']
Modifiability,"tructName &operator[](Int_t i) const { assert(i>=0 && i < GetNRows()); return *((const structName *)(GetTable(i))); }; structName *begin() const { return GetNRows()? GetTable(0):0;}; structName *end() const {Int_t i = GetNRows(); return i? GetTable(i):0;}. The class implementation file may 2 lines and look as follows:; (for the example above):. St_dst_track_Table.cxx:. #include ""St_dst_track_Table.h""; TableClassImpl(St_dst_track, dst_track_st). LinkDef.h. To provide ROOT I/O for this class TWO CINT dictonary entries; should be defined with your custom LinkDef.h file; 1. First entry (as usually) for the class derived from TTable; for example:; #pragma C++ class St_dst_track; 2. Second entry for the C-structure wrapped into the class.; Since C-structuire is not derived from TObject it must be; properly defined as ""foreign"" ROOT class; #pragma C++ class dst_track_st+;. meta-variables i$ and n$ introduced; where ""i$"" stands for the current row index; ""n$"" stands for the total number of rows; meta-variable can be used along the normal; table column names in the expressions (see for example; method TTable::Draw. Function Members (Methods); public:. TTable(const TTable& table); TTable(const char* name = 0, Int_t size = 0); TTable(const char* name, Int_t n, Int_t size); TTable(const char* name, Int_t n, Char_t* array, Int_t size); TTable(const char* name, const char* type, Int_t n, Char_t* array, Int_t size); virtual~TTable(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDataSet::Add(TDataSet* dataset); virtual Int_tAddAt(const void* c); virtual voidAddAt(const void* c, Int_t i); virtual voidAddAt(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddAtAndExpand(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddFirst(TDataSet* dataset); virtual voidTDataSet::AddLast(TDataSet* dataset); virtual voidAdopt(Int_t n, void* array); virtual voidTObject::AppendPad(Option_t* option = """"); virtual Long_tAppendRows(const void* row, UInt_t nRows); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTable.html:4470,variab,variables,4470,root/html528/TTable.html,https://root.cern,https://root.cern/root/html528/TTable.html,12,['variab'],"['variable', 'variables']"
Modifiability,"tructName &operator[](Int_t i) const { assert(i>=0 && i < GetNRows()); return *((const structName *)(GetTable(i))); }; structName *begin() const { return GetNRows()? GetTable(0):0;}; structName *end() const {Int_t i = GetNRows(); return i? GetTable(i):0;}. The class implementation file may 2 lines and look as follows:; (for the example above):. St_dst_track_Table.cxx:. #include ""St_dst_track_Table.h""; TableClassImpl(St_dst_track, dst_track_st). LinkDef.h. To provide ROOT I/O for this class TWO CINT dictonary entries; should be defined with your custom LinkDef.h file; 1. First entry (as usually) for the class derived from TTable; for example:; #pragma C++ class St_dst_track; 2. Second entry for the C-structure wrapped into the class.; Since C-structuire is not derived from TObject it must be; properly defined as ""foreign"" ROOT class; #pragma C++ class dst_track_st+;. meta-variables i$ and n$ introduced; where ""i$"" stands for the current row index; ""n$"" stands for the total number of rows; meta-variable can be used along the normal; table column names in the expressions (see for example; method TTable::Draw. Function Members (Methods); public:. virtual~TTable(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDataSet::Add(TDataSet* dataset); virtual Int_tAddAt(const void* c); virtual voidAddAt(const void* c, Int_t i); virtual voidAddAt(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddAtAndExpand(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddFirst(TDataSet* dataset); virtual voidTDataSet::AddLast(TDataSet* dataset); virtual voidAdopt(Int_t n, void* array); virtual voidTObject::AppendPad(Option_t* option = """"); virtual Long_tAppendRows(const void* row, UInt_t nRows); virtual voidAsString(void* buf, TTable::EColumnType type, Int_t width, ostream& out) const; const void*At(Int_t i) const; virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual TObject*TDataSet::Clone(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTable.html:4491,variab,variables,4491,root/html602/TTable.html,https://root.cern,https://root.cern/root/html602/TTable.html,8,['variab'],"['variable', 'variables']"
Modifiability,"tructName &operator[](Int_t i) const { assert(i>=0 && i < GetNRows()); return *((const structName *)(GetTable(i))); }; structName *begin() const { return GetNRows()? GetTable(0):0;}; structName *end() const {Int_t i = GetNRows(); return i? GetTable(i):0;}. The class implementation file may 2 lines and look as follows:; (for the example above):. St_dst_track_Table.cxx:. #include ""St_dst_track_Table.h""; TableClassImpl(St_dst_track, dst_track_st). LinkDef.h. To provide ROOT I/O for this class TWO CINT dictonary entries; should be defined with your custom LinkDef.h file; 1. First entry (as usually) for the class derived from TTable; for example:; #pragma C++ class St_dst_track; 2. Second entry for the C-structure wrapped into the class.; Since C-structuire is not derived from TObject it must be; properly defined as ""foreign"" ROOT class; #pragma C++ class dst_track_st+;. meta-variables i$ and n$ introduced; where ""i$"" stands for the current row index; ""n$"" stands for the total number of rows; meta-variable can be used along the normal; table column names in the expressions (see for example; method TTable::Draw. Function Members (Methods); public:. ~iterator(); TTable::iteratoriterator(); TTable::iteratoriterator(const TTable::iterator& iter); TTable::iteratoriterator(const TTable& table, TTable::iterator::vec_iterator& arowPtr); TTable::iteratoriterator(const TTable& table, TTable::iterator::vec_const_iterator& arowPtr); void*operator void *() const; Bool_toperator!=(const TTable::iterator& t) const; Long_toperator*() const; TTable::iteratoroperator+(Int_t idx); voidoperator++(); voidoperator++(int); voidoperator+=(Int_t idx); TTable::iteratoroperator-(Int_t idx); Int_toperator-(const TTable::iterator& it) const; voidoperator--(); voidoperator--(int); voidoperator-=(Int_t idx); TTable::iterator&operator=(const TTable::iterator& iter); Bool_toperator==(const TTable::iterator& t) const; const vector<long>::iterator&Row() const; void*rowPtr() const; const Long_t&RowSize() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTable__iterator.html:4504,variab,variables,4504,root/html602/TTable__iterator.html,https://root.cern,https://root.cern/root/html602/TTable__iterator.html,8,['variab'],"['variable', 'variables']"
Modifiability,"tructing!; TRefArray*TEveDigitSet::fDigitIdsArray holding references to external objects.; Bool_tTEveDigitSet::fDisableLightingDisable lighting for rendering.; Bool_tfDrawConeCap; Bool_tTEveDigitSet::fEmitSignalsEmit signals on secondary-select.; TEveFrameBox*TEveDigitSet::fFramePointer to frame structure.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tTEveDigitSet::fHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*TEveDigitSet::fLastDigit! The last / current digit added to collection.; Int_tTEveDigitSet::fLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveDigitSet::fOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*TEveDigitSet::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerTEveDigitSet::fPlexContainer of digit data.; TEveDigitSet::ERenderMode_eTEveDigitSet::fRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelecte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBoxSet.html:26780,variab,variable,26780,root/html528/TEveBoxSet.html,https://root.cern,https://root.cern/root/html528/TEveBoxSet.html,2,['variab'],['variable']
Modifiability,"truction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetConeProjected(const char* n = ""TEveJetConeProjected"", const char* t = """"); Constructor. ~TEveJetConeProjected(); Destructor. void ComputeBBox(); Compute bounding-box, virtual from TAttBBox. void SetDepthLocal(Float_t d); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); Re-project the jet-cone. TEveJetCone& operator=(const TEveJetConeProjected& ). TEveJetConeProjected(const TEveJetConeProjected& ). TEveElement* GetProjectedAsElement(); { return this; }. » Author: Matevz Tadel, Jochen Thaeder 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveJetConeProjected.html:23201,Inherit,Inheritance,23201,root/html602/TEveJetConeProjected.html,https://root.cern,https://root.cern/root/html602/TEveJetConeProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"truction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetConeProjected(const char* n = ""TEveJetConeProjected"", const char* t = """"); Constructor. ~TEveJetConeProjected(); Destructor. void ComputeBBox(); Compute bounding-box, virtual from TAttBBox. void SetDepthLocal(Float_t d); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); Re-project the jet-cone. TEveJetCone& operator=(const TEveJetConeProjected& ). TEveJetConeProjected(const TEveJetConeProjected& ). TEveElement* GetProjectedAsElement(); { return this; }. » Author: Matevz Tadel, Jochen Thaeder 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-09-08 17:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveJetConeProjected.html:23201,Inherit,Inheritance,23201,root/html604/TEveJetConeProjected.html,https://root.cern,https://root.cern/root/html604/TEveJetConeProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tructor Documentation. ◆ TH1() [1/5]. TH1::TH1 ; (; const TH1 & ; ). privatedelete . ◆ TH1() [2/5]. TH1::TH1 ; (; ). protected . Histogram default constructor. ; Definition at line 615 of file TH1.cxx. ◆ TH1() [3/5]. TH1::TH1 ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . Double_t ; xlow, . Double_t ; xup . ). protected . Constructor for fix bin size histograms. ; Creates the main histogram structure.; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz, the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsnumber of bins ; [in]xlowlow edge of first bin ; [in]xupupper edge of last bin (not included in last bin) . Definition at line 697 of file TH1.cxx. ◆ TH1() [4/5]. TH1::TH1 ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Float_t * ; xbins . ). protected . Constructor for variable bin size histograms using an input array of type float. ; Creates the main histogram structure.; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type float and size nbins+1 . Definition at line 719 of file TH1.cxx. ◆ TH1() [5/5]. TH1::TH1 ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins . ). protected . Constructor for variable bin size histograms using an input array of type double. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsnumber of bins ; [in]xbinsarray of low-edges for e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:72869,variab,variable,72869,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variable']
Modifiability,"tructor of SimWSTool on given workspace. ;  ;  ~RooSimWSTool ();  Destructor. ;  ; RooSimultaneous * build (const char *simPdfName, BuildConfig &bc, bool verbose=true);  Build a RooSimultaneous PDF with name simPdfName from cloning specializations of protytpe PDF protoPdfName. ;  ; RooSimultaneous * build (const char *simPdfName, const char *protoPdfName, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Build a RooSimultaneous PDF with name simPdfName from cloning specializations of protytpe PDF protoPdfName. ;  . Protected Member Functions;  RooSimWSTool (const RooSimWSTool &);  ; RooSimultaneous * executeBuild (const char *simPdfName, ObjBuildConfig &obc, bool verbose=true);  Internal build driver from validation ObjBuildConfig. ;  ; std::string makeSplitName (const RooArgSet &splitCatSet);  Construct name of composite split. ;  ; std::unique_ptr< ObjBuildConfig > validateConfig (BuildConfig &bc);  Validate build configuration. ;  . Protected Attributes; RooWorkspace * _ws;  . #include <RooSimWSTool.h>; Constructor & Destructor Documentation. ◆ RooSimWSTool() [1/2]. RooSimWSTool::RooSimWSTool ; (; RooWorkspace & ; ws). Constructor of SimWSTool on given workspace. ; All input is taken from the workspace All output is stored in the workspace ; Definition at line 146 of file RooSimWSTool.cxx. ◆ ~RooSimWSTool(). RooSimWSTool::~RooSimWSTool ; (; ). Destructor. ; Definition at line 155 of file RooSimWSTool.cxx. ◆ RooSimWSTool() [2/2]. RooSimWSTool::RooSimWSTool ; (; const RooSimWSTool & ; ). protected . Member Function Documentation. ◆ build() [1/2]. RooSimultaneous * RooSimWSTool::build ; (; const char * ; simPdfName, . BuildConfig & ; bc, . bool ; verbose = true . ). Build a RooSimultaneous PDF with name simPdfName from cloning specializations of protytpe PDF protoPdfName. ; Use the provided BuildConfig or MultiBuildConfig object to configure the build ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool.html:5766,config,configuration,5766,doc/master/classRooSimWSTool.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool.html,1,['config'],['configuration']
Modifiability,"tructor of a node. It will result in an explicit copy of; the node and recursively all it's daughters. ~BinarySearchTreeNode(); node destructor. Bool_t GoesRight(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the right daughter. Bool_t GoesLeft(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the left daughter. Bool_t EqualsMe(const TMVA::Event& ) const; check if the event fed into the node actually equals the event; that forms the node (in case of a search tree). void Print(ostream& os) const; print the node. void PrintRec(ostream& os) const; recursively print the node and its daughters (--> print the 'tree'). Bool_t ReadDataRecord(istream& is, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); Read the data block. void ReadAttributes(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); read attributes from XML. void AddAttributesToNode(void* node) const; adding attributes to tree node. void AddContentToNode(stringstream& s) const; adding attributes to tree node. void ReadContent(stringstream& s); read events from node. Node* CreateNode() const; { return new BinarySearchTreeNode(); }. void SetSelector(Short_t i); set index of variable used for discrimination at this node. { fSelector = i; }. Short_t GetSelector() const; return index of variable used for discrimination at this node. { return fSelector; }. const std::vector<Float_t> & GetEventV() const; { return fEventV; }. Float_t GetWeight() const; { return fWeight; }. UInt_t GetClass() const; Bool_t IsSignal() const { return (fClass == fSignalClass); }. { return fClass; }. const std::vector<Float_t> & GetTargets() const; { return fTargets; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__BinarySearchTreeNode.html:5140,variab,variable,5140,root/html534/TMVA__BinarySearchTreeNode.html,https://root.cern,https://root.cern/root/html534/TMVA__BinarySearchTreeNode.html,4,['variab'],['variable']
Modifiability,"tructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return value of \( a_n * \prod_{i=0}^{n-1} (1 - a_i) \). ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRecursiveFraction.html:47960,inherit,inherited,47960,doc/master/classRooRecursiveFraction.html,https://root.cern,https://root.cern/doc/master/classRooRecursiveFraction.html,1,['inherit'],['inherited']
Modifiability,"tructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void ChangeState (TRecorderState *newstate, Bool_t deletePreviousState=kTRUE);  Changes state from the current to the passed one (newstate) Deletes the old state if delPreviousState = KTRUE. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFilename;  . Private Member Functions;  TRecorder (const TRecorder &);  Current state of recorder. ;  ; TRecorder & operator= (const TRecorder &);  . Private Attributes; TRecorderState * fRecorderState;  . Friends; class TRecorderInactive;  ; class TRecorderPaused;  ; class TRecorderRecording;  ; class TRecorderReplaying;  ; class TRecorderState;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRecorder.h>. Inheritance diagram for TRecorder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERecorderState. enum TRecorder::ERecorderState. EnumeratorkInactive ; kRecording ; kPaused ; kReplaying . Definition at line 292 of file TRecorder.h. ◆ EReplayModes. enum TRecorder::EReplayModes. EnumeratorkRealtime . Definition at line 287 of file TRecorder.h. Constructor & Destructor Documentation. ◆ TRecorder() [1/3]. TRecorder::TRecorder ; (; const TRecorder & ; ). private . Current state of recorder. . ◆ TRecorder() [2/3]. TRecorder::TRecorder ; (; ). Creates initial INACTIVE state for the recorder. ; Definition at line 179 of file TRecorder.cxx. ◆ TRecorder() [3/3]. TRecorder::TRecorder ; (; const char * ; filename, . Option_t * ; option = ""READ"" . ). Creates a recorder with filename to replay or to record, depending on option (NEW ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecorder.html:13490,inherit,inherited,13490,doc/master/classTRecorder.html,https://root.cern,https://root.cern/doc/master/classTRecorder.html,1,['inherit'],['inherited']
Modifiability,"tructor. ;  ;  PDEFoamDiscriminantDensity (std::vector< Double_t > box, UInt_t cls);  User constructor: ;  ; virtual ~PDEFoamDiscriminantDensity ();  ; virtual Double_t Density (std::vector< Double_t > &Xarg, Double_t &event_density);  This function is needed during the foam buildup. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::PDEFoamDensityBase;  PDEFoamDensityBase ();  ;  PDEFoamDensityBase (const PDEFoamDensityBase &);  Copy constructor. ;  ;  PDEFoamDensityBase (std::vector< Double_t > box);  User constructor. ;  ; virtual ~PDEFoamDensityBase ();  destructor ;  ; void FillBinarySearchTree (const Event *ev);  This method inserts the given event 'ev' it into the binary search tree. ;  ; const std::vector< Double_t > & GetBox () const;  ; void SetBox (std::vector< Double_t > box);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDiscriminantDensity.html:1825,inherit,inherited,1825,doc/master/classTMVA_1_1PDEFoamDiscriminantDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDiscriminantDensity.html,1,['inherit'],['inherited']
Modifiability,"tructor.Definition Factory.cxx:113; TMVA::Factory::TestAllMethodsvoid TestAllMethods()Evaluates all booked methods on the testing data and adds the output to the Results in the corresponi...Definition Factory.cxx:1271; TMVA::Factory::fVerboseBool_t fVerbose! verbose modeDefinition Factory.h:213; TMVA::Factory::EvaluateAllMethodsvoid EvaluateAllMethods(void)Iterates over all MVAs that have been booked, and calls their evaluation methods.Definition Factory.cxx:1376; TMVA::Factory::EvaluateImportanceRandomTH1F * EvaluateImportanceRandom(DataLoader *loader, UInt_t nseeds, Types::EMVA theMethod, TString methodTitle, const char *theOption="""")Definition Factory.cxx:2473; TMVA::Factory::GetImportanceTH1F * GetImportance(const int nbits, std::vector< Double_t > importances, std::vector< TString > varNames)Definition Factory.cxx:2591; TMVA::Factory::fROCBool_t fROC! enable to calculate ROC valuesDefinition Factory.h:216; TMVA::Factory::EvaluateAllVariablesvoid EvaluateAllVariables(DataLoader *loader, TString options="""")Iterates over all MVA input variables and evaluates them.Definition Factory.cxx:1360; TMVA::Factory::fVerboseLevelTString fVerboseLevel! verbosity level, controls granularity of loggingDefinition Factory.h:214; TMVA::Factory::GetROCCurveAsMultiGraphTMultiGraph * GetROCCurveAsMultiGraph(DataLoader *loader, UInt_t iClass, Types::ETreeType type=Types::kTesting)Generate a collection of graphs, for all methods for a given class.Definition Factory.cxx:988; TMVA::Factory::EvaluateImportanceTH1F * EvaluateImportance(DataLoader *loader, VIType vitype, Types::EMVA theMethod, TString methodTitle, const char *theOption="""")Evaluate Variable Importance.Definition Factory.cxx:2217; TMVA::Factory::GetROCIntegralDouble_t GetROCIntegral(DataLoader *loader, TString theMethodName, UInt_t iClass=0, Types::ETreeType type=Types::kTesting)Calculate the integral of the ROC curve, also known as the area under curve (AUC),...Definition Factory.cxx:849; TMVA::Factory::~Factoryvirtual ~Fac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:122106,variab,variables,122106,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variables']
Modifiability,"tructors, as in TThreadExecutor::TThreadExecutor.; See the discussion at ROOT-11014 for more context.; Dynamic Path: ROOT_LIBRARY_PATH; A new way to set ROOT’s “Dynamic Path” was added: the environment variable ROOT_LIBRARY_PATH. On Unix it should contain a colon separated list of paths, on Windows a semicolon separated list. It is intended to be cross platform and to be specific to ROOT (and thus not interfere with the system’s shared linker). The final “Dynamic Path” is now composed of these sources in order:. ROOT_LIBRARY_PATH environment variable; System specific shared linker environment variables like LD_LIBRARY_PATH, LIBPATH, or PATH.; Setting from rootrc; ROOT’s builtin library directory. Interpreter. cling’s LLVM is upgraded to version 9.0; New interface to enable/disable optional cling features. Currently, it can be used to enable/disable support for redefinitions. See this issue for more information. Multithreading. Fix an uninitialized variable in global read-write lock which could have caused deadlocks or crashes in some rare cases.; Default global read-write lock transitioned to new implementation based on TBB thread local storage when TBB is available on supported platforms (all except Windows). This gives an O(10%) performance improvement for some typical RDataFrame scenarios with 256 threads due to reduced lock contention. I/O Libraries. Exclusive use of the global lock is reduced or migrated to finer grained read and write locks in a few hotspots that occur during file opening/closing or task initialization in RDataFrame. This can lead to O(100x) improvements for some typical RDataFrame scenarios with 256 threads due to massively reduced lock contention. TTree Libraries. TTree now supports the inclusion of leaves of types long and unsigned long (and therefore also std::size_t on most systems) also for branches in “leaflist mode”. The corresponding leaflist letters are ‘G’ and ‘g’.; when looping over a TTree with a friend with a larger number of entr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:5054,variab,variable,5054,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['variab'],['variable']
Modifiability,"tructures - for instance, read objects from files; TListfRestrictions! list of restrictions for different locations; Bool_tfScanGlobalDir! when enabled (default), scan gROOT for histograms, canvases, open files; TList*fSinfo! last produced streamer info; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRootSniffer(const char* name, const char* objpath = ""Objects""); constructor. ~TRootSniffer(); destructor. void SetCurrentCallArg(THttpCallArg* arg); set current http arguments, which then used in different process methods; For instance, if user authorized with some user name,; depending from restrictions some objects will be invisible; or user get full access to the element. void SetAutoLoad(const char* scripts = """"); When specified, _autoload attribute will be always add; to top element of h.json/h.hml requests; Used to instruct browser automatically load special code. const char* GetAutoLoad() const; return name of configured autoload scripts (or 0). void Restrict(const char* path, const char* options); Restrict access to the specified location. Hides or provides read-only access to different parts of the hierarchy; Restriction done base on user-name specified with http requests; Options can be specified in URL style (separated with &); Following parameters can be specified:; visible = [all|user(s)] - make item visible for all users or only specified user; hidden = [all|user(s)] - make item hidden from all users or only specified user; readonly = [all|user(s)] - make item read-only for all users or only specified user; allow = [all|user(s)] - make full access for all users or only specified user; allow_method = method(s) - allow method(s) execution even when readonly flag specified for the object; Like make command seen by all but can be executed only by admin; sniff->Restrict(""/CmdReset"",""allow=admin"");; Or fully hide command from guest account; sniff->Restrict(""/CmdRebin"",""hidden=guest"")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSniffer.html:10292,config,configured,10292,root/html534/TRootSniffer.html,https://root.cern,https://root.cern/root/html534/TRootSniffer.html,2,['config'],['configured']
Modifiability,"true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 961 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 525 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 533 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but in a graphical form. In addition pointers to other objects can be followed.; The following picture is the Inspect of a histogram object: . Reimplemented in TSystemFile, TInspectorObject, TGFrame, and ROOT::Experimental::XRooFit::xRooNode.; Definition at line 546 of file TObject.cxx. ◆ InvertBit(). void TObject::InvertBit ; (; UInt_t ; f). inline . Definition at line 201 of file TObject.h. ◆ IsA(). virtual TClass * TObject::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in PyROOT::RegulatorCleanu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTObject.html:44902,inherit,inherits,44902,doc/v632/classTObject.html,https://root.cern,https://root.cern/doc/v632/classTObject.html,1,['inherit'],['inherits']
Modifiability,"true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 538 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but in a graphical form. In addition pointers to other objects can be followed.; The following picture is the Inspect of a histogram object: . Reimplemented in TSystemFile, TInspectorObject, TGFrame, and ROOT::Experimental::XRooFit::xRooNode.; Definition at line 551 of file TObject.cxx. ◆ InvertBit(). void TObject::InvertBit ; (; UInt_t ; f). inline . Definition at line 201 of file TObject.h. ◆ IsA(). virtual TClass * TObject::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in PyROOT::RegulatorCleanu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:44627,inherit,inherits,44627,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['inherit'],['inherits']
Modifiability,"trum2Transform. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » SPECTRUM; » TSpectrum2Transform. class TSpectrum2Transform: public TObject. THIS CLASS CONTAINS 2-DIMENSIONAL ORTHOGONAL TRANSFORM FUNCTIONS. These functions were written by:; Miroslav Morhac; Institute of Physics; Slovak Academy of Sciences; Dubravska cesta 9, 842 28 BRATISLAVA; SLOVAKIA. email:fyzimiro@savba.sk, fax:+421 7 54772479. The original code in C has been repackaged as a C++ class by R.Brun. The algorithms in this class have been published in the following; references:. [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; [2] Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; [3] Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307. Function Members (Methods); public:. virtual~TSpectrum2Transform(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Transform.html:942,adapt,adaptive,942,root/html602/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Transform.html,4,['adapt'],['adaptive']
Modifiability,"trum2Transform.h. ◆ Transform(). void TSpectrum2Transform::Transform ; (; const Double_t ** ; fSource, . Double_t ** ; fDest . ). This function transforms the source spectrum. ; The calling program should fill in input parameters. Transformed data are written into dest spectrum.; Function parameters:; fSource-pointer to the matrix of source spectrum, its size should be fSizex*fSizey except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR transform. These need fSizex*2*fSizey length to supply real and imaginary coefficients.; fDest-pointer to the matrix of destination data, its size should be fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These need fSizex*2*fSizey length to store real and imaginary coefficients; fSizex,fSizey-basic dimensions of source and dest spectra. Transform methods; Goal: to analyse experimental data using orthogonal transforms. orthogonal transforms can be successfully used for the processing of nuclear spectra (not only); they can be used to remove high frequency noise, to increase signal-to-background ratio as well as to enhance low intensity components [1], to carry out e.g. Fourier analysis etc.; we have implemented the function for the calculation of the commonly used orthogonal transforms as well as functions for the filtration and enhancement of experimental data. References:; [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [2] Morhac M., Matouoek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; [3] Morhac M., Matouoek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac M., Matouoek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. Example 1 - script Transform2.c:. Fig. 1 Original two-dime",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:31063,enhance,enhance,31063,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['enhance'],['enhance']
Modifiability,"try field. ;  ; TGButton * fButtonUp;  Button for increasing value. ;  ; TGNumberEntryField * fNumericEntry;  Number text entry field. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntry.html:31324,inherit,inherited,31324,doc/master/classTGNumberEntry.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntry.html,1,['inherit'],['inherited']
Modifiability,"try is large (Megabytes); A small value for bufsize is optimum if you intend to access; the entries in the Tree randomly and your Tree is in split mode. See an example of a Branch definition in the TTree constructor. Note that in case the data type is an object, this branch can contain; only this object. Note that this function is invoked by TTree::Branch. *. TBranch(TBranch *parent, const char* name, void* address, const char* leaflist, Int_t basketsize, Int_t compress); Create a Branch*-*-; *-* =====================. * address is the address of the first item of a structure; or the address of a pointer to an object (see example).; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X ; variable X, type Float_t; Y/I : variable Y, type Int_t; Y/I2 ; variable Y, type Int_t converted to a 16 bits integ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranch.html:14401,variab,variable,14401,root/html526/TBranch.html,https://root.cern,https://root.cern/root/html526/TBranch.html,1,['variab'],['variable']
Modifiability,"try loop number when object was drawn; Int_tfForceReadForce Read flag; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*fManagerPointer to the formula manager; Int_tfMultiplicityIndicator of the variability of the size of entries; Int_t*fNbins![fDimension] Number of bins per dimension; Int_tfNfill! Total number of histogram fills; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); Long64_tfOldEstimatevalue of Tree fEstimate when selector is called; TH1*fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*fSelectPointer to selection formula; Bool_tfSelectMultipletrue if selection has a variable index; Long64_tfSelectedRowsNumber of selected entries; Long64_tTSelector::fStatusselector status; TTree*fTreePointer to current Tree; TObject*fTreeElistpointer to Tree Event list; Double_t**fVal![fSelectedRows][fDimension] Local buffer for the variables; Int_tfValSize; TTreeFormula**fVar![fDimension] Array of pointers to variables formula; Bool_t*fVarMultiple![fDimension] true if fVar[i] has a variable index; Double_t*fVmax![fDimension] Maxima of varexp columns; Double_t*fVmin![fDimension] Minima of varexp columns; Double_t*fW![fSelectedRows]Local buffer for weights; Double_tfWeightTree weight (see TTree::SetWeight). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSelectorDraw(); Default selector constructor. ~TSelectorDraw(); Selector destructor. void Begin(TTree* tree); Called everytime a loop on the tree(s) starts. void ClearFormula(); Delete internal buffers. Bool_t CompileVariables(const char* varexp = """", const char* selection = """"); Compile input variables and selection expression. varexp is an expression of the general form e1:e2:e3; where e1,etc is a formul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSelectorDraw.html:8325,variab,variable,8325,root/html528/TSelectorDraw.html,https://root.cern,https://root.cern/root/html528/TSelectorDraw.html,8,['variab'],"['variable', 'variables']"
Modifiability,"try. ;  ; const TGString * GetPath () const;  ; const TGPicture * GetPicture () const;  ; const TGString * GetText () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (TGLBEntry *e) override;  Update text and picture of a listbox entry. ;  ;  Public Member Functions inherited from TGLBEntry;  TGLBEntry (const TGWindow *p=nullptr, Int_t id=-1, UInt_t options=kHorizontalFrame, Pixel_t back=GetWhitePixel());  Base class entry constructor. ;  ; Int_t EntryId () const;  ; Bool_t IsActive () const override;  ; void SetBackgroundColor (Pixel_t col) override;  Set background color (override from TGWindow base class). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle ();  Toggle active state of listbox entry. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTreeLBEntry.html:1982,inherit,inherited,1982,doc/master/classTGTreeLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGTreeLBEntry.html,1,['inherit'],['inherited']
Modifiability,"tryXY (Long64_t n, Double_t &x, Double_t &y);  Get the position of the variable on the graph for the n'th entry. ;  ; Int_t GetHistBinning () const;  ; Double_t GetHistHeight ();  ; Int_t GetHistLineWidth ();  ; TH1F * GetHistogram ();  Create or recreate the histogram. ;  ; Int_t GetId ();  ; bool GetLogScale () const;  ; void GetMinMaxMean ();  Get mean, min and max of those variable. ;  ; Int_t GetNbins ();  ; Long64_t GetNentries () const;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  Returns info about this axis. ;  ; TParallelCoord * GetParallel ();  ; void GetQuantiles ();  Get the box plot values (quantiles). ;  ; TList * GetRanges ();  ; Double_t GetValuefromXY (Double_t x, Double_t y);  Get the value corresponding to the position. ;  ; Double_t * GetValues ();  ; bool GetVert ();  ; Double_t GetX ();  ; void GetXYfromValue (Double_t value, Double_t &x, Double_t &y);  Get a position corresponding to the value on the axis. ;  ; Double_t GetY ();  ; void Init ();  Initialise the TParallelVar variables. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint the axis. ;  ; void PaintBoxPlot ();  Paint the boxes in the case of a candle chart. ;  ; void PaintHistogram ();  Paint the histogram on the axis. ;  ; void PaintLabels ();  Paint the axis labels and titles. ;  ; void Print (Option_t *option="""") const override;  Print the axis main data. ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoordVar as a macro. ;  ; void SetBarHisto (bool h);  ; void SetBoxPlot (bool box);  Set the axis to display a candle. ;  ; void SetCurrentLimits (Double_t min, Double_t max);  Set the limits within which one the entries must be painted. ;  ; void SetCurrentMax (Double_t max);  Set the current maximum of the axis. ;  ; void SetCurrentMin (Double_t min);  Set the current minimum of the axis. ;  ; void SetHistogramBinning (Int_t n=100);  Set the histogram binning. ;  ; void SetHistogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:3917,variab,variables,3917,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,1,['variab'],['variables']
Modifiability,"trying to replace %s with %s "",; 1071 formula.Data(), pattern.Data(), replacement.Data());; 1072 break;; 1073 }; 1074 if (formula == pattern) {; 1075 // case of single polynomial; 1076 SetBit(kLinear, true);; 1077 fNumber = 300 + degree;; 1078 }; 1079 formula.ReplaceAll(pattern, replacement);; 1080 polPos = formula.Index(""pol"");; 1081 }; 1082}; 1083 ; 1084////////////////////////////////////////////////////////////////////////////////; 1085/// Handling parametrized functions; 1086/// Function can be normalized, and have different variable then x.; 1087/// Variables should be placed in brackets after function name.; 1088/// No brackets are treated like [x].; 1089/// Normalized function has char 'n' after name, eg.; 1090/// gausn[var](0) will be replaced with [0]*exp(-0.5*((var-[1])/[2])^2)/(sqrt(2*pi)*[2]); 1091///; 1092/// Adding function is easy, just follow these rules, and add to; 1093/// `TFormula::FillParametrizedFunctions` defined further below:; 1094///; 1095/// - Key for function map is pair of name and dimension of function; 1096/// - value of key is a pair function body and normalized function body; 1097/// - {Vn} is a place where variable appear, n represents n-th variable from variable list.; 1098/// Count starts from 0.; 1099/// - [num] stands for parameter number.; 1100/// If user pass to function argument 5, num will stand for (5 + num) parameter.; 1101///; 1102 ; 1103void TFormula::HandleParametrizedFunctions(TString &formula); 1104{; 1105 // define all parametrized functions; 1106 map< pair<TString,Int_t> ,pair<TString,TString> > functions;; 1107 FillParametrizedFunctions(functions);; 1108 ; 1109 map<TString,Int_t> functionsNumbers;; 1110 functionsNumbers[""gaus""] = 100;; 1111 functionsNumbers[""bigaus""] = 102;; 1112 functionsNumbers[""landau""] = 400;; 1113 functionsNumbers[""expo""] = 200;; 1114 functionsNumbers[""crystalball""] = 500;; 1115 ; 1116 // replace old names xygaus -> gaus[x,y]; 1117 formula.ReplaceAll(""xyzgaus"",""gaus[x,y,z]"");; 1118 formula.Rep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:40542,variab,variable,40542,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,3,['variab'],['variable']
Modifiability,"ts * fCloseHint;  Layout hints. ;  ; TGLayoutHints * fDefaultHint;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiTitleBar;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiButtons.html:25539,inherit,inherited,25539,doc/master/classTGMdiButtons.html,https://root.cern,https://root.cern/doc/master/classTGMdiButtons.html,1,['inherit'],['inherited']
Modifiability,"ts -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionOneDim*funcFunctor; RooRealProxyvarArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFunctor1DBinding(const char* name, const char* title, const ROOT::Math::IBaseFunctionOneDim& ftor, RooAbsReal& var). RooFunctor1DBinding(const RooFunctor1DBinding& other, const char* name = 0); Copy constructor. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. RooFunctor1DBinding(); Default constructor. TObject* clone(const char* newname) const; { return new RooFunctor1DBinding(*this,newname); }. virtual ~RooFunctor1DBinding(); {}. » Last changed: Mon Dec 7 13:47:43 2009 » Last generated: 2009-12-07 13:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFunctor1DBinding.html:33230,variab,variable,33230,root/html526/RooFunctor1DBinding.html,https://root.cern,https://root.cern/root/html526/RooFunctor1DBinding.html,1,['variab'],['variable']
Modifiability,"ts :; TMatrixTRow_const TMatrixTRow; TMatrixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixFSparseDiag_const, TMatrixTSparseDiag_const<Float_t>. Function Members (Methods); public:. TMatrixTSparseDiag_const<float>(); TMatrixTSparseDiag_const<float>(const TMatrixTSparse<float>& matrix); TMatrixTSparseDiag_const<float>(const TMatrixTSparseDiag_const<float>& trc); virtual~TMatrixTSparseDiag_const<float>(); static TClass*Class(); const float*GetDataPtr() const; const TMatrixTBase<float>*GetMatrix() const; Int_tGetNdiags() const; virtual TClass*IsA() const; floatoperator()(Int_t i) const; TMatrixTSparseDiag_const<float>&operator=(const TMatrixTSparseDiag_const<float>& trc); floatoperator[](Int_t i) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. const float*fDataPtrdata pointer; TMatrixTSparse<float>*fMatrixthe matrix I am the diagonal of; Int_tfNdiagnumber of diag elems, min(nrows,ncols). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTSparseDiag_const<float>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Int_t GetNdiags() const; { return fNdiag; }. const Element * GetDataPtr() const; { return fDataPtr; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTSparseDiag_const_float_.html:1789,Inherit,Inheritance,1789,root/html534/TMatrixTSparseDiag_const_float_.html,https://root.cern,https://root.cern/root/html534/TMatrixTSparseDiag_const_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); virtual RooDataHist*generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooDataSet*generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:17306,extend,extended,17306,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"ts = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataSet*generate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); virtual RooDataHist*generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooDataSet*generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:18289,extend,extended,18289,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,6,['extend'],['extended']
Modifiability,"ts How many events to generate; 56 /// \param arg1,arg2,arg3,arg4,arg5 Optional command arguments.; 57 RooFit::OwningPtr<RooDataSet> generate(const RooArgSet &whatVars, Int_t nEvents, const RooCmdArg& arg1,; 58 const RooCmdArg& arg2={}, const RooCmdArg& arg3={},; 59 const RooCmdArg& arg4={}, const RooCmdArg& arg5={}) {; 60 return generate(whatVars,RooFit::NumEvents(nEvents),arg1,arg2,arg3,arg4,arg5) ;; 61 }; 62 RooFit::OwningPtr<RooDataSet> generate(const RooArgSet &whatVars,; 63 const RooCmdArg& arg1={},const RooCmdArg& arg2={},; 64 const RooCmdArg& arg3={},const RooCmdArg& arg4={},; 65 const RooCmdArg& arg5={},const RooCmdArg& arg6={}) ;; 66 RooFit::OwningPtr<RooDataSet> generate(const RooArgSet &whatVars, double nEvents = 0, bool verbose=false, bool autoBinned=true,; 67 const char* binnedTag="""", bool expectedData=false, bool extended = false) const;; 68 RooFit::OwningPtr<RooDataSet> generate(const RooArgSet &whatVars, const RooDataSet &prototype, Int_t nEvents= 0,; 69 bool verbose=false, bool randProtoOrder=false, bool resampleProto=false) const;; 70 ; 71 ; 72 class GenSpec {; 73 public:; 74 virtual ~GenSpec() ;; 75 GenSpec() = default;; 76 ; 77 private:; 78 GenSpec(RooAbsGenContext* context, const RooArgSet& whatVars, RooDataSet* protoData, Int_t nGen, bool extended,; 79 bool randProto, bool resampleProto, TString dsetName, bool init=false) ;; 80 GenSpec(const GenSpec& other) ;; 81 ; 82 friend class RooAbsPdf ;; 83 std::unique_ptr<RooAbsGenContext> _genContext;; 84 RooArgSet _whatVars ;; 85 RooDataSet* _protoData = nullptr;; 86 Int_t _nGen = 0;; 87 bool _extended = false;; 88 bool _randProto = false;; 89 bool _resampleProto = false;; 90 TString _dsetName ;; 91 bool _init = false;; 92 ; 93 ClassDef(GenSpec,0) // Generation specification; 94 } ;; 95 ; 96 ///Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification.; 97 GenSpec* prepareMultiGen(const RooArgSet &whatVars,; 98 const RooCmdArg& arg1={},const RooCmd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:3049,extend,extended,3049,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,3,"['config', 'extend']","['configuration', 'extended']"
Modifiability,"ts RooAddPdf to freeze the; interpretation of the coefficients to be done in the given set of; observables. If frozen, fractions are automatically transformed; from the reference normalization set to the contextual normalization; set by ratios of integrals. void fixCoefRange(const char* rangeName); By default the interpretation of the fraction coefficients is; performed in the default range. This make the shape of a RooAddPdf; explicitly dependent on the range of the observables. To allow; a range independent definition of the fraction this function; instructs RooAddPdf to freeze its interpretation in the given; named range. If the current normalization range is different; from the reference range, the appropriate fraction coefficients; are automically calculation from the reference fractions using; ratios if integrals. void updateCoefficients(RooAddPdf::CacheElem& cache, const RooArgSet* nset) const; Update the coefficient values in the given cache element: calculate new remainder; fraction, normalize fractions obtained from extended ML terms to unity and; multiply these the various range and dimensional corrections needed in the; current use context. Double_t evaluate() const; Calculate and return the current value. void resetErrorCounters(Int_t resetValue = 10); Reset error counter to given value, limiting the number; of future error messages for this pdf to 'resetValue'. Bool_t checkObservables(const RooArgSet* nset) const; Check if PDF is valid for given normalization set.; Coeffient and PDF must be non-overlapping, but pdf-coefficient; pairs may overlap each other. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Determine which part (if any) of given integral can be performed analytically.; If any analytical integration is possible, return integration scenario code. RooAddPdf queries each component PDF for its analytical integration capability of the requested; set ('allVars'). It",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAddPdf.html:44379,extend,extended,44379,root/html526/RooAddPdf.html,https://root.cern,https://root.cern/root/html526/RooAddPdf.html,10,['extend'],['extended']
Modifiability,"ts are set to the minimum along the line defined by the conjugate gradient. Parameters are Tau and Reset, which defines the epochs where the direction is reset to the steepest descent (estimated by using the Fletcher-Reeves formula).; 5.12.3.6 The Broyden, Fletcher, Goldfarb, Shanno (BFGS) Method; It implies the computation of a NxN matrix, but seems more powerful at least for less than 300 weights. Parameters are Tau and Reset, which defines the epochs where the direction is reset to the steepest descent.; 5.12.4 Using the Network; Neural network are build from a set of “samples”. A sample is a set of values defining the inputs and the corresponding output that the network should ideally provide. In ROOT this is a TTree entry. The first thing to be decided is the network layout. This layout is described in a string where the layers are separated by semicolons. The input/output layers are defined by giving the expression for each neuron, separated by comas. Hidden layers are just described by the number of neurons.; In addition, input and output layer formulas can be preceded by ‘@’ (e.g. “@out”) if one wants to normalize the corresponding value. Also, if the string ends with ‘!’, output neurons are set up for classification, i.e. with a sigmoid (1 neuron) or softmax (more neurons) activation function.; Many questions on the good usage of neural network, including rules of dumb to determine the best network topology are addressed at ftp://ftp.sas.com/pub/neural/FAQ.html; // a simple network: 2 inputs, 10 hidden and 1 normalized; // output neuron; TMultiLayerPerceptron network(""r,z:10:@Br"",tree);; Expressions are evaluated as for TTree::Draw(). Input and outputs are taken from the TTree associated with the network. This TTree can be given as argument of the constructor or defined later with TMultiLayerPerceptron::SetData(). Events can also be weighted. The weight expression can be given in the constructor or set later with the method SetWeight() of the class TMultiLay",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:234948,layers,layers,234948,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['layers'],['layers']
Modifiability,"ts as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Private Attributes; TRootIconBox * fIconBox;  ; const TGPicture * fPic;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootIconList.html:13979,inherit,inherited,13979,doc/master/classTRootIconList.html,https://root.cern,https://root.cern/doc/master/classTRootIconList.html,3,['inherit'],['inherited']
Modifiability,"ts communication mechanism to be applied between compiled and interpreted classes in an interactive ROOT session without having the class derive from TQObject. Every signal method declaration is followed by a comment ""*SIGNAL*"". Only instances of a class that defines a signal or instances of its subclasses can emit the signal. The ROOT implementation of a popular example presenting signals and slots is the next. Let’s have a minimal class declaration:; class MyClass {; private:; Int_t fValue;; public:; MyClass() { fValue=0; }; Int_t GetValue() const { return fValue; }; void SetValue(Int_t);; };; It will become the following as interpreted:; class MyClass {; RQ_OBJECT(""MyClass""); private:; Int_t fValue;; public:; MyClass() { fValue=0; }; Int_t GetValue() const { return fValue; }; void SetValue(Int_t); // *SIGNAL*; };; Both class declarations have the same data member and public methods to access the value. By placing the RQ_OBJECT(""MyClass"") macro inside the MyClass body (MyClass is not inherited from TQObject) we allow this class to use the signal/slot communication. Any instance of this class can tell the outside world that the state of its data member has changed by emitting a signal SetValue(Int_t). A possible implementation of MyClass::SetValue() can be:; void MyClass::SetValue(Int_t v) {; if (v != fValue) {; fValue = v;; Emit(""SetValue(Int_t)"",v);; }; }; The line Emit(""SetValue(Int_t)"",v) activates the signal SetValue(Int_t) with argument v. You can use any of the methods TQObject::Emit(""full_method_name"",arguments) to emit a signal. We create two instances of MyClass and connect them together:; MyClass *objA = new MyClass();; MyClass *objB = new MyClass();; objA->Connect(""SetValue(Int_t)"",""MyClass"",objB,""SetValue(Int_t)"");; objB->SetValue(11);; objA->SetValue(79);; objB->GetValue(); // the value is 79; By calling the method objA->Connect(), objA connects its signal “SetValue(Int_t)” to the “MyClass::SetValue(Int_t)” method (slot) of objB. Next, when you call ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1166494,inherit,inherited,1166494,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherited']
Modifiability,"ts content; 618/// incremented by w; 619 ; 620Int_t TH3::Fill(Double_t x, const char *namey, const char *namez, Double_t w); 621{; 622 Int_t binx, biny, binz, bin;; 623 fEntries++;; 624 binx = fXaxis.FindBin(x);; 625 biny = fYaxis.FindBin(namey);; 626 binz = fZaxis.FindBin(namez);; 627 if (binx <0 || biny <0 || binz<0) return -1;; 628 bin = binx + (fXaxis.GetNbins()+2)*(biny + (fYaxis.GetNbins()+2)*binz);; 629 if (!fSumw2.fN && w != 1.0 && !TestBit(TH1::kIsNotW)) Sumw2(); // must be called before AddBinContent; 630 if (fSumw2.fN) fSumw2.fArray[bin] += w*w;; 631 AddBinContent(bin,w);; 632 if (binx == 0 || binx > fXaxis.GetNbins()) {; 633 if (!GetStatOverflowsBehaviour()) return -1;; 634 }; 635 if (biny == 0 || biny > fYaxis.GetNbins()) return -1;; 636 if (binz == 0 || binz > fZaxis.GetNbins()) return -1;; 637 ; 638 Double_t v = w;; 639 fTsumw += v;; 640 fTsumw2 += v * v;; 641 fTsumwx += v * x;; 642 fTsumwx2 += v * x * x;; 643 // skip computation of the statistics along axis that have labels (can be extended and are aphanumeric); 644 UInt_t labelBitMask = GetAxisLabelStatus();; 645 if (labelBitMask != (TH1::kYaxis | TH1::kZaxis)) {; 646 Double_t y = (labelBitMask & TH1::kYaxis) ? 0 : fYaxis.GetBinCenter(biny);; 647 Double_t z = (labelBitMask & TH1::kZaxis) ? 0 : fZaxis.GetBinCenter(binz);; 648 fTsumwy += v * y;; 649 fTsumwy2 += v * y * y;; 650 fTsumwxy += v * x * y;; 651 fTsumwz += v * z;; 652 fTsumwz2 += v * z * z;; 653 fTsumwxz += v * x * z;; 654 fTsumwyz += v * y * z;; 655 }; 656 return bin;; 657}; 658 ; 659////////////////////////////////////////////////////////////////////////////////; 660/// Increment cell defined by namex , y ,z by a weight w; 661///; 662/// If the weight is not equal to 1, the storage of the sum of squares of; 663/// weights is automatically triggered and the sum of the squares of weights is incremented; 664/// by w^2 in the corresponding cell.; 665/// The function returns the corresponding global bin number which has its content; 666/// incre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:24900,extend,extended,24900,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['extend'],['extended']
Modifiability,"ts have already been set to 0, just return; 7505 */; 7506 return;; 7507 }; 7508 ; 7509 /* Step 6: Determine the local file path from the root path and the; 7510 * request uri. */; 7511 /* Using filename_buf_len - 1 because memmove() for PATH_INFO may shift; 7512 * part of the path one byte on the right. */; 7513 truncated = 0;; 7514 mg_snprintf(; 7515 conn, &truncated, filename, filename_buf_len - 1, ""%s%s"", root, uri);; 7516 ; 7517 if (truncated) {; 7518 goto interpret_cleanup;; 7519 }; 7520 ; 7521 /* Step 7: URI rewriting */; 7522 rewrite = conn->dom_ctx->config[URL_REWRITE_PATTERN];; 7523 while ((rewrite = next_option(rewrite, &a, &b)) != NULL) {; 7524 if ((match_len = match_prefix(a.ptr, a.len, uri)) > 0) {; 7525 mg_snprintf(conn,; 7526 &truncated,; 7527 filename,; 7528 filename_buf_len - 1,; 7529 ""%.*s%s"",; 7530 (int)b.len,; 7531 b.ptr,; 7532 uri + match_len);; 7533 break;; 7534 }; 7535 }; 7536 ; 7537 if (truncated) {; 7538 goto interpret_cleanup;; 7539 }; 7540 ; 7541 /* Step 8: Check if the file exists at the server */; 7542 /* Local file path and name, corresponding to requested URI; 7543 * is now stored in ""filename"" variable. */; 7544 if (mg_stat(conn, filename, filestat)) {; 7545 int uri_len = (int)strlen(uri);; 7546 int is_uri_end_slash = (uri_len > 0) && (uri[uri_len - 1] == '/');; 7547 ; 7548 /* 8.1: File exists. */; 7549 *is_found = 1;; 7550 ; 7551 /* 8.2: Check if it is a script type. */; 7552 if (extention_matches_script(conn, filename)) {; 7553 /* The request addresses a CGI resource, Lua script or; 7554 * server-side javascript.; 7555 * The URI corresponds to the script itself (like; 7556 * /path/script.cgi), and there is no additional resource; 7557 * path (like /path/script.cgi/something).; 7558 * Requests that modify (replace or delete) a resource, like; 7559 * PUT and DELETE requests, should replace/delete the script; 7560 * file.; 7561 * Requests that read or write from/to a resource, like GET and; 7562 * POST requests, should call the script a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:217059,variab,variable,217059,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['variab'],['variable']
Modifiability,"ts have already been set to 0, just return; 7506 */; 7507 return;; 7508 }; 7509 ; 7510 /* Step 6: Determine the local file path from the root path and the; 7511 * request uri. */; 7512 /* Using filename_buf_len - 1 because memmove() for PATH_INFO may shift; 7513 * part of the path one byte on the right. */; 7514 truncated = 0;; 7515 mg_snprintf(; 7516 conn, &truncated, filename, filename_buf_len - 1, ""%s%s"", root, uri);; 7517 ; 7518 if (truncated) {; 7519 goto interpret_cleanup;; 7520 }; 7521 ; 7522 /* Step 7: URI rewriting */; 7523 rewrite = conn->dom_ctx->config[URL_REWRITE_PATTERN];; 7524 while ((rewrite = next_option(rewrite, &a, &b)) != NULL) {; 7525 if ((match_len = match_prefix(a.ptr, a.len, uri)) > 0) {; 7526 mg_snprintf(conn,; 7527 &truncated,; 7528 filename,; 7529 filename_buf_len - 1,; 7530 ""%.*s%s"",; 7531 (int)b.len,; 7532 b.ptr,; 7533 uri + match_len);; 7534 break;; 7535 }; 7536 }; 7537 ; 7538 if (truncated) {; 7539 goto interpret_cleanup;; 7540 }; 7541 ; 7542 /* Step 8: Check if the file exists at the server */; 7543 /* Local file path and name, corresponding to requested URI; 7544 * is now stored in ""filename"" variable. */; 7545 if (mg_stat(conn, filename, filestat)) {; 7546 int uri_len = (int)strlen(uri);; 7547 int is_uri_end_slash = (uri_len > 0) && (uri[uri_len - 1] == '/');; 7548 ; 7549 /* 8.1: File exists. */; 7550 *is_found = 1;; 7551 ; 7552 /* 8.2: Check if it is a script type. */; 7553 if (extention_matches_script(conn, filename)) {; 7554 /* The request addresses a CGI resource, Lua script or; 7555 * server-side javascript.; 7556 * The URI corresponds to the script itself (like; 7557 * /path/script.cgi), and there is no additional resource; 7558 * path (like /path/script.cgi/something).; 7559 * Requests that modify (replace or delete) a resource, like; 7560 * PUT and DELETE requests, should replace/delete the script; 7561 * file.; 7562 * Requests that read or write from/to a resource, like GET and; 7563 * POST requests, should call the script a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:217091,variab,variable,217091,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['variab'],['variable']
Modifiability,"ts in the plot. However, when plotting only a sub-range, when e.g. a signal region has to be blinded, one has to exclude the blinded region from the computation of the normalisation.; In this tutorial, we show how to explicitly choose the normalisation when plotting using NormRange(). ; import ROOT; ; # Make a fit model; x = ROOT.RooRealVar(""x"", ""The observable"", 1, 30); tau = ROOT.RooRealVar(""tau"", ""The exponent"", -0.1337, -10.0, -0.1); expo = ROOT.RooExponential(""expo"", ""A falling exponential function"", x, tau); ; # Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30); x.setRange(""left"", 1, 10); x.setRange(""right"", 20, 30); ; # Generate toy data, and cut out the blinded region.; data = expo.generate(x, 1000); blindedData = data.reduce(CutRange=""left,right""); ; # Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.0); expo.fitTo(blindedData, Range=""left,right"", PrintLevel=-1); ; # Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.; expo.removeStringAttribute(""fitrange""); ; ; # Here we will plot the results; canvas = ROOT.TCanvas(""canvas"", ""canvas"", 800, 600); canvas.Divide(2, 1); ; ; # Wrong:; # ----------------------------------------------------------------------------------------------------------; # Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; # that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; # comes out too low, and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:1587,adapt,adapt,1587,doc/master/rf212__plottingInRanges__blinding_8py.html,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html,1,['adapt'],['adapt']
Modifiability,"ts into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // Import model into pdf; w.import(model);; ; // E n c o d e d e f i n i t i o n o f p a r a m e t e r s i n w o r k s p a c e; // ---------------------------------------------------------------------------------------; ; // Define named sets ""parameters"" and ""observables"", which list which variables should be considered; // parameters and observables by the users convention; //; // Variables appearing in sets _must_ live in the workspace already, or the autoImport flag; // of defineSet must be set to import them on the fly. Named sets contain only references; // to the original variables, therefore the value of observables in named sets already; // reflect their 'current' value; std::unique_ptr<RooArgSet> params{model.getParameters(x)};; w.defineSet(""parameters"", *params);; w.defineSet(""observables"", x);; ; // E n c o d e r e f e r e n c e v a l u e f o r p a r a m e t e r s i n w o r k s p a c e; // ---------------------------------------------------------------------------------------------------; ; // Define a parameter 'snapshot' in the pdf; // Unlike a named set, a parameter snapshot stores an independent set of values for; // a given set of variables in the workspace. The values can be stored and reloaded; // into the workspace variable objects using the loadSnapshot() and saveSnapshot(); // methods. A snapshot saves the value of each variable, any errors that are stored; // with it as well as the 'Constant' flag that is used in fits to determine if a; // parameter is kept fixed or not.; ; // Do a dummy fit to a (supposedly) reference dataset here and store the results; // of that fit into a snap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf510__wsnamedsets_8C.html:3695,variab,variables,3695,doc/master/rf510__wsnamedsets_8C.html,https://root.cern,https://root.cern/doc/master/rf510__wsnamedsets_8C.html,1,['variab'],['variables']
Modifiability,"ts is a NaN"") ;; 755 return TMath::QuietNaN() ;; 756 }; 757 ; 758 double extra = doOffset; 759 ? (expected - sumEntries) - sumEntries * (std::log(expected) - std::log(sumEntries)); 760 : expected - sumEntries * std::log(expected);; 761 ; 762 if(sumEntriesW2 != 0.0) {; 763 extra *= sumEntriesW2 / sumEntries;; 764 }; 765 ; 766 return extra;; 767}; 768 ; 769////////////////////////////////////////////////////////////////////////////////; 770/// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); 771/// of this PDF for the given number of observed events.; 772///; 773/// This function is a wrapper around; 774/// RooAbsPdf::extendedTerm(double, RooArgSet const *, double, bool) const,; 775/// where the number of observed events and observables to be used as the; 776/// normalization set for the pdf is extracted from a RooAbsData.; 777///; 778/// For successful operation, the PDF implementation must indicate that; 779/// it is extendable by overloading `canBeExtended()`, and must; 780/// implement the `expectedEvents()` function.; 781///; 782/// \param[in] data The RooAbsData to retrieve the set of observables and; 783/// number of expected events.; 784/// \param[in] weightSquared If set to `true`, the extended term will be scaled by; 785/// the ratio of squared event weights over event weights:; 786/// \f$ \sum w_{i}^2 / \sum w_{i} \f$.; 787/// Intended to be used by fits with the `SumW2Error()` option that; 788/// can be passed to RooAbsPdf::fitTo(); 789/// (see the documentation of said function to learn more about the; 790/// interpretation of fits with squared weights).; 791/// \param[in] doOffset See RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const.; 792 ; 793double RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset) const {; 794 double sumW = data.sumEntries();; 795 double sumW2 = 0.0;; 796 if (weightSquared) {; 797 sumW2 = data.sumEntriesW2();; 798 }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:30998,extend,extendable,30998,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"ts of the formula given as a parameter.; Max$(formula ) : return the maximum (within one TTree entry) of the value of the elements of the formula given as a parameter.; MinIf$(formula,condition); MaxIf$(formula,condition) : return the minimum (maximum) (within one TTree entry) of the value of the elements of the formula given as a parameter if they match the condition. If no element matches the condition, the result is zero. To avoid the resulting peak at zero, use the pattern: tree->Draw(""MinIf$(formula,condition)"",""condition"");; which will avoid calculation MinIf$ for the entries that have no match for the condition.; Alt$(primary,alternate) : return the value of ""primary"" if it is available for the current iteration otherwise return the value of ""alternate"". For example, with arr1[3] and arr2[2] tree->Draw(""arr1+Alt$(arr2,0)"");; will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0 Or with a variable size array arr3 tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1) As a comparison tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; will draw the sum arr3 for the index 0 to 2 only if the actual_size_of_arr3 is greater or equal to 3. Note that the array in 'primary' is flattened/linearized thus using Alt$ with multi-dimensional arrays of different dimensions in unlikely to yield the expected results. To visualize a bit more what elements would be matched by TTree::Draw, TTree::Scan can be used: tree->Scan(""arr1:Alt$(arr2,0)"");; will print on one line the value of arr1 and (arr2,0) that will be matched by tree->Draw(""arr1-Alt$(arr2,0)"");; The ternary operator is not directly supported in TTree::Draw however, to plot the equivalent of var2<20 ? -99 : var1, you can use: tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");. Drawing a user function accessing the TTree data directly; If the formula contains a file name, TTree::MakeProxy will be used to load and execute this file. In particular it will",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:126135,variab,variable,126135,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['variab'],['variable']
Modifiability,"ts represening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& ); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries(). Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBinWidth() const. Double_t* array() const. void Print(Option_t* options = 0) const; Printing interface. Bool_t isParameterized() const; Interface function. If true, min/max of binning is parameterized by external RooAbsReals. RooAbsReal* lowBoundFunc() const; Return pointer to RooAbsReal parameterized lower bound, if any. RooAbsReal* highBoundFunc() const; Return pointer to RooAbsReal parameterized upper bound, if any. Bool_t isShareable() const; If true (default) range definition can be shared across clones of a RooRealVar. void insertHook(RooAbsRealLValue& ) const; Hook interface function to execute code upon insertion into a RooAbsRealLValue. void removeHook(RooAbsRealLValue& ) const; Hook interface functionto execute code upon removal from a RooAbsRealLValue. » Last changed: Tue Mar 10 17:13:50 2015 » Last generated: 2015-03-10 17:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsBinning.html:9364,parameteriz,parameterized,9364,root/html534/RooAbsBinning.html,https://root.cern,https://root.cern/root/html534/RooAbsBinning.html,6,['parameteriz'],['parameterized']
Modifiability,"ts represening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& b); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries(). Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBinWidth() const. Double_t* array() const. void Print(Option_t* options = 0) const; Printing interface. Bool_t isParameterized() const; Interface function. If true, min/max of binning is parameterized by external RooAbsReals. RooAbsReal* lowBoundFunc() const; Return pointer to RooAbsReal parameterized lower bound, if any. RooAbsReal* highBoundFunc() const; Return pointer to RooAbsReal parameterized upper bound, if any. Bool_t isShareable() const; If true (default) range definition can be shared across clones of a RooRealVar. void insertHook(RooAbsRealLValue& ) const; Hook interface function to execute code upon insertion into a RooAbsRealLValue. void removeHook(RooAbsRealLValue& ) const; Hook interface functionto execute code upon removal from a RooAbsRealLValue. » Last changed: Mon Jul 4 15:21:17 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsBinning.html:9346,parameteriz,parameterized,9346,root/html530/RooAbsBinning.html,https://root.cern,https://root.cern/root/html530/RooAbsBinning.html,3,['parameteriz'],['parameterized']
Modifiability,"ts represening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& b); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries(). Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBinWidth() const. Double_t* array() const. void Print(Option_t* options = 0) const; Printing interface. Bool_t isParameterized() const; Interface function. If true, min/max of binning is parameterized by external RooAbsReals. RooAbsReal* lowBoundFunc() const; Return pointer to RooAbsReal parameterized lower bound, if any. RooAbsReal* highBoundFunc() const; Return pointer to RooAbsReal parameterized upper bound, if any. Bool_t isShareable() const; If true (default) range definition can be shared across clones of a RooRealVar. void insertHook(RooAbsRealLValue& ) const; Hook interface function to execute code upon insertion into a RooAbsRealLValue. void removeHook(RooAbsRealLValue& ) const; Hook interface functionto execute code upon removal from a RooAbsRealLValue. » Last changed: Thu Nov 3 20:06:36 2011 » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsBinning.html:9346,parameteriz,parameterized,9346,root/html532/RooAbsBinning.html,https://root.cern,https://root.cern/root/html532/RooAbsBinning.html,3,['parameteriz'],['parameterized']
Modifiability,"ts the parameter error matrix, of course, so Minuit does a transformation of the error matrix (and the ‘’parabolic’’ parameter errors) when there are parameter limits. Users should however realize that the transformation is only a linear approximation, and that it cannot give a meaningful result if one or more parameters is very close to a limit, where \(\frac{\partial Pext}{\partial Pint} \neq 0\). Therefore, it is recommended that:. Limits on variable parameters should be used only when needed in order to prevent the parameter from taking on unphysical values; When a satisfactory minimum has been found using limits, the limits should then be removed if possible, in order to perform or re-perform the error analysis without limits. 5.9.3 How to Get the Right Answer from Minuit; Minuit offers the user a choice of several minimization algorithms. The MIGRAD algorithm is in general the best minimized for nearly all functions. It is a variable-metric method with inexact line search, a stable metric updating scheme, and checks for positive-definiteness. Its main weakness is that it depends heavily on knowledge of the first derivatives, and fails miserably if they are very inaccurate.; If parameter limits are needed, in spite of the side effects, then the user should be aware of the following techniques to alleviate problems caused by limits:; 5.9.3.1 Getting the Right Minimum with Limits; If MIGRAD converges normally to a point where no parameter is near one of its limits, then the existence of limits has probably not prevented Minuit from finding the right minimum. On the other hand, if one or more parameters is near its limit at the minimum, this may be because the true minimum is indeed at a limit, or it may be because the minimized has become ‘’blocked’’ at a limit. This may normally happen only if the parameter is so close to a limit (internal value at an odd multiple of \(\pm \frac{\pi}{2}\) that Minuit prints a warning to this effect when it prints the parameter v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:218330,variab,variable-metric,218330,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable-metric']
Modifiability,"ts value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; intRooLegendre::_m1; intRooLegendre::_m2; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. double_n; RooRealProxy_phi; int_sgn1; int_sgn2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSpHarmonic(). RooSpHarmonic(const char* name, const char* title, RooAbsReal& ctheta, RooAbsReal&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSpHarmonic.html:37639,config,configuration,37639,root/html602/RooSpHarmonic.html,https://root.cern,https://root.cern/root/html602/RooSpHarmonic.html,4,['config'],['configuration']
Modifiability,"ts value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxyRooAbsHiddenReal::_stateProxy to hiding state category; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooUnblindCPAsymVar(); Default constructor. RooUnblindCPAsymVar(const char* name, const char* title, const char* bl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooUnblindCPAsymVar.html:35792,config,configuration,35792,root/html534/RooUnblindCPAsymVar.html,https://root.cern,https://root.cern/root/html534/RooUnblindCPAsymVar.html,2,['config'],['configuration']
Modifiability,"ts with one exception: if the bound function is not a standard TMath or MathMore function the class cannot be persisted in a RooWorkspace without registering the function pointer first using RooCFunction4Binding<T1,T2,T3,T4>::register(). ; Definition at line 225 of file RooCFunction4Binding.h. Public Member Functions;  RooCFunction4Binding ();  ;  RooCFunction4Binding (const char *name, const char *title, VO(*_func)(VI1, VI2, VI3, VI4), RooAbsReal &_x, RooAbsReal &_y, RooAbsReal &_z, RooAbsReal &_w);  ;  RooCFunction4Binding (const RooCFunction4Binding &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction4Binding.html:1761,inherit,inherited,1761,doc/master/classRooCFunction4Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction4Binding.html,1,['inherit'],['inherited']
Modifiability,"ts!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfDrawFramedraw frame; Color_tfFillColorfill color of polygons; Bool_tfHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_tfLineColoroutline color of polygons; Float_tfLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tfMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveShape.html:20752,variab,variable,20752,root/html602/TEveShape.html,https://root.cern,https://root.cern/root/html602/TEveShape.html,4,['variab'],['variable']
Modifiability,"ts(); map<std::string,double>&GetGammaSyst(); virtual const char*TObject::GetIconName() const; map<std::string,double>&GetLogNormSyst(); doubleGetLumi(); doubleGetLumiRelErr(); virtual const char*TNamed::GetName() const; map<std::string,double>&GetNoSyst(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; stringGetOutputFilePrefix(); map<std::string,double>&GetParamValues(); stringGetPOI(unsigned int i = 0); vector<std::string>&GetPOIList(); vector<std::string>GetPreprocessFunctions(); virtual const char*TNamed::GetTitle() const; map<std::string,double>&GetUniformSyst(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); boolHasChannel(string); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::HistFactory::MeasurementMeasurement(); RooStats::HistFactory::MeasurementMeasurement(const RooStats::HistFactory::Measurement&); RooStats::HistFactory::MeasurementMeasurement(const char* Name, const char* Title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__Measurement.html:4040,Inherit,InheritsFrom,4040,root/html534/RooStats__HistFactory__Measurement.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__Measurement.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ts(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. static doubledummyFunction(unsigned int, double, unsigned int). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. static RooCFunction3Map<double,unsigned int,double,unsigned int>*_fmapPointer to mapping service object; void*_ptr! Pointer to embedded function. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& R__b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. VO operator()(unsigned int x, double y, unsigned int z) const; Evaluate embedded function. const char* name() const; Return registered name of embedded function. If function; is not registered return string with hex presentation; of function pointer value. const char* argName(Int_t iarg); Return suggested name for i-th ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html:6615,Inherit,Inheritance,6615,root/html534/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. static doubledummyFunction(unsigned int, unsigned int, double). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. static RooCFunction3Map<double,unsigned int,unsigned int,double>*_fmapPointer to mapping service object; void*_ptr! Pointer to embedded function. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& R__b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. VO operator()(unsigned int x, unsigned int y, double z) const; Evaluate embedded function. const char* name() const; Return registered name of embedded function. If function; is not registered return string with hex presentation; of function pointer value. const char* argName(Int_t iarg); Return suggested name for i-th ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html:6615,Inherit,Inheritance,6615,root/html534/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts) const; Int_tTShape::ShapeDistancetoPrimitive(Int_t numPoints, Int_t px, Int_t py). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tfAlphaangle w.r.t. the y axis from the centre of the low y to the high y; Float_tTBRIK::fDxhalf length in x; Float_tTBRIK::fDyhalf length in y; Float_tTBRIK::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTShape::fNumberShape number; Float_tfPhipolar angle from the centre of the low z to the high z; Float_tfThetapolar angle from the centre of the low z to the high z; TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPARA(); PARA shape default constructor. TPARA(const char* name, const char* title, const char* material, Float_t dx, Float_t dy, Float_t dz, Float_t alpha, Float_t theta, Float_t phi); PARA shape normal constructor. ~TPARA(); PARA shape default destructor. void SetPoints(Double_t* points) const; Create PARA points. TPARA(). Float_t GetAlpha() const; {return fAlpha;}. Float_t GetTheta() const; {return fTheta;}. Float_t GetPhi() const; {return fPhi;}. » Author: Nenad Buncic 19/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id: TPARA.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPARA.html:8552,Inherit,Inheritance,8552,root/html532/TPARA.html,https://root.cern,https://root.cern/root/html532/TPARA.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts) const; virtual voidTTUBE::SetSegsAndPols(TBuffer3D& buffer) const; Int_tTShape::ShapeDistancetoPrimitive(Int_t numPoints, Int_t px, Int_t py). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tTTUBE::fAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*TTUBE::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTTUBE::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTTUBE::fNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tfPhistereo angle; Float_tTTUBE::fRmaxellipse semi-axis in X outside; Float_tTTUBE::fRminellipse semi-axis in X inside; Double_t*TTUBE::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THYPE(); HYPE shape default constructor. THYPE(const char* name, const char* title, const char* material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi); HYPE shape normal constructor. ~THYPE(); HYPE shape default destructor. THYPE(). Float_t GetPhi() const; {return fPhi;}. » Author: Rene Brun 08/12/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id: THYPE.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THYPE.html:8740,Inherit,Inheritance,8740,root/html532/THYPE.html,https://root.cern,https://root.cern/root/html532/THYPE.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTask.html:7030,inherit,inherited,7030,doc/master/classTTask.html,https://root.cern,https://root.cern/doc/master/classTTask.html,1,['inherit'],['inherited']
Modifiability,"ts. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html:9070,inherit,inherited,9070,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html,16,['inherit'],['inherited']
Modifiability,"ts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLSimAnMinimizer(int type = 0). Default constructor. ~GSLSimAnMinimizer(). Destructor (no operations). GSLSimAnMinimizer(const ROOT::Math::GSLSimAnMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLSimAnMinimizer.html:6014,variab,variable,6014,root/html528/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLSimAnMinimizer.html,4,['variab'],['variable']
Modifiability,"ts. Let assume, a leaf fMatrix, on the branch fEvent, which is a 3 by 3 array,; or a TClonesArray.; In a TTree::Draw expression you can now access fMatrix using the following; syntaxes:. String passed What is used for each entry of the tree. ""fMatrix"" the 9 elements of fMatrix; ""fMatrix[][]"" the 9 elements of fMatrix; ""fMatrix[2][2]"" only the elements fMatrix[2][2]; ""fMatrix[1]"" the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2]; ""fMatrix[1][]"" the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2]; ""fMatrix[][0]"" the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0]. ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!). In summary, if a specific index is not specified for a dimension, TTree::Draw; will loop through all the indices along this dimension. Leaving off the; last (right most) dimension of specifying then with the two characters '[]'; is equivalent. For variable size arrays (and TClonesArray) the range; of the first dimension is recalculated for each entry of the tree.; You can also specify the index as an expression of any other variables from the; tree. TTree::Draw now also properly handles operations involving 2 or more arrays. Let assume a second matrix fResults[5][2], here are a sample of some; of the possible combinations, the number of elements they produce and; the loop used:. expression element(s) Loop. ""fMatrix[2][1] - fResults[5][2]"" one no loop; ""fMatrix[2][] - fResults[5][2]"" three on 2nd dim fMatrix; ""fMatrix[2][] - fResults[5][]"" two on both 2nd dimensions; ""fMatrix[][2] - fResults[][1]"" three on both 1st dimensions; ""fMatrix[][2] - fResults[][]"" six on both 1st and 2nd dimensions of; fResults; ""fMatrix[][2] - fResults[3][]"" two on 1st dim of fMatrix and 2nd of; fResults (at the same time); ""fMatrix[][] - fResults[][]"" six on 1st dim then on 2nd dim. ""fMatrix[][fResult[][]]"" 30 on 1st dim of fMatrix then on both; dimensions of fResults. The value; if fResults[j][k] is used a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:22528,variab,variable,22528,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,1,['variab'],['variable']
Modifiability,"ts. ROOT; » GRAF3D; » GL; » TGLLine3. class TGLLine3. TGLLine3. 3D space, fixed length, line class, with direction / length 'vector',; passing through point 'vertex'. Just wraps a TGLVector3 / TGLVertex3; pair. Function Members (Methods); public:. TGLLine3(const TGLLine3&); TGLLine3(const TGLVertex3& start, const TGLVertex3& end); TGLLine3(const TGLVertex3& start, const TGLVector3& vector); virtual~TGLLine3(); static TClass*Class(); voidDraw() const; const TGLVertex3End() const; virtual TClass*IsA() const; TGLLine3&operator=(const TGLLine3&); voidSet(const TGLVertex3& start, const TGLVertex3& end); voidSet(const TGLVertex3& start, const TGLVector3& vector); virtual voidShowMembers(TMemberInspector& insp); const TGLVertex3&Start() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const TGLVector3&Vector() const. Data Members; private:. TGLVector3fVector! Vector of line from fVertex; TGLVertex3fVertex! Start vertex of line. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLLine3(const TGLVertex3& start, const TGLVertex3& end); Construct 3D line running from 'start' to 'end'. TGLLine3(const TGLVertex3& start, const TGLVector3& vector); Construct 3D line running from 'start', magnitude 'vect'. ~TGLLine3(); Destroy 3D line object. void Set(const TGLVertex3& start, const TGLVertex3& end); Set 3D line running from 'start' to 'end'. void Set(const TGLVertex3& start, const TGLVector3& vector); Set 3D line running from start, magnitude 'vect'. void Draw() const; Draw line in current basic GL color. Assume we are in the correct reference; frame. TGLLine3(const TGLVertex3& start, const TGLVertex3& end). const TGLVertex3 & Start() const; Bitwise copy constructor and = operator are fine; Accessors. { return fVertex; }. const TGLVertex3 End() const; { return fVertex + fVector; }. TGLColor& operator=(const TGLLine3& ). » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLLine3.html:1190,Inherit,Inheritance,1190,root/html532/TGLLine3.html,https://root.cern,https://root.cern/root/html532/TGLLine3.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts. So far, this applies to RooAbsPdf::fitTo, RooAbsPdf::plotOn, RooAbsPdf::generate, RooAbsPdf::paramOn, RooAbsPdf::createCdf, RooAbsPdf::generateBinned, RooAbsPdf::prepareMultiGen and RooAbsPdf::createNLL. For example, the following code is equivalent in PyROOT: # Directly passing a RooCmdArg:; pdf.fitTo(data, ROOT.RooFit.Range(""r1"")); ; # With keyword arguments:; pdf.fitTo(data, Range=""r1""). Definition at line 40 of file RooAbsPdf.h. Classes; class  CacheElem;  Normalization set with for above integral. More...;  ; class  GenSpec;  . Public Types; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:7216,inherit,inherited,7216,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,3,['inherit'],['inherited']
Modifiability,"ts.Definition TObject.h:41; TObject::Notifyvirtual Bool_t Notify()This method must be overridden to handle object notification (the base implementation is no-op).Definition TObject.cxx:599; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::SavePrimitivevirtual void SavePrimitive(std::ostream &out, Option_t *option="""")Save a primitive as a C++ statement(s) on output stream ""out"".Definition TObject.cxx:757; TObject::IsZombieR__ALWAYS_INLINE Bool_t IsZombie() constDefinition TObject.h:153; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::lsvirtual void ls(Option_t *option="""") constThe ls function lists the contents of a class on stdout.Definition TObject.cxx:579; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TObject::kInvalidObject@ kInvalidObjectif object ctor succeeded but object should not be usedDefinition TObject.h:72; TObject::kMustCleanup@ kMustCleanupif object destructor must call RecursiveRemove()Definition TObject.h:64; TPluginHandlerDefinition TPluginManager.h:103; TROOT::IncreaseDirLevelstatic Int_t IncreaseDirLevel()Increase the i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:140161,inherit,inherits,140161,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"ts::EEventTypekFile; static TVirtualPerfStats::EEventTypekFileOpen; static TVirtualPerfStats::EEventTypekFileRead; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TVirtualPerfStats::EEventTypekNumEventType; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TVirtualPerfStats::EEventTypekPacket; static TVirtualPerfStats::EEventTypekRate; static TObject::(anonymous)TObject::kSingleKey; static TVirtualPerfStats::EEventTypekStart; static TVirtualPerfStats::EEventTypekStop; static TVirtualPerfStats::EEventTypekUnDefined; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TVirtualPerfStats. ←. TPerfStats. TTreePerfStats. Function documentation; TVirtualPerfStats *& CurrentPerfStats(); Return the current ROOT perf stats if any. const char * EventType(TVirtualPerfStats::EEventType type); Return the name of the event type. virtual ~TVirtualPerfStats(); {}. void SimpleEvent(TVirtualPerfStats::EEventType type). void PacketEvent(const char* slave, const char* slavename, const char* filename, Long64_t eventsprocessed, Double_t latency, Double_t proctime, Double_t cputime, Long64_t bytesRead). void FileOpenEvent(TFile* file, const char* filename, Double_t start). void FileReadEvent(TFile* file, Int_t len, Double_t start). void UnzipEvent(TObject* tree, Long64_t pos, Double_t start, Int_t complen, Int_t objlen). void RateEvent(Double_t proctime, Double_t deltatime, Long64_t eventsprocessed, Long64_t bytesRead). Long64_t GetBytesRead() const. void SetNumEvents(Long64_t num). Long64_t GetNumEvents() const. » Author: Kristjan Gulbrandsen 11/0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPerfStats.html:7278,Inherit,Inheritance,7278,root/html602/TVirtualPerfStats.html,https://root.cern,https://root.cern/root/html602/TVirtualPerfStats.html,2,['Inherit'],['Inheritance']
Modifiability,"ts::IntervalCalculator&); voidSaveBeltToFile(bool flag = true); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetData(RooAbsData& data); voidSetLeftSideTailFraction(Double_t leftSideFraction = 0.); virtual voidSetModel(const RooStats::ModelConfig& model); virtual voidSetNuisanceParameters(const RooArgSet&); voidSetParameterPointsToTest(RooAbsData& pointsToTest); virtual voidSetParameters(const RooArgSet&); virtual voidSetPdf(RooAbsPdf&); virtual voidSetTestSize(Double_t size); voidSetTestStatSampler(RooStats::TestStatSampler& sampler); virtual voidShowMembers(TMemberInspector& insp); virtual Double_tSize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidUseAdaptiveSampling(bool flag = true). Data Members; private:. boolfAdaptiveSamplingcontrols use of adaptive sampling algorithm; Double_tfAdditionalNToysFactorgive user ability to ask for more toys; RooStats::ConfidenceBelt*fConfBelt; boolfCreateBeltcontrols use if ConfidenceBelt should be saved to a TFile; RooAbsData&fDatadata set ; Double_tfLeftSideFraction; RooStats::ModelConfig&fModel; RooAbsData*fPointsToTest; boolfSaveBeltToFilecontrols use if ConfidenceBelt should be saved to a TFile; Double_tfSizesize of the test (eg. specified rate of Type I error); RooStats::TestStatSampler*fTestStatSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NeymanConstruction(RooAbsData& data, RooStats::ModelConfig& model); default constructor; fWS = new RooWorkspace();; fOwnsWorkspace = true;; fDataName = """";; fPdfName = """";. ~NeymanConstruction(); default constructor; if(fOwnsWorkspace && fWS) delete fWS;; if(fConfBelt) delete fConfBelt;. PointSetInterval* GetInterval() const; Main interface to get a RooStats::ConfInterval.; It constructs a RooStats::SetInterval. NeymanConstruction(RooAbsData& data, RooStats::ModelConfig& model); NeymanConstruction();. void SetTestStatSampler(RooStats::TestStatSampler& sampler); in addition to interface we a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__NeymanConstruction.html:3840,adapt,adaptive,3840,root/html528/RooStats__NeymanConstruction.html,https://root.cern,https://root.cern/root/html528/RooStats__NeymanConstruction.html,4,['adapt'],['adaptive']
Modifiability,"ts; 4603 piby2 = TMath::ATan(1)*2;; 4604 distnn = TMath::Sqrt(fEpsma2)*8;; 4605 fVlimhi = piby2 - distnn;; 4606 fVlimlo = -piby2 + distnn;; 4607 mncler();; 4608// Printf("" MINUIT RELEASE %s INITIALIZED. DIMENSIONS 100/50 EPSMAC=%g"",(const char*)fCvrsn,fEpsmac);; 4609}; 4610 ; 4611////////////////////////////////////////////////////////////////////////////////; 4612/// Interprets the SET LIM command, to reset the parameter limits; 4613///; 4614/// Called from MNSET; 4615 ; 4616void TMinuit::mnlims(); 4617{; 4618 /* Local variables */; 4619 Double_t dxdi, snew;; 4620 Int_t kint, i2, newcod, ifx=0, inu;; 4621 ; 4622 fCfrom = ""SET LIM "";; 4623 fNfcnfr = fNfcn;; 4624 fCstatu = ""NO CHANGE "";; 4625 i2 = Int_t(fWord7[0]);; 4626 if (i2 > fMaxext || i2 < 0) goto L900;; 4627 if (i2 > 0) goto L30;; 4628// set limits on all parameters; 4629 newcod = 4;; 4630 if (fWord7[1] == fWord7[2]) newcod = 1;; 4631 for (inu = 1; inu <= fNu; ++inu) {; 4632 if (fNvarl[inu-1] <= 0) continue;; 4633 if (fNvarl[inu-1] == 1 && newcod == 1) continue;; 4634 kint = fNiofex[inu-1];; 4635// see if parameter has been fixed; 4636 if (kint <= 0) {; 4637 if (fISW[4] >= 0) {; 4638 Printf("" LIMITS NOT CHANGED FOR FIXED PARAMETER:%4d"",inu);; 4639 }; 4640 continue;; 4641 }; 4642 if (newcod == 1) {; 4643// remove limits from parameter; 4644 if (fISW[4] > 0) {; 4645 Printf("" LIMITS REMOVED FROM PARAMETER :%3d"",inu);; 4646 }; 4647 fCstatu = ""NEW LIMITS"";; 4648 mndxdi(fX[kint-1], kint-1, dxdi);; 4649 snew = fGstep[kint-1]*dxdi;; 4650 fGstep[kint-1] = TMath::Abs(snew);; 4651 fNvarl[inu-1] = 1;; 4652 } else {; 4653// put limits on parameter; 4654 fAlim[inu-1] = TMath::Min(fWord7[1],fWord7[2]);; 4655 fBlim[inu-1] = TMath::Max(fWord7[1],fWord7[2]);; 4656 if (fISW[4] > 0) {; 4657 Printf("" PARAMETER %3d LIMITS SET TO %15.5g%15.5g"",inu,fAlim[inu-1],fBlim[inu-1]);; 4658 }; 4659 fNvarl[inu-1] = 4;; 4660 fCstatu = ""NEW LIMITS"";; 4661 fGstep[kint-1] = -.1;; 4662 }; 4663 }; 4664 goto L900;; 4665// set limits on one parameter;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:153408,variab,variables,153408,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ts; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_t_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_t_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsPdf(); Default constructor. RooAbsPdf(const char* name, const char* title = 0); Constructor with name and title only. RooAbsPdf(const char* name, const char* title, Double_t minVal, Double_t maxVal); Constructor with name, title, and plot range. RooAbsPdf(const RooAbsPdf& other, const char* name = 0); Copy constructor. ~RooAbsPdf(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Return current value, normalizated by integrating over; the observables in 'nset'. If 'nset' is 0, the unnormalized value.; is returned. All elements of 'nset' must be lvalues. Unnormalized values are not cached; Doing so would be complicated as _norm->getVal() could; spoil the cache and interfere with returning the cached; return value. Since unnormalized calls are typically; done in integration calls, there is no performance hit. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Analytic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsPdf.html:47780,Inherit,Inheritance,47780,root/html602/RooAbsPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsPdf.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:41",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_double_int_int_.html:37924,Inherit,Inheritance,37924,root/html602/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_double_int_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:28:55",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction3Binding_double_double_int_int_.html:37924,Inherit,Inheritance,37924,root/html604/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction3Binding_double_double_int_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Int_tfNTrings; Int_tfNVerts; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; UChar_t*fTringCols[3*fNTrings]; Float_t*fTringNorms[3*fNTrings]; Int_t*fTrings[3*fNTrings]; void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTriangleSet.html:19526,variab,variable,19526,root/html528/TEveTriangleSet.html,https://root.cern,https://root.cern/root/html528/TEveTriangleSet.html,1,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; vector<TString>fNewEventCommands; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveEventManager.html:18378,variab,variable,18378,root/html528/TEveEventManager.html,https://root.cern,https://root.cern/root/html528/TEveEventManager.html,1,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Int_tfNTrings; Int_tfNVerts; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; UChar_t*fTringCols[3*fNTrings]; Float_t*fTringNorms[3*fNTrings]; Int_t*fTrings[3*fNTrings]; void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTriangleSet.html:19892,variab,variable,19892,root/html530/TEveTriangleSet.html,https://root.cern,https://root.cern/root/html530/TEveTriangleSet.html,5,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tfShowTooltip; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Bool_tfUseLightColorSet; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveViewerList.html:19133,variab,variable,19133,root/html528/TEveViewerList.html,https://root.cern,https://root.cern/root/html528/TEveViewerList.html,6,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSceneList.html:18596,variab,variable,18596,root/html528/TEveSceneList.html,https://root.cern,https://root.cern/root/html528/TEveSceneList.html,6,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; vector<TString>fNewEventCommands; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveEventManager.html:18744,variab,variable,18744,root/html530/TEveEventManager.html,https://root.cern,https://root.cern/root/html530/TEveEventManager.html,5,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Int_tTEveElement::fNumChildren!; TObject*fObjectExternal object holding the visual data.; Bool_tfOwnObjectIs object owned / should be deleted on destruction.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveElementObjectPtr.html:17259,variab,variable,17259,root/html528/TEveElementObjectPtr.html,https://root.cern,https://root.cern/root/html528/TEveElementObjectPtr.html,6,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TGeoManager*fManager; Int_tfMaxVisNodes; TGeoNode*TEveGeoNode::fNode; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Int_tfVisLevel; Int_tfVisOption; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Int_tTEveGeoNode::fgCSGExportNSeg!; static list<TGeoShape*>TEveGeoNode::fgTemporaryStore!. Class C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGeoTopNode.html:18335,variab,variable,18335,root/html528/TEveGeoTopNode.html,https://root.cern,https://root.cern/root/html528/TEveGeoTopNode.html,6,['variab'],['variable']
Modifiability,"ts; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TGeoNode*fNode; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Int_tfgCSGExportNSeg!; static list<TGeoShape*>fgTemporaryStore!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t GetCSGExportNSeg(); Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGeoNode.html:17441,variab,variable,17441,root/html528/TEveGeoNode.html,https://root.cern,https://root.cern/root/html528/TEveGeoNode.html,6,['variab'],['variable']
Modifiability,"ts; Bool_tfTrainWithNegWeightsyes there are negative event weights and we don't ignore them; Double_tfTransitionPointbreak-down point for gradient regression; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; UInt_tfUseNTrainEventsnumber of randomly picked training events used in randomised (and bagged) trees; UInt_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseWeightedTreesuse average classification from the trees, or have the individual trees trees in the forest weighted (e.g. log(boostweight) from AdaBoost; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<TMVA::Event*>fValidationSamplethe Validation events; vector<Double_t>fVariableImportancethe relative importance of the different variables; map<TMVA::Event*,std::pair<Double_t,Double_t> >fWeightedResidualsweighted regression residuals; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBDT(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for the ""boosted decision trees"". MethodBDT(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL). Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); BDT can handle classification with multiple classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; nTrees number of trees in the forest to be created; BoostType the b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBDT.html:25053,variab,variables,25053,root/html530/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBDT.html,3,['variab'],['variables']
Modifiability,"ts; Double_tfFactorSize!Relative size of subscripts and superscripts; Bool_tfItalic!Currently inside #it operator; Int_tfLimitFactorSizelower bound for subscripts/superscripts size; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringTNamed::fNameobject identifier; Double_tfOriginSizeFont size of the starting font; Int_tfPos!Current position in array fTabSize;; Bool_tfShow!is true during the second pass (Painting); Int_tfTabMax!Maximum allocation for array fTabSize;; FormSize_t*fTabSize!array of values for the different zones; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; TStringTNamed::fTitleobject title; Double_tTText::fXX position of text (left,center,etc..); Double_tTText::fYY position of text (left,center,etc..). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLatex(); Default constructor. TLatex(Double_t x, Double_t y, const char* text); Normal constructor. ~TLatex(); Destructor. TLatex(const TLatex& text); Copy constructor. TLatex& operator=(const TLatex& ); assignment operator. void Copy(TObject& text) const; Copy this TLatex object to another TLatex. TLatexFormSize Anal1(TextSpec_t spec, const Char_t* t, Int_t length); Analyse function. TLatexFormSize Analyse(Double_t x, Double_t y, TextSpec_t spec, const Char_t* t, Int_t length); Analyse and paint the TLatex formula. It is called twice : first for calculating the size of; each portion of the formula, then to paint the formula.; When analyse finds an operator or separator, it calls; itself recursively to analyse the arguments of the operator.; when the argument is an atom (normal text), it calculates; the size of it and return it as the result.; for example : if the operator #frac{arg1}{arg2} is found :; Analyse(arg1) return the size of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLatex.html:29157,Inherit,Inheritance,29157,root/html532/TLatex.html,https://root.cern,https://root.cern/root/html532/TLatex.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts; Int_tfNozlength of array of Z offsets; Int_t*fNsliceX[fNox] number of candidates in X slice; Int_t*fNsliceY[fNoy] number of candidates in Y slice; Int_t*fNsliceZ[fNoz] number of candidates in Z slice; Int_tfNxlength of array of X voxels; Int_tfNylength of array of Y voxels; Int_tfNzlength of array of Z voxels; Int_t*fOBx[fNox] offsets of daughter indices for slices X; Int_t*fOBy[fNoy] offsets of daughter indices for slices Y; Int_t*fOBz[fNoz] offsets of daughter indices for slices Z; Int_t*fOEx[fNox] offsets of extra indices for slices X; Int_t*fOEy[fNoy] offsets of extra indices for slices Y; Int_t*fOEz[fNoz] offsets of extra indices for slices Z; Int_tfPriority[3]priority for each axis; vector<ThreadData_t*>fThreadData!; Int_tfThreadSize!; TGeoVolume*fVolumevolume to which applies; Double_t*fXb[fIbx] ordered array of X box boundaries; Double_t*fYb[fIby] ordered array of Y box boundaries; Double_t*fZb[fIbz] ordered array of Z box boundaries. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ClearThreadData() const. TGeoVoxelFinder(); Default constructor. TGeoVoxelFinder(TGeoVolume* vol); Default constructor. TGeoVoxelFinder(const TGeoVoxelFinder& ); copy constructor. TGeoVoxelFinder& operator=(const TGeoVoxelFinder& ); assignment operator. ~TGeoVoxelFinder(); Destructor; printf(""deleting finder of %s\n"", fVolume->GetName());. Int_t GetNcandidates(Int_t tid = 0) const. Int_t* GetCheckList(Int_t& nelem, Int_t tid = 0) const. void BuildVoxelLimits(); build the array of bounding boxes of the nodes inside. void CreateCheckList(Int_t tid = 0); Initializes check list. void DaughterToMother(Int_t id, Double_t* local, Double_t* master) const; convert a point from the local reference system of node id to reference; system of mother volume. Bool_t IsSafeVoxel(Double_t* point, Int_t inode, Double_t minsafe) const; Computes squared distance from POINT to the voxel(s) containing node INODE. Returns 0; if POINT inside voxel(s). Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoVoxelFinder.html:9534,Inherit,Inheritance,9534,root/html532/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html532/TGeoVoxelFinder.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ts;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/HypoTestInverterPlot.h>. Inheritance diagram for RooStats::HypoTestInverterPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ HypoTestInverterPlot() [1/2]. HypoTestInverterPlot::HypoTestInverterPlot ; (; HypoTestInverterResult * ; results). constructor ; constructor from a HypoTestInverterResult class name and title are taken from the result class ; Definition at line 52 of file HypoTestInverterPlot.cxx. ◆ HypoTestInverterPlot() [2/2]. HypoTestInverterPlot::HypoTestInverterPlot ; (; const char * ; name, . const char * ; title, . HypoTestInverterResult * ; results . ). constructor with name and title from a HypoTestInverterResult class ; Definition at line 61 of file HypoTestInverterPlot.cxx. ◆ ~HypoTestInverterPlot(). HypoTestInverterPlot::~HypoTestInverterPlot ; (; ). override . destructor ; Definition at line 260 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterPlot.html:12666,inherit,inherited,12666,doc/master/classRooStats_1_1HypoTestInverterPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterPlot.html,1,['inherit'],['inherited']
Modifiability,"tsConfiguration::CopyTConfiguration * Copy() overrideDefinition TStreamerInfoActions.cxx:187; TStreamerInfoActions::TBitsConfiguration::fObjectOffsetInt_t fObjectOffsetDefinition TStreamerInfoActions.cxx:155; TStreamerInfoActions::TBitsConfiguration::SetMissingvoid SetMissing() overrideDefinition TStreamerInfoActions.cxx:181; TStreamerInfoActions::TGenericConfigurationDefinition TStreamerInfoActions.cxx:137; TStreamerInfoActions::TGenericConfiguration::CopyTConfiguration * Copy() overrideDefinition TStreamerInfoActions.cxx:146; TStreamerInfoActions::TGenericConfiguration::TGenericConfigurationTGenericConfiguration(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset=0)Definition TStreamerInfoActions.cxx:141; TStreamerInfoActions::TGenericConfiguration::PrintDebugvoid PrintDebug(TBuffer &, void *) const overrideDefinition TStreamerInfoActions.cxx:142; TStreamerInfoActions::VectorLooper::ConvertBasicType< BitsMarker, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1753; TStreamerInfoActions::VectorLooper::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1793; TStreamerInfoActions::VectorLooper::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1775; TStreamerInfoActions::VectorLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1735; TStreamerInfoActions::VectorLooper::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1736; TStreamerInfoA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:271778,config,config,271778,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"tsFromStream(istream& istr); read the state of the method from an input stream. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); return the MVA value (range [-1;1]) that classifies the; event.according to the majority vote from the total number of; decision trees; In the literature I found that people actually use the; weighted majority vote (using the boost weights) .. However I; did not see any improvement in doing so :(; --> this is currently switched off. void WriteMonitoringHistosToFile( void ); here we could write some histograms created during the processing; to the output file. vector< Double_t > GetVariableImportance(); return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); return the variable importance. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void ReadWeightsFromXML(void* ); {}. const std::vector<TMVA::IMethod*>& GetCommittee() const; accessors. { return fCommittee; }. const std::vector<Double_t>& GetBoostWeights() const; { return fBoostWeights; }. std::vector<IMethod*>& GetCommittee(); accessors. { return fCommittee; }. std::vector<Double_t>& GetBoostWeights(); { return fBoostWeights; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodCommittee.h 39395 2011-05-26 10:05:54Z moneta $ » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodCommittee.html:21269,variab,variables,21269,root/html530/TMVA__MethodCommittee.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodCommittee.html,1,['variab'],['variables']
Modifiability,"tsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosend cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Float_tfMaxESumBin; Float_tfMaxEtSumBin; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveEle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCalo2D.html:22226,variab,variable,22226,root/html528/TEveCalo2D.html,https://root.cern,https://root.cern/root/html528/TEveCalo2D.html,4,['variab'],['variable']
Modifiability,"tsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfCurDirname of current directory; TList*fKeyslist of Hbook keys (Ids) on disk; TList*fListlist of objects in memory; Int_tfLreclRecord length in Hbook machine words; Int_tfLunFortran logical unit for this file; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; static Int_t*fgLuns; static Bool_tfgPawInit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THbookFile(); the constructor. THbookFile(const char* fname, Int_t lrecl = 1024); Constructor for an HBook file object. ~THbookFile(); destructor. void Browse(TBrowser* b); to be implemented. Bool_t cd(const char* dirname = """"); change directory to dirname. void Close(Option_t* option = """"); Close the Hbook file. void DeleteID(Int_t id); remove id from file and memory. TObject * FindObject(const char* name) const; return object with name in fList in memory. TObject * FindObject(const TObject* obj) const; return object with pointer obj in fList in memory. TObject * Get(Int_t id); import Hbook object with identifier idd in memory. Int_t GetEntry(Int_t entry, Int_t id, Int_t atype, Float_t* x); Read in memory all columns of entry number of ntuple id from the Hbook file. Int_t GetEntryBranch(Int_t entry, Int_t id); Read in memory only the branch bname. void InitLeaves(Int_t id, Int_t var, TTreeFormula* formula); This function is called fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THbookFile.html:7565,Inherit,Inheritance,7565,root/html602/THbookFile.html,https://root.cern,https://root.cern/root/html602/THbookFile.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. ROOT::TBranchProxyDirector*fDirectorproxying director, owned; TDirectory*fDirectorydirectory (or current file for chains); TTreeReader::EEntryStatusfEntryStatusstatus of most recent read request; THashTablefProxiesattached ROOT::TNamedBranchProxies; owned; TTree*fTreetree that's read; deque<ROOT::TTreeReaderValueBase*>fValuesreaders that use our director; static TTreeReader::EPropertyBitskBitIsChain. Class Charts. Inheritance Chart:. TObject. ←; TTreeReader. Function documentation; TTreeReader(TTree* tree); Access data from tree. TTreeReader(const char* keyname, TDirectory* dir = __null); Access data from the tree called keyname in the directory (e.g. TFile); dir, or the current directory if dir is NULL. If keyname cannot be; found, or if it is not a TTree, IsZombie() will return true. ~TTreeReader(); Tell all value readers that the tree reader does not exist anymore. void Initialize(); Initialization of the director. Long64_t GetCurrentEntry() const; Returns the index of the current entry being read. void SetTree(TTree* tree); Set (or update) the which tree to reader from. tree can be; a TTree or a TChain. void RegisterValueReader(ROOT::TTreeReaderValueBase* reader); Add a value reader for this tree. void DeregisterValueReader(ROOT::TTreeReaderValueBase* reader); Remove a value reader for this tree. TTreeReader(); {}. TTreeReader(TTree* tree). TTreeReader(const char* keyname, TDirectory* dir = __null). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeReader.html:12441,Inherit,Inheritance,12441,root/html602/TTreeReader.html,https://root.cern,https://root.cern/root/html602/TTreeReader.html,2,['Inherit'],['Inheritance']
Modifiability,tsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width. private:. Bool_tfAngularLabelsTrue if the labels are oriented according to their axis.; Int_tfArraySizeActual size of the arrays.; Double_t*fAve[fNcols] Average value of each variable.; TPolyLine*fAveragePolyPolygon representing the average variables value.; TArc**fAverageSlices! Average slices.; TCanvas*fCanvas! Pointer to the mother pad.; Long64_t*fCurrentEntries![fNx*fNy] current selected entries;; Bool_tfDisplayAverageDisplay or not the average.; Long64_tfEntryPresent entry number in fTree.; Long64_tfFirstEntryFirst entry.; Bool_tfForceDimForce dimension.; TList*fFormulasList of all formulas to represent.; TList*fInputUsed for fSelector.; TTreeFormulaManager*fManagerCoordinator for the formulas.; Double_t*fMax[fNcols] Maximum value of the variables.; Double_t*fMin[fNcols] Minimum value of the variables.; UInt_tfNcolsNumber of variables.; Long64_tfNentriesNumber of entries.; UInt_tfNxNumber of horizontal spider plots.; UInt_tfNyNumber of vertical spider plots.; TGraphPolargram*fPolargramPolar graph.; TList*fPolyListPolygons representing the variables.; Bool_tfSegmentDisplayTrue if displaying a segment plot.; TTreeFormula*fSelectSelection condition; TSelectorDraw*fSelector! Selector.; Bool_tfShowRang,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpider.html:10130,variab,variables,10130,root/html602/TSpider.html,https://root.cern,https://root.cern/root/html602/TSpider.html,4,['variab'],['variables']
Modifiability,"tsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TAxisfAxis[3]X/Y/Z axis; TStringTNamed::fNameobject identifier; TStringfOptionOptions (is not use yet); TAxis*fSelected! The selected axis to play with; Bool_tfStickyZoomStickyZoom mode: zoom will not be disabled after zooming attempt if true; TStringTNamed::fTitleobject title; Bool_tfZoomModeZoom mode for the entire parent TPad; static const char*fgRulerNameThe default object name. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAxis3D(); Normal constructor. TAxis3D(Option_t* option); Normal constructor. TAxis3D(const TAxis3D& axis); Copy constructor. void Copy(TObject& hnew) const; Copy axis3d. void InitSet(); Initialization. void Browse(TBrowser* b); Add all 3 axes to the TBrowser. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a line. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when an axis is clicked with the locator. char * GetObjectInfo(Int_t px, Int_t py) const; Dummy method; returns the const char * to ""axis3d"". void Paint(Option_t* option = """"); Paint axis over 3D view on the TPad. void PaintAxis(TGaxis* axis, Float_t ang); Draw the axis for TView object. The original idea belongs:. void THistPainter::PaintLegoAxis(TGaxis *axis, Double_t ang). Double_t * PixeltoXYZ(Double_t px, Double_t py, Double_t* point3D, TView* view = 0); Conver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAxis3D.html:9830,Inherit,Inheritance,9830,root/html602/TAxis3D.html,https://root.cern,https://root.cern/root/html602/TAxis3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TXMLNode::EXMLElementTypekXMLAttributeNode; static TXMLNode::EXMLElementTypekXMLCommentNode; static TXMLNode::EXMLElementTypekXMLElementNode; static TXMLNode::EXMLElementTypekXMLTextNode; static TObject::(anonymous)TObject::kZombie. private:. TList*fAttrListList of Attributes; TXMLNode*fChildrenChildren node; TXMLNode*fNextNodeNext sibling node; TXMLNode*fParentParent node; TXMLNode*fPreviousNodePrevious sibling node; _xmlNode*fXMLNodelibxml node. Class Charts. Inheritance Chart:. TObject. ←; TXMLNode. Function documentation; TXMLNode(_xmlNode* node, TXMLNode* parent = 0, TXMLNode* previous = 0); TXMLNode constructor. ~TXMLNode(); Destructor. It deletes the node's child, next sibling and the; attribute list. const char * GetNodeName() const; Returns the node's name. TXMLNode * GetChildren(); Returns the node's child if any, returns 0 if no child. TXMLNode * GetParent() const; Returns the node's parent if any, returns 0 if no parent. const char * GetContent() const; Returns the content if any, or 0. TList * GetAttributes(); Returns a list of node's attribute if any,; returns 0 if no attribute. TXMLNode * GetNextNode(); Returns the next sibling XMLNode in the DOM tree, if any; return 0 if no next node. TXMLNode * GetPreviousNode() const; Returns the previous sibling XMLNode in the DOM tree, if any; return 0 if no previous node. const char * GetText() const; Returns the content of a Text node if node is a TextNode, 0 otherwise. Bool_t HasChildren() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLNode.html:6831,Inherit,Inheritance,6831,root/html602/TXMLNode.html,https://root.cern,https://root.cern/root/html602/TXMLNode.html,2,['Inherit'],['Inheritance']
Modifiability,"tsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TDataSet*fDataSetPointer to the last selected TDataSet; Int_tfDepththe current depth of the passing; Int_tfMaxDepththe max depth of the passing (=1 by default); TIter*fNext""standard"" ROOT iterator for containers; TIter*fNextSet[100]the list of the TList iterators to bypass the whole dataset; TDataSet*fRootDataSetPointer to the root TDataSet; TDataSet*fWorkingDataSetPointer to the working TDataSet; static TDataSet*fgNullDataSet. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataSetIter(TDataSet* l, Bool_t dir); to be documented. TDataSetIter(TDataSet* l = 0, Int_t depth = 1, Bool_t dir = kIterForward); to be documented. ~TDataSetIter(); to be documented. TDataSet * GetNullSet(); return a fake pointer == -1 casted to (TDataSet *). TDataSet * Add(TDataSet* set, TDataSet* dataset). Add - adds the set to the dataset defined with the second parameters. TDataSet dataset != 0 - Add the set to the TDataSet *dataset. = 0 - (by default) to the current TDataSet defined; with fWorkingDataSet data member. returns the pointer to set is success or ZERO poiner. Note: If this TDataSetIter is empty (i.e. Cwd() returns 0), the ""set""; becomes the ""root"" dataset of this iterator //. TDataSet * Add(TDataSet* set, const Char_t* path). Add. Char_t path != 0 - Add a TDataSet dataset to the TDataSet dataset; defined with ""path""; = 0 - (by default) to the current TDataSet defined; with fWorkingDataSet data member. returns the data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataSetIter.html:9115,Inherit,Inheritance,9115,root/html602/TDataSetIter.html,https://root.cern,https://root.cern/root/html602/TDataSetIter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_t_allRRVAll contents are RRV; RooLinkedList_listActual object store; TString_nameOur name.; static Int_tRooPrintable::_nameLength; Bool_t_ownContFlag to identify a list that owns its contents.; TNamed*_structureTag! Structure tag; TNamed*_typedStructureTag! Typed structure tag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsCollection(); Default constructor. RooAbsCollection(const char* name); Empty collection constructor. RooAbsCollection(const RooAbsCollection& other, const char* name = """"); Copy constructor. Note that a copy of a collection is always non-owning,; even the source collection is owning. To create an owning copy of; a collection (owning or not), use the snaphot() method. ~RooAbsCollection(); Destructor. RooLinkedListIter iterator(Bool_t dir = kIterForward) const. void safeDeleteList(); Examine client server dependencies in list and; delete contents in safe order: any client; is deleted before a server is deleted. RooAbsCollection* snapshot(Bool_t deepCopy = kTRUE) const; Take a snap shot of current collection contents:; An owning collection is returned containing clones of. - Elements in this collection; - External dependents of all elements; and recursively any dependents of those dependents; (if deepCopy flag is set). If deepCopy i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsCollection.html:11125,Inherit,Inheritance,11125,root/html602/RooAbsCollection.html,https://root.cern,https://root.cern/root/html602/RooAbsCollection.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMatrixDSymfCorrelationcorrelation matrix; TMatrixDSymfCovariancecovariance matrix estimate; TMatrixDfDatathe original data; Int_tfExactif there was an exact fit, stores the number of points on a hyperplane; Int_tfHalgorithm parameter, determining the subsample size; TVectorDfHyperplanein case more than fH observations lie on a hyperplane; TMatrixDSymfInvcovarianceinverse of the covariance matrix; TVectorDfMeanlocation estimate (mean values); Int_tfNnumber of observations; Int_tfNvarnumber of variables; TArrayIfOutarray of indexes of ouliers, size <0.5*n; TVectorDfRdarray of robust distances, size n; TVectorDfSdarray of standard deviations; Int_tfVarTempnumber of variables already added to the data matrix; Int_tfVecTempnumber of observations already added to the data matrix. Class Charts. Inheritance Chart:. TObject. ←; TRobustEstimator. Function documentation; TRobustEstimator(); this constructor should be used in a univariate case:; first call this constructor, then - the EvaluateUni(..) function. TRobustEstimator(Int_t nvectors, Int_t nvariables, Int_t hh = 0); constructor. void AddColumn(Double_t* col); adds a column to the data matrix; it is assumed that the column has size fN; variable fVarTemp keeps the number of columns l; already added. void AddRow(Double_t* row); adds a vector to the data matrix; it is supposed that the vector is of size fNvar. void Evaluate(); Finds the estimate of multivariate mean and variance. void EvaluateUni(Int_t nvectors, Double_t* data, Double_t& mean, Double_t& sigma, Int_t hh = 0); for the univariate case; estimates of location and scatter are returned in mean and sigma parameters; the algorithm works on t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRobustEstimator.html:12461,variab,variables,12461,root/html602/TRobustEstimator.html,https://root.cern,https://root.cern/root/html602/TRobustEstimator.html,4,['variab'],['variables']
Modifiability,"tsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. vector<UInt_t>fIndices; Long64_tfNPNumber of entries.; auto_ptr<TGLHistPainter>fPainter; const Double_t*fV1V1.; Rgl::Range_tfV1MinMaxV1 range.; Double_tfV1Rangemax - min.; const Double_t*fV2V2.; Rgl::Range_tfV2MinMaxV2 range.; Double_tfV2Rangemax - min.; const Double_t*fV3V3.; Rgl::Range_tfV3MinMaxV3 range.; Double_tfV3Rangemax - min.; const Double_t*fV4V4.; Bool_tfV4IsString; Rgl::Range_tfV4MinMaxV4 range.; const Double_t*fV5V5.; Rgl::Range_tfV5MinMaxV5 range.; TAxisfXAxis; TAxisfYAxis; TAxisfZAxis; static TGL5DDataSet::EdefaultskDefaultNB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGL5DDataSet(TTree* inputData); Constructor. Reads data from TTree,; estimates ranges, creates a painter. Int_t DistancetoPrimitive(Int_t px, Int_t py); Check, if the object is under cursor. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Action. char * GetObjectInfo(Int_t px, Int_t py) const; Info for status bar. void Paint(Option_t* option); Paint. TGL5DPainter * GetRealPainter() const; Get access to painter (for GUI-editor). void SelectPoints(Double_t v4Level, Double_t range); ""Select"" sub-range from source data; - remember indices of ""good"" points. UInt_t SelectedSize() const; Size of selected sub-range. Double_t V1(UInt_t ind) const; V1 from sub-range, converted to unit cube. Double_t V2(UInt_t ind) const; V2 from sub-range, converted to unit cube. Double_t V3(UInt_t ind) const; V3 from sub-range, converted to unit cube. TAxis * GetXAxis() const; X axis for plot. TAxis * GetYAxis() const; Y axis for plot. TAxis * GetZAxis() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGL5DDataSet.html:7018,Inherit,Inheritance,7018,root/html602/TGL5DDataSet.html,https://root.cern,https://root.cern/root/html602/TGL5DDataSet.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TH1*fHistogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Term",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawHist.html:8386,variab,variable,8386,root/html602/TProofDrawHist.html,https://root.cern,https://root.cern/root/html602/TProofDrawHist.html,4,['variab'],['variable']
Modifiability,"tsTTree::kGetBranch; static TTree::ELockStatusBitsTTree::kGetEntry; static TTree::ELockStatusBitsTTree::kGetEntryWithIndex; static TTree::ELockStatusBitsTTree::kGetFriend; static TTree::ELockStatusBitsTTree::kGetFriendAlias; static TTree::ELockStatusBitsTTree::kGetLeaf; static TTree::ELockStatusBitsTTree::kLoadTree; static TTree::ELockStatusBitsTTree::kPrint; static TTree::ELockStatusBitsTTree::kRemoveFriend; static TTree::ELockStatusBitsTTree::kSetBranchStatus. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNtupleD(); Default constructor for Ntuple*-*-*-*-*-*-*-*-; *-* ==============================. TNtupleD(const char* name, const char* title, const char* varlist, Int_t bufsize = 32000); Create an Ntuple*-*-; *-* ================; The parameter varlist describes the list of the ntuple variables; separated by a colon:; example: ""x:y:z:energy""; For each variable in the list a separate branch is created. NOTE:; -Use TTree to create branches with variables of different data types.; -Use TTree when the number of branches is large (> 100).; -. ~TNtupleD(); Default destructor for an Ntuple*-*-*-*-*-*-; *-* ================================. void ResetBranchAddress(TBranch* ); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed via calls to SetBranchAddress(). void ResetBranchAddresses(); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed via calls to SetBranchAddress(). void Browse(TBrowser* b); Browse content. Int_t Fill(); -*-*Fill a Ntuple with current values in fArgs; *-* ==========================================; Note that this function is protected.; Currently called only by TChain::Merge. Int_t Fill(const Double_t* x); Fill a Ntuple with an array of floats*-; *-* =====================================. Int_t Fill(Double_t x0, Double_t x1, Double_t x2 = 0, Double_t x3 = 0, Double_t x4 = 0, Double_t x5 = 0, Double_t x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNtupleD.html:28383,variab,variables,28383,root/html602/TNtupleD.html,https://root.cern,https://root.cern/root/html602/TNtupleD.html,4,['variab'],['variables']
Modifiability,"ts] array of Y high errors; Double_t*fEYlow[fNpoints] array of Y low errors; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TList*TGraph::fFunctionsPointer to list of functions (fits and user); TH1F*TGraph::fHistogramPointer to histogram used for drawing axis; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph::fMaxSize!Current dimension of arrays fX and fY; Double_tTGraph::fMaximumMaximum value for plotting along y; Double_tTGraph::fMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphAsymmErrors(); TGraphAsymmErrors default constructor. TGraphAsymmErrors(const TGraphAsymmErrors& gr); TGraphAsymmErrors copy constructor. TGraphAsymmErrors& operator=(const TGraphAsymmErrors& gr); TGraphAsymmErrors assignment operator. TGraphAsymmErrors(Int_t n); TGraphAsymmErrors normal constructor. the arrays are preset to zero. TGraphAsymmErrors(Int_t n, const Float_t* x, const Float_t* y, const Float_t* exl = 0, const Float_t* exh = 0, const Float_t* eyl = 0, const Float_t* eyh = 0); TGraphAsymmErrors normal constructor. if exl,h or eyl,h are null, the corresponding arrays are preset to zero. TGraphAsymmErrors(Int_t n, const Double_t* x, const Double_t* y, const Double_t* exl = 0, const Double_t* exh = 0, const Double_t* eyl = 0, const Double_t* eyh = 0); TGraphAsymmErrors normal constructor. if exl,h or eyl,h are null, the corresponding arrays are preset to zero. TGraphAsymmErrors(const TVectorF& vx, const TVectorF& vy, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphAsymmErrors.html:15488,Inherit,Inheritance,15488,root/html532/TGraphAsymmErrors.html,https://root.cern,https://root.cern/root/html532/TGraphAsymmErrors.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tsize`) is a fraction of the current pad size. Therefore the; 149same `textsize` value can generate text outputs with different absolute; 150sizes in two different pads.; 151The text size in pixels (`charheight`) is computed the following way:; 152 ; 153~~~ {.cpp}; 154 pad_width = gPad->XtoPixel(gPad->GetX2());; 155 pad_height = gPad->YtoPixel(gPad->GetY1());; 156 if (pad_width < pad_height) charheight = textsize*pad_width;; 157 else charheight = textsize*pad_height;; 158~~~; 159 ; 160If the text precision is equal to 3, the text size doesn't depend on the pad's; 161dimensions. A given `textsize` value always generates the same absolute; 162size. The text size (`charheight`) is given in pixels:; 163 ; 164~~~ {.cpp}; 165 charheight = textsize;; 166~~~; 167 ; 168Note that to scale fonts to the same size as the old True Type package a; 169scale factor of `0.93376068` is apply to the text size before drawing.; 170 ; 171The text size of any class inheriting from `TAttText` can; 172be changed using the method `SetTextSize` and retrieved using the; 173method `GetTextSize`.; 174 ; 175\anchor ATTTEXT5; 176## Text Font and Precision; 177 ; 178The text font code is combination of the font number and the precision.; 179~~~ {.cpp}; 180 Text font code = 10*fontnumber + precision; 181~~~; 182Font numbers must be between 1 and 14.; 183 ; 184The precision can be:; 185 ; 186 - `precision = 0` fast hardware fonts (steps in the size); 187 - `precision = 1` scalable and rotatable hardware fonts (see below); 188 - `precision = 2` scalable and rotatable hardware fonts; 189 - `precision = 3` scalable and rotatable hardware fonts. Text size; 190 is given in pixels.; 191 ; 192The text font and precision of any class inheriting from `TAttText` can; 193be changed using the method `SetTextFont` and retrieved using the; 194method `GetTextFont`.; 195 ; 196\anchor ATTTEXT51; 197### Font quality and speed; 198 ; 199When precision 0 is used, only the original non-scaled X11 system fonts are; 200used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8cxx_source.html:5569,inherit,inheriting,5569,doc/master/TAttText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttText_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"ttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfNodes() const; virtual TRotMatrix*GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*GetNode(const char* name) const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual TNode*GetParent() const; TShape*GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetVisibility() const; virtual Double_tGetX() const; virtual Double_tGetY() const; virtual Double_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImportShapeAttributes(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidLocal2Master(const Double_t* local, Double_t* master); virtual voidLocal2Master(const Float_t* local, Float_t* master); virtual voidls(Option_t* option = ""2"") constMENU ; virtual voidMaster2Local(const Double_t* master, Double_t* local); virtual voidMaster2Local(const Float_t* master, Float_t* local); voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNode.html:3721,Inherit,InheritsFrom,3721,root/html532/TNode.html,https://root.cern,https://root.cern/root/html532/TNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:5569,inherit,inherited,5569,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['inherit'],['inherited']
Modifiability,"ttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Option_t*GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetValueColor(Double_t zc); Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPaletteAxis.html:4901,Inherit,InheritsFrom,4901,root/html532/TPaletteAxis.html,https://root.cern,https://root.cern/root/html532/TPaletteAxis.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Option_t*GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetValueColor(Double_t zc); Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPaletteAxis.html:4841,Inherit,InheritsFrom,4841,root/html602/TPaletteAxis.html,https://root.cern,https://root.cern/root/html602/TPaletteAxis.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ttLineAttMarker (TEveTrackList *tl);  Set line and marker attributes from TEveTrackList. ;  ; void SetCharge (Int_t chg);  ; void SetDpDs (Double_t dpds);  ; void SetIndex (Int_t idx);  ; void SetLabel (Int_t lbl);  ; void SetLockPoints (Bool_t l);  ; virtual void SetPathMarks (const TEveTrack &t);  Copy path-marks from t. ;  ; void SetPdg (Int_t pdg);  ; void SetPropagator (TEveTrackPropagator *prop);  Set track's render style. ;  ; void SetStatus (Int_t idx);  ; virtual void SetStdTitle ();  Set standard track title based on most data-member values. ;  ; virtual void SetTrackParams (const TEveTrack &t);  Copy track parameters from t. ;  ; void SortPathMarksByTime ();  Sort registered pat-marks by time. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteVizParams (std::ostream &out, const TString &var) override;  Write visualization parameters. ;  ;  Public Member Functions inherited from TEveLine;  TEveLine (const char *name, Int_t n_points=0, ETreeVarType_e tv_type=kTVT_XYZ);  Constructor. ;  ;  TEveLine (Int_t n_points=0, ETreeVarType_e tv_type=kTVT_XYZ);  Constructor. ;  ;  ~TEveLine () override;  ; Float_t CalculateLineLength () const;  Sum-up lengths of individual segments. ;  ; TEveVector GetLineEnd () const;  Return the last point of the line. ;  ; TEveVector GetLineStart () const;  Return the first point of the line. ;  ; Bool_t GetRnrLine () const;  ; Bool_t GetRnrPoints () const;  ; Bool_t GetSmooth () const;  ; void ReduceSegmentLengths (Float_t max);  Make sure that no segment is longer than max. ;  ; void SetLineColor (Color_t col) override;  Set the line color. ;  ; void SetLineStyle (Style_t lstyle) override;  Set line-style of the line. ;  ; void SetLineWidth (Width_t lwidth) override;  Set line-style of the line. ;  ; void SetMarkerColor (Color_t col) override;  Set marker color. Propagate to projected lines. ;  ; void SetRnrLine (Bool_t r);  Set rendering of line. Propagate to pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrack.html:5355,inherit,inherited,5355,doc/master/classTEveTrack.html,https://root.cern,https://root.cern/doc/master/classTEveTrack.html,1,['inherit'],['inherited']
Modifiability,"ttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TTree; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetBranchStyle ();  Static function returning the current branch style. ;  ; static Long64_t GetMaxTreeSize ();  Static function which returns the tree file size limit in bytes. ;  ; static TTree * MergeTrees (TList *list, Option_t *option="""");  Static function merging the trees in the TList into a new tree. ;  ; static void SetBranchStyle (Int_t style=1);  Set the current branch style. ;  ; static void SetMaxTreeSize (Long64_t maxsize=100000000000LL);  Set the maximum size in bytes of a Tree file (static function). ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:40126,inherit,inherited,40126,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,6,['inherit'],['inherited']
Modifiability,"ttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Static Protected Attributes; static Bool_t fgApproximate = kFALSE;  bin error approximation option ;  ;  Static Protected Attributes inherited from TH1; static Bool_t fgAddDirectory = kTRUE;  ! Flag to add histograms to the directory ;  ; static Int_t fgBufferSize = 1000;  ! Default buffer size for automatic histograms ;  ; static Bool_t fgDefaultSumw2 = kFALSE;  ! Flag to call TH1::Sumw2 automatically at histogram creation time ;  ; static Bool_t fgStatOverflows = kFALSE;  ! Flag to use under/overflows in statistics ;  . Private Member Functions; Int_t Fill (Double_t) override;  Increment bin with abscissa X by 1. ;  ; void FillN (Int_t, const Double_t *, const Double_t *, Int_t) override;  Fill this histogram with an array x and weights w. ;  ; Double_t * GetB ();  ; Double_t * GetB2 ();  ; Double_t * GetW ();  ; Double_t * GetW2 ();  ; void SetBins (Int_t, const Double_t *, Int_t, const Double_t *) override;  Redefine x and y axis parameters with variable bin sizes. ;  ; void SetBins (Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) override;  Redefine x, y and z axis parameters with variable bin sizes. ;  ; void SetBins (Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) override;  Redefine x and y axis parameters. ;  ; void SetBins (Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) override;  Redefine x, y and z axis parameters. ;  . Friends; class TH1Merger;  ; class TProfileHelper;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:53952,variab,variable,53952,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['variab'],['variable']
Modifiability,"ttText::fTextSizeText size; Double_tTBox::fX1X of 1st point; Double_tTPave::fX1NDCX1 point in NDC coordinates; Double_tTBox::fX2X of 2nd point; Double_tTPave::fX2NDCX2 point in NDC coordinates; Double_tTBox::fY1Y of 1st point; Double_tTPave::fY1NDCY1 point in NDC coordinates; Double_tTBox::fY2Y of 2nd point; Double_tTPave::fY2NDCY2 point in NDC coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPaveClass(); PaveClass default constructor. TPaveClass(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* label, TClassTree* classtree); PaveClass normal constructor. ~TPaveClass(); PaveClass default destructor. TPaveClass(const TPaveClass& PaveVar); PaveClass copy constructor. void Copy(TObject& PaveVar) const; Copy this PaveClass to PaveClass. void DrawClasses(const char* classes = ""this""); Draw classes. void SaveAs(const char* filename = """", Option_t* option = """") const; Save as. void SetClasses(const char* classes = ""this"", Option_t* option = ""ID""); Set classes. void ShowLinks(Option_t* option = ""HMR""); Set link options in the ClassTree object. ""C"" show References from code; ""H"" show ""Has a"" relations; ""M"" show Multiple Inheritance; ""R"" show References from data members. void ShowClassesUsedBy(const char* classes = ""this""); Show classes used by. void ShowClassesUsing(const char* classes = ""this""); Show classes using. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. TClassTree * GetClassTree() const; {return fClassTree;}. void SetClassTree(TClassTree* classtree); {fClassTree = classtree;}. » Author: Rene Brun 06/08/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gpad:$Id: TPaveClass.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPaveClass.html:12214,Inherit,Inheritance,12214,root/html532/TPaveClass.html,https://root.cern,https://root.cern/root/html532/TPaveClass.html,1,['Inherit'],['Inheritance']
Modifiability,"ttach(). void RooBinnedGenContext::attach ; (; const RooArgSet & ; params). overridevirtual . Attach given set of variables to internal p.d.f. clone. ; Reimplemented from RooAbsGenContext.; Definition at line 84 of file RooBinnedGenContext.cxx. ◆ Class(). static TClass * RooBinnedGenContext::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooBinnedGenContext::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooBinnedGenContext::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 55 of file RooBinnedGenContext.h. ◆ DeclFileName(). static const char * RooBinnedGenContext::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 55 of file RooBinnedGenContext.h. ◆ generate(). RooDataSet * RooBinnedGenContext::generate ; (; double ; nEvents = 0.0, . bool ; skipInit = false, . bool ; extendedMode = false . ). overridevirtual . Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ; With nEvents<=0, generate the number of events in the prototype dataset, if available, or else the expected number of events, if non-zero. If extendedMode = true generate according to a Poisson(nEvents) The returned dataset belongs to the caller. Return zero in case of an error. Generation of individual events is delegated to a virtual generateEvent() method. A virtual initGenerator() method is also called just before the first call to generateEvent(). ; Reimplemented from RooAbsGenContext.; Definition at line 113 of file RooBinnedGenContext.cxx. ◆ generateEvent(). void RooBinnedGenContext::generateEvent ; (; RooArgSet & ; theEvent, . Int_t ; remaining . ). overrideprotectedvirtual . this method is not implemented for this context ; Implements RooAbsGenContext.; Definition at line 218 of file RooBinnedGenContext.cxx. ◆ initGenerator(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinnedGenContext.html:18613,extend,extendedMode,18613,doc/master/classRooBinnedGenContext.html,https://root.cern,https://root.cern/doc/master/classRooBinnedGenContext.html,1,['extend'],['extendedMode']
Modifiability,"tterntraining pattern ; testPatterntest pattern ; minimizeruse this minimizer for training (e.g. SGD) ; settingssettings used for this training run. Parameters. weightsthe container with the weights (synapses) ; trainPatternthe pattern for the training ; testPatternthe pattern for the testing ; minimizerthe minimizer (e.g. steepest gradient descent) to be used ; settingsthe settings for the training (e.g. multithreading or not, regularization etc.) . Definition at line 712 of file NeuralNet.icc. ◆ trainCycle(). template<typename Iterator , typename Minimizer > . double TMVA::DNN::Net::trainCycle ; (; Minimizer & ; minimizer, . std::vector< double > & ; weights, . Iterator ; itPatternBegin, . Iterator ; itPatternEnd, . Settings & ; settings, . DropContainer & ; dropContainer . ). inline . executes one training cycle ; execute a single training cycle; Parameters. minimizerthe minimizer to be used ; weightsthe weight vector to be used ; itPatternBeginthe pattern to be trained with ; itPatternEndthe pattern to be trained with ; settingsthe settings for the training ; dropContainerthe configuration for DNN drop-out. uses multithreading if turned on; Parameters. minimizerthe minimizer to be used (e.g. SGD) ; weightsthe weight container with all the synapse weights ; itPatternBeginbegin of the pattern container ; itPatternEndthe end of the pattern container ; settingsthe settings for this training (e.g. multithreading or not, regularization, etc.) ; dropContainerthe data for dropping-out nodes (regularization technique) . Definition at line 939 of file NeuralNet.icc. Member Data Documentation. ◆ fExitFromTraining. bool* TMVA::DNN::Net::fExitFromTraining = nullptr. protected . Definition at line 1277 of file NeuralNet.h. ◆ fInteractive. IPythonInteractive* TMVA::DNN::Net::fInteractive = nullptr. protected . Definition at line 1276 of file NeuralNet.h. ◆ fIPyCurrentIter. UInt_t * TMVA::DNN::Net::fIPyCurrentIter = nullptr. protected . Definition at line 1278 of file NeuralNet.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:18178,config,configuration,18178,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['config'],['configuration']
Modifiability,"ttingDon't deadlock in update mode, when from Get() Add() is called; TMapRec*fLastLast object in list of shared objects; void*fMmallocDescPointer to mmalloc descriptor; char*fNameName of mapped file; Long_tfOffsetOffset in bytes for region mapped by reader; char*fOptionDirectory creation options; Int_tfSemaphoreModification semaphore (or getpid() for WIN32); Int_tfSizeOriginal start size of memory mapped region; Double_tfSum2BufferSum of squares of buffer sizes of objects written so far; Double_tfSumBufferSum of buffer sizes of objects written sofar; char*fTitleTitle of mapped file; Int_tfVersionROOT version (or -1 for shadow map file); Bool_tfWritableTRUE if mapped file opened in RDWR mode; Int_tfWrittenNumber of objects written sofar; static Long_tfgMapAddressMap to this address, set address via SetMapAddress(); static void*fgMmallocDescUsed in Close() and operator delete(); ULong_tfhSemaphoreHANDLE of WIN32 Mutex object to implement semaphore. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMapFile(); Default ctor. Does not much except setting some basic values. TMapFile(const char* name, const char* title, Option_t* option, Int_t size, TMapFile*& newMapFile); Create a memory mapped file. This opens a file (to which the; memory will be mapped) and attaches a memory region to it.; Option can be either: ""NEW"", ""CREATE"", ""RECREATE"", ""UPDATE"" or; ""READ"" (see TFile). The default open mode is ""READ"". The size; argument specifies the maximum size of shared memory file in bytes.; This protected ctor is called via the static Create() method. TMapFile(const TMapFile& f, Long_t offset = 0); Private copy ctor. Used by the the ctor to create a new version; of TMapFile in the memory mapped heap. It's main purpose is to; correctly create the string data members. ~TMapFile(); TMapFiles may not be deleted, since we want to keep the complete; TMapFile object in the mapped file for later re-use. To enforce this; the delete operator has bee",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMapFile.html:9565,Inherit,Inheritance,9565,root/html532/TMapFile.html,https://root.cern,https://root.cern/root/html532/TMapFile.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ttings(ROOT::kLZMA, 1); will build an integer which will set the compression to use; the LZMA algorithm and compression level 1. These are defined; in the header file Compression.h. Note that the compression settings may be changed at any time.; The new compression settings will only apply to branches created; or attached after the setting is changed and other objects written; after the setting is changed. In case the file does not exist or is not a valid ROOT file,; it is made a Zombie. One can detect this situation with a code like:; TFile f(""file.root"");; if (f.IsZombie()) {; cout << ""Error opening file"" << endl;; exit(-1);; }. When opening the file, the system checks the validity of this directory.; If something wrong is detected, an automatic Recovery is performed. In; this case, the file is scanned sequentially reading all logical blocks; and attempting to rebuild a correct directory (see TFile::Recover).; One can disable the automatic recovery procedure when reading one; or more files by setting the environment variable ""TFile::Recover 0""; in the system.rootrc file. TFile(const TFile& ); TFile objects can not be copied. ~TFile(); File destructor. void Init(Bool_t create); Initialize a TFile object.; TFile implementations providing asynchronous open functionality need to; override this method to run the appropriate checks before calling this; standard initialization part. See TXNetFile::Init for an example. void Close(Option_t* option = """"); Close a file.; If option == ""R"", all TProcessIDs referenced by this file are deleted.; Calling TFile::Close(""R"") might be necessary in case one reads a long list; of files having TRef, writing some of the referenced objects or TRef; to a new file. If the TRef or referenced objects of the file being closed; will not be referenced again, it is possible to minimize the size; of the TProcessID data structures in memory by forcing a delete of; the unused TProcessID. TKey* CreateKey(TDirectory* mother, const TObject* obj, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFile.html:27120,variab,variable,27120,root/html530/TFile.html,https://root.cern,https://root.cern/root/html530/TFile.html,3,['variab'],['variable']
Modifiability,"ttingsSettings for classificationused to distinguish between different function signatures ;  CLayerLayer defines the layout of a layer ;  CLayerDataLayerData holds the data of one layer ;  CMeanVariance;  CNetNeural net ;  CSettingsSettings for the training of the neural net ;  CSteepestSteepest Gradient Descent algorithm (SGD) ;  CTBatchTBatch ;  CTBatchIteratorTBatchIterator ;  CTCpuThe TCpu architecture class ;  ►CTCpuBufferTCpuBuffer ;  CTDestructor;  CTCpuMatrixThe TCpuMatrix class ;  CTCudaThe TCuda architecture class ;  ►CTCudaDeviceBufferTCudaDeviceBuffer ;  CTDestructor;  CTCudaDeviceReferenceTCudaDeviceReference ;  ►CTCudaHostBufferTCudaHostBuffer ;  CTDestructor;  CTCudaMatrixTCudaMatrix Class ;  CTDataLoaderTDataLoader ;  CTDataLoader< AData, TReference< AReal > >;  CTDeviceTDevice ;  CTGradientDescent;  CTLayerGeneric layer class ;  CTNetGeneric neural network class ;  CTReferenceThe reference architecture class ;  CTSharedLayerLayer class width shared weight and bias layers ;  ►NExperimental;  CClassification;  CClassificationResult;  ►NkNN;  CEvent;  CModulekNN;  CNodeThis file contains binary tree and global function template that searches tree for k-nearest neigbors ;  CAbsoluteDeviationLossFunctionAbsolute Deviation Loss Function ;  CAbsoluteDeviationLossFunctionBDTAbsolute Deviation BDT Loss Function ;  CAbsValue;  CBDTEventWrapper;  CBinarySearchTreeA simple Binary search tree including a volume search method ;  CBinarySearchTreeNodeNode for the BinarySearch or Decision Trees ;  CBinaryTreeBase class for BinarySearch and Decision Trees ;  CCCPrunerA helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) ;  ►CCCTreeWrapper;  CCCTreeNode;  CClassificationClass to perform two class classification ;  CClassificationResultClass to save the results of the classifier ;  CClassifierFactoryThis is the MVA factory ;  CClassInfoClass that contains all the information of a class ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:75825,layers,layers,75825,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,1,['layers'],['layers']
Modifiability,"tton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fClosecancel button; TGColorSelect*fConfColorColor for the graph; TGVerticalFrame*fConfFrameConfidence Intervals Frame; TGNumberEntry*fConfLevelConfidence Level; TGColorSelect*fContourColorColor for the graph; TGNumberEntry*fContourErrorError Level for Contour; TGVerticalFrame*fContourFrameContour Frame; TGCheckButton*fContourOverSuperimpose the graphics; TGComboBox*fContourPar1Parameter 1 for Contour; TGComboBox*fContourPar2Parameter 2 for Contour; TGNumberEntry*fContourPointsNumber of points for the graph; TGTextButton*fDrawok button; TBackCompFitter*fFitterFitter.; TGVerticalFrame*fMainFrameMain Vertical Frame; TGVerticalFrame*fScanFrameScan Frame; TGNumberEntry*fScanMaxMax Value for Contour; TGNumberEntry*fScanMinMin Value for Contour; TGComboBox*fScanParParameter for Scan; TGNumberEntry*fScanPointsNumber of points for the graph; TGTab*fTabTab containing the available methods. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CreateContourFrame(). void CreateScanFrame(). void CreateConfFrame(). void AddParameters(TGComboBox* ). void DrawContour(). void DrawScan(). void DrawConfidenceLevels(). void ConnectSlots(). TAdvancedGraphicsDialog(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog & operator=(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog(const TGWindow* p, const TGWindow* main). ~TAdvancedGraphicsDialog(). void DoDraw(). void DoChangedScanPar(Int_t selected). » Author: David Gonzalez Maline 11/12/2008 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/fitpanel:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAdvancedGraphicsDialog.html:23103,Inherit,Inheritance,23103,root/html534/TAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/root/html534/TAdvancedGraphicsDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ttp://www.gnu.org/software/gsl/manual/html_node/Root-Bracketing-Algorithms.html"">GSL manual</A> for more information; @ingroup RootFinders. Function Members (Methods); public:. virtual~Newton(); ROOT::Math::GSLRootFinderDerivROOT::Math::GSLRootFinderDeriv::GSLRootFinderDeriv(); virtual intROOT::Math::GSLRootFinderDeriv::Iterate(); virtual intROOT::Math::GSLRootFinderDeriv::Iterations() const; virtual const char*ROOT::Math::GSLRootFinderDeriv::Name() const; ROOT::Math::Roots::NewtonNewton(); virtual doubleROOT::Math::GSLRootFinderDeriv::Root() const; virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGradFunction& f, double xstart); virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGenFunction&, double, double); boolROOT::Math::GSLRootFinderDeriv::SetFunction(ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer f, ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer df, ROOT::Math::GSLRootFinderDeriv::GSLFdFPointer fdf, void* p, double Root); virtual boolROOT::Math::GSLRootFinderDeriv::Solve(int maxIter = 100, double absTol = 1E-8, double relTol = 1E-10); virtual intROOT::Math::GSLRootFinderDeriv::Status() const. protected:. voidROOT::Math::GSLRootFinderDeriv::FreeSolver(); voidROOT::Math::GSLRootFinderDeriv::SetSolver(ROOT::Math::GSLRootFdFSolver* s). private:. ROOT::Math::Roots::NewtonNewton(const ROOT::Math::Roots::Newton&); ROOT::Math::Roots::Newton&operator=(const ROOT::Math::Roots::Newton&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Newton(). virtual ~Newton(). Newton(const ROOT::Math::Roots::Newton& ); usually copying is non trivial, so we make this unaccessible. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Roots__Newton.html:1944,Inherit,Inheritance,1944,root/html534/ROOT__Math__Roots__Newton.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Roots__Newton.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ttp://www.gnu.org/software/gsl/manual/html_node/Root-Bracketing-Algorithms.html"">GSL manual</A> for more information; @ingroup RootFinders. Function Members (Methods); public:. virtual~Secant(); ROOT::Math::GSLRootFinderDerivROOT::Math::GSLRootFinderDeriv::GSLRootFinderDeriv(); virtual intROOT::Math::GSLRootFinderDeriv::Iterate(); virtual intROOT::Math::GSLRootFinderDeriv::Iterations() const; virtual const char*ROOT::Math::GSLRootFinderDeriv::Name() const; virtual doubleROOT::Math::GSLRootFinderDeriv::Root() const; ROOT::Math::Roots::SecantSecant(); virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGradFunction& f, double xstart); virtual boolROOT::Math::GSLRootFinderDeriv::SetFunction(const ROOT::Math::IGenFunction&, double, double); boolROOT::Math::GSLRootFinderDeriv::SetFunction(ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer f, ROOT::Math::GSLRootFinderDeriv::GSLFuncPointer df, ROOT::Math::GSLRootFinderDeriv::GSLFdFPointer fdf, void* p, double Root); virtual boolROOT::Math::GSLRootFinderDeriv::Solve(int maxIter = 100, double absTol = 1E-8, double relTol = 1E-10); virtual intROOT::Math::GSLRootFinderDeriv::Status() const. protected:. voidROOT::Math::GSLRootFinderDeriv::FreeSolver(); voidROOT::Math::GSLRootFinderDeriv::SetSolver(ROOT::Math::GSLRootFdFSolver* s). private:. ROOT::Math::Roots::Secant&operator=(const ROOT::Math::Roots::Secant&); ROOT::Math::Roots::SecantSecant(const ROOT::Math::Roots::Secant&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Secant(). virtual ~Secant(). Secant(const ROOT::Math::Roots::Secant& ); usually copying is non trivial, so we make this unaccessible. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Roots__Secant.html:1944,Inherit,Inheritance,1944,root/html534/ROOT__Math__Roots__Secant.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Roots__Secant.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:08:12 2015 » Last generated: 2015-06-02 13:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4Binding_double_double_double_double_bool_.html:39089,variab,variable,39089,root/html602/RooCFunction4Binding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4Binding_double_double_double_double_bool_.html,2,['variab'],['variable']
Modifiability,"ttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:29:26 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction4Binding_double_double_double_double_bool_.html:39089,variab,variable,39089,root/html604/RooCFunction4Binding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html604/RooCFunction4Binding_double_double_double_double_bool_.html,2,['variab'],['variable']
Modifiability,"ttribute; fMaxVirtualSize is reached. Variables of one branch are written to the; same buffer. A branch buffer is automatically compressed if the file; compression attribute is set (default). Branches may be written to different files (see TBranch::SetFile). The ROOT user can decide to make one single branch and serialize one; object into one single I/O buffer or to make several branches.; Making one single branch and one single buffer can be the right choice; when one wants to process only a subset of all entries in the tree.; (you know for example the list of entry numbers you want to process).; Making several branches is particularly interesting in the data analysis; phase, when one wants to histogram some attributes of an object (entry); without reading all the attributes. ==> TTree *tree = new TTree(name, title); Creates a Tree with name and title. Various kinds of branches can be added to a tree:; A - simple structures or list of variables. (may be for C or Fortran structures); B - any object (inheriting from TObject). (we expect this option be the most frequent); C - a ClonesArray. (a specialized object for collections of same class objects). ==> Case A. TBranch *branch = tree->Branch(branchname, address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:1605,inherit,inheriting,1605,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,1,['inherit'],['inheriting']
Modifiability,"ttribute; fMaxVirtualSize is reached. Variables of one branch are written to the; same buffer. A branch buffer is automatically compressed if the file; compression attribute is set (default). Branches may be written to different files (see TBranch::SetFile). The ROOT user can decide to make one single branch and serialize one; object into one single I/O buffer or to make several branches.; Making one single branch and one single buffer can be the right choice; when one wants to process only a subset of all entries in the tree.; (you know for example the list of entry numbers you want to process).; Making several branches is particularly interesting in the data analysis; phase, when one wants to histogram some attributes of an object (entry); without reading all the attributes. ==> TTree *tree = new TTree(name, title); Creates a Tree with name and title. Various kinds of branches can be added to a tree:; A - simple structures or list of variables. (may be for C or Fortran structures); B - any object (inheriting from TObject). (we expect this option be the most frequent); C - a ClonesArray. (a specialized object for collections of same class objects). ==> Case A. TBranch *branch = tree->Branch(branchname, address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned inte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:1605,inherit,inheriting,1605,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,8,['inherit'],['inheriting']
Modifiability,"ttributeMap() const; static TDataType*GetDataType(EDataType type); static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Int_tGetType() const; static EDataTypeGetType(const type_info& typeinfo); const char*GetTypeName() const; static const char*GetTypeName(EDataType type); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataType.html:3141,Inherit,InheritsFrom,3141,root/html534/TDataType.html,https://root.cern,https://root.cern/root/html534/TDataType.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ttributes can be changed using; 112`gStyle`. The default settings are:; 113~~~ {.cpp}; 114 SetLegendBorderSize(1);; 115 SetLegendFillColor(0);; 116 SetLegendFont(42);; 117 SetLegendTextSize(0.);; 118~~~; 119The global attributes change the default values for the next created legends.; 120 ; 121Text attributes can be also changed individually on each legend entry:; 122~~~ {.cpp}; 123 TLegendEntry *le = leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; 124 le->SetTextColor(kBlue);; 125~~~; 126 ; 127Note that the `TPad` class has a method to build automatically a legend; 128for all objects in the pad. It is called `TPad::BuildLegend()`.; 129 ; 130Each item in the legend is added using the `AddEntry` method. This; 131method defines the object to be added (by reference or name), the label; 132associated to this object and an option which a combination of:; 133 ; 134 - L: draw line associated with TAttLine if obj inherits from TAttLine; 135 - P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; 136 - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; 137 - E: draw vertical error bar; 138 ; 139As shown in the following example, passing a NULL pointer as first parameter in; 140`AddEntry` is also valid. This allows to add text or blank lines in a; 141legend.; 142 ; 143Begin_Macro(source); 144{; 145 auto c2 = new TCanvas(""c2"",""c2"",500,300);; 146 ; 147 auto* legend = new TLegend(0.2, 0.2, .8, .8);; 148 auto h = new TH1F("""", """", 1, 0, 1);; 149 ; 150 legend->AddEntry(h, ""Histogram \""h\"""", ""l"");; 151 legend->AddEntry((TObject*)0, """", """");; 152 legend->AddEntry((TObject*)0, ""Some text"", """");; 153 legend->AddEntry((TObject*)0, """", """");; 154 legend->AddEntry(h, ""Histogram \""h\"" again"", ""l"");; 155 ; 156 legend->Draw();; 157}; 158End_Macro; 159 ; 160It is possible to draw the legend entries over several columns using; 161the method `SetNColumns()` like in the following example.; 162 ; 163Begin_Macro(source); 164{; 165 auto c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8cxx_source.html:4787,inherit,inherits,4787,doc/master/TLegend_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8cxx_source.html,3,['inherit'],['inherits']
Modifiability,"ttributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGListBox (const TGListBox &)=delete;  ; TGListBox operator= (const TGListBox &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListBox.html:33074,inherit,inherited,33074,doc/master/classTGListBox.html,https://root.cern,https://root.cern/doc/master/classTGListBox.html,1,['inherit'],['inherited']
Modifiability,"ttributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGButton (const TGButton &)=delete;  ; TGButton & operator= (const TGButton &)=delete;  . Friends; class TGButtonGroup;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButton.html:29257,inherit,inherited,29257,doc/master/classTGButton.html,https://root.cern,https://root.cern/doc/master/classTGButton.html,1,['inherit'],['inherited']
Modifiability,"ttributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TProcessUUID (const TProcessID &)=delete;  ; TProcessUUID & operator= (const TProcessUUID &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TProcessID; static std::atomic_uint fgNumber;  ; static TExMap * fgObjPIDs = nullptr;  ; static TProcessID * fgPID = nullptr;  Spin lock for initialization of fObjects. ;  ; static TObjArray * fgPIDs = nullptr;  . #include <TProcessUUID.h>. Inheritance diagram for TProcessUUID:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProcessUUID() [1/2]. TProcessUUID::TProcessUUID ; (; const TProcessID & ; ). privatedelete . ◆ TProcessUUID() [2/2]. TProcessUUID::TProcessUUID ; (; ). Default constructor. ; Definition at line 56 of file TProcessUUID.cxx. ◆ ~TProcessUUID(). TProcessUUID::~TProcessUUID ; (; ). virtual . Destructor. ; Definition at line 66 of file TProcessUUID.cxx. Member Function Docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessUUID.html:15725,inherit,inherited,15725,doc/master/classTProcessUUID.html,https://root.cern,https://root.cern/doc/master/classTProcessUUID.html,2,['inherit'],['inherited']
Modifiability,"ttributes |; List of all members ; TMVA::MethodRuleFit Class ReferenceTMVA. ; J Friedman's RuleFit method. ; Definition at line 48 of file MethodRuleFit.h. Public Member Functions;  MethodRuleFit (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  standard constructor ;  ;  MethodRuleFit (DataSetInfo &theData, const TString &theWeightFile);  constructor from weight file ;  ; virtual ~MethodRuleFit (void);  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  add the rules to XML node ;  ; const Ranking * CreateRanking ();  computes ranking of input variables ;  ; const std::vector< TMVA::DecisionTree * > & GetForest () const;  ; Double_t GetGDErrScale () const;  ; Int_t GetGDNPathSteps () const;  ; Double_t GetGDPathEveFrac () const;  ; Double_t GetGDPathStep () const;  ; Double_t GetGDValidEveFrac () const;  ; Double_t GetLinQuantile () const;  ; Double_t GetMaxFracNEve () const;  ; TDirectory * GetMethodBaseDir () const;  ; Double_t GetMinFracNEve () const;  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  returns MVA value for given event ;  ; Int_t GetNCuts () const;  ; Int_t GetNTrees () const;  ; TMVA::DecisionTree::EPruneMethod GetPruneMethod () const;  ; Double_t GetPruneStrength () const;  ; Int_t GetRFNendnodes () const;  ; Int_t GetRFNrules () const;  ; const TString GetRFWorkDir () const;  ; const RuleFit * GetRuleFitConstPtr () const;  ; RuleFit * GetRuleFitPtr ();  ; SeparationBase * GetSeparationBase () const;  ; const SeparationBase * GetSeparationBaseConst () const;  ; const std::vector< TMVA::Event * > & GetTrainingEvents () const;  ; Double_t GetTreeEveFrac () const;  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t);  RuleFit can handle classification with 2 classes. ;  ; virtual TClass * IsA () const;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  read ru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodRuleFit.html:893,variab,variables,893,doc/master/classTMVA_1_1MethodRuleFit.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodRuleFit.html,1,['variab'],['variables']
Modifiability,"ttributes |; List of all members ; TPosixCondition Class Reference. . Definition at line 33 of file TPosixCondition.h. Public Member Functions;  TPosixCondition (TMutexImp *m);  Create Condition variable. ;  ; virtual ~TPosixCondition ();  TCondition dtor. ;  ; Int_t Broadcast () override;  Broadcast is like signal but wakes all threads which have called Wait(). ;  ; TClass * IsA () const override;  ; Int_t Signal () override;  If one or more threads have called Wait(), Signal() wakes up at least one of them, possibly more. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TimedWait (ULong_t secs, ULong_t nanoSecs=0) override;  TimedWait() is given an absolute time to wait until. ;  ; Int_t Wait () override;  Wait for the condition variable to be signalled. ;  ;  Public Member Functions inherited from TConditionImp;  TConditionImp ();  ; virtual ~TConditionImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facili",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPosixCondition.html:1116,inherit,inherited,1116,doc/master/classTPosixCondition.html,https://root.cern,https://root.cern/doc/master/classTPosixCondition.html,2,['inherit'],['inherited']
Modifiability,"ttributes |; List of all members ; TWin32Condition Class Reference. . Definition at line 55 of file TWin32Condition.h. Public Member Functions;  TWin32Condition (TMutexImp *m);  Create Condition variable. ;  ; virtual ~TWin32Condition ();  TCondition dtor. ;  ; Int_t Broadcast () override;  Broadcast is like signal but wakes all threads which have called Wait(). ;  ; TClass * IsA () const override;  ; Int_t Signal () override;  If one or more threads have called Wait(), Signal() wakes up at least one of them, possibly more. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TimedWait (ULong_t secs, ULong_t nanoSecs=0) override;  TimedWait() is given an absolute time to wait until. ;  ; Int_t Wait () override;  Wait for the condition variable to be signalled. ;  ;  Public Member Functions inherited from TConditionImp;  TConditionImp ();  ; virtual ~TConditionImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facili",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Condition.html:1116,inherit,inherited,1116,doc/master/classTWin32Condition.html,https://root.cern,https://root.cern/doc/master/classTWin32Condition.html,2,['inherit'],['inherited']
Modifiability,"ttributes |; Private Attributes |; List of all members ; TDrawFeedback Class ReferencePROOF » PROOF kernel Libraries. ; Utility class to draw objects in the feedback list during queries. ; Draws histograms in separated canvases and user-defined objects via Draw(). Users requiring advanced treatment should implement their own version following this example. See also TStatsFeedback. ; Definition at line 35 of file TDrawFeedback.h. Public Member Functions;  TDrawFeedback (TProof *proof=0, TSeqCollection *names=0);  Constructor. ;  ;  ~TDrawFeedback () override;  Destructor. ;  ; void Feedback (TList *objs);  Display feedback. ;  ; const char * GetName () const override;  Returns name of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void SetOption (Option_t *option);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDrawFeedback.html:1234,inherit,inherited,1234,doc/master/classTDrawFeedback.html,https://root.cern,https://root.cern/doc/master/classTDrawFeedback.html,1,['inherit'],['inherited']
Modifiability,"ttributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGraphErrors; static Int_t CalculateScanfFields (const char *fmt);  Calculate scan fields. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGraph; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t CompareArg (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s argument (angle with respect to positive x-axis) is bigger than that of point number ""right"". ;  ; static Bool_t CompareRadius (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s distance to origin is bigger than that of point number ""right"". ;  ; static Bool_t CompareX (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if fX[left] > fX[right]. Can be used by Sort. ;  ; static Bool_t CompareY (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if fY[left] > fY[right]. Can be used by Sort. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar.html:28481,inherit,inherited,28481,doc/master/classTGraphPolar.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar.html,1,['inherit'],['inherited']
Modifiability,"ttributes. void PaintLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Draw this line with new coordinates. void PaintLineNDC(Double_t u1, Double_t v1, Double_t u2, Double_t v2); Draw this line with new coordinates in NDC. void Print(Option_t* option = """") const; Dump this line with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. Bool_t IsHorizontal(); Check whether this line is to be drawn horizontally. Bool_t IsVertical(); Check whether this line is to be drawn vertically. void SetNDC(Bool_t isNDC = kTRUE); Set NDC mode on if isNDC = kTRUE, off otherwise. void SetHorizontal(Bool_t set = kTRUE); Force the line to be drawn horizontally.; Makes fY2 equal to fY1. The line length is kept.; TArrow and TGaxis also get this function by inheritance. void SetVertical(Bool_t set = kTRUE); Force the line to be drawn vertically.; Makes fX2 equal to fX1. The line length is kept.; TArrow and TGaxis also get this function by inheritance. void Streamer(TBuffer& ); Stream an object of class TLine. Rectangle_t GetBBox(); Return the bounding Box of the Line. TPoint GetBBoxCenter(); Return the center of the BoundingBox as TPoint in pixels. void SetBBoxCenter(const TPoint& p); Set center of the BoundingBox. void SetBBoxCenterX(const Int_t x); Set X coordinate of the center of the BoundingBox. void SetBBoxCenterY(const Int_t y); Set Y coordinate of the center of the BoundingBox. void SetBBoxX1(const Int_t x); Set lefthandside of BoundingBox to a value; (resize in x direction on left). void SetBBoxX2(const Int_t x); Set righthandside of BoundingBox to a value; (resize in x direction on right). void SetBBoxY1(const Int_t y); Set top of BoundingBox to a value (resize in y direction on top). void SetBBoxY2(const Int_t y); Set bottom of BoundingBox to a value; (resize in y direction on bottom). Double_t GetX1() const; {return fX1;}. Double_t GetX2() const; {return fX2;}. Double_t GetY1() const; {retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLine.html:9366,inherit,inheritance,9366,root/html534/TLine.html,https://root.cern,https://root.cern/root/html534/TLine.html,6,['inherit'],['inheritance']
Modifiability,"ttributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNorm! Assume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHistFunc(); Default constructor. RooHistFunc(const char* name, const char* title, const RooArgSet& vars, const RooDataHist& dhist, Int_t intOrder = 0); Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; for the entire life span of this function. RooHistFunc(const char* name, const char* title, const RooArgList& funcObs, const RooArgList& histObs, const RooDataHist& dhist, Int_t intOrder = 0); Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; for the entire life span of this function. RooHistFunc(const RooHistFunc& other, const char* name = 0); Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHistFunc.html:38367,variab,variable,38367,root/html602/RooHistFunc.html,https://root.cern,https://root.cern/root/html602/RooHistFunc.html,4,['variab'],['variable']
Modifiability,"ttributes; FontStruct_t fFontStruct;  font ;  ; Int_t fHkeycode;  hot key code ;  ; TGHotString * fLabel;  menu title ;  ; TGPopupMenu * fMenu;  attached popup menu ;  ; GContext_t fNormGC;  ; GContext_t fSelGC;  normal and selection graphics contexts ;  ; Bool_t fState;  menu title state (active/not active) ;  ; Pixel_t fTextColor;  text color ;  ; void * fTitleData;  user data associated with selected item ;  ; Int_t fTitleId;  id of selected menu item ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgDefaultSelectedGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMenuTitle.html:24414,inherit,inherited,24414,doc/master/classTGMenuTitle.html,https://root.cern,https://root.cern/doc/master/classTGMenuTitle.html,1,['inherit'],['inherited']
Modifiability,"ttributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:02:47 2015 » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2PdfBinding_double_double_int_.html:44361,variab,variable,44361,root/html534/RooCFunction2PdfBinding_double_double_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2PdfBinding_double_double_int_.html,2,['variab'],['variable']
Modifiability,"ttributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:02:49 2015 » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2PdfBinding_double_int_double_.html:44361,variab,variable,44361,root/html534/RooCFunction2PdfBinding_double_int_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2PdfBinding_double_int_double_.html,2,['variab'],['variable']
Modifiability,"ttributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:25 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2PdfBinding_double_double_int_.html:46518,variab,variable,46518,root/html602/RooCFunction2PdfBinding_double_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2PdfBinding_double_double_int_.html,2,['variab'],['variable']
Modifiability,"ttributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:27 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2PdfBinding_double_int_double_.html:46518,variab,variable,46518,root/html602/RooCFunction2PdfBinding_double_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2PdfBinding_double_int_double_.html,2,['variab'],['variable']
Modifiability,"ttributes_t* fa); TGClient*TGObject::GetClient() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGFont*GetFont(const TGFont* font); TGFont*GetFont(FontStruct_t font); TGFont*GetFont(const char* font, Bool_t fixedDefault = kTRUE); TGFont*GetFont(const char* family, Int_t ptsize, Int_t weight, Int_t slant); char**GetFontFamilies(); virtual const char*TObject::GetIconName() const; Handle_tTGObject::GetId() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTGObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*NameOfFont(TGFont* font); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFontPool.html:3132,Inherit,InheritsFrom,3132,root/html532/TGFontPool.html,https://root.cern,https://root.cern/root/html532/TGFontPool.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ttributes_t* fa); TGClient*TGObject::GetClient() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGFont*GetFont(const TGFont* font); TGFont*GetFont(FontStruct_t font); TGFont*GetFont(const char* font, Bool_t fixedDefault = kTRUE); TGFont*GetFont(const char* family, Int_t ptsize, Int_t weight, Int_t slant); char**GetFontFamilies(); virtual const char*TObject::GetIconName() const; Handle_tTGObject::GetId() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTGObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*NameOfFont(TGFont* font); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFontPool.html:3102,Inherit,InheritsFrom,3102,root/html602/TGFontPool.html,https://root.cern,https://root.cern/root/html602/TGFontPool.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorFrame.html:1931,inherit,inheritance,1931,doc/master/classTGColorFrame.html,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html,11,['inherit'],['inheritance']
Modifiability,"tual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCanvas.html:4716,inherit,inheritance,4716,doc/master/classTGCanvas.html,https://root.cern,https://root.cern/doc/master/classTGCanvas.html,5,['inherit'],['inheritance']
Modifiability,"tual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableCell.html:3405,inherit,inheritance,3405,doc/master/classTGTableCell.html,https://root.cern,https://root.cern/doc/master/classTGTableCell.html,2,['inherit'],['inheritance']
Modifiability,"tual . Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ; Reimplemented from TObject.; Definition at line 56 of file TSPlot.h. ◆ MakeSPlot(). void TSPlot::MakeSPlot ; (; Option_t * ; option = ""v""). Calculates the sWeights. ; The option controls the print level; ""Q"" - no print out; ""V"" - prints the estimated #of events in species - default; ""VV"" - as ""V"" + the minuit printing + sums of weights for control . Definition at line 397 of file TSPlot.cxx. ◆ RefillHist(). void TSPlot::RefillHist ; (; Int_t ; type, . Int_t ; nvar, . Int_t ; nbins, . Double_t ; min, . Double_t ; max, . Int_t ; nspecies = -1 . ). The Fill...Hist() methods fill the histograms with the real limits on the variables This method allows to refill the specified histogram with user-set boundaries min and max. ; Parameters:. type = 1 - histogram of x variable #nvar; type = 2 - histogram of y variable #nvar; type = 3 - histogram of y_pdf for y #nvar and species #nspecies; type = 4 - histogram of x variable#nvar, species#nspecies, WITH sWeights; type = 5 - histogram of y variable#nvar, species#nspecies`, WITH sWeights . Definition at line 760 of file TSPlot.cxx. ◆ SetInitialNumbersOfSpecies(). void TSPlot::SetInitialNumbersOfSpecies ; (; Int_t * ; numbers). Set the initial number of events of each species - used as initial estimates in minuit. ; Definition at line 381 of file TSPlot.cxx. ◆ SetNEvents(). void TSPlot::SetNEvents ; (; Int_t ; ne). inline . Definition at line 85 of file TSPlot.h. ◆ SetNSpecies(). void TSPlot::SetNSpecies ; (; Int_t ; ns). inline . Definition at line 84 of file TSPlot.h. ◆ SetNX(). void TSPlot::SetNX ; (; Int_t ; nx). inline . Definition at line 82 of file TSPlot.h. ◆ SetNY(). void TSPlot::SetNY ; (; Int_t ; ny). inline . Definition at line 83 of file TSPlot.h. ◆ SetTree(). void TSPlot::SetTree ; (; TTree * ; tree). Set the input Tree. ; Definition at line 843 of file TSPlot.cxx. ◆ SetTreeSelection(). void TSPlot::SetTreeSele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:30994,variab,variable,30994,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,4,['variab'],['variable']
Modifiability,"tual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tHandleTimerEvent(Event_t* ev, TTimer* t); voidHandleUpdateSelected(TGFrame*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; static TVirtualDragManager*TVirtualDragManager::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; Bool_tTVirtualDragManager::IsDragging() const; Bool_tTVirtualDragManager::IsDropping() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; Bool_tTVirtualDragManager::IsPasting() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsStopped() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGuiBldDragManager.html:8997,Inherit,InheritsFrom,8997,root/html532/TGuiBldDragManager.html,https://root.cern,https://root.cern/root/html532/TGuiBldDragManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tHandleTimerEvent(Event_t* ev, TTimer* t); voidHandleUpdateSelected(TGFrame*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; static TVirtualDragManager*TVirtualDragManager::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; Bool_tTVirtualDragManager::IsDragging() const; Bool_tTVirtualDragManager::IsDropping() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; Bool_tTVirtualDragManager::IsPasting() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsStopped() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGuiBldDragManager.html:8976,Inherit,InheritsFrom,8976,root/html602/TGuiBldDragManager.html,https://root.cern,https://root.cern/root/html602/TGuiBldDragManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsAnaConvPdf.html:29593,config,config,29593,root/html530/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsAnaConvPdf.html,57,['config'],['config']
Modifiability,"tual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetOptions(TString options); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/Roo2DKeysPdf.html:27858,config,config,27858,root/html530/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html530/Roo2DKeysPdf.html,1,['config'],['config']
Modifiability,"tual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); voidsetNoRounding(bool flag = kTRUE); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooPoisson.html:27413,config,config,27413,root/html530/RooPoisson.html,https://root.cern,https://root.cern/root/html530/RooPoisson.html,1,['config'],['config']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; Bool_tIsCloseShown() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTabElement.html:8649,Inherit,InheritsFrom,8649,root/html532/TGTabElement.html,https://root.cern,https://root.cern/root/html532/TGTabElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; Bool_tIsCloseShown() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTabElement.html:8396,Inherit,InheritsFrom,8396,root/html602/TGTabElement.html,https://root.cern,https://root.cern/root/html602/TGTabElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSymLink() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFileItem.html:8987,Inherit,InheritsFrom,8987,root/html532/TGFileItem.html,https://root.cern,https://root.cern/root/html532/TGFileItem.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSymLink() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFileItem.html:8488,Inherit,InheritsFrom,8488,root/html602/TGFileItem.html,https://root.cern,https://root.cern/root/html602/TGFileItem.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::Map",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLBEntry.html:8692,Inherit,InheritsFrom,8692,root/html532/TGLBEntry.html,https://root.cern,https://root.cern/root/html532/TGLBEntry.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLBEntry.html:8584,Inherit,InheritsFrom,8584,root/html602/TGLBEntry.html,https://root.cern,https://root.cern/root/html602/TGLBEntry.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGScrollBarElement.html:8747,Inherit,InheritsFrom,8747,root/html532/TGScrollBarElement.html,https://root.cern,https://root.cern/root/html532/TGScrollBarElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGScrollBarElement.html:8562,Inherit,InheritsFrom,8562,root/html602/TGScrollBarElement.html,https://root.cern,https://root.cern/root/html602/TGScrollBarElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::Map",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGCanvas.html:9619,Inherit,InheritsFrom,9619,root/html532/TGCanvas.html,https://root.cern,https://root.cern/root/html532/TGCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidLayoutHeader(TGFrame* head); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGListView.html:9503,Inherit,InheritsFrom,9503,root/html532/TGListView.html,https://root.cern,https://root.cern/root/html532/TGListView.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidLayoutHeader(TGFrame* head); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGListView.html:9364,Inherit,InheritsFrom,9364,root/html602/TGListView.html,https://root.cern,https://root.cern/root/html602/TGListView.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidMapSubwindows();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGCanvas.html:9470,Inherit,InheritsFrom,9470,root/html602/TGCanvas.html,https://root.cern,https://root.cern/root/html602/TGCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGCanvas::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootEmbeddedCanvas.html:8816,Inherit,InheritsFrom,8816,root/html532/TRootEmbeddedCanvas.html,https://root.cern,https://root.cern/root/html532/TRootEmbeddedCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGCanvas::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCanv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootEmbeddedCanvas.html:8656,Inherit,InheritsFrom,8656,root/html602/TRootEmbeddedCanvas.html,https://root.cern,https://root.cern/root/html602/TRootEmbeddedCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColorFrame.html:8722,Inherit,InheritsFrom,8722,root/html532/TGColorFrame.html,https://root.cern,https://root.cern/root/html532/TGColorFrame.html,20,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGColorFrame.html:8658,Inherit,InheritsFrom,8658,root/html602/TGColorFrame.html,https://root.cern,https://root.cern/root/html602/TGColorFrame.html,20,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLBEntry::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGIconLBEntry.html:9078,Inherit,InheritsFrom,9078,root/html532/TGIconLBEntry.html,https://root.cern,https://root.cern/root/html532/TGIconLBEntry.html,8,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLBEntry::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGIconLBEntry.html:8907,Inherit,InheritsFrom,8907,root/html602/TGIconLBEntry.html,https://root.cern,https://root.cern/root/html602/TGIconLBEntry.html,8,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tIsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* sign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGButton.html:11263,Inherit,InheritsFrom,11263,root/html532/TGButton.html,https://root.cern,https://root.cern/root/html532/TGButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tIsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGButton.html:11136,Inherit,InheritsFrom,11136,root/html602/TGButton.html,https://root.cern,https://root.cern/root/html602/TGButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDockButton.html:9018,Inherit,InheritsFrom,9018,root/html532/TGDockButton.html,https://root.cern,https://root.cern/root/html532/TGDockButton.html,8,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGDockButton.html:8960,Inherit,InheritsFrom,8960,root/html602/TGDockButton.html,https://root.cern,https://root.cern/root/html602/TGDockButton.html,8,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsThresholdActive(); Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); voidLedClicked()SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGSpeedo.html:9169,Inherit,InheritsFrom,9169,root/html532/TGSpeedo.html,https://root.cern,https://root.cern/root/html532/TGSpeedo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsThresholdActive(); Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); voidLedClicked()SIGNAL ; virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGSpeedo.html:8962,Inherit,InheritsFrom,8962,root/html602/TGSpeedo.html,https://root.cern,https://root.cern/root/html602/TGSpeedo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMdiWinResizer.html:8589,Inherit,InheritsFrom,8589,root/html532/TGMdiWinResizer.html,https://root.cern,https://root.cern/root/html532/TGMdiWinResizer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGMdiWinResizer.html:8393,Inherit,InheritsFrom,8393,root/html602/TGMdiWinResizer.html,https://root.cern,https://root.cern/root/html602/TGMdiWinResizer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); voidHandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitPlugins(Option_t* opt = """"); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tIsCloseTabShown() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootBrowser.html:10709,Inherit,InheritsFrom,10709,root/html532/TRootBrowser.html,https://root.cern,https://root.cern/root/html532/TRootBrowser.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGTextButton::HandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGTextButton::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGedNameTextButton.html:9340,Inherit,InheritsFrom,9340,root/html532/TEveGedNameTextButton.html,https://root.cern,https://root.cern/root/html532/TEveGedNameTextButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGTextButton::HandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGTextButton::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGedNameTextButton.html:9297,Inherit,InheritsFrom,9297,root/html602/TEveGedNameTextButton.html,https://root.cern,https://root.cern/root/html602/TEveGedNameTextButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); voidHandleSplitterResize(Int_t delta); voidHandleSplitterStart(); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidLayout(); static voidTQObject::LoadRQ_OBJECT(); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGPack.html:9388,Inherit,InheritsFrom,9388,root/html532/TGPack.html,https://root.cern,https://root.cern/root/html532/TGPack.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); voidHandleSplitterResize(Int_t delta); voidHandleSplitterStart(); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTGWindow::LowerWindow(); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPack.html:9204,Inherit,InheritsFrom,9204,root/html602/TGPack.html,https://root.cern,https://root.cern/root/html602/TGPack.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; Bool_tHasUserControl() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); voidHighlightChildren(TGListTreeItem* item, Bool_t state, Bool_t draw); voidHighlightItem(TGListTreeItem* item); voidHighlightItem(TGListTreeItem* item, Bool_t state, Bool_t draw); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidHome(Bool_t select = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual voidTGContainer::InvertSelection()SIGNAL ; virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; Bool_tIsEventHandled() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGListTree.html:12768,Inherit,InheritsFrom,12768,root/html532/TGListTree.html,https://root.cern,https://root.cern/root/html532/TGListTree.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual Bool_tTestFunction(Double_t squareResidual, Double_t dResidur). Data Members; public:. enum EMDFPolyType { kMonomials; kChebyshev; kLegendre; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfBinVarXNumber of bin in independent variables; Int_tfBinVarYNumber of bin in dependent variables; Double_tfChi2Chi square of fit; TVectorDfCoefficientsVector of the final coefficients; TVectorDfCoefficientsRMSVector of RMS of coefficients; Double_tfCorrelationCoeffMulti Correlation coefficient; TMatrixDfCorrelationMatrixCorrelation matrix; Double_tfErrorError from parameterization; TVirtualFitter*fFitter! Fit object (MINUIT); Int_t*fFunctionCodes[fMaxFunctions] acceptance code; TMatrixDfFunctionsFunctions evaluated over sample; Byte_tfHistogramMaskBit pattern of hisograms used; TList*fHistogramsList of histograms; Bool_tfIsUserFunctionFlag for user defined function; Bool_tfIsVerbose; Double_tfMaxAngleMax angle for acepting new function; Int_tfMaxFuncNVfMaxFunctions*fNVariables; Int_tfMaxFunctionsmax number of functions; Int_t*fMaxPowers[fNVariables] maximum powers; Int_t*fMaxPowersFinal[fNVariables] maximum powers from fit;; Double_tfMaxQuantityMax value of dependent quantity; Double_tfMaxResidualMax redsidual value; Int_tfMaxResidualRowRow giving max residual; Int_tfMaxStudymax functions to study; Int_tfMaxTermsMax terms expected in final expr.; TVectorDfMaxVariablesmax value of independent variables; Double_tfMeanQuantityMean of dependent quantity; TVectorDfMeanVariablesmean value of independent variables; Double_tfMinAngleMin angle for acepting new function; Double_tfMinQuantityMin value of dependent quantity; Double_tfMinRelativeErrorMin relative error accepted; Double_tfMinResidualMin redsidual value; Int_tfMinResidualRowRow giving min residual; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:21654,variab,variables,21654,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,15,"['parameteriz', 'variab']","['parameterization', 'variables']"
Modifiability,"tual Double_tGetRMS(Int_t axis = 1) const; virtual Double_tGetRMSError(Int_t axis = 1) const; virtual Double_tGetSkewness(Int_t axis = 1) const; virtual voidGetStats(Double_t* stats) const; Double_tGetStdDev(Int_t axis = 1) const; Double_tGetStdDevError(Int_t axis = 1) const; virtual Double_tGetSumOfWeights() const; virtual TArrayD*GetSumw2(); virtual const TArrayD*GetSumw2() const; virtual Int_tGetSumw2N() const; virtual Float_tGetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tGetTitleFont(Option_t* axis = ""X"") const; virtual Float_tGetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tGetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*GetXaxis() const; TAxis*GetYaxis() const; TAxis*GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBinOverflow(Int_t bin) const; Bool_tIsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tKolmogorovTest(const TH1* h2, Option_t* option = """")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:25894,Inherit,InheritsFrom,25894,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; virtual Double_tRooAbsTestStatistic::globalNormalization() const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsOptTestStatistic::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsOptTestStatistic::isSealed() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNLLVar.html:16895,Inherit,InheritsFrom,16895,root/html532/RooNLLVar.html,https://root.cern,https://root.cern/root/html532/RooNLLVar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet& obs) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProduct.html:15267,Inherit,InheritsFrom,15267,root/html532/RooProduct.html,https://root.cern,https://root.cern/root/html532/RooProduct.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHistFunc.html:15516,Inherit,InheritsFrom,15516,root/html532/RooHistFunc.html,https://root.cern,https://root.cern/root/html532/RooHistFunc.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual Double_tTH1::GetStdDevError(Int_t axis = 1) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidHoneycomb(Double_t xstart, Double_t ystart, Double_t a, Int_t k, Int_t s); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, const Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, const Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, const Option_t*) const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::Is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH2Poly.html:16253,Inherit,InheritsFrom,16253,root/html604/TH2Poly.html,https://root.cern,https://root.cern/root/html604/TH2Poly.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual Double_t GetBinErrorSqUnchecked (Int_t bin) const;  ; Bool_t GetStatOverflowsBehaviour () const;  ; Bool_t IsEmpty () const;  Check if a histogram is empty (this is a protected method used mainly by TH1Merger ) ;  ; int LoggedInconsistency (const char *name, const TH1 *h1, const TH1 *h2, bool useMerge=false) const;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ; virtual void UpdateBinContent (Int_t bin, Double_t content);  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Protected Attributes; Int_t fKCur;  ; Int_t fKOrd;  ; Int_t fNIn;  ; Int_t fReady;  ;  Protected Attributes inherited from TH1; Short_t fBarOffset;  (1000*offset) for bar charts or legos ;  ; Short_t fBarWidth;  (1000*width) for bar charts or legos ;  ; EBinErrorOpt fBinStatErrOpt;  Option for bin statistical errors. ;  ; Double_t * fBuffer;  [fBufferSize] entry buffer ;  ; Int_t fBufferSize;  fBuffer size ;  ; TArrayD fContour;  Array to display contour levels. ;  ; Int_t fDimension;  ! Histogram dimension (1, 2 or 3 dim) ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this histogram ;  ; Double_t fEntries;  Number of entries. ;  ; TList * fFunctions;  ->Pointer to list of functions (fits and user) ;  ; Double_t * fIntegral;  ! Integral of bins used by GetRandom ;  ; Double_t fMaximum;  Maximum value for plotting. ;  ; Double_t fMi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1K.html:45200,inherit,inherited,45200,doc/master/classTH1K.html,https://root.cern,https://root.cern/doc/master/classTH1K.html,1,['inherit'],['inherited']
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. Int_tTGRowLayout::fSepinterval between frames; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TGVerticalLayout::fListlist of frames to arrange; TGCompositeFrame*TGVerticalLayout::fMaincontainer frame; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Layout(); Make a column layout of all frames in the list. TGDimension GetDefaultSize() const; Return default dimension of the column layout. void SavePrimitive(ostream& out, Option_t* = """"). TGLayoutHints& operator=(const TGLayoutHints&). TGFrameElement& operator=(const TGFrameElement&). TGColumnLayout(TGCompositeFrame* main, Int_t s = 0); { }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGColumnLayout.html:7192,Inherit,Inheritance,7192,root/html604/TGColumnLayout.html,https://root.cern,https://root.cern/root/html604/TGColumnLayout.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. Int_tTGRowLayout::fSepinterval between frames; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TGVerticalLayout::fListlist of frames to arrange; TGCompositeFrame*TGVerticalLayout::fMaincontainer frame; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Layout(); Make a column layout of all frames in the list. TGDimension GetDefaultSize() const; Return default dimension of the column layout. void SavePrimitive(ostream& out, Option_t* = """"). TGLayoutHints& operator=(const TGLayoutHints&). TGFrameElement& operator=(const TGFrameElement&). TGColumnLayout(TGCompositeFrame* main, Int_t s = 0); { }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:50; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGColumnLayout.html:7192,Inherit,Inheritance,7192,root/html602/TGColumnLayout.html,https://root.cern,https://root.cern/root/html602/TGColumnLayout.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TPBReadType::EReadTypekReadFull; static TPBReadType::EReadTypekReadNo; static TPBReadType::EReadTypekReadNotSpecified; static TPBReadType::EReadTypekReadOpt; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfName; TPBReadType::EReadTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPBReadType(EReadType type = kReadOpt); { }. virtual ~TPBReadType(); { }. EReadType GetType() const; { return fType; }. Bool_t IsReadFull() const; { return (fType == kReadFull) ? kTRUE : kFALSE; }. Bool_t IsReadOpt() const; { return (fType == kReadOpt) ? kTRUE : kFALSE; }. Bool_t IsReadNo() const; { return (fType == kReadNo) ? kTRUE : kFALSE; }. const char * GetName() const; { return fName; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPBReadType.html:5971,Inherit,Inheritance,5971,root/html602/TPBReadType.html,https://root.cern,https://root.cern/root/html602/TPBReadType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TPBReadType::EReadTypekReadFull; static TPBReadType::EReadTypekReadNo; static TPBReadType::EReadTypekReadNotSpecified; static TPBReadType::EReadTypekReadOpt; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfName; TPBReadType::EReadTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPBReadType(EReadType type = kReadOpt); { }. virtual ~TPBReadType(); { }. EReadType GetType() const; { return fType; }. Bool_t IsReadFull() const; { return (fType == kReadFull) ? kTRUE : kFALSE; }. Bool_t IsReadOpt() const; { return (fType == kReadOpt) ? kTRUE : kFALSE; }. Bool_t IsReadNo() const; { return (fType == kReadNo) ? kTRUE : kFALSE; }. const char * GetName() const; { return fName; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-09-08 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPBReadType.html:5971,Inherit,Inheritance,5971,root/html604/TPBReadType.html,https://root.cern,https://root.cern/root/html604/TPBReadType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TClassDocInfo(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TDictionary*fClassclass (or typedef) represented by this info object; TStringfDeclFileNameheader; TStringfDeclFileSysNamefile system's location of the header; TStringfHtmlFileNamename of the HTML doc file; TStringfImplFileNamesource; TStringfImplFileSysNamefile system's location of the source; TModuleDocInfo*fModulemodule this class is in; Bool_tfSelectedselected for doc output; TListfTypedefstypedefs to this class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const char* GetName() const; Get the class name, or (UNKNOWN) is no TClass object was found. ULong_t Hash() const; Forward to TClass::Hash(), return -1 if no TClass object was found. Int_t Compare(const TObject* obj) const; Compare two TClassDocInfo objects; used for sorting. TClassDocInfo(TClass* cl, const char* htmlfilename = """", const char* fsdecl = """", const char* fsimpl = """", const char* decl = 0, const char* impl = 0); initialize the object. { }. TClassDocInfo(TDictionary* cl, const char* htmlfilename = """", const char* fsdecl = """", const char* fsimpl = """", const char* decl = 0, const char* impl = 0); { }. virtual ~TClassDocInfo(); {}. TDictionary* GetClass() const; { return fClass; }. const char* GetHtmlFileName() const; { return fHtmlFileName; }. const char* GetDeclFileName() const; { return fDeclFileName; }. const char* GetImplFileName() const; { return fImplFileName; }. const char* GetDeclFileSysName() const; { return fDeclFil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClassDocInfo.html:6510,Inherit,Inheritance,6510,root/html532/TClassDocInfo.html,https://root.cern,https://root.cern/root/html532/TClassDocInfo.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TEveFrameBox(const TEveFrameBox&); TEveFrameBox&operator=(const TEveFrameBox&). Data Members; public:. enum EFrameType_e { kFT_None; kFT_Quad; kFT_Box; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tfBackColor; UChar_tfBackRGBA[4]; map<TEveElement*,int>TEveRefBackPtr::fBackRefs; Bool_tfDrawBack; Color_tfFrameColor; Bool_tfFrameFill; Float_t*fFramePoints[fFrameSize]; UChar_tfFrameRGBA[4]; Int_tfFrameSize; TEveFrameBox::EFrameType_efFrameType; Float_tfFrameWidth; Int_tTEveRefCnt::fRefCount. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveFrameBox(); Default constructor. ~TEveFrameBox(); Destructor. void SetAAQuadXY(Float_t x, Float_t y, Float_t z, Float_t dx, Float_t dy); Setup for axis-aligned rectangle with one corner at x, y, z and; given sizes in x (dx) and y (dy). void SetAAQuadXZ(Float_t x, Float_t y, Float_t z, Float_t dx, Float_t dz); Setup for axis-aligned rectangle with one corner at x, y, z and; given sizes in x (dx) and z (dz). void SetQuadByPoints(const Float_t* pointArr, Int_t nPoints); Setup frame with explicitly given corner coordinates.; Arguments:; pointArr - array containing the 3D points; nPoint - number of points, size of array divided by 3. void SetAABox(Float_t x, Float_t y, Float_t z, Float_t dx, Float_t dy, Float_t dz); Setup for axis-aligned box with one corner at x, y, z and; given sizes in x (dx), y (dy) and z (dz). void SetAABoxCenterHalfSize(Float_t x, Float_t y, Float_t z, Float_t dx, Float_t dy, Float_t dz); Setup for axis-aligned bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveFrameBox.html:6896,Inherit,Inheritance,6896,root/html532/TEveFrameBox.html,https://root.cern,https://root.cern/root/html532/TEveFrameBox.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TProofDesc(const TProofDesc&); TProofDesc&operator=(const TProofDesc&). Data Members; public:. enum EStatus { kUnknown; kIdle; kRunning; kShutdown; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfLocalIdID in the local list; TProof*fProofRelated instance of TProof; Int_tfRemoteIdRemote ID assigned by the coordinator to the proofserv; Int_tfStatusSession status (see EStatus); TStringfUrlUrl of the connection. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(Option_t* opt = """") const; Dump the content to the screen. TProofMgr& operator=(const TProofDesc& ). const char * GetUrl(); { return fUrl.GetUrl(); }. TProofDesc(const TProofDesc& ). TProofDesc(const char* tag = 0, const char* alias = 0, const char* url = 0, Int_t id = -1, Int_t remid = -1, Int_t status = kIdle, TProof* p = 0); { SetStatus(status); }. virtual ~TProofDesc(); { }. Int_t GetLocalId() const; { return fLocalId; }. TProof * GetProof() const; { return fProof; }. Int_t GetRemoteId() const; { return fRemoteId; }. Int_t GetStatus() const; { return fStatus; }. Bool_t IsIdle() const; { return (fStatus == kIdle) ? kTRUE : kFALSE; }. Bool_t IsRunning() const; { return (fStatus == kRunning) ? kTRUE : kFALSE; }. Bool_t IsShuttingDown() const; { return (fStatus == kShutdown) ? kTRUE : kFALSE; }. Bool_t MatchId(Int_t id) const; { return (fLocalId == id); }. void SetStatus(Int_t st); { fStatus = (st < kIdle || st > kShutdown) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDesc.html:6405,Inherit,Inheritance,6405,root/html532/TProofDesc.html,https://root.cern,https://root.cern/root/html532/TProofDesc.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGeoCacheState(const TGeoCacheState&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGeoCacheState&operator=(const TGeoCacheState&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfCapacitymaximum level stored; Int_tfIdBranch[30]ID branch; Int_tfLevellevel in the current branch; TGeoHMatrix**fMatPtrarray of matrix pointers; TGeoHMatrix**fMatrixBranchglobal matrices for last branch; Int_tfNmanynumber of overlapping nodes on current branch; TGeoNode**fNodeBranchlast node branch stored; Bool_tfOverlappingoverlap flag; Double_tfPoint[3]last point in master frame; Int_tfStartstart level. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoCacheState(); Default ctor. TGeoCacheState(Int_t capacity); Ctor. TGeoCacheState(const TGeoCacheState& ); copy constructor. TGeoCacheState& operator=(const TGeoCacheState& ); assignment operator. ~TGeoCacheState(); Dtor. void SetState(Int_t level, Int_t startlevel, Int_t nmany, Bool_t ovlp, Double_t* point = 0); Fill current modeller state. Bool_t GetState(Int_t& level, Int_t& nmany, Double_t* point) const; Restore a modeler state. » Author: Andrei Gheata 18/03/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id: TGeoCache.h 21425 2007-12-17 15:59:27Z brun $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCacheState.html:5756,Inherit,Inheritance,5756,root/html532/TGeoCacheState.html,https://root.cern,https://root.cern/root/html532/TGeoCacheState.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum ESlaveStatus { kActive; kNotActive; kBad; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStringfDataDirdirectory for user data; TStringfHostNamehostname this slave is running on; TStringfMsdmass storage domain slave is in; TStringfOrdinalslave ordinal; Int_tfPerfIndexrelative performance of this slave; TSlaveInfo::ESlaveStatusfStatusslave status; SysInfo_tfSysInfoInfomation about its hardware. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Compare(const TObject* obj) const; Used to sort slaveinfos by ordinal. Bool_t IsEqual(const TObject* obj) const; Used to compare slaveinfos by ordinal. void Print(Option_t* option = """") const; Print slave info. If opt = ""active"" print only the active; slaves, if opt=""notactive"" print only the not active slaves,; if opt = ""bad"" print only the bad slaves, else; print all slaves. void SetSysInfo(SysInfo_t si); Setter for fSysInfo. TProofInterruptHandler& operator=(const TSlaveInfo& ). TSlaveInfo(const char* ordinal = """", const char* host = """", Int_t perfidx = 0, const char* msd = """", const char* datadir = """"); { }. const char * GetDataDir() const; { return fDataDir; }. const char * GetMsd() const; { return fMsd; }. const char * GetName() const; { return fHostName; }. const char * GetOrdinal() const; { return fOrdinal; }. SysInfo_t GetSysInfo() const; { return fSysInfo; }. void SetStatus(TSlaveInfo::ESlaveStatus stat); { fStatus = st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSlaveInfo.html:6007,Inherit,Inheritance,6007,root/html534/TSlaveInfo.html,https://root.cern,https://root.cern/root/html534/TSlaveInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum ESlaveStatus { kActive; kNotActive; kBad; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStringfDataDirdirectory for user data; TStringfHostNamehostname this slave is running on; TStringfMsdmass storage domain slave is in; TStringfOrdinalslave ordinal; Int_tfPerfIndexrelative performance of this slave; TSlaveInfo::ESlaveStatusfStatusslave status; SysInfo_tfSysInfoInfomation about its hardware. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Compare(const TObject* obj) const; Used to sort slaveinfos by ordinal. void Print(Option_t* option = """") const; Print slave info. If opt = ""active"" print only the active; slaves, if opt=""notactive"" print only the not active slaves,; if opt = ""bad"" print only the bad slaves, else; print all slaves. void SetSysInfo(SysInfo_t si); Setter for fSysInfo. TProofInterruptHandler& operator=(const TSlaveInfo& ). TSlaveInfo(const char* ordinal = """", const char* host = """", Int_t perfidx = 0, const char* msd = """", const char* datadir = """"); { }. const char * GetDataDir() const; { return fDataDir; }. const char * GetMsd() const; { return fMsd; }. const char * GetName() const; { return fHostName; }. const char * GetOrdinal() const; { return fOrdinal; }. SysInfo_t GetSysInfo() const; { return fSysInfo; }. void SetStatus(TSlaveInfo::ESlaveStatus stat); { fStatus = stat; }. Bool_t IsSortable() const; { return kTRUE; }. » Author: Fons Rademakers 13",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSlaveInfo.html:5964,Inherit,Inheritance,5964,root/html532/TSlaveInfo.html,https://root.cern,https://root.cern/root/html532/TSlaveInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Int_t ImportParticles (TClonesArray *particles, Option_t *option="""");  It reads the /HEPEVT/ common block which has been filled by the GenerateEvent method. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint one event. ;  ; virtual void SetParameter (const char *, Double_t);  ; virtual void SetPtCut (Float_t ptcut=0);  Set Pt threshold below which primaries are not drawn. ;  ; virtual void SetViewRadius (Float_t rbox=1000);  Set lower and upper values of the view range. ;  ; virtual void SetViewRange (Float_t xmin=-10000, Float_t ymin=-10000, Float_t zmin=-10000, Float_t xmax=10000, Float_t ymax=10000, Float_t zmax=10000);  Set lower and upper values of the view range. ;  ; virtual void ShowNeutrons (Bool_t show=1);  Set flag to display or not neutrons. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenerator.html:6049,inherit,inherited,6049,doc/master/classTGenerator.html,https://root.cern,https://root.cern/doc/master/classTGenerator.html,1,['inherit'],['inherited']
Modifiability,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *whe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootIconList.html:5319,inherit,inherit,5319,doc/master/classTRootIconList.html,https://root.cern,https://root.cern/doc/master/classTRootIconList.html,1,['inherit'],['inherit']
Modifiability,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJobStatusList.html:5168,inherit,inherit,5168,doc/master/classTGridJobStatusList.html,https://root.cern,https://root.cern/doc/master/classTGridJobStatusList.html,12,['inherit'],['inherit']
Modifiability,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewPubDataMembers.html:3594,inherit,inherit,3594,doc/master/classTViewPubDataMembers.html,https://root.cern,https://root.cern/doc/master/classTViewPubDataMembers.html,2,['inherit'],['inherit']
Modifiability,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:12385,inherit,inherit,12385,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,3,['inherit'],['inherit']
Modifiability,"tual Int_t Merge (TCollection *list);  Merge this list with the lists from the collection. ;  ; virtual Long64_t Next ();  Return the next non-zero entry index (next after fLastIndexQueried) this function is faster than GetEntry() ;  ; virtual void OptimizeStorage ();  Checks if the array representation is more economical and if so, switches to it. ;  ; void Print (const Option_t *option="""") const override;  Print this list. ;  ; virtual Int_t RelocatePaths (const char *newloc, const char *oldloc=nullptr);  Relocate the file paths. ;  ; virtual Int_t ScanPaths (TList *roots, bool notify=true);  Scan the paths to find the common roots. ;  ; virtual void SetDirectory (TDirectory *dir);  Add reference to directory dir. dir can be 0. ;  ; virtual void SetEntriesToProcess (Long64_t nen);  ; virtual void SetFileName (const char *filename);  ; virtual void SetReapplyCut (bool apply=false);  ; virtual void SetShift (bool shift);  ; virtual void SetTreeName (const char *treename);  ; virtual void SetTreeNumber (Int_t index);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash val",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryListArray.html:8775,inherit,inherited,8775,doc/master/classTEntryListArray.html,https://root.cern,https://root.cern/doc/master/classTEntryListArray.html,1,['inherit'],['inherited']
Modifiability,"tual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TMemoryRegulator fRegulator {};  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/bindings/pyroot/pythonizations/src/TMemoryRegulator.h>.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html:9159,inherit,inherited,9159,doc/master/classPyROOT_1_1RegulatorCleanup.html,https://root.cern,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html,1,['inherit'],['inherited']
Modifiability,"tual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void UpdateCache () const;  largest box diagonal seen in OfInterest() - used when bootstrapping interest box ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fCacheDirty;  ; TGLMatrix fCamBase;  ; TGLMatrix fCamTrans;  ; TGLVector3 * fCenter;  ; TGLMatrix fClipM;  modelView matrix (cached) ;  ; TGLVector3 fDefCenter;  ; Double_t fDollyDefault;  last applied far-clip ;  ; Double_t fDollyDistance;  ; TGLVector3 fExtCenter;  ; Bool_t fExternalCenter;  ; Double_t fFarClip;  last applied near-clip ;  ; TGLVector3 fFDCenter;  ; Bool_t fFixDefCenter;  ; TGLPlane fFrustumPlanes [kPlanesPerFrustum];  object space clip matrix (cached) ;  ; TGLBoundingBox fInterestBox;  viewport (GL coords - origin bottom left) ;  ; Double_t fLargestSeen;  the interest box - created in UpdateInterest() ;  ; TGLMatrix fLastNoPickProjM;  timestamp ;  ; TGLMatrix fModVM;  projection matrix (cached) ;  ; Double_t fNearClip;  current camera center ;  ; TGLM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLCamera.html:17625,inherit,inherited,17625,doc/master/classTGLCamera.html,https://root.cern,https://root.cern/doc/master/classTGLCamera.html,1,['inherit'],['inherited']
Modifiability,"tual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTSymLazy (const TMatrixTSymLazy< Element > &);  ; void operator= (const TMatrixTSymLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixTSym< Element > &m) const =0;  . Friends; class TMatrixTBase< Element >;  ; class TMatrixTSym< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSymLazy.html:9341,inherit,inherited,9341,doc/master/classTMatrixTSymLazy.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html,1,['inherit'],['inherited']
Modifiability,"tual RooStats::SamplingDistribution*GetSamplingDistribution(RooArgSet& paramsOfInterest); virtual RooStats::TestStatistic*GetTestStatistic() const; virtual voidInitialize(RooAbsArg& testStatistic, RooArgSet& paramsOfInterest, RooArgSet& nuisanceParameters); virtual TClass*IsA() const; RooStats::TestStatSampler&operator=(const RooStats::TestStatSampler&); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetGlobalObservables(const RooArgSet&); virtual voidSetNuisanceParameters(const RooArgSet&); virtual voidSetObservables(const RooArgSet&); virtual voidSetParametersForTestStat(const RooArgSet&); virtual voidSetPdf(RooAbsPdf&); virtual voidSetPriorNuisance(RooAbsPdf*); virtual voidSetSamplingDistName(const char* name); virtual voidSetTestSize(Double_t size); virtual voidSetTestStatistic(RooStats::TestStatistic* testStatistic); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TestStatSampler(); TestStatSampler();. {}. SamplingDistribution* GetSamplingDistribution(RooArgSet& paramsOfInterest); Main interface to get a ConfInterval, pure virtual. Double_t EvaluateTestStatistic(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. TestStatistic* GetTestStatistic() const; Get the TestStatistic. Double_t ConfidenceLevel() const; Get the Confidence level for the test. void Initialize(RooAbsArg& testStatistic, RooArgSet& paramsOfInterest, RooArgSet& nuisanceParameters); Common Initialization. void SetPdf(RooAbsPdf& ); Set the Pdf, add to the the workspace if not already there. void SetPriorNuisance(RooAbsPdf* ); How to randomize the prior. Set to NULL to deactivate randomization. void SetParametersForTestStat(const RooArgSet& ); specify the values of parameters used when evaluating test statistic. void SetNuisanceParameters(const RooArgSet& ); REMOVE TH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__TestStatSampler.html:1835,Inherit,Inheritance,1835,root/html532/RooStats__TestStatSampler.html,https://root.cern,https://root.cern/root/html532/RooStats__TestStatSampler.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualX; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualX *& Instance ();  Returns gVirtualX global. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:46649,inherit,inherited,46649,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,2,['inherit'],['inherited']
Modifiability,"tual Style_tTAttFill::GetFillStyle() const; Float_tGetH1() const; Float_tGetH2() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Float_tGetTl1() const; Float_tGetTl2() const; Float_tGetTwist() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTRA.html:5275,Inherit,InheritsFrom,5275,root/html532/TGTRA.html,https://root.cern,https://root.cern/root/html532/TGTRA.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual Style_tTAttFill::GetFillStyle() const; Float_tGetH1() const; Float_tGetH2() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Float_tGetTl1() const; Float_tGetTl2() const; Float_tGetTwist() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTRA.html:5016,Inherit,InheritsFrom,5016,root/html602/TGTRA.html,https://root.cern,https://root.cern/root/html602/TGTRA.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual TFileCollection*GetDataSet(const char* uri, const char* server = 0); virtual TMap*GetDataSets(const char* uri, UInt_t = TDataSetManager::kExport); static TList*GetDataSetSrvMaps(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetGroupQuota(const char* group); virtual TMap*GetGroupQuotaMap(); virtual Long64_tGetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TMap*GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group = 0, const char* user = 0, const char* dspath = 0, Long_t mtime = 0, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDataSetManager.html:3300,Inherit,InheritsFrom,3300,root/html532/TDataSetManager.html,https://root.cern,https://root.cern/root/html532/TDataSetManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual TFileCollection*GetDataSet(const char* uri, const char* server = 0); virtual TMap*GetDataSets(const char* uri, UInt_t = TDataSetManager::kExport); static TList*GetDataSetSrvMaps(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetGroupQuota(const char* group); virtual TMap*GetGroupQuotaMap(); virtual Long64_tGetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TMap*GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group = 0, const char* user = 0, const char* dspath = 0, Long_t mtime = 0, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataSetManager.html:3425,Inherit,InheritsFrom,3425,root/html602/TDataSetManager.html,https://root.cern,https://root.cern/root/html602/TDataSetManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveClass.html:11310,inherit,inherits,11310,doc/master/classTPaveClass.html,https://root.cern,https://root.cern/doc/master/classTPaveClass.html,8,['inherit'],['inherits']
Modifiability,"tual TObject*TObject::FindObject(const TObject* obj) const; const char*TArchiveFile::GetArchiveName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TArchiveMember*TArchiveFile::GetMember() const; Long64_tTArchiveFile::GetMemberFilePosition() const; Int_tTArchiveFile::GetMemberIndex() const; const char*TArchiveFile::GetMemberName() const; TObjArray*TArchiveFile::GetMembers() const; virtual const char*TObject::GetName() const; Int_tTArchiveFile::GetNumberOfMembers() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TArchiveFile*TArchiveFile::Open(const char* url, TFile* file); virtual Int_tOpenArchive(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TZIPFile.html:4799,Inherit,InheritsFrom,4799,root/html532/TZIPFile.html,https://root.cern,https://root.cern/root/html532/TZIPFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual TObject*TObject::FindObject(const TObject* obj) const; const char*TArchiveFile::GetArchiveName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TArchiveMember*TArchiveFile::GetMember() const; Long64_tTArchiveFile::GetMemberFilePosition() const; Int_tTArchiveFile::GetMemberIndex() const; const char*TArchiveFile::GetMemberName() const; TObjArray*TArchiveFile::GetMembers() const; virtual const char*TObject::GetName() const; Int_tTArchiveFile::GetNumberOfMembers() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TArchiveFile*TArchiveFile::Open(const char* url, TFile* file); virtual Int_tOpenArchive(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TZIPFile.html:4747,Inherit,InheritsFrom,4747,root/html602/TZIPFile.html,https://root.cern,https://root.cern/root/html602/TZIPFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetGrid() const; virtual const char*GetHomeDirectory(); const char*GetHost() const; virtual const char*TObject::GetIconName() const; virtual TGridJDL*GetJDLGenerator(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; Int_tGetPort() const; const char*GetPw() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUser() const; const char*GridUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsConnected() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tKill(TGridJob* gridjob); virtual Bool_tKillById(TString); virtual TGridResult*LocateSites(); virtual voidTObject::ls(Option_t* option = """") const; virtual TGridResult*Ls(const char* = """", Option_t* = """", Bool_t = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Int_tMkdir(const char* = """", Option_t* = """", Bool_t = kFALSE); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TGridCollection*OpenCollection(const char*, UInt_t = 1000000); virtual TGridCollection*OpenCollectionQuery(TGridResult*, Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGrid.html:3221,Inherit,InheritsFrom,3221,root/html532/TGrid.html,https://root.cern,https://root.cern/root/html532/TGrid.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual TPaveLabel * DrawPaveLabel (Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char *label, Option_t *option="""");  Draw this pavelabel with new coordinates. ;  ; const char * GetLabel () const;  ; const char * GetTitle () const override;  Returns title of object. ;  ; TClass * IsA () const override;  ; TPaveLabel & operator= (const TPaveLabel &pavelabel);  TPaveLabel assign operator. ;  ; void Paint (Option_t *option="""") override;  Paint this pavelabel with its current attributes. ;  ; virtual void PaintPaveLabel (Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char *label, Option_t *option="""");  Draw this pavelabel with new coordinates. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetLabel (const char *label);  ; void Streamer (TBuffer &) override;  Stream an object of class TPave. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TPave;  TPave ();  Pave default constructor. ;  ;  TPave (const TPave &pave);  Pave copy constructor. ;  ;  TPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; virtual TPave * DrawPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Int_t GetBorderSize () const;  ; Double_t GetCornerRadius () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Option_t * GetOption () const override;  ; Int_t GetSha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveClass.html:3682,inherit,inherited,3682,doc/master/classTPaveClass.html,https://root.cern,https://root.cern/doc/master/classTPaveClass.html,2,['inherit'],['inherited']
Modifiability,"tual TVirtualStreamerInfo*GetInfo(); virtual TProcessID*GetLastProcessID(TRefTable* reftable) const; virtual Int_tGetMapCount() const; virtual voidGetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*TBuffer::GetParent() const; virtual UShort_tGetPidOffset() const; ReAllocCharFun_tTBuffer::GetReAllocFunc() const; virtual const char*TObject::GetTitle() const; virtual UInt_tGetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidIncrementLevel(TVirtualStreamerInfo* info); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTBuffer::IsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tTBuffer::IsWriting() const; Bool_tTObject::IsZombie() const; Int_tTBuffer::Length() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMapObject(const TObject* obj, UInt_t offset = 1); virtual voidMapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBufferFile.html:4500,Inherit,InheritsFrom,4500,root/html532/TBufferFile.html,https://root.cern,https://root.cern/root/html532/TBufferFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual TVirtualStreamerInfo*GetInfo(); virtual TProcessID*GetLastProcessID(TRefTable* reftable) const; virtual Int_tGetMapCount() const; virtual voidGetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*TBuffer::GetParent() const; virtual UShort_tGetPidOffset() const; ReAllocCharFun_tTBuffer::GetReAllocFunc() const; virtual const char*TObject::GetTitle() const; virtual UInt_tGetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidIncrementLevel(TVirtualStreamerInfo* info); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTBuffer::IsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tTBuffer::IsWriting() const; Bool_tTObject::IsZombie() const; Int_tTBuffer::Length() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMapObject(const TObject* obj, UInt_t offset = 1); virtual voidMapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferFile.html:4303,Inherit,InheritsFrom,4303,root/html602/TBufferFile.html,https://root.cern,https://root.cern/root/html602/TBufferFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; ROOT::TSchemaRule::ReadFuncPtr_tGetReadFunc(); ROOT::TSchemaRule::ReadRawFuncPtr_tGetReadRawFunc(); virtual Int_tTStreamerElement::GetSize() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTStreamerElement::HasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTStreamerElement::Init(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTStreamerElement::IsaPointer() const; virtual Bool_tTStreamerElement::IsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTStreamerElement::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerArtificial.html:3686,Inherit,InheritsFrom,3686,root/html532/TStreamerArtificial.html,https://root.cern,https://root.cern/root/html532/TStreamerArtificial.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual const char*GetCollectionEntryName(TObject* entry) const; voidTObject::MakeZombie(); virtual voidPrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; virtual voidPrintCollectionHeader(Option_t* option) const. private:. voidoperator=(const TCollection&). Data Members; public:. enum { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfNamename of the collection; Int_tfSizenumber of elements in collection. private:. static TCollection*fgCurrentCollectionused by macro R__FOR_EACH; static Bool_tfgEmptyingGarbageused by garbage collector; static TObjectTable*fgGarbageCollectionused by garbage collector; static Int_tfgGarbageStackused by garbage collector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddAll(const TCollection* col); Add all objects from collection col to this collection. void AddVector(TObject *va_(obj1), ...); Add all arguments to the collection. The list of objects must be; temrinated by 0, e.g.: l.AddVector(o1, o2, o3, o4, 0);. Bool_t AssertClass(TClass* cl) const; Make sure all objects in this collection inherit from class cl. void Browse(TBrowser* b); Browse this collection (called by TBrowser).; If b=0, there is no Browse call TObject::Browse(0) instead.; This means TObject::Inspect() will be invoked indirectly. TObject * Clone(const char* newname = """") const; Make a clone of an collection using the Streamer facility.; If newname is specified, this will be the name of the new collection. Int_t Compare(const TObject* obj) const; Compare two TCollection objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp()). void Draw(Option_t* option = """"); Draw all objects in this colle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCollection.html:7778,Inherit,Inheritance,7778,root/html532/TCollection.html,https://root.cern,https://root.cern/root/html532/TCollection.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; TObject*TTimer::GetObject(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TTimeTTimer::GetTime() const; UInt_tTTimer::GetTimerID(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; Bool_tTTimer::HasTimedOut() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; Bool_tTTimer::IsAsync() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTTimer::IsInterruptingSyscalls() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTTimer::IsSync() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProcessEventTimer.html:5672,Inherit,InheritsFrom,5672,root/html532/TProcessEventTimer.html,https://root.cern,https://root.cern/root/html532/TProcessEventTimer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; TObject*TTimer::GetObject(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TTimeTTimer::GetTime() const; UInt_tTTimer::GetTimerID(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; Bool_tTTimer::HasTimedOut() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; Bool_tTTimer::IsAsync() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTTimer::IsInterruptingSyscalls() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTTimer::IsSync() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProcessEventTimer.html:5646,Inherit,InheritsFrom,5646,root/html602/TProcessEventTimer.html,https://root.cern,https://root.cern/root/html602/TProcessEventTimer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; static UInt_tGetNProcessIDs(); static UInt_tGetObjectCount(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObjArray*GetObjects() const; static Bool_tTObject::GetObjectStat(); TObject*GetObjectWithID(UInt_t uid); virtual Option_t*TObject::GetOption() const; static TProcessID*GetPID(); static TObjArray*GetPIDs(); static TProcessID*GetProcessID(UShort_t pid); static TProcessID*GetProcessWithUID(const TObject* obj); static TProcessID*GetProcessWithUID(UInt_t uid, const void* obj); static TProcessID*GetSessionProcessID(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Int_tIncrementCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; static Bool_tIsValid(TProcessID* pid); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProcessID.html:4452,Inherit,InheritsFrom,4452,root/html532/TProcessID.html,https://root.cern,https://root.cern/root/html532/TProcessID.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; static UInt_tGetNProcessIDs(); static UInt_tGetObjectCount(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObjArray*GetObjects() const; static Bool_tTObject::GetObjectStat(); TObject*GetObjectWithID(UInt_t uid); virtual Option_t*TObject::GetOption() const; static TProcessID*GetPID(); static TObjArray*GetPIDs(); static TProcessID*GetProcessID(UShort_t pid); static TProcessID*GetProcessWithUID(const TObject* obj); static TProcessID*GetProcessWithUID(UInt_t uid, const void* obj); static TProcessID*GetSessionProcessID(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Int_tIncrementCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; static Bool_tIsValid(TProcessID* pid); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProcessID.html:4438,Inherit,InheritsFrom,4438,root/html602/TProcessID.html,https://root.cern,https://root.cern/root/html602/TProcessID.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual const char*TProofMgr::GetMssUrl(Bool_t = kFALSE); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TProofDesc*TProofMgr::GetProofDesc(Int_t id); virtual TProofDesc*TProofMgr::GetProofDesc(TProof* p); virtual Int_tTProofMgr::GetRemoteProtocol() const; virtual TProofLog*GetSessionLogs(Int_t ridx = 0, const char* stag = 0, const char* pattern = ""-v | SvcMsg"", Bool_t rescan = kFALSE); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*TProofMgr::GetUrl(); virtual voidTProofMgr::Grep(const char*, const char* = 0, const char* = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTProofMgr::IsLite() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTProofMgr::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTProofMgr::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidTProofMgr::Ls(const char* = ""~/"", const char* = 0, const char* = 0); virtual Bool_tTProofMgr::MatchUrl(const char* url); voidTObject::MayNotUse(const char* method) const; virtual Int_tTProofMgr::Md5sum(const char*, TString&, const char* = 0); virtual voidTProofMgr::More(const char*, const char* = 0, const char* = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofMgrLite.html:3784,Inherit,InheritsFrom,3784,root/html534/TProofMgrLite.html,https://root.cern,https://root.cern/root/html534/TProofMgrLite.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual const char*TProofMgr::GetMssUrl(Bool_t = kFALSE); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TProofDesc*TProofMgr::GetProofDesc(Int_t id); virtual TProofDesc*TProofMgr::GetProofDesc(TProof* p); virtual Int_tTProofMgr::GetRemoteProtocol() const; virtual TProofLog*GetSessionLogs(Int_t ridx = 0, const char* stag = 0, const char* pattern = ""-v | SvcMsg"", Bool_t rescan = kFALSE); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*TProofMgr::GetUrl(); virtual voidTProofMgr::Grep(const char*, const char* = 0, const char* = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTProofMgr::IsLite() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTProofMgr::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTProofMgr::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidTProofMgr::Ls(const char* = ""~/"", const char* = 0, const char* = 0); virtual Bool_tTProofMgr::MatchUrl(const char* url); voidTObject::MayNotUse(const char* method) const; virtual Int_tTProofMgr::Md5sum(const char*, TString&, const char* = 0); virtual voidTProofMgr::More(const char*, const char* = 0, const char* = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofMgrLite.html:3707,Inherit,InheritsFrom,3707,root/html602/TProofMgrLite.html,https://root.cern,https://root.cern/root/html602/TProofMgrLite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). private:. TQClass(const TClass&); TQClass&operator=(const TQClass&). Data Members; public:. enum TClass::[unnamed] { kClassSaved; kIgnoreTObjectStreamer; kUnloaded; kIsTObject; kIsForeign; kIsEmulation; kStartWithTObject; kWarned; kHasNameMapNode; };; enum TClass::ENewType { kRealNew; kClassNew; kDummyNew; };; enum TClass::ECheckSum { kCurrentCheckSum; kNoEnum; kNoRange; kWithTypeDef; kNoBaseCheckSum; kLatestCheckSum; };; enum TDictionary::ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; kBitset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TStringTNamed::fNameobject identifier; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TStringTNamed::fTitleobject title; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQClass(const TClass& ); {}. TQClass& operator=(const TQClass& ); { return *this; }. TQClass(const char* name, Version_t cversion, const type_info& info, TVirtualIsAProxy* isa, ShowMembersFunc_t showmembers, const char* dfil = 0, const char* ifil = 0, Int_t dl = 0, Int_t il = 0); { }. virtual ~TQClass(); { Disconnect(); }. » Author: Valeriy Onuchin & Fons Rademakers 15/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-03-14 16:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQClass.html:18737,Inherit,Inheritance,18737,root/html534/TQClass.html,https://root.cern,https://root.cern/root/html534/TQClass.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual doubleROOT::Math::VirtualIntegrator::Error() const; virtual doubleIntegral(); virtual doubleIntegral(const vector<double>& pts); virtual doubleIntegral(double a, double b); virtual doubleIntegralCauchy(double a, double b, double c); virtual doubleIntegralLow(double b); virtual doubleIntegralUp(double a); virtual intROOT::Math::VirtualIntegrator::NEval() const; ROOT::Math::VirtualIntegratorOneDim&operator=(const ROOT::Math::VirtualIntegratorOneDim&); virtual ROOT::Math::IntegratorOneDimOptionsOptions() const; virtual doubleROOT::Math::VirtualIntegrator::Result() const; virtual voidROOT::Math::VirtualIntegrator::SetAbsTolerance(double); virtual voidSetFunction(const ROOT::Math::IGenFunction&); virtual voidSetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); virtual voidROOT::Math::VirtualIntegrator::SetRelTolerance(double); virtual intROOT::Math::VirtualIntegrator::Status() const; virtual ROOT::Math::IntegrationOneDim::TypeType() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~VirtualIntegratorOneDim(); destructor: no operation. {}. double Integral(double a, double b); evaluate integral. void SetFunction(const ROOT::Math::IGenFunction& ); set integration function. double Integral(); evaluate un-defined integral (between -inf, + inf). double IntegralUp(double a); evaluate integral over the (a, +inf). double IntegralLow(double b); evaluate integral over the (-inf, b). double Integral(const vector<double>& pts); evaluate integral with singular points. double IntegralCauchy(double a, double b, double c); evaluate Cauchy integral. return Options(). void SetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); set the options; (should be re-implemented by derived classes -if more options than tolerance exist. » Author: Magdalena Slawinska 10/2007 » Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2011-11-03 20:05; This page has been automaticall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__VirtualIntegratorOneDim.html:2224,Inherit,Inheritance,2224,root/html532/ROOT__Math__VirtualIntegratorOneDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__VirtualIntegratorOneDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual doubleROOT::Math::VirtualIntegrator::Error() const; virtual doubleIntegral(); virtual doubleIntegral(const vector<double>& pts); virtual doubleIntegral(double a, double b); virtual doubleIntegralCauchy(double a, double b, double c); virtual doubleIntegralLow(double b); virtual doubleIntegralUp(double a); virtual intROOT::Math::VirtualIntegrator::NEval() const; ROOT::Math::VirtualIntegratorOneDim&operator=(const ROOT::Math::VirtualIntegratorOneDim&); virtual ROOT::Math::IntegratorOneDimOptionsOptions() const; virtual doubleROOT::Math::VirtualIntegrator::Result() const; virtual voidROOT::Math::VirtualIntegrator::SetAbsTolerance(double); virtual voidSetFunction(const ROOT::Math::IGenFunction&); virtual voidSetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); virtual voidROOT::Math::VirtualIntegrator::SetRelTolerance(double); virtual intROOT::Math::VirtualIntegrator::Status() const; virtual ROOT::Math::IntegrationOneDim::TypeType() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~VirtualIntegratorOneDim(); destructor: no operation. {}. double Integral(double a, double b); evaluate integral. void SetFunction(const ROOT::Math::IGenFunction& ); set integration function. double Integral(); evaluate un-defined integral (between -inf, + inf). double IntegralUp(double a); evaluate integral over the (a, +inf). double IntegralLow(double b); evaluate integral over the (-inf, b). double Integral(const vector<double>& pts); evaluate integral with singular points. double IntegralCauchy(double a, double b, double c); evaluate Cauchy integral. return Options(). void SetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); set the options; (should be re-implemented by derived classes -if more options than tolerance exist. » Author: Magdalena Slawinska 10/2007 » Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:01; This page has been automaticall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__VirtualIntegratorOneDim.html:2224,Inherit,Inheritance,2224,root/html534/ROOT__Math__VirtualIntegratorOneDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__VirtualIntegratorOneDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual intGetServiceByName(const char* service); virtual char*GetServiceByPort(int port); virtual TInetAddressGetSockName(int sock); virtual intGetSockOpt(int sock, int option, int* val); virtual const char*TSystem::GetSoExt() const; virtual intGetSysInfo(SysInfo_t* info) const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetUid(const char* user = 0); virtual UInt_tTObject::GetUniqueID() const; virtual UserGroup_t*GetUserInfo(Int_t uid); virtual UserGroup_t*GetUserInfo(const char* user = 0); virtual TList*TSystem::GetVolumes(Option_t*) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual const char*HomeDirectory(const char* userName = 0); virtual const char*HostName(); virtual voidTSystem::IgnoreInterrupt(Bool_t ignore = kTRUE); virtual voidIgnoreSignal(ESignals sig, Bool_t ignore = kTRUE); Bool_tTSystem::InControl() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(); virtual voidTSystem::InnerLoop(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSystem::IsAbsoluteFileName(const char* dir); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTSystem::IsFileInIncludePath(const char* name, char** fullpath = 0); virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsPathLocal(const char* path); virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual intLink(const char* from, const char* to); virtual voidListLibraries(const char* regexp = """"); virtual voidListSymbols(const char* module, const char* re = """"); virtual intLoad(const char* module, const char* entry = """", Bool_t system = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual intMakeDirectory(const char* nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUnixSystem.html:7631,Inherit,InheritsFrom,7631,root/html532/TUnixSystem.html,https://root.cern,https://root.cern/root/html532/TUnixSystem.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual method for fill statistic. More...;  ; class  RHistStatContent;  Basic histogram statistics, keeping track of the bin content and the total number of calls to Fill(). More...;  ; class  RHistStatRuntime;  Interface implementing a pure virtual functions DoFill(), DoFillN(). More...;  ; class  RHistStatTotalSumOfSquaredWeights;  Keeps track of the histogram's total sum of squared weights. More...;  ; class  RHistStatTotalSumOfWeights;  Keeps track of the histogram's total sum of weights. More...;  ; class  RHistStatUncertainty;  Histogram statistics to keep track of the Poisson uncertainty per bin. More...;  ; class  RHistView;  A view on a histogram, selecting a range on a subset of dimensions. More...;  ; struct  RHistViewOutOfRange;  ; class  RIndirectDisplayItem;  Extract (reference) only basic attributes from drawable, but not drawable itself. More...;  ; class  RInvalidField;  Used in RFieldBase::Check() to record field creation failures. More...;  ; class  RLogChannel;  A log configuration for a channel, e.g. More...;  ; class  RLogDiagCount;  Keep track of emitted errors and warnings. More...;  ; class  RLogEntry;  A diagnostic that can be emitted by the RLogManager. More...;  ; class  RLogHandler;  Abstract RLogHandler base class. More...;  ; struct  RLogLocation;  A diagnostic location, part of an RLogEntry. More...;  ; class  RLogManager;  A RLogHandler that multiplexes diagnostics to different client RLogHandlers and keeps track of the sum of RLogDiagCounts for all channels. More...;  ; class  RLogScopedDiagCount;  Object to count the number of warnings and errors emitted by a section of code, after construction of this type. More...;  ; class  RLogScopedVerbosity;  Change the verbosity level (global or specific to the RLogChannel passed to the constructor) for the lifetime of this object. More...;  ; class  RMapField;  The generic field for a std::map<KeyType, ValueType> and std::unordered_map<KeyType, ValueType> More...;  ; class  RMenuItems;  List o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html:15969,config,configuration,15969,doc/v632/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html,1,['config'],['configuration']
Modifiability,"tual void FitSlicesY(TF1 *f1=nullptr, Int_t firstxbin=0, Int_t lastxbin=-1, Int_t cut=0, Option_t *option=""QNR"", TObjArray *arr=nullptr)Project slices along Y in case of a 2-D histogram, then fit each slice with function f1 and make a hi...Definition TH2.cxx:1081; TH2::GetBinWithContent2virtual Double_t GetBinWithContent2(Double_t c, Int_t &binx, Int_t &biny, Int_t firstxbin=1, Int_t lastxbin=-1, Int_t firstybin=1, Int_t lastybin=-1, Double_t maxdiff=0) constcompute first cell (binx,biny) in the range [firstxbin,lastxbin][firstybin,lastybin] for which diff =...Definition TH2.cxx:1117; TH2::ProfileXTProfile * ProfileX(const char *name=""_pfx"", Int_t firstybin=1, Int_t lastybin=-1, Option_t *option="""") constProject a 2-D histogram into a profile histogram along X.Definition TH2.cxx:2109; TH2::AddBinContentvoid AddBinContent(Int_t bin) overrideIncrement bin content by 1.Definition TH2.cxx:238; TH2::RebinTH2 * Rebin(Int_t ngroup=2, const char *newname="""", const Double_t *xbins=nullptr) overrideOverride TH1::Rebin as TH2::RebinX Rebinning in variable binning as for TH1 is not allowed If a non-n...Definition TH2.cxx:1663; TH2::FillNvoid FillN(Int_t, const Double_t *, const Double_t *, Int_t) overrideFill this histogram with an array x and weights w.Definition TH2.h:84; TH2::QuantilesYTH1D * QuantilesY(Double_t prob=0.5, const char *name=""_qy"") constCompute the Y distribution of quantiles in the other variable X name is the name of the returned hist...Definition TH2.cxx:2518; TH2::ProfileYTProfile * ProfileY(const char *name=""_pfy"", Int_t firstxbin=1, Int_t lastxbin=-1, Option_t *option="""") constProject a 2-D histogram into a profile histogram along Y.Definition TH2.cxx:2159; TH2::Copyvoid Copy(TObject &hnew) const overrideCopy.Definition TH2.cxx:380; TH2::DoQuantilesvirtual TH1D * DoQuantiles(bool onX, const char *name, Double_t prob) constImplementation of quantiles for x or y.Definition TH2.cxx:2527; TH2::fTsumwxyDouble_t fTsumwxyTotal Sum of weight*X*Y.Definition TH2.h:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:187370,variab,variable,187370,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"tual void mnwarn(const char *copt, const char *corg, const char *cmes)Prints Warning messages.Definition TMinuit.cxx:7784; TMinuit::fSEEKxmidDouble_t * fSEEKxmidDefinition TMinuit.h:117; TMinuit::fErpDouble_t * fErpDefinition TMinuit.h:71; TMinuit::mnprinvirtual void mnprin(Int_t inkode, Double_t fval)Prints the values of the parameters at the time of the call.Definition TMinuit.cxx:6304; TMinuit::fOriginTString fOrigin[kMAXWARN]Definition TMinuit.h:173; TMinuit::mncrosvirtual void mncros(Double_t &aopt, Int_t &iercr)Find point where MNEVAL=AMIN+UP.Definition TMinuit.cxx:1798; TMinuit::fLnewmnBool_t fLnewmnDefinition TMinuit.h:161; TMinuit::GetNumFreeParsvirtual Int_t GetNumFreePars() constreturns the number of currently free parametersDefinition TMinuit.cxx:863; TMinuit::mnhes1virtual void mnhes1()Calculate first derivatives (GRD) and uncertainties (DGRD)Definition TMinuit.cxx:4218; TMinuit::fIcircInt_t fIcirc[2]Definition TMinuit.h:153; TMinuit::mnfreevirtual void mnfree(Int_t k)Restores one or more fixed parameter(s) to variable status.Definition TMinuit.cxx:3256; TMinuit::mncntrvirtual void mncntr(Int_t ke1, Int_t ke2, Int_t &ierrf)Print function contours in two variables, on line printer.Definition TMinuit.cxx:1132; TMinuit::fAminDouble_t fAminDefinition TMinuit.h:49; TMinuit::Contourvirtual TObject * Contour(Int_t npoints=10, Int_t pa1=0, Int_t pa2=1)Creates a TGraph object describing the n-sigma contour of a TMinuit fit.Definition TMinuit.cxx:653; TMinuit::fEDMDouble_t fEDMDefinition TMinuit.h:51; TMinuit::fDgrdDouble_t * fDgrdDefinition TMinuit.h:85; TMinuit::mnparmvirtual void mnparm(Int_t k, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t &ierflg)Implements one parameter definition.Definition TMinuit.cxx:5665; TMinuit::fMNOTwDouble_t * fMNOTwDefinition TMinuit.h:114; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::CloneTObject * Clone(const char *newname="""") const overrideMake a clon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:274578,variab,variable,274578,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"tual void mnwarn(const char *copt, const char *corg, const char *cmes)Prints Warning messages.Definition TMinuit.cxx:7784; TMinuit::fSEEKxmidDouble_t * fSEEKxmidDefinition TMinuit.h:117; TMinuit::fErpDouble_t * fErpDefinition TMinuit.h:71; TMinuit::mnprinvirtual void mnprin(Int_t inkode, Double_t fval)Prints the values of the parameters at the time of the call.Definition TMinuit.cxx:6304; TMinuit::fOriginTString fOrigin[kMAXWARN]Definition TMinuit.h:173; TMinuit::mncrosvirtual void mncros(Double_t &aopt, Int_t &iercr)Find point where MNEVAL=AMIN+UP.Definition TMinuit.cxx:1798; TMinuit::fLnewmnBool_t fLnewmnDefinition TMinuit.h:161; TMinuit::GetNumFreeParsvirtual Int_t GetNumFreePars() constreturns the number of currently free parametersDefinition TMinuit.cxx:863; TMinuit::mnhes1virtual void mnhes1()Calculate first derivatives (GRD) and uncertainties (DGRD)Definition TMinuit.cxx:4218; TMinuit::fIcircInt_t fIcirc[2]Definition TMinuit.h:153; TMinuit::mnfreevirtual void mnfree(Int_t k)Restores one or more fixed parameter(s) to variable status.Definition TMinuit.cxx:3256; TMinuit::mncntrvirtual void mncntr(Int_t ke1, Int_t ke2, Int_t &ierrf)Print function contours in two variables, on line printer.Definition TMinuit.cxx:1132; TMinuit::fAminDouble_t fAminDefinition TMinuit.h:49; TMinuit::Contourvirtual TObject * Contour(Int_t npoints=10, Int_t pa1=0, Int_t pa2=1)Creates a TGraph object describing the n-sigma contour of a TMinuit fit.Definition TMinuit.cxx:653; TMinuit::fEDMDouble_t fEDMDefinition TMinuit.h:51; TMinuit::fDgrdDouble_t * fDgrdDefinition TMinuit.h:85; TMinuit::mnparmvirtual void mnparm(Int_t k, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t &ierflg)Implements one parameter definition.Definition TMinuit.cxx:5665; TMinuit::fMNOTwDouble_t * fMNOTwDefinition TMinuit.h:114; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObjectMother of all ROOT objects.Definition TObject.h:41; TStringBasic string",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:32746,variab,variable,32746,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['variab'],['variable']
Modifiability,"tual voidDeclareOptions(); virtual voidInit(); virtual voidProcessOptions(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TStringfHiddenLayerstring containig the hidden layer structure; TStringfLayerSpecLayer specification option; TStringfLearningMethodthe learning method (given via option string); TTree*fLocalTrainingTreelocal copy of training tree; TMultiLayerPerceptron*fMLPthe TMLP; TStringfMLPBuildOptionsoption string to build the mlp; Int_tfNcyclesnumber of training cylcles; Double_tfValidationFractionfraction of events in training tree used for cross validation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodTMlpANN(const TString& jobName, const TStrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodTMlpANN.html:15164,variab,variables,15164,root/html528/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodTMlpANN.html,1,['variab'],['variables']
Modifiability,"tual voidGetRange(Double_t& xmin, Double_t& ymin, Double_t& zmin, Double_t& xmax, Double_t& ymax, Double_t& zmax) const; virtual Double_tGetSave(const Double_t* x); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetVariable(const TString& name); virtual Double_tGetX(Double_t y, Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.0E-10, Int_t maxiter = 100, Bool_t logx = false) const; TAxis*GetXaxis() const; virtual Double_tGetXmax() const; virtual Double_tGetXmin() const; TAxis*GetYaxis() const; TAxis*GetZaxis() const; virtual Double_tGradientPar(Int_t ipar, const Double_t* x, Double_t eps = 0.01); virtual voidGradientPar(const Double_t* x, Double_t* grad, Double_t eps = 0.01); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitArgs(const Double_t* x, const Double_t* params); static voidInitStandardFunctions(); virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Double_t a, Double_t b, Double_t epsrel = 9.9999999999999998E-13); virtual Double_tIntegralError(Double_t a, Double_t b, const Double_t* params = 0, const Double_t* covmat = 0, Double_t epsilon = 0.01); virtual Double_tIntegralError(Int_t n, const Double_t* a, const Double_t* b, const Double_t* params = 0, const Double_t* covmat = 0, Double_t epsilon = 0.01); virtual Double_tIntegralFast(Int_t num, Double_t* x, Double_t* w, Double_t a, Double_t b, Double_t* params = 0, Double_t epsilon = 9.9999999999999998E-13); virtual Double_tIntegralMultiple(Int_t n, const Double_t* a, const Double_t* b, Double_t epsrel, Double_t& relerr); virtual Double_tIntegralMultiple(Int_t n, const Double_t* a, const Double_t* b, Int_t maxpts, Double_t epsrel, Double_t epsabs, Double_t& relerr, Int_t& nfne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF1.html:11604,Inherit,InheritsFrom,11604,root/html604/TF1.html,https://root.cern,https://root.cern/root/html604/TF1.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidGsord(const char* name, Int_t iax); virtual voidGspos(const char* name, Int_t nr, const char* mother, Double_t x, Double_t y, Double_t z, Int_t irot, const char* konly = ""ONLY""); virtual voidGsposp(const char* name, Int_t nr, const char* mother, Double_t x, Double_t y, Double_t z, Int_t irot, const char* konly, Float_t* upar, Int_t np); virtual voidGsposp(const char* name, Int_t nr, const char* mother, Double_t x, Double_t y, Double_t z, Int_t irot, const char* konly, Double_t* upar, Int_t np); virtual voidGstpar(Int_t itmed, const char* param, Double_t parval); virtual Int_tGsvolu(const char* name, const char* shape, Int_t nmed, Float_t* upar, Int_t np); virtual Int_tGsvolu(const char* name, const char* shape, Int_t nmed, Double_t* upar, Int_t np); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Int_tIdFromPDG(Int_t pdg) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(); virtual voidInitLego(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsCollectTracks() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMT() const; virtual Bool_tIsNewTrack() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRootGeometrySupported() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsTrackAlive() const; virtual Bool_tIsTrackDisappeared() const; virtual Bool_tIsTrackEntering() const; virtual Bool_tIsTrackExiting() const; virtual Bool_tIsTrackInside() const; virtual Bool_tIsTrackOut() const; virtual Bool_tIsTrackStop() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidMaterial(Int_t& kmat, const char* name, Double_t a, Double_t z, Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualMC.html:7015,Inherit,InheritsFrom,7015,root/html534/TVirtualMC.html,https://root.cern,https://root.cern/root/html534/TVirtualMC.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tual voidGsord(const char* name, Int_t iax); virtual voidGspos(const char* name, Int_t nr, const char* mother, Double_t x, Double_t y, Double_t z, Int_t irot, const char* konly = ""ONLY""); virtual voidGsposp(const char* name, Int_t nr, const char* mother, Double_t x, Double_t y, Double_t z, Int_t irot, const char* konly, Float_t* upar, Int_t np); virtual voidGsposp(const char* name, Int_t nr, const char* mother, Double_t x, Double_t y, Double_t z, Int_t irot, const char* konly, Double_t* upar, Int_t np); virtual voidGstpar(Int_t itmed, const char* param, Double_t parval); virtual Int_tGsvolu(const char* name, const char* shape, Int_t nmed, Float_t* upar, Int_t np); virtual Int_tGsvolu(const char* name, const char* shape, Int_t nmed, Double_t* upar, Int_t np); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Int_tIdFromPDG(Int_t pdg) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(); virtual voidInitLego(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsCollectTracks() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsNewTrack() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRootGeometrySupported() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsTrackAlive() const; virtual Bool_tIsTrackDisappeared() const; virtual Bool_tIsTrackEntering() const; virtual Bool_tIsTrackExiting() const; virtual Bool_tIsTrackInside() const; virtual Bool_tIsTrackOut() const; virtual Bool_tIsTrackStop() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidMaterial(Int_t& kmat, const char* name, Double_t a, Double_t z, Double_t dens, Double_t radl, Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualMC.html:7347,Inherit,InheritsFrom,7347,root/html532/TVirtualMC.html,https://root.cern,https://root.cern/root/html532/TVirtualMC.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EHistType { kHistNotSpecified; kHist1D; kHist2D; kHist3D; kHistAll; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; TPBHistType::EHistTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EReadType GetType() const; { return fType; }. const char * GetName() const; { return fName; }. TPBHistType(EHistType type = kHist1D); { }. virtual ~TPBHistType(); { }. Bool_t IsHist1D() const; { return (fType == kHist1D) ? kTRUE : kFALSE; }. Bool_t IsHist2D() const; { return (fType == kHist2D) ? kTRUE : kFALSE; }. Bool_t IsHist3D() const; { return (fType == kHist3D) ? kTRUE : kFALSE; }. Bool_t IsHistAll() const; { return (fType == kHistAll) ? kTRUE : kFALSE; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPBHistType.html:5443,Inherit,Inheritance,5443,root/html534/TPBHistType.html,https://root.cern,https://root.cern/root/html534/TPBHistType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TCollection*fMap. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TOutputListSelectorDataMap(TSelector* sel = 0); Create a mapper between output list items and TSelector data members. const char* GetName() const; Return static name for TOutputListSelectorDataMap objects. Bool_t Init(TSelector* sel); Initialize the data member <-> output list mapping from a selector. Bool_t SetDataMembers(TSelector* sel) const; Given an output list, set the data members of a TSelector. Bool_t Merge(TObject* obj); Merge another TOutputListSelectorDataMap object, check; consistency. TOutputListSelectorDataMap* FindInList(TCollection* coll); Find a TOutputListSelectorDataMap in a collection. TOutputListSelectorDataMap(TSelector* sel = 0). virtual ~TOutputListSelectorDataMap(); {}. TCollection* GetMap() const; { return fMap; }. » Author: Axel Naumann 2010-06-09 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TOutputListSelectorDataMap.h 33867 2010-06-14 10:02:39Z ganis $ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TOutputListSelectorDataMap.html:5559,Inherit,Inheritance,5559,root/html532/TOutputListSelectorDataMap.html,https://root.cern,https://root.cern/root/html532/TOutputListSelectorDataMap.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Bool_tTestFlag(UInt_t f) const; TProtoClass::TProtoRealDataTProtoRealData(); TProtoClass::TProtoRealDataTProtoRealData(const TRealData* rd); TProtoClass::TProtoRealDataTProtoRealData(const TProtoClass::TProtoRealData&). Data Members; public:. Int_tfClassIndexindex of class belonging to in list of dep classes; Int_tfDMIndexindex of data member in vector of data members; Int_tfLevelmember level (0 : belong to this class, 1 is a data member of a data member object, etc...); Long_tfOffsetdata member offset; charfStatusFlagstatus of the real data member (if bit 0 set is an object, if bit 1 set is transient if bit 2 set is a pointer); static TProtoClass::TProtoRealData::(anonymous)kBitMask; static TProtoClass::TProtoRealData::(anonymous)kIsObject; static TProtoClass::TProtoRealData::(anonymous)kIsPointer; static TProtoClass::TProtoRealData::(anonymous)kIsTransient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProtoRealData(const TRealData* rd); TNamed(rd->GetDataMember()->GetName(), rd->GetName()),; TNamed(),; fName(rd->GetDataMember()->GetName()),; fTitle(rd->GetName()),. ~TProtoRealData(); Destructor to pin vtable.; if (gErrorIgnoreLevel==-2) printf(""destroy real data %s - "",GetName());. TRealData* CreateRealData(TClass* currentClass, TClass* parent, TRealData* parentData, int prevLevel) const; Create a TRealData from this, with its data member coming from dmClass.; find data member from protoclass. bool IsAClass() const; { return fClassIndex >= 0; }. TProtoRealData(); {}. TProtoRealData(const TRealData* rd). Bool_t TestFlag(UInt_t f) const; { return (Bool_t) ((fStatusFlag & f) != 0); }. void SetFlag(UInt_t f, Bool_t on = kTRUE). TProtoClass & operator=(const TProtoClass::TProtoRealData& ). » Author: Axel Naumann 2014-04-28 » Copyright (C) 1995-2014, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProtoClass__TProtoRealData.html:1752,Inherit,Inheritance,1752,root/html602/TProtoClass__TProtoRealData.html,https://root.cern,https://root.cern/root/html602/TProtoClass__TProtoRealData.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetLastValues(const char*, const char*, const char*, const char*, Bool_t = kFALSE); virtual TMap*GetMap(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidGetValues(const char*, const char*, const char*, const char*, Long_t, Long_t, Bool_t = kFALSE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualMonitoringReader.html:2781,Inherit,InheritsFrom,2781,root/html532/TVirtualMonitoringReader.html,https://root.cern,https://root.cern/root/html532/TVirtualMonitoringReader.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetLastValues(const char*, const char*, const char*, const char*, Bool_t = kFALSE); virtual TMap*GetMap(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidGetValues(const char*, const char*, const char*, const char*, Long_t, Long_t, Bool_t = kFALSE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMonitoringReader.html:2702,Inherit,InheritsFrom,2702,root/html602/TVirtualMonitoringReader.html,https://root.cern,https://root.cern/root/html602/TVirtualMonitoringReader.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Bool_tTMVA::VariableTransformBase::GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; virtual const char*TMVA::VariableTransformBase::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html:2013,Variab,VariableTransformBase,2013,root/html532/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html,12,['Variab'],['VariableTransformBase']
Modifiability,"tual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Bool_tTMVA::VariableTransformBase::GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; virtual const char*TMVA::VariableTransformBase::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableGaussTransform.html:2053,Variab,VariableTransformBase,2053,root/html532/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableGaussTransform.html,12,['Variab'],['VariableTransformBase']
Modifiability,"tual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static TStringfgDefaultdefault transformer; static TVirtualFFT*fgFFTcurrent transformer. Class Charts. Inheritance Chart:. TObject. ←; TVirtualFFT. ←. TFFTComplex. TFFTComplexReal. TFFTReal. TFFTRealComplex. Function documentation; ~TVirtualFFT(); destructor. TVirtualFFT* FFT(Int_t ndim, Int_t* n, Option_t* option); Returns a pointer to the FFT of requested size and type.; Parameters:; -ndim : number of transform dimensions; -n : sizes of each dimension (an array at least ndim long); -option : consists of 3 parts - flag option and an option to create a new TVirtualFFT; 1) transform type option:; Available transform types are:; C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; see class description for details; 2) flag option: choosing how much time should be spent in planning the transform:; Possible options:; ""ES"" (from ""estimate"") - no time in preparing the transform,; but probably sub-optimal performance; ""M"" (from ""measure"") - some time spend in finding the optimal way; to do the transform; ""P"" (from ""patient"") - more time spend in finding the optimal way; to do the transform; ""EX"" (from """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualFFT.html:10096,Inherit,Inheritance,10096,root/html602/TVirtualFFT.html,https://root.cern,https://root.cern/root/html602/TVirtualFFT.html,2,['Inherit'],['Inheritance']
Modifiability,"tual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidUpdateFrameElements(TGLayoutHints* l). private:. TGLayoutHints&operator=(const TGLayoutHints&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum TRefCnt::EReferenceFlag { kStaticInit; };. protected:. ULong_tfLayoutHintslayout hints (combination of ELayoutHints); Int_tfPadbottomamount of bottom padding; Int_tfPadleftamount of left padding; Int_tfPadrightamount of right padding; Int_tfPadtopamount of top padding; UInt_tTRefCnt::fRefs(1 less than) number of references. private:. TGFrameElement*fFEback pointer to the last frame element; TGFrameElement*fPrevprevious element sharing this layout_hints. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLayoutHints(const TGLayoutHints& lh); Constructor. ~TGLayoutHints(); Destructor. void UpdateFrameElements(TGLayoutHints* l); Update layout hints of frame elements. void Print(Option_t* option = """") const; Printing. void SavePrimitive(ostream& out, Option_t* option = """"). TGLayoutHints& operator=(const TGLayoutHints& ). TGLayoutHints(ULong_t hints = kLHintsNormal, Int_t padleft = 0, Int_t padright = 0, Int_t padtop = 0, Int_t padbottom = 0); { SetRefCount(0); }. ULong_t GetLayoutHints() const; { return fLayoutHints; }. Int_t GetPadTop() const; { return fPadtop; }. Int_t GetPadBottom() const; { return fPadbottom; }. Int_t GetPadLeft() const; { return fPadleft; }. Int_t GetPadRight() const; { return fPadright; }. void SetLayoutHints(ULong_t lh); { fLayoutHints = lh; }. void SetPadTop(Int_t v); { fPadtop = v; }. void SetPadBottom(Int_t v); { fPadbottom = v; }. void SetPadLeft(Int_t v); { fPadleft = v; }. void SetPadRight(Int_t v); { fPad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLayoutHints.html:7112,Inherit,Inheritance,7112,root/html532/TGLayoutHints.html,https://root.cern,https://root.cern/root/html532/TGLayoutHints.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_tEstimatorFunction(vector<Double_t>& parameters); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::FitterBaseFitterBase(const TMVA::FitterBase&); TMVA::FitterBaseFitterBase(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*> ranges, const TString& theOption); const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; Int_tGetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__FitterBase.html:2468,Config,Configurable,2468,root/html602/TMVA__FitterBase.html,https://root.cern,https://root.cern/root/html602/TMVA__FitterBase.html,2,['Config'],['Configurable']
Modifiability,"tual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; TLDAPEntry*GetNext(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLDAPResult.html:2274,Inherit,InheritsFrom,2274,root/html532/TLDAPResult.html,https://root.cern,https://root.cern/root/html532/TLDAPResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidRooSharedProperties::increaseRefCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tRooSharedProperties::inSharedList() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCategorySharedProperties.html:2895,Inherit,InheritsFrom,2895,root/html534/RooCategorySharedProperties.html,https://root.cern,https://root.cern/root/html534/RooCategorySharedProperties.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidRooSharedProperties::increaseRefCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tRooSharedProperties::inSharedList() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCategorySharedProperties.html:2743,Inherit,InheritsFrom,2743,root/html602/RooCategorySharedProperties.html,https://root.cern,https://root.cern/root/html602/RooCategorySharedProperties.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; voidGetKnot(Double_t& x, Double_t& y) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSplinePoly.html:2479,Inherit,InheritsFrom,2479,root/html532/TSplinePoly.html,https://root.cern,https://root.cern/root/html532/TSplinePoly.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; voidGetKnot(Double_t& x, Double_t& y) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSplinePoly.html:2419,Inherit,InheritsFrom,2419,root/html602/TSplinePoly.html,https://root.cern,https://root.cern/root/html602/TSplinePoly.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNPassed(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMerge(TEntryListBlock* block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEntryListBlock.html:11565,Inherit,InheritsFrom,11565,root/html532/TEntryListBlock.html,https://root.cern,https://root.cern/root/html532/TEntryListBlock.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNPassed(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMerge(TEntryListBlock* block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEntryListBlock.html:11423,Inherit,InheritsFrom,11423,root/html602/TEntryListBlock.html,https://root.cern,https://root.cern/root/html602/TEntryListBlock.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooMsgService::StreamConfig&getStream(Int_t id); Bool_tgetStreamStatus(Int_t id) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; RooFit::MsgLevelglobalKillBelow() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooMsgService&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tisActive(const RooAbsArg* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Bool_tisActive(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; ostream&log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); ostream&log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMsgService.html:3949,Inherit,InheritsFrom,3949,root/html532/RooMsgService.html,https://root.cern,https://root.cern/root/html532/RooMsgService.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidField(const Double_t*, Double_t* B); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const Double_t*GetFieldValue() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoUniformMagField.html:2618,Inherit,InheritsFrom,2618,root/html532/TGeoUniformMagField.html,https://root.cern,https://root.cern/root/html532/TGeoUniformMagField.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidField(const Double_t*, Double_t* B); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const Double_t*GetFieldValue() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoUniformMagField.html:2535,Inherit,InheritsFrom,2535,root/html602/TGeoUniformMagField.html,https://root.cern,https://root.cern/root/html602/TGeoUniformMagField.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringGetPathName(TObject* o); virtual TList*GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char*); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* u, TString& f); virtual Int_tLocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*Open(const char* stager); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileStager.html:2820,Inherit,InheritsFrom,2820,root/html534/TFileStager.html,https://root.cern,https://root.cern/root/html534/TFileStager.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringGetPathName(TObject* o); virtual TList*GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char*); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* u, TString& f); virtual Int_tLocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*Open(const char* stager); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileStager.html:2778,Inherit,InheritsFrom,2778,root/html602/TFileStager.html,https://root.cern,https://root.cern/root/html602/TFileStager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringGetPathName(TObject* o); virtual TList*GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char*); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* u, TString& f); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*Open(const char* stager); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileStager.html:2820,Inherit,InheritsFrom,2820,root/html532/TFileStager.html,https://root.cern,https://root.cern/root/html532/TFileStager.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); TMVA::PDFPDF(const TMVA::PDF&); TMVA::PDFPDF(const TString& name, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TString& options, const TString& suffix = """", TMVA::PDF* defaultPDF = 0, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::PDF::EInterpolateMethod method = kSpline2, Int_t minnsmooth = 0, Int_t maxnsmooth = 0, Bool_t checkHist = kFALSE, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; voidProcessOptions(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadXML(void* pdfnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetReadingVersion(UInt_t rv); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDF.html:5330,Config,Configurable,5330,root/html602/TMVA__PDF.html,https://root.cern,https://root.cern/root/html602/TMVA__PDF.html,2,['Config'],['Configurable']
Modifiability,"tual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(const TMVA::SimulatedAnnealingFitter&); TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html:5412,Config,Configurable,5412,root/html602/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html,2,['Config'],['Configurable']
Modifiability,"tual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html:5097,Config,Configurable,5097,root/html532/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html,1,['Config'],['Configurable']
Modifiability,"tual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__SimulatedAnnealingFitter.html:5097,Config,Configurable,5097,root/html534/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html534/TMVA__SimulatedAnnealingFitter.html,1,['Config'],['Configurable']
Modifiability,"tual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidselectDefaultAlgorithm(); voidselectFastAlgorithm(); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooVoigtian.html:27200,config,config,27200,root/html526/RooVoigtian.html,https://root.cern,https://root.cern/root/html526/RooVoigtian.html,1,['config'],['config']
Modifiability,"tual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::MsgLogger*fLogger! message logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~PDEFoamKernelBase(); Destructor. Float_t Estimate(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue ); kernel estimator. » Author: Dominik Dannheim, Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__PDEFoamKernelBase.html:5711,Inherit,Inheritance,5711,root/html534/TMVA__PDEFoamKernelBase.html,https://root.cern,https://root.cern/root/html534/TMVA__PDEFoamKernelBase.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. unsigned long*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_unsigned_long_.html:6596,Inherit,Inheritance,6596,root/html534/TNDArrayT_unsigned_long_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_unsigned_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfRegisteredType; TStringfReplyDomain; TStringfServiceName; TStringfTXTRecords. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddTXTRecord(const char* record). void AddTXTRecord(const TString& record); This methods adds the length before the data for compliance with the; mDNS records standard. void Print(Option_t* opt = """") const; Print TBonjourRecord. TBonjourRecord(); { }. TBonjourRecord(const char* name, const char* regType, const char* domain); { }. TBonjourRecord(const char* name, const char* regType, const char* domain, const char* txt); { }. virtual ~TBonjourRecord(); { }. Bool_t operator==(const TBonjourRecord& other) const. Bool_t IsEqual(const TObject* obj) const; { return *this == *(TBonjourRecord*)obj; }. const char * GetServiceName() const; { return fServiceName; }. const char * GetRegisteredType() const; { return fRegisteredType; }. const char * GetReplyDomain() const; { return fReplyDomain; }. const char * GetTXTRecords() const; { return fTXTRecords; }. Int_t GetTXTRecordsLength() const; { return fTXTRecords.Length(); }. » Author: Fons Rad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBonjourRecord.html:5724,Inherit,Inheritance,5724,root/html532/TBonjourRecord.html,https://root.cern,https://root.cern/root/html532/TBonjourRecord.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. static THLimitsFinder*THLimitsFinder::fgLimitsFinder!Pointer to hist limits finder. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AutoBinFunc(TString& key, Double_t& xmin, Double_t& xmax, Double_t& ymin, Double_t& ymax, Double_t& zmin, Double_t& zmax); Get bining information. Send current min and max and receive common; min max in return. Int_t FindGoodLimits(TH1* h, Axis_t xmin, Axis_t xmax); Find good limits. Int_t FindGoodLimits(TH1* h, Axis_t xmin, Axis_t xmax, Axis_t ymin, Axis_t ymax); Find good limits. Int_t FindGoodLimits(TH1* h, Axis_t xmin, Axis_t xmax, Axis_t ymin, Axis_t ymax, Axis_t zmin, Axis_t zmax); Find good limits. TProofLimitsFinder(); { }. virtual ~TProofLimitsFinder(); { }. » Author: Maarten Ballintijn 19/04/2002 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofLimitsFinder.h 21467 2007-12-18 17:44:44Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofLimitsFinder.html:6152,Inherit,Inheritance,6152,root/html532/TProofLimitsFinder.html,https://root.cern,https://root.cern/root/html532/TProofLimitsFinder.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TWebPS.h>. Inheritance diagram for TWebPS:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAttrKinds. enum TWebPS::EAttrKinds. private . !< object to store all painting . EnumeratorattrLine ; attrFill ; attrMarker ; attrText . Definition at line 25 of file TWebPS.h. Constructor & Destructor Documentation. ◆ TWebPS() [1/3]. TWebPS::TWebPS ; (; ). Definition at line 21 of file TWebPS.cxx. ◆ TWebPS() [2/3]. TWebPS::TWebPS ; (; const TWebPS & ; rhs). privatedelete . ◆ TWebPS() [3/3]. TWebPS::TWebPS ; (; TWebPS && ; rhs). privatedelete . Member Function Documentation. ◆ CellArrayBegin(). void TWebPS::CellArrayBegin ; (; Int_t ; , . Int_t ; , . Double_t ; , . Double_t ; , . Double_t ; , . Double_t ;  . )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPS.html:21641,inherit,inherited,21641,doc/master/classTWebPS.html,https://root.cern,https://root.cern/doc/master/classTWebPS.html,1,['inherit'],['inherited']
Modifiability,"tual void SetInputList (TList *in, bool adopt=true);  Set / change the input list. ;  ; void SetMergeTime (Float_t mergetime);  ; void SetNumMergers (Int_t nmergers);  ; virtual void SetOutputList (TList *out, bool adopt=true);  Set / change the output list. ;  ; void SetPrepTime (Float_t preptime);  ; virtual void SetProcessInfo (Long64_t ent, Float_t cpu=0., Long64_t siz=-1, Float_t inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTermTime (Float_t termtime);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TQueryResult; bool fArchived;  whether the query has been archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; TDatime fEnd;  time when processing ended ;  ; Long64_t fEntries;  number of entries processed ;  ; bool fFinalized;  whether Terminate has been run ;  ; Long64_t fFirst;  first entry processed ;  ; Float_t fInitTime;  Initialization time (seconds) (millisec precision) ;  ; TList * fInputList;  input list; contains also data sets, entry list, ... ;  ; TString fLibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fOptions;  processing options + aclic mode (< opt >#< aclic_mode >) ;  ; TList * fOutputList;  output list ;  ; TString fParList;  colon-separated list of PAR loaded at fStart ;  ; Float_t fPrepTime;  Prepare time (seconds) (millisec precision) ;  ; Float_t fProcTime;  Processing time (seconds) (millisec precision) ;  ; Float_t fRecvTime;  Transfer-to-client time (seconds) (millisec precision)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofQueryResult.html:14598,inherit,inherited,14598,doc/master/classTProofQueryResult.html,https://root.cern,https://root.cern/doc/master/classTProofQueryResult.html,1,['inherit'],['inherited']
Modifiability,"tual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; virtual Bool_t WriteBuffer (const char *buf, Int_t len);  Write a buffer to the file. ;  ; virtual void WriteFree ();  Write FREE linked list on the file. ;  ; virtual void WriteHeader ();  Write File Header. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelMergingFile.html:10185,inherit,inherited,10185,doc/master/classTParallelMergingFile.html,https://root.cern,https://root.cern/doc/master/classTParallelMergingFile.html,1,['inherit'],['inherited']
Modifiability,"tual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPaveLabel; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveClass.html:19585,inherit,inherited,19585,doc/master/classTPaveClass.html,https://root.cern,https://root.cern/doc/master/classTPaveClass.html,4,['inherit'],['inherited']
Modifiability,"tual void SetWindow (Double_t u0, Double_t v0, Double_t du, Double_t dv)=0;  ; virtual void ShowAxis ()=0;  ; virtual void Side ()=0;  ; virtual void SideView (TVirtualPad *pad=nullptr)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void ToggleRulers (TVirtualPad *pad=nullptr)=0;  ; virtual void ToggleZoom (TVirtualPad *pad=nullptr)=0;  ; virtual void Top ()=0;  ; virtual void TopView (TVirtualPad *pad=nullptr)=0;  ; virtual void UnZoom ()=0;  ; virtual void UnzoomView (TVirtualPad *pad=nullptr, Double_t unZoomFactor=1.25)=0;  ; virtual void WCtoNDC (const Double_t *pw, Double_t *pn)=0;  ; virtual void WCtoNDC (const Float_t *pw, Float_t *pn)=0;  ; virtual void Zoom ()=0;  ; virtual void ZoomIn ()=0;  ; virtual void ZoomMove ()=0;  ; virtual void ZoomOut ()=0;  ; virtual void ZoomView (TVirtualPad *pad=nullptr, Double_t zoomFactor=1.25)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView.html:5455,inherit,inherited,5455,doc/master/classTView.html,https://root.cern,https://root.cern/doc/master/classTView.html,1,['inherit'],['inherited']
Modifiability,"tualGeoTrack provides this functionality. It currently has one implementation inside the drawing package (TGeoTrack class). A track can be defined like:; TVirtualGeoTrack(Int_t id,Int_t pdg,TVirtualGeoTrack *parent=0,; TObject *particle=0);; TObjectMother of all ROOT objects.Definition TObject.h:41; TVirtualGeoTrackBase class for user-defined tracks attached to a geometry.Definition TVirtualGeoTrack.h:23; Where: id is user-defined id of the track, pdg - pdg code, parent - a pointer to parent track, particle - a pointer to an arbitrary particle object (may be a **TParticle**).; A track has a list of daughters that have to be filled using the following method:; TVirtualGeoTrack *TVirtualGeoTrack::AddDaughter(Int_t id,Int_t pdg,; TObject *particle=0);; TVirtualGeoTrack::AddDaughtervirtual TVirtualGeoTrack * AddDaughter(Int_t id, Int_t pdgcode, TObject *particle=nullptr)=0; The method above is pure virtual and have to create a track daughter object. Tracks are fully customizable objects when inheriting from TVirtualGeoTrack class. We will describe the structure and functionality provided by the default implementation of these, which are TGeoTrack objects.; A TGeoTrack is storing a list of control points (x,y,z) belonging to the track, having also time information (t). The painting algorithm of such tracks allows drawing them in any time interval after their creation. The track position at a given time is computed by interpolation between control points.; myTrack->AddPoint(x,y,z,t);; The creation and management of tracks is in fact fully controlled by the TGeoManager class. This holds a list of primary tracks that is also visible during browsing as Tracks folder. Primary tracks are tracks having no parent in the tracking history (for instance the output of particle generators may be considered as primaries from tracking point of view). The manager class holds in TGeoManager::fCurrentTrack a pointer to the current track. When starting tracking a particle, one can create a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:93367,inherit,inheriting,93367,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['inherit'],['inheriting']
Modifiability,"tualPad * GetCanvas ();  Get the pad (or canvas) where it has been drawn. ;  ; double GetHistoCenter (TH1 *histo, double n_rms=1, bool display_result=false);  Get the center of the histo. ;  ; double * GetHistoPvals (TH1 *histo, double percentage);  Get the ""effective sigmas"" of the histo, call delete [] res to release memory. ;  ; double GetMedian (TH1 *histo);  Get the median of an histogram. ;  ; double GetSBCenter (double n_sigmas=1, bool display=false);  Get SB histo center. ;  ; TH1F * GetSBhisto ();  Get B histo. ;  ; double * GetSBIntExtremes (double frac);  Get SB histo integration extremes to obtain the requested area fraction call delete [] res to release memory. ;  ; double GetSBmean ();  Get SB histo mean. ;  ; double GetSBrms ();  Get SB histo RMS. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HybridPlot.html:2515,inherit,inherited,2515,doc/master/classRooStats_1_1HybridPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HybridPlot.html,1,['inherit'],['inherited']
Modifiability,"tual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileHandler.html:13297,inherit,inherited,13297,doc/master/classTFileHandler.html,https://root.cern,https://root.cern/doc/master/classTFileHandler.html,3,['inherit'],['inherited']
Modifiability,"tual~TQtMarker(); static TClass*Class(); voidDrawPolyMarker(QPainter& p, int n, TPoint* xy); Color_tGetColor() const; const QPolygon&GetNodes() const; intGetNumber() const; intGetType() const; intGetWidth() const; virtual TClass*IsA() const; TQtMarker&operator=(const TQtMarker& m); TQtMarker&operator=(const TAttMarker&); voidSetColor(Color_t mcolor); voidSetMarker(int n, TPoint* xy, int type); voidSetMarkerAttributes(const TAttMarker& markerAttributes); voidSetPenAttributes(int type); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. QPolygonfChainarray of the n chains to build a shaped marker; Color_tfCindexColor index of the marker;; intfLineOptionConnect the markers with the segments; intfLineWidthThe width of the line used to outline the markers; intfMarkerTypeType of the current marker; intfNumNodeNumber of chain in the marker shape. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQtMarker(int n = 0, TPoint* xy = 0, int type = 0). ~TQtMarker(); {}. TQtMarker & operator=(const TAttMarker& ); Assign the TQtMarker from ROOT TAttMarker. TQtMarker(const TAttMarker& ); Create the TQtMarker from ROOT TAttMarker. void SetMarkerAttributes(const TAttMarker& markerAttributes); Map Qt marker attributes to ROOT TAttMaker parameters. void SetPenAttributes(int type); Pen attrbutes is 100000*LineFlag + 1000*width + ""marker style"". int GetNumber() const. {return fNumNode;}. const QPolygon & GetNodes() const. {return fChain;}. int GetType() const; {return fMarkerType;}. int GetWidth() const; { return fLineWidth;}. void SetMarker(int n, TPoint* xy, int type); *-* Did we have a chain ?. void DrawPolyMarker(QPainter& p, int n, TPoint* xy); Draw n markers with the current attributes at positions xy.; p : the external QPainter; n : number of markers to draw; xy : x,y coordinates of markers. TQtMarker & operator=(const TQtMarker& m). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQtMarker.html:1493,Inherit,Inheritance,1493,root/html534/TQtMarker.html,https://root.cern,https://root.cern/root/html534/TQtMarker.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tude of tail), for details see html manual and references; Double_tfTxyCalccalculated value of t parameter for 2D peaks; Double_tfTxyErrerror value of t parameter for 2D peaks; Double_tfTxyInitinitial value of t parameter for 2D peaks (relative amplitude of tail), for details see html manual and references; Double_tfTyCalccalculated value of t parameter for 1D ridges in y direction; Double_tfTyErrerror value of t parameter for 1D ridges in y direction; Double_tfTyInitinitial value of t parameter for 1D ridges in y direction (relative amplitude of tail), for details see html manual and references; Double_t*fVolume[fNPeaks] array of calculated volumes of 2D peaks, output parameters; Double_t*fVolumeErr[fNPeaks] array of volumes errors of 2D peaks, output parameters; Int_tfXmaxlast fitted channel in x direction; Int_tfXminfirst fitted channel in x direction; Int_tfYmaxlast fitted channel in y direction; Int_tfYminfirst fitted channel in y direction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpectrum2Fit(); default constructor. TSpectrum2Fit(Int_t numberPeaks); numberPeaks: number of fitted peaks (must be greater than zero); the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class. . Shape function of the fitted; peaks contains the two-dimensional symmetrical Gaussian two one-dimensional; symmetrical Gaussian ridges as well as nonsymmetrical terms and background. ~TSpectrum2Fit(); destructor. Double_t Erfc(Double_t x). AUXILIARY FUNCTION. This function calculates error function of x. Double_t Derfc(Double_t x). AUXILIARY FUNCTION. This function calculates derivative of error function of x. Double_t Ourpowl(Double_t a, Int_t pw); power function. void StiefelInversion(Double_t** a, Int_t size). AUXILIARY FUNCTION. This function calculates solution of th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrum2Fit.html:22029,Inherit,Inheritance,22029,root/html532/TSpectrum2Fit.html,https://root.cern,https://root.cern/root/html532/TSpectrum2Fit.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tup Dataset(s); ; # Define input data file and signal and background trees; ; ; imgSize = 16 * 16; inputFileName = ""images_data_16x16.root""; ; # if the input file does not exist create it; if ROOT.gSystem.AccessPathName(inputFileName):; MakeImagesTree(nevt, 16, 16); ; inputFile = TFile.Open(inputFileName); if inputFile is None:; ROOT.Warning(""TMVA_CNN_Classification"", ""Error opening input file %s - exit"", inputFileName.Data()); ; ; # inputFileName = ""tmva_class_example.root""; ; ; # --- Register the training and test trees; ; signalTree = inputFile.Get(""sig_tree""); backgroundTree = inputFile.Get(""bkg_tree""); ; nEventsSig = signalTree.GetEntries(); nEventsBkg = backgroundTree.GetEntries(); ; # global event weights per tree (see below for setting event-wise weights); signalWeight = 1.0; backgroundWeight = 1.0; ; # You can add an arbitrary number of signal or background trees; loader.AddSignalTree(signalTree, signalWeight); loader.AddBackgroundTree(backgroundTree, backgroundWeight); ; ## add event variables (image); ## use new method (from ROOT 6.20 to add a variable array for all image data); loader.AddVariablesArray(""vars"", imgSize); ; # Set individual event weights (the variables must exist in the original TTree); # for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; # for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; # loader->SetBackgroundWeightExpression( ""weight"" );; ; # Apply additional cuts on the signal and background samples (can be different); mycuts = """" # for example: TCut mycuts = ""abs(var1)<0.5 && abs(var2-0.5)<1"";; mycutb = """" # for example: TCut mycutb = ""abs(var1)<0.5"";; ; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8py.html:7609,variab,variables,7609,doc/master/TMVA__CNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8py.html,1,['variab'],['variables']
Modifiability,"tup of methods ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TestMulticlass ();  test multiclass classification ;  ; virtual void TestRegression (Double_t &bias, Double_t &biasT, Double_t &dev, Double_t &devT, Double_t &rms, Double_t &rmsT, Double_t &mInf, Double_t &mInfT, Double_t &corr, Types::ETreeType type);  calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample ;  ; bool TrainingEnded ();  ; void TrainMethod ();  ; virtual void WriteEvaluationHistosToFile (Types::ETreeType treetype);  writes all MVA evaluation histograms to file ;  ; void WriteStateToFile () const;  write options and weights to file note that each one text file for the main configuration information and one ROOT file for ROOT objects are created ;  ;  Public Member Functions inherited from TMVA::IMethod;  IMethod ();  ; virtual ~IMethod ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &optname, const T &);  ; void CheckForUnusedOptions () const;  checks for unused options in option string ;  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc="""");  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc="""");  ; const char * GetConfigDescription () const;  ; const char * GetConfigName () const;  ; const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:14477,inherit,inherited,14477,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['inherit'],['inherited']
Modifiability,"tupMethod ();  setup of methods ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TestMulticlass ();  test multiclass classification ;  ; virtual void TestRegression (Double_t &bias, Double_t &biasT, Double_t &dev, Double_t &devT, Double_t &rms, Double_t &rmsT, Double_t &mInf, Double_t &mInfT, Double_t &corr, Types::ETreeType type);  calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample ;  ; bool TrainingEnded ();  ; void TrainMethod ();  ; virtual void WriteEvaluationHistosToFile (Types::ETreeType treetype);  writes all MVA evaluation histograms to file ;  ; virtual void WriteMonitoringHistosToFile () const;  write special monitoring histograms to file dummy implementation here --------------— ;  ; void WriteStateToFile () const;  write options and weights to file note that each one text file for the main configuration information and one ROOT file for ROOT objects are created ;  ;  Public Member Functions inherited from TMVA::IMethod;  IMethod ();  ; virtual ~IMethod ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &optname, const T &);  ; void CheckForUnusedOptions () const;  checks for unused options in option string ;  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc="""");  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodC50.html:11523,inherit,inherited,11523,doc/master/classTMVA_1_1MethodC50.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodC50.html,9,['inherit'],['inherited']
Modifiability,"tuple = (TNtuple *)file->Get(""ntuple"");. // Create an interface; TTreeTableInterface *iface = new TTreeTableInterface(ntuple);. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface, 10, 6);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. // Set a selection; iface->SetSelection(""px > 0."");; // Add a column; iface->AddColumn(""(px+py)/(px-py)"", 0);; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }. Function Members (Methods); public:. virtual~TTableRange(); static TClass*Class(); virtual TClass*IsA() const; TTableRange&operator=(const TTableRange&); Bool_toperator==(TTableRange& other); virtual voidPrint(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TTableRange(); TTableRange(const TTableRange&). Data Members; public:. UInt_tfXbrBottom right X coordinate; UInt_tfXtlTop left X coordinate; UInt_tfYbrBottom right Y coordinate; UInt_tfYtlTop left Y coordinate. Class Charts. Inheritance Chart:. TTableRange. Function documentation; TTableRange(); TTableRange constuctor. void Print(); Print the values of a range. Bool_t operator==(TTableRange& other); Operator to determine if 2 ranges are equal. TTableRange(). virtual ~TTableRange(); {}. » Author: Roel Aaij 21/07/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: Tue Jun 30 15:31:52 2015 » Last generated: 2015-06-30 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTableRange.html:4212,Inherit,Inheritance,4212,root/html602/TTableRange.html,https://root.cern,https://root.cern/root/html602/TTableRange.html,1,['Inherit'],['Inheritance']
Modifiability,"ture pointed by two_dim_peak structure pointer.; Function parameters:. source: pointer to the vector of the source spectrum; sizex: x length of the source spectrum; sizey: y length of the source spectrum; sigma: sigma of searched peaks. An example of the two-dimensional spectrum with the identified peaks is shown in Figure 3.8. Two-dimensional spectrum with the identified peaks. We have also generalized the peak searching function similarly to one-dimensional data. The generalized peak searching function for two-dimensional spectra has the form of; Int_t Search2General(float **source,; int sizex,; int sizey,; double sigma,; int threshold,; bool markov,; int aver_window);; This function searches for peaks in the source spectrum. The number of found peaks and their positions are written into the structure pointed by two_dim_peak structure pointer.; Function parameters:. source: pointer to the vector of the source spectrum; sizex: x length of the source spectrum; sizey: y length of the source spectrum; sigma: sigma of searched peaks; threshold: threshold value for peaks selection; markov: logical variable. If it is set to true, then the source spectrum is first replaced by the new spectrum calculated using Markov chains method; aver_window averaging window of searched peaks (applies only for the Markov method). An example of experimental 2-dimensional spectrum is given in Figure 3.9. The number of peaks identified by the function now is 295. Experimental 2-dimensional spectrum. The function works even for very noisy data. In Figure 3.10 we present synthetic 2-dimensional spectrum with 5 peaks. The method should recognize what is the real 2-dimensional peak and what is the crossing of two 1-dimensional ridges. The Markov spectrum with averaging window=3 is given in Figure 3.11. One can observe that this spectrum is smoother than the original one. After applying the general peak searching function to the Markov spectrum with sigma=2 and threshold=600, we get correctly id",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html:21856,variab,variable,21856,root/htmldoc/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html,2,['variab'],['variable']
Modifiability,"ture. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TGPopupMenu; TGMenuEntry * fCurrent;  currently selected menu entry ;  ; Cursor_t fDefaultCursor;  right pointing cursor ;  ; TTimer * fDelay;  delay before popping up cascading menu ;  ; TList * fEntryList;  list of menu entries ;  ; UInt_t fEntrySep;  separation distance between entries ;  ; FontStruct_t fFontStruct;  font to draw menu entries ;  ; Bool_t fHasGrab;  true if menu has grabbed pointer ;  ; FontStruct_t fHifontStruct;  font to draw highlighted entries ;  ; TGMenuBar * fMenuBar;  menu bar (if any) ;  ; UInt_t fMenuHeight;  height of popup menu ;  ; UInt_t fMenuWidth;  width of popup menu ;  ; const TGWindow * fMsgWindow;  window which handles menu events ;  ; GContext_t fNormGC;  normal drawing graphics context ;  ; Bool_t fPoppedUp;  true if menu is currently popped up ;  ; GContext_t fSelbackGC;  graphics context for drawing selection background ;  ; GContext_t fSelGC;  graphics context for drawing selections ;  ; TGSplitButton * fSplitButton;  split button (if any) ;  ; Bool_t fStick;  stick mode (popup menu stays sticked on screen) ;  ; UInt_t fXl;  Max width of all menu entries. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:32308,inherit,inherited,32308,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,1,['inherit'],['inherited']
Modifiability,"ture; TGeoExtension*TGeoMaterial::fFWExtension! Transient framework-defined extension to materials; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Int_tTGeoMaterial::fIndexmaterial index; Double_tTGeoMaterial::fIntLeninteraction length; TStringTNamed::fNameobject identifier; Int_t*fNatoms[fNelements] array of numbers of atoms; Int_tfNelementsnumber of elements; Double_tTGeoMaterial::fPressurepressure; Double_tTGeoMaterial::fRadLenradiation length; TObject*TGeoMaterial::fShadershader with optical properties; TGeoMaterial::EGeoMaterialStateTGeoMaterial::fStatematerial state; Double_tTGeoMaterial::fTemperaturetemperature; TStringTNamed::fTitleobject title; TGeoExtension*TGeoMaterial::fUserExtension! Transient user-defined extension to materials; Double_t*fWeights[fNelements] array of relative proportions by mass; Double_tTGeoMaterial::fZZ of material; Double_t*fZmixture[fNelements] array of Z of the elements. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMixture(); Default constructor. TGeoMixture(const char* name, Int_t nel, Double_t rho = -1); constructor. TGeoMixture(const TGeoMixture& ); copy constructor. TGeoMixture& operator=(const TGeoMixture& ); assignment operator. ~TGeoMixture(); Destructor. void AverageProperties(); Compute effective A/Z and radiation length. void AddElement(Double_t a, Double_t z, Double_t weight); add an element to the mixture using fraction by weight; Check if the element is already defined. void AddElement(TGeoMaterial* mat, Double_t weight); Define one component of the mixture as an existing material/mixture. void AddElement(TGeoElement* elem, Double_t weight); add an element to the mixture using fraction by weight. void AddElement(TGeoElement* elem, Int_t natoms); Add a mixture element by number of atoms in the chemical formula. void DefineElement(Int_t iel, Int_t z, Int_t natoms); Define the mixture element at index iel by number of atoms in the c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoMixture.html:10212,Inherit,Inheritance,10212,root/html534/TGeoMixture.html,https://root.cern,https://root.cern/root/html534/TGeoMixture.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tureTag ();  ; void makeTypedStructureTag ();  ; TNamed * structureTag ();  ; TNamed * typedStructureTag ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; template<class Arg_t > ; void processArg (Arg_t &&arg);  ; void processArg (const char *name);  ; void processArg (const RooAbsArg &arg);  ; void processArg (const RooAbsArg *arg);  ; void processArg (const RooAbsCollection &coll);  ; void processArg (const RooArgList &list);  ; void processArg (double value);  ; void processArg (RooAbsArg *var);  ; void processArg (RooAbsCollection &&coll);  ; template<typename... Args_t> ; void processArgs (Args_t &&... args);  . Additional Inherited Members;  Public Types inherited from RooAbsCollection; using const_iterator = Storage_t::const_iterator;  ; using Storage_t = std::vector< RooAbsArg * >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from RooAbsCollect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgSet.html:28328,inherit,inherited,28328,doc/master/classRooArgSet.html,https://root.cern,https://root.cern/doc/master/classRooArgSet.html,2,['inherit'],['inherited']
Modifiability,"turn 0;; 298 }; 299 ; 300 INLINE_TEMPLATE_ARGS Int_t ReadTextTObject(TBuffer &buf, void *addr, const TConfiguration *config); 301 {; 302 void *x = (void *)(((char *)addr) + config->fOffset);; 303 buf.StreamObject(x, TObject::Class(), TObject::Class());; 304 return 0;; 305 }; 306 ; 307 INLINE_TEMPLATE_ARGS Int_t ReadTextBaseClass(TBuffer &buf, void *addr, const TConfiguration *config); 308 {; 309 void *x = (void *)(((char *)addr) + config->fOffset);; 310 // Idea: Implement buf.ReadBasic/Primitive to avoid the return value; 311 ((TBufferText *)&buf)->ReadBaseClass(x, (TStreamerBase *)config->fCompInfo->fElem);; 312 return 0;; 313 }; 314 ; 315 INLINE_TEMPLATE_ARGS Int_t ReadTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config); 316 {; 317 void *x = (void *)(((char *)addr) + config->fOffset);; 318 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 319 ; 320 UInt_t start, count;; 321 /* Version_t v = */ buf.ReadVersion(&start, &count, config->fCompInfo->fClass);; 322 (*pstreamer)(buf, x, config->fCompInfo->fLength);; 323 buf.CheckByteCount(start, count, config->fCompInfo->fElem->GetFullName());; 324 return 0;; 325 }; 326 ; 327 INLINE_TEMPLATE_ARGS Int_t ReadTextTObjectBase(TBuffer &buf, void *addr, const TConfiguration *config); 328 {; 329 // action required to call custom code for TObject as base class; 330 void *x = (void *)(((char *)addr) + config->fOffset);; 331 buf.ReadClassBuffer(TObject::Class(), x, TObject::Class());; 332 return 0;; 333 }; 334 ; 335 INLINE_TEMPLATE_ARGS Int_t ReadTextTNamed(TBuffer &buf, void *addr, const TConfiguration *config); 336 {; 337 void *x = (void *)(((char *)addr) + config->fOffset);; 338 buf.StreamObject(x, TNamed::Class(), TNamed::Class());; 339 return 0;; 340 }; 341 ; 342 /** Direct copy of code from TStreamerInfo::WriteBufferAux,; 343 * potentially can be used later for non-text streaming */; 344 template<bool kIsTextT>; 345 INLINE_TEMPLATE_ARGS Int_t WriteSTLp(TBuffer &buf, void *addr, const TConfiguration *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:12106,config,config,12106,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"turn current value, normalized by integrating over the observables in nset. ;  ; virtual void initGenerator (Int_t code);  Interface for one-time initialization to setup the generator for the specified code. ;  ; virtual bool isDirectGenSafe (const RooAbsArg &arg) const;  Check if given observable can be safely generated using the pdfs internal generator mechanism (if that existsP). ;  ; bool mustBeExtended () const;  If true PDF must provide extended likelihood term. ;  ; const char * normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:15965,config,configuration,15965,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['config'],['configuration']
Modifiability,"turn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Char_t fMaximum;  Maximum value if leaf range is specified. ;  ; Char_t fMinimum;  Minimum value if leaf range is specified. ;  ; Char_t ** fPointer;  ! Address of a pointer to data buffer! ;  ; Char_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 ))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafB.html:14668,variab,variable,14668,doc/master/classTLeafB.html,https://root.cern,https://root.cern/doc/master/classTLeafB.html,1,['variab'],['variable']
Modifiability,"turn fMinimizerOpts.MinimizerAlgorithm(); }. bool NormalizeErrors() const. flag to check if resulting errors are be normalized according to chi2/ndf. { return fNormErrors; }. bool ParabErrors() const; do analysis for parabolic errors. { return fParabErrors; }. bool MinosErrors() const; do minos errros analysis on the parameters. { return fMinosErrors; }. bool UpdateAfterFit() const; Update configuration after a fit using the FitResult. { return fUpdateAfterFit; }. bool UseWeightCorrection() const; Apply Weight correction for error matrix computation. { return fWeightCorr; }. const std::vector<unsigned int> & MinosParams() const; return vector of parameter indeces for which the Minos Error will be computed. { return fMinosParams; }. void SetNormErrors(bool on = true). set the option to normalize the error on the result according to chi2/ndf. { fNormErrors= on; }. void SetParabErrors(bool on = true); set parabolic erros. { fParabErrors = on; }. void SetMinosErrors(bool on = true); set Minos erros computation to be performed after fitting. { fMinosErrors = on; }. void SetWeightCorrection(bool on = true); apply the weight correction for error matric computation. { fWeightCorr = on; }. void SetMinosErrors(const vector<unsigned int>& paramInd); set parameter indeces for running Minos; this can be used for running Minos on a subset of parameters - otherwise is run on all of them; if MinosErrors() is set. void SetUpdateAfterFit(bool on = true); Update configuration after a fit using the FitResult. { fUpdateAfterFit = on; }. void SetDefaultMinimizer(const char* type, const char* algo = 0). static function to control default minimizer type and algorithm. » Author: L. Moneta Thu Sep 21 16:21:29 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__FitConfig.html:6356,config,configuration,6356,root/html602/ROOT__Fit__FitConfig.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__FitConfig.html,2,['config'],['configuration']
Modifiability,"turn fMinimizerOpts.MinimizerAlgorithm(); }. bool NormalizeErrors() const. flag to check if resulting errors are be normalized according to chi2/ndf. { return fNormErrors; }. bool ParabErrors() const; do analysis for parabolic errors. { return fParabErrors; }. bool MinosErrors() const; do minos errros analysis on the parameters. { return fMinosErrors; }. bool UpdateAfterFit() const; Update configuration after a fit using the FitResult. { return fUpdateAfterFit; }. bool UseWeightCorrection() const; Apply Weight correction for error matrix computation. { return fWeightCorr; }. const std::vector<unsigned int> & MinosParams() const; return vector of parameter indeces for which the Minos Error will be computed. { return fMinosParams; }. void SetNormErrors(bool on = true). set the option to normalize the error on the result according to chi2/ndf. { fNormErrors= on; }. void SetParabErrors(bool on = true); set parabolic erros. { fParabErrors = on; }. void SetMinosErrors(bool on = true); set Minos erros computation to be performed after fitting. { fMinosErrors = on; }. void SetWeightCorrection(bool on = true); apply the weight correction for error matric computation. { fWeightCorr = on; }. void SetMinosErrors(const vector<unsigned int>& paramInd); set parameter indeces for running Minos; this can be used for running Minos on a subset of parameters - otherwise is run on all of them; if MinosErrors() is set. void SetUpdateAfterFit(bool on = true); Update configuration after a fit using the FitResult. { fUpdateAfterFit = on; }. void SetDefaultMinimizer(const char* type, const char* algo = 0). static function to control default minimizer type and algorithm. » Author: L. Moneta Thu Sep 21 16:21:29 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__FitConfig.html:6159,config,configuration,6159,root/html534/ROOT__Fit__FitConfig.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__FitConfig.html,2,['config'],['configuration']
Modifiability,"turn fMinimizerOpts.MinimizerAlgorithm(); }. bool NormalizeErrors() const. flag to check if resulting errors are be normalized according to chi2/ndf. { return fNormErrors; }. bool ParabErrors() const; do analysis for parabolic errors. { return fParabErrors; }. bool MinosErrors() const; do minos errros analysis on the parameters. { return fMinosErrors; }. bool UpdateAfterFit() const; Update configuration after a fit using the FitResult. { return fUpdateAfterFit; }. bool UseWeightCorrection() const; Apply Weight correction for error matrix computation. { return fWeightCorr; }. const std::vector<unsigned int> & MinosParams() const; return vector of parameter indeces for which the Minos Error will be computed. { return fMinosParams; }. void SetNormErrors(bool on = true). set the option to normalize the error on the result according to chi2/ndf. { fNormErrors= on; }. void SetParabErrors(bool on = true); set parabolic erros. { fParabErrors = on; }. void SetMinosErrors(bool on = true); set Minos erros computation to be performed after fitting. { fMinosErrors = on; }. void SetWeightCorrection(bool on = true); apply the weight correction for error matric computation. { fWeightCorr = on; }. void SetMinosErrors(const vector<unsigned int>& paramInd); set parameter indeces for running Minos; this can be used for running Minos on a subset of parameters - otherwise is run on all of them; if MinosErrors() is set. void SetUpdateAfterFit(bool on = true); Update configuration after a fit using the FitResult. { fUpdateAfterFit = on; }. void SetDefaultMinimizer(const char* type, const char* algo = 0). static function to control default minimizer type and algorithm. » Author: L. Moneta Thu Sep 21 16:21:29 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__FitConfig.html:6356,config,configuration,6356,root/html604/ROOT__Fit__FitConfig.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__FitConfig.html,2,['config'],['configuration']
Modifiability,"turn reflection information of type. Object CastObject(const Reflex::Type& to, const Reflex::Object& obj) const. * CastObject an object from this class type to another one; * @param to is the class type to cast into; * @param obj the memory address of the object to be casted. Member DataMemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * Construct will call the constructor of a given type and allocate; * the memory for it; * @param signature of the constructor; * @param values for parameters of the constructor; * @param mem place in memory for implicit construction; * @return new object. Object Construct( const Type & signature,; const std::vector < Object > & values,; void * mem = 0 ) const;. * DataMemberAt will return the nth data member of the type; * @param nth the nth data member; * @return nth data member. Type DynamicType(const Reflex::Object& obj) const. * DynamicType is used to discover the dynamic type (useful in; * case of polymorphism); * @param mem is the memory address of the object to checked; * @return the actual class of the object. Member FunctionMemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * FunctionMemberAt will return the nth function member of the type; * @param nth function member; * @return reflection information of nth function member. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsEquivalentTo(const Reflex::Type& typ, unsigned int modifiers_mask = 0) const. * IsEquivalentTo returns true if the two types are equivalent; * @param type to compare to; * @modifiers_mask d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/Reflex__Type.html:14467,polymorphi,polymorphism,14467,root/html526/Reflex__Type.html,https://root.cern,https://root.cern/root/html526/Reflex__Type.html,6,['polymorphi'],['polymorphism']
Modifiability,"turn the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  . Private Member Functions;  WrappedParamFunctionGen (const WrappedParamFunctionGen &)=delete;  ; double DoEval (const double *x) const override;  evaluate the function (re-implement for being more efficient) ;  ; double DoEvalPar (const double *x, const double *p) const override;  implement the required IParamFunction interface ;  ; void DoInit ();  ; WrappedParamFunctionGen & operator= (const WrappedParamFunctionGen &)=delete;  ; void SetParValues (unsigned int npar, const double *p) const;  . Private Attributes; unsigned int fDim;  ; FuncPtr fFunc;  ; std::vector< double > fParams;  ; std::vector< unsigned int > fParIndices;  ; std::vector< unsigned int > fVarIndices;  ; std::vector< double > fX;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< double >; typedef IBaseFunctionMultiDimTempl< double > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . #include <Math/WrappedParamFunction.h>. Inheritance diagram for ROOT::Math::WrappedParamFunctionGen< FuncPtr >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ WrappedParamFunctionGen() [1/3]. template<typename FuncPtr = FreeMultiFunctionPtr> . ROOT::Math::WrappedParamFunctionGen< FuncPtr >::WrappedParamFunctionGen ; (; const FuncPtr & ; func, . unsigned int ; dim, . unsigned int ; npar, . const double * ; par, . const unsigned int * ; idx . ). inline . Constructor a wrapped function from a pointer to a generic callable object implementation operator()(const double *), the new function dimension, the number of parameters (number of fixed variables) and an array specifying the index of the fixed variables which became parameters in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html:3535,inherit,inherited,3535,doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html,2,['inherit'],['inherited']
Modifiability,"turn, will trigger the calling of; TRootBrowser::Add() which will fill the IconBox and the tree.; Emits signal ""BrowseObj(TObject*)"". void CloneBrowser(); Clone the browser. A new Browser will be created, with the same; plugins executed in the current one. void CloseTab(Int_t id); Remove tab element id from right tab. void CloseTabs(); Properly close the mainframes embedded in the different tabs. void CloseWindow(); Called when window is closed via the window manager. void DoTab(Int_t id); Handle Tab navigation. Long_t ExecPlugin(const char* name = 0, const char* fname = 0, const char* cmd = 0, Int_t pos = kRight, Int_t subpos = -1); Execute a macro and embed the created frame in the tab ""pos""; and tab element ""subpos"". Option_t * GetDrawOption() const; Returns drawing option. TGTab* GetTab(Int_t pos) const; Returns the TGTab at position pos. Bool_t HandleKey(Event_t* event); Handle keyboard events. void HandleMenu(Int_t id); Handle menu entries events. void InitPlugins(Option_t* opt = """"); Initialize default plugins. Could be also of the form:; StartEmbedding(0);; TPluginHandler *ph;; ph = gROOT->GetPluginManager()->FindHandler(""TGClassBrowser"");; if (ph && ph->LoadPlugin() != -1) {; ph->ExecPlugin(3, gClient->GetRoot(), 200, 500);; }; StopEmbedding();. void ReallyDelete(); Really delete the browser and the this GUI. void RecursiveRemove(TObject* obj); Recursively remove object from browser. void RecursiveReparent(TGPopupMenu* popup); Recursively reparent TGPopupMenu to gClient->GetDefaultRoot(). void Refresh(Bool_t force = kFALSE); Refresh the actual browser contents. void RemoveTab(Int_t pos, Int_t subpos); Remove tab element ""subpos"" from tab ""pos"". void SetTab(Int_t pos = kRight, Int_t subpos = -1); Switch to Tab ""subpos"" in TGTab ""pos"". void SetTabTitle(const char* title, Int_t pos = kRight, Int_t subpos = -1); Set text ""title"" of Tab ""subpos"" in TGTab ""pos"". void SetStatusText(const char* txt, Int_t col); Set text in culumn col in status bar. void ShowMenu(TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TRootBrowser.html:27459,plugin,plugins,27459,root/html530/TRootBrowser.html,https://root.cern,https://root.cern/root/html530/TRootBrowser.html,3,['plugin'],['plugins']
Modifiability,"turnCond<F, T>> ; auto MapReduce (F func, const std::vector< T > &args, R redfunc) -> InvokeResult_t< F, T >;  Execute a function in parallel over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce). ;  ; template<class F , class T , class R , class Cond = validMapReturnCond<F, T>> ; auto MapReduce (F func, std::vector< T > &args, R redfunc) -> InvokeResult_t< F, T >;  Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce). ;  ; template<class F , class R , class Cond = validMapReturnCond<F>> ; auto MapReduce (F func, unsigned nTimes, R redfunc) -> InvokeResult_t< F >;  Execute a function nTimes in parallel (Map) and accumulate the results into a single value (Reduce). ;  ; TProcessExecutor & operator= (const TProcessExecutor &)=delete;  ; void SetNWorkers (unsigned n);  ;  Public Member Functions inherited from ROOT::TExecutorCRTP< TProcessExecutor >;  TExecutorCRTP ()=default;  ;  TExecutorCRTP (const TExecutorCRTP &)=delete;  ; auto Map (F func, const std::vector< T > &args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of an immutable vector. ;  ; auto Map (F func, ROOT::TSeq< INTEGER > args) -> std::vector< InvokeResult_t< F, INTEGER > >;  Execute a function over a sequence of indexes. ;  ; auto Map (F func, std::initializer_list< T > args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of an initializer_list. ;  ; auto Map (F func, std::vector< T > &args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of a vector. ;  ; auto Map (F func, unsigned nTimes) -> std::vector< InvokeResult_t< F > >;  Execute a function without arguments several times. ;  ; T * MapReduce (F func, const std::vector< T * > &args);  Execute a function over the TObject-inheriting elements of an immutable vector (Map) and merge the objects into a single one (Reduce). ;  ; auto MapR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html:5174,inherit,inherited,5174,doc/v632/classROOT_1_1TProcessExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html,2,['inherit'],['inherited']
Modifiability,"turned. UserGroup_t * GetUserInfo(const char* user = 0); Returns all user info in the UserGroup_t structure. If user = 0, returns; current user's id info. The returned structure must be deleted by the; user. In case of error 0 is returned. UserGroup_t * GetGroupInfo(Int_t gid); Returns all group info in the UserGroup_t structure. The only active; fields in the UserGroup_t structure for this call are:; fGid and fGroup; The returned structure must be deleted by the user. In case of; error 0 is returned. UserGroup_t * GetGroupInfo(const char* group = 0); Returns all group info in the UserGroup_t structure. The only active; fields in the UserGroup_t structure for this call are:; fGid and fGroup; If group = 0, returns current user's group. The returned structure; must be deleted by the user. In case of error 0 is returned. void Setenv(const char* name, const char* value); Set environment variable. const char * Getenv(const char* name); Get environment variable. void Unsetenv(const char* name); Unset environment variable. int Exec(const char* shellcmd); Execute a command. FILE * OpenPipe(const char* shellcmd, const char* mode); Open a pipe. int ClosePipe(FILE* pipe); Close the pipe. int GetPid(); Get process id. void Exit(int code, Bool_t mode = kTRUE); Exit the application. void Abort(int code = 0); Abort the application. void StackTrace(); Print a stack trace. void Openlog(const char* name, Int_t options, ELogFacility facility); Open connection to system log daemon. For the use of the options and; facility see the Unix openlog man page. void Syslog(ELogLevel level, const char* mess); Send mess to syslog daemon. Level is the logging level and mess the; message that will be written on the log. void Closelog(); Close connection to system log daemon. Int_t RedirectOutput(const char* name, const char* mode = ""a"", RedirectHandle_t* h = 0); Redirect standard output (stdout, stderr) to the specified file.; If the file argument is 0 the output is set again to stderr, stdout.; The",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnixSystem.html:30000,variab,variable,30000,root/html534/TUnixSystem.html,https://root.cern,https://root.cern/root/html534/TUnixSystem.html,6,['variab'],['variable']
Modifiability,"turnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::MethodDT::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::MethodDT::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 139 of file MethodDT.h. ◆ CreateRanking(). const TMVA::Ranking * TMVA::MethodDT::CreateRanking ; (; ). virtual . Implements TMVA::MethodBase.; Definition at line 566 of file MethodDT.cxx. ◆ DeclareCompatibilityOptions(). void TMVA::MethodDT::DeclareCompatibilityOptions ; (; ). virtual . options that are used ONLY for the READER to ensure backward compatibility ; Reimplemented from TMVA::MethodBase.; Definition at line 245 of file MethodDT.cxx. ◆ DeclareOptions(). void TMVA::MethodDT::DeclareOptions ; (; ). virtual . Define the options (their key words) that can be set in the option string. . UseRandomisedTrees choose at each node splitting a random set of variables; UseNvars use UseNvars variables in randomised trees; SeparationType the separation criterion applied in the node splitting. known:; GiniIndex; MisClassificationError; CrossEntropy; SDivSqrtSPlusB. nEventsMin: the minimum number of events in a node (leaf criteria, stop splitting); nCuts: the number of steps in the optimisation of the cut for a node (if < 0, then step size is determined by the events); UseYesNoLeaf decide if the classification is done simply by the node type, or the S/B (from the training) in the leaf node; NodePurityLimit the minimum purity to classify a node as a signal node (used in pruning and boosting to determine misclassification error rate); PruneMethod The Pruning method: known:; NoPruning // switch off pruning completely; ExpectedError; CostComplexity. PruneStrength a parameter to adjust the amount of pruning. Should be large enough such that overtraining is avoided""); . Implements TMVA::MethodBase.; Definition at line 212 of file MethodDT.cxx. ◆ DeclFileName(). static const char * T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:34754,variab,variables,34754,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,2,['variab'],['variables']
Modifiability,"tus of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; RooRealProxy_meas; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; RooRealProxy_true; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooPullVar.html:31786,config,configuration,31786,root/html526/RooPullVar.html,https://root.cern,https://root.cern/root/html526/RooPullVar.html,2,['config'],['configuration']
Modifiability,"tus of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_t_valueConstant value of self; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooConstVar.html:31386,config,configuration,31386,root/html526/RooConstVar.html,https://root.cern,https://root.cern/root/html526/RooConstVar.html,2,['config'],['configuration']
Modifiability,"tus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddNode (TStructNode *node, ULong_t size);  Find list with nodes on specified level and add node to this list and increment list of sizes and list of members. ;  ; void CountMembers (TClass *cl, TStructNode *parent, void *pointer);  Count allocated memory, increase member counters, find child nodes. ;  ; void Prepare ();  Create top node and find all member nodes. ;  ; void Reset ();  Deleting nodes, maps and array. ;  . Private Attributes; TList fColors;  ; TStructViewerGUI * fGUI;  ; TObjArray fLevelArray;  ; TExMap fLevelMembersCount;  ; TExMap fLevelSize;  ; void * fPointer;  ; TClass * fPointerClass;  ; TExMap fPointers;  ; TStructNode * fTopNode;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructViewer.h>. Inheritance diagram for TStructViewer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStructViewer.html:10667,inherit,inherited,10667,doc/master/classTStructViewer.html,https://root.cern,https://root.cern/doc/master/classTStructViewer.html,1,['inherit'],['inherited']
Modifiability,"tus of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  ELockingKinds { kLockFree = 0; , kLockBusy = 1; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void AddIdEntry (Long64_t tableid, Int_t subid, Int_t type, const char *name, const char *sqlname, const char *info);  Add entry into IdsTable, where all tables names and columns names are listed. ;  ; TString CodeLongString (Long64_t objid, Int_t strid);  Produces id which will be placed in column instead of string itself. ;  ; void CreateBasicTables ();  Creates initial tables in database This is table with configurations and table with keys Function called once when first object is stored to the file. ;  ; Bool_t CreateClassTable (TSQLClassInfo *sqlinfo, TObjArray *colinfos);  Create normal class table if required. ;  ; Bool_t CreateRawTable (TSQLClassInfo *sqlinfo);  Create the raw table. ;  ; Long64_t DefineNextKeyId ();  Returns next possible key identifier. ;  ; TString DefineTableName (const char *clname, Int_t version, Bool_t rawtable);  Proposes table name for class. ;  ; void DeleteKeyFromDB (Long64_t keyid);  Remove key with specified id from keys table also removes all objects data, related to this table. ;  ; Long64_t DirCreateEntry (TDirectory *) final;  Create entry for directory in database. ;  ; Int_t DirReadKeys (TDirectory *) final;  Read directory list of keys from database. ;  ; void DirWriteHeader (TDirectory *) final;  Update dir header in the file. ;  ; void DirWriteKeys (TDirectory *) final;  Write directory keys list to database. ;  ; TSQLClassInfo * FindSQLClassInfo ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:41082,config,configurations,41082,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['config'],['configurations']
Modifiability,"tus of the TTree branch associated with the given set of dataset observables. ;  ; void setExternalWeightArray (const double *arrayWgt, const double *arrayWgtErrLo, const double *arrayWgtErrHi, const double *arraySumW2) override;  ; void Streamer (TBuffer &) override;  Stream an object of class RooTreeDataStore. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; double sumEntries () const override;  ; TTree & tree ();  ; const TTree * tree () const override;  ; double weight () const override;  Return the weight of the n-th data point (n='index') in memory. ;  ; virtual double weight () const=0;  ; double weight (Int_t index) const;  ; void weightError (double &lo, double &hi, RooAbsData::ErrorType etype=RooAbsData::Poisson) const override;  ; double weightError (RooAbsData::ErrorType etype=RooAbsData::Poisson) const override;  ;  Public Member Functions inherited from RooAbsDataStore;  RooAbsDataStore ();  ;  RooAbsDataStore (const RooAbsDataStore &other, const char *newname=nullptr);  ;  RooAbsDataStore (const RooAbsDataStore &other, const RooArgSet &vars, const char *newname=nullptr);  ;  RooAbsDataStore (RooStringView name, RooStringView title, const RooArgSet &vars);  ; RooArgSet * addColumns (const RooArgList &varList);  ; const RooArgSet & cachedVars () const;  ; int defaultPrintContents (Option_t *) const override;  Define default print options, for a given print style. ;  ; bool dirtyProp () const;  ; virtual void dump ();  ; virtual void forceCacheUpdate ();  ; virtual RooAbsData::CategorySpans getCategoryBatches (std::size_t, std::size_t) const;  ; virtual bool hasFilledCache () const;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print argument of dataset, i.e. the observable names. ;  ; void printClassName (std::ostream &os) const override;  Print class name of dataset. ;  ; void printMultiline (std::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeDataStore.html:7103,inherit,inherited,7103,doc/master/classRooTreeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooTreeDataStore.html,1,['inherit'],['inherited']
Modifiability,"tusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGApplication.html:19962,inherit,inherited,19962,doc/master/classTGApplication.html,https://root.cern,https://root.cern/doc/master/classTGApplication.html,1,['inherit'],['inherited']
Modifiability,"tusBits { kIsInitializing; kIsDone; kIsTree; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTVirtualPacketizer::fAWLastFillWhether to fill the last measurement; Int_tTVirtualPacketizer::fActWrksLastActive workers at fProcTimeLast; Long_tTVirtualPacketizer::fCircNCircularity; TNtupleD*TVirtualPacketizer::fCircProgKeeps circular info for ""instantenous""; TList*TVirtualPacketizer::fConfigParamsList of configuration parameters; TStringTVirtualPacketizer::fDataSetName of the dataset being processed (for dataset-driven runs); Float_tTVirtualPacketizer::fEffSessLastNumber of effective sessions at fProcTimeLast; Float_tTVirtualPacketizer::fEvtRateLastEvt rate at fProcTimeLast; TList*TVirtualPacketizer::fFailedPacketsa list of packets that failed while processing; Float_tTVirtualPacketizer::fInitTimetime before processing; TList*TVirtualPacketizer::fInputInput list; Float_tTVirtualPacketizer::fMBsReadLastMBs read at fProcTimeLast; Double_tTVirtualPacketizer::fMaxPacketTimemaximum packet time; Double_tTVirtualPacketizer::fMinPacketTimeminimum packet time; Float_tTVirtualPacketizer::fProcTimetime since start of processing; Float_tTVirtualPacketizer::fProcTimeLastTime of the last measurement; TTimer*TVirtualPacketizer::fProgressprogress updates timer; TNtuple*TVirtualPacketizer::fProgressPerf{Active workers, evt rate, MBs read} as a function of processing time; TProofProgressStatus*TVirtualPacketizer::fProgressStatuspointer to status in the player.; Float_tTVirtualPacketizer::fReportPeriodTime between reports if nothing changes (estimated proc time / 100); TMap*TVirtualPacketizer::fSlaveStatsslave status, keyed by correspondig TSlave; TTimeTVirtualPacketizer::fStartTimetime offset; Bool_tTVirtualPacketizer::fStopTermination of Process() requested?; Float_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPacketizer.html:8233,config,configuration,8233,root/html534/TPacketizer.html,https://root.cern,https://root.cern/root/html534/TPacketizer.html,10,['config'],['configuration']
Modifiability,"tusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfGridtype of GRID (AliEn, Globus, ...); TStringfGridUrlthe GRID url used to create the grid connection; TStringfHostGRID portal to which we are connected; TStringfOptionsoptions specified; Int_tfPortport to which we are connected; TStringfPwuser passwd; TStringfUseruser name. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGrid * Connect(const char* grid, const char* uid = 0, const char* pw = 0, const char* options = 0); The grid should be of the form: <grid>://<host>[:<port>],; e.g.: alien://alice.cern.ch, globus://glsrv1.cern.ch, ...; The uid is the username and pw the password that should be used for; the connection. Depending on the <grid> the shared library (plugin); for the selected system will be loaded. When the connection could not; be opened 0 is returned. For AliEn the supported options are:; -domain=<domain name>; -debug=<debug level from 1 to 10>; Example: ""-domain=cern.ch -debug=5"". TGrid(); { }. virtual ~TGrid(); { }. const char * GridUrl() const; { return fGridUrl; }. const char * GetGrid() const; { return fGrid; }. const char * GetHost() const; { return fHost; }. const char * GetUser() const; { return fUser; }. const char * GetPw() const; { return fPw; }. const char * GetOptions() const; { return fOptions; }. Int_t GetPort() const; { re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGrid.html:7775,Inherit,Inheritance,7775,root/html602/TGrid.html,https://root.cern,https://root.cern/root/html602/TGrid.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. doublefDataStack[5]! data container; double*fElements[fNrows] elements themselves; Bool_tfIsOwner!default kTRUE, when Use array kFALSE; Int_tfNrowsnumber of rows; Int_tfRowLwblower bound of the row index; static TVectorT<double>::(anonymous)kSizeMax; static TVectorT<double>::EVectorStatusBitskStatus; static TVectorT<double>::(anonymous)kWorkMax. Class Charts. Inheritance Chart:. TObject. ←; TVectorT<double>. Function documentation; void TVectorT<Element> Delete_m(Int_t size, double*& ); Delete data pointer m, if it was assigned on the heap. Element* TVectorT<Element> New_m(Int_t size); Return data pointer . if requested size <= kSizeMax, assign pointer; to the stack space. void TVectorT<Element> Add(const TVectorT<double>& v); Add vector v to this vector. void TVectorT<Element> Add(const TVectorT<double>& v1, const TVectorT<double>& v2); Set this vector to v1+v2. Int_t TVectorT<Element> Memcpy_m(double* newp, const double* oldp, Int_t copySize, Int_t newSize, Int_t oldSize); Copy copySize doubles from *oldp to *newp . However take care of the; situation where both pointers are assigned to the same stack space. void TVectorT<Element> Allocate(Int_t nrows, Int_t row_lwb = 0, Int_t init = 0); Allocate new vector. Arguments are number of rows and row; lowerbound (0 default). TVectorT<Element> &TVectorT<Element> ResizeTo(Int_t lwb, Int_t upb); Resize the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVectorT_double_.html:10486,Inherit,Inheritance,10486,root/html602/TVectorT_double_.html,https://root.cern,https://root.cern/root/html602/TVectorT_double_.html,2,['Inherit'],['Inheritance']
Modifiability,"tusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Float_tfAA of Material; Float_tfDensityMaterial density in gr/cm3; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Float_tfInterLengthMaterial interaction length; TStringTNamed::fNameobject identifier; Int_tfNumberMaterial matrix number; Float_tfRadLengthMaterial radiation length; TStringTNamed::fTitleobject title; Float_tfZZ of Material. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMaterial(); Material default constructor. TMaterial(const char* name, const char* title, Float_t a, Float_t z, Float_t density); Material normal constructor. TMaterial(const char* name, const char* title, Float_t a, Float_t z, Float_t density, Float_t radl, Float_t inter); Material normal constructor. ~TMaterial(); Material default destructor. void Streamer(TBuffer& ); Stream an object of class TMaterial. TMaterial(). Int_t GetNumber() const; {return fNumber;}. Float_t GetA() const; {return fA;}. Float_t GetZ() const; {return fZ;}. Float_t GetDensity() const; {return fDensity;}. Float_t GetRadLength() const; {return fRadLength;}. Float_t GetInterLength() const; {return fInterLength;}. » Author: Rene Brun 03/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-06-02 16:19; This page has been automatically generated. For comments or suggestions regarding the documentatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMaterial.html:7234,Inherit,Inheritance,7234,root/html604/TMaterial.html,https://root.cern,https://root.cern/root/html604/TMaterial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Float_tfAA of Material; Float_tfDensityMaterial density in gr/cm3; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Float_tfInterLengthMaterial interaction length; TStringTNamed::fNameobject identifier; Int_tfNumberMaterial matrix number; Float_tfRadLengthMaterial radiation length; TStringTNamed::fTitleobject title; Float_tfZZ of Material. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMaterial(); Material default constructor. TMaterial(const char* name, const char* title, Float_t a, Float_t z, Float_t density); Material normal constructor. TMaterial(const char* name, const char* title, Float_t a, Float_t z, Float_t density, Float_t radl, Float_t inter); Material normal constructor. ~TMaterial(); Material default destructor. void Streamer(TBuffer& ); Stream an object of class TMaterial. TMaterial(). Int_t GetNumber() const; {return fNumber;}. Float_t GetA() const; {return fA;}. Float_t GetZ() const; {return fZ;}. Float_t GetDensity() const; {return fDensity;}. Float_t GetRadLength() const; {return fRadLength;}. Float_t GetInterLength() const; {return fInterLength;}. » Author: Rene Brun 03/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-06-30 15:18; This page has been automatically generated. For comments or suggestions regarding the documentatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMaterial.html:7234,Inherit,Inheritance,7234,root/html602/TMaterial.html,https://root.cern,https://root.cern/root/html602/TMaterial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TBrowser*TContextMenu::fBrowserselected browser (if exist); TObject*TContextMenu::fCalledObjectobject to call; TContextMenuImp*TContextMenu::fContextMenuImp!Context menu system specific implementation; TStringTNamed::fNameobject identifier; TVirtualPad*TContextMenu::fSelectedCanvasselected canvas (if exist); TClassMenuItem*TContextMenu::fSelectedMenuItemselected class menu item; TFunction*TContextMenu::fSelectedMethodselected method; TObject*TContextMenu::fSelectedObjectselected object; TVirtualPad*TContextMenu::fSelectedPadselected pad (if exist); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveContextMenu(const char* name, const char* title = ""Eve context menu""); Constructor. void SetupAndPopup(TGWindow* button, TObject* obj); Position the popup below given button and show context menu for object obj. TEveCompositeFrame& operator=(const TEveCompositeFrame&). TEveCompositeFrameInMainFrame& operator=(const TEveCompositeFrameInMainFrame&). TEveContextMenu(const char* name, const char* title = ""Eve context menu""). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveContextMenu.html:8614,Inherit,Inheritance,8614,root/html604/TEveContextMenu.html,https://root.cern,https://root.cern/root/html604/TEveContextMenu.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TBrowser*TContextMenu::fBrowserselected browser (if exist); TObject*TContextMenu::fCalledObjectobject to call; TContextMenuImp*TContextMenu::fContextMenuImp!Context menu system specific implementation; TStringTNamed::fNameobject identifier; TVirtualPad*TContextMenu::fSelectedCanvasselected canvas (if exist); TClassMenuItem*TContextMenu::fSelectedMenuItemselected class menu item; TFunction*TContextMenu::fSelectedMethodselected method; TObject*TContextMenu::fSelectedObjectselected object; TVirtualPad*TContextMenu::fSelectedPadselected pad (if exist); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveContextMenu(const char* name, const char* title = ""Eve context menu""); Constructor. void SetupAndPopup(TGWindow* button, TObject* obj); Position the popup below given button and show context menu for object obj. TEveCompositeFrame& operator=(const TEveCompositeFrame&). TEveCompositeFrameInMainFrame& operator=(const TEveCompositeFrameInMainFrame&). TEveContextMenu(const char* name, const char* title = ""Eve context menu""). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveContextMenu.html:8614,Inherit,Inheritance,8614,root/html602/TEveContextMenu.html,https://root.cern,https://root.cern/root/html602/TEveContextMenu.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TPolyLine::(anonymous)kPolyLineNDC; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Int_tfLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Int_tfNNumber of points; TStringfOptionoptions; Double_t*fX[fN] Array of X coordinates; Double_t*fY[fN] Array of Y coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPolyLine(); PolyLine default constructor. TPolyLine(Int_t n, Option_t* option = """"); PolyLine normal constructor without initialisation.; Allocates n points. The option string is ignored. TPolyLine(Int_t n, Float_t* x, Float_t* y, Option_t* option = """"); PolyLine normal constructor (single precision).; Makes n points with (x, y) coordinates from x and y.; The option string is ignored. TPolyLine(Int_t n, Double_t* x, Double_t* y, Option_t* option = """"); PolyLine normal constructor (double precision).; Makes n points with (x, y) coordinates from x and y.; The option string is ignored. TPolyLine& operator=(const TPolyLine& ); assignment operator. ~TPolyLine(); PolyLine default destructor. TPolyLine(const TPolyLine& polyline); PolyLine copy constructor. void Copy(TObject& polyline) const; Copy this polyline to polyline. Int_t DistancetoPrimitive(Int_t px, Int_t py); Returns closest distance in pixels from point (px, py) to a polyline. Fir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPolyLine.html:8600,Inherit,Inheritance,8600,root/html602/TPolyLine.html,https://root.cern,https://root.cern/root/html602/TPolyLine.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TMVA::MethodBase::EWeightFileTypeTMVA::MethodBase::kROOT; static TObject::(anonymous)TObject::kSingleKey; static TMVA::MethodBase::EWeightFileTypeTMVA::MethodBase::kTEXT; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; Int_tfFcnCallnumber of external function calls (RootFinder); TMVA::Volume*fHelpVolumeauxiliary variable; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Float_t>fAverageRMSaverage RMS of signal and background; TMVA::BinarySearchTree*fBinaryTreebinary tree; vector<Float_t>*fDeltasize of volume; Float_tfDeltaFracfraction of RMS; Double_tfGaussSigmasize of Gauss in adaptive volume; Double_tfGaussSigmaNormsize of Gauss in adaptive volume (normalised to dimensions); Float_tfInitialScaleinitial scale for adaptive volume; Bool_tfInitializedVolumeEleis volume element initialized ?; enum EKernelEstimatorfKernelEstimator; TStringfKernelStringoption k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDERS.html:19222,variab,variable,19222,root/html602/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDERS.html,12,['variab'],"['variable', 'variables']"
Modifiability,"tusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooRealIntegral*_acceptRejectFuncProjection function to be passed to accept/reject sampler; Double_t_areaMaximum probability, p.d.f area and normalization; RooArgSet*_cloneSetClone of all nodes of input p.d.f; Int_t_codeInternal generation code; RooArgSet_directVarsList of observables generated internally, randomly, and by accept/reject sampling; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; RooDataSet*RooAbsGenContext::_genData! Data being generated; RooAbsNumGenerator*_generatorMC sampling generation engine; Bool_tRooAbsGenContext::_isValidIs context in valid state?; Double_t_maxProbMaximum probability, p.d.f area and normalization; RooRealVar*_maxVarVariable holding maximum value of p.d.f; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; Double_t_normMaximum probability, p.d.f area and normalization; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooArgSet_otherVarsList of observables generated internally, randomly, and by accept/reject sampling; RooAbsPdf*_pdfCloneClone of input p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGenContext.html:9344,extend,extended,9344,root/html602/RooGenContext.html,https://root.cern,https://root.cern/root/html602/RooGenContext.html,4,['extend'],['extended']
Modifiability,"tusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TApplication::EStatusBitsTApplication::kProcessRemotely; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. private:. TStringfDefaultPromptdefault prompt: ""root [%d] ""; TFileHandler*fInputHandlerterminal input handler; Bool_tfInterruptif true macro execution will be stopped; Int_tfNcmdcommand history number; charfPrompt[64]interpreter prompt. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TApplication. ←; TRint. Function documentation; TRint(const char* appClassName, int* argc, char** argv, void* options = 0, int numOptions = 0, Bool_t noLogo = kFALSE); Create an application environment. The TRint environment provides an; interface to the WM manager functionality and eventloop via inheritance; of TApplication and in addition provides interactive access to; the CINT C++ interpreter via the command line. ~TRint(); Destructor. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. void Run(Bool_t retrn = kFALSE); Main application eventloop. First process files g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRint.html:13243,Inherit,Inheritance,13243,root/html602/TRint.html,https://root.cern,https://root.cern/root/html602/TRint.html,1,['Inherit'],['Inheritance']
Modifiability,"tween sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Draw the dock button, i.e. two vertical lines. ;  ; void DrawBorder () override;  Draw borders of dock button. ;  ;  Protected Member Functions inherited from TGButton; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockButton.html:24567,inherit,inherited,24567,doc/master/classTGDockButton.html,https://root.cern,https://root.cern/doc/master/classTGDockButton.html,1,['inherit'],['inherited']
Modifiability,"tween:; 4128/// - RooAbsData::Expected: Expected Poisson error (\f$ \sqrt{n_\text{expected}} \f$ from the PDF).; 4129/// - RooAbsData::SumW2: The observed error from the square root of the sum of weights,; 4130/// i.e., symmetric errors calculated with the standard deviation of a Poisson distribution.; 4131/// - RooAbsData::Poisson: Asymmetric errors from the central 68 % interval around a Poisson distribution with mean \f$ n_\text{observed} \f$.; 4132/// If for a given bin \f$ n_\text{expected} \f$ is lower than the \f$ n_\text{observed} \f$, the lower uncertainty is taken; 4133/// (e.g., the difference between the mean and the 16 % quantile).; 4134/// If \f$ n_\text{expected} \f$ is higher than \f$ n_\text{observed} \f$, the higher uncertainty is taken; 4135/// (e.g., the difference between the 84 % quantile and the mean).; 4136/// - RooAbsData::Auto (default): RooAbsData::Expected for unweighted data, RooAbsData::SumW2 for weighted data.; 4137/// <tr><td>; 4138/// `Extended()` <td> Use expected number of events of an extended p.d.f as normalization; 4139/// <tr><td>; 4140/// NumCPU() <td> Activate parallel processing feature; 4141/// <tr><td>; 4142/// Range() <td> Calculate \f$ \chi^2 \f$ only in selected region; 4143/// <tr><td>; 4144/// Verbose() <td> Verbose output of GOF framework; 4145/// <tr><td>; 4146/// IntegrateBins() <td> Integrate PDF within each bin. This sets the desired precision. Only useful for binned fits.; 4147/// <tr><td> `SumCoefRange()` <td> Set the range in which to interpret the coefficients of RooAddPdf components; 4148/// <tr><td> `SplitRange()` <td> Fit ranges used in different categories get named after the category.; 4149/// Using `Range(""range""), SplitRange()` as switches, different ranges could be set like this:; 4150/// ```; 4151/// myVariable.setRange(""range_pi0"", 135, 210);; 4152/// myVariable.setRange(""range_gamma"", 50, 210);; 4153/// ```; 4154/// <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Define projected o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:181319,extend,extended,181319,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['extend'],['extended']
Modifiability,"two filled histograms and you only want to; plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); to create a graph object.; III. Filling with events; You can fill the TEfficiency object by calling the Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; The boolean flag ""bPassed"" indicates whether the current event is a good; (both histograms are filled) or not (only fTotalHistogram is filled).; The variables x,y and z determine the bin which is filled. For lower; dimensions the z- or even the y-value may be omitted.; . Picture; Source. {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");. //only for this documentation; return c1;; }; . You can also set the number of passed or total events for a bin directly by; using the SetPassedEvents or SetTotalEvents method.; IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let k denotes the number of passed events and N the number of total; events.; Frequentist methods; The expectation value of the number of passed events is given by the true; efficiency times the total number of events. One can estimate the efficiency; by replacing the expected number of passed events by the observed number of; passed events. . Bayesian methods; In bayesian statistics a likelihood-function (how probable is it to get the; observed data assuming a true efficiency) and a prio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEfficiency.html:5662,variab,variable,5662,root/html534/TEfficiency.html,https://root.cern,https://root.cern/root/html534/TEfficiency.html,2,['variab'],['variable']
Modifiability,"tx_domain == NULL); 16747 ? 0; 16748 : (phys_ctx->callbacks.external_ssl_ctx_domain(; 16749 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16750 &ssl_ctx,; 16751 phys_ctx->user_data));; 16752 ; 16753 if (callback_ret < 0) {; 16754 /* Callback < 0: Error. Abort init. */; 16755 mg_cry_ctx_internal(; 16756 phys_ctx,; 16757 ""external_ssl_ctx_domain callback returned error: %i"",; 16758 callback_ret);; 16759 return 0;; 16760 } else if (callback_ret > 0) {; 16761 /* Callback > 0: Consider init done. */; 16762 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16763 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16764 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16765 return 0;; 16766 }; 16767 return 1;; 16768 }; 16769 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16770 * 0, CivetWeb should continue initializing SSL */; 16771 ; 16772 /* If PEM file is not specified and the init_ssl callbacks; 16773 * are not specified, setup will fail. */; 16774 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16775 && (phys_ctx->callbacks.init_ssl == NULL); 16776 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16777 /* No certificate and no init_ssl callbacks:; 16778 * Essential data to set up TLS is missing.; 16779 */; 16780 mg_cry_ctx_internal(phys_ctx,; 16781 ""Initializing SSL failed: -%s is not set"",; 16782 config_options[SSL_CERTIFICATE].name);; 16783 return 0;; 16784 }; 16785 ; 16786 /* If a certificate chain is configured, use it. */; 16787 chain = dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 16788 if (chain == NULL) {; 16789 /* Default: certificate chain in PEM file */; 16790 chain = pem;; 16791 }; 16792 if ((chain != NULL) && (*chain == 0)) {; 16793 /* If the chain is an empty string, don't use it. */; 16794 chain = NULL;; 16795 }; 16796 ; 16797 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16798 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16799 return 0;; 16800 }; 16801 ; 16802 return init_ssl_ctx_impl(phys_ctx, dom_ctx, pem, chain);; 16803}; 16804 ; 16805 ; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:497936,config,config,497936,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"tx_domain == NULL); 16748 ? 0; 16749 : (phys_ctx->callbacks.external_ssl_ctx_domain(; 16750 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16751 &ssl_ctx,; 16752 phys_ctx->user_data));; 16753 ; 16754 if (callback_ret < 0) {; 16755 /* Callback < 0: Error. Abort init. */; 16756 mg_cry_ctx_internal(; 16757 phys_ctx,; 16758 ""external_ssl_ctx_domain callback returned error: %i"",; 16759 callback_ret);; 16760 return 0;; 16761 } else if (callback_ret > 0) {; 16762 /* Callback > 0: Consider init done. */; 16763 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16764 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16765 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16766 return 0;; 16767 }; 16768 return 1;; 16769 }; 16770 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16771 * 0, CivetWeb should continue initializing SSL */; 16772 ; 16773 /* If PEM file is not specified and the init_ssl callbacks; 16774 * are not specified, setup will fail. */; 16775 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16776 && (phys_ctx->callbacks.init_ssl == NULL); 16777 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16778 /* No certificate and no init_ssl callbacks:; 16779 * Essential data to set up TLS is missing.; 16780 */; 16781 mg_cry_ctx_internal(phys_ctx,; 16782 ""Initializing SSL failed: -%s is not set"",; 16783 config_options[SSL_CERTIFICATE].name);; 16784 return 0;; 16785 }; 16786 ; 16787 /* If a certificate chain is configured, use it. */; 16788 chain = dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 16789 if (chain == NULL) {; 16790 /* Default: certificate chain in PEM file */; 16791 chain = pem;; 16792 }; 16793 if ((chain != NULL) && (*chain == 0)) {; 16794 /* If the chain is an empty string, don't use it. */; 16795 chain = NULL;; 16796 }; 16797 ; 16798 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16799 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16800 return 0;; 16801 }; 16802 ; 16803 return init_ssl_ctx_impl(phys_ctx, dom_ctx, pem, chain);; 16804}; 16805 ; 16806 ; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:497969,config,config,497969,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"txbin,lastxbin,""[cutg1,cutg2]"");. NOTE that if a TH1D named ""name"" exists in the current directory or pad and having; a compatible axis, the histogram is reset and filled again with the projected contents of the TH2.; In the case of axis incompatibility, an error is reported and a NULL pointer is returned. NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection. void PutStats(Double_t* stats); Replace current statistics with the values in array stats. TH1D* QuantilesX(Double_t prob = 0.5, const char* name = ""_qx"") const; Compute the X distribution of quantiles in the other variable Y; name is the name of the returned histogram; prob is the probability content for the quantile (0.5 is the default for the median); An approximate error for the quantile is computed assuming that the distribution in; the other variable is normal. TH1D* QuantilesY(Double_t prob = 0.5, const char* name = ""_qy"") const; Compute the Y distribution of quantiles in the other variable X; name is the name of the returned histogram; prob is the probability content for the quantile (0.5 is the default for the median); An approximate error for the quantile is computed assuming that the distribution in; the other variable is normal. TH1D* DoQuantiles(bool onX, const char* name, Double_t prob) const; Implementation of quantiles for x or y. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinContent(Int_t bin, Double_t content); Set bin content. void SetShowProjectionX(Int_t nbins = 1); When the mouse is moved in a pad containing a 2-d view of this histogram; a second canvas shows the projection along X corresponding to the; mouse position along Y.; To stop the generation of the projections, delete the canvas; containing the projection. void SetShowProjectionY(Int_t nbins = 1); When the mouse is moved in a pad containing a 2-d view of this histogram; a second canvas shows the projection along Y corresponding to the; mouse position alon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2.html:55202,variab,variable,55202,root/html602/TH2.html,https://root.cern,https://root.cern/root/html602/TH2.html,4,['variab'],['variable']
Modifiability,"txt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TS3HTTPRequest fS3Request;  ; Bool_t fUseMultiRange;  ;  Protected Attributes inherited from TWebFile; TString fBasicUrl;  ; TString fBasicUrlOrg;  ; void * fFullCache;  ; Long64_t fFullCacheSize;  complete content of the file, some http server may return complete content ;  ; Bool_t fHasModRoot;  ; Bool_t fHTTP11;  ; TString fMsgGetHead;  ; TString fMsgReadBuffer;  ; TString fMsgReadBuffer10;  ; Bool_t fNoProxy;  ; TUrl fProxy;  ; Long64_t fSize;  ; TSocket * fSocket;  ; TUrl fUrlOrg;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:37775,inherit,inherited,37775,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,2,['inherit'],['inherited']
Modifiability,"ty 1D-histogram with appropriate scale and labels for this variable. TH2F * createHistogram(const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel, 					Double_t* xlo, Double_t* xhi, Int_t* nBins); Create an empty 2D-histogram with appropriate scale and labels for this variable (x); and the specified y variable. This method uses the default plot ranges for x and y which; can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which; can be changed with setPlotBins(). The caller takes ownership of the returned object; and is responsible for deleting it. TH2F * createHistogram(const char *name, const RooAbsRealLValue &yvar, 					const char *zAxisLabel, const RooAbsBinning** bins); Create an empty 2D-histogram with appropriate scale and labels for this variable (x); and the specified y variable. TH3F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const RooAbsRealLValue& zvar, const char* tAxisLabel, Double_t* xlo = 0, Double_t* xhi = 0, Int_t* nBins = 0) const; Create an empty 3D-histogram with appropriate scale and labels for this variable (x); and the specified y,z variables. This method uses the default plot ranges for x,y,z which; can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which; can be changed with setPlotBins(). The caller takes ownership of the returned object; and is responsible for deleting it. TH3F * createHistogram(const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, 					const char* tAxisLabel, const RooAbsBinning** bins); Create an empty 3D-histogram with appropriate scale and labels for this variable (x); and the specified y,z variables. TH1 * createHistogram(const char *name, RooArgList &vars, const char *tAxisLabel, 				 Double_t* xlo, Double_t* xhi, Int_t* nBins); Create 1-, 2- or 3-d ROOT histogram with labels taken; from the variables in 'vars' and the with range and binning; specified in xlo,xhi and nBins. The dimensions of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsRealLValue.html:44842,variab,variable,44842,root/html526/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html526/RooAbsRealLValue.html,2,['variab'],"['variable', 'variables']"
Modifiability,"ty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class CacheElem;  ; class Grid2;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooMomentMorphFuncND.h>. Inheritance diagram for RooMomentMorphFuncND:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Base_t. using RooMomentMorphFuncND::Base_t = RooAbsReal. Definition at line 36 of file RooMomentMorphFuncND.h. ◆ Grid. using RooMomentMorphFuncND::Grid = Grid2. Definition at line 79 of file RooMomentMorphFuncND.h. Member Enumeration Documentation. ◆ Setti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFuncND.html:60692,inherit,inherited,60692,doc/master/classRooMomentMorphFuncND.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFuncND.html,1,['inherit'],['inherited']
Modifiability,"ty and transparency ; : of the discrimination expression. A shortcoming is that FDA will; : underperform for involved problems with complicated, phase space; : dependent nonlinear correlations.; : ; : Please consult the Users Guide for the format of the formula string; : and the allowed parameter ranges:; : documentation/tmva/UsersGuide/TMVAUsersGuide.pdf; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : The FDA performance depends on the complexity and fidelity of the; : user-defined discriminator function. As a general rule, it should; : be able to reproduce the discrimination power of any linear; : discriminant analysis. To reach into the nonlinear domain, it is; : useful to inspect the correlation profiles of the input variables,; : and add quadratic and higher polynomial terms between variables as; : necessary. Comparison with more involved nonlinear classifiers can; : be used as a guide.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : Depending on the function used, the choice of ""FitMethod"" is; : crucial for getting valuable solutions with FDA. As a guideline it; : is recommended to start with ""FitMethod=MINUIT"". When more complex; : functions are used where MINUIT does not converge to reasonable; : results, the user should switch to non-gradient FitMethods such; : as GeneticAlgorithm (GA) or Monte Carlo (MC). It might prove to be; : useful to combine GA (or MC) with MINUIT by setting the option; : ""Converger=MINUIT"". GA (MC) will then set the starting parameters; : for MINUIT such that the basic quality of GA (MC) of finding global; : minima is combined with the efficacy of MINUIT of finding local; : minima.; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; FitterBase : <GeneticFitter> Optimisation, please be patient ... (inaccurate progress timing for GA); : Elapsed time: 0.901 sec ; FDA_GA : Results for parameter fit using ""GA"" fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:39771,config,configuration,39771,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['config'],['configuration']
Modifiability,"ty content on left side of interval; RooAbsReal*fLikelihoodinternal pointer to likelihood function; RooAbsReal*fLogLikeinternal pointer to log likelihood function; Double_tfLowercomputer lower interval bound; Double_tfNLLMinminimum value of Nll; intfNScanBinsnumber of bins to scan, if = -1 no scan is done (default); RooArgSetfNuisanceParametersnuisance parameters; RooAbsPdf*fNuisancePdfnuisance pdf (needed when using nuisance sampling technique); intfNumIterationsnumber of iterations (when using ToyMC); RooArgSetfPOIPOI; RooAbsPdf*fPdfmodel pdf (could contain the nuisance pdf as constraint term); ROOT::Math::IGenFunction*fPosteriorFunctionfunction representing the posterior; RooAbsPdf*fPosteriorPdfnormalized (on the poi) posterior pdf; RooAbsPdf*fPriorPdfprior pdf (typically for the POI); RooAbsPdf*fProductPdfinternal pointer to model * prior; doublefSizesize used for getting the interval; Double_tfUpperupper interval bound; Bool_tfValidInterval. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BayesianCalculator(); default constructor. BayesianCalculator( /* const char* name, const char* title, */ RooAbsData& data, RooAbsPdf& pdf,						 const RooArgSet& POI,						 RooAbsPdf& priorPdf,						 const RooArgSet* nuisanceParameters ); Constructor from data set, model pdf, parameter of interests and prior pdf; If nuisance parameters are given they will be integrated according either to the prior or; their constraint term included in the model. BayesianCalculator(RooAbsData& data, RooStats::ModelConfig& model); Constructor from a data set and a ModelConfig; model pdf, poi and nuisances will be taken from the ModelConfig. ~BayesianCalculator(); destructor. void ClearAll() const; clear all cached pdf objects. void SetModel(const RooStats::ModelConfig& model); set the model to use; The model pdf, prior pdf, parameter of interest and nuisances; will be taken according to the model. RooAbsReal* GetPosteriorFunction() const; Build and ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__BayesianCalculator.html:11184,Inherit,Inheritance,11184,root/html602/RooStats__BayesianCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__BayesianCalculator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty in terms of several; others, which are directly measurable. An example in high energy physics is the evaluation of the momentum of; a charged particle from the observation of its trajectory in a magnetic; field. The problem is to relate the momentum of the particle to the; observations, which may consists of of positional measurements at; intervals along the particle trajectory. The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations. This explicit function of the observations can be obtained by a; least squares fitting procedure applied to a representive; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class TMultiDimFit implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package; [2]. Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in; $ROOTSYS/tutorials/fit/multidimfit.C. The Method. Let by the dependent quantity of interest, which depends smoothly; on the observable quantities ; , which we'll denote by. . Given a training sample of tuples of the form,; (TMultiDimFit::AddRow). where ; are independent; variables, is t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:1508,variab,variables,1508,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,4,['variab'],['variables']
Modifiability,"ty string is returned; 238 const char * Name() const;; 239 ; 240 /*; 241 set print level; 242 level = 0 quiet (no messages print); 243 = 1 print only the result; 244 = 3 max debug. Print result at each iteration; 245 */; 246 void SetPrintLevel(int level) { fPrintLevel = level; }; 247 ; 248 /// return the print level; 249 int PrintLevel() const { return fPrintLevel; }; 250 ; 251 ; 252 //-- static methods to set configurations; 253 ; 254 /// set tolerance (absolute and relative); 255 /// relative tolerance is only use to verify the convergence; 256 /// do it is a minor parameter; 257 static void SetDefaultTolerance(double abstol, double reltol = 0 );; 258 ; 259 /// set maximum number of iterations; 260 static void SetDefaultMaxIterations(int maxiter);; 261 ; 262 /// print iteration state; 263 void PrintState(std::ostream & os = std::cout);; 264 ; 265 ; 266 protected:; 267 ; 268 // return type given a name; 269 std::pair<bool,int> GetType(const char * name);; 270 // clear list of functions; 271 void ClearFunctions();; 272 ; 273 ; 274 private:; 275 ; 276 int fIter; // current number of iterations; 277 int fStatus; // current status; 278 int fPrintLevel; // print level; 279 ; 280 // int fMaxIter; // max number of iterations; 281 // double fAbsTolerance; // absolute tolerance; 282 // double fRelTolerance; // relative tolerance; 283 int fType; // type of algorithm; 284 bool fUseDerivAlgo; // algorithm using derivative; 285 ; 286 GSLMultiRootBaseSolver * fSolver;; 287 std::vector<ROOT::Math::IMultiGenFunction *> fFunctions; //! transient Vector of the functions; 288 ; 289 ; 290 };; 291 ; 292 // use typedef for most sensible name; 293 typedef GSLMultiRootFinder MultiRootFinder;; 294 ; 295} // namespace Math; 296} // namespace ROOT; 297 ; 298 ; 299#endif /* ROOT_Math_GSLMultiRootFinder */; IFunction.h; f#define f(i)Definition RSha256.hxx:104; typeOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html:9495,config,configurations,9495,doc/master/GSLMultiRootFinder_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html,1,['config'],['configurations']
Modifiability,"ty); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(const double& rhs); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >(const ROOT::Math::SVector<double,2U*(2U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,2U*(2U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,2,2>fRep; static ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(const double& rhs); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >(const ROOT::Math::SVector<double,3U*(3U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,3U*(3U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,3,3>fRep; static ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(const ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(const double& rhs); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >(const ROOT::Math::SVector<double,3U*(4U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,3U*(4U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,3,4>fRep; static ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(const ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(const double& rhs); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >(const ROOT::Math::SVector<double,4U*(3U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,4U*(3U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,4,3>fRep; static ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(const double& rhs); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >(const ROOT::Math::SVector<double,4U*(4U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,4U*(4U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,4,4>fRep; static ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(const double& rhs); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >(const ROOT::Math::SVector<double,5U*(5U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,5U*(5U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,5,5>fRep; static ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(const double& rhs); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >(const ROOT::Math::SVector<double,6U*(6U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,6U*(6U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,6,6>fRep; static ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(const double& rhs); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >(const ROOT::Math::SVector<double,7U*(7U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,7U*(7U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,7,7>fRep; static ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(const ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(const double& rhs); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >(const ROOT::Math::SVector<double,9U*(7U+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,9U*(7U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepStd<double,9,7>fRep; static ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::(anonymous)kCols; static ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::(anonymous)kRows; static ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7___.html:5103,Inherit,Inheritance,5103,root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty); Set the LineStyle of the average. void SetAverageLineColor(Color_t col); Set the LineColor of the average. void SetAverageLineWidth(Width_t wid); Set the LineWidth of the average. void SetAverageFillColor(Color_t col); Set the FillColor of the average. void SetAverageFillStyle(Style_t sty); Set the FillStyle of the average. void SetDisplayAverage(Bool_t disp); Display or not the average. void SetCurrentEntries(); Set the current selected entries. void SetLineStyle(Style_t sty); Set line style. void SetLineColor(Color_t col); Set lin color. void SetLineWidth(Width_t wid); Set line width. void SetFillColor(Color_t col); Set fill color. void SetFillStyle(Style_t sty); Set fill style. void SetNdivRadial(Int_t div); Set number of radial divisions. void SetNx(UInt_t nx); Set the X number of subpads. void SetNy(UInt_t ny); Set the Y number of subpads. void SetSegmentDisplay(Bool_t seg); Set the segment display or not. void SetSelectionExpression(const char* selexp); Compile selection expression if there is one. void SetVariablesExpression(const char* varexp); Compile the variables expression from the given string varexp. void SyncFormulas(); Create a TreeFormulaManager to coordinate the formulas. void UpdateView(); Update the polylines or the arcs for the current entries. TSpider(). Bool_t GetDisplayAverage() const; {return fDisplayAverage;}. Long64_t GetCurrentEntry() const; {return fEntry;}. Int_t GetNx() const; {return fNx;}. Int_t GetNy() const; {return fNy;}. Bool_t GetSegmentDisplay() const; {return fSegmentDisplay;}. void SetShowRange(Bool_t showrange); {fShowRange = showrange;}. void SuperposeTo(TSpider* sp); {sp->AddSuperposed(this);}. » Author: Bastien Dalla Piazza 20/07/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/treeviewer:$Id$ » Last generated: 2015-03-14 16:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSpider.html:14330,variab,variables,14330,root/html534/TSpider.html,https://root.cern,https://root.cern/root/html534/TSpider.html,2,['variab'],['variables']
Modifiability,"ty); Set the LineStyle of the average. void SetAverageLineColor(Color_t col); Set the LineColor of the average. void SetAverageLineWidth(Width_t wid); Set the LineWidth of the average. void SetAverageFillColor(Color_t col); Set the FillColor of the average. void SetAverageFillStyle(Style_t sty); Set the FillStyle of the average. void SetDisplayAverage(Bool_t disp); Display or not the average. void SetCurrentEntries(); Set the current selected entries. void SetLineStyle(Style_t sty); Set line style. void SetLineColor(Color_t col); Set lin color. void SetLineWidth(Width_t wid); Set line width. void SetFillColor(Color_t col); Set fill color. void SetFillStyle(Style_t sty); Set fill style. void SetNdivRadial(Int_t div); Set number of radial divisions. void SetNx(UInt_t nx); Set the X number of subpads. void SetNy(UInt_t ny); Set the Y number of subpads. void SetSegmentDisplay(Bool_t seg); Set the segment display or not. void SetSelectionExpression(const char* selexp); Compile selection expression if there is one. void SetVariablesExpression(const char* varexp); Compile the variables expression from the given string varexp. void SyncFormulas(); Create a TreeFormulaManager to coordinate the formulas. void UpdateView(); Update the polylines or the arcs for the current entries. TSpider(). Bool_t GetDisplayAverage() const; {return fDisplayAverage;}. Long64_t GetCurrentEntry() const; {return fEntry;}. Int_t GetNx() const; {return fNx;}. Int_t GetNy() const; {return fNy;}. Bool_t GetSegmentDisplay() const; {return fSegmentDisplay;}. void SetShowRange(Bool_t showrange); {fShowRange = showrange;}. void SuperposeTo(TSpider* sp); {sp->AddSuperposed(this);}. » Author: Bastien Dalla Piazza 20/07/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/treeviewer:$Id$ » Last generated: 2015-06-02 16:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSpider.html:14839,variab,variables,14839,root/html604/TSpider.html,https://root.cern,https://root.cern/root/html604/TSpider.html,2,['variab'],['variables']
Modifiability,"ty); Set the LineStyle of the average. void SetAverageLineColor(Color_t col); Set the LineColor of the average. void SetAverageLineWidth(Width_t wid); Set the LineWidth of the average. void SetAverageFillColor(Color_t col); Set the FillColor of the average. void SetAverageFillStyle(Style_t sty); Set the FillStyle of the average. void SetDisplayAverage(Bool_t disp); Display or not the average. void SetCurrentEntries(); Set the current selected entries. void SetLineStyle(Style_t sty); Set line style. void SetLineColor(Color_t col); Set lin color. void SetLineWidth(Width_t wid); Set line width. void SetFillColor(Color_t col); Set fill color. void SetFillStyle(Style_t sty); Set fill style. void SetNdivRadial(Int_t div); Set number of radial divisions. void SetNx(UInt_t nx); Set the X number of subpads. void SetNy(UInt_t ny); Set the Y number of subpads. void SetSegmentDisplay(Bool_t seg); Set the segment display or not. void SetSelectionExpression(const char* selexp); Compile selection expression if there is one. void SetVariablesExpression(const char* varexp); Compile the variables expression from the given string varexp. void SyncFormulas(); Create a TreeFormulaManager to coordinate the formulas. void UpdateView(); Update the polylines or the arcs for the current entries. TSpider(). Bool_t GetDisplayAverage() const; {return fDisplayAverage;}. Long64_t GetCurrentEntry() const; {return fEntry;}. Int_t GetNx() const; {return fNx;}. Int_t GetNy() const; {return fNy;}. Bool_t GetSegmentDisplay() const; {return fSegmentDisplay;}. void SetShowRange(Bool_t showrange); {fShowRange = showrange;}. void SuperposeTo(TSpider* sp); {sp->AddSuperposed(this);}. » Author: Bastien Dalla Piazza 20/07/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/treeviewer:$Id$ » Last generated: 2015-06-30 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpider.html:14839,variab,variables,14839,root/html602/TSpider.html,https://root.cern,https://root.cern/root/html602/TSpider.html,2,['variab'],['variables']
Modifiability,"ty, RooFit::MsgLevel level); Int_tactiveStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static Int_t_debugCount; map<int,std::string>_levelNames; map<int,std::string>_topicNames. protected:. Int_t_debugCode; RooWorkspace*_debugWorkspace; ostream*_devnull; Int_t_errorCount; map<std::string,std::ostream*>_files; RooFit::MsgLevel_globMinLevel; static RooMsgService*_instance; RooFit::MsgLevel_lastMsgLevel; Bool_t_showPid; Bool_t_silentMode; vector<StreamConfig>_streams; stack<std::vector<StreamConfig> >_streamsSaved. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup function called by atexit() handler installed by RooSentinel; to delete all global object upon program termination. RooMsgService(); Constructor. Defines names of message levels; and mapping of topic codes to topic names; Install default message streams. ~RooMsgService(); Destructor. Bool_t anyDebug(); Returns true if any debug level stream is active. RooWorkspace* debugWorkspace(). Int_t addStream(RooFit::MsgLevel level, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg()); Add a message logging stream for message with given RooFit::MsgLevel or higher (i.e. more severe); This method accepts the following arguments to configure the stream. Output Style options. Prefix(Bool_t flag=kTRUE) -- Prefix all messages in this stream with Topic/Originator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMsgService.html:8122,Inherit,Inheritance,8122,root/html532/RooMsgService.html,https://root.cern,https://root.cern/root/html532/RooMsgService.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ty. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:7247,inherit,inherited,7247,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,1,['inherit'],['inherited']
Modifiability,ty.cxx;  PDEFoamVect.cxx;  PDF.cxx;  QuickMVAProbEstimator.cxx;  Ranking.cxx;  Reader.cxx;  RegressionVariance.cxx;  Results.cxx;  ResultsClassification.cxx;  ResultsMulticlass.cxx;  ResultsRegression.cxx;  ROCCalc.cxx;  RootFinder.cxx;  Rule.cxx;  RuleCut.cxx;  RuleEnsemble.cxx;  RuleFit.cxx;  RuleFitAPI.cxx;  RuleFitParams.cxx;  SdivSqrtSplusB.cxx;  SeparationBase.cxx;  SimulatedAnnealing.cxx;  SimulatedAnnealingFitter.cxx;  SVEvent.cxx;  SVKernelFunction.cxx;  SVKernelMatrix.cxx;  SVWorkingSet.cxx;  TActivation.cxx;  TActivationChooser.cxx;  TActivationIdentity.cxx;  TActivationRadial.cxx;  TActivationReLU.cxx;  TActivationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransformBase.cxx;  Volume.cxx;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  LinkDef.h;  ► src;  annconvergencetest.cxx;  BDT.cxx;  BDT_Reg.cxx;  BDTControlPlots.cxx;  BoostControlPlots.cxx;  compareanapp.cxx;  correlations.cxx;  correlationscatters.cxx;  correlationscattersMultiClass.cxx;  correlationsMultiClass.cxx,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:94268,Variab,VariableInfo,94268,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['Variab'],['VariableInfo']
Modifiability,"ty; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.70799; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.629389 0.0419042 4255.43 0; : 2 | 0.694153 0.694394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.5995",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16043,config,configuration,16043,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"tyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxybeta; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxygamma; RooRealProxymu; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGamma(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _gamma, RooAbsReal& _beta, RooAbsReal& _mu). RooGamma(const RooGamma& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooGamma(); {}. TObject* clone(const char* newname) const; { return new RooGamma(*this,newname); }. virtual ~RooGamma(); { }. » Last changed: Tue Jun 30 14:33:09 2015 » Last generated: 2015-06-30 14:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGamma.html:44597,Inherit,Inheritance,44597,root/html602/RooGamma.html,https://root.cern,https://root.cern/root/html602/RooGamma.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tyle () const;  ; virtual void MarkerSelected (Style_t marker=0);  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages according to the user input. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save the pattern select widget as a C++ statement(s) on output stream out. ;  ; void SetMarkerStyle (Style_t pattern);  Set marker. ;  ;  Public Member Functions inherited from TGedSelect;  TGedSelect (const TGWindow *p, Int_t id);  Create pattern select button. ;  ;  ~TGedSelect () override;  Destructor of pattern select button. ;  ; virtual void Disable ();  Clear widget state flag. ;  ; virtual void Enable ();  Set widget state flag (kTRUE=enabled, kFALSE=disabled). ;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events in pattern select button. ;  ; virtual void SetPopup (TGedPopup *p);  ;  Public Member Functions inherited from TGCheckButton;  TGCheckButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  TGCheckButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  TGCheckButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  ~TGCheckButton () override;  Delete a check button. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle key event. This function will be called when the hotkey is hit. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsDisabledAndSelected () const;  ; Bool_t IsDown () const override;  ; Bool_t IsOn () const override;  ; Bool_t IsToggleButto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedMarkerSelect.html:1841,inherit,inherited,1841,doc/master/classTGedMarkerSelect.html,https://root.cern,https://root.cern/doc/master/classTGedMarkerSelect.html,1,['inherit'],['inherited']
Modifiability,"tyle settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ENDF (Int_t a, Int_t z, Int_t iso);  ; static TGeoElementRN * ReadElementRN (const char *record, Int_t &ndecays);  Create element from line record. ;  ;  Static Public Member Functions inherited from TGeoElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoElementTable * GetElementTable ();  Returns pointer to the table. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void MakeName (Int_t a, Int_t z, Int_t iso);  Generate a default name for the element. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElementRN.html:13010,inherit,inherited,13010,doc/master/classTGeoElementRN.html,https://root.cern,https://root.cern/doc/master/classTGeoElementRN.html,1,['inherit'],['inherited']
Modifiability,"tyle settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGLManager *& Instance ();  Return the global GL Manager. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLManager.html:10657,inherit,inherited,10657,doc/master/classTGLManager.html,https://root.cern,https://root.cern/doc/master/classTGLManager.html,2,['inherit'],['inherited']
Modifiability,"tyle settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual void ProgressNotifier (TString, TString);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::ConvergenceTest;  ConvergenceTest ();  constructor ;  ;  ~ConvergenceTest ();  destructor ;  ; Float_t GetCurrentValue ();  ; Bool_t HasConverged (Bool_t withinConvergenceBand=kFALSE);  gives back true if the last ""steps"" steps have lead to an improvement of the ""fitness"" of the ""individuals"" of at least ""improvement"" ;  ; Float_t Progress ();  returns a float from 0 (just started) to 1 (finished) ;  ; void ResetConvergenceCounter ();  ; void SetConvergenceParameters (Int_t steps, Double_t improvement);  ; void SetCurrentValue (Float_t value);  ; Float_t SpeedControl (UInt_t ofSteps);  this function provides the ability to change the learning rate according to the success of the last generations. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodANNBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html:24167,inherit,inherited,24167,doc/master/classTMVA_1_1MethodMLP.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html,2,['inherit'],['inherited']
Modifiability,"tyle with line width 1 for the given style. ;  . Protected Member Functions;  TSpline (const TSpline &);  Copy constructor. ;  ; virtual void BuildCoeff ()=0;  ; TSpline & operator= (const TSpline &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fDelta = -1.;  Distance between equidistant knots. ;  ; TGraph * fGraph = nullptr;  Graph for drawing the knots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline.html:16478,inherit,inherited,16478,doc/master/classTSpline.html,https://root.cern,https://root.cern/doc/master/classTSpline.html,2,['inherit'],['inherited']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTeXDump.html:5142,Inherit,InheritsFrom,5142,root/html534/TTeXDump.html,https://root.cern,https://root.cern/root/html534/TTeXDump.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTeXDump.html:5103,Inherit,InheritsFrom,5103,root/html602/TTeXDump.html,https://root.cern,https://root.cern/root/html602/TTeXDump.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; voidLineTo(Double_t x, Double_t y); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); voidMoveTo(Double_t x, Double_t y); voidNewObject(Int_t n); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); static voidTObject::operator delete(void* ptr); static voidTObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPDF.html:5208,Inherit,InheritsFrom,5208,root/html532/TPDF.html,https://root.cern,https://root.cern/root/html532/TPDF.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; voidLineTo(Double_t x, Double_t y); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); voidMoveTo(Double_t x, Double_t y); voidNewObject(Int_t n); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPDF.html:5153,Inherit,InheritsFrom,5153,root/html602/TPDF.html,https://root.cern,https://root.cern/root/html602/TPDF.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); voidMovePS(Double_t x, Double_t y); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSVG.html:5011,Inherit,InheritsFrom,5011,root/html534/TSVG.html,https://root.cern,https://root.cern/root/html534/TSVG.html,1,['Inherit'],['InheritsFrom']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); voidMovePS(Double_t x, Double_t y); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSVG.html:4980,Inherit,InheritsFrom,4980,root/html602/TSVG.html,https://root.cern,https://root.cern/root/html602/TSVG.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); voidMovePS(Int_t x, Int_t y); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPostScript.html:10962,Inherit,InheritsFrom,10962,root/html532/TPostScript.html,https://root.cern,https://root.cern/root/html532/TPostScript.html,3,['Inherit'],['InheritsFrom']
Modifiability,"tyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*TVirtualPS::GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTVirtualPS::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); voidMovePS(Int_t x, Int_t y); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOff(); voidOn(); virtual voidOpen(const char* filename, Int_t type = -111); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPostScript.html:11096,Inherit,InheritsFrom,11096,root/html602/TPostScript.html,https://root.cern,https://root.cern/root/html602/TPostScript.html,2,['Inherit'],['InheritsFrom']
Modifiability,"tyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kLineNDC; kVertical; kHorizontal; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Double_tfX1X of 1st point; Double_tfX2X of 2nd point; Double_tfY1Y of 1st point; Double_tfY2Y of 2nd point. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLine(); Line default constructor. TLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Line normal constructor. ~TLine(); Line default destructor. TLine(const TLine& line); Line copy constructor. void Copy(TObject& line) const; Copy this line to line. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a line. TLine * DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Draw this line with new coordinates. TLine * DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Draw this line with new coordinates in NDC. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event.; This member function is called when a line is clicked with the locator. If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released. v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLine.html:6685,Inherit,Inheritance,6685,root/html532/TLine.html,https://root.cern,https://root.cern/root/html532/TLine.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBinnedGenContext.html:2350,extend,extendedMode,2350,root/html534/RooBinnedGenContext.html,https://root.cern,https://root.cern/root/html534/RooBinnedGenContext.html,14,['extend'],['extendedMode']
Modifiability,"tyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(const RooArgSet& theEvent); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsGenContext.html:2561,extend,extendedMode,2561,root/html534/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html534/RooAbsGenContext.html,4,['extend'],['extendedMode']
Modifiability,"tyle);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const std::string &atomName, bool addIfNotFound);  ; bool MakeProcessForeground ();  ; TGCocoa & operator= (const TGCocoa &rhs);  ; void SetApplicationIcon ();  . Private Attributes; std::vector< std::string > fAtomToName;  ; ROOT::MacOSX::X11::Rectangle fDisplayRect;  ; bool fDisplayShapeChanged;  ; bool fForegroundProcess;  ; ROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:49656,inherit,inherited,49656,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['inherit'],['inherited']
Modifiability,"tyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TScatter.h>. Inheritance diagram for TScatter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TScatter() [1/3]. TScatter::TScatter ; (; ). TScatter default constructor. ; Definition at line 58 of file TScatter.cxx. ◆ TScatter() [2/3]. TScatter::TScatter ; (; Int_t ; n). TScatter normal constructor. ; the arrays are preset to zero ; Definition at line 67 of file TScatter.cxx. ◆ TScatter() [3/3]. TScatter::TScatter ; (; Int_t ; n, . const Double_t * ; x, . const Double_t * ; y, . const Double_t * ; col = nullptr, . const Double_t * ; size = nullptr . ). TScatter normal constructor. ; if ex or ey are null, the corresponding arrays are preset to zero ; Definition at line 89 of file TScatter.cxx. ◆ ~TScatter(). TScatter::~TSca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter.html:20233,inherit,inherited,20233,doc/master/classTScatter.html,https://root.cern,https://root.cern/doc/master/classTScatter.html,2,['inherit'],['inherited']
Modifiability,"tyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsLValue; virtual ~RooAbsLValue ()=default;  ; virtual std::list< std::string > getBinningNames () const =0;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TH1 * createHistogram (const char *name, RooArgList &vars, const char *tAxisLabel, const RooAbsBinning **bins);  Create a 1,2, or 3D-histogram with appropriate scale and labels. ;  ; static TH1 * createHistogram (const char *name, RooArgList &vars, const char *tAxisLabel, double *xlo, double *xhi, Int_t *nBins);  Create 1-, 2- or 3-d ROOT histogram with labels taken from the variables in 'vars' and the with range and binning specified in xlo,xhi and nBins. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsRealLValue.html:52629,variab,variables,52629,doc/master/classRooAbsRealLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsRealLValue.html,1,['variab'],['variables']
Modifiability,"tyleQFont::StyleOblique; static QFont::ResolvePropertiesQFont::StyleResolved; static QFont::ResolvePropertiesQFont::StyleStrategyResolved; static QFont::StyleHintQFont::System; static QFont::StyleHintQFont::Times; static QFont::StyleHintQFont::TypeWriter; static QFont::StretchQFont::UltraCondensed; static QFont::StretchQFont::UltraExpanded; static QFont::ResolvePropertiesQFont::UnderlineResolved; static QFont::StretchQFont::Unstretched; static QFont::ResolvePropertiesQFont::WeightResolved; static QFont::ResolvePropertiesQFont::WordSpacingResolved; static const QMetaObjectQFont::staticMetaObject. protected:. Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size. private:. static TStringfgArialFontName; static TStringfgCourierFontName; static TStringfgRomanFontName; static TStringfgSymbolFontFamily. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQtPadFont(); {fTextFont = -1;fTextSize = -1; }. void SetTextFont(const char* fontname, int italic, int bold). void SetTextFont(Font_t fontnumber = 62); -*Set current text font number; *-* ===========================; *-* List of the currently supported fonts (screen and PostScript); *-* =============================================================; *-* Font ID X11 Win32 TTF lfItalic lfWeight x 10; *-* 1 : times-medium-i-normal ""Times New Roman"" 1 5; *-* 2 : times-bold-r-normal ""Times New Roman"" 0 8; *-* 3 : times-bold-i-normal ""Times New Roman"" 1 8; *-* 4 : helvetica-medium-r-normal ""Arial"" 0 5; *-* 5 : helvetica-medium-o-normal ""Arial"" 1 5; *-* 6 : helvetica-bold-r-normal ""Arial"" 0 8; *-* 7 : helvetica-bold-o-normal ""Arial"" 1 8; *-* 8 : courier-medium-r-normal ""Courier New"" 0 5; *-* 9 : courier-medium-o-normal ""Courier New"" 1 5; *-* 10 : courier-bold-r-normal ""Courier New"" 0 8; *-* 11 : courier-bold-o-normal ""Courier New"" 1 8; *-* 12",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TQtPadFont.html:8640,Inherit,Inheritance,8640,root/html604/TQtPadFont.html,https://root.cern,https://root.cern/root/html604/TQtPadFont.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"tyle_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOpen(const char* filename, Int_t type = -111); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TImageDump.html:4142,Inherit,InheritsFrom,4142,root/html532/TImageDump.html,https://root.cern,https://root.cern/root/html532/TImageDump.html,4,['Inherit'],['InheritsFrom']
Modifiability,"tyle_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual void*GetStream() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual voidNewPage(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOpen(const char* filename, Int_t type = -111); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TImageDump.html:4075,Inherit,InheritsFrom,4075,root/html602/TImageDump.html,https://root.cern,https://root.cern/root/html602/TImageDump.html,4,['Inherit'],['InheritsFrom']
Modifiability,"type TSlave::kSlave.; Note: creation of TSlave is private with TProof as a friend.; Derived classes must use this function to create slaves. TSlave * CreateSubmaster(const char* url, const char* ord, const char* image, const char* msd); Create a new TSlave of type TSlave::kMaster.; Note: creation of TSlave is private with TProof as a friend.; Derived classes must use this function to create slaves. TSlave * FindSlave(TSocket* s) const; Find slave that has TSocket s. Returns 0 in case slave is not found. void FindUniqueSlaves(); Add to the fUniqueSlave list the active slaves that have a unique; (user) file system image. This information is used to transfer files; only once to nodes that share a file system (an image). Submasters; which are not in fUniqueSlaves are put in the fNonUniqueMasters; list. That list is used to trigger the transferring of files to; the submaster's unique slaves without the need to transfer the file; to the submaster. Int_t GetNumberOfSlaves() const; Return number of slaves as described in the config file. Int_t GetNumberOfActiveSlaves() const; Return number of active slaves, i.e. slaves that are valid and in; the current computing group. Int_t GetNumberOfInactiveSlaves() const; Return number of inactive slaves, i.e. slaves that are valid but not in; the current computing group. Int_t GetNumberOfUniqueSlaves() const; Return number of unique slaves, i.e. active slaves that have each a; unique different user files system. Int_t GetNumberOfBadSlaves() const; Return number of bad slaves. This are slaves that we in the config; file, but refused to startup or that died during the PROOF session. void AskStatistics(); Ask the for the statistics of the slaves. void GetStatistics(Bool_t verbose = kFALSE); Get statistics about CPU time, real time and bytes read.; If verbose, print the resuls (always available via GetCpuTime(), GetRealTime(); and GetBytesRead(). void AskParallel(); Ask the for the number of parallel slaves. TList * GetListOfQueries(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:35700,config,config,35700,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,6,['config'],['config']
Modifiability,"type of any other variable is not specified, the type of the previous variable is assumed. eg; x:y:z (all variables are assumed of type ""F""); x/D:y:z (all variables are of type ""D""); x:y/D:z (x is type ""F"", y and z of type ""D""). delimiter allows for the use of another delimiter besides whitespace. This provides support for direct import of common data file formats like csv. If delimiter != ' ' and branchDescriptor == """", then the branch description is taken from the first line in the file, but delimiter is used for the branch names tokenization rather than ':'. Note however that if the values in the first line do not use the /[type] syntax, all variables are assumed to be of type ""F"". If the filename ends with extensions .csv or .CSV and a delimiter is not specified (besides ' '), the delimiter is automatically set to ','.; Lines in the input file starting with ""#"" are ignored. Leading whitespace for each column data is skipped. Empty lines are skipped.; A TBranch object is created for each variable in the expression. The total number of rows read from the file is returned. FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; To fill a TTree with multiple input text files, proceed as indicated above for the first input file and omit the second argument for subsequent calls T.ReadFile(""file1.dat"",""branch descriptor"");; T.ReadFile(""file2.dat"");. Definition at line 7564 of file TTree.cxx. ◆ ReadStream(). Long64_t TTree::ReadStream ; (; std::istream & ; inputStream, . const char * ; branchDescriptor = """", . char ; delimiter = ' ' . ). virtual . Create or simply read branches from an input stream. ; See alsoreference information for TTree::ReadFile ; Reimplemented in TNtuple, and TNtupleD.; Definition at line 7615 of file TTree.cxx. ◆ RecursiveRemove(). void TTree::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Make sure that obj (which is being deleted or will soon be) is no longer referenced by this TTree. ; Reimplemented from TObject.; Definition at line 7881 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:194591,variab,variable,194591,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['variab'],['variable']
Modifiability,"type, const char* realname); TStringGetMemberTypeName(TDataMember* member); TStringGetStreamerName(TClass* cl); voidTObject::MakeZombie(); Bool_tProduceSTLstreamer(ostream& fs, TClass* cl, TStreamerSTL* el, Bool_t isWriting); voidProduceStreamerSource(ostream& fs, TClass* cl, TList* cllist); voidReadSTLarg(ostream& fs, TString& argname, int argtyp, Bool_t isargptr, TClass* argcl, TString& tname, TString& ifcond); voidWriteSTLarg(ostream& fs, const char* accname, int argtyp, Bool_t isargptr, TClass* argcl). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfGetterName! buffer for name of getter method; TStringfSetterName! buffer for name of setter method; TXMLSetupfXmlSetup! buffer for xml names convertion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXMLPlayer(); default constructor. ~TXMLPlayer(); destructor of TXMLPlayer object. TString GetStreamerName(TClass* cl); returns streamer function name for given class. Bool_t ProduceCode(TList* cllist, const char* filename); Produce streamers for provide class list; TList should include list of classes, for which code should be generated.; filename specify name of file (without extension), where streamers should be; created. Function produces two files: header file and source file.; For instance, if filename is ""streamers"", files ""streamers.h"" and ""streamers.cxx""; will be created. TString GetMemberTypeName(TDataMember* member); returns name of simple data type for given data member. TString GetBasicTypeName(TStreamerElement* el); return simple data types for given TStreamerElement object. TString GetBasicTypeReaderMethodName(Int_t type, const char* realname); return functions name to read simple data type from xml file. const char* Ele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLPlayer.html:9587,Inherit,Inheritance,9587,root/html532/TXMLPlayer.html,https://root.cern,https://root.cern/root/html532/TXMLPlayer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"typeTStreamerElement::kSTLunorderedset; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Int_tfCounter!value of data member when referenced by an array; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerBasicType. Function documentation; TStreamerBasicType(); Default ctor. TStreamerBasicType(const char* name, const char* title, Int_t offset, Int_t dtype, const char* typeName); Create a TStreamerBasicType object. ~TStreamerBasicType(); TStreamerBasicType dtor. ULong_t GetMethod() const; return addr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerBasicType.html:10472,inherit,inherits,10472,root/html604/TStreamerBasicType.html,https://root.cern,https://root.cern/root/html604/TStreamerBasicType.html,2,['inherit'],['inherits']
Modifiability,"typeTStreamerElement::kSTLunorderedset; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Int_tfCtypeSTL contained type; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tfSTLtypetype of STL vector; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. private:. static TStreamerSTL::(anonymous)kWarned. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerSTL. ←. TStreamerSTLstring. Function documentation; TStreamerSTL(); Default ctor. TStreamerSTL(const char* name, const char* title, Int_t offset, const char* typeName, const TVirtualCollectionProxy& proxy, Bool_t dmPointer); Create a TStreamerSTL o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerSTL.html:10587,inherit,inherits,10587,root/html604/TStreamerSTL.html,https://root.cern,https://root.cern/root/html604/TStreamerSTL.html,2,['inherit'],['inherits']
Modifiability,"typename"": ""map<string,int>"",; ""name1"": 11,; ""name2"": 22; }; Another possibility to enforce such conversion - add ""JSON_object"" into comment line of correspondent data member like: class Container {; std::map<std::string,int> data; ///< JSON_object; };. Definition at line 30 of file TBufferJSON.h. Public Types; enum  { ;   kNoCompress = 0; , kNoIndent = 1; , kNoNewLine = 2; , kNoSpaces = 3; , ;   kMapAsObject = 5; , kZeroSuppression = 10; , kSameSuppression = 20; , kBase64 = 30; , ;   kSkipTypeInfo = 100. };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBufferJSON (TBuffer::EMode mode=TBuffer::kWrite);  Creates buffer object to serialize data into json. ;  ;  ~TBufferJSON () override;  destroy buffer ;  ; void ClassBegin (const TClass *, Version_t=-1) final;  Should be called in the beginning of custom class streamer. ;  ; void ClassEnd (const TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferJSON.html:4343,inherit,inherited,4343,doc/master/classTBufferJSON.html,https://root.cern,https://root.cern/doc/master/classTBufferJSON.html,2,['inherit'],['inherited']
Modifiability,"typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TContextMenuImp;  TContextMenuImp (TContextMenu *c=nullptr);  ; virtual ~TContextMenuImp ();  ; virtual TContextMenu * GetContextMenu () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGPopupMenu; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:22767,inherit,inherited,22767,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,1,['inherit'],['inherited']
Modifiability,"types definition. ;  ; TProcessUUID * fUUIDs;  Pointer to TProcessID managing TUUIDs. ;  ; TString fVersion;  ROOT version (from CMZ VERSQQ) ex 0.05/01. ;  ; Int_t fVersionCode;  ROOT version code as used in RVersion.h. ;  ; Int_t fVersionDate;  Date of ROOT version (ex 951226) ;  ; Int_t fVersionInt;  ROOT version in integer format (501) ;  ; Int_t fVersionTime;  Time of ROOT version (ex 1152) ;  ; TString fWebDisplay;  If not empty it defines where web graphics should be rendered (cef, qt5, browser...) ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TROOT (const TROOT &)=delete;  ; TROOT & operator= (const TROOT &)=delete;  . Private Attributes; Int_t fLineIsProcessing;  To synchronize multi-threads. ;  . Static Private Attributes; static Int_t fgDirLevel = 0;  Indentation level for ls() ;  ; static Bool_t fgRootInit = kFALSE;  Singleton initialization flag. ;  . Friends; class ::ROOT::Internal::TROOTAllocator;  ; TROOT * ROOT::Internal::GetROOT2 ();  ; class TCling;  . Additional Inherited Members;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't sup",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:38140,inherit,inherited,38140,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['inherit'],['inherited']
Modifiability,"typically used as mixin class (via multiple; inheritance), see for example TGButton. Function Members (Methods); public:. TGWidget(); TGWidget(Int_t id); virtual~TGWidget(); virtual voidAssociate(const TGWindow* w); static TClass*Class(); const char*GetCommand() const; Bool_tHasFocus() const; virtual TClass*IsA() const; Bool_tIsEnabled() const; virtual voidSetCommand(const char* command); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Bool_tWantFocus() const; Int_tWidgetId() const. protected:. TGWidget(const TGWidget& tgw); Int_tClearFlags(Int_t flags); TGWidget&operator=(const TGWidget& tgw); Int_tSetFlags(Int_t flags). Data Members; protected:. TStringfCommandcommand to be executed; const TGWindow*fMsgWindowwindow which handles widget events; Int_tfWidgetFlagswidget status flags (OR of EWidgetStatus); Int_tfWidgetIdthe widget id (used for event processing). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGWidget(const TGWidget& tgw); { }. TGWidget& operator=(const TGWidget& tgw). Int_t SetFlags(Int_t flags); { return fWidgetFlags |= flags; }. Int_t ClearFlags(Int_t flags); { return fWidgetFlags &= ~flags; }. TGWidget(); { }. TGWidget(Int_t id); { }. virtual ~TGWidget(); { }. Int_t WidgetId() const; { return fWidgetId; }. Bool_t IsEnabled() const; { return (Bool_t)((fWidgetFlags & kWidgetIsEnabled) != 0); }. Bool_t HasFocus() const; { return (Bool_t)((fWidgetFlags & kWidgetHasFocus) != 0); }. Bool_t WantFocus() const; { return (Bool_t)((fWidgetFlags & kWidgetWantFocus) != 0); }. void Associate(const TGWindow* w); { fMsgWindow = w; }. void SetCommand(const char* command); { fCommand = command; }. const char * GetCommand() const; { return fCommand.Data(); }. » Author: Fons Rademakers 05/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-14 16:38; This page has been a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGWidget.html:1331,Inherit,Inheritance,1331,root/html534/TGWidget.html,https://root.cern,https://root.cern/root/html534/TGWidget.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"t|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf306_condpereventerrors.py. tutorialsroofitrf306_condpereventerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf306__condpereventerrors_8py.html:4408,variab,variables,4408,doc/master/rf306__condpereventerrors_8py.html,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html,1,['variab'],['variables']
Modifiability,"t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup . ). protected . Constructor for variable bin size (along X axis) 2-D histograms using an input array of type double. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type double and size nbinsx+1 ; [in]nbinsynumber of bins along the Y axis ; [in]ylowlow edge of the Y axis first bin ; [in]yupupper edge of the Y axis last bin (not included in last bin) . Definition at line 126 of file TH2.cxx. ◆ TH2() [4/7]. TH2::TH2 ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; nbinsy, . const Double_t * ; ybins . ). protected . Constructor for Double_t variable bin size (along Y axis) 2-D histograms. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins along the X axis ; [in]xlowlow edge of the X axis first bin ; [in]xupupper edge of the X axis last bin (not included in last bin) ; [in]nbinsynumber of bins ; [in]ybinsarray of low-edges for each bin. This is an array of type double and size nbinsy+1 . Definition at line 154 of file TH2.cxx. ◆ TH2() [5/7]. TH2::TH2 ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins . ). protected . Constructor for Double_t variable bin size 2-D histograms. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:59079,variab,variable,59079,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability,"t ; vsmlsq, . Double_t * ; smo, . Double_t * ; acvr . ). static . Function for super smoother Based on R function supsmu: Translated to C++ by C. ; Stratowa (R source file: ppr.f by B.D.Ripley Copyright (C) 1994-97) ; Definition at line 693 of file TGraphSmooth.cxx. ◆ BDRsupsmu(). void TGraphSmooth::BDRsupsmu ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Double_t * ; w, . Int_t ; iper, . Double_t ; span, . Double_t ; alpha, . Double_t * ; smo, . Double_t * ; sc . ). static . Friedmanns super smoother (Friedman, 1984). ; version 10/10/84 coded and copyright (c) 1984 by: Jerome H. Friedman; department of statistics; and; stanford linear accelerator center; stanford university; all rights reserved.; Parameters. [in]nnumber of observations (x,y - pairs). ; [in]xordered abscissa values. ; [in]ycorresponding ordinate (response) values. ; [in]wweight for each (x,y) observation. ; [in]iperperiodic variable flag.; iper=1 => x is ordered interval variable.; iper=2 => x is a periodic variable with values in the range (0.0,1.0) and period 1.0. . [in]spansmoother span (fraction of observations in window).; span=0.0 => automatic (variable) span selection. . [in]alphacontrols high frequency (small span) penality used with automatic span selection (bass tone control). (alpha.le.0.0 or alpha.gt.10.0 => no effect.) ; [out]smosmoothed ordinate (response) values. ; scinternal working storage. note:; for small samples (n < 40) or if there are substantial serial correlations between observations close in x - value, then a prespecified fixed span smoother (span > 0) should be used. reasonable span values are 0.2 to 0.4.; current implementation:; Based on R function supsmu: Translated to C++ by C. Stratowa (R source file: ppr.f by B.D.Ripley Copyright (C) 1994-97) ; Definition at line 572 of file TGraphSmooth.cxx. ◆ Class(). static TClass * TGraphSmooth::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGraphSmooth::Class_Name ; (; ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphSmooth.html:19819,variab,variable,19819,doc/master/classTGraphSmooth.html,https://root.cern,https://root.cern/doc/master/classTGraphSmooth.html,1,['variab'],['variable']
Modifiability,"t ; ylow, . Double_t ; yup, . Double_t ; zlow, . Double_t ; zup, . Option_t * ; option = """" . ). Constructor for Profile2D histograms with range in z. ; The first eight parameters are similar to TH2D::TH2D. Only the values of Z between ZMIN and ZMAX will be considered at filling time. zmin and zmax will also be the maximum and minimum values on the z scale when drawing the profile2D.; See TProfile2D::BuildOptions for more explanations on errors ; Definition at line 169 of file TProfile2D.cxx. ◆ TProfile2D() [3/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; ny, . Double_t ; ylow, . Double_t ; yup, . Option_t * ; option = """" . ). Normal Constructor for Profile histograms. ; The first eight parameters are similar to TH2D::TH2D. All values of z are accepted at filling time. To fill a profile2D histogram, one must use TProfile2D::Fill function.; Note that when filling the profile histogram the function Fill checks if the variable z is between fZmin and fZmax. If a minimum or maximum value is set for the Z scale before filling, then all values below zmin or above zmax will be discarded. Setting the minimum or maximum value for the Z scale before filling has the same effect as calling the special TProfile2D constructor below where zmin and zmax are specified.; H(I,J) is printed as the cell contents. The errors computed are s(I,J) if CHOPT='S' (spread option), or e(I,J) if CHOPT=' ' (error on mean).; See TProfile2D::BuildOptions for explanation of parameters; see other constructors below with all possible combinations of fix and variable bin size like in TH2D. ; Definition at line 125 of file TProfile2D.cxx. ◆ TProfile2D() [4/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup, . Option_t * ; option = """" . ). Create a 2-D Profile with variable bins in X and fix b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:68676,variab,variable,68676,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"t ; y . ). Handle mouse clicks in list tree. ; Definition at line 4635 of file TSessionViewer.cxx. ◆ OnListTreeDoubleClicked(). void TSessionViewer::OnListTreeDoubleClicked ; (; TGListTreeItem * ; entry, . Int_t ; btn . ). Handle mouse double clicks in list tree (connect to server). ; Definition at line 4895 of file TSessionViewer.cxx. ◆ ProcessMessage(). Bool_t TSessionViewer::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ;  . ). overridevirtual . Handle messages send to the TSessionViewer object. ; E.g. all menu entries messages. ; Reimplemented from TGCompositeFrame.; Definition at line 5627 of file TSessionViewer.cxx. ◆ QueryResultReady(). void TSessionViewer::QueryResultReady ; (; char * ; query). Handle signal ""query result ready"" coming from Proof session. ; Definition at line 5067 of file TSessionViewer.cxx. ◆ ReadConfiguration(). void TSessionViewer::ReadConfiguration ; (; const char * ; filename = nullptr). Read configuration file and populate list of sessions list of queries and list of packages. ; Read and set also global options as feedback histos. ; Definition at line 3667 of file TSessionViewer.cxx. ◆ ResetSession(). void TSessionViewer::ResetSession ; (; ). Reset Proof session. ; Definition at line 5159 of file TSessionViewer.cxx. ◆ SetBusy(). void TSessionViewer::SetBusy ; (; Bool_t ; busy = kTRUE). inline . Definition at line 619 of file TSessionViewer.h. ◆ SetChangePic(). void TSessionViewer::SetChangePic ; (; Bool_t ; change). inline . Definition at line 620 of file TSessionViewer.h. ◆ SetLogWindow(). void TSessionViewer::SetLogWindow ; (; TSessionLogView * ; log). inline . Definition at line 621 of file TSessionViewer.h. ◆ ShowEnabledPackages(). void TSessionViewer::ShowEnabledPackages ; (; ). Query list of enabled packages from proof and display it into a new text window. ; Definition at line 5372 of file TSessionViewer.cxx. ◆ ShowInfo(). void TSessionViewer::ShowInfo ; (; const char * ; txt). Display text in status bar.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:47960,config,configuration,47960,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,1,['config'],['configuration']
Modifiability,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual Bool_t HandleContainerButton (Event_t *ev);  Handle mouse button events in the canvas container. ;  ; virtual Bool_t HandleContainerConfigure (Event_t *ev);  Handle configure (i.e. resize) event. ;  ; virtual Bool_t HandleContainerCrossing (Event_t *ev);  Handle enter/leave events. Only leave is activated at the moment. ;  ; virtual Bool_t HandleContainerDoubleClick (Event_t *ev);  Handle mouse button double click events in the canvas container. ;  ; virtual Bool_t HandleContainerExpose (Event_t *ev);  Handle expose events. ;  ; virtual Bool_t HandleContainerKey (Event_t *ev);  Handle keyboard events in the canvas container. ;  ; virtual Bool_t HandleContainerMotion (Event_t *ev);  Handle mouse motion event in the canvas container. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootEmbeddedCanvas.html:23582,config,configure,23582,doc/master/classTRootEmbeddedCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootEmbeddedCanvas.html,1,['config'],['configure']
Modifiability,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void CreateFileList ();  This function creates the file list from current dir. ;  ;  Protected Member Functions inherited from TGLVContainer; void ActivateItem (TGFrameElement *el) override;  Select/activate item. ;  ; void DeActivateItem (TGFrameElement *el) override;  Unselect/deactivate item. ;  ;  Protected Member Functions inherited from TGContainer; void DoRedraw () override;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileContainer.html:33269,inherit,inherited,33269,doc/master/classTGFileContainer.html,https://root.cern,https://root.cern/doc/master/classTGFileContainer.html,1,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSignalHandler;  TSignalHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTARInterruptHandler.html:14051,inherit,inherited,14051,doc/master/classTARInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTARInterruptHandler.html,36,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TShape.h>. Inheritance diagram for TShape:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShape.html:16236,inherit,inherited,16236,doc/master/classTShape.html,https://root.cern,https://root.cern/doc/master/classTShape.html,1,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString & fBuf;  ! output buffer ;  ; Bool_t fCompact {kFALSE};  ! produce compact json code ;  ;  Protected Attributes inherited from TRootSnifferStore; TClass * fResClass {nullptr};  ! class of found item ;  ; TDataMember * fResMember {nullptr};  ! datamember pointer of found item ;  ; Int_t fResNumChilds {-1};  ! count of found childs, -1 by default ;  ; void * fResPtr {nullptr};  ! pointer on found item ;  ; Int_t fResRestrict {0};  ! restriction for result, 0-default, 1-readonly, 2-full ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRootSnifferStore.h>. Inheritance diagram for TRootSnifferStoreJson:. This browser is not able to show SVG: try Firefox, Chrome, S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSnifferStoreJson.html:10843,inherit,inherited,10843,doc/master/classTRootSnifferStoreJson.html,https://root.cern,https://root.cern/doc/master/classTRootSnifferStoreJson.html,1,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TParticlePDG (const TParticlePDG &);  copy constructor ;  ; TParticlePDG & operator= (const TParticlePDG &);  assignement operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TParticlePDG * fAntiParticle;  ; Int_t fBeauty;  ; Double_t fCharge;  ; Int_t fCharm;  ; TObjArray * fDecayList;  ; Double_t fI3;  ; Double_t fIsospin;  ; Double_t fLifetime;  ; Double_t fMass;  ; Int_t fParity;  ; TString fParticleClass;  ; Int_t fPdgCode;  ; Double_t fSpin;  ; Int_t fStable;  ; Int_t fStrangeness;  ; Int_t fTop;  ; Int_t fTrackingCode;  ; Double_t fWidth;  ; Int_t fX;  ; Int_t fY;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticlePDG.html:13041,inherit,inherited,13041,doc/master/classTParticlePDG.html,https://root.cern,https://root.cern/doc/master/classTParticlePDG.html,1,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; UInt_t fColumns;  number of columns ;  ; Int_t fHints;  layout hints (currently not used) ;  ; UInt_t fRows;  number of rows ;  ; Int_t fSep;  interval between frames ;  . Protected Attributes; TList * fList;  list of frames to arrange ;  ; TGCompositeFrame * fMain;  container frame ;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . Private Member Functions;  TGMatrixLayout (const TGMatrixLayout &)=delete;  ; TGMatrixLayout & operator= (const TGMatrixLayout &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGLayout.h>. Inheritance diagram for TGMatrixLayout:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMatrixLayout.html:11116,inherit,inherited,11116,doc/master/classTGMatrixLayout.html,https://root.cern,https://root.cern/doc/master/classTGMatrixLayout.html,1,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ; static TSelector * GetSelector (const char *filename);  The code in filename is loaded (interpreted or compiled, see below), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  Define relevant variables. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the histogram with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:11622,variab,variables,11622,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,1,['variab'],['variables']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ; static TSelector * GetSelector (const char *filename);  The code in filename is loaded (interpreted or compiled, see below), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  Define relevant variables. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the profile histogram with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to Erro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile.html:11616,variab,variables,11616,doc/master/classTProofDrawProfile.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile.html,1,['variab'],['variables']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate one event. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void initializeEff (RooAbsReal const &eff);  . Private Attributes; RooArgSet _cloneSet;  Internal clone of p.d.f. ;  ; RooAbsReal * _eff;  Pointer to efficiency function. ;  ; std::unique_ptr< RooAbsGenContext > _generator;  Generator context for p.d.f. ;  ; double _maxEff;  Maximum of efficiency in vars. ;  ; RooArgSet _vars;  Vars to generate. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRefere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffGenContext.html:14643,inherit,inherited,14643,doc/master/classRooEffGenContext.html,https://root.cern,https://root.cern/doc/master/classRooEffGenContext.html,1,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TH3 ();  Default constructor. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type double. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type float. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t z, Double_t w);  Accumulate arguments in buffer. ;  ; Int_t BufferFill (Double_t, Double_t) override;  accumulate arguments in buffer. ;  ; virtual Int_t BufferFill (Double_t, Double_t, Double_t);  ; void DoFillProfileProjection (TProfile2D *p2, const TAxis &a1, const TAxis &a2, const TAxis &a3, Int_t bin1, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:46357,variab,variable,46357,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['variab'],['variable']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Private Types; enum  EAlign { ;   kNone; , kTLeft; , kTCenter; , kTRight; , ;   kMLeft; , kMCenter; , kMRight; , kBLeft; , ;   kBCenter; , kBRight. };  . Private Member Functions; void Align (void);  Compute alignment variables. ;  ; void DrawImage (FT_Bitmap *source, ULong_t fore, ULong_t back, RXImage *xim, Int_t bx, Int_t by);  Draw FT_Bitmap bitmap to xim image at position bx,by using specified foreground color. ;  ; RXImage * GetBackground (Int_t x, Int_t y, UInt_t w, UInt_t h);  Get the background of the current window in an XImage. ;  ; Bool_t IsVisible (Int_t x, Int_t y, UInt_t w, UInt_t h);  Test if there is really something to render. ;  ; void RenderString (Int_t x, Int_t y, ETextMode mode);  Perform the string rendering in the pad. ;  . Private Attributes; FT_Vector fAlign;  alignment vector ;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11TTF.html:46492,variab,variables,46492,doc/master/classTGX11TTF.html,https://root.cern,https://root.cern/doc/master/classTGX11TTF.html,1,['variab'],['variables']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; void * fLink {nullptr};  pointer to object ;  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLink.html:17469,inherit,inherited,17469,doc/master/classTLink.html,https://root.cern,https://root.cern/doc/master/classTLink.html,2,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Inter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTText.html:17730,inherit,inherited,17730,doc/master/classTText.html,https://root.cern,https://root.cern/doc/master/classTText.html,2,['inherit'],['inherited']
Modifiability,"t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoVolumeMulti (const TGeoVolumeMulti &)=delete;  ; TGeoVolumeMulti & operator= (const TGeoVolumeMulti &)=delete;  . Private Attributes; Bool_t fAttSet;  ; Int_t fAxis;  ; TGeoVolumeMulti * fDivision;  ; Int_t fNdiv;  ; Int_t fNumed;  ; Double_t fStart;  ; Double_t fStep;  ; TObjArray * fVolumes;  . Additional Inherited Members;  Public Types inherited from TGeoVolume; enum  EGeoVolumeTypes { ;   kVolumeReplicated = (1ULL << ( 14 )); , kVolumeSelected = (1ULL << ( 15 )); , kVolumeDiv = (1ULL << ( 16 )); , kVolumeOverlap = (1ULL << ( 17 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeMulti.html:33505,inherit,inherited,33505,doc/master/classTGeoVolumeMulti.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeMulti.html,4,['inherit'],['inherited']
Modifiability,t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TObject * fField;  pointer to TGeoManager owning this volume ;  ; TGeoPatternFinder * fFinder;  dummy medium ;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to volumes. ;  ; TGeoManager * fGeoManager;  ; TGeoMedium * fMedium;  ; TObjArray * fNodes;  ; Int_t fNtotal;  ; Int_t fNumber;  option - if any ;  ; TString fOption;  just a hook for now ;  ; Int_t fRefCount;  ; TGeoShape * fShape;  ; Char_t fTransparency;  ; TGeoExtension * fUserExtension;  ; TGeoVoxelFinder * fVoxels;  ;  Protected Attributes inherited from TNamed; TSt,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume.html:37243,inherit,inherited,37243,doc/master/classTGeoVolume.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume.html,4,['inherit'],['inherited']
Modifiability,t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; std::mutex fMutex;  Thread vector size. ;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Thread specific data vector. ;  ;  Protected Attributes inherited from TGeoVolume; TObject * fField;  pointer to TGeoManager owning this volume ;  ; TGeoPatternFinder * fFinder;  dummy medium ;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to volumes. ;  ; TGeoManager * fGeoManager;  ; TGeoMedium * fMedium;  ; TObjArray * fNodes;  ; Int_t fNtotal;  ; Int_t fNumber;  option - if any ;  ; TString fOption;  just a hook ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeAssembly.html:25940,inherit,inherited,25940,doc/master/classTGeoVolumeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeAssembly.html,4,['inherit'],['inherited']
Modifiability,"t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Draw the dock button, i.e. two vertical lines. ;  ; void DrawBorder () override;  Draw borders of dock button. ;  ;  Protected Member Functions inherited from TGButton; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockButton.html:24404,inherit,inherited,24404,doc/master/classTGDockButton.html,https://root.cern,https://root.cern/doc/master/classTGDockButton.html,1,['inherit'],['inherited']
Modifiability,"t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  redraw ;  ; void OnAutoScroll () override;  Autoscroll while close to & beyond The Wall. ;  ;  Protected Member Functions inherited from TGContainer; virtual void DeActivateItem (TGFrameElement *el);  DeActivate item. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBContainer.html:31297,inherit,inherited,31297,doc/master/classTGLBContainer.html,https://root.cern,https://root.cern/doc/master/classTGLBContainer.html,1,['inherit'],['inherited']
Modifiability,"t DecomposeLUCrout (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  Crout/Doolittle algorithm of LU decomposing a square matrix, with implicit partial pivoting. ;  ; static Bool_t DecomposeLUGauss (TMatrixD &lu, Int_t *index, Double_t &sign, Double_t tol, Int_t &nrZeros);  LU decomposition using Gaussian Elimination with partial pivoting (See Golub & Van Loan, Matrix Computations, Algorithm 3.4.1) of a square matrix . ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; Int_t fImplicitPivot;  ; Int_t * fIndex;  ; TMatrixD fLU;  ; Int_t fNIndex;  ; Double_t fSign;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompLU.html:14136,inherit,inherited,14136,doc/master/classTDecompLU.html,https://root.cern,https://root.cern/doc/master/classTDecompLU.html,1,['inherit'],['inherited']
Modifiability,"t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; Int_t FindTabIndex ();  Return index of this frame in the tab. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGCompositeFrame * fParentInTab;  ; TGTab * fTab;  ;  Protected Attributes inherited from TEveCompositeFrame; TEveElement * fEveParent;  ; TEveWindow * fEveWindow;  ; TGLayoutHints * fEveWindowLH;  ; TGFrame * fIconBar;  ; TGFrame * fMiniBar;  ; Bool_t fShowInSync;  ; TGTextButton * fTitleBar;  ; TGTextButton * fToggleBar;  ; TGCompositeFrame * fTopFrame;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInTab.html:27179,inherit,inherited,27179,doc/master/classTEveCompositeFrameInTab.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInTab.html,3,['inherit'],['inherited']
Modifiability,"t GetBinError (Int_t bin) const override;  Get bin error. ;  ; Double_t GetBinError (Int_t, Int_t) const override;  NOT IMPLEMENTED for TH2Poly. ;  ; Double_t GetBinError (Int_t, Int_t, Int_t) const override;  NOT IMPLEMENTED for TH2Poly. ;  ; Double_t GetOverflowContent (Int_t idx);  ; void GetStats (Double_t *stats) const override;  Fill the array stats from the contents of this profile. ;  ; TClass * IsA () const override;  ; Long64_t Merge (const std::vector< TProfile2Poly * > &list);  Merge. ;  ; Long64_t Merge (TCollection *in) override;  Merge. ;  ; void PrintOverflowRegions ();  Print overflow regions. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetContentToAverage ();  Set content to average. ;  ; void SetContentToError ();  Set content to error. ;  ; void SetErrorOption (EErrorType type);  Set error option. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2Poly;  TH2Poly ();  Default Constructor. No boundaries specified. ;  ;  TH2Poly (const char *name, const char *title, Double_t xlow, Double_t xup, Double_t ylow, Double_t yup);  Constructor with specified name and boundaries, but no partition cell number. ;  ;  TH2Poly (const char *name, const char *title, Int_t nX, Double_t xlow, Double_t xup, Int_t nY, Double_t ylow, Double_t yup);  Constructor with specified name and boundaries and partition cell number. ;  ;  TH2Poly (const TH2Poly &rhs);  Copy constructor. ;  ;  ~TH2Poly () override;  Destructor. ;  ; Bool_t Add (const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) override;  NOT IMPLEMENTED for TH2Poly. ;  ; Bool_t Add (const TH1 *h1, Double_t c1) override;  Performs the operation: this = this + c1*h1. ;  ; Bool_t Add (TF1 *h1, Double_t c1=1, Option_t *option="""") override;  NOT IMPLEMENTED for TH2Poly. ;  ; Int_t AddBin (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Add a new bi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2Poly.html:3706,inherit,inherited,3706,doc/master/classTProfile2Poly.html,https://root.cern,https://root.cern/doc/master/classTProfile2Poly.html,1,['inherit'],['inherited']
Modifiability,"t GetColumn () const;  ; virtual UInt_t GetHeight () const;  ; virtual TGPicture * GetImage () const;  ; virtual TGString * GetLabel () const;  ; virtual UInt_t GetRow () const;  ; virtual TGDimension GetSize () const;  ; virtual Int_t GetTextJustify () const;  ; virtual UInt_t GetWidth () const;  ; virtual void Select ();  Select this TGTableCell. ;  ; virtual void SelectColumn ();  Select the column that this TGTableCell belongs to. ;  ; virtual void SelectRow ();  Select the row that this TGTableCell belongs to. ;  ; virtual void SetFont (const char *fontName);  Changes text font specified by name. ;  ; virtual void SetFont (FontStruct_t font);  Changes text font. ;  ; virtual void SetImage (TGPicture *image);  Set the image that this cell contains to image. ;  ; virtual void SetTextJustify (Int_t tmode);  Set the text justify mode of the cell to mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableHeader.html:4040,inherit,inherited,4040,doc/master/classTGTableHeader.html,https://root.cern,https://root.cern/doc/master/classTGTableHeader.html,1,['inherit'],['inherited']
Modifiability,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fBest;  Best Edge for division. ;  ; TRef fDaught0;  Pointer to daughter 1. ;  ; TRef fDaught1;  Pointer to daughter 2. ;  ; Short_t fDim;  ; Double_t fDrive;  Driver integral, only for cell build-up. ;  ; TObject * fElement;  may set by the user to save some data in this cell ;  ; Double_t fIntegral;  Integral over cell (estimate from exploration) ;  ; TRef fParent;  Pointer to parent cell. ;  ; Int_t fSerial;  Serial number. ;  ; Int_t fStatus;  Status (active, inactive) ;  ; Double_t fVolume;  Cartesian Volume of cell. ;  ; Double_t fXdiv;  Factor for division. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/PDEFoamCell.h>. Inheritance diagram for TMVA::PDEFoamCell:. This browser is not able to show SVG: try Firefox, Chrome, Safari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamCell.html:11106,inherit,inherited,11106,doc/master/classTMVA_1_1PDEFoamCell.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamCell.html,1,['inherit'],['inherited']
Modifiability,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return value of polynomial. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html:48965,inherit,inherited,48965,doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,2,['inherit'],['inherited']
Modifiability,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Return sum of -log of constraint p.d.f.s. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:48374,inherit,inherited,48374,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['inherit'],['inherited']
Modifiability,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fPhi;  ;  Protected Attributes inherited from TTUBE; Float_t fAspectRatio;  ; Double_t * fCoTab;  Table of sin(fPhi1) .... sin(fPhil+fDphi1) ;  ; Float_t fDz;  ; Int_t fNdiv;  ; Float_t fRmax;  ; Float_t fRmin;  ; Double_t * fSiTab;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHYPE.html:16331,inherit,inherited,16331,doc/master/classTHYPE.html,https://root.cern,https://root.cern/doc/master/classTHYPE.html,1,['inherit'],['inherited']
Modifiability,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker3DBox.html:13950,inherit,inherited,13950,doc/master/classTMarker3DBox.html,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html,1,['inherit'],['inherited']
Modifiability,"t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TArrayF; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Protected Member Functions; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH1;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Constructor for variable bin size histograms using an input array of type float. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Constructor for fix bin size histograms. ;  ; virtual Int_t AutoP2FindLimits (Double_t min, Double_t max);  Buffer-based estimate of the histogram range using the power of 2 algorithm. ;  ; Int_t AxisChoice (Option_t *axis) const;  Choose an axis according to ""axis"". ;  ; virtual Int_t BufferFill (Double_t x, Double_t w);  accumulate arguments in buffer. ;  ; virtual void DoFillN (Int_t ntimes, const Double_t *x, const Double_t *w, Int_t stride=1);  Internal method to fill histogram content from a vector called direct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1K.html:42520,inherit,inherited,42520,doc/master/classTH1K.html,https://root.cern,https://root.cern/doc/master/classTH1K.html,1,['inherit'],['inherited']
Modifiability,"t GetPosition () const;  ; virtual Int_t GetScale () const;  ; Bool_t HandleButton (Event_t *event) override=0;  ; Bool_t HandleConfigureNotify (Event_t *event) override=0;  This event is generated when the frame is resized. ;  ; Bool_t HandleMotion (Event_t *event) override=0;  ; TClass * IsA () const override;  ; void MapSubwindows () override;  map sub windows ;  ; virtual void PositionChanged (Int_t pos);  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetEnabled (Bool_t flag=kTRUE);  ; virtual void SetPosition (Int_t pos);  Set slider position. ;  ; virtual void SetRange (Int_t min, Int_t max);  Set slider range. ;  ; virtual void SetScale (Int_t scale);  ; virtual void SetState (Bool_t state);  Set state of widget. If kTRUE=enabled, kFALSE=disabled. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSlider.html:2080,inherit,inherited,2080,doc/master/classTGSlider.html,https://root.cern,https://root.cern/doc/master/classTGSlider.html,1,['inherit'],['inherited']
Modifiability,"t GetValue (Int_t i=0) const override;  ; void * GetValuePointer () const override;  ; void Import (TClonesArray *list, Int_t n) override;  Import element from ClonesArray into local leaf buffer. ;  ; TClass * IsA () const override;  ; void PrintValue (Int_t i=0) const override;  Prints leaf value. ;  ; void ReadBasket (TBuffer &b) override;  Read leaf elements from Basket input buffer. ;  ; void ReadBasketExport (TBuffer &b, TClonesArray *list, Int_t n) override;  Read leaf elements from Basket input buffer and export buffer to TClonesArray objects. ;  ; bool ReadBasketFast (TBuffer &, Long64_t) override;  ; void ReadValue (std::istream &s, Char_t delim=' ') override;  Read a double from std::istream s and store it into the branch buffer. ;  ; void SetAddress (void *add=nullptr) override;  Set leaf buffer data address. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual bool CanGenerateOffsetArray ();  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual TString GetFullName () const;  Return the full name (including the parent's branch names) of the leaf. ;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, Long64_t len);  If this branch is a branch count, return the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafD.html:1893,inherit,inherited,1893,doc/master/classTLeafD.html,https://root.cern,https://root.cern/doc/master/classTLeafD.html,1,['inherit'],['inherited']
Modifiability,"t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TString fAction;  associated action ;  ; TString fIcon;  associated icon (32x32) ;  ; TString fPattern;  filename pattern ;  ; TRegexp * fReg;  pattern regular expression ;  ; TString fSIcon;  associated small icon (16x16) ;  ; TString fType;  mime type ;  . Friends; class TGMimeTypes;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMime.html:8464,inherit,inherited,8464,doc/master/classTGMime.html,https://root.cern,https://root.cern/doc/master/classTGMime.html,1,['inherit'],['inherited']
Modifiability,"t WriteRealVarImp ();  write the minimum importance to be considered ;  ; Bool_t WriteRfOut ();  written by rf_go.exe; write rulefit output (rfout) ;  ; Bool_t WriteRfStatus ();  written by rf_go.exe; write rulefit status ;  ; Bool_t WriteRuleFitMod ();  written by rf_go.exe (NOTE:Format unknown!) ;  ; Bool_t WriteRuleFitSum ();  written by rf_go.exe (NOTE: format unknown!) ;  ; Bool_t WriteTest ();  Write test data. ;  ; Bool_t WriteTrain ();  write training data, column wise ;  ; Bool_t WriteVarImp ();  ; Bool_t WriteVarNames ();  write variable names, ascii ;  ; Bool_t WriteYhat ();  written by rf_go.exe ;  . Private Member Functions;  RuleFitAPI ();  . Private Attributes; MsgLogger fLogger;  ! message logger ;  ; const MethodRuleFit * fMethodRuleFit;  parent method - set in constructor ;  ; TString fModelType;  model type string ;  ; IntParms fRFIntParms;  integer parameters ;  ; std::vector< int > fRFLx;  variable selector ;  ; ERFProgram fRFProgram;  what to run ;  ; RealParms fRFRealParms;  real parameters ;  ; std::vector< Float_t > fRFVarImp;  variable importances ;  ; std::vector< Int_t > fRFVarImpInd;  variable index ;  ; TString fRFWorkDir;  working directory ;  ; std::vector< Float_t > fRFYhat;  score results from test sample ;  ; RuleFit * fRuleFit;  non const ptr to RuleFit class in MethodRuleFit ;  . #include <TMVA/RuleFitAPI.h>; Member Enumeration Documentation. ◆ EModel. enum TMVA::RuleFitAPI::EModel. protected . EnumeratorkRfLinear ; kRfRules ; kRfBoth . Definition at line 85 of file RuleFitAPI.h. ◆ ERFMode. enum TMVA::RuleFitAPI::ERFMode. protected . EnumeratorkRfRegress ; kRfClass . Definition at line 84 of file RuleFitAPI.h. ◆ ERFProgram. enum TMVA::RuleFitAPI::ERFProgram. protected . EnumeratorkRfTrain ; kRfPredict ; kRfVarimp . Definition at line 86 of file RuleFitAPI.h. Constructor & Destructor Documentation. ◆ RuleFitAPI() [1/2]. TMVA::RuleFitAPI::RuleFitAPI ; (; const TMVA::MethodRuleFit * ; rfbase, . TMVA::RuleFit * ; rulefit, . EMsgType ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html:4154,variab,variable,4154,doc/master/classTMVA_1_1RuleFitAPI.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html,3,['variab'],['variable']
Modifiability,"t fCompress;  True when fBuffer must be compressed. ;  ; Float_t fGreen;  Per cent of green. ;  ; Float_t fLineScale;  Line width scale factor. ;  ; Int_t fNbObj {0};  Number of objects. ;  ; Int_t fNbPage;  Number of pages. ;  ; Int_t * fObjPos {nullptr};  Objects position. ;  ; Int_t fObjPosSize {0};  Real size of fObjPos. ;  ; Int_t fPageFormat;  Page format (A4, Letter etc ...) ;  ; Bool_t fPageNotEmpty;  True if the current page is not empty. ;  ; Int_t fPageOrientation;  Page orientation (Portrait, Landscape) ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Float_t fRed;  Per cent of red. ;  ; Int_t fStartStream;  ; Int_t fType;  Workstation type used to know if the PDF is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  ; static Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPDF.html:24766,inherit,inherited,24766,doc/master/classTPDF.html,https://root.cern,https://root.cern/doc/master/classTPDF.html,3,['inherit'],['inherited']
Modifiability,"t fDataLength;  Length of data. ;  ; Atom_t fDataType;  Data type description. ;  . Private Member Functions;  TDNDData (const TDNDData &)=delete;  ; TDNDData & operator= (const TDNDData &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGDNDManager.h>. Inheritance diagram for TDNDData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDNDData() [1/2]. TDNDData::TDNDData ; (; const TDNDData & ; ). privatedelete . ◆ TDNDData() [2/2]. TDNDData::TDNDData ; (; Atom_t ; dt = kNone, . void * ; d = nullptr, . Int_t ; len = 0, . Atom_t ; act = kNone . ). inline . Definition at line 70 of file TGDNDManager.h. ◆ ~TDNDData(). TDNDData::~TDNDData ; (; ). inlineoverride . Definition at line 72 of file TGDNDManager.h. Member Function Documentation. ◆ Class(). static TClass * TDNDData::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDNDData::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDNDData.html:9953,inherit,inherited,9953,doc/master/classTDNDData.html,https://root.cern,https://root.cern/doc/master/classTDNDData.html,2,['inherit'],['inherited']
Modifiability,"t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBEntry.html:23677,inherit,inherited,23677,doc/master/classTGLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGLBEntry.html,1,['inherit'],['inherited']
Modifiability,"t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGIconLBEntry (const TGIconLBEntry &)=delete;  ; TGIconLBEntry operator= (const TGIconLBEntry &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIconLBEntry.html:26573,inherit,inherited,26573,doc/master/classTGIconLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGIconLBEntry.html,1,['inherit'],['inherited']
Modifiability,"t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGLineLBEntry (const TGLineLBEntry &)=delete;  ; TGLineLBEntry operator= (const TGLineLBEntry &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLineLBEntry.html:26840,inherit,inherited,26840,doc/master/classTGLineLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGLineLBEntry.html,1,['inherit'],['inherited']
Modifiability,"t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextLBEntry.html:25252,inherit,inherited,25252,doc/master/classTGTextLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGTextLBEntry.html,2,['inherit'],['inherited']
Modifiability,"t fError;  Error from parametrization. ;  ; TVirtualFitter * fFitter;  ; Int_t * fFunctionCodes;  [fMaxFunctions] acceptance code ;  ; TMatrixD fFunctions;  Functions evaluated over sample. ;  ; Byte_t fHistogramMask;  Bit pattern of histograms used. ;  ; TList * fHistograms;  List of histograms. ;  ; Bool_t fIsUserFunction;  Flag for user defined function. ;  ; Bool_t fIsVerbose;  ; Double_t fMaxAngle;  Max angle for accepting new function. ;  ; Int_t fMaxFuncNV;  fMaxFunctions*fNVariables ;  ; Int_t fMaxFunctions;  max number of functions ;  ; Int_t * fMaxPowers;  [fNVariables] maximum powers ;  ; Int_t * fMaxPowersFinal;  [fNVariables] maximum powers from fit; ;  ; Double_t fMaxQuantity;  Max value of dependent quantity. ;  ; Double_t fMaxResidual;  Max residual value. ;  ; Int_t fMaxResidualRow;  Row giving max residual. ;  ; Int_t fMaxStudy;  max functions to study ;  ; Int_t fMaxTerms;  Max terms expected in final expr. ;  ; TVectorD fMaxVariables;  max value of independent variables ;  ; Double_t fMeanQuantity;  Mean of dependent quantity. ;  ; TVectorD fMeanVariables;  mean value of independent variables ;  ; Double_t fMinAngle;  Min angle for accepting new function. ;  ; Double_t fMinQuantity;  Min value of dependent quantity. ;  ; Double_t fMinRelativeError;  Min relative error accepted. ;  ; Double_t fMinResidual;  Min residual value. ;  ; Int_t fMinResidualRow;  Row giving min residual. ;  ; TVectorD fMinVariables;  min value of independent variables ;  ; Int_t fNCoefficients;  Dimension of model coefficients. ;  ; Int_t fNVariables;  Number of independent variables. ;  ; TVectorD fOrthCoefficients;  The model coefficients. ;  ; TMatrixD fOrthCurvatureMatrix;  Model matrix. ;  ; TVectorD fOrthFunctionNorms;  Norm of the evaluated functions. ;  ; TMatrixD fOrthFunctions;  As above, but orthogonalised. ;  ; Int_t fParameterisationCode;  Exit code of parameterisation. ;  ; EMDFPolyType fPolyType;  Fit object (MINUIT) ;  ; Int_t * fPowerIndex;  [fMaxTerms] In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:36159,variab,variables,36159,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variables']
Modifiability,"t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  . Private Member Functions;  TEveScalableStraightLineSet (const TEveScalableStraightLineSet &);  ; TEveScalableStraightLineSet & operator= (const TEveScalableStraightLineSet &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TEveProjectable; typedef std::list< TEve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveScalableStraightLineSet.html:39861,inherit,inherited,39861,doc/master/classTEveScalableStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classTEveScalableStraightLineSet.html,1,['inherit'],['inherited']
Modifiability,"t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  . Private Member Functions;  TEveStraightLineSet (const TEveStraightLineSet &);  ; TEveStraightLineSet & operator= (const TEveStraightLineSet &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSet.html:38920,inherit,inherited,38920,doc/master/classTEveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSet.html,1,['inherit'],['inherited']
Modifiability,"t fSeekStart;  Seek value of first block in cache. ;  . Private Member Functions;  TFileCacheWrite (const TFileCacheWrite &)=delete;  ; TFileCacheWrite & operator= (const TFileCacheWrite &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFileCacheWrite.h>. Inheritance diagram for TFileCacheWrite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileCacheWrite() [1/3]. TFileCacheWrite::TFileCacheWrite ; (; const TFileCacheWrite & ; ). privatedelete . ◆ TFileCacheWrite() [2/3]. TFileCacheWrite::TFileCacheWrite ; (; ). Default Constructor. ; Definition at line 37 of file TFileCacheWrite.cxx. ◆ TFileCacheWrite() [3/3]. TFileCacheWrite::TFileCacheWrite ; (; TFile * ; file, . Int_t ; buffersize . ). Creates a TFileCacheWrite data structure. ; The write cache will be connected to file. The size of the cache will be buffersize, if buffersize < 10000 a default size of 512 Kbytes is used ; Definition at line 53 of file TFileCacheWrite.cxx. ◆ ~TFileCacheWrite(). TFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileCacheWrite.html:11184,inherit,inherited,11184,doc/master/classTFileCacheWrite.html,https://root.cern,https://root.cern/doc/master/classTFileCacheWrite.html,2,['inherit'],['inherited']
Modifiability,"t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGFSFrameElement;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileContainer.html:39097,inherit,inherited,39097,doc/master/classTGFileContainer.html,https://root.cern,https://root.cern/doc/master/classTGFileContainer.html,1,['inherit'],['inherited']
Modifiability,"t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCanvas.html:25803,inherit,inherited,25803,doc/master/classTGCanvas.html,https://root.cern,https://root.cern/doc/master/classTGCanvas.html,3,['inherit'],['inherited']
Modifiability,"t fgStatOverflows = kFALSE;  ! Flag to use under/overflows in statistics ;  . Private Member Functions; Double_t * GetB ();  ; Double_t * GetB2 ();  ; Double_t * GetW ();  ; Double_t * GetW2 ();  ; void SetBins (Int_t, const Double_t *) override;  Redefine x axis parameters with variable bin sizes. ;  ; void SetBins (Int_t, const Double_t *, Int_t, const Double_t *, Int_t, const Double_t *) override;  Redefine x, y and z axis parameters with variable bin sizes. ;  ; void SetBins (Int_t, Double_t, Double_t) override;  Redefine x axis parameters. ;  ; void SetBins (Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) override;  Redefine x, y and z axis parameters. ;  . Friends; class TH1Merger;  ; class TProfileHelper;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:64260,extend,extended,64260,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['extend'],['extended']
Modifiability,"t” - drawing option for produced histogram - “graph” - draw into TGraph object; Example - opt=event.fTracks[].fTriggerBits;entries:1000;first:200;maxrange:25; 1.6 Geometry viewer; JSROOT implements display of TGeo objects like:. file=rootgeom.root&item=simple1; file=building.root&item=geom&opt=z. Following classes are supported by geometry viewer: - TGeoVolume - TGeoNode - TGeoManager (master volume will be displayed) - TEveGeoShapeExtract (used in EVE); Following draw options could be specified (separated by semicolon or ‘;’): - axis - draw axis coordinates - z - set z axis direction up (normally y axis is up and x looks in user direction) - clipx/clipy/clipz - enable correspondent clipping panel - clip or clipxyz - enable all three clipping panels - ssao - enable Smooth Lighting Shader (or Screen Space Ambient Occlusion) - wire - instead of filled surfaces only wireframe will be drawn - vislvlN - maximal hierarchy depth of visible nodes (like vislvl6) - moreN - show N times more volumes as usual (normally ~10000 nodes and ~200000 elementary faces are shown) - all - try to display all geometry volumes (may lead to browser hanging) - maxnodesN - configure maximal number of rendered nodes (like maxnodes100K) - maxfacesN - configure maximal number of rendered faces (like maxfaces3M) - highlight - force highlighting of selected volume, normally activated for moderate-size geometries - nohighlight - disable volumes highlighting (can be activated via context menu) - hscene - enable highlight of extra objects like tracks or hits - hsceneonly - enable only highlight of extra objects like tracks or hits - nohscene - disable highlight of extra objects like tracks or hits - macro:name.C - invoke ROOT configuration macro - dflt - set default volumes colors as TGeoManager::DefaultColors() does - transpXY - set global transparency value (XY is number between 1 and 99) - zoomFACTOR - set initial zoom factor (FACTOR is integer value from 1 to 10000, default is 100) - rotyANGLE - se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:12007,config,configure,12007,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,4,['config'],['configure']
Modifiability,"uadSetGL&); TEveQuadSetGL&operator=(const TEveQuadSetGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; set<Int_t>*TEveDigitSetGL::fHighlightSet; TEveQuadSet*fM; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveQuadSetGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void DirectDraw(TGLRnrCtx& rnrCtx) const; Draw quad-set with GL. void RenderQuads(TGLRnrCtx& rnrCtx) const; GL rendering for free-quads and rectangles. void RenderLines(TGLRnrCtx& rnrCtx) const; GL rendering for line-types. void RenderHexagons(TGLRnrCtx& rnrCtx) const; GL rendering for hexagons. TEveQuadSetGL(const TEveQuadSetGL& ). TEveQuadSetGL& operator=(const TEveQuadSetGL& ). virtual ~TEveQuadSetGL(); {}. Bool_t IgnoreSizeForOfInterest() const; { return kTRUE; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveQuadSetGL.html:4392,Inherit,Inheritance,4392,root/html534/TEveQuadSetGL.html,https://root.cern,https://root.cern/root/html534/TEveQuadSetGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uage (GDML) files. There is also a C++ implementation for the import of GDML into ROOT. They act as a converter between the GDML geometry files and the TGeo geometry structures (and vice versa). GDML->ROOT; As this binding is integrated into the ROOT installation, you need to enable the use of the binding at the configure point of the ROOT installation. This can be done like so:; ./configure --enable-gdml; On doing this the libraries will be built by issuing the standard ROOT make command. The GDML to TGeo converter uses the TXMLEngine to parse the GDML files. This XML parser is a DOM parser and returns the DOM tree to the class TGDMLParse. This class then interprets the GDML file and adds the bindings in their TGeo equivalent.; The GDML schema is fully supported with a few exceptions:. Replica Volumes are not supported; Loops are not supported; Matrices are not supported. These will hopefully be added in the near future.; Once you have enabled GDML in the configure process for ROOT, to import a GDML file, this can be done using TGeoManager::Import. This automatically calls the right method to parse the GDML by detecting the .gdml file extension. Here is how to do it:; TGeoManager::Import(""test.gdml"");; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; Replace test.gdml with the gdml filename you want to import. Once the GDML file has been successfully imported, you can view the geometry by calling:; gGeoManager->GetTopVolume()->Draw(""ogl"");; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManager::GetTopVolumeTGeoVolume * GetTopVolume() constDefinition TGeoManager.h:512; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; For any questions or comments about the GDML->ROOT binding please contact ben.l.nosp@m.loyd.nosp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry__gdml.html:1269,config,configure,1269,doc/master/group__Geometry__gdml.html,https://root.cern,https://root.cern/doc/master/group__Geometry__gdml.html,1,['config'],['configure']
Modifiability,"ual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetErrorTolerance(Double_t t); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidSetForceSum(Bool_t flag); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidSetMaxIters(Int_t mi); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNonCentralChiSquare.html:28595,config,config,28595,root/html528/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html528/RooNonCentralChiSquare.html,1,['config'],['config']
Modifiability,"ual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; Bool_tIsAutoSave() const; Bool_tIsBusy() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSessionViewer.html:10671,Inherit,InheritsFrom,10671,root/html532/TSessionViewer.html,https://root.cern,https://root.cern/root/html532/TSessionViewer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; Bool_tHasWindow(Window_t w) const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidLowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidMapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidMapWindow(); voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDragWindow.html:8275,Inherit,InheritsFrom,8275,root/html532/TGDragWindow.html,https://root.cern,https://root.cern/root/html532/TGDragWindow.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; Bool_tHasWindow(Window_t w) const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidLowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidMapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidMapWindow(); voidTObject::MayNotUse(const char* method) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGDragWindow.html:8152,Inherit,InheritsFrom,8152,root/html602/TGDragWindow.html,https://root.cern,https://root.cern/root/html602/TGDragWindow.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCheckButton::HandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; virtual Bool_tTGCheckButton::IsDisabledAndSelected() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCheckButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGCheckButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGCheckButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGTextButton::Layout(); stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColorSelect.html:10063,Inherit,InheritsFrom,10063,root/html532/TGColorSelect.html,https://root.cern,https://root.cern/root/html532/TGColorSelect.html,8,['Inherit'],['InheritsFrom']
Modifiability,"ual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCheckButton::HandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; virtual Bool_tTGCheckButton::IsDisabledAndSelected() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCheckButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGCheckButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGCheckButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGTextButton::Layout(); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGColorSelect.html:10051,Inherit,InheritsFrom,10051,root/html602/TGColorSelect.html,https://root.cern,https://root.cern/root/html602/TGColorSelect.html,8,['Inherit'],['InheritsFrom']
Modifiability,"ual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFileBrowser.html:11155,Inherit,InheritsFrom,11155,root/html532/TGFileBrowser.html,https://root.cern,https://root.cern/root/html532/TGFileBrowser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); virtual voidTGWindow:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFileBrowser.html:11073,Inherit,InheritsFrom,11073,root/html602/TGFileBrowser.html,https://root.cern,https://root.cern/root/html602/TGFileBrowser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeViewer.html:34492,inherit,inherited,34492,doc/master/classTTreeViewer.html,https://root.cern,https://root.cern/doc/master/classTTreeViewer.html,3,['inherit'],['inherited']
Modifiability,"ual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; Double_tTGraph::GetMaximum() const; Int_tTGraph::GetMaxSize() const; virtual Double_tTGraph::GetMean(Int_t axis = 1) const; Double_tTGraph::GetMinimum() const; Int_tTGraph::GetN() const; virtual const char*TNamed::GetName() const; Double_tgetNominalBinWidth() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; const char*RooPlotable::getYAxisLabel() const; Double_tRooPlotable::getYAxisMax() const; Double_tRooPlotable::getYAxisMin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasIdenticalBinning(const RooHist& other) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tisIdentical(const RooHist& other, Double_t tol = 9.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHist.html:7849,Inherit,InheritsFrom,7849,root/html602/RooHist.html,https://root.cern,https://root.cern/root/html602/RooHist.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ual Double_t * SetCache (Int_t npoints, Int_t psize);  Initialize the cache array npoints is the number of points to be stored (or already stored) in the cache psize is the number of elements per point. ;  ; virtual void SetFCN (void(*fcn)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t));  To set the address of the minimization objective function called by the native compiler (see function below when called by CINT) ;  ; virtual void SetFitOption (Foption_t option);  ; virtual void SetObjectFit (TObject *obj);  ; virtual void SetUserFunc (TObject *userfunc);  ; virtual void SetXfirst (Int_t first);  ; virtual void SetXlast (Int_t last);  ; virtual void SetYfirst (Int_t first);  ; virtual void SetYlast (Int_t last);  ; virtual void SetZfirst (Int_t first);  ; virtual void SetZlast (Int_t last);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumili.html:9821,inherit,inherited,9821,doc/master/classTFumili.html,https://root.cern,https://root.cern/doc/master/classTFumili.html,2,['inherit'],['inherited']
Modifiability,"ual Double_t TH1::GetNormFactor ; (; ); const. inlinevirtual . Definition at line 301 of file TH1.h. ◆ GetObjectInfo(). char * TH1::GetObjectInfo ; (; Int_t ; px, . Int_t ; py . ); const. overridevirtual . Redefines TObject::GetObjectInfo. ; Displays the histogram info (bin number, contents, integral up to bin corresponding to cursor position px,py ; Reimplemented from TObject.; Definition at line 4502 of file TH1.cxx. ◆ GetOption(). Option_t * TH1::GetOption ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 303 of file TH1.h. ◆ GetPainter(). TVirtualHistPainter * TH1::GetPainter ; (; Option_t * ; option = """"). Return pointer to painter. ; If painter does not exist, it is created ; Definition at line 4511 of file TH1.cxx. ◆ GetQuantiles(). Int_t TH1::GetQuantiles ; (; Int_t ; n, . Double_t * ; xp, . const Double_t * ; p = nullptr . ). virtual . Compute Quantiles for this histogram Quantile x_p := Q(p) is defined as the value x_p such that the cumulative probability distribution Function F of variable X yields: ; F(x_p) = Pr(X <= x_p) = p with 0 <= p <= 1.; x_p = Q(p) = F_inv(p); X#define X(type, name); pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; F#define F(x, y, z); For instance the median x_0.5 of a distribution is defined as that value of the random variable X for which the distribution function equals 0.5:; F(x_0.5) = Probability(X < x_0.5) = 0.5; x_0.5 = Q(0.5); AuthorEddy Offermann code from Eddy Offermann, Renaissance; Parameters. [in]nmaximum size of array xp and size of array p (if given) ; [out]xparray to be filled with nq quantiles evaluated at (p). Memory has to be preallocated by caller. If p is null (default value), then xp is actually set to the (first n) histogram bin edges ; [in]parray of cumulative probabilities where quantiles should be evaluated.; if p is null, the CDF of the histogram will be used instead as array, and will have a size = number of bins + 1 in h. It will",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:167476,variab,variable,167476,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variable']
Modifiability,"ual Double_tTRandom::Exp(Double_t tau); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Double_tTRandom::Gaus(Double_t mean = 0, Double_t sigma = 1); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual UInt_tTRandom::GetSeed() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual UInt_tTRandom::Integer(UInt_t imax); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tTRandom::Landau(Double_t mean = 0, Double_t sigma = 1); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRandom2.html:3199,Inherit,InheritsFrom,3199,root/html532/TRandom2.html,https://root.cern,https://root.cern/root/html532/TRandom2.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Double_tTRandom::Exp(Double_t tau); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Double_tTRandom::Gaus(Double_t mean = 0, Double_t sigma = 1); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual UInt_tTRandom::GetSeed() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual UInt_tTRandom::Integer(UInt_t imax); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tTRandom::Landau(Double_t mean = 0, Double_t sigma = 1); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRandom2.html:3169,Inherit,InheritsFrom,3169,root/html602/TRandom2.html,https://root.cern,https://root.cern/root/html602/TRandom2.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; char*GetValueString() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafC.html:3258,Inherit,InheritsFrom,3258,root/html534/TLeafC.html,https://root.cern,https://root.cern/root/html534/TLeafC.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; char*GetValueString() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafC.html:3164,Inherit,InheritsFrom,3164,root/html602/TLeafC.html,https://root.cern,https://root.cern/root/html602/TLeafC.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStringfActaction, after action execution new frame is created; TGLayoutHints*fHintslayout hints for frame created by action; const char*fPicpicture name; const TGPicture*fPicturepicture; Int_tfTypetype of action. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGuiBldAction(const char* name = 0, const char* title = 0, Int_t type = kGuiBldCtor, TGLayoutHints* hints = 0); constructor. ~TGuiBldAction(); destructor. TGuiBldAction(const char* name = 0, const char* title = 0, Int_t type = kGuiBldCtor, TGLayoutHints* hints = 0). » Author: Valeriy Onuchin 12/08/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGuiBuilder.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGuiBldAction.html:8066,Inherit,Inheritance,8066,root/html532/TGuiBldAction.html,https://root.cern,https://root.cern/root/html532/TGuiBldAction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TBrowser(const TBrowser&); TBrowser&operator=(const TBrowser&). Data Members; public:. enum { kNoHidden; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TContextMenu*fContextMenu!Context menu pointer; TBrowserImp*fImp!Window system specific browser implementation; TStringTNamed::fNameobject identifier; Bool_tfNeedRefreshTrue if the browser needs refresh; TBrowserTimer*fTimer!Browser's timer; TStringTNamed::fTitleobject title. private:. TObject*fLastSelectedObject!The last TObject selected by user. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBrowser(const char* name = ""Browser"", const char* title = ""ROOT Object Browser"", TBrowserImp* extimp = 0, Option_t* opt = """"); Create a new browser with a name, title. Width and height are by; default set to 640x400 and (optionally) adjusted by the screen factor; (depending on Rint.Canvas.UseScreenFactor to be true or false, default; is true). TBrowser(const char* name, const char* title, UInt_t width, UInt_t height, TBrowserImp* extimp = 0, Option_t* opt = """"); Create a new browser with a name, title, width and height. TBrowser(const char* name, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height, TBrowserImp* extimp = 0, Option_t* opt = """"); Create a new browser with a name, title, position, width and height. TBrowser(const char* name, TObject* obj, const char* title = ""ROOT Object Browser"", Option_t* opt = """"); Create a new browser with a name, title, width and height for TObject *obj. TBrowser(const char* name, TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBrowser.html:8158,Inherit,Inheritance,8158,root/html532/TBrowser.html,https://root.cern,https://root.cern/root/html532/TBrowser.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGeoMCGeometry(const TGeoMCGeometry&); Double_t*CreateDoubleArray(Float_t* array, Int_t size) const; TGeoManager*GetTGeoManager() const; TGeoMCGeometry&operator=(const TGeoMCGeometry&); voidVname(const char* name, char* vname) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfG3CompatibleVolumeNamesoption to convert volumes names to; static TGeoMCGeometry*fgInstancesingleton instance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMCGeometry(const char* name, const char* title, Bool_t g3CompatibleVolumeNames = false). Standard constructor. TGeoMCGeometry(). Default constructor. ~TGeoMCGeometry(). Destructor. TGeoManager* GetTGeoManager() const; Return TGeoManager global pointer.; Create a new TGeoManager object if it does not yet exist. Double_t* CreateDoubleArray(Float_t* array, Int_t size) const; Converts Float_t* array to Double_t*,; !! The new array has to be deleted by user. void Vname(const char* name, char* vname) const. convert name to upper case. Make vname at least 4 chars. void Material(Int_t& kmat, const char* name, Double_t a, Double_t z, Double_t dens, Double_t radl, Double_t absl, Float_t* buf, Int_t nwbuf). Defines a Material. kmat number assigned to the material; name material name; a atomic mass in au; z atomic number; dens density in g/cm3; absl absorbtion length in cm; if >=0 it is ignored and the program; calculates it, if <0. -absl is t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMCGeometry.html:9193,Inherit,Inheritance,9193,root/html532/TGeoMCGeometry.html,https://root.cern,https://root.cern/root/html532/TGeoMCGeometry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_t*fColorAlpha[fNumPoints] alpha at each anchor point; UShort_t*fColorBlue[fNumPoints] blue color at each anchor point; UShort_t*fColorGreen[fNumPoints] green color at each anchor point; UShort_t*fColorRed[fNumPoints] red color at each anchor point; UInt_tfNumPointsnumber of anchor points; Double_t*fPoints[fNumPoints] value of each anchor point [0..1]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TImagePalette(); Default constructor, sets all pointers to 0. TImagePalette(UInt_t numPoints); Constructor for a palette with numPoints anchor points.; It allocates the memory but does not set any colors. TImagePalette(const TImagePalette& palette); Copy constructor. TImagePalette(Int_t ncolors, Int_t* colors); Creates palette in the same way as TStyle::SetPalette. ~TImagePalette(); Destructor. TImagePalette & operator=(const TImagePalette& palette); Assignment operator. Int_t FindColor(UShort_t r, UShort_t g, UShort_t b); returns an index of the closest color. Int_t * GetRootColors(); Returns a list of ROOT colors. Could be used to set histogram palette.; See also http://root.cern.ch/root/htmldoc/TStyle.html#TStyle:SetPalette. » Author: Reiner Rohlfs 24/03/02 » Copyright (C) 2001-2002, Rene Brun, Fons Rademakers and Reiner Rohlfs *; » Last changed: root/graf:$Id$ » Last generated: 2015-03-14 16:42; This page has been automatically gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TImagePalette.html:8037,Inherit,Inheritance,8037,root/html534/TImagePalette.html,https://root.cern,https://root.cern/root/html534/TImagePalette.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_t*fColorAlpha[fNumPoints] alpha at each anchor point; UShort_t*fColorBlue[fNumPoints] blue color at each anchor point; UShort_t*fColorGreen[fNumPoints] green color at each anchor point; UShort_t*fColorRed[fNumPoints] red color at each anchor point; UInt_tfNumPointsnumber of anchor points; Double_t*fPoints[fNumPoints] value of each anchor point [0..1]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TImagePalette(); Default constructor, sets all pointers to 0. TImagePalette(UInt_t numPoints); Constructor for a palette with numPoints anchor points.; It allocates the memory but does not set any colors. TImagePalette(const TImagePalette& palette); Copy constructor. TImagePalette(Int_t ncolors, Int_t* colors); Creates palette in the same way as TStyle::SetPalette. ~TImagePalette(); Destructor. TImagePalette & operator=(const TImagePalette& palette); Assignment operator. Int_t FindColor(UShort_t r, UShort_t g, UShort_t b); returns an index of the closest color. Int_t * GetRootColors(); Returns a list of ROOT colors. Could be used to set histogram palette.; See also http://root.cern.ch/root/htmldoc/TStyle.html#TStyle:SetPalette. » Author: Reiner Rohlfs 24/03/02 » Copyright (C) 2001-2002, Rene Brun, Fons Rademakers and Reiner Rohlfs *; » Last changed: root/graf:$Id: TAttImage.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TImagePalette.html:8018,Inherit,Inheritance,8018,root/html532/TImagePalette.html,https://root.cern,https://root.cern/root/html532/TImagePalette.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TRecEvent::ERecEventTypekCmdEvent; static TRecEvent::ERecEventTypekExtraEvent; static TRecEvent::ERecEventTypekGuiEvent; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TTimefEventTimeTime of original event execution. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReplayEvent(Bool_t showMouseCursor = kTRUE); Replays (executes) the stored event again. ERecEventType GetType() const; Returns what kind of event it stores. TTime GetTime() const; Returns time of original execution of stored event. void SetTime(TTime t); Sets time of event execution. TRecorder & operator=(const TRecorder&). » Author: Katerina Opocenska 11/09/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRecEvent.html:8437,Inherit,Inheritance,8437,root/html604/TRecEvent.html,https://root.cern,https://root.cern/root/html604/TRecEvent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofPlayer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualProofPlayer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TVirtualProofPlayer * Create (const char *player, TProof *p, TSocket *s=0);  Create a PROOF player. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerLocal.html:17576,inherit,inherited,17576,doc/master/classTProofPlayerLocal.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerLocal.html,3,['inherit'],['inherited']
Modifiability,"ual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fLockId;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLockPath.h>. Inheritance diagram for TLockPath:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera inst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLockPath.html:9201,inherit,inherited,9201,doc/master/classTLockPath.html,https://root.cern,https://root.cern/doc/master/classTLockPath.html,1,['inherit'],['inherited']
Modifiability,"ual Long64_tTSelectorDraw::GetSelectedRows() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; TTree*TSelectorDraw::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*TSelectorDraw::GetV1() const; virtual Double_t*TSelectorDraw::GetV2() const; virtual Double_t*TSelectorDraw::GetV3() const; virtual Double_t*TSelectorDraw::GetV4() const; virtual Double_t*TSelectorDraw::GetVal(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar1() const; TTreeFormula*TSelectorDraw::GetVar2() const; TTreeFormula*TSelectorDraw::GetVar3() const; TTreeFormula*TSelectorDraw::GetVar4() const; virtual Double_t*TSelectorDraw::GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSelector::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTSelectorDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveSelectorToEventList.html:3888,Inherit,InheritsFrom,3888,root/html532/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html532/TEveSelectorToEventList.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Long64_tTSelectorDraw::GetSelectedRows() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; TTree*TSelectorDraw::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*TSelectorDraw::GetV1() const; virtual Double_t*TSelectorDraw::GetV2() const; virtual Double_t*TSelectorDraw::GetV3() const; virtual Double_t*TSelectorDraw::GetV4() const; virtual Double_t*TSelectorDraw::GetVal(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar1() const; TTreeFormula*TSelectorDraw::GetVar2() const; TTreeFormula*TSelectorDraw::GetVar3() const; TTreeFormula*TSelectorDraw::GetVar4() const; virtual Double_t*TSelectorDraw::GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSelector::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTSelectorDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveSelectorToEventList.html:3883,Inherit,InheritsFrom,3883,root/html602/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html602/TEveSelectorToEventList.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Long_tTApplication::ProcessRemote(const char* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. private:. Bool_tfCustomizedflag for customized canvas implimentation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQApplication(); Used by Dictionary(). TQApplication(const char* appClassName, int* argc, char** argv, void* options = 0, int numOptions = 0); Create the root application and load the graphic libraries. ~TQApplication(); Delete ROOT application environment. void LoadGraphicsLibs(); Here we overload the LoadGraphicsLibs() function.; This function now just instantiates a QRootGuiFactory; object and redirect the global pointer gGuiFactory to point; to it. void SetCustomized(); Set the custom flag. » Author: Denis Bertini, M. Al-Turany 01/11/2000 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/qtgsi:$Id$ » Last generated: 2015-03-14 16:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQApplication.html:12389,Inherit,Inheritance,12389,root/html534/TQApplication.html,https://root.cern,https://root.cern/root/html534/TQApplication.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*GetFile() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Long64_tGetNoCacheBytesRead() const; virtual Int_tGetNoCacheReadCalls() const; Int_tGetNseek() const; Int_tGetNtot() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetPrefetchedBlocks() const; virtual TFilePrefetch*GetPrefetchObj(); virtual Int_tGetReadCalls() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetUnzipBuffer(char**, Long64_t, Int_t, Bool_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAsyncReading() const; virtual Bool_tIsEnablePrefetching() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLearning() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileCacheRead.html:3629,Inherit,InheritsFrom,3629,root/html534/TFileCacheRead.html,https://root.cern,https://root.cern/root/html534/TFileCacheRead.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*GetFile() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Long64_tGetNoCacheBytesRead() const; virtual Int_tGetNoCacheReadCalls() const; Int_tGetNseek() const; Int_tGetNtot() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetPrefetchedBlocks() const; virtual TFilePrefetch*GetPrefetchObj(); virtual Int_tGetReadCalls() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetUnzipBuffer(char**, Long64_t, Int_t, Bool_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAsyncReading() const; virtual Bool_tIsEnablePrefetching() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLearning() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileCacheRead.html:3545,Inherit,InheritsFrom,3545,root/html602/TFileCacheRead.html,https://root.cern,https://root.cern/root/html602/TFileCacheRead.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayC;  TArrayC ();  Default TArrayC ctor. ;  ;  TArrayC (const TArrayC &array);  Copy constructor. ;  ;  TArrayC (Int_t n);  Create TArrayC object and set array size to n chars. ;  ;  TArrayC (Int_t n, const Char_t *array);  Create TArrayC object and initialize it with values of array. ;  ; virtual ~TArrayC ();  Delete TArrayC object. ;  ; void AddAt (Char_t c, Int_t i);  Add char c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Char_t *array);  Adopt array arr into TArrayC, i.e. ;  ; Char_t At (Int_t i) const;  ; void Copy (TArrayC &array) const;  ; Char_t * GetArray ();  ; const Char_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayC & operator= (const TArrayC &rhs);  TArrayC assignment operator. ;  ; Char_t & operator[] (Int_t i);  ; Char_t operator[] (Int_t i) const;  ; void Reset (Char_t val=0);  ; void Set (Int_t n) override;  Set size of this array to n chars. ;  ; void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1C.html:36467,inherit,inherited,36467,doc/master/classTH1C.html,https://root.cern,https://root.cern/doc/master/classTH1C.html,2,['inherit'],['inherited']
Modifiability,"ual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayD;  TArrayD ();  Default TArrayD ctor. ;  ;  TArrayD (const TArrayD &array);  Copy constructor. ;  ;  TArrayD (Int_t n);  Create TArrayD object and set array size to n doubles. ;  ;  TArrayD (Int_t n, const Double_t *array);  Create TArrayD object and initialize it with values of array. ;  ; virtual ~TArrayD ();  Delete TArrayD object. ;  ; void AddAt (Double_t c, Int_t i);  Set the double c value at position i in the array. ;  ; void Adopt (Int_t n, Double_t *array);  Adopt array arr into TArrayD, i.e. ;  ; Double_t At (Int_t i) const;  ; void Copy (TArrayD &array) const;  ; Double_t * GetArray ();  ; const Double_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayD & operator= (const TArrayD &rhs);  TArrayD assignment operator. ;  ; Double_t & operator[] (Int_t i);  ; Double_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Double_t val);  ; void Set (Int_t n) override;  Set size o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1D.html:36594,inherit,inherited,36594,doc/master/classTH1D.html,https://root.cern,https://root.cern/doc/master/classTH1D.html,4,['inherit'],['inherited']
Modifiability,"ual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayF;  TArrayF ();  Default TArrayF ctor. ;  ;  TArrayF (const TArrayF &array);  Copy constructor. ;  ;  TArrayF (Int_t n);  Create TArrayF object and set array size to n floats. ;  ;  TArrayF (Int_t n, const Float_t *array);  Create TArrayF object and initialize it with values of array. ;  ; virtual ~TArrayF ();  Delete TArrayF object. ;  ; void AddAt (Float_t c, Int_t i);  Add float c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Float_t *array);  Adopt array arr into TArrayF, i.e. ;  ; Float_t At (Int_t i) const;  ; void Copy (TArrayF &array) const;  ; Float_t * GetArray ();  ; const Float_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayF & operator= (const TArrayF &rhs);  TArrayF assignment operator. ;  ; Float_t & operator[] (Int_t i);  ; Float_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Float_t val);  ; void Set (Int_t n) override;  Set size of this ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1F.html:36539,inherit,inherited,36539,doc/master/classTH1F.html,https://root.cern,https://root.cern/doc/master/classTH1F.html,3,['inherit'],['inherited']
Modifiability,"ual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayI;  TArrayI ();  Default TArrayI ctor. ;  ;  TArrayI (const TArrayI &array);  Copy constructor. ;  ;  TArrayI (Int_t n);  Create TArrayI object and set array size to n integers. ;  ;  TArrayI (Int_t n, const Int_t *array);  Create TArrayI object and initialize it with values of array. ;  ; virtual ~TArrayI ();  Delete TArrayI object. ;  ; void AddAt (Int_t c, Int_t i);  Add Int_t c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Int_t *array);  Adopt array arr into TArrayI, i.e. ;  ; Int_t At (Int_t i) const;  ; void Copy (TArrayI &array) const;  ; Int_t * GetArray ();  ; const Int_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayI & operator= (const TArrayI &rhs);  TArrayI assignment operator. ;  ; Int_t & operator[] (Int_t i);  ; Int_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Int_t val);  ; void Set (Int_t n) override;  Set size of this array to n ints. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1I.html:36407,inherit,inherited,36407,doc/master/classTH1I.html,https://root.cern,https://root.cern/doc/master/classTH1I.html,2,['inherit'],['inherited']
Modifiability,"ual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayS;  TArrayS ();  Default TArrayS ctor. ;  ;  TArrayS (const TArrayS &array);  Copy constructor. ;  ;  TArrayS (Int_t n);  Create TArrayS object and set array size to n shorts. ;  ;  TArrayS (Int_t n, const Short_t *array);  Create TArrayS object and initialize it with values of array. ;  ; virtual ~TArrayS ();  Delete TArrayS object. ;  ; void AddAt (Short_t c, Int_t i);  Add short c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Short_t *array);  Adopt array arr into TArrayS, i.e. ;  ; Short_t At (Int_t i) const;  ; void Copy (TArrayS &array) const;  ; Short_t * GetArray ();  ; const Short_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayS & operator= (const TArrayS &rhs);  TArrayS assignment operator. ;  ; Short_t & operator[] (Int_t i);  ; Short_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Short_t val);  ; void Set (Int_t n) override;  Set size of this ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1S.html:36402,inherit,inherited,36402,doc/master/classTH1S.html,https://root.cern,https://root.cern/doc/master/classTH1S.html,2,['inherit'],['inherited']
Modifiability,"ual TClass*IsA() const; const float&operator()(Int_t i) const; float&operator()(Int_t i); voidoperator*=(float val); voidoperator*=(const TMatrixTColumn_const<float>& c); voidoperator+=(float val); voidoperator+=(const TMatrixTColumn_const<float>& c); voidoperator=(float val); voidoperator=(const TMatrixTColumn_const<float>& c); TMatrixTColumn<float>&operator=(const TMatrixTColumn<float>& c); voidoperator=(const TVectorT<float>& vec); const float&operator[](Int_t i) const; float&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Int_tTMatrixTColumn_const<float>::fColIndeffective column index; Int_tTMatrixTColumn_const<float>::fIncif ptr = @a[i,col], then ptr+inc = @a[i+1,col]; TMatrixTBase<float>*TMatrixTColumn_const<float>::fMatrixthe matrix I am a column of; const float*TMatrixTColumn_const<float>::fPtrpointer to the a[0,col] column. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTColumn_float_.html:2355,Inherit,Inheritance,2355,root/html532/TMatrixTColumn_float_.html,https://root.cern,https://root.cern/root/html532/TMatrixTColumn_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual TEfficiency::Draw method.; 633At the moment drawing is only supported for 1- and 2-dimensional TEfficiency objects.; 634In the 1-dimensional case, you can use the same options as for the TGraphAsymmErrors::Draw; 635method. For 2-dimensional TEfficiency objects, you can pass the same options as; 636for a TH2::Draw object.; 637 ; 638\anchor EFF064; 639### VI.4 TEfficiency object's axis customisation; 640The axes of a TEfficiency object can be accessed and customised by calling the; 641GetPaintedGraph method and then GetXaxis() or GetYaxis() and the corresponding TAxis; 642methods.; 643Note that in order to access the painted graph via GetPaintedGraph(), one should either; 644call Paint or, better, gPad->Update().; 645 ; 646Begin_Macro(source); 647{; 648 //canvas only needed for this documentation; 649 TCanvas* c1 = new TCanvas(""example"","""",600,400);; 650 c1->SetFillStyle(1001);; 651 c1->SetFillColor(kWhite);; 652 c1->Divide(2,1);; 653 ; 654 //create one-dimensional TEfficiency object with fixed bin size; 655 TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; 656 TRandom3 rand3;; 657 ; 658 bool bPassed;; 659 double x;; 660 for(int i=0; i<10000; ++i); 661 {; 662 //simulate events with variable under investigation; 663 x = rand3.Uniform(10);; 664 //check selection: bPassed = DoesEventPassSelection(x); 665 bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; 666 pEff->Fill(bPassed,x);; 667 }; 668 c1->cd(1);; 669 pEff->Draw(""AP"");; 670 c1->cd(2);; 671 pEff->Draw(""AP"");; 672 gPad->Update();; 673 pEff->GetPaintedGraph()->GetXaxis()->SetTitleSize(0.05);; 674 pEff->GetPaintedGraph()->GetXaxis()->SetLabelFont(42);; 675 pEff->GetPaintedGraph()->GetXaxis()->SetLabelSize(0.05);; 676 pEff->GetPaintedGraph()->GetYaxis()->SetTitleOffset(0.85);; 677 pEff->GetPaintedGraph()->GetYaxis()->SetTitleSize(0.05);; 678 pEff->GetPaintedGraph()->GetYaxis()->SetLabelFont(42);; 679 pEff->GetPaintedGraph()->GetYaxis()->SetLabelSize(0.05);; 680 pEff->GetPaintedGraph()->GetXa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:29183,variab,variable,29183,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; virtual TObject * Remove (TObjLink *lnk);  Remove object link (and therefore the object it contains) from the list. ;  ; void RemoveLast () override;  Remove the last object of the list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSortedList.html:3964,inherit,inherited,3964,doc/master/classTSortedList.html,https://root.cern,https://root.cern/doc/master/classTSortedList.html,1,['inherit'],['inherited']
Modifiability,"ual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voiddumpFormula(); static voidRooAbsReal::enableEvalErrorLogging(Bool_t flag); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static Bool_tRooAbsReal::evalErrorLoggingEnabled(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(UInt_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGenericPdf.html:10840,extend,extendMode,10840,root/html526/RooGenericPdf.html,https://root.cern,https://root.cern/root/html526/RooGenericPdf.html,1,['extend'],['extendMode']
Modifiability,"ual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TCanvas*GetCanvas(); TColorGetColor(const char* typeName); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGMainFrame*GetFrame(); virtual const char*TObject::GetIconName() const; TExMapGetLevelMembersCount() const; TExMapGetLevelSize() const; Bool_tGetLinksVisibility() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; void*GetPointer() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStructViewer.html:3806,Inherit,InheritsFrom,3806,root/html532/TStructViewer.html,https://root.cern,https://root.cern/root/html532/TStructViewer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TCanvas*GetCanvas(); TColorGetColor(const char* typeName); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGMainFrame*GetFrame(); virtual const char*TObject::GetIconName() const; TExMapGetLevelMembersCount() const; TExMapGetLevelSize() const; Bool_tGetLinksVisibility() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; void*GetPointer() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TStructViewer&operator=(const TStructViewer&); virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStructViewer.html:3770,Inherit,InheritsFrom,3770,root/html602/TStructViewer.html,https://root.cern,https://root.cern/root/html602/TStructViewer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t entry, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPySelector.html:3961,Inherit,InheritsFrom,3961,root/html532/TPySelector.html,https://root.cern,https://root.cern/root/html532/TPySelector.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidHideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tIsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBox.html:3102,Inherit,InheritsFrom,3102,root/html534/TBox.html,https://root.cern,https://root.cern/root/html534/TBox.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidHideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tIsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBox.html:3013,Inherit,InheritsFrom,3013,root/html602/TBox.html,https://root.cern,https://root.cern/root/html602/TBox.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tGetValToHeight() const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidInvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCaloViz.html:10199,Inherit,InheritsFrom,10199,root/html532/TEveCaloViz.html,https://root.cern,https://root.cern/root/html532/TEveCaloViz.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; virtual Float_tGetValToHeight() const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidInvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloViz.html:10438,Inherit,InheritsFrom,10438,root/html602/TEveCaloViz.html,https://root.cern,https://root.cern/root/html602/TEveCaloViz.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual bool Compare (const RItem *b, const std::string &) const;  ; const std::string & GetIcon () const;  ; const std::string & GetMTime () const;  ; const std::string & GetName () const;  ; const std::string & GetSize () const;  ; const std::string & GetTitle () const;  ; virtual bool IsFolder () const;  ; virtual bool IsHidden () const;  ; void SetChecked (bool on=true);  ; void SetExpanded (bool on=true);  ; void SetIcon (const std::string &_icon);  ; void SetMTime (const std::string &_mtime);  ; void SetName (const std::string &_name);  ; void SetSize (const std::string &_size);  ; void SetSize (Long64_t _size);  ; void SetTitle (const std::string &_title);  . Protected Attributes; std::string color;  color ;  ; int id {0};  node id ;  ; std::string material;  material ;  ; int pvis {0};  visibility of physical node ;  ; bool top {false};  indicates if node selected as top ;  ; int vis {0};  visibility of logical node ;  ;  Protected Attributes inherited from ROOT::Browsable::RItem; bool checked {false};  is checked, not yet used ;  ; bool expanded {false};  is expanded ;  ; std::string fsize;  item size ;  ; std::string icon;  icon associated with item ;  ; std::string mtime;  modification time ;  ; std::string name;  item name ;  ; int nchilds {0};  number of childs ;  ; std::string title;  item title ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeoItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeoItem() [1/2]. ROOT::RGeoItem::RGeoItem ; (; ). default . Default constructor. . ◆ RGeoItem() [2/2]. ROOT::RGeoItem::RGeoItem ; (; const std::string & ; _name, . int ; _nchilds, . int ; _nodeid, . const std::string & ; _color, . const std::string & ; _material = """", . int ; _vis = 0, . int ; _pvis = 0 . ). inline . Definition at line 107 of file RGeomData.hxx. ◆ ~RGeoItem(). ROOT::RGeoItem::~RGeoItem ; (; ). overridedefault . Member Function Documentat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoItem.html:1839,inherit,inherited,1839,doc/v632/classROOT_1_1RGeoItem.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoItem.html,2,['inherit'],['inherited']
Modifiability,"ual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tTGeoPcon::GetPhi1() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t npoints, Double_t* array) const; Double_t*TGeoPcon::GetRmax() const; Double_tTGeoPcon::GetRmax(Int_t ipl) const; Double_t*TGeoPcon::GetRmin() const; Double_tTGeoPcon::GetRmin(Int_t ipl) const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; Double_t*TGeoPcon::GetZ() const; Double_tTGeoPcon::GetZ(Int_t ipl) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoPcon::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPgon.html:5903,Inherit,InheritsFrom,5903,root/html532/TGeoPgon.html,https://root.cern,https://root.cern/root/html532/TGeoPgon.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual const char*TNamed::GetName() const; virtual Int_tGetNbytesKeys() const; virtual Int_tGetNkeys() const; voidGetObject(const char* namecycle, void*& ptr); virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*GetPath() const; virtual const char*GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDGetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char*, Option_t* = """", const char* = """", Int_t = 1, Int_t = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDirectory.html:4210,Inherit,InheritsFrom,4210,root/html532/TDirectory.html,https://root.cern,https://root.cern/root/html532/TDirectory.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual const char*TNamed::GetTitle() const; virtual Long64_tGetTotBytes() const; TBuffer*GetTransientBuffer(Int_t size); virtual TTree*GetTree() const; virtual TVirtualIndex*GetTreeIndex() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetUpdate() const; virtual TList*GetUserInfo(); virtual Double_t*GetV1(); virtual Double_t*GetV2(); virtual Double_t*GetV3(); virtual Double_t*GetV4(); virtual Double_t*GetVal(Int_t i); TTreeFormula*GetVar(Int_t i); TTreeFormula*GetVar1(); TTreeFormula*GetVar2(); TTreeFormula*GetVar3(); TTreeFormula*GetVar4(); virtual Double_t*GetW(); virtual Double_tGetWeight() const; virtual Long64_tGetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidIncrementTotalBuffers(Int_t nbytes); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadBaskets(Long64_t maxmemory = 2000000000); virtual Long64_tLoadTree(Long64_t entry); virtual Long64_tLoadTreeFriend(Long64_t entry, TTree* T); virtual voidTNamed::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname = 0, Option_t* option = """"); virtual Int_tMakeCode(const char* filename = 0); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); virtual Int_tMakeSelector(const char* selector = 0); voidTObject::MayNotUse(const char* method) const; Bool_tMemoryFull(Int_t nby",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:20483,Inherit,InheritsFrom,20483,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi1() const; virtual Float_tGetPhi2() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTUBS.html:3732,Inherit,InheritsFrom,3732,root/html532/TTUBS.html,https://root.cern,https://root.cern/root/html532/TTUBS.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi1() const; virtual Float_tGetPhi2() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTUBS.html:3472,Inherit,InheritsFrom,3472,root/html602/TTUBS.html,https://root.cern,https://root.cern/root/html602/TTUBS.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TStringGetPath() const; const TStringGetPort() const; const TStringGetQuery() const; const TStringGetRelativePart() const; const TStringGetScheme() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TStringGetUri() const; const TStringGetUserInfo() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasAuthority() const; Bool_tHasFragment() const; virtual ULong_tTObject::Hash() const; Bool_tHasHierPart() const; Bool_tHasHost() const; Bool_tHasPath() const; Bool_tHasPort() const; Bool_tHasQuery() const; Bool_tHasRelativePart() const; Bool_tHasScheme() const; Bool_tHasUserInfo() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAbsolute() const; static Bool_tIsAuthority(const TString&); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tIsFragment(const TString&); static Bool_tIsHierPart(const TString&); static Bool_tIsHost(const TString&); static Bool_tIsIpv4(const TString&); Bool_tTObject::IsOnHeap() const; static Bool_tIsPath(const TString&); static Bool_tIsPathAbempty(const TString&); static Bool_tIsPathAbsolute(const TString&); static Bool_tIsPathEmpty(const TString&); static Bool_tIsPathNoscheme(const TString&); static Bool_tIsPathRootless(const TString&); static Bool_tIsPort(const TString&); static Bool_tIsQuery(const TString&); Bool_tIsReference() const; static Bool_tIsRegName(const TString&); Bool_tIsRelative() const; static Bool_tIsR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUri.html:3131,Inherit,InheritsFrom,3131,root/html532/TUri.html,https://root.cern,https://root.cern/root/html532/TUri.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t i) const; TTreeFormula*GetVar(Int_t i) const; TTreeFormula*GetVar1() const; TTreeFormula*GetVar2() const; TTreeFormula*GetVar3() const; TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSelector::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelectorDraw.html:3483,Inherit,InheritsFrom,3483,root/html532/TSelectorDraw.html,https://root.cern,https://root.cern/root/html532/TSelectorDraw.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t i) const; TTreeFormula*GetVar(Int_t i) const; TTreeFormula*GetVar1() const; TTreeFormula*GetVar2() const; TTreeFormula*GetVar3() const; TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSelector::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorDraw.html:3537,Inherit,InheritsFrom,3537,root/html602/TSelectorDraw.html,https://root.cern,https://root.cern/root/html602/TSelectorDraw.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual to be used to create GC's and XImages; RVisual*TGX11::fVisualPointer to visual used by all windows; ULong_tTGX11::fWhitePixelValue of white pixel in colormap. private:. FT_VectorfAlignalignment vector; TXftFontHash*fXftFontHashhash table for Xft fonts; static TGX11TTF::EAlignkBCenter; static TGX11TTF::EAlignkBLeft; static TGX11TTF::EAlignkBRight; static TGX11TTF::EAlignkMCenter; static TGX11TTF::EAlignkMLeft; static TGX11TTF::EAlignkMRight; static TGX11TTF::EAlignkNone; static TGX11TTF::EAlignkTCenter; static TGX11TTF::EAlignkTLeft; static TGX11TTF::EAlignkTRight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGX11TTF(const TGX11& org); Create copy of TGX11 but now use TrueType fonts. void Activate(); Static method setting TGX11TTF as the acting gVirtualX. Bool_t Init(void* display); Initialize X11 system. Returns kFALSE in case of failure. void Align(void); Compute alignment variables. The alignment is done on the horizontal string; then the rotation is applied on the alignment variables.; SetRotation and LayoutGlyphs should have been called before. void DrawImage(FT_Bitmap* source, ULong_t fore, ULong_t back, RXImage* xim, Int_t bx, Int_t by); Draw FT_Bitmap bitmap to xim image at position bx,by using specified; foreground color. void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const char* text, TVirtualX::ETextMode mode); Draw text using TrueType fonts. If TrueType fonts are not available the; text is drawn with TGX11::DrawText. void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const wchar_t* text, TVirtualX::ETextMode mode); Draw text using TrueType fonts. If TrueType fonts are not available the; text is drawn with TGX11::DrawText. RXImage * GetBackground(Int_t x, Int_t y, UInt_t w, UInt_t h); Get the background of the current window in an XImage. Bool_t IsVisible(Int_t x, Int_t y, UInt_t w, UInt_t h); Test if there is really something to render. void RenderString(Int_t x, Int_t y, TVirtualX::E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGX11TTF.html:27340,variab,variables,27340,root/html602/TGX11TTF.html,https://root.cern,https://root.cern/root/html602/TGX11TTF.html,4,['variab'],['variables']
Modifiability,"ual voidDrawSectionYOZ() const; const TColor*GetPadColor() const; voidMoveSection(Int_t px, Int_t py); voidPrintPlot() const; voidRestoreModelviewMatrix() const; voidRestoreProjectionMatrix() const; voidSaveModelviewMatrix() const; voidSaveProjectionMatrix() const. Data Members; public:. enum ESelectionBase { kHighColorSelectionBase; kTrueColorSelectionBase; };; enum ECutAxisID { kXAxis; kYAxis; kZAxis; };. protected:. TGLPlotBoxfBackBox; TGLBoxCutfBoxCut; TGLPlotCamera*fCamera; TGLPlotCoordinates*fCoord; Bool_tfDrawAxes; Bool_tfDrawPalette; Bool_tfHighColor; TH1*fHist; TPointfMousePosition; Double_tfPadPhi; Double_tfPadTheta; const Float_t*fPhysicalShapeColor; Int_tfSelectedPart; TGLSelectionBufferfSelection; Int_tfSelectionBase; Bool_tfSelectionPass; Bool_tfUpdateSelection; TAxis*fXAxis; Double_tfXOYSectionPos; Double_tfXOZSectionPos; TAxis*fYAxis; Double_tfYOZSectionPos; TAxis*fZAxis; vector<Double_t>fZLevels. private:. const TColor*fPadColor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Paint(); Draw lego/surf/whatever you can. void PrintPlot() const; Generate PS using gl2ps. Bool_t PlotSelected(Int_t px, Int_t py); Read color buffer content to find selected object. void SetPadColor(const TColor* color); Used in a pad. void SetFrameColor(const TColor* frameColor); Set plot's back box color. void InvalidateSelection(); Selection must be updated. const TColor * GetPadColor() const; Get pad color. void MoveSection(Int_t px, Int_t py); Create dynamic profile using selected plane. void DrawSections() const; Draw sections (if any). void ClearBuffers() const. // Clear buffer.; Float_t rgb[3] = {1.f, 1.f, 1.f};; if (const TColor *color = GetPadColor()); color->GetRGB(rgb[0], rgb[1], rgb[2]);; glClearColor(rgb[0], rgb[1], rgb[2], 1.);; glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);. void DrawPaletteAxis() const; Draw. Palette. Axis. void SaveModelviewMatrix() const. void SaveProjectionMatrix() const. void RestoreMode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLPlotPainter.html:2830,Inherit,Inheritance,2830,root/html532/TGLPlotPainter.html,https://root.cern,https://root.cern/root/html532/TGLPlotPainter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidGetMatrix2Array(double* data, Option_t* option = """") const; virtual const double*GetMatrixArray() const; virtual double*GetMatrixArray(); virtual const char*TObject::GetName() const; Int_tGetNcols() const; Int_tGetNoElements() const; Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Int_t*GetRowIndexArray() const; virtual Int_t*GetRowIndexArray(); Int_tGetRowLwb() const; Int_tGetRowUpb() const; virtual TMatrixTBase<double>&GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase<double>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; doubleGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual TMatrixTBase<double>&InsertRow(Int_t row, Int_t col, const double* v, Int_t n = -1); virtual voidTObject::Inspect() constMENU ; voidInvalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOwner() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsSymmetric() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidMakeValid(); virtual doubleMax() const; voidTObject::MayNotUse(const char* method) const; virtual doubleMin() const; static double&NaNValue(); virtual Int_tNonZeros() const; doubleNorm1() const; virtual TMatrixTBase<double>&NormByDiag(const TVectorT<double>& v, Option_t* option = ""D""); doubleNormInf() const; virtual Bool_tTObject::Notify(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMatrixTBase_double_.html:10472,Inherit,InheritsFrom,10472,root/html604/TMatrixTBase_double_.html,https://root.cern,https://root.cern/root/html604/TMatrixTBase_double_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual voidGetMatrix2Array(double* data, Option_t* option = """") const; virtual const double*GetMatrixArray() const; virtual double*GetMatrixArray(); virtual const char*TObject::GetName() const; Int_tGetNcols() const; Int_tGetNoElements() const; Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Int_t*GetRowIndexArray() const; virtual Int_t*GetRowIndexArray(); Int_tGetRowLwb() const; Int_tGetRowUpb() const; virtual TMatrixTBase<double>&GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase<double>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; doubleGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual TMatrixTBase<double>&InsertRow(Int_t row, Int_t col, const double* v, Int_t n = -1); virtual voidTObject::Inspect() constMENU ; voidInvalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOwner() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsSymmetric() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidMakeValid(); virtual doubleMax() const; voidTObject::MayNotUse(const char* method) const; virtual doubleMin() const; virtual Int_tNonZeros() const; doubleNorm1() const; virtual TMatrixTBase<double>&NormByDiag(const TVectorT<double>& v, Option_t* option = ""D""); doubleNormInf() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTBase_double_.html:10562,Inherit,InheritsFrom,10562,root/html532/TMatrixTBase_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTBase_double_.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar&); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar&, const char*); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, Double_t nominal, const RooArgList& low, const RooArgList& high); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html:12369,Flexible,FlexibleInterpVarFlexibleInterpVar,12369,root/html602/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html,2,['Flexible'],['FlexibleInterpVarFlexibleInterpVar']
Modifiability,"ual voidSetParseCode(Int_t code). private:. TXMLParser&operator=(const TXMLParser&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tfParseCodeto keep track of the errorcodes; Bool_tfReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tfStopErrorstop when parse error occurs; Bool_tfValidateto validate the parse context; TStringfValidateErrorparse error; TStringfValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TXMLParser(); Cleanup. void SetValidate(Bool_t val = kTRUE); The parser will validate the xml file if val = true. void SetReplaceEntities(Bool_t val = kTRUE); The parser will replace/expand entities. void ReleaseUnderlying(); To release any existing document. void OnValidateError(const TString& message); This function is called when an error from the parser has occured.; Message is the parse error. void OnValidateWarning(const TString& message); This function is called when a warning from the parser has occured.; Message is the parse error. const char * GetParseCodeMessage(Int_t parseCode) const; Returns the parse code message. void InitializeContext(); Initialize parser parameters, such as, disactivate non-standards libxml1; features, on/off validation, clear error and warning messages. void StopParser(); Stops parsing. void SetParseCode(Int_t code); Set the parse code:; 0: Parse succesfull; -1: Attempt to parse a second file while a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLParser.html:10120,Inherit,Inheritance,10120,root/html532/TXMLParser.html,https://root.cern,https://root.cern/root/html532/TXMLParser.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidSetParseCode(Int_t code). private:. TXMLParser&operator=(const TXMLParser&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. _xmlParserCtxt*fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tfParseCodeto keep track of the errorcodes; Bool_tfReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tfStopErrorstop when parse error occurs; Bool_tfValidateto validate the parse context; TStringfValidateErrorparse error; TStringfValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TXMLParser(); Cleanup. void SetValidate(Bool_t val = kTRUE); The parser will validate the xml file if val = true. void SetReplaceEntities(Bool_t val = kTRUE); The parser will replace/expand entities. void ReleaseUnderlying(); To release any existing document. void OnValidateError(const TString& message); This function is called when an error from the parser has occured.; Message is the parse error. void OnValidateWarning(const TString& message); This function is called when a warning from the parser has occured.; Message is the parse error. const char * GetParseCodeMessage(Int_t parseCode) const; Returns the parse code message. void InitializeContext(); Initialize parser parameters, such as, disactivate non-standards libxml1; features, on/off validation, clear error and warning messages. void StopParser(); Stops parsing. void SetParseCode(Int_t code); Set the parse code:; 0: Parse successful; -1: Attempt to parse a second file while a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXMLParser.html:10139,Inherit,Inheritance,10139,root/html534/TXMLParser.html,https://root.cern,https://root.cern/root/html534/TXMLParser.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidSetShift(Double_t[3] main_shift, Double_t[3] extra_shift); virtual voidSize(Int_t width, Int_t height); TTablePadView3D(); TTablePadView3D(TVirtualPad* pad); TTablePadView3D(const TTablePadView3D&); virtual voidUpdateNodeMatrix(TNode* node, Option_t* opt = """"); virtual voidUpdatePosition(Double_t x, Double_t y, Double_t z, TRotMatrix* matrix, Option_t* opt = """"); virtual voidUpdateView(). protected:. voidInit(TVirtualPad* pad). Data Members; protected:. Double_tfAnglFactor[3]Latitude, Longitude, Psi; Double_tfAngles[3]Latitude, Longitude, Psi; Double_tfExtraAngles[3]Latitude, Longitude, Psi; Double_tfExtraTranslate[3]The vector to move object with a mouse; TVirtualPad*fParentPointer to the original TPad object; Float_tfScaleThe scale factor to control the border of the clip box; Double_tfTranslate[3]The vector to move object into the center of the scene; Double_tfViewBoxMax[3]Maximum of clip box; Double_tfViewBoxMin[3]Minimum of clip box. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TTablePadView3D(); Delete 3D viewer. void GetRange(Double_t[3] min, Double_t[3] max) const; get view range. void SetRange(Double_t[3] min, Double_t[3] max); set view range. void GetShift(Double_t[3] main_shift, Double_t[3] extra_shift) const; get shift parameters. void SetShift(Double_t[3] main_shift, Double_t[3] extra_shift); set shift parameters. void GetAngles(Double_t[3] main_angles, Double_t[3] extra_angles) const; get view angles. void SetAngles(Double_t[3] main_angles, Double_t[3] extra_angles); set view angles. void GetAnglesFactors(Double_t[3] factors) const; get view angles factors. void SetAnglesFactors(Double_t[3] factors); set view angles factors. void SetScale(Float_t scale); set view scale. void ExecuteEvent(Int_t event, Int_t px, Int_t py); { }. void Paint(Option_t* option = """"); { }. void Size(Int_t width, Int_t height); { }. void PaintBeginModel(Option_t* opt = """"); { }. void PaintEnd(Option_t* opt = """"); { }. void P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTablePadView3D.html:2693,Inherit,Inheritance,2693,root/html604/TTablePadView3D.html,https://root.cern,https://root.cern/root/html604/TTablePadView3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); Bool_tUseColor() const; Bool_tWriteOptionsReference() const. private:. (unknown)(); TMVA::ConfigConfig(); TMVA::MsgLogger&Log() const. Data Members; public:. TMVA::Config::IONamesfIONamesCustomisable weight file properties; TMVA::Config::VariablePlottingfVariablePlottingCustomisable plotting properties. private:. Bool_tfDrawProgressBardraw progress bar to indicate training evolution; TMVA::MsgLogger*fLoggermessage logger; Bool_tfSilentno output at all; Bool_tfUseColoredConsolecoloured standard output; Bool_tfWriteOptionsReferenceif set true: Configurable objects write file with option reference; static TMVA::Config*fgConfigPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Config(); constructor - set defaults. void DestroyInstance(); static function: destroy TMVA instance. TMVA::Config& Instance(); static function: returns TMVA instance. Bool_t UseColor() const; { return fUseColoredConsole; }. void SetUseColor(Bool_t uc); { fUseColoredConsole = uc; }. Bool_t IsSilent() const; { return fSilent; }. void SetSilent(Bool_t s); { fSilent = s; }. Bool_t WriteOptionsReference() const; { return fWriteOptionsReference; }. void SetWriteOptionsReference(Bool_t w); { fWriteOptionsReference = w; }. Bool_t DrawProgressBar() const; { return fDrawProgressBar; }. void SetDrawProgressBar(Bool_t d); { fDrawProgressBar = d; }. VariablePlotting& GetVariablePlotting(); { return fVariablePlotting; }. IONames& GetIONames(); { return fIONames; }. Config(); private constructor. » Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss » Copyright (c) 2006: *; » Last changed: root/tmva $Id: Config.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Config.html:2271,Variab,VariablePlotting,2271,root/html532/TMVA__Config.html,https://root.cern,https://root.cern/root/html532/TMVA__Config.html,3,"['Config', 'Variab']","['Config', 'VariablePlotting']"
Modifiability,"ual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfAatomic mass (g/mole); Int_tfNnumber of nucleons; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; Int_tfZatomic number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoIsotope(); Dummy I/O constructor. TGeoIsotope(const char* name, Int_t z, Int_t n, Double_t a); Constructor. TGeoIsotope * FindIsotope(const char* name); Find existing isotope by name. void Print(Option_t* option = """") const; Print this isotope. TGeoElement & operator=(const TGeoIsotope& ). TGeoIsotope(). virtual ~TGeoIsotope(); {}. Int_t GetZ() const; {return fZ;}. Int_t GetN() const; {return fN;}. Double_t GetA() const; {return fA;}. » Author: Andrei Gheata 17/06/04 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id: TGeoElement.h 33465 2010-05-11 09:58:19Z agheata $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoIsotope.html:5903,Inherit,Inheritance,5903,root/html532/TGeoIsotope.html,https://root.cern,https://root.cern/root/html532/TGeoIsotope.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. Bool_tIsValid(Int_t field). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. ULong_t*fFieldLengthlength of each field in the row; char**fFieldscurrent row; MYSQL_RES*fResultcurrent result set. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMySQLRow(void* result, ULong_t rowHandle); Single row of query result. ~TMySQLRow(); Destroy row object. void Close(Option_t* opt = """"); Close row. Bool_t IsValid(Int_t field); Check if row is open and field index within range. ULong_t GetFieldLength(Int_t field); Get length in bytes of specified field. const char * GetField(Int_t field); Get specified field from row (0 <= field < GetFieldCount()). TMySQLRow(void* result, ULong_t rowHandle). » Author: Fons Rademakers 15/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/mysql:$Id: TMySQLRow.h 29976 2009-08-31 13:34:53Z rdm $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMySQLRow.html:5423,Inherit,Inheritance,5423,root/html532/TMySQLRow.html,https://root.cern,https://root.cern/root/html532/TMySQLRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. vector<pRooArgSet>_asArr1! Array of 1st RooArgSet pointers; vector<pRooArgSet>_asArr2! Array of 2nd RooArgSet pointers; vector<pRooArgSet>_asArr3! Array of 3rd RooArgSet pointers; vector<pRooArgSet>_asArr4! Array of 4th RooArgSet pointers; vector<std::vector<Int_t> >_clArr! Array of array of code lists. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAICRegistry(UInt_t size = 10). RooAICRegistry(const RooAICRegistry& other); Copy constructor. ~RooAICRegistry(); Destructor. Int_t store(const vector<Int_t>& codeList, RooArgSet* set1 = 0, RooArgSet* set2 = 0, RooArgSet* set3 = 0, RooArgSet* set4 = 0); Store given arrays of integer codes, and up to four RooArgSets in; the registry (each setX pointer may be null). The registry; clones all RooArgSets internally so the RooArgSets passed as; arguments do not need to live beyond the store() call. The return; value is a unique master code for the given configuration of; integers and RooArgSets. If an identical combination is; previously stored in the registry no objects are stored and the; unique code of the existing entry is returned. const std::vector<Int_t>& retrieve(Int_t masterCode) const; Retrieve the array of integer codes associated with the given master code. const std::vector<Int_t>& retrieve(Int_t masterCode, pRooArgSet& set1) const; Retrieve the array of integer codes associated with the given master code; and set the passed set1 pointer to the first RooArgSet associated with this master code. const std::vector<Int_t>& retrieve(Int_t masterCode) const. const std::vector<Int_t>& retrieve(Int_t masterCode, pRooArgSet& set1) const. » Last changed: Tue Mar 10 17:13:47 2015 » Last generated: 2015-03-10 17:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAICRegistry.html:2289,config,configuration,2289,root/html534/RooAICRegistry.html,https://root.cern,https://root.cern/root/html534/RooAICRegistry.html,2,['config'],['configuration']
Modifiability,"ual voidTH2::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidHoneycomb(Double_t xstart, Double_t ystart, Double_t a, Int_t k, Int_t s); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t*) const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH2Poly.html:16219,Inherit,InheritsFrom,16219,root/html534/TH2Poly.html,https://root.cern,https://root.cern/root/html534/TH2Poly.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTHnSparse::InitStorage(Int_t* nbins, Int_t chunkSize); voidTObject::MakeZombie(); Bool_tTHnBase::PrintBin(Long64_t idx, Int_t* coord, Option_t* options) const; TObject*THnBase::ProjectionAny(Int_t ndim, const Int_t* dim, Bool_t wantNDim, Option_t* option = """") const; THnBase*THnBase::RebinBase(Int_t group) const; THnBase*THnBase::RebinBase(const Int_t* group) const; virtual voidTHnSparse::Reserve(Long64_t nbins); voidTHnBase::ResetBase(Option_t* option = """"); voidTHnBase::UpdateXStat(const Double_t* x, Double_t w = 1.). Data Members; public:. enum THnBase::[unnamed] { kNoInt; kValidInt; kInvalidInt; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum THnBase::THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TArray* GenerateArray() const. » Author: Axel Naumann (2007-09-11) » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnSparseT_TArrayC_.html:13375,Inherit,Inheritance,13375,root/html534/THnSparseT_TArrayC_.html,https://root.cern,https://root.cern/root/html534/THnSparseT_TArrayC_.html,12,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidRooAbsDataStore::forceCacheUpdate(); virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Stat_tGetEntries() const; Int_tGetEntry(Int_t entry = 0, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tRooAbsDataStore::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; voidloadValues(const TTree* t, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooTreeDataStore.html:4874,Inherit,InheritsFrom,4874,root/html534/RooTreeDataStore.html,https://root.cern,https://root.cern/root/html534/RooTreeDataStore.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TExec(); Exec default constructor. TExec(const char* name, const char* command); Exec normal constructor. ~TExec(); Exec default destructor. TExec(const TExec& text); Copy constructor. void Exec(const char* command = """"); Execute the command referenced by this object. if command is given, this command is executed; otherwise the default command of the object is executed. if the default command (in the exec title) is empty, an attemp is made; to execute the exec name if it contains a ""."" or a ""("", otherwise; the command "".x execname.C"" is executed.; The function returns the result of the user function/script. void Paint(Option_t* option = """"); Execute the command referenced by this object. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetAction(const char* action); {SetTitle(action);}. » Author: Rene Brun 29/12/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rade",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TExec.html:8834,Inherit,Inheritance,8834,root/html602/TExec.html,https://root.cern,https://root.cern/root/html602/TExec.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGuiFactory(const char* name = ""Batch"", const char* title = ""Batch GUI Factory""); TGuiFactory ctor only called by derived classes. TApplicationImp * CreateApplicationImp(const char* classname, int* argc, char** argv); Create a batch version of TApplicationImp. TCanvasImp * CreateCanvasImp(TCanvas* c, const char* title, UInt_t width, UInt_t height); Create a batch version of TCanvasImp. TCanvasImp * CreateCanvasImp(TCanvas* c, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height); Create a batch version of TCanvasImp. TBrowserImp * CreateBrowserImp(TBrowser* b, const char* title, UInt_t width, UInt_t height, Option_t* opt = """"); Create a batch version of TBrowserImp. TBrowserImp * CreateBrowserImp(TBrowser* b, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height, Option_t* opt = """"); Create a batch version of TBrowserImp. TContextMenuImp * CreateContextMenuImp(TContextMenu* c, const char* name, const char* title)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGuiFactory.html:7209,Inherit,Inheritance,7209,root/html602/TGuiFactory.html,https://root.cern,https://root.cern/root/html602/TGuiFactory.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TList* GetStaged(TCollection* pathlist); Retrieves the staging (online) status for a list of path names. Path names; must be of type TUrl, TFileInfo or TObjString. The returned list is the list; of staged files as TObjString (we use TObjString, because you can do a FindObject; on that list using the file name, which is not possible with TUrl objects. Bool_t Stage(TCollection* pathlist, Option_t* opt = 0); Issue a stage request for a list of files.; Return the '&' of all single Prepare commands. TFileStager * Open(const char* stager); Open a stager, after having loaded the relevant plug-in.; The format of 'stager' depends on the plug-in. Bool_t IsStaged(const char* ); Just check if the file exists locally. Int_t Locate(const char* u, TString& f); Just check if the file exists locally. Int_t LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); Massive location of files. Returns < 0 on error, or number of files; processed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileStager.html:6750,Inherit,Inheritance,6750,root/html602/TFileStager.html,https://root.cern,https://root.cern/root/html602/TFileStager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; explicit ConfInterval(const char* name = 0); constructor given name and title. {}. virtual ~ConfInterval(); destructor. {}. ConfInterval& operator=(const RooStats::ConfInterval& other); operator=. Bool_t IsInInterval(const RooArgSet& ) const; check if given point is in the interval. void SetConfidenceLevel(Double_t cl); used to set confidence level. Keep pure virtual. Double_t ConfidenceLevel() const; return confidence level. RooArgSet* GetParameters() const; return list of parameters of interest defining this interval (return a new cloned list). Bool_t CheckParameters(const RooArgSet& ) const; check if parameters are correct (i.e. they are the POI of this interval). » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:36; This page has been automatically generated. For comments or suggestio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ConfInterval.html:6984,Inherit,Inheritance,6984,root/html602/RooStats__ConfInterval.html,https://root.cern,https://root.cern/root/html602/RooStats__ConfInterval.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; explicit ConfInterval(const char* name = 0); constructor given name and title. {}. virtual ~ConfInterval(); destructor. {}. ConfInterval& operator=(const RooStats::ConfInterval& other); operator=. Bool_t IsInInterval(const RooArgSet& ) const; check if given point is in the interval. void SetConfidenceLevel(Double_t cl); used to set confidence level. Keep pure virtual. Double_t ConfidenceLevel() const; return confidence level. RooArgSet* GetParameters() const; return list of parameters of interest defining this interval (return a new cloned list). Bool_t CheckParameters(const RooArgSet& ) const; check if parameters are correct (i.e. they are the POI of this interval). » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__ConfInterval.html:6984,Inherit,Inheritance,6984,root/html604/RooStats__ConfInterval.html,https://root.cern,https://root.cern/root/html604/RooStats__ConfInterval.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Bool_tTMVA::VariableTransformBase::GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; virtual const char*TMVA::VariableTransformBase::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event *const ev, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:2509,Variab,VariableTransformBase,2509,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Bool_tTMVA::VariableTransformBase::GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; virtual const char*TMVA::VariableTransformBase::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event *const, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableGaussTransform.html:2541,Variab,VariableTransformBase,2541,root/html532/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableGaussTransform.html,4,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Bool_tTMVA::VariableTransformBase::GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; virtual const char*TMVA::VariableTransformBase::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event*const ev, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:2509,Variab,VariableTransformBase,2509,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Bool_tTMVA::VariableTransformBase::GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; virtual const char*TMVA::VariableTransformBase::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event*const, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:2541,Variab,VariableTransformBase,2541,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,4,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictionary*GetContentDict() const; TDictionary*GetDict() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const ROOT::TBranchProxy*GetProxy() const; ROOT::TBranchProxy*GetProxy(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TNamedBranchProxy.html:2425,Inherit,InheritsFrom,2425,root/html602/ROOT__TNamedBranchProxy.html,https://root.cern,https://root.cern/root/html602/ROOT__TNamedBranchProxy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGDimensionGetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGPositionGetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TGRegionIntersect(const TGRegion& r) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsNull() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGRegion.html:2965,Inherit,InheritsFrom,2965,root/html532/TGRegion.html,https://root.cern,https://root.cern/root/html532/TGRegion.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGDimensionGetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGPositionGetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TGRegionIntersect(const TGRegion& r) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsNull() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGRegion.html:2643,Inherit,InheritsFrom,2643,root/html602/TGRegion.html,https://root.cern,https://root.cern/root/html602/TGRegion.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*GetLineWith(const char* text) const; TList*GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tLoad() constMENU ; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMacro.html:3522,Inherit,InheritsFrom,3522,root/html602/TMacro.html,https://root.cern,https://root.cern/root/html602/TMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*GetLineWith(const char* text) const; TList*GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMacro.html:3605,Inherit,InheritsFrom,3605,root/html532/TMacro.html,https://root.cern,https://root.cern/root/html532/TMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasMax(const char* rname = 0) const; Bool_thasMin(const char* rname = 0) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tmax(const char* rname = 0) const; voidTObject::MayNotUse(const char* method) const; Double_tmin(const char* rname = 0) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealProxy.html:3185,Inherit,InheritsFrom,3185,root/html532/RooRealProxy.html,https://root.cern,https://root.cern/root/html532/RooRealProxy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasMax(const char* rname = 0) const; Bool_thasMin(const char* rname = 0) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tmax(const char* rname = 0) const; voidTObject::MayNotUse(const char* method) const; Double_tmin(const char* rname = 0) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRealProxy.html:2730,Inherit,InheritsFrom,2730,root/html602/RooRealProxy.html,https://root.cern,https://root.cern/root/html602/RooRealProxy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Double_tI3() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Double_tIsospin() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; Double_tLifetime() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMass() const; voidTObject::MayNotUse(const char* method) const; Int_tNDecayChannels() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParticlePDG.html:3824,Inherit,InheritsFrom,3824,root/html532/TParticlePDG.html,https://root.cern,https://root.cern/root/html532/TParticlePDG.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Double_tI3() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Double_tIsospin() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; Double_tLifetime() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMass() const; voidTObject::MayNotUse(const char* method) const; Int_tNDecayChannels() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParticlePDG.html:3633,Inherit,InheritsFrom,3633,root/html602/TParticlePDG.html,https://root.cern,https://root.cern/root/html602/TParticlePDG.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TLDAPResult*GetAttributeTypes(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; const char*GetNamingContexts(); TLDAPResult*GetObjectClasses(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetSubschemaSubentry(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsConnected() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tModifyEntry(TLDAPEntry& entry, Int_t mode = LDAP_MOD_REPLACE); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLDAPServer.html:2631,Inherit,InheritsFrom,2631,root/html532/TLDAPServer.html,https://root.cern,https://root.cern/root/html532/TLDAPServer.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetMergedObjects(); Int_tGetMergedWorkers(); TSlave*GetMerger(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TList*GetWorkers(); Int_tGetWorkersToMerge(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActive(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMergerInfo.html:2870,Inherit,InheritsFrom,2870,root/html532/TMergerInfo.html,https://root.cern,https://root.cern/root/html532/TMergerInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetMergedObjects(); Int_tGetMergedWorkers(); TSlave*GetMerger(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TList*GetWorkers(); Int_tGetWorkersToMerge(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActive(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMergerInfo.html:2833,Inherit,InheritsFrom,2833,root/html602/TMergerInfo.html,https://root.cern,https://root.cern/root/html602/TMergerInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ual voidTObject::Print(Option_t* option = """") const; voidPrintHelpMessage(const TString& methodTitle = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); static TDirectory*RootBaseDir(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetBackgroundTree(TTree* background, Double_t weight = 1.); voidSetBackgroundWeightExpression(const TString& variable); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); voidSetCut(const TString& cut, const TString& className = """"); voidSetCut(const TCut& cut, const TString& className = """"); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetInputTrees(TTree* inputTree, const TCut& SigCut, const TCut& BgCut); voidSetInputTrees(const TString& signalFileName, const TString& backgroundFileName, Double_t signalWeight = 1., Double_t backgroundWeight = 1.); voidSetInputTrees(TTree* signal, TTree* background, Double_t signalWeight = 1., Double_t backgroundWeight = 1.); voidSetInputVariables(vector<TString>* theVariables); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetSignalTree(TTree* signal, Double_t weight = 1.); voidSetSignalWeightExpression(const TString& variable); voidSetTree(TTree* tree, const TString& className, Double_t weight); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVerbose(Bool_t v = kTRUE); voidSetWeightExpression(const TString& variable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Factory.html:8549,variab,variable,8549,root/html602/TMVA__Factory.html,https://root.cern,https://root.cern/root/html602/TMVA__Factory.html,8,"['Config', 'variab']","['Configurable', 'variable']"
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableDecorrTransformVariableDecorrTransform(TMVA::DataSetInfo& dsi); TMVA::VariableDecorrTransformVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html:5793,Variab,VariableTransformBase,5793,root/html602/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableGaussTransformVariableGaussTransform(const TMVA::VariableGaussTransform&); TMVA::VariableGaussT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:5860,Variab,VariableTransformBase,5860,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableIdentityTransformVariableIdentityTransform(TMVA::DataSetInfo& dsi); TMVA::VariableIdentityTrans",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:5864,Variab,VariableTransformBase,5864,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html:5886,Variab,VariableTransformBase,5886,root/html602/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariablePCATransformVariablePCATransform(TMVA::DataSetInfo& dsi); TMVA::VariablePCATransformVariablePCA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariablePCATransform.html:5831,Variab,VariableTransformBase,5831,root/html602/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariablePCATransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html:5811,Variab,VariableTransformBase,5811,root/html602/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableDecorrTransformVariableDecorrTransform(TMVA::DataSetInfo& dsi); TMVA::VariableDecorrTransformVariableDecorrTransform(const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html:5816,Variab,VariableTransformBase,5816,root/html532/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableGaussTransformVariableGaussTransform(const TMVA::VariableGaussTransform&); TMVA::VariableGaussTransformVariableGaussTransfor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableGaussTransform.html:5885,Variab,VariableTransformBase,5885,root/html532/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableGaussTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableIdentityTransformVariableIdentityTransform(TMVA::DataSetInfo& dsi); TMVA::VariableIdentityTransformVariableIdentityTransform",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:5883,Variab,VariableTransformBase,5883,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVariableNormalizeTrans",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html:5903,Variab,VariableTransformBase,5903,root/html532/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariablePCATransformVariablePCATransform(TMVA::DataSetInfo& dsi); TMVA::VariablePCATransformVariablePCATransform(const TMVA::Variabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariablePCATransform.html:5860,Variab,VariableTransformBase,5860,root/html532/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariablePCATransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVariableRearrangeTrans",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html:5828,Variab,VariableTransformBase,5828,root/html532/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableDecorrTransformVariableDecorrTransform(TMVA::DataSetInfo& dsi); TMVA::VariableDecorrTransformVariableDeco",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableDecorrTransform.html:5816,Variab,VariableTransformBase,5816,root/html534/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableDecorrTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableGaussTransformVariableGaussTransform(const TMVA::VariableGaussTransform&); TMVA::VariableGaussTransformVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableGaussTransform.html:5885,Variab,VariableTransformBase,5885,root/html534/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableGaussTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableIdentityTransformVariableIdentityTransform(TMVA::DataSetInfo& dsi); TMVA::VariableIdentityTransformVariab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html:5883,Variab,VariableTransformBase,5883,root/html534/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html:5903,Variab,VariableTransformBase,5903,root/html534/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariablePCATransformVariablePCATransform(TMVA::DataSetInfo& dsi); TMVA::VariablePCATransformVariablePCATransform(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariablePCATransform.html:5860,Variab,VariableTransformBase,5860,root/html534/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariablePCATransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableRearrangeTransform.html:5828,Variab,VariableTransformBase,5828,root/html534/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableRearrangeTransform.html,1,['Variab'],['VariableTransformBase']
Modifiability,"ual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTMatrixTLazy<float>::operator=(const TMatrixTLazy<float>&). private:. virtual voidFillIn(TMatrixT<float>& m) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTMatrixTLazy<float>::fColLwb; Int_tTMatrixTLazy<float>::fColUpb; Int_tTMatrixTLazy<float>::fRowLwb; Int_tTMatrixTLazy<float>::fRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void THilbertMatrixT<Element> FillIn(TMatrixT<float>& m) const. » Last changed: root/matrix:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THilbertMatrixT_float_.html:5944,Inherit,Inheritance,5944,root/html534/THilbertMatrixT_float_.html,https://root.cern,https://root.cern/root/html534/THilbertMatrixT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidoperator=(const TMatrixTSymLazy<double>&). private:. virtual voidFillIn(TMatrixTSym<double>& m) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfRowLwb; Int_tfRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void operator=(const TMatrixTSymLazy<double>& ); { }. void FillIn(TMatrixTSym<double>& m) const. Int_t GetRowLwb() const; { return fRowLwb; }. Int_t GetRowUpb() const; { return fRowUpb; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-03-14 16:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTSymLazy_double_.html:5592,Inherit,Inheritance,5592,root/html534/TMatrixTSymLazy_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTSymLazy_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableNormalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVariableNormalizeTransform(const TMVA::VariableNormalizeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html:6380,Variab,VariableInfo,6380,root/html532/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html,10,['Variab'],"['VariableInfo', 'VariableNormalizeTransform', 'VariableNormalizeTransformVariableNormalizeTransform', 'VariableTransformBase', 'Variables']"
Modifiability,"ual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableRearrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVariableRearrangeTransform(const TMVA::VariableRearrangeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html:6305,Variab,VariableInfo,6305,root/html532/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html,10,['Variab'],"['VariableInfo', 'VariableRearrangeTransform', 'VariableRearrangeTransformVariableRearrangeTransform', 'VariableTransformBase', 'Variables']"
Modifiability,"ual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfLookupIndexwant a small footprint reference to the RooArgSet for particular parameter point; Double_tfLowerLimitlower limit on test statistic; Double_tfUpperLimitupper limit on test statistic. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t GetLookupIndex(Double_t cl, Double_t leftside); get index for cl,leftside pair. AcceptanceRegion(); {}. virtual ~AcceptanceRegion(); {}. AcceptanceRegion(Int_t lu, Double_t ll, Double_t ul). Double_t GetLowerLimit(); {return fLowerLimit;}. Double_t GetUpperLimit(); {return fUpperLimit;}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__AcceptanceRegion.html:5596,Inherit,Inheritance,5596,root/html534/RooStats__AcceptanceRegion.html,https://root.cern,https://root.cern/root/html534/RooStats__AcceptanceRegion.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. unsigned short*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_unsigned_short_.html:6608,Inherit,Inheritance,6608,root/html534/TNDArrayT_unsigned_short_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_unsigned_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual voidrestoreXVec() const; virtual voidsaveXVec() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidloadValues(const Double_t* xvector) const. Data Members; protected:. Bool_t_clipInvalid; UInt_tRooAbsFunc::_dimensionNumber of observables; const RooAbsReal*_func; Int_tRooAbsFunc::_ncallFunction call counter; const RooArgSet*_nset; const TNamed*_rangeName!; Bool_tRooAbsFunc::_validIs binding in valid state?; RooAbsRealLValue**_vars; Double_t*_xsave; Bool_t_xvecValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealBinding(const RooAbsReal& func, const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE, const TNamed* rangeName = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealBinding.html:2352,variab,variables,2352,root/html526/RooRealBinding.html,https://root.cern,https://root.cern/root/html526/RooRealBinding.html,1,['variab'],['variables']
Modifiability,"ual voidsterilize(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidRooCacheManager<RooAbsCacheElement>::wireCache(). Data Members; protected:. Bool_t_allowOptimize; static Bool_t_clearObsListClear obslist on sterilize?; Bool_t_clearOnRedirect; Int_tRooCacheManager<RooAbsCacheElement>::_lastIndex! Last slot accessed; Int_tRooCacheManager<RooAbsCacheElement>::_maxSize! Maximum size; vector<RooNormSetCache>RooCacheManager<RooAbsCacheElement>::_nsetCache! Normalization/Integration set manager; vector<RooAbsCacheElement*>RooCacheManager<RooAbsCacheElement>::_object! Payload; Bool_t_optCacheModeSeen! ; RooArgSet*_optCacheObservables! current optCacheObservables ; RooAbsArg*RooAbsCache::_ownerPointer to owning RooAbsArg; Int_tRooCacheManager<RooAbsCacheElement>::_size! Actual use; Bool_tRooCacheManager<RooAbsCacheElement>::_wired! In wired mode, there is a single payload which is returned always. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooObjCacheManager(RooAbsArg* owner = 0, Int_t maxSize = 2, Bool_t clearCacheOnServerRedirect = kTRUE, Bool_t allowOptimize = kFALSE); Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; all cache elements will be cleared when a server redirect is intercepted by the cache manager.; This is the default strategy and should only be overridden when you really understand; what you're doing as properly implementing server redirect in cache elements can get very; complicated, especially if there are (cyclical) reference back to the owning object. RooObjCacheManager(const RooObjCacheManager& other, RooAbsArg* owner = 0); Copy constructor. ~RooObjCacheManager(); Destructor. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Intercept server redirect calls. If clearOnRedirect was set, sterilize; the cache (i.e. keep the structure but delete all contents). If not; forward serve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooObjCacheManager.html:3960,Inherit,Inheritance,3960,root/html534/RooObjCacheManager.html,https://root.cern,https://root.cern/root/html534/RooObjCacheManager.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObjArray * fListOfParticles;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TParticleClassPDG.h>. Inheritance diagram for TParticleClassPDG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TParticleClassPDG() [1/2]. TParticleClassPDG::TParticleClassPDG ; (; const TParticleClassPDG & ; pcp). inlineprotected . Definition at line 27 of file TParticleClassPDG.h. ◆ TParticleClassPDG() [2/2]. TParticleClassPDG::TParticleClassPDG ; (; const char * ; name = 0). default constructor ; Definition at line 27 of file TParticleClassPDG.cxx. ◆ ~TParticleClassPDG(). TParticleClassPDG::~TParticleClassPDG ; (; ). override . destructor, class doesn't own its particles... ; Definition at line 35 of file TParticleClassPDG.cxx. Member Function Documentation. ◆ AddParticle(). void TParticleClassPDG::AddParticle ; (; TObject * ; p). inline . Definition at line 54 of file TParticleClassPDG.h. ◆ Browse(). void TParticleClassPDG::Browse ; (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticleClassPDG.html:11414,inherit,inherited,11414,doc/master/classTParticleClassPDG.html,https://root.cern,https://root.cern/doc/master/classTParticleClassPDG.html,1,['inherit'],['inherited']
Modifiability,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollectionMethodBrowsable.html:4575,inherit,inherited,4575,doc/master/classTCollectionMethodBrowsable.html,https://root.cern,https://root.cern/doc/master/classTCollectionMethodBrowsable.html,6,['inherit'],['inherited']
Modifiability,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQClass.html:25300,inherit,inherited,25300,doc/master/classTQClass.html,https://root.cern,https://root.cern/doc/master/classTQClass.html,1,['inherit'],['inherited']
Modifiability,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:20960,inherit,inherited,20960,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,1,['inherit'],['inherited']
Modifiability,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProtoClass.html:2932,inherit,inherited,2932,doc/master/classTProtoClass.html,https://root.cern,https://root.cern/doc/master/classTProtoClass.html,2,['inherit'],['inherited']
Modifiability,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTX11GLManager.html:4666,inherit,inherited,4666,doc/master/classTX11GLManager.html,https://root.cern,https://root.cern/doc/master/classTX11GLManager.html,77,['inherit'],['inherited']
Modifiability,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPieSlice.html:3155,inherit,inherited,3155,doc/master/classTPieSlice.html,https://root.cern,https://root.cern/doc/master/classTPieSlice.html,1,['inherit'],['inherited']
Modifiability,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * Dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TSpline1.html:3701,inherit,inherited,3701,doc/master/classTMVA_1_1TSpline1.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TSpline1.html,7,['inherit'],['inherited']
Modifiability,"ual void PaintPaveArc (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with rounded corners. ;  ; void Print (Option_t *option="""") const override;  Dump this pave with its attributes. ;  ; virtual void SetBorderSize (Int_t bordersize=4);  Sets the border size of the TPave box and shadow. ;  ; virtual void SetCornerRadius (Double_t rad=0.2);  ; virtual void SetName (const char *name="""");  ; virtual void SetOption (Option_t *option=""br"");  ; virtual void SetShadowColor (Int_t color);  ; void SetX1 (Double_t x1) override;  Set the X1 value. ;  ; virtual void SetX1NDC (Double_t x1);  ; void SetX2 (Double_t x2) override;  Set the X2 value. ;  ; virtual void SetX2NDC (Double_t x2);  ; void SetY1 (Double_t y1) override;  Set the Y1 value. ;  ; virtual void SetY1NDC (Double_t y1);  ; void SetY2 (Double_t y2) override;  Set the Y2 value. ;  ; virtual void SetY2NDC (Double_t y2);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBox;  TBox ();  Box default constructor. ;  ;  TBox (const TBox &box);  Box copy constructor. ;  ;  TBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Box standard constructor. ;  ;  ~TBox () override;  Box destructor. ;  ; virtual TBox * DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this box with new coordinates. ;  ; Rectangle_t GetBBox () override;  Return the ""bounding Box"" of the Box. ;  ; TPoint GetBBoxCenter () override;  Return the center of the Box as TPoint in pixels. ;  ; Double_t GetX1 () const;  ; Double_t GetX2 () const;  ; Double_t GetY1 () const;  ; Double_t GetY2 () const;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; Bool_t IsBeingResized () const;  ; virtual Int_t IsInside (Double_t x, Double_t y) const;  Function which returns 1 if point x,y lies inside the box, 0 otherwise. ;  ; TBox & operator= (const TBox &);  Assignment operator. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveClass.html:6283,inherit,inherited,6283,doc/master/classTPaveClass.html,https://root.cern,https://root.cern/doc/master/classTPaveClass.html,2,['inherit'],['inherited']
Modifiability,"ual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:29999,inherit,inherited,29999,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,6,['inherit'],['inherited']
Modifiability,"ual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQConnection.html:15939,inherit,inherited,15939,doc/master/classTQConnection.html,https://root.cern,https://root.cern/doc/master/classTQConnection.html,1,['inherit'],['inherited']
Modifiability,"ual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:20865,inherit,inherited,20865,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,2,['inherit'],['inherited']
Modifiability,"ual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions;  TGeoTrack (const TGeoTrack &)=delete;  ; TGeoTrack & operator= (const TGeoTrack &)=delete;  ;  Protected Member Functions inherited from TVirtualGeoTrack;  TVirtualGeoTrack (const TVirtualGeoTrack &)=delete;  ; TVirtualGeoTrack & operator= (const TVirtualGeoTrack &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Int_t fNpoints;  ; Double_t * fPoints;  ; Int_t fPointsSize;  . Additional Inherited Members;  Static Public Member Functions inherited from TVirtualGeoTrack; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrack.html:18962,inherit,inherited,18962,doc/master/classTGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTGeoTrack.html,2,['inherit'],['inherited']
Modifiability,"ual void SetProjection (TEveProjectionManager *mng, TEveProjectable *model);  Sets projection manager and reference in the projectable object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnRefProjectable (TEveProjectable *assumed_parent, bool notifyParent=true);  Remove reference to projectable. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveCompound; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElementList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:28701,inherit,inherited,28701,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,5,['inherit'],['inherited']
Modifiability,"ual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual void ProgressNotifier (TString, TString);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static MethodCuts * DynamicCast (IMethod *method);  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:24734,inherit,inherited,24734,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['inherit'],['inherited']
Modifiability,"ual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual void ProgressNotifier (TString, TString);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::FitterBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MinuitFitter.html:12017,inherit,inherited,12017,doc/master/classTMVA_1_1MinuitFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MinuitFitter.html,1,['inherit'],['inherited']
Modifiability,"ual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual void ProgressNotifier (TString, TString);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFDA.html:22259,inherit,inherited,22259,doc/master/classTMVA_1_1MethodFDA.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFDA.html,1,['inherit'],['inherited']
Modifiability,"ual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual void ProgressNotifier (TString, TString);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Results; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ResultsMulticlass.html:10425,inherit,inherited,10425,doc/master/classTMVA_1_1ResultsMulticlass.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ResultsMulticlass.html,1,['inherit'],['inherited']
Modifiability,"ual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::TFileSysDir; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::TFileSysEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysRoot.html:9070,inherit,inherited,9070,doc/master/classTHtml_1_1TFileSysRoot.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysRoot.html,3,['inherit'],['inherited']
Modifiability,"ual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::TFileSysDir; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::TFileSysEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Fill ();  Recursively fill entries by parsing the path specified in GetName(); can be a THtml::GetDirDelimiter() delimited list of paths. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysDB.html:9489,inherit,inherited,9489,doc/master/classTHtml_1_1TFileSysDB.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysDB.html,3,['inherit'],['inherited']
Modifiability,"ual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::PDEFoamDiscriminant; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::PDEFoam; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  PDEFoamDecisionTree (const PDEFoamDecisionTree &);  Copy Constructor NOT IMPLEMENTED (NEVER USED) ;  ; virtual void Explore (PDEFoamCell *Cell);  Internal subprogram used by Create. ;  ;  Protected Member Functions inherited from TMVA::PDEFoamDiscriminant;  PDEFoamDiscrimi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTree.html:13368,inherit,inherited,13368,doc/master/classTMVA_1_1PDEFoamDecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTree.html,3,['inherit'],['inherited']
Modifiability,"ual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:63923,inherit,inherited,63923,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['inherit'],['inherited']
Modifiability,"ual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::unique_ptr< RooPolyFunc > taylorExpand (const char *name, const char *title, RooAbsReal &func, const RooArgList &observables, int order=1, std::vector< double > const &observableValues={}, double eps1=1e-6, double eps2=1e-3);  Taylor expanding given function in terms of observables around observableValues. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyFunc.html:46075,inherit,inherited,46075,doc/master/classRooPolyFunc.html,https://root.cern,https://root.cern/doc/master/classRooPolyFunc.html,1,['inherit'],['inherited']
Modifiability,"ual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EHandleDSType { kReleaseCache; kCheckCache; kRemoveFiles; kCopyFiles; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; TPBHandleDSType::EHandleDSTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EReadType GetType() const; { return fType; }. const char * GetName() const; { return fName; }. TPBHandleDSType(EHandleDSType type = kReleaseCache); { }. virtual ~TPBHandleDSType(); { }. Bool_t IsReleaseCache() const; { return (fType == kReleaseCache) ? kTRUE : kFALSE; }. Bool_t IsCheckCache() const; { return (fType == kCheckCache) ? kTRUE : kFALSE; }. Bool_t IsRemoveFiles() const; { return (fType == kRemoveFiles) ? kTRUE : kFALSE; }. Bool_t IsCopyFiles() const; { return (fType == kCopyFiles) ? kTRUE : kFALSE; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id: TProofBenchTypes.h 40115 2011-07-04 11:41:46Z ganis $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPBHandleDSType.html:5509,Inherit,Inheritance,5509,root/html532/TPBHandleDSType.html,https://root.cern,https://root.cern/root/html532/TPBHandleDSType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ualGLPainter;  CTVirtualGraphPainterAbstract interface to a histogram painter ;  CTVirtualHistPainterAbstract interface to a histogram painter ;  CTVirtualIndexAbstract interface for Tree Index ;  CTVirtualIsAProxy;  CTVirtualMagFieldAbstract class for magnetic field ;  CTVirtualMCAbstract Monte Carlo interface ;  CTVirtualMCApplicationInterface to a user Monte Carlo application ;  CTVirtualMCDecayerAbstract base class for particle decays ;  CTVirtualMCGeometryInterface to Monte Carlo geometry construction ;  CTVirtualMCStackInterface to a user defined particles stack ;  CTVirtualMonitoringReader;  CTVirtualMonitoringWriter;  CTVirtualMutexThis class implements a mutex interface ;  CTVirtualObjectWrapper around an object and giving indirect access to its content even if the object is not of a class in the Cint/Reflex dictionary ;  ►CTVirtualPacketizerThe packetizer is a load balancing object created for each query ;  CTVirtualSlaveStat;  CTVirtualPadTVirtualPad is an abstract base class for the Pad and Canvas classes ;  CTVirtualPadEditorAbstract base class used by ROOT graphics editor ;  CTVirtualPadPainterTo make it possible to use GL for 2D graphic in a TPad/TCanvas ;  CTVirtualPerfStatsProvides the interface for the PROOF internal performance measurement and event tracing ;  CTVirtualProofPlayerAbstract interface for the PROOF player ;  CTVirtualPSTVirtualPS is an abstract interface to Postscript, PDF, SVG ;  CTVirtualQConnectionMediates the link between the signal and the slot ;  CTVirtualRefProxy;  CTVirtualStreamerInfoAbstract Interface class describing Streamer information for one class ;  CTVirtualTableInterface;  CTVirtualTreePlayerAbstract base class defining the interface for the plugins that implement Draw, Scan, Process, MakeProxy, etc ;  CTVirtualVectorIterators;  CTVirtualViewer3DAbstract 3D shapes viewer ;  CTVirtualXSemi-Abstract base class defining a generic interface to the underlying, low level, native graphics backend (X11, Win32, MacOS, OpenGL.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:207417,plugin,plugins,207417,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,2,['plugin'],['plugins']
Modifiability,"ualMCDecayer () override;  ; virtual void Decay (Int_t idpart, TLorentzVector *p)=0;  Decay a particle of type IDPART (PDG code) and momentum P. ;  ; virtual void ForceDecay ()=0;  Force a particle decay mode. ;  ; virtual Float_t GetLifetime (Int_t kf)=0;  Get the life-time of a particle of type KF (a PDG code). ;  ; virtual Float_t GetPartialBranchingRatio (Int_t ipart)=0;  Get the partial branching ratio for a particle of type IPART (a PDG code). ;  ; virtual Int_t ImportParticles (TClonesArray *particles)=0;  Get the decay products into the passed PARTICLES TClonesArray of TParticles. ;  ; virtual void Init ()=0;  Initialize the decayer. ;  ; TClass * IsA () const override;  ; virtual void ReadDecayTable ()=0;  Read in particle data from an ASCII file. ;  ; virtual void SetForceDecay (Int_t type)=0;  Force a particular decay type. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMCDecayer.html:1587,inherit,inherited,1587,doc/master/classTVirtualMCDecayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualMCDecayer.html,1,['inherit'],['inherited']
Modifiability,"ualStreamerInfo * TClass::FindStreamerInfo ; (; TObjArray * ; arr, . UInt_t ; checksum . ); const. protected . Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ; Definition at line 7066 of file TClass.cxx. ◆ FindStreamerInfo() [2/2]. TVirtualStreamerInfo * TClass::FindStreamerInfo ; (; UInt_t ; checksum, . Bool_t ; isTransient = kFALSE . ); const. Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ; Definition at line 7036 of file TClass.cxx. ◆ FindStreamerInfoAbstractEmulated(). TVirtualStreamerInfo * TClass::FindStreamerInfoAbstractEmulated ; (; UInt_t ; checksum); const. For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ; If the object does not exist, it is created; Warning: If we create a new streamer info, whether or not the build optimizes is controlled externally to us by a global variable! Don't call us unless you have set that variable properly with TStreamer::Optimize()! ; Definition at line 4772 of file TClass.cxx. ◆ ForceReload(). void TClass::ForceReload ; (; TClass * ; oldcl). we found at least one equivalent. ; let's force a reload ; Definition at line 1336 of file TClass.cxx. ◆ GetActualClass(). TClass * TClass::GetActualClass ; (; const void * ; object); const. Return a pointer to the real class of the object. ; This is equivalent to object->IsA() when the class has a ClassDef. It is REQUIRED that object is coming from a proper pointer to the class represented by 'this'. Example: Special case: class MyClass : public AnotherClass, public TObject; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one must do: TObject *obj = (TObject*)((void*)myobject)directory->Get(""some object of MyClass"");; MyClass::Class()->GetActualClass(obj); // this would be wrong!!!; Also if the class represented by 'this' and NONE of its p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:68604,variab,variable,68604,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,2,['variab'],['variable']
Modifiability,"ualStreamerInfo * TClass::FindStreamerInfo ; (; TObjArray * ; arr, . UInt_t ; checksum . ); const. protected . Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ; Definition at line 7133 of file TClass.cxx. ◆ FindStreamerInfo() [2/2]. TVirtualStreamerInfo * TClass::FindStreamerInfo ; (; UInt_t ; checksum, . Bool_t ; isTransient = kFALSE . ); const. Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. ; Definition at line 7103 of file TClass.cxx. ◆ FindStreamerInfoAbstractEmulated(). TVirtualStreamerInfo * TClass::FindStreamerInfoAbstractEmulated ; (; UInt_t ; checksum); const. For the case where the requestor class is emulated and this class is abstract, returns a pointer to the TVirtualStreamerInfo object for version with an emulated representation whether or not the class is loaded. ; If the object does not exist, it is created; Warning: If we create a new streamer info, whether or not the build optimizes is controlled externally to us by a global variable! Don't call us unless you have set that variable properly with TStreamer::Optimize()! ; Definition at line 4839 of file TClass.cxx. ◆ ForceReload(). void TClass::ForceReload ; (; TClass * ; oldcl). we found at least one equivalent. ; let's force a reload ; Definition at line 1403 of file TClass.cxx. ◆ GetActualClass(). TClass * TClass::GetActualClass ; (; const void * ; object); const. Return a pointer to the real class of the object. ; This is equivalent to object->IsA() when the class has a ClassDef. It is REQUIRED that object is coming from a proper pointer to the class represented by 'this'. Example: Special case: class MyClass : public AnotherClass, public TObject; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one must do: TObject *obj = (TObject*)((void*)myobject)directory->Get(""some object of MyClass"");; MyClass::Class()->GetActualClass(obj); // this would be wrong!!!; Also if the class represented by 'this' and NONE of its p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:68605,variab,variable,68605,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,2,['variab'],['variable']
Modifiability,"ualX. ;  ; void SetTextColor (Color_t tcolor) override;  Delegate to gVirtualX. ;  ; void SetTextFont (Font_t tfont) override;  Delegate to gVirtualX. ;  ; void SetTextSize (Float_t tsize) override;  Delegate to gVirtualX. ;  ; void SetTextSizePixels (Int_t npixels) override;  Delegate to gVirtualX. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualPadPainter; virtual ~TVirtualPadPainter ();  Virtual dtor. ;  ; virtual void InitPainter ();  Empty definition. ;  ; virtual void InvalidateCS ();  Empty definition. ;  ; virtual void LockPainter ();  Empty definition. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPadPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPadPainter * PadPainter (Option_t *opt="""");  Create a pad painter of specified type. ;  . Private Member Functions;  TPadPainter (const TPadPainter &)=delete;  ;  TPadPainter (TPadPainter &&)=delete;  ; TPadPainter & operator= (const TPadPainter &)=delete;  ; TPadPainter & operator= (TPadPainter &&)=delete;  . Additional Inherited Members;  Public Types inherited from TVirtualPadPainter; enum  EBoxMode { kHollow; , kFilled; };  ; enum  ETextMode { kClear; , kOpaque; };  . #include <TPadPainter.h>. Inheritance diagram for TPadPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPadPainter() [1/3]. TPadPainter::TPadPainter ; (; ). Empty ctor. We need it only because of explicit copy ctor. ; Definition at line 72 of file TPadPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPadPainter.html:5354,inherit,inherited,5354,doc/master/classTPadPainter.html,https://root.cern,https://root.cern/doc/master/classTPadPainter.html,1,['inherit'],['inherited']
Modifiability,"ual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Double_t fXmax;  ; Double_t fXmin;  ; Double_t fYmax;  ; Double_t fYmin;  ; Double_t fZmax;  ; Double_t fZmin;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAutoBinVal.html:9241,inherit,inherited,9241,doc/master/classTAutoBinVal.html,https://root.cern,https://root.cern/doc/master/classTAutoBinVal.html,1,['inherit'],['inherited']
Modifiability,"ual_b);  ; virtual void Terminate ();  The Terminate() function is the last function to be called during a query. ;  ; virtual Int_t Version () const;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetStatus (Long64_t status);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelEvent.html:3070,inherit,inherited,3070,doc/master/classTSelEvent.html,https://root.cern,https://root.cern/doc/master/classTSelEvent.html,1,['inherit'],['inherited']
Modifiability,"ual_b);  ;  Public Member Functions inherited from TEveProjected;  TEveProjected ();  Constructor. ;  ; virtual ~TEveProjected ();  Destructor. ;  ; Float_t GetDepth () const;  ; TEveProjectionManager * GetManager () const;  ; TEveProjectable * GetProjectable () const;  ; virtual void SetDepth (Float_t d);  Set depth coordinate for the element. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnRefProjectable (TEveProjectable *assumed_parent, bool notifyParent=true);  Remove reference to projectable. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t GetDebugCornerPoints ();  Get state of fgDebugCornerPoints static. ;  ; static void SetDebugCornerPoints (Bool_t d);  Set state of fgDebugCornerPoints static. ;  ;  Static Public Member Functions inherited from TEveShape; static void CheckAndFixBoxOrientationEv (TEveVector box[8]);  Make sure box orientation is consistent with standard arrangement. ;  ; static void CheckAndFixBoxOrientationFv (Float_t box[8][3]);  Make sure box orientation is consistent with standard arrangement. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FindConvexHull (const vVector2_t &pin, vVector2_t &pout, TEveElement *caller=nullptr);  Determines the convex-hull of points in pin. ;  ; static Bool_t IsBoxOrientationConsistentEv (const TEveVector box[8]);  Checks if the first face normal is pointing into the other direction as the vector pointing towards the opposite face. ;  ; static Bool_t IsBoxOrientationConsistentFv (const Float_t box[8][3]);  Checks if the first face normal is pointing into the other direction as the vector pointing towards the opposite face. ;  ;  Static Public Member Functions inherited from TEveElementList; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBoxProjected.html:29908,inherit,inherited,29908,doc/master/classTEveBoxProjected.html,https://root.cern,https://root.cern/doc/master/classTEveBoxProjected.html,1,['inherit'],['inherited']
Modifiability,"ual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom.html:23509,inherit,inherited,23509,doc/master/classTRandom.html,https://root.cern,https://root.cern/doc/master/classTRandom.html,1,['inherit'],['inherited']
Modifiability,"uantity of interest, which depends smoothly; on the observable quantities ; , which we'll denote by. . Given a training sample of tuples of the form,; (TMultiDimFit::AddRow). where ; are independent; variables, is the known, quantity dependent at ; ,; and is the square error in , the class; TMultiDimFit; will; try to find the parameterization. (1). such that. (2). is minimal. Here ; are monomials, or Chebyshev or Legendre; polynomials, labelled ; , in each variable; , ; . So what TMultiDimFit does, is to determine the number of; terms , and then terms (or functions) , and the ; coefficients , so that is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error ; (TMultiDimFit::SetMinRelativeError), and ; will be considered minimized when. Optionally, the user may impose a functional expression by specifying; the powers of each variable in specified functions ; (TMultiDimFit::SetPowers). In that case, only the; coefficients is calculated by the class. Limiting the Number of Terms. As always when dealing with fits, there's a real chance of; over fitting. As is well-known, it's always possible to fit an; polynomial in to points with ; , but; the polynomial is not likely to fit new data at all; [1]. Therefore, the user is asked to provide an upper; limit, to the number of terms in ; (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of to choose from, the; user is asked to give the maximum power. , of each variable; to be considered in the minimization of ; (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable , is; to perform a regular fit to the dependent quantity , using a; polynomial only in . The maximum power is is then the; power that does not significantly improve the one-dimensional; least-square fit over to [5]. There are still a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:3260,variab,variable,3260,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,4,['variab'],['variable']
Modifiability,"uare(bool on=true)Definition LogLikelihoodFCN.h:139; ROOT::Fit::LogLikelihoodFCN::Gradientvirtual void Gradient(const double *x, double *g) constDefinition LogLikelihoodFCN.h:127; ROOT::Fit::LogLikelihoodFCN::BaseObjFunction::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunctionDefinition LogLikelihoodFCN.h:47; ROOT::Fit::LogLikelihoodFCN::Clonevirtual BaseFunction * Clone() constclone the function (need to return Base for Windows)Definition LogLikelihoodFCN.h:112; ROOT::Fit::LogLikelihoodFCN::~LogLikelihoodFCNvirtual ~LogLikelihoodFCN()Destructor (no operations)Definition LogLikelihoodFCN.h:81; ROOT::Fit::LogLikelihoodFCN::NFitPointsvirtual unsigned int NFitPoints() constDefinition LogLikelihoodFCN.h:118; ROOT::Fit::LogLikelihoodFCN::fGradstd::vector< double > fGradfor derivativesDefinition LogLikelihoodFCN.h:174; ROOT::Fit::LogLikelihoodFCN::Type_tBaseObjFunction::Type_t Type_tDefinition LogLikelihoodFCN.h:51; ROOT::Fit::LogLikelihoodFCN::fIsExtendedbool fIsExtendedflag for indicating if likelihood is extendedDefinition LogLikelihoodFCN.h:168; ROOT::Fit::LogLikelihoodFCN::fExecutionPolicy::ROOT::EExecutionPolicy fExecutionPolicyExecution policy.Definition LogLikelihoodFCN.h:176; ROOT::Fit::LogLikelihoodFCN::fNEffPointsunsigned int fNEffPointsnumber of effective points used in the fitDefinition LogLikelihoodFCN.h:172; ROOT::Fit::LogLikelihoodFCN::DataElementvirtual double DataElement(const double *x, unsigned int i, double *g, double *h=nullptr, bool fullHessian=false) consti-th likelihood contribution and its gradientDefinition LogLikelihoodFCN.h:121; ROOT::Fit::LogLikelihoodFCN::DoEvalvirtual double DoEval(const double *x) constEvaluation of the function (required by interface)Definition LogLikelihoodFCN.h:155; ROOT::Fit::UnBinDataClass describing the un-binned data sets (just x coordinates values) of any dimensions.Definition UnBinData.h:46; ROOT::Math::BasicFitMethodFunction< DerivFunType >::Type_tType_tenumeration specifying the possible fit method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html:11386,extend,extendedDefinition,11386,doc/master/LogLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html,1,['extend'],['extendedDefinition']
Modifiability,"uate primitive formula. ;  ; Double_t EvalPrimitive1 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive2 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive3 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive4 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Short_t GetAction (Int_t code) const;  ; Short_t GetActionOptimized (Int_t code) const;  ; Int_t GetActionParam (Int_t code) const;  ; Int_t GetActionParamOptimized (Int_t code) const;  ; Int_t * GetOper () const;  ; Int_t * GetOperOptimized () const;  ; void MakePrimitive (const char *expr, Int_t pos);  MakePrimitive find TFormulaPrimitive replacement for some operands. ;  ; Int_t PreCompile ();  pointer to optimal function ;  ; void SetAction (Int_t code, Int_t value, Int_t param=0);  ; void SetActionOptimized (Int_t code, Int_t value, Int_t param=0);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObjArray fAliases;  ! List of TTreeFormula for each alias used. ;  ; std::vector< std::string > fAliasesUsed;  ! List of aliases used during the parsing of the expression. ;  ; TAxis * fAxis;  ! pointer to histogram axis if this is a string ;  ; TObjArray fBranches;  ! List of branches to read. Similar to fLeaves but duplicates are zeroed out. ;  ; Int_t fCodes [kMAXCODES];  List of leaf numbers referenced in formula. ;  ; LongDouble_t * fConstLD;  ! local version of fConsts able to store bigger numbers ;  ; Int_t fCumulSizes [kMAXCODES][kMAXFORMDIM];  Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated. ;  ; TObjArray fDataMembers;  ! List of leaf data members ;  ; bool fDidBooleanOptimization;  ! True if ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:27002,inherit,inherited,27002,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['inherit'],['inherited']
Modifiability,"ub, const char* mesg). Data Members; public:. enum { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tfDimensionDimension of the current expression; TStringfInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*fManager; Int_tfMultiplicityIndicator of the variability of the size of entries; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*fSelectPointer to selection formula; TStringfSelection; TStatus*fStatus; Long64_tTSelector::fStatusselector status; TTree*fTree; TTreeDrawArgsParserfTreeDrawArgsParser; TTreeFormula*fVar[4]Pointer to variable formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDraw(); Destructor. void Init(TTree* ); Init the tree. Bool_t Notify(); Called when a new tree is loaded. void Begin(TTree* ); Executed by the client before processing. void SlaveBegin(TTree* ); Executed by each slave before processing. Bool_t ProcessSingle(Long64_t , Int_t ); Processes a single variable from an entry. Bool_t Process(Long64_t ); Executed for each entry. void SlaveTerminate(void); Executed by each slave after the processing has finished,; before returning the results to the client. void Terminate(void); Executed by the client after getting the processing retults. void ClearFormula(); Delete internal buffers. void SetCanvas(const char* objname); Move to a canvas named <name>_canvas; create th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofDraw.html:7220,variab,variable,7220,root/html528/TProofDraw.html,https://root.cern,https://root.cern/root/html528/TProofDraw.html,1,['variab'],['variable']
Modifiability,"ubdat, Int_t ngroup, Int_t* indsubdat). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDSymfCorrelationcorrelation matrix; TMatrixDSymfCovariancecovariance matrix estimate; TMatrixDfDatathe original data; Int_tfExactif there was an exact fit, stores the number of points on a hyperplane ; Int_tfHalgorithm parameter, determining the subsample size; TVectorDfHyperplanein case more than fH observations lie on a hyperplane; TMatrixDSymfInvcovarianceinverse of the covariance matrix; TVectorDfMeanlocation estimate (mean values); Int_tfNnumber of observations; Int_tfNvarnumber of variables; TArrayIfOutarray of indexes of ouliers, size <0.5*n; TVectorDfRdarray of robust distances, size n; TVectorDfSdarray of standard deviations; Int_tfVarTempnumber of variables already added to the data matrix; Int_tfVecTempnumber of observations already added to the data matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRobustEstimator(); this constructor should be used in a univariate case:; first call this constructor, then - the EvaluateUni(..) function. TRobustEstimator(Int_t nvectors, Int_t nvariables, Int_t hh = 0); constructor. void AddColumn(Double_t* col); adds a column to the data matrix; it is assumed that the column has size fN; variable fVarTemp keeps the number of columns l; already added. void AddRow(Double_t* row); adds a vector to the data matrix; it is supposed that the vector is of size fNvar. void Evaluate(); Finds the estimate of multivariate mean and variance. void EvaluateUni(Int_t nvectors, Double_t* data, Double_t& mean, Double_t& sigma, Int_t hh = 0); for the univariate case; estimates of location and scatter are returned in mean and sigma parameters; the algorithm works o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRobustEstimator.html:11889,variab,variables,11889,root/html528/TRobustEstimator.html,https://root.cern,https://root.cern/root/html528/TRobustEstimator.html,6,['variab'],['variables']
Modifiability,"uble * Errors () const override;  return errors at the minimum ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; bool ProvidesError () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ;  Public Member Functions inherited from ROOT::Math::BasicMinimizer;  BasicMinimizer ();  Default constructor. ;  ;  ~BasicMinimizer () override;  Destructor. ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &varObj) const override;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; const ROOT::Math::IMultiGradFunction * GradObjFunction () const;  return pointer to used gradient object function (NULL if gradient is not supported) ;  ; bool IsFixedVariable (unsigned int ivar) const override;  query if an existing variable is fixed (i.e. ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NDim () const override;  number of dimensions ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) ;  ; virtual unsigned int NPar () const;  total number of parameter defined ;  ; const ROOT::Math::IMultiGenFunction * ObjFunction () const;  return pointer to used objective function ;  ; void PrintResult () const;  print result of minimization ;  ; bool ReleaseVariable (unsigned int ivar) override;  release an existing variable ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; bool SetLimitedVariable ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html:1918,variab,variable,1918,doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,4,['variab'],['variable']
Modifiability,"uble > *samplingHint=nullptr);  Add points calculated with the specified function, over the range (xlo,xhi). ;  ; void addRange (const RooAbsFunc &func, double x1, double x2, double y1, double y2, double minDy, double minDx, int numee, bool doEEVal, double eeVal, double epsilon);  Fill the range (x1,x2) with points calculated using func(&x). ;  ; void calcBandInterval (const std::vector< RooCurve * > &plusVar, const std::vector< RooCurve * > &minusVar, Int_t i, const TMatrixD &V, double Z, double &lo, double &hi) const;  Retrieve variation points from curves. ;  ; void calcBandInterval (const std::vector< RooCurve * > &variations, Int_t i, double Z, double &lo, double &hi, bool approxGauss) const;  ; void initialize ();  Perform initialization that is common to all curves. ;  ; void shiftCurveToZero ();  Find lowest point in curve and move all points in curve so that lowest point will go exactly through zero. ;  ;  Protected Member Functions inherited from TGraph; virtual Double_t ** Allocate (Int_t newsize);  Allocate internal data structures for newsize points. ;  ; Double_t ** AllocateArrays (Int_t Narrays, Int_t arraySize);  Allocate arrays. ;  ; virtual void CopyAndRelease (Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin);  Copy points from fX and fY to arrays[0] and arrays[1] or to fX and fY if arrays == 0 and ibegin != iend. ;  ; virtual Bool_t CopyPoints (Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin);  Copy points from fX and fY to arrays[0] and arrays[1] or to fX and fY if arrays == 0 and ibegin != iend. ;  ; Bool_t CtorAllocate ();  In constructors set fNpoints than call this method. ;  ; virtual Bool_t DoMerge (const TGraph *g);  protected function to perform the merge operation of a graph ;  ; Double_t ** ExpandAndCopy (Int_t size, Int_t iend);  if size > fMaxSize allocate new arrays of 2*size points and copy iend first points. ;  ; virtual void FillZero (Int_t begin, Int_t end, Bool_t from_ctor=kTRUE);  Set zero values for po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:35758,inherit,inherited,35758,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,1,['inherit'],['inherited']
Modifiability,"uble RooAbsPdf::expectedEvents ; (; const RooArgSet & ; nset); const. inline . Return expected number of events to be used in calculation of extended likelihood. ; This function should not be overridden, as it just redirects to the actual virtual function but takes a RooArgSet reference instead of pointer. See alsoexpectedEvents(const RooArgSet*) const ; Definition at line 232 of file RooAbsPdf.h. ◆ expectedEvents() [2/2]. double RooAbsPdf::expectedEvents ; (; const RooArgSet * ; nset); const. virtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented in RooNormalizedPdf, RooFixedProdPdf, RooAddModel, RooAddPdf, RooBinSamplingPdf, RooExtendedTerm, RooExtendPdf, RooProdPdf, RooProjectedPdf, RooRealSumPdf, RooSimultaneous, and xRooProjectedPdf.; Definition at line 2398 of file RooAbsPdf.cxx. ◆ extendedTerm() [1/3]. double RooAbsPdf::extendedTerm ; (; double ; sumEntries, . double ; expected, . double ; sumEntriesW2 = 0.0, . bool ; doOffset = false . ); const. Definition at line 730 of file RooAbsPdf.cxx. ◆ extendedTerm() [2/3]. double RooAbsPdf::extendedTerm ; (; double ; sumEntries, . RooArgSet const * ; nset, . double ; sumEntriesW2 = 0.0, . bool ; doOffset = false . ); const. Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ; For successful operation, the PDF implementation must indicate that it is extendable by overloading canBeExtended(), and must implement the expectedEvents() function.; Parameters. [in]sumEntriesThe number of observed events. ; [in]nsetThe normalization set when asking the pdf for the expected number of events. ; [in]observedSumW2The number of observed events when weighting with squared weights. If non-zero, the weight-squared error correction ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:98788,extend,extendedTerm,98788,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['extend'],['extendedTerm']
Modifiability,"uble nu) const;  t student distribution ;  ; double Rayleigh (double sigma) const;  Rayleigh distribution. ;  ; double Logistic (double a) const;  Logistic distribution. ;  ; double Pareto (double a, double b) const;  Pareto distribution. ;  ; void Dir2D (double &x, double &y) const;  generate random numbers in a 2D circle of radious 1 ;  ; void Dir3D (double &x, double &y, double &z) const;  generate random numbers in a 3D sphere of radious 1 ;  ; unsigned int Poisson (double mu) const;  Poisson distribution. ;  ; unsigned int Binomial (double p, unsigned int n) const;  Binomial distribution. ;  ; unsigned int NegativeBinomial (double p, double n) const;  Negative Binomial distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p) const;  Multinomial distribution. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLRandomEngine; void SetType (GSLRngWrapper *r);  internal method used by the derived class to set the type of generators ;  ; GSLRngWrapper * Engine ();  internal method to return the engine Used by class like GSLMCIntegrator to set the engine ;  . #include <Math/GSLRndmEngines.h>. Inheritance diagram for ROOT::Math::GSLRngMixMax:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef GSLRandomEngine ROOT::Math::GSLRngMixMax::BaseType. Definition at line 519 of file GSLRndmEngines.h. Constructor & Destructor Documentation. ◆ GSLRngMixMax(). ROOT::Math::GSLRngMixMax::GSLRngMixMax ; (; ). Definition at line 496 of file GSLRndmEngines.cxx. ◆ ~GSLRngMixMax(). ROOT::Math::GSLRngMixMax::~GSLRngMixMax ; (; ). override . Definition at line 505 of file GSLRndmEngines.cxx. Libraries for ROOT::Math::GSLRngMixMax:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLRndmEngines.h; math/mathmore/src/GSLRndmEngines.cxx. ROOTMathGS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html:4670,inherit,inherited,4670,doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,1,['inherit'],['inherited']
Modifiability,"uble nu) const;  t student distribution ;  ; double Rayleigh (double sigma) const;  Rayleigh distribution. ;  ; double Logistic (double a) const;  Logistic distribution. ;  ; double Pareto (double a, double b) const;  Pareto distribution. ;  ; void Dir2D (double &x, double &y) const;  generate random numbers in a 2D circle of radious 1 ;  ; void Dir3D (double &x, double &y, double &z) const;  generate random numbers in a 3D sphere of radious 1 ;  ; unsigned int Poisson (double mu) const;  Poisson distribution. ;  ; unsigned int Binomial (double p, unsigned int n) const;  Binomial distribution. ;  ; unsigned int NegativeBinomial (double p, double n) const;  Negative Binomial distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p) const;  Multinomial distribution. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLRandomEngine; void SetType (GSLRngWrapper *r);  internal method used by the derived class to set the type of generators ;  ; GSLRngWrapper * Engine ();  internal method to return the engine Used by class like GSLMCIntegrator to set the engine ;  . #include <Math/GSLRndmEngines.h>. Inheritance diagram for ROOT::Math::GSLRngRanLuxD1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef GSLRandomEngine ROOT::Math::GSLRngRanLuxD1::BaseType. Definition at line 401 of file GSLRndmEngines.h. Constructor & Destructor Documentation. ◆ GSLRngRanLuxD1(). ROOT::Math::GSLRngRanLuxD1::GSLRngRanLuxD1 ; (; ). Definition at line 424 of file GSLRndmEngines.cxx. Libraries for ROOT::Math::GSLRngRanLuxD1:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLRndmEngines.h; math/mathmore/src/GSLRndmEngines.cxx. ROOTMathGSLRngRanLuxD1. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html:4737,inherit,inherited,4737,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html,1,['inherit'],['inherited']
Modifiability,"uble nu) const;  t student distribution ;  ; double Rayleigh (double sigma) const;  Rayleigh distribution. ;  ; double Logistic (double a) const;  Logistic distribution. ;  ; double Pareto (double a, double b) const;  Pareto distribution. ;  ; void Dir2D (double &x, double &y) const;  generate random numbers in a 2D circle of radious 1 ;  ; void Dir3D (double &x, double &y, double &z) const;  generate random numbers in a 3D sphere of radious 1 ;  ; unsigned int Poisson (double mu) const;  Poisson distribution. ;  ; unsigned int Binomial (double p, unsigned int n) const;  Binomial distribution. ;  ; unsigned int NegativeBinomial (double p, double n) const;  Negative Binomial distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p) const;  Multinomial distribution. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLRandomEngine; void SetType (GSLRngWrapper *r);  internal method used by the derived class to set the type of generators ;  ; GSLRngWrapper * Engine ();  internal method to return the engine Used by class like GSLMCIntegrator to set the engine ;  . #include <Math/GSLRndmEngines.h>. Inheritance diagram for ROOT::Math::GSLRngRanLuxD2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef GSLRandomEngine ROOT::Math::GSLRngRanLuxD2::BaseType. Definition at line 415 of file GSLRndmEngines.h. Constructor & Destructor Documentation. ◆ GSLRngRanLuxD2(). ROOT::Math::GSLRngRanLuxD2::GSLRngRanLuxD2 ; (; ). Definition at line 431 of file GSLRndmEngines.cxx. Libraries for ROOT::Math::GSLRngRanLuxD2:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLRndmEngines.h; math/mathmore/src/GSLRndmEngines.cxx. ROOTMathGSLRngRanLuxD2. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html:4737,inherit,inherited,4737,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html,1,['inherit'],['inherited']
Modifiability,"uble nu) const;  t student distribution ;  ; double Rayleigh (double sigma) const;  Rayleigh distribution. ;  ; double Logistic (double a) const;  Logistic distribution. ;  ; double Pareto (double a, double b) const;  Pareto distribution. ;  ; void Dir2D (double &x, double &y) const;  generate random numbers in a 2D circle of radious 1 ;  ; void Dir3D (double &x, double &y, double &z) const;  generate random numbers in a 3D sphere of radious 1 ;  ; unsigned int Poisson (double mu) const;  Poisson distribution. ;  ; unsigned int Binomial (double p, unsigned int n) const;  Binomial distribution. ;  ; unsigned int NegativeBinomial (double p, double n) const;  Negative Binomial distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p) const;  Multinomial distribution. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLRandomEngine; void SetType (GSLRngWrapper *r);  internal method used by the derived class to set the type of generators ;  ; GSLRngWrapper * Engine ();  internal method to return the engine Used by class like GSLMCIntegrator to set the engine ;  . #include <Math/GSLRndmEngines.h>. Inheritance diagram for ROOT::Math::GSLRngRanLuxS1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef GSLRandomEngine ROOT::Math::GSLRngRanLuxS1::BaseType. Definition at line 371 of file GSLRndmEngines.h. Constructor & Destructor Documentation. ◆ GSLRngRanLuxS1(). ROOT::Math::GSLRngRanLuxS1::GSLRngRanLuxS1 ; (; ). Definition at line 410 of file GSLRndmEngines.cxx. Libraries for ROOT::Math::GSLRngRanLuxS1:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLRndmEngines.h; math/mathmore/src/GSLRndmEngines.cxx. ROOTMathGSLRngRanLuxS1. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html:4721,inherit,inherited,4721,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html,1,['inherit'],['inherited']
Modifiability,"uble nu) const;  t student distribution ;  ; double Rayleigh (double sigma) const;  Rayleigh distribution. ;  ; double Logistic (double a) const;  Logistic distribution. ;  ; double Pareto (double a, double b) const;  Pareto distribution. ;  ; void Dir2D (double &x, double &y) const;  generate random numbers in a 2D circle of radious 1 ;  ; void Dir3D (double &x, double &y, double &z) const;  generate random numbers in a 3D sphere of radious 1 ;  ; unsigned int Poisson (double mu) const;  Poisson distribution. ;  ; unsigned int Binomial (double p, unsigned int n) const;  Binomial distribution. ;  ; unsigned int NegativeBinomial (double p, double n) const;  Negative Binomial distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p) const;  Multinomial distribution. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLRandomEngine; void SetType (GSLRngWrapper *r);  internal method used by the derived class to set the type of generators ;  ; GSLRngWrapper * Engine ();  internal method to return the engine Used by class like GSLMCIntegrator to set the engine ;  . #include <Math/GSLRndmEngines.h>. Inheritance diagram for ROOT::Math::GSLRngRanLuxS2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef GSLRandomEngine ROOT::Math::GSLRngRanLuxS2::BaseType. Definition at line 386 of file GSLRndmEngines.h. Constructor & Destructor Documentation. ◆ GSLRngRanLuxS2(). ROOT::Math::GSLRngRanLuxS2::GSLRngRanLuxS2 ; (; ). Definition at line 417 of file GSLRndmEngines.cxx. Libraries for ROOT::Math::GSLRngRanLuxS2:. [legend]; The documentation for this class was generated from the following files:; math/mathmore/inc/Math/GSLRndmEngines.h; math/mathmore/src/GSLRndmEngines.cxx. ROOTMathGSLRngRanLuxS2. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html:4720,inherit,inherited,4720,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html,1,['inherit'],['inherited']
Modifiability,"uble val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html:6794,variab,variable,6794,root/html526/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html,16,"['Variab', 'variab']","['VariableIndex', 'variable']"
Modifiability,"uble xhi) const;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Structure printing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:27536,config,configuration,27536,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,15,['config'],['configuration']
Modifiability,"uble xhi) const;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Structure printing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:31846,config,configuration,31846,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,88,['config'],['configuration']
Modifiability,"uble xhi) const;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Structure printing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstVar.html:16732,config,configuration,16732,doc/master/classRooConstVar.html,https://root.cern,https://root.cern/doc/master/classRooConstVar.html,1,['config'],['configuration']
Modifiability,"uble& a6); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,2U>&Unit(). Data Members; public:. static ROOT::Math::SVector<double,2>::(anonymous)kSize. private:. doublefArray[2]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SVector_double_2_.html:4269,Inherit,Inheritance,4269,root/html602/ROOT__Math__SVector_double_2_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SVector_double_2_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble& a6); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,3U>&Unit(). Data Members; public:. static ROOT::Math::SVector<double,3>::(anonymous)kSize. private:. doublefArray[3]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SVector_double_3_.html:4269,Inherit,Inheritance,4269,root/html602/ROOT__Math__SVector_double_3_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SVector_double_3_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble& a6); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,4U>&Unit(). Data Members; public:. static ROOT::Math::SVector<double,4>::(anonymous)kSize. private:. doublefArray[4]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SVector_double_4_.html:4269,Inherit,Inheritance,4269,root/html602/ROOT__Math__SVector_double_4_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SVector_double_4_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble& a6); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,5U>&Unit(). Data Members; public:. static ROOT::Math::SVector<double,5>::(anonymous)kSize. private:. doublefArray[5]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SVector_double_5_.html:4269,Inherit,Inheritance,4269,root/html602/ROOT__Math__SVector_double_5_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SVector_double_5_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble& a6); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,6U>&Unit(). Data Members; public:. static ROOT::Math::SVector<double,6>::(anonymous)kSize. private:. doublefArray[6]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SVector_double_6_.html:4269,Inherit,Inheritance,4269,root/html602/ROOT__Math__SVector_double_6_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SVector_double_6_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble& a6); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,7U>&Unit(). Data Members; public:. static ROOT::Math::SVector<double,7>::(anonymous)kSize. private:. doublefArray[7]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SVector_double_7_.html:4269,Inherit,Inheritance,4269,root/html602/ROOT__Math__SVector_double_7_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SVector_double_7_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble); voidROOT::Minuit2::MnApplication::SetValue(unsigned int, double); voidROOT::Minuit2::MnApplication::SetValue(const char*, double); const ROOT::Minuit2::MnUserParameterState&ROOT::Minuit2::MnApplication::State() const; const ROOT::Minuit2::MnStrategy&ROOT::Minuit2::MnApplication::Strategy() const; doubleROOT::Minuit2::MnApplication::Value(unsigned int) const; doubleROOT::Minuit2::MnApplication::Value(const char*) const; unsigned intROOT::Minuit2::MnApplication::VariableParameters() const. private:. ROOT::Minuit2::MnMinimize&operator=(const ROOT::Minuit2::MnMinimize&). Data Members; protected:. const ROOT::Minuit2::FCNBase&ROOT::Minuit2::MnApplication::fFCN; unsigned intROOT::Minuit2::MnApplication::fNumCall; ROOT::Minuit2::MnUserParameterStateROOT::Minuit2::MnApplication::fState; ROOT::Minuit2::MnStrategyROOT::Minuit2::MnApplication::fStrategy; boolROOT::Minuit2::MnApplication::fUseGrad. private:. ROOT::Minuit2::CombinedMinimizerfMinimizer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnMinimize(const FCNBase& fcn, const std::vector<double>& par, const std::vector<double>& err, unsigned int stra = 1); construct from FCNBase + std::vector for parameters and errors. {}. MnMinimize(const FCNBase& fcn, const std::vector<double>& par, unsigned int nrow, const std::vector<double>& cov, unsigned int stra = 1); construct from FCNBase + std::vector for parameters and covariance. {}. MnMinimize(const FCNBase& fcn, const std::vector<double>& par, const MnUserCovariance& cov, unsigned int stra = 1); construct from FCNBase + std::vector for parameters and MnUserCovariance. {}. MnMinimize(const FCNBase& fcn, const MnUserParameters& par, unsigned int stra = 1); construct from FCNBase + MnUserParameters. {}. MnMinimize(const FCNBase& fcn, const MnUserParameters& par, const MnUserCovariance& cov, unsigned int stra = 1); construct from FCNBase + MnUserParameters + MnUserCovariance. {}. MnMinimize(const FCNBase& fcn, const MnUserParam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MnMinimize.html:5812,Inherit,Inheritance,5812,root/html532/ROOT__Minuit2__MnMinimize.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MnMinimize.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,uble* RooVectorDataStore::_extSumW2Array = nullptr. private . ! External sum of weights array ; Definition at line 582 of file RooVectorDataStore.h. ◆ _extWgtArray. const double* RooVectorDataStore::_extWgtArray = nullptr. private . ! External weight array ; Definition at line 579 of file RooVectorDataStore.h. ◆ _extWgtErrHiArray. const double* RooVectorDataStore::_extWgtErrHiArray = nullptr. private . ! External weight array - high error ; Definition at line 581 of file RooVectorDataStore.h. ◆ _extWgtErrLoArray. const double* RooVectorDataStore::_extWgtErrLoArray = nullptr. private . ! External weight array - low error ; Definition at line 580 of file RooVectorDataStore.h. ◆ _forcedUpdate. bool RooVectorDataStore::_forcedUpdate = false. private . ! Request for forced cache update ; Definition at line 589 of file RooVectorDataStore.h. ◆ _realfStoreList. std::vector<RealFullVector*> RooVectorDataStore::_realfStoreList. private . Definition at line 571 of file RooVectorDataStore.h. ◆ _realStoreList. std::vector<RealVector*> RooVectorDataStore::_realStoreList. private . Definition at line 570 of file RooVectorDataStore.h. ◆ _sumWeight. double RooVectorDataStore::_sumWeight = 0.0. private . Definition at line 576 of file RooVectorDataStore.h. ◆ _sumWeightCarry. double RooVectorDataStore::_sumWeightCarry = 0.0. private . Definition at line 577 of file RooVectorDataStore.h. ◆ _varsww. RooArgSet RooVectorDataStore::_varsww. private . Definition at line 567 of file RooVectorDataStore.h. ◆ _wgtVar. RooRealVar* RooVectorDataStore::_wgtVar = nullptr. private . Pointer to weight variable (if set) ; Definition at line 568 of file RooVectorDataStore.h. Libraries for RooVectorDataStore:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooVectorDataStore.h; roofit/roofitcore/src/RooVectorDataStore.cxx. RooVectorDataStore. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:12 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVectorDataStore.html:41930,variab,variable,41930,doc/master/classRooVectorDataStore.html,https://root.cern,https://root.cern/doc/master/classRooVectorDataStore.html,1,['variab'],['variable']
Modifiability,"uble* params); doubleSample(); intSampleDiscr(); boolSampleMulti(double* x); boolSetLogLevel(unsigned int iflag = 1); boolSetLogStream(); voidSetRandom(TRandom* r); voidSetSeed(unsigned int seed); TUnuran(TRandom* r = 0, unsigned int log = 0). protected:. boolSetContDistribution(const TUnuranContDist& dist); boolSetDiscreteDistribution(const TUnuranDiscrDist& dist); boolSetEmpiricalDistribution(const TUnuranEmpDist& dist); boolSetMethodAndInit(); boolSetMultiDistribution(const TUnuranMultiContDist& dist); boolSetRandomGenerator(). private:. TUnuran&operator=(const TUnuran& rhs); TUnuran(const TUnuran&). Data Members; protected:. auto_ptr<TUnuranBaseDist>fDistpointer for distribution wrapper; UNUR_GEN*fGenpointer to the UnuRan C generator struct; stringfMethodstring representing the method; TRandom*fRngpointer to ROOT random number generator; UNUR_DISTR*fUdistrpointer to the UnuRan C distribution struct; UNUR_URNG*fUrngpointer to Unuran C random generator struct. Class Charts. Inheritance Chart:. TUnuran. Function documentation; TUnuran(TRandom* r = 0, unsigned int log = 0); constructor implementation with a ROOT random generator; if no generator is given the ROOT default is used. ~TUnuran(); Destructor implementation. TUnuran(const TUnuran& ); Implementation of copy constructor. bool Init(const std::string & dist, const std::string & method); initialize with a string. bool Init(const TUnuranContDist& distr, const string& method = ""auto""); initialization with a distribution and and generator; the distribution object is copied in and managed by this class; use auto_ptr to manage previously existing distribution objects. bool Init(const TUnuranMultiContDist& distr, const string& method = ""hitro""); initialization with a distribution and method; the distribution object is copied in and managed by this class; use auto_ptr to manage previously existing distribution objects. bool Init(const TUnuranDiscrDist& distr, const string& method = ""auto""); initialization with a distr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnuran.html:1910,Inherit,Inheritance,1910,root/html602/TUnuran.html,https://root.cern,https://root.cern/root/html602/TUnuran.html,1,['Inherit'],['Inheritance']
Modifiability,"uble* x, const double* par, double* grad) const; virtual stringParameterName(unsigned int i) const; virtual const double*Parameters() const; voidSetAndCopyFunction(const TF1* f = 0); static voidSetDerivPrecision(double eps); virtual voidSetParameters(const double* p); ROOT::Math::WrappedMultiTF1WrappedMultiTF1(const ROOT::Math::WrappedMultiTF1& rhs); ROOT::Math::WrappedMultiTF1WrappedMultiTF1(TF1& f, unsigned int dim = 0). private:. virtual doubleDoEval(const double* x) const; virtual doubleDoEvalPar(const double* x, const double* p) const; virtual doubleDoParameterDerivative(const double* x, const double* p, unsigned int ipar) const. Data Members; private:. unsigned intfDimcached value of dimension; TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions; boolfOwnFuncflag to indicate we own the TF1 function pointer; boolfPolynomialflag for polynomial functions; static doublefgEpsepsilon used in derivative calculation h ~ eps |p|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedMultiTF1(TF1& f, unsigned int dim = 0). constructor from a function pointer to a TF1; If dim = 0 dimension is taken from TF1::GetNdim().; IN case of multi-dimensional function created using directly TF1 object the dimension; returned by TF1::GetNdim is always 1. The user must then pass the correct value of dim. virtual ~WrappedMultiTF1(). Destructor (no operations). Function pointer is not owned. { if (fOwnFunc && fFunc) delete fFunc; }. WrappedMultiTF1(const ROOT::Math::WrappedMultiTF1& rhs). Copy constructor. IMultiGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. unsigned int NDim() const; function dimension. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values from TF1). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__WrappedMultiTF1.html:3139,Inherit,Inheritance,3139,root/html604/ROOT__Math__WrappedMultiTF1.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__WrappedMultiTF1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble, double). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. static RooCFunction3Map<double,double,double,double>*_fmapPointer to mapping service object; RooCFunction3Ref<double,double,double,double>::func_t_ptr! Pointer to embedded function. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& R__b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. VO operator()(double x, double y, double z) const; Evaluate embedded function. const char* name() const; Return registered name of embedded function. If function; is not registered return string with hex presentation; of function pointer value. const char* argName(Int_t iarg); Return suggested name for i-th argument. re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Ref_double_double_double_double_.html:6852,Inherit,Inheritance,6852,root/html602/RooCFunction3Ref_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Ref_double_double_double_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble, double); voidSetLowerLimit(unsigned int, double); voidSetLowerLimit(const string&, double); voidSetName(unsigned int, const string&); voidSetPrecision(double eps); voidSetUpperLimit(unsigned int, double); voidSetUpperLimit(const string&, double); voidSetValue(unsigned int, double); voidSetValue(const string&, double); const ROOT::Minuit2::MnUserTransformation&Trafo() const; doubleValue(unsigned int) const; doubleValue(const string&) const; unsigned intVariableParameters() const. Data Members; private:. ROOT::Minuit2::MnUserTransformationfTransformation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnUserParameters(); {}. MnUserParameters(const vector<double>& , const vector<double>& ). ~MnUserParameters(); {}. MnUserParameters(const ROOT::Minuit2::MnUserParameters& par); {}. MnUserParameters& operator=(const ROOT::Minuit2::MnUserParameters& par). const MnUserTransformation& Trafo() const; {return fTransformation;}. unsigned int VariableParameters() const. const std::vector<ROOT::Minuit2::MinuitParameter>& Parameters() const; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. bool Add(const string& , double , double ); Add free Parameter Name, Value, Error. bool Add(const string& , double , double , double , double ); Add limited Parameter Name, Value, Lower bound, Upper bound. bool Add(const string& , double ); Add const Parameter Name, vale. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void RemoveLimits(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void SetUpperLimit(unsigned int , double ). void SetLowerLimit(unsigned int , double ). void SetName(unsigned int , const string& ). double Value(unsigned int ) const. double Error(unsigned int ) const. voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__MnUserParameters.html:2577,Variab,VariableParameters,2577,root/html534/ROOT__Minuit2__MnUserParameters.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__MnUserParameters.html,3,['Variab'],['VariableParameters']
Modifiability,"uble; *fDest);  ; This function transforms the; source spectrum (for details see Transform function). Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter functions.; The Enhance function multiplies transformed coefficients in the given region; (fXmin, fXmax) by the given fEnhancCoeff and transforms it back. Enhanced data; are written into dest spectrum.;  ; Example� � script Enhance.c:.  ; Fig. 1 Original spectrum (black; line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024; were multiplied by 2) ;  ; Script:;  ; // Example to illustrate; Enhance function (class TSpectrumTransform).; // To execute this example,; do; // root > .x Enhance.C;  ; void Enhance() {; �� Int_t i;; �� Double_t nbins =; 4096;; �� Double_t xmin� =; 0;; �� Double_t xmax� =; (Double_t)nbins;; �� Double_t * source = new Double_t[nbins];; �� Double_t * dest = new; Double_t[nbins];�� ; �� TH1F *h = new; TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; �� TH1F *d = new; TH1F(""d"","""",nbins,xmin,xmax);�������� ; �� TFile *f = new; TFile(""spectra\\TSpectrum.root"");; �� h=(TH1F*); f->Get(""transform1;1"");�� ; �� for (i = 0; i < nbins;; i++) source[i]=h->GetBinContent(i + 1);���� ; �� TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; �� if (!Transform1); Transform1 = new; TCanvas(""Transform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:21933,Enhance,Enhance,21933,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,4,['Enhance'],"['Enhance', 'Enhancement']"
Modifiability,"uble> z); static Double_terfc(Double_t x); static complex<double>erfc_fast(const complex<double> z); static complex<double>faddeeva(complex<double> z); static complex<double>faddeeva_fast(complex<double> z); static voidinitFastCERF(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); static Double_tinterpolate(Double_t[] yArr, Int_t nOrder, Double_t x); static Double_tinterpolate(Double_t[] xa, Double_t[] ya, Int_t n, Double_t x); virtual TClass*IsA() const; static RooComplexITPComplexErrFuncFast(const RooComplex& zz, Int_t); static Double_tITPComplexErrFuncFastIm(const RooComplex& zz, Int_t); static Double_tITPComplexErrFuncFastRe(const RooComplex& zz, Int_t); RooMath&operator=(const RooMath&); RooMath(); RooMath(const RooMath&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. static voidwarn(const char* oldfun, const char* newfun = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; std::complex<double> faddeeva(complex<double> z). std::complex<double> faddeeva_fast(complex<double> z). std::complex<double> erfc(const std::complex<double> z). std::complex<double> erfc_fast(const complex<double> z). std::complex<double> erf(const std::complex<double> z). std::complex<double> erf_fast(const complex<double> z). Double_t interpolate(Double_t[] yArr, Int_t nOrder, Double_t x); Interpolate array 'ya' with 'n' elements for 'x' (between 0 and 'n'-1). Double_t interpolate(Double_t[] xa, Double_t[] ya, Int_t n, Double_t x); Interpolate array 'ya' with 'n' elements for 'xa'. void warn(const char* oldfun, const char* newfun = 0). virtual ~RooMath(); {}. std::complex<double> erf(const std::complex<double> z); @brief complex erf function; *; * @author Manuel Schiller <manuel.schiller@nikhef.nl>; * @date 2013-02-21; *; * Calculate erf(z) for complex z. std::complex<double> erfc(const std::complex<double> z); @brief complex erfc f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMath.html:1860,Inherit,Inheritance,1860,root/html602/RooMath.html,https://root.cern,https://root.cern/root/html602/RooMath.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble>& cov, unsigned int stra = 1); const char*ROOT::Minuit2::MnApplication::Name(unsigned int) const; unsigned intROOT::Minuit2::MnApplication::NumOfCalls() const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::MnApplication::operator()(unsigned int maxfcn = 0, double tolerance = 0.10000000000000001); const ROOT::Minuit2::MinuitParameter&ROOT::Minuit2::MnApplication::Parameter(unsigned int i) const; const ROOT::Minuit2::MnUserParameters&ROOT::Minuit2::MnApplication::Parameters() const; vector<double>ROOT::Minuit2::MnApplication::Params() const; const ROOT::Minuit2::MnMachinePrecision&ROOT::Minuit2::MnApplication::Precision() const; voidROOT::Minuit2::MnApplication::Release(unsigned int); voidROOT::Minuit2::MnApplication::Release(const char*); voidROOT::Minuit2::MnApplication::RemoveLimits(unsigned int); voidROOT::Minuit2::MnApplication::RemoveLimits(const char*); voidROOT::Minuit2::MnApplication::SetError(unsigned int, double); voidROOT::Minuit2::MnApplication::SetError(const char*, double); voidROOT::Minuit2::MnApplication::SetLimits(unsigned int, double, double); voidROOT::Minuit2::MnApplication::SetLimits(const char*, double, double); voidROOT::Minuit2::MnApplication::SetPrecision(double); voidROOT::Minuit2::MnApplication::SetValue(unsigned int, double); voidROOT::Minuit2::MnApplication::SetValue(const char*, double); const ROOT::Minuit2::MnUserParameterState&ROOT::Minuit2::MnApplication::State() const; const ROOT::Minuit2::MnStrategy&ROOT::Minuit2::MnApplication::Strategy() const; doubleROOT::Minuit2::MnApplication::Value(unsigned int) const; doubleROOT::Minuit2::MnApplication::Value(const char*) const; unsigned intROOT::Minuit2::MnApplication::VariableParameters() const. private:. ROOT::Minuit2::MnMigrad&operator=(const ROOT::Minuit2::MnMigrad&). Data Members; protected:. const ROOT::Minuit2::FCNBase&ROOT::Minuit2::MnApplication::fFCN; unsigned intROOT::Minuit2::MnApplication::fNumCall; ROOT::Minuit2::MnUserParameterStateROOT::Minuit2::MnApplication::fSta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__MnMigrad.html:6047,Variab,VariableParameters,6047,root/html602/ROOT__Minuit2__MnMigrad.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__MnMigrad.html,2,['Variab'],['VariableParameters']
Modifiability,"uble>& cov, unsigned int stra = 1); const char*ROOT::Minuit2::MnApplication::Name(unsigned int) const; unsigned intROOT::Minuit2::MnApplication::NumOfCalls() const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::MnApplication::operator()(unsigned int maxfcn = 0, double tolerance = 0.10000000000000001); const ROOT::Minuit2::MinuitParameter&ROOT::Minuit2::MnApplication::Parameter(unsigned int i) const; const ROOT::Minuit2::MnUserParameters&ROOT::Minuit2::MnApplication::Parameters() const; vector<double>ROOT::Minuit2::MnApplication::Params() const; const ROOT::Minuit2::MnMachinePrecision&ROOT::Minuit2::MnApplication::Precision() const; voidROOT::Minuit2::MnApplication::Release(unsigned int); voidROOT::Minuit2::MnApplication::Release(const char*); voidROOT::Minuit2::MnApplication::RemoveLimits(unsigned int); voidROOT::Minuit2::MnApplication::RemoveLimits(const char*); voidROOT::Minuit2::MnApplication::SetError(unsigned int, double); voidROOT::Minuit2::MnApplication::SetError(const char*, double); voidROOT::Minuit2::MnApplication::SetLimits(unsigned int, double, double); voidROOT::Minuit2::MnApplication::SetLimits(const char*, double, double); voidROOT::Minuit2::MnApplication::SetPrecision(double); voidROOT::Minuit2::MnApplication::SetValue(unsigned int, double); voidROOT::Minuit2::MnApplication::SetValue(const char*, double); const ROOT::Minuit2::MnUserParameterState&ROOT::Minuit2::MnApplication::State() const; const ROOT::Minuit2::MnStrategy&ROOT::Minuit2::MnApplication::Strategy() const; doubleROOT::Minuit2::MnApplication::Value(unsigned int) const; doubleROOT::Minuit2::MnApplication::Value(const char*) const; unsigned intROOT::Minuit2::MnApplication::VariableParameters() const. private:. ROOT::Minuit2::MnMinimize&operator=(const ROOT::Minuit2::MnMinimize&). Data Members; protected:. const ROOT::Minuit2::FCNBase&ROOT::Minuit2::MnApplication::fFCN; unsigned intROOT::Minuit2::MnApplication::fNumCall; ROOT::Minuit2::MnUserParameterStateROOT::Minuit2::MnApplication::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__MnMinimize.html:5883,Variab,VariableParameters,5883,root/html602/ROOT__Minuit2__MnMinimize.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__MnMinimize.html,2,['Variab'],['VariableParameters']
Modifiability,"uble>& cov, unsigned int stra = 1); const char*ROOT::Minuit2::MnApplication::Name(unsigned int) const; unsigned intROOT::Minuit2::MnApplication::NumOfCalls() const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::MnApplication::operator()(unsigned int maxfcn = 0, double tolerance = 0.10000000000000001); const ROOT::Minuit2::MinuitParameter&ROOT::Minuit2::MnApplication::Parameter(unsigned int i) const; const ROOT::Minuit2::MnUserParameters&ROOT::Minuit2::MnApplication::Parameters() const; vector<double>ROOT::Minuit2::MnApplication::Params() const; const ROOT::Minuit2::MnMachinePrecision&ROOT::Minuit2::MnApplication::Precision() const; voidROOT::Minuit2::MnApplication::Release(unsigned int); voidROOT::Minuit2::MnApplication::Release(const char*); voidROOT::Minuit2::MnApplication::RemoveLimits(unsigned int); voidROOT::Minuit2::MnApplication::RemoveLimits(const char*); voidROOT::Minuit2::MnApplication::SetError(unsigned int, double); voidROOT::Minuit2::MnApplication::SetError(const char*, double); voidROOT::Minuit2::MnApplication::SetLimits(unsigned int, double, double); voidROOT::Minuit2::MnApplication::SetLimits(const char*, double, double); voidROOT::Minuit2::MnApplication::SetPrecision(double); voidROOT::Minuit2::MnApplication::SetValue(unsigned int, double); voidROOT::Minuit2::MnApplication::SetValue(const char*, double); const ROOT::Minuit2::MnUserParameterState&ROOT::Minuit2::MnApplication::State() const; const ROOT::Minuit2::MnStrategy&ROOT::Minuit2::MnApplication::Strategy() const; doubleROOT::Minuit2::MnApplication::Value(unsigned int) const; doubleROOT::Minuit2::MnApplication::Value(const char*) const; unsigned intROOT::Minuit2::MnApplication::VariableParameters() const. private:. ROOT::Minuit2::MnSimplex&operator=(const ROOT::Minuit2::MnSimplex&). Data Members; protected:. const ROOT::Minuit2::FCNBase&ROOT::Minuit2::MnApplication::fFCN; unsigned intROOT::Minuit2::MnApplication::fNumCall; ROOT::Minuit2::MnUserParameterStateROOT::Minuit2::MnApplication::fS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__MnSimplex.html:5256,Variab,VariableParameters,5256,root/html602/ROOT__Minuit2__MnSimplex.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__MnSimplex.html,2,['Variab'],['VariableParameters']
Modifiability,"uble>& s); TMatrixTSub<double>&operator=(const TMatrixTSub<double>& s); voidoperator=(const TMatrixTBase<double>& m); voidRank1Update(const TVectorT<double>& vec, double alpha = 1.); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTSub<double>(); TMatrixTSub<double>(const TMatrixTSub<double>& ms); TMatrixTSub<double>(TMatrixT<double>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); TMatrixTSub<double>(TMatrixTSym<double>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb). Data Members; public:. static TMatrixTSub<double>::(anonymous)kWorkMax. protected:. Int_tTMatrixTSub_const<double>::fColOff; TMatrixTBase<double>*TMatrixTSub_const<double>::fMatrixthe matrix I am a submatrix of; Int_tTMatrixTSub_const<double>::fNcolsSub; Int_tTMatrixTSub_const<double>::fNrowsSub; Int_tTMatrixTSub_const<double>::fRowOff. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TMatrixTSub<Element> Rank1Update(const TVectorT<double>& vec, double alpha = 1.); Perform a rank 1 operation on the matrix:; A += alpha * v * v^T. void TMatrixTSub<Element> operator=(Element val); Assign val to every element of the sub matrix. void TMatrixTSub<Element> operator+=(Element val); Add val to every element of the sub matrix. void TMatrixTSub<Element> operator*=(Element val); Multiply every element of the sub matrix by val . void TMatrixTSub<Element> operator=(const TMatrixTSub_const<Element> &ms); Assignment operator. void TMatrixTSub<Element> operator=(const TMatrixTBase<Element> &m); Assignment operator. void TMatrixTSub<Element> operator+=(const TMatrixTSub_const<Element> &ms); Add to every element of the submatrix the corresponding element of submatrix ms. void TMatrixTSub<Element> operator*=(const TMatrixTSub_const<Element> &ms); Multiply submatrix with submatrix ms. void TMatrixTSub<Element> operator+=(const TMat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTSub_double_.html:2585,Inherit,Inheritance,2585,root/html602/TMatrixTSub_double_.html,https://root.cern,https://root.cern/root/html602/TMatrixTSub_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble>, DefaultCoordinateSystemTag > ROOT::Math::XYZVector. 3D Vector based on the cartesian coordinates x,y,z in double precision ; To use it add the line #include <Vector3D.h>; See the documentation on the DisplacementVector3D page. ; Definition at line 44 of file Vector3Dfwd.h. ◆ XYZVectorD. typedef XYZVector ROOT::Math::XYZVectorD. Definition at line 53 of file Vector3Dfwd.h. ◆ XYZVectorF. typedef DisplacementVector3D< Cartesian3D<float>, DefaultCoordinateSystemTag > ROOT::Math::XYZVectorF. 3D Vector based on the cartesian coordinates x,y,z in single precision ; To use it add the line #include <Vector3D.h>; See the documentation on the DisplacementVector3D page. ; Definition at line 52 of file Vector3Dfwd.h. Enumeration Type Documentation. ◆ EMinimVariableType. enum ROOT::Math::EMinimVariableType. Enumeration describing the status of the variable The enumeration are used in the minimizer classes to categorize the variables. . EnumeratorkDefault free variable (unlimited) . kFix fixed variable . kBounds variable has two bounds . kLowBound variable has a lower bound . kUpBound variable has an upper bounds . Definition at line 27 of file MinimTransformVariable.h. ◆ ERotation3DMatrixIndex. enum ROOT::Math::ERotation3DMatrixIndex. EnumeratorkXX ; kXY ; kXZ ; kYX ; kYY ; kYZ ; kZX ; kZY ; kZZ . Definition at line 64 of file AxisAngle.cxx. Function Documentation. ◆ adkTestStat(). void ROOT::Math::adkTestStat ; (; double * ; adk, . const std::vector< std::vector< double > > & ; samples, . const std::vector< double > & ; zstar . ). Definition at line 546 of file GoFTest.cxx. ◆ Chebyshev0(). double ROOT::Math::Chebyshev0 ; (; double ; , . double ; c0 . ). inline . Definition at line 57 of file ChebyshevPol.h. ◆ Chebyshev1(). double ROOT::Math::Chebyshev1 ; (; double ; x, . double ; c0, . double ; c1 . ). inline . Definition at line 60 of file ChebyshevPol.h. ◆ Chebyshev10(). double ROOT::Math::Chebyshev10 ; (; double ; x, . double ; c0, . double ; c1, . double ; c2, . doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:142578,variab,variable,142578,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,2,['variab'],['variable']
Modifiability,"ubleMag() const; doubleMag2() const; TEveVector2T<double>&Mult(const TEveVector2T<double>& a, double af); voidNegateXY(); voidNormalize(double length = 1); const double*operator const double*() const; double*operator double*(); TEveVector2T<double>&operator*=(double s); TEveVector2T<double>&operator+=(const TEveVector2T<double>& v); TEveVector2T<double>&operator-=(const TEveVector2T<double>& v); TEveVector2T<double>&operator=(const TEveVector2T<double>&); double&operator[](Int_t idx); doubleoperator[](Int_t idx) const; doublePhi() const; voidSet(const Float_t* v); voidSet(const Double_t* v); voidSet(double x, double y); voidShowMembers(TMemberInspector&); doubleSquareDistance(const TEveVector2T<double>& b) const; voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TEveVector2T<double>&Sub(const TEveVector2T<double>& p, const TEveVector2T<double>& q). Data Members; public:. doublefX; doublefYComponents of the point. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; template<typename TT> void TEveVector2T<TT> Normalize(double length = 1); Normalize the vector to length if current length is non-zero. template<typename TT> void TEveVector2T<TT> Dump() const; Dump to stdout as ""(x, y)\n"". TT TEveVector2T<TT> Phi() const. TT TEveVector2T<TT> Distance(const TEveVector2T<double>& b) const. TT TEveVector2T<TT> SquareDistance(const TEveVector2T<double>& b) const. TT TEveVector2T<TT> Dot(const TEveVector2T<double>& a) const. TT TEveVector2T<TT> Cross(const TEveVector2T<double>& a) const. TEveVector2T<TT>& TEveVector2T<TT> Sub(const TEveVector2T<double>& p, const TEveVector2T<double>& q). TEveVector2T<TT>& TEveVector2T<TT> Mult(const TEveVector2T<double>& a, double af). const TT* Arr() const; { return &fX; }. TT* Arr(); { return &fX; }. TEveVectorT& operator*=(double s); { fX *= s; fY *= s; fZ *= s; return *this; }. TEveVectorT& operator+=(const TEveVector2T<double>& v); { fX += v.fX; fY += v.fY; fZ += v.fZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveVector2T_double_.html:1897,Inherit,Inheritance,1897,root/html534/TEveVector2T_double_.html,https://root.cern,https://root.cern/root/html534/TEveVector2T_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ubleROOT::Math::Minimizer::Precision() const; intROOT::Math::Minimizer::PrintLevel() const; virtual voidROOT::Math::Minimizer::PrintResults(); virtual boolProvidesError() const; virtual boolROOT::Math::Minimizer::Scan(unsigned int, unsigned int&, double*, double*, double = 0, double = 0); voidROOT::Math::Minimizer::SetDefaultOptions(); voidROOT::Math::Minimizer::SetErrorDef(double up); virtual boolROOT::Math::Minimizer::SetFixedVariable(unsigned int, const string&, double); virtual voidSetFunction(const ROOT::Math::IMultiGenFunction& func); virtual boolSetLimitedVariable(unsigned int, const string&, double, double, double, double); virtual boolROOT::Math::Minimizer::SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); voidROOT::Math::Minimizer::SetMaxFunctionCalls(unsigned int maxfcn); voidROOT::Math::Minimizer::SetMaxIterations(unsigned int maxiter); virtual voidSetOptions(const ROOT::Math::MinimizerOptions& opt); voidSetParameters(const ROOT::Math::GeneticMinimizerParameters& params); voidROOT::Math::Minimizer::SetPrecision(double prec); voidROOT::Math::Minimizer::SetPrintLevel(int level); voidROOT::Math::Minimizer::SetStrategy(int strategyLevel); voidROOT::Math::Minimizer::SetTolerance(double tol); virtual boolROOT::Math::Minimizer::SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); voidROOT::Math::Minimizer::SetValidError(bool on); virtual boolSetVariable(unsigned int ivar, const string& name, double val, double step); virtual boolROOT::Math::Minimizer::SetVariableValue(unsigned int, double); virtual boolROOT::Math::Minimizer::SetVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; virtual intROOT::Math::Minimizer::VariableIndex(const string&) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int) const; virtual const double*X() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GeneticMinimizer.html:3603,Variab,VariableIndex,3603,root/html532/ROOT__Math__GeneticMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GeneticMinimizer.html,2,['Variab'],"['VariableIndex', 'VariableName']"
Modifiability,"uble_t &mInf, Double_t &mInfT, Double_t &corr, Types::ETreeType type);  calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample ;  ; virtual void Train ()=0;  ; bool TrainingEnded ();  ; void TrainMethod ();  ; virtual void WriteEvaluationHistosToFile (Types::ETreeType treetype);  writes all MVA evaluation histograms to file ;  ; virtual void WriteMonitoringHistosToFile () const;  write special monitoring histograms to file dummy implementation here --------------— ;  ; void WriteStateToFile () const;  write options and weights to file note that each one text file for the main configuration information and one ROOT file for ROOT objects are created ;  ;  Public Member Functions inherited from TMVA::IMethod;  IMethod ();  ; virtual ~IMethod ();  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets)=0;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &optname, const T &);  ; void CheckForUnusedOptions () const;  checks for unused options in option string ;  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc="""");  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc="""");  ; const char * GetConfigDescription () const;  ; const char * GetConfigName () const;  ; const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBase.html:12906,inherit,inherited,12906,doc/master/classTMVA_1_1MethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBase.html,1,['inherit'],['inherited']
Modifiability,"uble_t * fSEEKxmidDefinition TMinuit.h:117; TMinuit::fErpDouble_t * fErpDefinition TMinuit.h:71; TMinuit::mnprinvirtual void mnprin(Int_t inkode, Double_t fval)Prints the values of the parameters at the time of the call.Definition TMinuit.cxx:6304; TMinuit::fOriginTString fOrigin[kMAXWARN]Definition TMinuit.h:173; TMinuit::mncrosvirtual void mncros(Double_t &aopt, Int_t &iercr)Find point where MNEVAL=AMIN+UP.Definition TMinuit.cxx:1798; TMinuit::fLnewmnBool_t fLnewmnDefinition TMinuit.h:161; TMinuit::GetNumFreeParsvirtual Int_t GetNumFreePars() constreturns the number of currently free parametersDefinition TMinuit.cxx:863; TMinuit::mnhes1virtual void mnhes1()Calculate first derivatives (GRD) and uncertainties (DGRD)Definition TMinuit.cxx:4218; TMinuit::fIcircInt_t fIcirc[2]Definition TMinuit.h:153; TMinuit::mnfreevirtual void mnfree(Int_t k)Restores one or more fixed parameter(s) to variable status.Definition TMinuit.cxx:3256; TMinuit::mncntrvirtual void mncntr(Int_t ke1, Int_t ke2, Int_t &ierrf)Print function contours in two variables, on line printer.Definition TMinuit.cxx:1132; TMinuit::fAminDouble_t fAminDefinition TMinuit.h:49; TMinuit::Contourvirtual TObject * Contour(Int_t npoints=10, Int_t pa1=0, Int_t pa2=1)Creates a TGraph object describing the n-sigma contour of a TMinuit fit.Definition TMinuit.cxx:653; TMinuit::fEDMDouble_t fEDMDefinition TMinuit.h:51; TMinuit::fDgrdDouble_t * fDgrdDefinition TMinuit.h:85; TMinuit::mnparmvirtual void mnparm(Int_t k, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t &ierflg)Implements one parameter definition.Definition TMinuit.cxx:5665; TMinuit::fMNOTwDouble_t * fMNOTwDefinition TMinuit.h:114; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::CloneTObject * Clone(const char *newname="""") const overrideMake a clone of an object using the Streamer facility.Definition TNamed.cxx:74; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Warni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:274724,variab,variables,274724,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"uble_t * fSEEKxmidDefinition TMinuit.h:117; TMinuit::fErpDouble_t * fErpDefinition TMinuit.h:71; TMinuit::mnprinvirtual void mnprin(Int_t inkode, Double_t fval)Prints the values of the parameters at the time of the call.Definition TMinuit.cxx:6304; TMinuit::fOriginTString fOrigin[kMAXWARN]Definition TMinuit.h:173; TMinuit::mncrosvirtual void mncros(Double_t &aopt, Int_t &iercr)Find point where MNEVAL=AMIN+UP.Definition TMinuit.cxx:1798; TMinuit::fLnewmnBool_t fLnewmnDefinition TMinuit.h:161; TMinuit::GetNumFreeParsvirtual Int_t GetNumFreePars() constreturns the number of currently free parametersDefinition TMinuit.cxx:863; TMinuit::mnhes1virtual void mnhes1()Calculate first derivatives (GRD) and uncertainties (DGRD)Definition TMinuit.cxx:4218; TMinuit::fIcircInt_t fIcirc[2]Definition TMinuit.h:153; TMinuit::mnfreevirtual void mnfree(Int_t k)Restores one or more fixed parameter(s) to variable status.Definition TMinuit.cxx:3256; TMinuit::mncntrvirtual void mncntr(Int_t ke1, Int_t ke2, Int_t &ierrf)Print function contours in two variables, on line printer.Definition TMinuit.cxx:1132; TMinuit::fAminDouble_t fAminDefinition TMinuit.h:49; TMinuit::Contourvirtual TObject * Contour(Int_t npoints=10, Int_t pa1=0, Int_t pa2=1)Creates a TGraph object describing the n-sigma contour of a TMinuit fit.Definition TMinuit.cxx:653; TMinuit::fEDMDouble_t fEDMDefinition TMinuit.h:51; TMinuit::fDgrdDouble_t * fDgrdDefinition TMinuit.h:85; TMinuit::mnparmvirtual void mnparm(Int_t k, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t &ierflg)Implements one parameter definition.Definition TMinuit.cxx:5665; TMinuit::fMNOTwDouble_t * fMNOTwDefinition TMinuit.h:114; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObjectMother of all ROOT objects.Definition TObject.h:41; TStringBasic string class.Definition TString.h:139; bool; double; int; yDouble_t y[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; mTMarker mDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:32892,variab,variables,32892,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['variab'],['variables']
Modifiability,"uble_t *, Int_t, const Double_t *, Int_t, const Double_t *) overrideRedefine x, y and z axis parameters with variable bin sizes.Definition TProfile.h:74; TProfile::fErrorModeEErrorType fErrorModeOption to compute errors.Definition TProfile.h:40; TProfile::MergeLong64_t Merge(TCollection *list) overrideMerge all histograms in the collection in this histogram.Definition TProfile.cxx:1192; TProfile::FillInt_t Fill(Double_t) overrideIncrement bin with abscissa X by 1.Definition TProfile.h:62; TProfile::GetYmaxvirtual Double_t GetYmax() constDefinition TProfile.h:116; TProfile::Copyvoid Copy(TObject &hnew) const overrideCopy a Profile histogram to a new profile histogram.Definition TProfile.cxx:423; TProfile::GetYminvirtual Double_t GetYmin() constDefinition TProfile.h:115; TProfile::SetBinsvoid SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) overrideRedefine x and y axis parameters.Definition TProfile.h:68; TProfile::SetBinsvoid SetBins(Int_t, const Double_t *, Int_t, const Double_t *) overrideRedefine x and y axis parameters with variable bin sizes.Definition TProfile.h:70; TProfile::GetBinSumw2virtual const TArrayD * GetBinSumw2() constDefinition TProfile.h:112; TProfile::fYmaxDouble_t fYmaxUpper limit in Y (if set)Definition TProfile.h:42; TProfile::SetBinEntriesvirtual void SetBinEntries(Int_t bin, Double_t w)Set the number of entries in bin.Definition TProfile.cxx:1700; TProfile::ProjectionXTH1D * ProjectionX(const char *name=""_px"", Option_t *option=""e"") constProject this profile into a 1-D histogram along X.Definition TProfile.cxx:1283; TProfile::SetErrorOptionvirtual void SetErrorOption(Option_t *option="""")Set option to compute profile errors.Definition TProfile.cxx:1777; TProfile::SavePrimitivevoid SavePrimitive(std::ostream &out, Option_t *option="""") overrideSave primitive as a C++ statement(s) on output stream out.Definition TProfile.cxx:1612; TProfile::GetBinEntriesvirtual Double_t GetBinEntries(Int_t bin) constReturn bin entries of a Profile his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8h_source.html:12293,variab,variable,12293,doc/master/TProfile_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8h_source.html,1,['variab'],['variable']
Modifiability,"uble_t *shift, Double_t *scale);  Extract the GUI object data, return center in 3 component 'center' scale in 3 component 'scale'. ;  ; const Float_t * GetRGBA () const;  ; TClass * IsA () const override;  ; void PShapeModified () override;  Shape has been modified. ;  ; void SetCenter (const Double_t *center);  Set internal center data from 3 component 'c'. ;  ; void SetColorSlidersPos ();  Update GUI sliders from internal data. ;  ; void SetModel (TObject *obj) override;  Sets model or disables/hides viewer. ;  ; void SetPShape (TGLPhysicalShape *shape) override;  Shape has changed. ;  ; void SetRGBA (const Float_t *rgba);  Set color sliders from 17 component 'rgba'. ;  ; void SetScale (const Double_t *scale);  Set internal scale data from 3 component 'c'. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGedFrame;  TGedFrame (const TGWindow *p=nullptr, Int_t width=140, Int_t height=30, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Constructor of the base GUI attribute frame. ;  ;  ~TGedFrame () override;  Destructor of the base GUI attribute frame. ;  ; virtual Bool_t AcceptModel (TObject *);  ; virtual void ActivateBaseClassEditors (TClass *cl);  Provide list of editors for base-classes. ;  ; virtual void AddExtraTab (TGedSubFrame *sf);  Adds tab container to list of extra tabs. ;  ;  ClassDefOverride (TGedFrame, 0);  ; virtual TGVerticalFrame * CreateEditorTabSubFrame (const char *name);  Create a vertical frame to be used by 'owner' in extra tab 'name'. ;  ; Option_t * GetDrawOption () const override;  Get draw options of the selected object. ;  ; TList * GetExtraTabs ();  ; TGedEditor * GetGedEditor ();  ; TClass * GetModelClass ();  ; Int_t GetPriority ();  ; virtual void Refresh (TObject *model);  Refresh the GUI info about the object attributes. ;  ; void SetDrawOption (Option_t *option="""") overr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLPShapeObjEditor.html:2293,inherit,inherited,2293,doc/master/classTGLPShapeObjEditor.html,https://root.cern,https://root.cern/doc/master/classTGLPShapeObjEditor.html,1,['inherit'],['inherited']
Modifiability,"uble_t > fParMax;  Array of upper limits of the fNpar parameters. ;  ; std::vector< Double_t > fParMin;  Array of lower limits of the fNpar parameters. ;  ; std::vector< Double_t > fSave;  Array of fNsave function values. ;  ; EFType fType {EFType::kTemplScalar};  ; Double_t fXmax {-1111};  Upper bounds for the range. ;  ; Double_t fXmin {-1111};  Lower bounds for the range. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TF1; enum class  EAddToList { kDefault; , kAdd; , kNo; };  Add to list behavior. More...;  ; enum  EStatusBits { kNotGlobal = (1ULL << ( 10 )); , kNotDraw = (1ULL << ( 9 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TF1; enum  EFType { ;   kFormula = 0; , kPtrScalarFreeFcn; , kInterpreted; , kTemplVec; , ;   kTemplScalar; , kCompositionFcn. };  ;  Protected Types inherited ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:38057,inherit,inherited,38057,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,3,['inherit'],['inherited']
Modifiability,"uble_t ApplyKernelFunction(Double_t normalized_distance); from the normalized euclidean distance calculate the distance; for a certain kernel. Double_t KernelNormalization(Double_t pdf); Calculating the normalization factor only once (might need a reset at some point.; Can the method be restarted with different params?). Double_t GetNormalizedDistance(const TMVA::Event& base_event, const TMVA::BinarySearchTreeNode& sample_event, Double_t* dim_normalization); We use Euclidian metric here. Might not be best or most efficient. Double_t NormSinc(Double_t x); NormSinc. Double_t LanczosFilter(Int_t level, Double_t x); Lanczos Filter. Float_t GetError(Float_t countS, Float_t countB, Float_t sumW2S, Float_t sumW2B) const; statistical error estimate for RS estimator. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode). void ReadWeightsFromStream(istream& istr); read weight info from file. void WriteWeightsToStream(TFile& rf) const; write training sample (TTree) to file. void ReadWeightsFromStream(TFile& istr); read training sample from file. TMVA::MethodPDERS* ThisPDERS( void ); static pointer to this object. void UpdateThis( void ); update static this pointer. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". BinarySearchTree* GetBinaryTree( void ); accessors. { return fBinaryTree; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodPDERS.h 39395 2011-05-26 10:05:54Z moneta $ » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodPDERS.html:25277,variab,variables,25277,root/html530/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodPDERS.html,1,['variab'],['variables']
Modifiability,"uble_t BackgroundEvents, Double_t& optimal_significance_value) const; const TString&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<std::vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<std::vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; UInt_tTMVA::MethodBase::GetNEvents() const; UInt_tTMVA::MethodBase::GetNTargets() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(); Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1F* histS, TH1F* histB) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; virtual Double_tTMVA::MethodBase::GetSeparation(TH1*, TH1*) const; virtual Double_tTMVA::MethodBase::GetSeparation(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; Double_tTMVA::MethodBase::GetSignalReferenceCut() const; Double_tTMVA::MethodBase::GetSignalReferenceCutOri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodFisher.html:6926,Config,Configurable,6926,root/html532/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodFisher.html,1,['Config'],['Configurable']
Modifiability,"uble_t BackgroundEvents, Double_t& optimal_significance_value) const; const TString&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<std::vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<std::vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; UInt_tTMVA::MethodBase::GetNEvents() const; UInt_tTMVA::MethodBase::GetNTargets() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual Double_tTMVA::MethodBase::GetProba(const TMVA::Event* ev); virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(); const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(const TMVA::Event *const ev); Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1D* histS, TH1D* histB) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; virtual Double_tTMVA::MethodBase::GetSeparation(TH1*, TH1*) const; virtual Double_tTMVA::MethodBase::GetSeparation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodFisher.html:7013,Config,Configurable,7013,root/html534/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodFisher.html,1,['Config'],['Configurable']
Modifiability,"uble_t b, Double_t c);  The PDK function. ;  . Private Attributes; Double_t fBeta [3];  ; TLorentzVector fDecPro [18];  ; Double_t fMass [18];  ; Int_t fNt;  ; Double_t fTeCmTm;  ; Double_t fWtMax;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGenPhaseSpace.h>. Inheritance diagram for TGenPhaseSpace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenPhaseSpace() [1/2]. TGenPhaseSpace::TGenPhaseSpace ; (; ). inline . Definition at line 27 of file TGenPhaseSpace.h. ◆ TGenPhaseSpace() [2/2]. TGenPhaseSpace::TGenPhaseSpace ; (; const TGenPhaseSpace & ; gen). Copy constructor. ; Definition at line 58 of file TGenPhaseSpace.cxx. ◆ ~TGenPhaseSpace(). TGenPhaseSpace::~TGenPhaseSpace ; (; ). inlineoverride . Definition at line 29 of file TGenPhaseSpace.h. Member Function Documentation. ◆ Class(). static TClass * TGenPhaseSpace::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGenPhaseSpace::Class_Name ; (; ). static . R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenPhaseSpace.html:11110,inherit,inherited,11110,doc/master/classTGenPhaseSpace.html,https://root.cern,https://root.cern/doc/master/classTGenPhaseSpace.html,2,['inherit'],['inherited']
Modifiability,"uble_t eps=0.) const;  Search for axis modifier by index or value. ;  ; Bool_t HasBinWithoutLabel () const;  This helper function checks if there is a bin without a label if all bins have labels, the axis can / will become alphanumeric. ;  . Private Attributes; UShort_t fBits2;  Second bit status word. ;  ; Int_t fFirst;  First bin to display. ;  ; THashList * fLabels;  List of labels. ;  ; Int_t fLast;  Last bin to display. ;  ; TList * fModLabs;  List of modified labels. ;  ; Int_t fNbins;  Number of bins. ;  ; TObject * fParent;  ! Object owning this axis ;  ; Bool_t fTimeDisplay;  On/off displaying time values instead of numerics. ;  ; TString fTimeFormat;  Date&time format, ex: 09/12/99 12:34:00. ;  ; TArrayD fXbins;  Bin edges array in X. ;  ; Double_t fXmax;  Upper edge of last bin. ;  ; Double_t fXmin;  Low edge of first bin. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttAxis; Color_t fAxisColor;  Color of the line axis. ;  ; Color_t fLabelColor;  Color of labels. ;  ; Style_t fLabelFont;  Font for labels. ;  ; Float_t fLabelOffset;  Offset of labels. ;  ; Float_t fLabelSize;  Size of labels. ;  ; Int_t fNdivisions;  Number of divisions(10000*n3 + 100*n2 + n1) ;  ; Float_t fTickLength;  Length of tick marks. ;  ; Color_t fTitleColor;  Color of axis title. ;  ; Style_t fTitleFont;  Font for axis title. ;  ; Float_t fTitleOffset;  Offset of axis title. ;  ; Float_t fTitleSize;  Size of axis title. ;  . #include <TAxis.h>. Inheritance diagram for TAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis.html:21425,inherit,inherited,21425,doc/master/classTAxis.html,https://root.cern,https://root.cern/doc/master/classTAxis.html,2,['inherit'],['inherited']
Modifiability,"uble_t xlow,Double_t xup,Int_t ny,Double_t ylow,Double_t yup,Option_t *option); 126: TH2D(name,title,nx,xlow,xup,ny,ylow,yup); 127{; 128 BuildOptions(0,0,option);; 129 if (xlow >= xup || ylow >= yup) SetBuffer(fgBufferSize);; 130}; 131 ; 132////////////////////////////////////////////////////////////////////////////////; 133/// Create a 2-D Profile with variable bins in X and fix bins in Y.; 134 ; 135TProfile2D::TProfile2D(const char *name,const char *title,Int_t nx,const Double_t *xbins,Int_t ny,Double_t ylow,Double_t yup,Option_t *option); 136: TH2D(name,title,nx,xbins,ny,ylow,yup); 137{; 138 BuildOptions(0,0,option);; 139}; 140 ; 141////////////////////////////////////////////////////////////////////////////////; 142/// Create a 2-D Profile with fix bins in X and variable bins in Y.; 143 ; 144TProfile2D::TProfile2D(const char *name,const char *title,Int_t nx,Double_t xlow,Double_t xup,Int_t ny,const Double_t *ybins,Option_t *option); 145: TH2D(name,title,nx,xlow,xup,ny,ybins); 146{; 147 BuildOptions(0,0,option);; 148}; 149 ; 150////////////////////////////////////////////////////////////////////////////////; 151/// Create a 2-D Profile with variable bins in X and variable bins in Y.; 152 ; 153TProfile2D::TProfile2D(const char *name,const char *title,Int_t nx,const Double_t *xbins,Int_t ny,const Double_t *ybins,Option_t *option); 154: TH2D(name,title,nx,xbins,ny,ybins); 155{; 156 BuildOptions(0,0,option);; 157}; 158 ; 159////////////////////////////////////////////////////////////////////////////////; 160/// Constructor for Profile2D histograms with range in z.; 161///; 162/// The first eight parameters are similar to TH2D::TH2D.; 163/// Only the values of Z between ZMIN and ZMAX will be considered at filling time.; 164/// zmin and zmax will also be the maximum and minimum values; 165/// on the z scale when drawing the profile2D.; 166///; 167/// See TProfile2D::BuildOptions for more explanations on errors; 168 ; 169TProfile2D::TProfile2D(const char *name,const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:6485,variab,variable,6485,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,2,['variab'],['variable']
Modifiability,"uble_t xmax, Double_t ymin, Double_t ymax); Construct a two-dimensional RooPlot with ranges and properties taken; from variables var1 and var2 but with an overriding range definition; of [xmin,xmax] x [ymin,ymax]. RooPlot(const char* name, const char* title, const RooAbsRealLValue &var, Double_t xmin, Double_t xmax, Int_t nbins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot(const RooAbsRealLValue &var, Double_t xmin, Double_t xmax, Int_t nbins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot* emptyClone(const char* name); Return empty clone of current RooPlot. void initialize(); Perform initialization that is common to all constructors. TString histName() const; Construct automatic name of internal TH1. ~RooPlot(); Destructor. void updateNormVars(const RooArgSet& vars); Install the given set of observables are reference normalization; variables for this frame. These observables are e.g. later used; to automatically project out observables when plotting functions; on this frame. This function is only effective when called the; first time on a frame. Stat_t GetBinContent(Int_t ) const; A plot object is a frame without any bin contents of its own so this; method always returns zero. Stat_t GetBinContent(Int_t , Int_t ) const; A plot object is a frame without any bin contents of its own so this; method always returns zero. Stat_t GetBinContent(Int_t , Int_t , Int_t ) const; A plot object is a frame without any bin contents of its own so this; method always returns zero. void addObject(TObject* obj, Option_t* drawOptions = """", Bool_t invisible = kFALSE); Add a generic object to this plot. The specified options will be; used to Draw() this object later. The caller transfers ownership; of the object with this call, and the object will be deleted; when its containing plot object is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooPlot.html:14390,variab,variables,14390,root/html526/RooPlot.html,https://root.cern,https://root.cern/root/html526/RooPlot.html,1,['variab'],['variables']
Modifiability,"uble_t xmax, Double_t ymin, Double_t ymax); Construct a two-dimensional RooPlot with ranges and properties taken; from variables var1 and var2 but with an overriding range definition; of [xmin,xmax] x [ymin,ymax]. RooPlot(const char* name, const char* title, const RooAbsRealLValue& var, Double_t xmin, Double_t xmax, Int_t nBins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot(const RooAbsRealLValue& var, Double_t xmin, Double_t xmax, Int_t nBins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot* emptyClone(const char* name); Return empty clone of current RooPlot. void initialize(); Perform initialization that is common to all constructors. TString histName() const; Construct automatic name of internal TH1. ~RooPlot(); Destructor. void updateNormVars(const RooArgSet& vars); Install the given set of observables are reference normalization; variables for this frame. These observables are e.g. later used; to automatically project out observables when plotting functions; on this frame. This function is only effective when called the; first time on a frame. Stat_t GetBinContent(Int_t ) const; A plot object is a frame without any bin contents of its own so this; method always returns zero. Stat_t GetBinContent(Int_t , Int_t ) const; A plot object is a frame without any bin contents of its own so this; method always returns zero. Stat_t GetBinContent(Int_t , Int_t , Int_t ) const; A plot object is a frame without any bin contents of its own so this; method always returns zero. void addObject(TObject* obj, Option_t* drawOptions = """", Bool_t invisible = kFALSE); Add a generic object to this plot. The specified options will be; used to Draw() this object later. The caller transfers ownership; of the object with this call, and the object will be deleted; when its containing plot object is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooPlot.html:14397,variab,variables,14397,root/html528/RooPlot.html,https://root.cern,https://root.cern/root/html528/RooPlot.html,10,['variab'],['variables']
Modifiability,"uble_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for fix bin size 2-D histograms. ;  ; virtual void DoFitSlices (bool onX, TF1 *f1, Int_t firstbin, Int_t lastbin, Int_t cut, Option_t *option, TObjArray *arr);  ; virtual TH1D * DoProjection (bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) const;  Internal (protected) method for performing projection on the X or Y axis called by ProjectionX or ProjectionY. ;  ; virtual TH1D * DoQuantiles (bool onX, const char *name, Double_t prob) const;  Implementation of quantiles for x or y. ;  ; Double_t Interpolate (Double_t x) const override;  illegal for a TH2 ;  ;  Protected Member Functions inherited from TH1;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Constructor for variable bin size histograms using an input array of type float. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Constructor for fix bin size histograms. ;  ; virtual Int_t AutoP2FindLimits (Double_t min, Double_t max);  Buffer-based estimate of the histogram range using the power of 2 algorithm. ;  ; Int_t AxisChoice (Option_t *axis) const;  Choose an axis according to ""axis"". ;  ; virtual void DoFillN (Int_t ntimes, const Double_t *x, const Double_t *w, Int_t stride=1);  Internal method to fill histogram content from a vector called directly by TH1::BufferEmpty. ;  ; virtual Double_t DoIntegral (Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) const;  Internal function compute integral and optionally the error between the limits specified by the bin number values working for all histograms (1D, 2D and 3D) ;  ; virtual Bool_t FindNewAxisLimits (const TAxi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:57822,variab,variable,57822,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"uble_t xup,Option_t *option); 127: TH1D(name,title,nbins,xlow,xup); 128{; 129 BuildOptions(0,0,option);; 130}; 131 ; 132////////////////////////////////////////////////////////////////////////////////; 133/// Constructor for Profile histograms with variable bin size.; 134///; 135/// See TProfile::BuildOptions() for more explanations on errors; 136/// see also comments in the TH1 base class constructors; 137 ; 138TProfile::TProfile(const char *name,const char *title,Int_t nbins,const Float_t *xbins,Option_t *option); 139: TH1D(name,title,nbins,xbins); 140{; 141 BuildOptions(0,0,option);; 142}; 143 ; 144////////////////////////////////////////////////////////////////////////////////; 145/// Constructor for Profile histograms with variable bin size.; 146///; 147/// See TProfile::BuildOptions for more explanations on errors; 148/// see also comments in the TH1 base class constructors; 149 ; 150TProfile::TProfile(const char *name,const char *title,Int_t nbins,const Double_t *xbins,Option_t *option); 151: TH1D(name,title,nbins,xbins); 152{; 153 BuildOptions(0,0,option);; 154}; 155 ; 156////////////////////////////////////////////////////////////////////////////////; 157/// Constructor for Profile histograms with variable bin size.; 158/// See TProfile::BuildOptions for more explanations on errors; 159///; 160/// see also comments in the TH1 base class constructors; 161 ; 162TProfile::TProfile(const char *name,const char *title,Int_t nbins,const Double_t *xbins,Double_t ylow,Double_t yup,Option_t *option); 163: TH1D(name,title,nbins,xbins); 164{; 165 BuildOptions(ylow,yup,option);; 166}; 167 ; 168////////////////////////////////////////////////////////////////////////////////; 169/// Constructor for Profile histograms with range in y.; 170///; 171/// The first five parameters are similar to TH1D::TH1D.; 172/// Only the values of Y between ylow and yup will be considered at filling time.; 173/// ylow and yup will also be the maximum and minimum values; 174/// on the y scale",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:6648,variab,variable,6648,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['variab'],['variable']
Modifiability,"uble_t zMin, Double_t zMax, Bool_t color=kTRUE);  ; void Rgl::DrawTrapezoid (const Double_t ver[][3]);  ; void Rgl::DrawTrapezoidTextured (const Double_t ver[][2], Double_t zMin, Double_t zMax, Double_t texMin, Double_t texMax);  In polar coordinates, box became trapezoid. ;  ; void Rgl::DrawTrapezoidTextured (const Double_t ver[][3], Double_t texMin, Double_t texMax);  ; void Rgl::DrawTrapezoidTextured2 (const Double_t ver[][2], Double_t zMin, Double_t zMax, Double_t texMin, Double_t texMax);  In polar coordinates, box became trapezoid. ;  ; void Rgl::GetColor (Float_t v, Float_t vmin, Float_t vmax, Int_t type, Float_t *rgba);  This function creates color for parametric surface's vertex, using its 'u' value. ;  ; std::pair< Bool_t, TGLLine3 > Intersection (const TGLPlane &p1, const TGLPlane &p2);  Find 3D line interestion of this plane with 'other'. ;  ; std::pair< Bool_t, TGLVertex3 > Intersection (const TGLPlane &p1, const TGLPlane &p2, const TGLPlane &p3);  ; std::pair< Bool_t, TGLVertex3 > Intersection (const TGLPlane &plane, const TGLLine3 &line, Bool_t extend);  Find intersection of 3D space 'line' with this plane. ;  ; template<class Func , class Arg > ; TOneArgGuard< Func, Arg > Rgl::make_guard (Func f, Arg a);  ; template<class Func , class Arg1 , class Arg2 > ; TTwoArgsGuard< Func, Arg1, Arg2 > Rgl::make_guard (Func f, Arg1 a1, Arg2 a2);  ; void Rgl::ObjectIDToColor (Int_t objectID, Bool_t highColor);  Object id encoded as rgb triplet. ;  ; TGLMatrix operator* (const TGLMatrix &lhs, const TGLMatrix &rhs);  ; Double_t operator* (const TGLVector3 &a, const TGLVector3 &b);  ; const TGLVector3 operator* (const TGLVector3 &vec, Double_t val);  ; TGLVertex3 operator* (Double_t f, const TGLVertex3 &v);  ; TGLVector3 operator+ (const TGLVector3 &vector1, const TGLVector3 &vector2);  ; TGLVertex3 operator+ (const TGLVertex3 &vertex1, const TGLVector3 &vertex2);  ; TGLVector3 operator- (const TGLVector3 &vector1, const TGLVector3 &vector2);  ; TGLVector3 operator- (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGLUtil_8h.html:6922,extend,extend,6922,doc/master/TGLUtil_8h.html,https://root.cern,https://root.cern/doc/master/TGLUtil_8h.html,1,['extend'],['extend']
Modifiability,"uble_t* stats) const; virtual Double_tTH1::GetStdDev(Int_t axis = 1) const; virtual Double_tTH1::GetStdDevError(Int_t axis = 1) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTranspar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH3.html:11559,Inherit,InheritsFrom,11559,root/html604/TH3.html,https://root.cern,https://root.cern/root/html604/TH3.html,1,['Inherit'],['InheritsFrom']
Modifiability,"uble_t* stats) const; virtual Double_tTH1::GetStdDev(Int_t axis = 1) const; virtual Double_tTH1::GetStdDevError(Int_t axis = 1) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH2.html:11086,Inherit,InheritsFrom,11086,root/html604/TH2.html,https://root.cern,https://root.cern/root/html604/TH2.html,1,['Inherit'],['InheritsFrom']
Modifiability,"uble_t* wwNN, Int_t a_1, Int_t a_2). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Int_t>*fClassthe event class (1=signal, 2=background); TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fCost_1; TMatrixF*fDatathe (data,var) string; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fDel_1; TStringfLayerSpecthe hidden layer specification string; Int_tfNcyclesnumber of training cycles; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fNeur_1; Int_tfNlayersnumber of layers (including input and output layers); Int_t*fNodesnumber of nodes per layer; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html:19017,variab,variables,19017,root/html530/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html,10,['variab'],"['variable', 'variables']"
Modifiability,"uble_t*TQpSolverBase::fMu_history[fMaxit] history of values of mu obtained on all iterations to date; Double_tTQpSolverBase::fMutoltermination parameters; Int_tfNumberGondzioCorrectionsactual number of Gondzio corrections needed; Double_tTQpSolverBase::fPhimerit function, defined as the sum of the complementarity gap; Double_t*TQpSolverBase::fPhi_history[fMaxit] history of values of phi obtained on all iterations to date; Double_t*TQpSolverBase::fPhi_min_history[fMaxit] the i-th entry of this array contains the minimum value of phi; Int_tfPrintlevelparameter in range [0,100] determines verbosity. (Higher value; Double_t*TQpSolverBase::fRnorm_history[fMaxit] history of values of residual norm obtained on all iterations to date; TQpVar*fStep; Double_tfStepFactor0various parameters associated with Gondzio correction; Double_tfStepFactor1; TQpLinSolverBase*TQpSolverBase::fSys; Double_tfTsigexponent in Mehrotra's centering parameter, which is usually. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGondzioSolver(); Default constructor. TGondzioSolver(TQpProbBase* of, TQpDataBase* prob, Int_t verbose = 0); Constructor. TGondzioSolver(const TGondzioSolver& another); Copy constructor. Int_t Solve(TQpDataBase* prob, TQpVar* iterate, TQpResidual* resid); Solve the quadratic programming problem as formulated through prob, store; the final solution in iterate->fX . Monitor the residuals during the iterations; through resid . The status is returned as defined in TQpSolverBase::ETerminationCode . void DefMonitor(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t status_code, Int_t level); Print information about the optimization process and monitor the convergence; status of thye algorithm. ~TGondzioSolver(); Deconstructor. TGondzioSolver & operator=(const TGondzioSolver& source); Assignment operator. void Reset_parameters(); {}. » Author: Eddy Offermann May 2004 » Copyright ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGondzioSolver.html:8436,Inherit,Inheritance,8436,root/html532/TGondzioSolver.html,https://root.cern,https://root.cern/root/html532/TGondzioSolver.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble_tGetStep() const; TGeoManager::ThreadData_t&GetThreadData() const; virtual const char*TNamed::GetTitle() const; Double_tGetTmax() const; Bool_tGetTminTmax(Double_t& tmin, Double_t& tmax) const; TGeoNode*GetTopNode() const; TGeoVolume*GetTopVolume() const; TVirtualGeoTrack*GetTrack(Int_t index); Int_tGetTrackIndex(Int_t id) const; TVirtualGeoTrack*GetTrackOfId(Int_t id) const; Int_tGetUID(const char* volname) const; virtual UInt_tTObject::GetUniqueID() const; static Int_tGetVerboseLevel(); Int_tGetVirtualLevel(); Double_tGetVisDensity() const; Int_tGetVisLevel() const; Int_tGetVisOption() const; TGeoVolume*GetVolume(const char* name) const; TGeoVolume*GetVolume(Int_t uid) const; Bool_tGotoSafeLevel(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static TGeoManager*Import(const char* filename, const char* name = """", Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; TGeoNode*InitTrack(const Double_t* point, const Double_t* dir); TGeoNode*InitTrack(Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz); virtual voidTObject::Inspect() constMENU ; voidInspectState() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActivityEnabled() const; Bool_tIsAnimatingTracks() const; Bool_tIsCheckingOverlaps() const; Bool_tIsClosed() const; Bool_tIsCurrentOverlapping() const; Bool_tIsDrawingExtra() const; Bool_tIsEntering() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsExiting() const; virtual Bool_tIsFolder() const; Bool_tIsInPhiRange() const; static Bool_tIsLocked(); Bool_tIsMatrixReflection() const; Bool_tIsMatrixTransform() const; Bool_tIsMultiThread() const; Bool_tIsNodeSelectable() const; Bool_tIsNullStep() const; Bool_tIsOnBoundary() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutsid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoManager.html:19678,Inherit,InheritsFrom,19678,root/html532/TGeoManager.html,https://root.cern,https://root.cern/root/html532/TGeoManager.html,1,['Inherit'],['InheritsFrom']
Modifiability,"uble_tTGeoTrapEditor::fThetaiInitial theta; Double_tTGeoTrapEditor::fTl1iInitial half length in x at low z and y high edge; Double_tfTwistiInitial twist angle; TGTextButton*TGeoTrapEditor::fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoGtraEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for gtra editor. ~TGeoGtraEditor(); Destructor. void SetModel(TObject* obj); Connect to a given twisted trapezoid. void DoApply(); Slot for applying current settings. void DoUndo(); Slot for undoing last operation. void DoTwist(); Change the twist angle. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTrapEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoGtraEditor.html:22084,Inherit,Inheritance,22084,root/html532/TGeoGtraEditor.html,https://root.cern,https://root.cern/root/html532/TGeoGtraEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uble_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidHoneycomb(Double_t xstart, Double_t ystart, Double_t a, Int_t k, Int_t s); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, const Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, const Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, const Option_t*) const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2Poly.html:16319,Inherit,InheritsFrom,16319,root/html602/TH2Poly.html,https://root.cern,https://root.cern/root/html602/TH2Poly.html,2,['Inherit'],['InheritsFrom']
Modifiability,"uble_tTH1::fTsumwx2Total Sum of weight*X*X; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1S(); Constructor. TH1S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup); Create a 1-Dim histogram with fix bins of type short; (see TH1::TH1 for explanation of parameters). TH1S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins); Create a 1-Dim histogram with variable bins of type short; (see TH1::TH1 for explanation of parameters). TH1S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins); Create a 1-Dim histogram with variable bins of type short; (see TH1::TH1 for explanation of parameters). ~TH1S(); Destructor. TH1S(const TH1S& h1s); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this to newth1. void Reset(Option_t* option = """"); Reset. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH1S& operator=(const TH1S& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const. void UpdateBinContent(Int_t bin, Double_t content). » Author: Rene Brun 26/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1S.html:25877,variab,variable,25877,root/html602/TH1S.html,https://root.cern,https://root.cern/root/html602/TH1S.html,2,['variab'],['variable']
Modifiability,"uble_tTH1::fTsumwx2Total Sum of weight*X*X; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1S(); Constructor. TH1S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup); Create a 1-Dim histogram with fix bins of type short; (see TH1::TH1 for explanation of parameters). TH1S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins); Create a 1-Dim histogram with variable bins of type short; (see TH1::TH1 for explanation of parameters). TH1S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins); Create a 1-Dim histogram with variable bins of type short; (see TH1::TH1 for explanation of parameters). ~TH1S(); Destructor. TH1S(const TH1S& h1s); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy this to newth1. void Reset(Option_t* option = """"); Reset. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH1S& operator=(const TH1S& h1); Operator =. Double_t RetrieveBinContent(Int_t bin) const. void UpdateBinContent(Int_t bin, Double_t content). » Author: Rene Brun 26/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-07-01 17:55; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1S.html:25838,variab,variable,25838,root/html604/TH1S.html,https://root.cern,https://root.cern/root/html604/TH1S.html,2,['variab'],['variable']
Modifiability,"uble_toperator()(const Double_t* xvector) const; RooAbsFunc&RooAbsFunc::operator=(const RooAbsFunc&); virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; voidRooAbsFunc::resetNumCall() const; virtual voidrestoreXVec() const; virtual voidsaveXVec() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidloadValues(const Double_t* xvector) const. Data Members; protected:. Bool_t_clipInvalid; UInt_tRooAbsFunc::_dimensionNumber of observables; const RooAbsReal*_func; Int_tRooAbsFunc::_ncallFunction call counter; const RooArgSet*_nset; const TNamed*_rangeName!; Bool_tRooAbsFunc::_validIs binding in valid state?; RooAbsRealLValue**_vars; Double_t*_xsave; Bool_t_xvecValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealBinding(const RooAbsReal& func, const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE, const TNamed* rangeName = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealBinding.html:2164,variab,variables,2164,root/html526/RooRealBinding.html,https://root.cern,https://root.cern/root/html526/RooRealBinding.html,1,['variab'],['variables']
Modifiability,"uble_t ; w . ). virtual . Set the number of entries in bin. ; Definition at line 1918 of file TProfile2D.cxx. ◆ SetBins() [1/7]. void TProfile2D::SetBins ; (; const Int_t * ; nbins, . const Double_t * ; range . ). inlineprotected . Definition at line 49 of file TProfile2D.h. ◆ SetBins() [2/7]. void TProfile2D::SetBins ; (; Int_t ; nbinsx, . Double_t ; xmin, . Double_t ; xmax, . Int_t ; nbinsy, . Double_t ; ymin, . Double_t ; ymax . ). overridevirtual . Redefine x and y axis parameters. ; Reimplemented from TH1.; Definition at line 1926 of file TProfile2D.cxx. ◆ SetBins() [3/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins . ). overridevirtual . Redefine x and y axis parameters for variable bin sizes. ; Reimplemented from TH1.; Definition at line 1936 of file TProfile2D.cxx. ◆ SetBins() [4/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins . ). inlineoverrideprivatevirtual . Redefine x axis parameters with variable bin sizes. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1 ; Reimplemented from TH1.; Definition at line 69 of file TProfile2D.h. ◆ SetBins() [5/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins, . Int_t ; nz, . const Double_t * ; zBins . ). inlineoverrideprivatevirtual . Redefine x, y and z axis parameters with variable bin sizes. ; The X, Y and Z axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1, zBins is supposed to be of length nz+1 ; Reimplemented from TH1.; Definition at line 73 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:102243,variab,variable,102243,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"uble_t GetMin () const;  ; Int_t GetNBins () const;  ; void InitBins (const std::string &quant_name, Int_t nbins, Double_t min, Double_t max);  Initialize internal point-sets with given binning parameters. ;  ; void RemoveElementLocal (REveElement *el) override;  Virtual from REveElement, provide bin management. ;  ; void RemoveElementsLocal () override;  Virtual from REveElement, provide bin management. ;  ; void SetDefPointSetCapacity (Int_t c);  ; void SetMarkerColor (Color_t tcolor=1) override;  Set marker color, propagate to children. ;  ; void SetMarkerSize (Size_t msize=1) override;  Set marker size, propagate to children. ;  ; void SetMarkerStyle (Style_t mstyle=1) override;  Set marker style, propagate to children. ;  ; void SetRange (Double_t min, Double_t max);  Set active range of the separating quantity. ;  ; Int_t Size (Bool_t under=kFALSE, Bool_t over=kFALSE) const;  Get the total number of filled points. ;  ;  Public Member Functions inherited from ROOT::Experimental::REveElement;  REveElement (const REveElement &e);  Copy constructor. ;  ;  REveElement (const std::string &name="""", const std::string &title="""");  Default constructor. ;  ; virtual ~REveElement ();  Destructor. ;  ; virtual Bool_t AcceptElement (REveElement *el);  Check if el can be added to this element. ;  ; virtual void AddAunt (REveAunt *au);  Add el into the list aunts. ;  ; virtual void AddElement (REveElement *el);  Add el to the list of children. ;  ; virtual void AddStamp (UChar_t bits);  Add (bitwise or) given stamps to fChangeBits. ;  ; virtual void Annihilate ();  Optimized destruction without check of reference-count. ;  ; virtual void AnnihilateElements ();  Annihilate elements. ;  ; Bool_t ApplyVizTag (const TString &tag, const TString &fallback_tag="""");  Set the VizTag, find model-element from the VizDB and copy visualization-parameters from it. ;  ; virtual void BuildRenderData ();  Write transformation Matrix to render data. ;  ; virtual Bool_t CanEditElement () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html:1896,inherit,inherited,1896,doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,"uble_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  return composite MVA response ;  ; virtual Double_t GetMvaValue (Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  text streamer ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  XML streamer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () const;  ; const Event * GetEvent (const TMVA::Event *ev) const;  ; const Event * GetEvent (Long64_t ievt) const;  ; const Event * GetEvent (Long64_t ievt, Types::ETreeType type) const;  ; const std::vector< TMVA::Event * > & GetEventCollection (Types::ETreeType type);  returns the event collection (i.e. ;  ; TFile * GetFile () const;  ; const TString & GetInputLabel (Int_t i) const;  ; const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html:2740,inherit,inherited,2740,doc/master/classTMVA_1_1MethodBoost.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html,1,['inherit'],['inherited']
Modifiability,"uble_t Mean2Y (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001);  ; virtual Double_t Moment2 (Double_t nx, Double_t ax, Double_t bx, Double_t ny, Double_t ay, Double_t by, Double_t epsilon=0.000001);  Return x^nx * y^ny moment of a 2d function in range [ax,bx],[ay,by]. ;  ; TF2 & operator= (const TF2 &rhs);  Operator =. ;  ; virtual void SetContour (Int_t nlevels=20, const Double_t *levels=nullptr);  Set the number and values of contour levels. ;  ; virtual void SetContourLevel (Int_t level, Double_t value);  Set value for one contour level. ;  ; virtual void SetNpy (Int_t npy=100);  Set the number of points used to draw the function. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Variance2X (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001);  ; virtual Double_t Variance2Y (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001);  ;  Public Member Functions inherited from TF1;  TF1 ();  TF1 default constructor. ;  ;  TF1 (const char *name, const char *formula, Double_t xmin, Double_t xmax, Option_t *option);  Same constructor as above (for TFormula based function) but passing an option strings available options VEC - vectorize the formula expressions (not possible for lambda based expressions) NL - function is not stores in the global list of functions GL - function will be always stored in the global list of functions , independently of the global setting of TF1::DefaultAddToGlobalList. ;  ;  TF1 (const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, EAddToList addToGlobList=EAddToList::kDefault, bool vectorize=false);  TF1 constructor using a formula definition. ;  ; template<class PtrObj , typename MemFn > ;  TF1 (const char *name, const PtrObj &p, MemFn memFn, Double_t xmin, Double_t xmax, Int_t npar, const char *, const char *, EAddToList addToGlobList=EAddToList::kDefault);  ; template<class PtrObj , typename MemFn > ;  TF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF3.html:14254,inherit,inherited,14254,doc/master/classTF3.html,https://root.cern,https://root.cern/doc/master/classTF3.html,1,['inherit'],['inherited']
Modifiability,"uble_t fX = 0.;  Abscissa. ;  ; Double_t fY = 0.;  Constant term. ;  . Private Member Functions; void CopyPoly (TSplinePoly const &other);  Utility called by the copy constructors and = operator. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSpline.h>. Inheritance diagram for TSplinePoly:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSplinePoly() [1/3]. TSplinePoly::TSplinePoly ; (; ). inline . Definition at line 81 of file TSpline.h. ◆ TSplinePoly() [2/3]. TSplinePoly::TSplinePoly ; (; Double_t ; x, . Double_t ; y . ). inline . Definition at line 82 of file TSpline.h. ◆ TSplinePoly() [3/3]. TSplinePoly::TSplinePoly ; (; TSplinePoly const & ; other). inline . Definition at line 83 of file TSpline.h. Member Function Documentation. ◆ Class(). static TClass * TSplinePoly::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSplinePoly::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly.html:10083,inherit,inherited,10083,doc/master/classTSplinePoly.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly.html,2,['inherit'],['inherited']
Modifiability,"uble ; initWgt = 1.0 . ). inline . For internal use in RooFit. ; Definition at line 55 of file RooDataHist.h. ◆ RooDataHist() [9/9]. RooDataHist::RooDataHist ; (; const RooDataHist & ; other, . const char * ; newname = nullptr . ). Copy constructor. ; Definition at line 887 of file RooDataHist.cxx. ◆ ~RooDataHist(). RooDataHist::~RooDataHist ; (; ). override . Destructor. ; Definition at line 968 of file RooDataHist.cxx. Member Function Documentation. ◆ _adjustBinning(). void RooDataHist::_adjustBinning ; (; RooRealVar & ; theirVar, . const TAxis & ; axis, . RooRealVar * ; ourVar, . Int_t * ; offset . ). private . Helper doing the actual work of adjustBinning(). ; Definition at line 667 of file RooDataHist.cxx. ◆ add() [1/4]. void RooDataHist::add ; (; const RooAbsData & ; dset, . const char * ; cut, . double ; wgt = 1.0 . ). Add all data points contained in 'dset' to this data set with given weight. ; Optional cut string expression selects the data points to be added and can reference any variable contained in this data set ; Definition at line 1802 of file RooDataHist.cxx. ◆ add() [2/4]. void RooDataHist::add ; (; const RooAbsData & ; dset, . const RooFormulaVar * ; cutVar = nullptr, . double ; wgt = 1.0 . ). Add all data points contained in 'dset' to this data set with given weight. ; Optional RooFormulaVar pointer selects the data points to be added. ; Definition at line 1814 of file RooDataHist.cxx. ◆ add() [3/4]. void RooDataHist::add ; (; const RooArgSet & ; row, . double ; wgt, . double ; sumw2 . ). Increment the bin content of the bin enclosing the given coordinates. ; Parameters. [in]rowCoordinates of the bin. ; [in]wgtIncrement by this weight. ; [in]sumw2Optionally, track the sum of squared weights. If a value > 0 or a weight != 1. is passed for the first time, a vector for the squared weights will be allocated. . Definition at line 1704 of file RooDataHist.cxx. ◆ add() [4/4]. void RooDataHist::add ; (; const RooArgSet & ; row, . double ; wgt = 1.0 . ). i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:51515,variab,variable,51515,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variable']
Modifiability,"uble DerivativeIntToExt (double x) const;  ; double ExternalToInternal (double x) const;  ; double FixValue () const;  ; bool HasLowerBound () const;  ; bool HasUpperBound () const;  ; double InternalToExternal (double x) const;  ; bool IsFixed () const;  ; bool IsLimited () const;  ; double LowerBound () const;  ; MinimTransformVariable & operator= (const MinimTransformVariable &rhs);  ; double UpperBound () const;  . Private Attributes; bool fBounds;  has double bound ;  ; bool fFix;  fix variable ;  ; bool fLowBound;  has lower bound ;  ; double fLower;  lower parameter limit ;  ; std::unique_ptr< MinimizerVariableTransformation > fTransform;  pointer to the minimizer transformation ;  ; bool fUpBound;  has upper bound param ;  ; double fUpper;  upper parameter limit ;  . #include <Math/MinimTransformVariable.h>; Constructor & Destructor Documentation. ◆ MinimTransformVariable() [1/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; ). inline . Default Constructor for an unlimited variable. ; Definition at line 55 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [2/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; double ; value). inline . Definition at line 61 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [3/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; double ; lower, . double ; upper, . SinVariableTransformation * ; trafo . ). inline . Definition at line 67 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [4/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; double ; lower, . SqrtLowVariableTransformation * ; trafo . ). inline . Definition at line 74 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [5/6]. ROOT::Math::MinimTransformVariable::MinimTransformVariable ; (; double ; upper, . SqrtUpVariableTransformation * ; trafo . ). inline . Definition at line 80 of file MinimTransformVariable.h. ◆ MinimTransformVariable() [6/6]. ROOT::Math::M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html:2210,variab,variable,2210,doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,1,['variab'],['variable']
Modifiability,"ublic Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWithIndex = (1ULL << ( 5 )); , kGetFriend = (1ULL << ( 6 )); , kGetFriendAlias = (1ULL << ( 7 )); , ;   kGetLeaf = (1ULL << ( 8 )); , kLoadTree = (1ULL << ( 9 )); , kPrint = (1ULL << ( 10 )); , kRemoveFriend = (1ULL << ( 11 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TChain; void InvalidateCurrentTree ();  Set the TTree to be reloaded as soon as possible. ;  ; void ReleaseChainProof ();  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpArr (const char *branchname, EDataType datatype, std::size_t N, void *addobj, Int_t bufsize, Int_t splitlevel);  ; virtual TBranch * BranchImpRef (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BranchImpRef (const char *branchname, TClass *ptrClass, EDataType datatype, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch but automatic detection of the class name. ;  ; virtual TBranch * BronchExec (const char *name, const char *classname, void *addobj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofChain.html:51104,inherit,inherited,51104,doc/master/classTProofChain.html,https://root.cern,https://root.cern/doc/master/classTProofChain.html,1,['inherit'],['inherited']
Modifiability,"ublic Attributes; TGCompositeFrame * fFrame;  ; TString fName;  . Private Member Functions;  TGedSubFrame (const TGedSubFrame &)=delete;  ; TGedSubFrame & operator= (const TGedSubFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGedFrame.h>. Inheritance diagram for TGedFrame::TGedSubFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGedSubFrame() [1/2]. TGedFrame::TGedSubFrame::TGedSubFrame ; (; const TGedSubFrame & ; ). privatedelete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html:8975,inherit,inherited,8975,doc/master/classTGedFrame_1_1TGedSubFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html,1,['inherit'],['inherited']
Modifiability,"ublic Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; value_type evaluate () const override;  Calculate and return the value of the mapping function. ;  ; void initialize (const char *catTypeName=nullptr);  Iterator over all bins in input variable and define corresponding state labels. ;  ; void recomputeShape () override;  The shape of this category does not need to be recomputed, as it creates states on the fly. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the given vector store. ;  ; void clearTypes ();  Delete all currently defined states. ;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValueDirty=true) override;  Copy the cached value from given source and raise dirty flag. ;  ; virtual const std::map< std::string, RooAbsCategory::value_type >::value_type & defineState (const std::string &label);  Define a new state with given label. ;  ; virtual const std::map< std::string, RooAbsCategory::value_type >::value_type & defineState (const std::string &label, value_type index);  Define new state with given name and index number. ;  ; void defineStateUnchecked (const std::string &label, value_type index);  Internal version of defineState() that does not check if type already exists. ;  ; void fillTre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinningCategory.html:35069,inherit,inherited,35069,doc/master/classRooBinningCategory.html,https://root.cern,https://root.cern/doc/master/classRooBinningCategory.html,1,['inherit'],['inherited']
Modifiability,"ublic Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSet.html:33504,inherit,inherited,33504,doc/master/classTEveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSet.html,4,['inherit'],['inherited']
Modifiability,"ublic Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElementList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * Decl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionManager.html:29751,inherit,inherited,29751,doc/master/classTEveProjectionManager.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionManager.html,4,['inherit'],['inherited']
Modifiability,ublic Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TString fLabel;  Label written at the center of Pave. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveLabel.html:19875,inherit,inherited,19875,doc/master/classTPaveLabel.html,https://root.cern,https://root.cern/doc/master/classTPaveLabel.html,1,['inherit'],['inherited']
Modifiability,"ublic Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; THbookFile * fDirectory;  ; Int_t fID;  pointer to the Hbook file ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <THbookKey.h>. Inheritance diagram for THbookKey:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera inst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookKey.html:10218,inherit,inherited,10218,doc/master/classTHbookKey.html,https://root.cern,https://root.cern/doc/master/classTHbookKey.html,1,['inherit'],['inherited']
Modifiability,"ublic Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooCFunction3PdfBinding< VO, VI1, VI2, VI3 > Class Template Reference. ; template<class VO, class VI1, class VI2, class VI3>; class RooCFunction3PdfBinding< VO, VI1, VI2, VI3 >; Definition at line 308 of file RooCFunction3Binding.h. Public Member Functions;  RooCFunction3PdfBinding ();  ;  RooCFunction3PdfBinding (const char *name, const char *title, VO(*_func)(VI1, VI2, VI3), RooAbsReal &_x, RooAbsReal &_y, RooAbsReal &_z);  ;  RooCFunction3PdfBinding (const RooCFunction3PdfBinding &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction3PdfBinding.html:1201,inherit,inherited,1201,doc/master/classRooCFunction3PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction3PdfBinding.html,1,['inherit'],['inherited']
Modifiability,ublic Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig & defaultConfig ();  Return reference to instance of default numeric integrator configuration object. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooLinkedList _configSets;  List of configuration sets for individual integration methods. ;  ; RooCategory _method1D;  Selects integration method for 1D p.d.f.s. ;  ; RooCategory _method1DCat;  Selects integration method for 1D p.d.f.s with categories. ;  ; RooCategory _method1DCond;  Selects integration method for 1D conditional p.d.f.s. ;  ; RooCategory _method1DCondCat;  Selects integration method for 1D conditional p.d.f.s with categories. ;  ; RooCategory _method2D;  Selects integration method for 2D p.d.f.s. ;  ; RooCategory _method2DCat;  Selects integration method for 2D p.d.f.s with categories. ;  ; RooCategory _,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenConfig.html:11759,inherit,inherited,11759,doc/master/classRooNumGenConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumGenConfig.html,1,['inherit'],['inherited']
Modifiability,ublic Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumIntConfig & defaultConfig ();  Return reference to instance of default numeric integrator configuration object. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooLinkedList _configSets;  List of configuration sets for individual integration methods. ;  ; double _epsAbs;  Absolute precision. ;  ; double _epsRel;  Relative precision. ;  ; RooCategory _method1D;  Selects integration method for 1D integrals. ;  ; RooCategory _method1DOpen;  Selects integration method for open ended 1D integrals. ;  ; RooCategory _method2D;  Selects integration method for 2D integrals. ;  ; RooCategory _method2DOpen;  Selects integration method for open ended 2D integrals. ;  ; RooCategory _methodND;  Selects integration method for ND integrals. ;  ; RooCategory _methodNDOpen;  Selects integration me,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntConfig.html:12343,inherit,inherited,12343,doc/master/classRooNumIntConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumIntConfig.html,1,['inherit'],['inherited']
Modifiability,"ublic Member Functions;  TProofDrawGraph ();  ; void Init (TTree *tree) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawGraph.html:1396,inherit,inherited,1396,doc/master/classTProofDrawGraph.html,https://root.cern,https://root.cern/doc/master/classTProofDrawGraph.html,1,['inherit'],['inherited']
Modifiability,"ublic RooAbsFunc. Lightweight RooAbsFunction implementation that applies a constant scale ; factor to another RooAbsFunc.; . Function Members (Methods); public:. RooScaledFunc(const RooScaledFunc&); RooScaledFunc(const RooAbsFunc& func, Double_t scaleFactor); virtual~RooScaledFunc(); static TClass*Class(); UInt_tRooAbsFunc::getDimension() const; virtual Double_tgetMaxLimit(UInt_t index) const; virtual Double_tgetMinLimit(UInt_t index) const; virtual const char*RooAbsFunc::getName() const; virtual TClass*IsA() const; Bool_tRooAbsFunc::isValid() const; Int_tRooAbsFunc::numCall() const; virtual Double_toperator()(const Double_t* xvector) const; RooAbsFunc&RooAbsFunc::operator=(const RooAbsFunc&); virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; voidRooAbsFunc::resetNumCall() const; virtual voidRooAbsFunc::restoreXVec() const; virtual voidRooAbsFunc::saveXVec() const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. UInt_tRooAbsFunc::_dimensionNumber of observables; const RooAbsFunc*_func; Int_tRooAbsFunc::_ncallFunction call counter; Double_t_scaleFactor; Bool_tRooAbsFunc::_validIs binding in valid state?. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline RooScaledFunc(const RooAbsFunc& func, Double_t scaleFactor); { }. virtual ~RooScaledFunc(); { }. Double_t operator()(const Double_t* xvector) const. Double_t getMinLimit(UInt_t index) const; { return _func->getMinLimit(index); }. Double_t getMaxLimit(UInt_t index) const; { return _func->getMaxLimit(index); }. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const. » Last changed: Thu Nov 3 20:09:12 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooScaledFunc.html:1571,Inherit,Inheritance,1571,root/html532/RooScaledFunc.html,https://root.cern,https://root.cern/root/html532/RooScaledFunc.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ublic TFile, public TXMLSetup. The main motivation for the XML format is to facilitate the; communication with other non ROOT applications. Currently; writing and reading XML files is limited to ROOT applications.; It is our intention to develop a simple reader independent; of the ROOT libraries that could be used as an example for; real applications. One of possible approach with code generation; is implemented in TXMLPlayer class. The XML format should be used only for small data volumes,; typically histogram files, pictures, geometries, calibrations.; The XML file is built in memory before being dumped to disk. Like for normal ROOT files, XML files use the same I/O mechanism; exploiting the ROOT/CINT dictionary. Any class having a dictionary; can be saved in XML format. This first implementation does not support subdirectories; or Trees. The shared library libRXML.so may be loaded dynamically; via gSystem->Load(""libRXML""). This library is automatically; loaded by the plugin manager as soon as a XML file is created; via, eg; TFile::Open(""file.xml"",""recreate"");; TFile::Open returns a TXMLFile object. When a XML file is open in write mode,; one can use the normal TObject::Write to write an object in the file.; Alternatively one can use the new functions TDirectoryFile::WriteObject and; TDirectoryFile::WriteObjectAny to write a TObject* or any class not deriving; from TObject. example of a session saving a histogram to a XML file. TFile *f = TFile::Open(""Example.xml"",""recreate"");; TH1F *h = new TH1F(""h"",""test"",1000,-2,2);; h->FillRandom(""gaus"");; h->Write();; delete f;. example of a session reading the histogram from the file. TFile *f = TFile::Open(""Example.xml"");; TH1F *h = (TH1F*)f->Get(""h"");; h->Draw();. A new option in the canvas ""File"" menu is available to save; a TCanvas as a XML file. One can also do; canvas->Print(""Example.xml"");. Configuring ROOT with the option ""xml"". The XML package is enabled by default. documentation. See also classes TBufferXML, TKeyXM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXMLFile.html:1252,plugin,plugin,1252,root/html528/TXMLFile.html,https://root.cern,https://root.cern/root/html528/TXMLFile.html,10,['plugin'],['plugin']
Modifiability,"ublic TMVA::SeparationBase. Implementation of the GiniIndexWithLaplace as separation criterion. Function Members (Methods); public:. virtual~GiniIndexWithLaplace(); static TClass*Class(); const TString&TMVA::SeparationBase::GetName(); Double_tTMVA::SeparationBase::GetSeparationGain(const Double_t& nSelS, const Double_t& nSelB, const Double_t& nTotS, const Double_t& nTotB); virtual Double_tGetSeparationIndex(const Double_t& s, const Double_t& b); TMVA::GiniIndexWithLaplaceGiniIndexWithLaplace(); TMVA::GiniIndexWithLaplaceGiniIndexWithLaplace(const TMVA::GiniIndexWithLaplace& g); virtual TClass*IsA() const; TMVA::GiniIndexWithLaplace&operator=(const TMVA::GiniIndexWithLaplace&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. TStringTMVA::SeparationBase::fNamename of the concrete Separation Index impementation; Double_tTMVA::SeparationBase::fPrecisionCut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Double_t GetSeparationIndex(const Double_t& s, const Double_t& b); Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2; Where: M is a smaple of whatever N elements (events); that belong to K different classes; c(k) is the number of elements that belong to class k; Laplace's correction to the prob.density c/N --> (c+1)/(N+2); for just Signal and Background classes this then boils down to:; Gini(Sample) = 2(s*b+s+b+1)/(s+b+2)^2. GiniIndexWithLaplace(); construtor for the GiniIndexWithLaplace. { fName=""GiniLaplace""; }. GiniIndexWithLaplace(const TMVA::GiniIndexWithLaplace& g); copy constructor. {}. virtual ~GiniIndexWithLaplace(); destructor. {}. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: GiniIndexWithLaplace.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__GiniIndexWithLaplace.html:1291,Inherit,Inheritance,1291,root/html532/TMVA__GiniIndexWithLaplace.html,https://root.cern,https://root.cern/root/html532/TMVA__GiniIndexWithLaplace.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ublic:; TObjNum(Int_t i = 0) : num(i) { }; ~TObjNum() { }; void SetNum(Int_t i) { num = i; }; Int_t GetNum() const { return num; }; void Print(Option_t *) const; { printf(""num = %dn"", num); }; Bool_t IsEqual(TObject *obj) const; { return num == ((TObjNum*)obj)->num; }; Bool_t IsSortable() const { return kTRUE; }; Int_t Compare(const TObject *obj) const; { if (num < ((TObjNum*)obj)->num) return -1;; else if (num > ((TObjNum*)obj)->num) return 1;; else return 0; }; ULong_t Hash() const { return num; }; };; 16.5 The TIter Generic Iterator; As stated above, the TIterator class is abstract; it is not possible to create TIterator objects. However, it should be possible to write generic code to process all members of a collection so there is a need for a generic iterator object. A TIter object acts as generic iterator. It provides the same Next() and Reset() methods as TIterator although it has no idea how to support them! It works as follows:. To create a TIter object its constructor must be passed an object that inherits from TCollection. The TIter constructor calls the MakeIterator() method of this collection to get the appropriate iterator object that inherits from TIterator.; The Next() and Reset() methods of TIter simply call the Next() and Reset() methods of the iterator object. Therefore, TIter simply acts as a wrapper for an object of a concrete class inheriting from TIterator.; To see this working in practice, consider the TObjArray collection. Its associated iterator is TObjArrayIter. Suppose myarray is a pointer to a TObjArray that contains MyClass objects, i.e.; TObjArray *myarray;; To create a TIter object called myiter:; TIter myiter(myarray);. As shown in the diagram, this results in several methods being called:. The TIter constructor is passed a TObjArray; TIter asks embedded TCollection to make an iterator; TCollection asks TObjArray to make an iterator; TObjArray returns a TObjArrayIter. Now define a pointer for MyClass objects and set it to each member",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:849236,inherit,inherits,849236,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"ubstantial saving; of time.; 2.Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. References:. 1.A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2.A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. @ingroup Integration. Function Members (Methods); public:. virtual~AdaptiveIntegratorMultiDim(); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::AdaptiveIntegratorMultiDim&); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxpts = 100000, unsigned int size = 0); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxcall = 100000, unsigned int size = 0); virtual doubleError() const; virtual doubleIntegral(const double* xmin, const double* xmax); doubleIntegral(const ROOT::Math::IMultiGenFunction& f, const double* xmin, const double* xmax); virtual intNEval() const; ROOT::Math::AdaptiveIntegratorMultiDim&operator=(const ROOT::Math::AdaptiveIntegratorMultiDim&); virtual ROOT::Math::IntegratorMultiDimOptionsOptions() const; doubleRelError() const; virtual doubleResult() const; virtual voidSetAbsTolerance(double absTol); virtual voidSetFunction(const ROOT::Math::IMultiGenFunction& f); voidSetMaxPts(unsigned int n); voidSetMinPts(unsigned int n); virtual voidSetOptions(const ROOT::Math::IntegratorMultiDimOptions& opt); virtual voidSetRelTolerance(double relTol); voidSetSize(unsigned int size); virtual intStatus() const; virtual RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html:3114,Adapt,AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim,3114,root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,2,['Adapt'],['AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim']
Modifiability,"uct; kAll; kRefs; kMarked; };; enum TDataSet::ESetBits { kMark; kArray; };; enum TDataSet::EBitOpt { kSet; kReset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static const char*TTable::fgTypeName[13]. protected:. TTableDescriptor*fColDescriptors; TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; Long_tTTable::fMaxIndexThe used capacity of this array; Int_tTTable::fNNumber of array elements; TStringTNamed::fNameobject identifier; TDataSet*TDataSet::fParentpointer to mother of the directory; Long_tTTable::fSizeSize of the one element (row) of the table; Char_t*TTable::fTableArray of (fN*fSize) longs; TStringTNamed::fTitleobject title; static TDataSet*TDataSet::fgMainSetpointer the main dataset;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGenericTable(const TTableDescriptor& dsc, const char* name). Create TGenericTable by TTableDescriptor pointer:. dsc - Pointer to the table descriptor; name - The name of this object. TGenericTable(const TTableDescriptor& dsc, Int_t n). Create TGenericTable by TTableDescriptor pointer:. dsc - Pointer to the table descriptor; name - ""TGenericTable""; n - The initial number of allocated rows. TGenericTable(const TTableDescriptor& dsc, const char* name, Int_t n). Create TGenericTable by TTableDescriptor pointer:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. TGenericTable(const char* structName, const char* name). Create TGenericTable by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. TGenericTable(const char* structName, Int_t n). Create TGenericTable by C structure name provided:.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGenericTable.html:16309,Inherit,Inheritance,16309,root/html532/TGenericTable.html,https://root.cern,https://root.cern/root/html532/TGenericTable.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uct_t fFontStruct;  font used to draw string ;  ; GContext_t fNormGC;  text drawing graphics context ;  ; TGString * fText;  entry text string ;  ; Bool_t fTextChanged;  true if text has been changed ;  ; UInt_t fTHeight;  text height ;  ; UInt_t fTWidth;  text width ;  ;  Protected Attributes inherited from TGLBEntry; Bool_t fActive;  true if entry is active ;  ; Pixel_t fBkcolor;  entry background color ;  ; Int_t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGIconLBEntry (const TGIconLBEntry &)=delete;  ; TGIconLBEntry operator= (const TGIconLBEntry &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIconLBEntry.html:26296,inherit,inherited,26296,doc/master/classTGIconLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGIconLBEntry.html,1,['inherit'],['inherited']
Modifiability,"uct_t fFontStruct;  font used to draw string ;  ; GContext_t fNormGC;  text drawing graphics context ;  ; TGString * fText;  entry text string ;  ; Bool_t fTextChanged;  true if text has been changed ;  ; UInt_t fTHeight;  text height ;  ; UInt_t fTWidth;  text width ;  ;  Protected Attributes inherited from TGLBEntry; Bool_t fActive;  true if entry is active ;  ; Pixel_t fBkcolor;  entry background color ;  ; Int_t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGLineLBEntry (const TGLineLBEntry &)=delete;  ; TGLineLBEntry operator= (const TGLineLBEntry &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLineLBEntry.html:26563,inherit,inherited,26563,doc/master/classTGLineLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGLineLBEntry.html,1,['inherit'],['inherited']
Modifiability,"uct_t fFontStruct;  font used to draw string ;  ; GContext_t fNormGC;  text drawing graphics context ;  ; TGString * fText;  entry text string ;  ; Bool_t fTextChanged;  true if text has been changed ;  ; UInt_t fTHeight;  text height ;  ; UInt_t fTWidth;  text width ;  ;  Protected Attributes inherited from TGLBEntry; Bool_t fActive;  true if entry is active ;  ; Pixel_t fBkcolor;  entry background color ;  ; Int_t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextLBEntry.html:24975,inherit,inherited,24975,doc/master/classTGTextLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGTextLBEntry.html,1,['inherit'],['inherited']
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompound(const char* n = ""TEveCompound"", const char* t = """", Bool_t doColor = kTRUE, Bool_t doTransparency = kFALSE); Constructor. void SetMainColor(Color_t color); SetMainColor for the compound.; The color is also propagated to children with compound set to this; whose current color is the same as the old color. The following CompoundSelectionColorBits have further influence:; kCSCBApplyMainColorToAllChildren - apply color to all children;; kCSCBApplyMainColorToMatchingChildren - apply color to children who have; matching old color. void SetMainTransparency(Char_t t); SetMainTransparency for the compound.; The transparenct is also propagated to children with compound set to this; whose current transparency is the same as the old transparency. The following CompoundSelectionColorBits have further influence:; kCSCBApplyMainTransparencyToAllChildren - apply transparency to all children;; kCSCBApplyMainTransparencyToMatchingChildren -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCompound.html:20559,Inherit,Inheritance,20559,root/html602/TEveCompound.html,https://root.cern,https://root.cern/root/html602/TEveCompound.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementList(const char* n = ""TEveElementList"", const char* t = """", Bool_t doColor = kFALSE, Bool_t doTransparency = kFALSE); Constructor. TEveElementList(const TEveElementList& e); Copy constructor. TEveElementList* CloneElement() const; Clone the element via copy constructor.; Virtual from TEveElement. Bool_t AcceptElement(TEveElement* el); Check if TEveElement el is inherited from fChildClass.; Virtual from TEveElement. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveCompoundProjected class. TEveElement& operator=(const TEveElementList& ). const char* GetElementName() const. const char* GetElementTitle() const. void SetElementName(const char* name). void SetElementTitle(const char* title). void SetElementNameTitle(const char* name, const char* title). TObject* GetObject(const TEveException& = ""TEveElementList::GetObject "") const. virtual ~TEveElementList(); {}. TClass* GetChildClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveElementList.html:20427,Inherit,Inheritance,20427,root/html602/TEveElementList.html,https://root.cern,https://root.cern/root/html602/TEveElementList.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementObjectPtr(TObject* obj, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(TObject* obj, Color_t& mainColor, Bool_t own = kTRUE); Constructor. TEveElementObjectPtr(const TEveElementObjectPtr& e); Copy constructor.; If object pointed to is owned it is cloned.; It is assumed that the main-color has its origin in the TObject pointed to so; it is fixed here accordingly. TEveElementObjectPtr* CloneElement() const; Clone the element via copy constructor.; Virtual from TEveElement. TObject* GetObject(const TEveException& eh = ""TEveElementObjectPtr::GetObject "") const; Return external object.; Virtual from TEveElement. void ExportToCINT(char* var_name); Export external object to CINT with variable name var_name.; Virtual from TEveElement. ~TEveElementObjectPtr(); Destructor. TEveElement& operator=(const TEveElementObjectPtr& ). Bool_t GetOwnObject() const; { return fOwnObject; }. void SetOwnObject(Bool_t o); { fOwnObject = o; }.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveElementObjectPtr.html:19208,Inherit,Inheritance,19208,root/html602/TEveElementObjectPtr.html,https://root.cern,https://root.cern/root/html602/TEveElementObjectPtr.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveEventManager(const char* n = ""TEveEventManager"", const char* t = """"); Constructor. void AfterNewEventLoaded(); Virtual function to be called after a new event is loaded.; It iterates over the list of registered commands; (fNewEventCommands) and executes them in given order. void AddNewEventCommand(const TString& cmd); Register a command to be executed on each new event. void RemoveNewEventCommand(const TString& cmd); Remove the first command equal to cmd. void ClearNewEventCommands(); Clear the list of commands to be executed on each new event. TEveEventManager(const char* n = ""TEveEventManager"", const char* t = """"). virtual ~TEveEventManager(); {}. std::vector<TString>& GetNewEventCommands(); { return fNewEventCommands; }. void Open(); {}. void GotoEvent(Int_t ); {}. void NextEvent(); {}. void PrevEvent(); {}. void Close(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:43; This page has been automatically gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveEventManager.html:20889,Inherit,Inheritance,20889,root/html604/TEveEventManager.html,https://root.cern,https://root.cern/root/html604/TEveEventManager.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveEventManager(const char* n = ""TEveEventManager"", const char* t = """"); Constructor. void AfterNewEventLoaded(); Virtual function to be called after a new event is loaded.; It iterates over the list of registered commands; (fNewEventCommands) and executes them in given order. void AddNewEventCommand(const TString& cmd); Register a command to be executed on each new event. void RemoveNewEventCommand(const TString& cmd); Remove the first command equal to cmd. void ClearNewEventCommands(); Clear the list of commands to be executed on each new event. TEveEventManager(const char* n = ""TEveEventManager"", const char* t = """"). virtual ~TEveEventManager(); {}. std::vector<TString>& GetNewEventCommands(); { return fNewEventCommands; }. void Open(); {}. void GotoEvent(Int_t ); {}. void NextEvent(); {}. void PrevEvent(); {}. void Close(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:44; This page has been automatically gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveEventManager.html:20889,Inherit,Inheritance,20889,root/html602/TEveEventManager.html,https://root.cern,https://root.cern/root/html602/TEveEventManager.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGeoShapeProjected(); Constructor. void SetDepthLocal(Float_t d); This should never be called as this class is only used for 3D; projections.; The implementation is required as this metod is abstract.; Just emits a warning if called. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); This is virtual method from base-class TEveProjected. void ComputeBBox(); Override of virtual method from TAttBBox. TEveGeoShape& operator=(const TEveGeoShapeProjected& ). TEveGeoShapeProjected(const TEveGeoShapeProjected& ). virtual ~TEveGeoShapeProjected(); {}. TEveElement* GetProjectedAsElement(); { return this; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:43; This page has been automatically generated. For comments or suggestions regarding the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveGeoShapeProjected.html:23186,Inherit,Inheritance,23186,root/html604/TEveGeoShapeProjected.html,https://root.cern,https://root.cern/root/html604/TEveGeoShapeProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGeoShapeProjected(); Constructor. void SetDepthLocal(Float_t d); This should never be called as this class is only used for 3D; projections.; The implementation is required as this metod is abstract.; Just emits a warning if called. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); This is virtual method from base-class TEveProjected. void UpdateProjection(); This is virtual method from base-class TEveProjected. void ComputeBBox(); Override of virtual method from TAttBBox. TEveGeoShape& operator=(const TEveGeoShapeProjected& ). TEveGeoShapeProjected(const TEveGeoShapeProjected& ). virtual ~TEveGeoShapeProjected(); {}. TEveElement* GetProjectedAsElement(); { return this; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:45; This page has been automatically generated. For comments or suggestions regarding the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGeoShapeProjected.html:23186,Inherit,Inheritance,23186,root/html602/TEveGeoShapeProjected.html,https://root.cern,https://root.cern/root/html602/TEveGeoShapeProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetCone(const Text_t* n = ""TEveJetCone"", const Text_t* t = """"); Constructor. void ComputeBBox(); Compute bounding-box of the data. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveJetConeProjected class. Int_t AddCone(Float_t eta, Float_t phi, Float_t cone_r, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * cone_r : cone radius in eta-phi space; * length : length of the cone; * if cylinder is set and length is adapted to cylinder.; - if length is given, it will be used as scalar factor; * if cylinder is not set, length is used as length of the cone; Return 0 on sucess. Int_t AddEllipticCone(Float_t eta, Float_t phi, Float_t reta, Float_t rphi, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * (reta, rphi) : radius of cone in eta-phi space; * length : length of the cone; * if cylind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveJetCone.html:23760,Inherit,Inheritance,23760,root/html602/TEveJetCone.html,https://root.cern,https://root.cern/root/html602/TEveJetCone.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEvePlot3D(const char* n = ""TEvePlot3D"", const char* t = """"); Constructor. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TEvePlot3D(const TEvePlot3D& ). TEvePlot3D& operator=(const TEvePlot3D& ). virtual ~TEvePlot3D(); {}. void SetPlot(TObject* obj, const TString& opt); { fPlot = obj; fPlotOption = opt; }. TObject* GetPlot() const; { return fPlot; }. TString GetPlotOption() const; { return fPlotOption; }. void SetLogXYZ(Bool_t lx, Bool_t ly, Bool_t lz); { fLogX = lx; fLogY = ly; fLogZ = lz; }. void SetLogX(Bool_t l); { fLogX = l; }. void SetLogY(Bool_t l); { fLogY = l; }. void SetLogZ(Bool_t l); { fLogZ = l; }. Bool_t GetLogX() const; { return fLogX; }. Bool_t GetLogY() const; { return fLogY; }. Bool_t GetLogZ() const; { return fLogZ; }. » Author: Matevz Tadel, 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:44; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEvePlot3D.html:20821,Inherit,Inheritance,20821,root/html604/TEvePlot3D.html,https://root.cern,https://root.cern/root/html604/TEvePlot3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEvePlot3D(const char* n = ""TEvePlot3D"", const char* t = """"); Constructor. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. TEvePlot3D(const TEvePlot3D& ). TEvePlot3D& operator=(const TEvePlot3D& ). virtual ~TEvePlot3D(); {}. void SetPlot(TObject* obj, const TString& opt); { fPlot = obj; fPlotOption = opt; }. TObject* GetPlot() const; { return fPlot; }. TString GetPlotOption() const; { return fPlotOption; }. void SetLogXYZ(Bool_t lx, Bool_t ly, Bool_t lz); { fLogX = lx; fLogY = ly; fLogZ = lz; }. void SetLogX(Bool_t l); { fLogX = l; }. void SetLogY(Bool_t l); { fLogY = l; }. void SetLogZ(Bool_t l); { fLogZ = l; }. Bool_t GetLogX() const; { return fLogX; }. Bool_t GetLogY() const; { return fLogY; }. Bool_t GetLogZ() const; { return fLogZ; }. » Author: Matevz Tadel, 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:46; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePlot3D.html:20821,Inherit,Inheritance,20821,root/html602/TEvePlot3D.html,https://root.cern,https://root.cern/root/html602/TEvePlot3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEvePointSetArray(const char* name = ""TEvePointSetArray"", const char* title = """"); Constructor. ~TEvePointSetArray(); Destructor: deletes the fBins array. Actual removal of; elements done by TEveElement. void RemoveElementLocal(TEveElement* el); Virtual from TEveElement, provide bin management. void RemoveElementsLocal(); Virtual from TEveElement, provide bin management. void SetMarkerColor(Color_t tcolor = 1); Set marker color, propagate to children. void SetMarkerStyle(Style_t mstyle = 1); Set marker style, propagate to children. void SetMarkerSize(Size_t msize = 1); Set marker size, propagate to children. void TakeAction(TEvePointSelector* ); Called from TEvePointSelector when internal arrays of the tree-selector; are filled up and need to be processed.; Virtual from TEvePointSelectorConsumer. Int_t Size(Bool_t under = kFALSE, Bool_t over = kFALSE) const; Get the total number of filled points.; 'under' and 'over' flags specify if un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSetArray.html:22501,Inherit,Inheritance,22501,root/html602/TEvePointSetArray.html,https://root.cern,https://root.cern/root/html602/TEvePointSetArray.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveProjectionManager(TEveProjection::EPType_e type = TEveProjection::kPT_Unknown); Constructor. ~TEveProjectionManager(); Destructor.; Destroys also dependent elements. void AddDependent(TEveElement* el); Add el as dependent element. void RemoveDependent(TEveElement* el); Remove el as dependent element. void UpdateName(); Updates name to have consitent information with prjection. void SetProjection(TEveProjection::EPType_e type); Set projection type and distortion. void SetCenter(Float_t x, Float_t y, Float_t z); Set projection center and rebuild projected scene. Bool_t HandleElementPaste(TEveElement* el); React to element being pasted or dnd-ed.; Return true if redraw is needed (virtual method). Bool_t ShouldImport(TEveElement* el); Returns true if element el should be imported. Behaviour depends on the value of the fImportEmpty member:; false - el or any of its children must be projectable (default);; true - always import. void Upda",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveProjectionManager.html:22566,Inherit,Inheritance,22566,root/html602/TEveProjectionManager.html,https://root.cern,https://root.cern/root/html602/TEveProjectionManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveScene(const char* n = ""TEveScene"", const char* t = """"); Constructor. TEveScene(TGLScenePad* gl_scene, const char* n = ""TEveScene"", const char* t = """"); Constructor. ~TEveScene(); Destructor. void CollectSceneParents(TEveElement::List_t& scenes); Virtual from TEveElement; here we simply append this scene to; the list. void Repaint(Bool_t dropLogicals = kFALSE); Repaint the scene. void RetransHierarchically(); Entry point for hierarchical transformation update.; Calls the recursive variant on all children. void RetransHierarchicallyRecurse(TEveElement* el, const TEveTrans& tp); Set transformation matrix for physical shape of element el in; the GL-scene and recursively descend into children (if enabled). void SetName(const char* n); Set scene's name. void Paint(Option_t* option = """"); Paint the scene. Iterate over children and calls PadPaint(). void DestroyElementRenderers(TEveElement* element); Remove element from the scene.; It is n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveScene.html:21245,Inherit,Inheritance,21245,root/html602/TEveScene.html,https://root.cern,https://root.cern/root/html602/TEveScene.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveSceneList(const char* n = ""TEveSceneList"", const char* t = """"); Constructor. void DestroyScenes(); Destroy all scenes and their contents.; Tho object with non-zero deny-destroy will still survive. void RepaintChangedScenes(Bool_t dropLogicals); Repaint scenes that are tagged as changed. void RepaintAllScenes(Bool_t dropLogicals); Repaint all scenes. void DestroyElementRenderers(TEveElement* element); Loop over all scenes and remove all instances of element from; them. void ProcessSceneChanges(Bool_t dropLogicals, TExMap* stampMap); Loop over all scenes and update them accordingly:; a) if scene is marked as changed, it is repainted;; b) otherwise iteration is done over the set of stamped elements and; their physical/logical shapes are updated accordingly. This allows much finer update granularity without resetting of; complex GL-viewer and GL-scene state. TEveScene& operator=(const TEveSceneList& ). TEveSceneList(const TEveSceneList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveSceneList.html:20725,Inherit,Inheritance,20725,root/html602/TEveSceneList.html,https://root.cern,https://root.cern/root/html602/TEveSceneList.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveShape(const char* n = ""TEveShape"", const char* t = """"); Constructor. ~TEveShape(); Destructor. void SetMainColor(Color_t color); Set main color.; Override so that line-color can also be changed if it is equal; to fill color (which is treated as main color). void CopyVizParams(const TEveElement* el); Copy visualization parameters from element el. void WriteVizParams(ostream& out, const TString& var); Write visualization parameters. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. Int_t FindConvexHull(const TEveShape::vVector2_t& pin, TEveShape::vVector2_t& pout, TEveElement* caller = 0); Determines the convex-hull of points in pin. Adds the hull points to pout and returns the number of added points.; If size of pout is less then 3 then either the number of input points; was too low or they were degenerate so that the hull is actually a line; segment or even a point. Bool_t IsBoxOrientationCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveShape.html:22474,Inherit,Inheritance,22474,root/html602/TEveShape.html,https://root.cern,https://root.cern/root/html602/TEveShape.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveText(const char* txt = """"); Constructor. void SetFontSize(Int_t size, Bool_t validate = kTRUE); Set valid font size. void SetFontFile(const char* name); Set font file regarding to static TGLFontManager fgFontFileArray. void SetFontMode(Int_t mode); Set FTFont class ID. void SetPolygonOffset(Float_t factor, Float_t units); Set the scale and units used to calculate depth values.; See glPolygonOffset manual page. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. void ComputeBBox(); Fill bounding-box information. Virtual from TAttBBox.; If member 'TEveFrameBox* fFrame' is set, frame's corners are; used as bbox. const TGPicture* GetListTreeIcon(Bool_t open = kFALSE); Return TEveText icon. TEveText(const TEveText& ). TEveText& operator=(const TEveText& ). virtual ~TEveText(); {}. Int_t GetFontSize() const; { return fFontSize; }. Int_t GetFontFile() const; { return fFontFile; }. Int_t GetFontMode() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveText.html:20687,Inherit,Inheritance,20687,root/html602/TEveText.html,https://root.cern,https://root.cern/root/html602/TEveText.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackList(TEveTrackPropagator* prop = 0); Constructor. If track-propagator argument is 0, a new default; one is created. TEveTrackList(const char* name, TEveTrackPropagator* prop = 0); Constructor. If track-propagator argument is 0, a new default; one is created. ~TEveTrackList(); Destructor. void SetPropagator(TEveTrackPropagator* prop); Set default propagator for tracks.; This is not enforced onto the tracks themselves but this is the; propagator that is shown in the TEveTrackListEditor. void MakeTracks(Bool_t recurse = kTRUE); Regenerate the visual representations of tracks.; The momentum limits are rescanned during the same traversal. void FindMomentumLimits(Bool_t recurse = kTRUE); Loop over children and find highest pT and p of contained TEveTracks.; These are stored in members fLimPt and fLimP. void FindMomentumLimits(TEveElement* el, Bool_t recurse = kTRUE); Loop over track elements of argument el and find highest pT and p.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrackList.html:24006,Inherit,Inheritance,24006,root/html602/TEveTrackList.html,https://root.cern,https://root.cern/root/html602/TEveTrackList.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackListProjected(); Default constructor. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); This is virtual method from base-class TEveProjected. void SetDepthLocal(Float_t d); This is not needed for functionality as SetDepth(Float_t d); is overriden -- but SetDepthLocal() is abstract.; Just emits a warning if called. void SetDepth(Float_t d); Set depth of all children inheriting from TEveTrackProjected. void SetDepth(Float_t d, TEveElement* el); Set depth of all children of el inheriting from TEveTrackProjected. TEveTrackProjected& operator=(const TEveTrackListProjected& ). void UpdateProjection(). TEveElement* GetProjectedAsElement(); { return this; }. TEveTrackListProjected(const TEveTrackListProjected& ). virtual ~TEveTrackListProjected(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:46; This page has been automatically generated. For comments or suggestions regarding the documentati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveTrackListProjected.html:25523,Inherit,Inheritance,25523,root/html604/TEveTrackListProjected.html,https://root.cern,https://root.cern/root/html604/TEveTrackListProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackListProjected(); Default constructor. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); This is virtual method from base-class TEveProjected. void SetDepthLocal(Float_t d); This is not needed for functionality as SetDepth(Float_t d); is overriden -- but SetDepthLocal() is abstract.; Just emits a warning if called. void SetDepth(Float_t d); Set depth of all children inheriting from TEveTrackProjected. void SetDepth(Float_t d, TEveElement* el); Set depth of all children of el inheriting from TEveTrackProjected. TEveTrackProjected& operator=(const TEveTrackListProjected& ). void UpdateProjection(). TEveElement* GetProjectedAsElement(); { return this; }. TEveTrackListProjected(const TEveTrackListProjected& ). virtual ~TEveTrackListProjected(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:47; This page has been automatically generated. For comments or suggestions regarding the documentati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrackListProjected.html:25523,Inherit,Inheritance,25523,root/html602/TEveTrackListProjected.html,https://root.cern,https://root.cern/root/html602/TEveTrackListProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uctor ; Definition at line 56 of file DataSetInfo.cxx. ◆ ~DataSetInfo(). TMVA::DataSetInfo::~DataSetInfo ; (; ). virtual . destructor ; Definition at line 83 of file DataSetInfo.cxx. ◆ DataSetInfo() [2/2]. TMVA::DataSetInfo::DataSetInfo ; (; const DataSetInfo & ; ). privatedelete . Member Function Documentation. ◆ AddClass(). TMVA::ClassInfo * TMVA::DataSetInfo::AddClass ; (; const TString & ; className). Definition at line 113 of file DataSetInfo.cxx. ◆ AddCut(). void TMVA::DataSetInfo::AddCut ; (; const TCut & ; cut, . const TString & ; className . ). set the cut for the classes ; Definition at line 389 of file DataSetInfo.cxx. ◆ AddSpectator() [1/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddSpectator ; (; const TString & ; expression, . const TString & ; title, . const TString & ; unit, . Double_t ; min, . Double_t ; max, . char ; type = 'F', . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add a spectator (can be a complex expression) to the set of spectator variables used in the MV analysis ; Definition at line 302 of file DataSetInfo.cxx. ◆ AddSpectator() [2/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddSpectator ; (; const VariableInfo & ; varInfo). add spectator with given VariableInfo ; Definition at line 319 of file DataSetInfo.cxx. ◆ AddTarget() [1/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddTarget ; (; const TString & ; expression, . const TString & ; title, . const TString & ; unit, . Double_t ; min, . Double_t ; max, . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add a variable (can be a complex expression) to the set of variables used in the MV analysis ; Definition at line 272 of file DataSetInfo.cxx. ◆ AddTarget() [2/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddTarget ; (; const VariableInfo & ; varInfo). add target with given VariableInfo ; Definition at line 292 of file DataSetInfo.cxx. ◆ AddVariable() [1/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddVariable ; (; const TString & ; expression, . const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:17916,variab,variables,17916,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,1,['variab'],['variables']
Modifiability,"uctor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIdentity.html:14396,inherit,inherited,14396,doc/master/classTGeoIdentity.html,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html,1,['inherit'],['inherited']
Modifiability,"uctor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fAverage;  True if the fit function must be averaged over the bin. ;  ; TH1 * fDenominator;  Denominator histogram. ;  ; Double_t fEpsilon;  Precision required for function integration (option ""I"") ;  ; Bool_t fFitDone;  Set to kTRUE when the fit has been done. ;  ; ROOT::Fit::Fitter * fFitter;  pointer to the real fitter ;  ; TF1 * fFunction;  Function to fit. ;  ; TH1 * fNumerator;  Numerator histogram. ;  ; Bool_t fRange;  True if the fit range must be taken from the function range. ;  . Private Member Functions; void ComputeFCN (Double_t &f, const Double_t *par);  Compute the likelihood. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TBinomialEfficiencyFitter.h>. Inheritance diagram for TBinomialEfficiencyFitter:. This browser is not able to show SVG: try Firefo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBinomialEfficiencyFitter.html:13923,inherit,inherited,13923,doc/master/classTBinomialEfficiencyFitter.html,https://root.cern,https://root.cern/doc/master/classTBinomialEfficiencyFitter.html,1,['inherit'],['inherited']
Modifiability,"uctor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CopyFieldValue (Int_t field);  Extracts field value from statement. ;  ;  Protected Member Functions inherited from TSQLRow;  TSQLRow ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuffer {nullptr};  ; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; ULong_t * fLengths {nullptr};  . Private Member Functions;  TODBCRow (const TODBCRow &)=delete;  ; TODBCRow & operator= (const TODBCRow &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TODBCRow.h>. Inheritance diagram for TODBCRow:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TODBCRow() [1/2]. TODBCRow::TODBCRow ; (; const TODBCRow & ; ). privatedelete . ◆ TODBCRow() [2/2]. TODBCRow::TODBCRow ; (; SQLHSTMT ; stmt, . Int_t ; fiel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTODBCRow.html:10393,inherit,inherited,10393,doc/master/classTODBCRow.html,https://root.cern,https://root.cern/doc/master/classTODBCRow.html,1,['inherit'],['inherited']
Modifiability,"uctor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoArb8Type { kArb8Trap = (1ULL << ( 27 )); , kArb8Tra = (1ULL << ( 28 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoArb8 (const TGeoArb8 &)=delete;  ; void CopyTwist (Double_t *twist=nullptr);  ; TGeoArb8 & operator= (const TGeoArb8 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoArb8.html:22185,inherit,inherited,22185,doc/master/classTGeoArb8.html,https://root.cern,https://root.cern/doc/master/classTGeoArb8.html,1,['inherit'],['inherited']
Modifiability,"uctor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; char * fInterpreter;  path to GhostScript interpreter ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TImagePlugin; TString fExtension;  file extension ;  . #include <TASPluginGS.h>. Inheritance diagram for TASPluginGS:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TASPluginGS(). TASPluginGS::TASPluginGS ; (; const char * ; ext). ctor ; Definition at line 48 of file TASPluginGS.cxx. ◆ ~TASPluginGS(). TASPluginGS::~TASPluginGS ; (; ). override . dtor ; Definition at line 65 of file TASPluginGS.cxx. Member Function Documentation. ◆ Class(). static TClass * TASPluginGS::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TASPluginGS::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TASPluginGS::Class_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPluginGS.html:11027,inherit,inherited,11027,doc/master/classTASPluginGS.html,https://root.cern,https://root.cern/doc/master/classTASPluginGS.html,2,['inherit'],['inherited']
Modifiability,"uctor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void DrawSliceFrame (Int_t low, Int_t up) const;  Draw slice frame. ;  ; void DrawSliceTextured (Double_t pos) const;  Draw slice textured. ;  ; void FindMinMax (Int_t sliceBegin, Int_t sliceEnd) const;  Find minimum and maximum for slice. ;  ; Bool_t PreparePalette () const;  Initialize color palette. ;  ; void PrepareTexCoords (Double_t pos, Int_t sliceBegin, Int_t sliceEnd) const;  Prepare TexCoords. ;  . Private Attributes; const TAxis * fAxis;  ; ESliceAxis fAxisType;  ; const TGLPlotBox * fBox;  ; const TGLPlotCoordinates * fCoord;  ; const TF3 * fF3;  ; const TH3 * fHist;  ; Rgl::Range_t fMinMax;  ; TGLLevelPalette fPalette;  ; Int_t fSliceWidth;  ; TGL2DArray< Double_t > fTexCoords;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGLPlotPainter.h>. Inheritance diagram for TGLTH3Slice:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESliceAxis. enum TGLTH3Slice::ESliceAxis. EnumeratorkXOZ ; kYOZ ; kXOY . Definition at line 101 of file TGLPlotPainter.h. Constructor & Destructor Documentation. ◆ TGLTH3Slice() [1/2]. TGLTH3Slice::TGLTH3Slice ; (; const TString & ; sliceName, . const TH3 * ; hist, . const TGLPlotCoordinates * ; coord, . const TGLPlotBox * ; box, . ESliceAxis ; axis . ). Constructor. ; Definition at line 1700 of file TGLPlotPainter.cxx. ◆ TGLTH3Slice() [2/2]. TGLTH3Slice::TGLTH3Slice ; (; const TString & ; sliceName, . const TH3 * ; hist, . const TF3 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Slice.html:12058,inherit,inherited,12058,doc/master/classTGLTH3Slice.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Slice.html,2,['inherit'],['inherited']
Modifiability,"uctor. ;  ; void clearConvolutionWindow ();  Removes previously defined convolution window, reverting to convolution from -inf to +inf. ;  ; TObject * clone (const char *newname) const override;  ; RooNumIntConfig & convIntConfig ();  ; const RooNumIntConfig & convIntConfig () const;  ; double evaluate () const override;  Calculate convolution integral. ;  ; TClass * IsA () const override;  ; RooAbsReal & model () const;  ; RooAbsReal & pdf () const;  ; const TH2 * profileData () const;  ; void setCallProfiling (bool flag, Int_t nbinX=40, Int_t nbinCall=40, Int_t nCallHigh=1000);  Activate call profile if flag is set to true. ;  ; void setCallWarning (Int_t threshold=2000);  Activate warning messages if number of function calls needed for evaluation of convolution integral exceeds given threshold. ;  ; void setConvolutionWindow (RooAbsReal &centerParam, RooAbsReal &widthParam, double widthScaleFactor=1);  Restrict convolution integral to finite range [ x - C - S*W, x - C + S*W ] where x is current value of convolution variablem, C = centerParam, W=widthParam and S = widthScaleFactor Inputs centerParam and withParam can be function expressions (RooAbsReal, RooFormulaVar) etc. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; RooRealVar & var () const;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:3929,variab,variablem,3929,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['variab'],['variablem']
Modifiability,"ucture in; TFileStager ABC defining interface to a stager; TFitEditor Fit Panel interface; TFitParametersDialog Fit function parameters dialog; TFitter The ROOT standard fitter based on TMinuit; TFitterFumili Fitter based on new Fumili method (Fumili2); TFitterMinuit The ROOT fitter based on new Minuit (Minuit2); TFoam General purpose self-adapting Monte Carlo event generator; TFoamCell Single cell of FOAM; TFoamIntegrand n-dimensional real positive integrand of FOAM; TFoamMaxwt Controlling of the MC weight (maximum weight); TFoamVect n-dimensional vector with dynamical allocation; TFolder Describe a folder: a list of objects and folders; TFormula The formula base class f(x,y,z,par); TFormulaPrimitive The primitive formula ; TFractionFitter Fits MC fractions to data histogram; TFrame Pad graphics frame; TFrameEditor editor of TFrame objects; TFree Description of free segments on a file; TFriendElement A friend element of another TTree; TFumili The FUMILI Minimization package; TFumiliMinimizer Implementation of Minimizer interface using TFumili ; TFunction Dictionary for global function; TFunctionParametersDialog Function parameters dialog; TG16ColorSelector 16 color cells; TG4RootNavMgr Class crreating a G4Navigator based on ROOT geometry; TGApplication GUI application singleton; TGButton Button widget abstract base class; TGButtonGroup Organizes TGButtons in a group; TGCanvas A canvas with two scrollbars and a viewport; TGCheckButton A check button widget; TGClient Class making connection to display server; TGColorDialog Color selection dialog; TGColorFrame Frame for color cell; TGColorPalette Color palette widget; TGColorPick Color picker widget; TGColorPopup Color selector popup; TGColorSelect Color selection checkbutton; TGColumnLayout Column layout manager; TGComboBox Combo box widget; TGComboBoxPopup Combobox popup window; TGCommandPlugin Command (I/O redirection) plugin for the new ROOT Browser; TGCompositeFrame Base class for composite widgets (menubars, etc.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:68258,plugin,plugin,68258,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,1,['plugin'],['plugin']
Modifiability,"ucture of the selection XML files and the way in which attributes can be set, refer to the genreflex --help command.; It is important to observe that selection XML files can be used in presence of rootcling invocations instead of LinkDef files.; 15.6.1 The ROOT::Meta::Selection namespace; Not only LinkDef and selection files allow to select the classes for which the dictionaries must be created: a third method is available. This is represented by the ROOT::Meta::Selection namespace. The idea behind this technique is that all the classes which are located in this special namespace are automatically selected for dictionary generation. All the properties and annotations allowed by LinkDef and selection XML files are possible. For a detailed documentation of the features of the ROOT::Meta::Selection namespace, refer to its online documentation.; 15.7 Adding a Class with ACLiC; Step 1: Define your class; #include ""TObject.h"". // define the ABC class and make it inherit from TObject so that; // we can write ABC to a ROOT file; class ABC : public TObject {. public:; Float_t a, b, c, p;; ABC() : a(0), b(0), c(0), p(0){};. // Define the class for the dictionary; ClassDef (ABC,1); };. // Call the ClassImp macro to give the ABC class RTTI and; // full I/O capabilities. #if !defined(__CLING__); ClassImp(ABC);; #endif; Step 2: Load the ABC class in the script.; // Check if ABC is already loaded; if (!TClass::GetDict(""ABC"")) {; gROOT->ProcessLine("".L ABCClass.C++"");; }. // Use the Class; ABC *v = new ABC;; v->p = (sqrt((v->a * v->a)+ (v->b * v->b)+(v->c * v->c)));; 16 Collection Classes; Collections are a key feature of the ROOT system. Many, if not most, of the applications you write will use collections. If you have used parameterized C++ collections or polymorphic collections before, some of this material will be review. However, much of this chapter covers aspects of collections specific to the ROOT system. When you have read this chapter, you will know. How to create instanc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:838326,inherit,inherit,838326,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherit']
Modifiability,"ucture.; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X ; variable X, type Float_t; Y/I : variable Y, type Int_t; Y/I2 ; variable Y, type Int_t converted to a 16 bits integer. Arrays of values are supported with the following syntax:; If leaf name has the form var[nelem], where nelem is alphanumeric, then; if nelem is a leaf name, it is used as the variable size of the array,; otherwise return 0.; The leaf refered to by neleme **MUST** be an int (/I),; If leaf name has the form var[nelem], where nelem is a digit, then; it is used as the fixed size of the array.; If leaf name has the form of a multi dimenantion array (eg var[nelem][nelem2]); where nelem and nelem2 are digits) then; it is used as a 2 dimensional array of fixed size.; Any of other form is not supported. Note that the TTree will ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBranch.html:13461,variab,variable,13461,root/html530/TBranch.html,https://root.cern,https://root.cern/root/html530/TBranch.html,1,['variab'],['variable']
Modifiability,"ucture.; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X ; variable X, type Float_t; Y/I : variable Y, type Int_t; Y/I2 ; variable Y, type Int_t converted to a 16 bits integer. Note that the TTree will assume that all the item are contiguous in memory.; On some platform, this is not always true of the member of a struct or a class,; due to padding and alignment. Sorting your data member in order of decreasing; sizeof usually leads to their being contiguous in memory. * bufsize is the buffer size in bytes for this branch; The default value is 32000 bytes and should be ok for most cases.; You can specify a larger value (eg 256000) if your Tree is not split; and each entry is large (Megabytes); A small value for bufsize is optimum if you intend to access; the entries in the Tree randomly and your",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranch.html:12510,variab,variable,12510,root/html526/TBranch.html,https://root.cern,https://root.cern/root/html526/TBranch.html,2,['variab'],['variable']
Modifiability,"ucture; Int_tTFile::fNbytesInfoNumber of bytes for StreamerInfo record; Int_tTDirectoryFile::fNbytesKeysNumber of bytes for the keys; Int_tTDirectoryFile::fNbytesNameNumber of bytes in TNamed at creation time; Bool_tTFile::fNoAnchorInName!True if we don't want to force the anchor to be appended to the file name; Long64_tTFile::fOffset!Seek offset cache; TList*TFile::fOpenPhases!Time info about open phases; TStringTFile::fOptionFile options; const char**fOtherTypes! pointer on list of other SQL types like TEXT or blob; TStringTDirectory::fPathBuffer!Buffer for GetPath() function; TObjArray*TFile::fProcessIDs!Array of pointers to TProcessIDs; Int_tfQuerisCounter! how many query was applied; Int_tTFile::fReadCallsNumber of read calls ( not counting the cache calls ); TStringTFile::fRealNameEffective real file name (not original url); TSQLServer*fSQL! interface to SQL database ; TList*fSQLClassInfos! list of SQL class infos; Int_tfSQLIOversion! version of SQL I/O which is stored in configurations; Long64_tTDirectoryFile::fSeekDirLocation of directory on file; Long64_tTFile::fSeekFreeLocation on disk of free segments structure; Long64_tTFile::fSeekInfoLocation on disk of StreamerInfo record; Long64_tTDirectoryFile::fSeekKeysLocation of Keys record on file; Long64_tTDirectoryFile::fSeekParentLocation of parent directory on file; Int_tfStmtCounter! count numbers of active statements; Double_tTFile::fSum2BufferSum of squares of buffer sizes of objects written so far; Double_tTFile::fSumBufferSum of buffer sizes of objects written so far; TStringfTablesType! type, used in CREATE TABLE statements; TStringTNamed::fTitleobject title; TUUIDTDirectory::fUUIDUnique identifier; Char_tTFile::fUnitsNumber of bytes for file pointers; TUrlTFile::fUrl!URL of file; Int_tfUseIndexes! use indexes for tables: 0 - off, 1 - only for basic tables, 2 + normal class tables, 3 - all tables; Bool_tfUseSuffixes! use suffixes in column names like fValue:Int_t or fObject:pointer; Int_tfUseTransactions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSQLFile.html:30766,config,configurations,30766,root/html530/TSQLFile.html,https://root.cern,https://root.cern/root/html530/TSQLFile.html,5,['config'],['configurations']
Modifiability,"uctures. ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTrees, CSV's and other data formats. More...;  ; class  TExecutor;  This class defines an interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TGenericClassInfo;  ; class  TIOFeatures;  TIOFeatures provides the end-user with the ability to change the IO behavior of data written via a TTree. More...;  ; class  TModuleGenerator;  ; class  TProcessExecutor;  This class provides a simple interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TReadLockGuard;  ; class  TReentrantRWLock;  ; class  TRWMutexImp;  ; class  TRWSpinLock;  ; class  TRWSpinLockReadGuard;  ; class  TRWSpinLockWriteGuard;  ; class  TSchemaRule;  ; class  TSeq;  A pseudo container",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v620/namespaceROOT.html:1236,variab,variable,1236,doc/v620/namespaceROOT.html,https://root.cern,https://root.cern/doc/v620/namespaceROOT.html,1,['variab'],['variable']
Modifiability,udaMatrixTCudaMatrix Class ;  CTDataLoaderTDataLoader ;  CTDeviceTDevice ;  CTGradientDescent;  CTLayerGeneric layer class ;  CTNetGeneric neural network class ;  CTReferenceThe reference architecture class ;  CTSharedLayerLayer class width shared weight and bias layers ;  ►NkNN;  CEvent;  CModulekNN;  CNode;  CAbsoluteDeviationLossFunctionAbsolute Deviation Loss Function ;  CAbsoluteDeviationLossFunctionBDTAbsolute Deviation BDT Loss Function ;  CAbsValue;  CBDTEventWrapper;  CBinarySearchTreeA simple Binary search tree including a volume search method ;  CBinarySearchTreeNodeNode for the BinarySearch or Decision Trees ;  CBinaryTreeBase class for BinarySearch and Decision Trees ;  CCCPrunerA helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) ;  ►CCCTreeWrapper;  CCCTreeNode;  CClassifierFactoryThis is the MVA factory ;  CClassInfoClass that contains all the information of a class ;  Ccompose_binary_t;  Ccompose_unary_t;  ►CConfigSingleton class for global configuration settings used by TMVA ;  CIONames;  CVariablePlotting;  CConfigurable;  CConvergenceTestCheck for convergence ;  CCostComplexityPruneToolA class to prune a decision tree using the Cost Complexity method ;  CCrossEntropyImplementation of the CrossEntropy as separation criterion ;  CCrossValidation;  CCrossValidationResult;  CDataInputHandlerClass that contains all the data information ;  CDataLoader;  CDataSetClass that contains all the data information ;  ►CDataSetFactoryClass that contains all the data information ;  CEventStats;  CDataSetInfoClass that contains all the data information ;  CDataSetManagerClass that contains all the data information ;  CDecisionTreeImplementation of a Decision Tree ;  CDecisionTreeNode;  CDeleteFunctor_t;  CDTNodeTrainingInfo;  CEnvelopeBase class for all machine learning algorithms ;  CEvent;  CExpectedErrorPruneToolA helper class to prune a decision tree using the expected error (C4.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:69859,config,configuration,69859,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,1,['config'],['configuration']
Modifiability,"ude <RooNDKeysPdf.h>. Inheritance diagram for RooNDKeysPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ Mirror. enum RooNDKeysPdf::Mirror. EnumeratorNoMirror ; MirrorLeft ; MirrorRight ; MirrorBoth ; MirrorAsymLeft ; MirrorAsymLeftRight ; MirrorAsymRight ; MirrorLeftAsymRight ; MirrorAsymBoth . Definition at line 48 of file RooNDKeysPdf.h. Constructor & Destructor Documentation. ◆ RooNDKeysPdf() [1/9]. RooNDKeysPdf::RooNDKeysPdf ; (; ). default . ◆ RooNDKeysPdf() [2/9]. RooNDKeysPdf::RooNDKeysPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; varList, . const RooDataSet & ; data, . TString ; options = ""ma"", . double ; rho = 1, . double ; nSigma = 3, . bool ; rotate = true, . bool ; sortInput = true . ). Construct N-dimensional kernel estimation p.d.f. ; in observables 'varList' from dataset 'data'. Options can be. 'a' = Use adaptive kernels (width varies with local event density); 'm' = Mirror data points over observable boundaries. Improves modeling behavior at edges for distributions that are not close to zero at edge; 'd' = Debug flag; 'v' = Verbose flag. The parameter rho (default = 1) provides an overall scale factor that can be applied to the bandwidth calculated for each kernel. The nSigma parameter determines the size of the box that is used to search for contributing kernels around a given point in observable space. The nSigma parameters is used in case of non-adaptive bandwidths and for the 1st non-adaptive pass for the calculation of adaptive keys p.d.f.s.; The optional weight arguments allows to specify an observable or function expression in observables that specifies the weight of each event. ; Definition at line 70 of file RooNDKeysPdf.cxx. ◆ RooNDKeysPdf() [3/9]. RooNDKeysPdf::RooNDKeysPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; varList, . const TH1 & ; hist, . TString ; options = ""ma"", . double ; rho = 1,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:80226,adapt,adaptive,80226,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,1,['adapt'],['adaptive']
Modifiability,"ude creating and running each RDataFrame event loop in a sub-process, or booking all operations for all different RDataFrame computation graphs before the first event loop is triggered, so that the interpreter is invoked only once for all computation graphs:; // assuming df1 and df2 are separate computation graphs, do:; auto h1 = df1.Histo1D(""x"");; auto h2 = df2.Histo1D(""y"");; h1->Draw(); // we just-in-time compile everything needed by df1 and df2 here; h2->Draw(""SAME"");; ; // do not:; auto h1 = df1.Histo1D(""x"");; h1->Draw(); // we just-in-time compile here; auto h2 = df2.Histo1D(""y"");; h2->Draw(""SAME""); // we just-in-time compile again here, as the second Histo1D call is new. More features; Here is a list of the most important features that have been omitted in the ""Crash course"" for brevity. You don't need to read all these to start using RDataFrame, but they are useful to save typing time and runtime. Systematic variations; Starting from ROOT v6.26, RDataFrame provides a flexible syntax to define systematic variations. This is done in two steps: a) register variations for one or more existing columns using Vary() and b) extract variations of normal RDataFrame results using VariationsFor(). In between these steps, no other change to the analysis code is required: the presence of systematic variations for certain columns is automatically propagated through filters, defines and actions, and RDataFrame will take these dependencies into account when producing varied results. VariationsFor() is included in header ROOT/RDFHelpers.hxx. The compiled C++ programs must include this header explicitly, this is not required for ROOT macros.; An example usage of Vary() and VariationsFor() in C++:; auto nominal_hx =; df.Vary(""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); .Filter(""pt > pt_cut""); .Define(""x"", someFunc, {""pt""}); .Histo1D<float>(""x"");; ; // request the generation of varied results from the nominal_hx; ROOT::RDF::Experimental::RResultMap<TH1D> hx = ROOT::RDF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:52728,flexible,flexible,52728,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,['flexible'],['flexible']
Modifiability,"ude the uncertainty from the expected number of events, the Normalization() argument with ScaleType RooAbsReal::RelativeExpected has to be passed, e.g. pdf.plotOn(frame, VisualizeError(fitResult), Normalization(1.0, RooAbsReal::RelativeExpected));; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition RooAbsReal.h:276. VisualizeError(const RooFitResult& fitres, const RooArgSet& param, double Z=1, bool linearMethod=true) Visualize the uncertainty on the subset of parameters 'param', as given in fitres, at 'Z' sigma . Reimplemented from RooAbsReal.; Reimplemented in RooSimultaneous, and RooSimultaneous.; Definition at line 1937 of file RooAbsPdf.cxx. ◆ prepareMultiGen(). RooAbsPdf::prepareMultiGen ; (; const RooArgSet & ; whatVars, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {} . ). Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ; NoteThis method does not perform any generation. To generate according to generations specification call RooAbsPdf::generate(RooAbsPdf::GenSpec&) const. Details copied from RooAbsPdf::generate():; Generate the specified number of events or expectedEvents() if not specified. Parameters. [in]whatVarsChoose variables in which to generate events. Variables not listed here will remain constant and not be used for event generation. ; [in]arg1,arg2,arg3,arg4,arg5,arg6Optional RooCmdArg() to change behaviour of generate(). . ReturnsRooDataSet *, owned by caller.; Any variables of this PDF that are not in whatVars will use their current values and be treated as fixed parameters. Returns zero in case of an error. Type of CmdArg Effect on generate . Name(const char* name) Name of the output dataset . Verbose(bool flag) Print informational messages during event generation . NumEvents(int nevt) Generate specified number of events . Extended",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:146461,config,configuration,146461,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['config'],['configuration']
Modifiability,"udes; Libraries. Function documentation; RooErrorVar(const char* name, const char* title, const RooRealVar& input); Construct an lvalue variable representing the error of RooRealVar input. RooErrorVar(const RooErrorVar& other, const char* name = 0). ~RooErrorVar(); Destructor. Double_t getVal(const RooArgSet* set = 0) const; Return value, i.e. error on input variable. Bool_t hasBinning(const char* name) const; Return true if we have binning with given name. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. void setBinning(const RooAbsBinning& binning, const char* name = 0); Store given binning with this variable under the given name. void setMin(const char* name, Double_t value); Set the lower bound of the range with the given name to the given value; If name is a null pointer, set the lower bound of the default range. void setMax(const char* name, Double_t value); Set the upper bound of the range with the given name to the given value; If name is a null pointer, set the upper bound of the default range. void setRange(const char* name, Double_t min, Double_t max); Set the upper and lower lower bound of the range with the given name to the given values; If name is a null pointer, set the upper and lower bounds of the default range. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from given stream. void writeToStream(ostream& os, Bool_t compact) const; Write value to stream. void syncCache(const RooArgSet* set = 0); Force the internal value cache to be up to date. inline RooErrorVar(); Constructors, ass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooErrorVar.html:38457,variab,variable,38457,root/html528/RooErrorVar.html,https://root.cern,https://root.cern/root/html528/RooErrorVar.html,2,['variab'],['variable']
Modifiability,"ue active workers.; Use ord = ""*"" to deactivate all active workers. TProof * Open(const char* url = 0, const char* conffile = 0, const char* confdir = 0, Int_t loglevel = 0); Start a PROOF session on a specific cluster. If cluster is 0 (the; default) then the PROOF Session Viewer GUI pops up and 0 is returned.; If cluster is """" (empty string) then we connect to a PROOF session; on the localhost (""proof://localhost""). Via conffile a specific; PROOF config file in the confir directory can be specified.; Use loglevel to set the default loging level for debugging.; The appropriate instance of TProofMgr is created, if not; yet existing. The instantiated TProof object is returned.; Use TProof::cd() to switch between PROOF sessions.; For more info on PROOF see the TProof ctor. TProofMgr * Mgr(const char* url); Get instance of the effective manager for 'url'; Return 0 on failure. void Reset(const char* url, Bool_t hard = kFALSE); Wrapper around TProofMgr::Reset(...). const TList * GetEnvVars(); Get environemnt variables. void AddEnvVar(const char* name, const char* value); Add an variable to the list of environment variables passed to proofserv; on the master and slaves. void DelEnvVar(const char* name); Remove an variable from the list of environment variables passed to proofserv; on the master and slaves. void ResetEnvVars(); Clear the list of environment variables passed to proofserv; on the master and slaves. void SaveWorkerInfo(); Save informations about the worker set in the file .workers in the working; dir. Called each time there is a change in the worker setup, e.g. by; TProof::MarkBad(). Int_t GetParameter(TCollection* c, const char* par, TString& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type does not match), 0 otherwise. Int_t GetParameter(TCollection* c, const char* par, Int_t& value); Get the value from the specified parameter from the specif",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:84998,variab,variables,84998,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,1,['variab'],['variables']
Modifiability,ue for a master in direct contact only with workers; THashList*fGlobalPackageDirListlist of directories containing global packages libs; TStringfGroupgroup the user belongs to; Int_tfGroupIdslave unique id in the active slave group; Int_tfGroupPrioritypriority of group the user belongs to (0 - 100); Int_tfGroupSizesize of the active slave group; Long64_tfHWMBoxSizeHigh-Water-Mark on the sandbox size; Bool_tfIdleTRUE if idle; TIdleTOTimer*fIdleTOTimerTimer used to control children state; TStringfImageimage name of the session; Int_tfInflateFactorFactor in 1/1000 to inflate the CPU time; TFileHandler*fInputHandlerInput socket handler; Bool_tfInterruptif true macro execution will be stopped; TStopwatchfLatencymeasures latency of packet requests; FILE*fLogFilelog file; Int_tfLogFileDeslog file descriptor; Long64_tfLogFileMaxSizemax size for log files (enabled if > 0); Int_tfLogLeveldebug logging level; Bool_tfMasterServtrue if we are a master server; Long64_tfMaxBoxSizeMax size of the sandbox; Int_tfMaxQueriesMax number of queries fully kept; Int_tfMergedWorkersNumber of workers merged; TMonitor*fMergingMonitorMonitor for merging sockets; TServerSocket*fMergingSocketSocket used for merging outputs if submerger; Long64_tfMsgSizeHWMHigh-Water-Mark on the size of messages with results; Int_tfNcmdcommand history number; TStringfOrdinalslave ordinal number; TStringfOutputFilepath with the temporary results of the current or last query; TStringfPackageDirdirectory containing packages and user libs; TProofLockPath*fPackageLockpackage dir locker; TVirtualProofPlayer*fPlayeractual player; TStringfPrefixPrefix identifying the node; TProof*fProofPROOF talking to slave servers; Int_tfProtocolprotocol version number; TQueryResultManager*fQMgrQuery-result manager; TMutex*fQMtxTo protect async msg queue; TStringfQueryDirdirectory containing query results and status; TProofLockPath*fQueryLockquery dir locker; Int_tfQuerySeqNumsequential number of the current or last query; TList*fQueue,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofServ.html:18849,sandbox,sandbox,18849,root/html534/TProofServ.html,https://root.cern,https://root.cern/root/html534/TProofServ.html,2,['sandbox'],['sandbox']
Modifiability,ue for a master in direct contact only with workers; THashList*fGlobalPackageDirListlist of directories containing global packages libs; TStringfGroupgroup the user belongs to; Int_tfGroupIdslave unique id in the active slave group; Int_tfGroupPrioritypriority of group the user belongs to (0 - 100); Int_tfGroupSizesize of the active slave group; Long64_tfHWMBoxSizeHigh-Water-Mark on the sandbox size; Bool_tfIdleTRUE if idle; TIdleTOTimer*fIdleTOTimerTimer used to control children state; TStringfImageimage name of the session; Int_tfInflateFactorFactor in 1/1000 to inflate the CPU time; TFileHandler*fInputHandlerInput socket handler; Bool_tfInterruptif true macro execution will be stopped; TStopwatchfLatencymeasures latency of packet requests; FILE*fLogFilelog file; Int_tfLogFileDeslog file descriptor; Long64_tfLogFileMaxSizemax size for log files (enabled if > 0); Int_tfLogLeveldebug logging level; Bool_tfMasterServtrue if we are a master server; Long64_tfMaxBoxSizeMax size of the sandbox; Int_tfMaxQueriesMax number of queries fully kept; Int_tfMergedWorkersNumber of workers merged; TMonitor*fMergingMonitorMonitor for merging sockets; TServerSocket*fMergingSocketSocket used for merging outputs if submerger; Long64_tfMsgSizeHWMHigh-Water-Mark on the size of messages with results; Int_tfNcmdcommand history number; TStringfOrdinalslave ordinal number; TStringfPackageDirdirectory containing packages and user libs; TProofLockPath*fPackageLockpackage dir locker; TVirtualProofPlayer*fPlayeractual player; TStringfPrefixPrefix identifying the node; TProof*fProofPROOF talking to slave servers; Int_tfProtocolprotocol version number; TQueryResultManager*fQMgrQuery-result manager; TMutex*fQMtxTo protect async msg queue; TStringfQueryDirdirectory containing query results and status; TProofLockPath*fQueryLockquery dir locker; Int_tfQuerySeqNumsequential number of the current or last query; TList*fQueuedMsglist of messages waiting to be processed; Float_tfRealTimereal time spent ex,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofServ.html:18313,sandbox,sandbox,18313,root/html530/TProofServ.html,https://root.cern,https://root.cern/root/html530/TProofServ.html,3,['sandbox'],['sandbox']
Modifiability,"ue if active (in front) ;  ; const TGPicture * fClosePic;  ""close tab"" icon ;  ; const TGPicture * fClosePicD;  ""close tab"" icon (disabled) ;  ; Bool_t fEnabled;  enabled or disabled ;  ; FontStruct_t fFontStruct;  font used for tab ;  ; GContext_t fNormGC;  graphics context for drawing tab ;  ; Bool_t fShowClose;  show or hide close icon ;  ; TGString * fText;  text on tab ;  ; UInt_t fTHeight;  height of tab text ;  ; UInt_t fTWidth;  width of tab text ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGTabElement (const TGTabElement &)=delete;  ; TGTabElement & operator= (const TGTabElement &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTabElement.html:23071,inherit,inherited,23071,doc/master/classTGTabElement.html,https://root.cern,https://root.cern/doc/master/classTGTabElement.html,1,['inherit'],['inherited']
Modifiability,"ue is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; RooListProxy _catList;  ; RooListProxy _effFuncList;  ; bool _ignoreNonVisible;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiBinomial.html:55488,inherit,inherited,55488,doc/master/classRooMultiBinomial.html,https://root.cern,https://root.cern/doc/master/classRooMultiBinomial.html,3,['inherit'],['inherited']
Modifiability,"ue needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_x; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooParametricStepFunction(const char* name, const char* title, RooAbsReal& x, const RooArgList& coefList, TArrayD& limits, Int_t nBins = 1); Constructor. RooParametricStepFunction(const RooParametricStepFunction& other, const char* name = 0); Copy constructor. ~RooParametricStepFunction(); Destructor. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Double_t lastBinValue() const. Double_t evaluate() const. Int_t getnBins(). Double_t* getLimits(). RooParametricStepFunction(); {}. TObject* clone(const char* newname) const; { return new RooParametricStepFunction(*this, newname); }. » Last changed: Tue Jun 30 14:34:48 2015 » Last generated: 2015-06-30 14:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooParametricStepFunction.html:45966,Inherit,Inheritance,45966,root/html602/RooParametricStepFunction.html,https://root.cern,https://root.cern/root/html602/RooParametricStepFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ue of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; RooListProxy_varsVariables; Bool_t_verboseClient; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_verboseServer; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealMPFE(const char* name, const char* title, RooAbsReal& arg, Bool_t calcInline = kFALSE); Construct front-end object for object 'arg' whose evaluation will be calculated; asynchronously in a separate process. If calcInline is true the value of 'arg'; is calculate synchronously in the current process. RooRealMPFE(const RooRealMPFE& other, const char* name = 0); Copy constructor. Initializes in clean state so that upon eval; this instance will create its own server processes. ~RooRealMPFE(); Destructor. void initVars(); Initialize list of variables of front-end argument 'arg'. void initialize(); Initialize the remote process and message passing; pipes between current process and remote process. void serverLoop(); Server loop of remote processes. This function will return; only when an incoming TERMINATE message is received. void calculate() const; Client-side function that instructs server process to start; asynchronuous (re)calculation of function value. This function; returns immediately. The calculated value can be retrieved; using getVal(). Double_t getVal(const RooArgSet* nset = 0) const; If value needs recalculation and calculation has not beed started; with a call to calculate() start it now. This function blocks; until remote process has finished calculation and returns; remote value. Double_t evaluate() const; Send message to server process to retrieve output value; If error were logged use logEvalError() on remote side; transfer those errors to the local eval error queue. void standby(); Terminate remote server",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealMPFE.html:34377,variab,variables,34377,root/html526/RooRealMPFE.html,https://root.cern,https://root.cern/root/html526/RooRealMPFE.html,3,['variab'],['variables']
Modifiability,"ue of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; RooListProxy_varsVariables; Bool_t_verboseClient; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_verboseServer; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealMPFE(const char* name, const char* title, RooAbsReal& arg, Bool_t calcInline = kFALSE); Construct front-end object for object 'arg' whose evaluation will be calculated; asynchronously in a separate process. If calcInline is true the value of 'arg'; is calculate synchronously in the current process. RooRealMPFE(const RooRealMPFE& other, const char* name = 0); Copy constructor. Initializes in clean state so that upon eval; this instance will create its own server processes. ~RooRealMPFE(); Destructor. void initVars(); Initialize list of variables of front-end argument 'arg'. void initialize(); Initialize the remote process and message passing; pipes between current process and remote process. void serverLoop(); Server loop of remote processes. This function will return; only when an incoming TERMINATE message is received. void calculate() const; Client-side function that instructs server process to start; asynchronuous (re)calculation of function value. This function; returns immediately. The calculated value can be retrieved; using getVal(). Double_t getValV(const RooArgSet* nset = 0) const; If value needs recalculation and calculation has not beed started; with a call to calculate() start it now. This function blocks; until remote process has finished calculation and returns; remote value. Double_t evaluate() const; Send message to server process to retrieve output value; If error were logged use logEvalError() on remote side; transfer those errors to the local eval error queue. void standby(); Terminate remote serve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealMPFE.html:35913,variab,variables,35913,root/html532/RooRealMPFE.html,https://root.cern,https://root.cern/root/html532/RooRealMPFE.html,2,['variab'],['variables']
Modifiability,"ue of sigma parameter; Int_tfStatisticTypetype of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood; Double_tfTCalccalculated value of t parameter; Double_tfTErrerror value of t parameter; Double_tfTInitinitial value of t parameter (relative amplitude of tail), for details see html manual and references; TStringTNamed::fTitleobject title; Int_tfXmaxlast fitted channel; Int_tfXminfirst fitted channel. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSpectrumFit. Function documentation; TSpectrumFit(); default constructor. TSpectrumFit(Int_t numberPeaks); numberPeaks: number of fitted peaks (must be greater than zero); the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class. . Shape function of the fitted; peaks is .  ;  ;  ;  ;  ;  ;  ;  . where a represents vector of; fitted parameters (positions p(j), amplitudes A(j), sigma, relative amplitudes; T, S and slope B).;  . ~TSpectrumFit(); destructor. Double_t Erfc(Double_t x). AUXILIARY FUNCTION. This function calculates error function of x. Double_t Derfc(Double_t x). AUXILIARY FUNCTION. This function calculates derivative of error function of x. Double_t Deramp(Double_t i, Double_t i0, Double_t sigma, Double_t t, Double_t s, Double_t b). AUXILIARY FUNCTION. This function calculates derivative of peak shape function (see manual); according to amplitude of peak.; Function parameters:; -i-channel; -i0-position of peak; -sigma-sigma of peak; -t, s-relative amplitudes; -b-slope. Double_t Deri0(Double_t i, Double_t amp, Double_t i0, Double_t sigma, Double_t t, Double_t s, Double_t b). AUXILIARY FUNCTION. This function calculates derivative of peak shape function (see m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumFit.html:14441,variab,variables,14441,root/html602/TSpectrumFit.html,https://root.cern,https://root.cern/root/html602/TSpectrumFit.html,4,['variab'],['variables']
Modifiability,"ue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EnableOutput ();  ; static MsgLogger & Endmsg (MsgLogger &logger);  end line ;  ; static UInt_t GetMaxSourceSize ();  returns the maximum source size ;  ; static void InhibitOutput ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void InitMaps ();  Create the message type and color maps. ;  ; void Send ();  activates the logger writer ;  ; void WriteMsg (EMsgType type, const std::string &line) const;  putting the output string, the message type, and the color switcher together into a single string ;  . Private Attributes; EMsgType fActiveType;  active type ;  ; EMsgType fMinType;  minimum type for output ;  ; const TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MsgLogger.html:9611,inherit,inherited,9611,doc/master/classTMVA_1_1MsgLogger.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MsgLogger.html,1,['inherit'],['inherited']
Modifiability,"ue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionOneDim*funcFunctor; RooRealProxyvarArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFunctor1DBinding(const char* name, const char* title, const ROOT::Math::IBaseFunctionOneDim& ftor, RooAbsReal& var). RooFunctor1DBinding(const RooFunctor1DBinding& other, const char* name = 0); Copy constructor. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. RooFunctor1DBinding(); Default constructor. TObject* clone(const char* newname) const; { return new RooFunctor1DBinding(*this,newname); }. virtual ~RooFunctor1DBinding(); {}. » Last changed: Tue Mar 10 17:16:53 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFunctor1DBinding.html:36540,variab,variable,36540,root/html534/RooFunctor1DBinding.html,https://root.cern,https://root.cern/root/html534/RooFunctor1DBinding.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable']"
Modifiability,"ue(Double_t* err = 0, Double_t* errUpper = 0); calculate the value of the neural net for the current event. void Train( void ); performs TMlpANN training; available learning methods:. TMultiLayerPerceptron::kStochastic; TMultiLayerPerceptron::kBatch; TMultiLayerPerceptron::kSteepestDescent; TMultiLayerPerceptron::kRibierePolak; TMultiLayerPerceptron::kFletcherReeves; TMultiLayerPerceptron::kBFGS. TMultiLayerPerceptron wants test and training tree at once; so merge the training and testing trees from the MVA factory first:. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); rebuild temporary textfile from xml weightfile and load this; file into MLP. void ReadWeightsFromStream(istream& istr); read weights from stream; since the MLP can not read from the stream, we; 1st: write the weights to temporary file. void MakeClass(const TString& classFileName = TString("""")) const; create reader class for classifier -> overwrites base class function; create specific class for TMultiLayerPerceptron. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response; nothing to do here - all taken care of by TMultiLayerPerceptron. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodTMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0). void SetHiddenLayer(TString hiddenlayer = """"); { fHiddenLayer=hiddenlayer; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodTMlpANN.html:21195,variab,variables,21195,root/html604/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodTMlpANN.html,2,['variab'],['variables']
Modifiability,"ue(Double_t* err = 0, Double_t* errUpper = 0); calculate the value of the neural net for the current event. void Train( void ); performs TMlpANN training; available learning methods:. TMultiLayerPerceptron::kStochastic; TMultiLayerPerceptron::kBatch; TMultiLayerPerceptron::kSteepestDescent; TMultiLayerPerceptron::kRibierePolak; TMultiLayerPerceptron::kFletcherReeves; TMultiLayerPerceptron::kBFGS. TMultiLayerPerceptron wants test and training tree at once; so merge the training and testing trees from the MVA factory first:. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); rebuild temporary textfile from xml weightfile and load this; file into MLP. void ReadWeightsFromStream(istream& istr); read weights from stream; since the MLP can not read from the stream, we; 1st: write the weights to temporary file. void MakeClass(const TString& classFileName = TString("""")) const; create reader class for classifier -> overwrites base class function; create specific class for TMultiLayerPerceptron. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response; nothing to do here - all taken care of by TMultiLayerPerceptron. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodTMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0). void SetHiddenLayer(TString hiddenlayer = """"); { fHiddenLayer=hiddenlayer; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodTMlpANN.html:21187,variab,variables,21187,root/html602/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodTMlpANN.html,2,['variab'],['variables']
Modifiability,"ue);  ; virtual ~TVirtualMonitoringWriter ();  destructor ;  ; TClass * IsA () const override;  ; virtual Bool_t SendFileCloseEvent (TFile *);  ; virtual Bool_t SendFileOpenProgress (TFile *, TList *, const char *, Bool_t=kFALSE);  ; virtual Bool_t SendFileReadProgress (TFile *);  ; virtual Bool_t SendFileWriteProgress (TFile *);  ; virtual Bool_t SendInfoDescription (const char *);  ; virtual Bool_t SendInfoStatus (const char *);  ; virtual Bool_t SendInfoTime ();  ; virtual Bool_t SendInfoUser (const char *=nullptr);  ; virtual Bool_t SendParameters (TList *, const char *=nullptr);  ; virtual Bool_t SendProcessingProgress (Double_t, Double_t, Bool_t=kFALSE);  ; virtual Bool_t SendProcessingStatus (const char *, Bool_t=kFALSE);  ; virtual void SetLogLevel (const char *=""WARNING"");  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Verbose (Bool_t);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMonitoringWriter.html:1519,inherit,inherited,1519,doc/master/classTVirtualMonitoringWriter.html,https://root.cern,https://root.cern/doc/master/classTVirtualMonitoringWriter.html,1,['inherit'],['inherited']
Modifiability,"ue, otherwise a reference to the default binning is returned. If verbose is true a message is printed if a binning is created on the fly. ; Implements RooAbsRealLValue.; Definition at line 319 of file RooRealVar.cxx. ◆ getBinningNames(). std::list< std::string > RooRealVar::getBinningNames ; (; ); const. overridevirtual . Get a list of all binning names. ; An empty name implies the default binning and a nullptr pointer should be passed to getBinning in this case. ; Implements RooAbsLValue.; Definition at line 364 of file RooRealVar.cxx. ◆ getError(). double RooRealVar::getError ; (; ); const. inline . Definition at line 58 of file RooRealVar.h. ◆ getErrorHi(). double RooRealVar::getErrorHi ; (; ); const. inline . Definition at line 68 of file RooRealVar.h. ◆ getErrorLo(). double RooRealVar::getErrorLo ; (; ); const. inline . Definition at line 67 of file RooRealVar.h. ◆ getValV(). double RooRealVar::getValV ; (; const RooArgSet * ; nset = nullptr); const. overridevirtual . Return value of variable. ; Reimplemented from RooAbsReal.; Definition at line 232 of file RooRealVar.cxx. ◆ hasAsymError(). bool RooRealVar::hasAsymError ; (; bool ; allowZero = true); const. inline . Definition at line 64 of file RooRealVar.h. ◆ hasBinning(). bool RooRealVar::hasBinning ; (; const char * ; name); const. overridevirtual . Returns true if variable has a binning named 'name'. ; Implements RooAbsRealLValue.; Definition at line 293 of file RooRealVar.cxx. ◆ hasError(). bool RooRealVar::hasError ; (; bool ; allowZero = true); const. inline . Definition at line 59 of file RooRealVar.h. ◆ installSharedProp(). void RooRealVar::installSharedProp ; (; std::shared_ptr< RooRealVarSharedProperties > && ; prop). protected . Install the shared property into the member _sharedProp. ; If a property with same name already exists, discard the incoming one, and share the existing. nullptr and properties equal to the RooRealVar::_nullProp will not be installed. ; Definition at line 1294 of file RooRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:82052,variab,variable,82052,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"ue. ;  ; void ExecuteMethod (void *object, Int_t nargs, va_list ap)=delete;  ; void ExecuteMethod (void *object, Long64_t param);  ExecuteMethod the method for the specified object and with single argument value. ;  ; void ExecuteMethod (void *object, Long_t param);  ExecuteMethod the method for the specified object and with single argument value. ;  ; void ExecuteMethod (void *object, Longptr_t *paramArr, Int_t nparam=-1);  ExecuteMethod the method for the specified object and with several argument values. ;  ; CallFunc_t * GetFunc () const;  ; Int_t GetMethodNargs ();  ; const char * GetName () const override;  Returns name of object. ;  ; Longptr_t GetOffset () const;  ; Bool_t IsExecuting () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *opt="""") const override;  Print info about slot. ;  ; CallFunc_t * StartExecuting ();  Mark the slot as executing. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQSlot.html:2216,inherit,inherited,2216,doc/master/classTQSlot.html,https://root.cern,https://root.cern/doc/master/classTQSlot.html,1,['inherit'],['inherited']
Modifiability,"ue; // disable creation of stand-alone class; 87 // ToDo we need to tell the transformation that it cannot write itself; 88 }; 89 // workaround end; 90 ; 91 Int_t parenthesisCount = 0;; 92 for (Int_t position = 0, size = trafoDefinition.Sizeof(); position < size; ++position) {; 93 TString ch = trafoDefinition(position,1);; 94 if (ch == ""("") ++parenthesisCount;; 95 else if (ch == "")"") --parenthesisCount;; 96 else if (ch == "","" && parenthesisCount == 0) trafoDefinition.Replace(position,1,'+');; 97 }; 98 ; 99 TList* trList = gTools().ParseFormatLine( trafoDefinition, ""+"" );; 100 TListIter trIt(trList);; 101 while (TObjString* os = (TObjString*)trIt()) {; 102 TString tdef = os->GetString();; 103 Int_t idxCls = -1;; 104 ; 105 TString variables = """";; 106 if (tdef.Contains(""("")) { // contains selection of variables; 107 Ssiz_t parStart = tdef.Index( ""("" );; 108 Ssiz_t parLen = tdef.Index( "")"", parStart )-parStart+1;; 109 ; 110 variables = tdef(parStart,parLen);; 111 tdef.Remove(parStart,parLen);; 112 variables.Remove(parLen-1,1);; 113 variables.Remove(0,1);; 114 }; 115 ; 116 TList* trClsList = gTools().ParseFormatLine( tdef, ""_"" ); // split entry to get trf-name and class-name; 117 TListIter trClsIt(trClsList);; 118 if (trClsList->GetSize() < 1); 119 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Incorrect transformation string provided."" << Endl;; 120 const TString& trName = ((TObjString*)trClsList->At(0))->GetString();; 121 ; 122 if (trClsList->GetEntries() > 1) {; 123 TString trCls = ""AllClasses"";; 124 ClassInfo *ci = NULL;; 125 trCls = ((TObjString*)trClsList->At(1))->GetString();; 126 if (trCls != ""AllClasses"") {; 127 ci = dataInfo.GetClassInfo( trCls );; 128 if (ci == NULL); 129 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Class "" << trCls << "" not known for variable transformation ""; 130 << trName << "", please check."" << Endl;; 131 else; 132 idxCls = ci->GetNumber();; 133 }; 134 }; 135 ; 136 VariableTransformBase* transformation = NULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:4556,variab,variables,4556,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ue; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,bool>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. template <> void RooCFunction3Ref<Double_t,Double_t,Double_t,Double_t> ShowMembers(TMemberInspector& insp, char* parent). » Last changed: Mon Dec 7 13:46:41 2009 » Last generated: 2009-12-07 13:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3PdfBinding_double_double_double_bool_.html:40709,variab,variable,40709,root/html526/RooCFunction3PdfBinding_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3PdfBinding_double_double_double_bool_.html,1,['variab'],['variable']
Modifiability,"ue; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; intRooLegendre::_m1; intRooLegendre::_m2; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. double_n; RooRealProxy_phi; int_sgn1; int_sgn2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSpHarmonic(). RooSpHarmonic(const char* name, const char* title, RooAbsReal& ctheta, RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSpHarmonic.html:36124,config,configuration,36124,root/html534/RooSpHarmonic.html,https://root.cern,https://root.cern/root/html534/RooSpHarmonic.html,2,['config'],['configuration']
Modifiability,"ue; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction1Binding_double_double_.html:36998,config,configuration,36998,root/html602/RooCFunction1Binding_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction1Binding_double_double_.html,4,['config'],['configuration']
Modifiability,"ue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TGraph*fGraph; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the graph with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawGraph(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 30068 2009-09-08 15:19:38Z ganis $ » Last generated: 2010-10-05 21:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofDrawGraph.html:7428,variab,variable,7428,root/html528/TProofDrawGraph.html,https://root.cern,https://root.cern/root/html528/TProofDrawGraph.html,1,['variab'],['variable']
Modifiability,"ueBase::ESetupStatuskSetupMissingBranch; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMissingCompiledCollectionProxy; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMissingCounterBranch; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupNoCheck; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupNotSetup; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupTreeDestructed; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupVoidPtr. protected:. TStringfBranchNamename of the branch to read data from.; TDictionary*fDicttype that the branch should contain; TLeaf*fLeaf; TStringfLeafName; ROOT::TBranchProxy*fProxyproxy for this branch, owned by TTreeReader; ROOT::TTreeReaderValueBase::EReadStatusfReadStatusread status of this data access; ROOT::TTreeReaderValueBase::ESetupStatusfSetupStatussetup status of this data access; vector<Long64_t>fStaticClassOffsets; Long64_tfTreeLastOffset; TTreeReader*fTreeReadertree reader we belong to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeReaderValueBase(TTreeReader* reader = 0, const char* branchname = 0, TDictionary* dict = 0); Construct a tree value reader and register it with the reader object. ~TTreeReaderValueBase(); Unregister from tree reader, cleanup. ProxyRead(); Try to read the value from the TBranchProxy, returns; the status of the read. TLeaf* GetLeaf(); If we are reading a leaf, return the corresponding TLeaf. void* GetAddress(); Returns the memory address of the object being read. void CreateProxy(); Create the proxy object for our branch. const char* GetBranchDataType(TBranch* branch, TDictionary*& dict) const; Retrieve the type of data stored by branch; put its dictionary into; dict, return its type name. If no dictionary is available, at least; its type name should be returned. Bool_t IsValid() const; { return fProxy && 0 == (int)fSetupStatus && 0 == (int)fReadStatus; }. ESetupStatus GetSetupStatus() const; { return fSetupStatus; }. EReadStatus Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TTreeReaderValueBase.html:3248,Inherit,Inheritance,3248,root/html602/ROOT__TTreeReaderValueBase.html,https://root.cern,https://root.cern/root/html602/ROOT__TTreeReaderValueBase.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ueDirty(const RooAbsArg* source) const; voidsortDataIndices(RooNDKeysPdf::BoxInfo* bi = 0) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum Mirror { NoMirror; MirrorLeft; MirrorRight; MirrorBoth; MirrorAsymLeft; MirrorAsymLeftRight; MirrorAsymRight; MirrorLeftAsymRight; MirrorAsymBoth; };; enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. vector<Int_t>_bIdcs; vector<Int_t>_bmsIdcs; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); map<Int_t,Bool_t>_bpsIdcs; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCoun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNDKeysPdf.html:37764,Extend,ExtendMode,37764,root/html532/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html532/RooNDKeysPdf.html,2,"['Config', 'Extend']","['ConfigChange', 'ExtendMode']"
Modifiability,"ueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual voidGotoEvent(Int_t); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual voidNextEvent(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOpen(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveEventManager.html:9424,Inherit,InheritsFrom,9424,root/html532/TEveEventManager.html,https://root.cern,https://root.cern/root/html532/TEveEventManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual voidGotoEvent(Int_t); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual voidNextEvent(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOpen(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveEventManager.html:9350,Inherit,InheritsFrom,9350,root/html602/TEveEventManager.html,https://root.cern,https://root.cern/root/html602/TEveEventManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ueID() const; void*TEveElement::GetUserData() const; virtual Float_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCalo3D.html:10589,Inherit,InheritsFrom,10589,root/html532/TEveCalo3D.html,https://root.cern,https://root.cern/root/html532/TEveCalo3D.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ueID() const; void*TEveElement::GetUserData() const; virtual Float_tTEveCaloViz::GetValToHeight() const; Bool_tTEveCaloViz::GetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTEveCaloViz::InvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCalo3D.html:10821,Inherit,InheritsFrom,10821,root/html602/TEveCalo3D.html,https://root.cern,https://root.cern/root/html602/TEveCalo3D.html,4,['Inherit'],['InheritsFrom']
Modifiability,"uence::WriteMemberWiseActionsCollectionCreator ; (; TStreamerInfo * ; info, . TVirtualCollectionProxy * ; collectionProxy, . TClass * ;  . ). inlinestatic . Definition at line 292 of file TStreamerInfoActions.h. ◆ WriteMemberWiseActionsCollectionGetter(). static SequencePtr TStreamerInfoActions::TActionSequence::WriteMemberWiseActionsCollectionGetter ; (; TStreamerInfo * ; info, . TVirtualCollectionProxy * ; , . TClass * ;  . ). inlinestatic . Definition at line 284 of file TStreamerInfoActions.h. ◆ WriteMemberWiseActionsGetter(). static SequencePtr TStreamerInfoActions::TActionSequence::WriteMemberWiseActionsGetter ; (; TStreamerInfo * ; info, . TVirtualCollectionProxy * ; , . TClass * ;  . ). inlinestatic . Definition at line 297 of file TStreamerInfoActions.h. ◆ WriteMemberWiseActionsViaProxyGetter(). static SequencePtr TStreamerInfoActions::TActionSequence::WriteMemberWiseActionsViaProxyGetter ; (; TStreamerInfo * ; , . TVirtualCollectionProxy * ; collectionProxy, . TClass * ;  . ). inlinestatic . Definition at line 288 of file TStreamerInfoActions.h. Member Data Documentation. ◆ fActions. ActionContainer_t TStreamerInfoActions::TActionSequence::fActions. Definition at line 212 of file TStreamerInfoActions.h. ◆ fLoopConfig. TLoopConfiguration* TStreamerInfoActions::TActionSequence::fLoopConfig. If this is a bundle of memberwise streaming action, this configures the looping. ; Definition at line 211 of file TStreamerInfoActions.h. ◆ fStreamerInfo. TVirtualStreamerInfo* TStreamerInfoActions::TActionSequence::fStreamerInfo. StreamerInfo used to derive these actions. ; Definition at line 210 of file TStreamerInfoActions.h. Libraries for TStreamerInfoActions::TActionSequence:. [legend]; The documentation for this class was generated from the following files:; io/io/inc/TStreamerInfoActions.h; io/io/src/TStreamerInfoActions.cxx. TStreamerInfoActionsTActionSequence. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:21389,config,configures,21389,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html,1,['config'],['configures']
Modifiability,"ueryResult; Long64_tTProofPlayer::fReadBytesRun! Bytes read in this run; Long64_tTProofPlayer::fReadCallsRun! Read calls in this run; Long_tTProofPlayer::fSaveMemThresholdThreshold for saving output to file; Bool_tTProofPlayer::fSavePartialResultsWhether to save the partial results; Bool_tTProofPlayer::fSaveResultsPerPacketWhether to save partial results after each packet; TStatus*TProofPlayer::fSelStatus! status of query in progress; TSelector*TProofPlayer::fSelector! the latest selector; TClass*TProofPlayer::fSelectorClass! class of the latest selector; TStringTProofPlayerRemote::fSelectorFileNameCurrent Selector's name, set by Process(); Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*TProofPlayer::fStopTimerTimer associated with a stop request; TMutex*TProofPlayer::fStopTimerMtxTo protect the stop timer; Long64_tTProofPlayer::fTotalEventsnumber of events requested; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*TProofPlayer::fgDrawInputParsList of input parameters to be kept on drawing actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t HandleTimer(TTimer* timer). Int_t MakeSelector(const char* selfile). void SetupFeedback(). TProofPlayerLite(TProof* proof = 0); { }. virtual ~TProofPlayerLite(); { }. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Long64_t Finalize(Bool_t force = kFALSE, Bool_t sync = kFALSE). Long64_t Finalize(TQueryResult* qr); { return TProofPlayerRemote::Finalize(qr); }. void StoreFeedback(TObject* slave, TList* out). » Author: G. Ganis Mar 2008 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPlayerLite.html:17984,Inherit,Inheritance,17984,root/html534/TProofPlayerLite.html,https://root.cern,https://root.cern/root/html534/TProofPlayerLite.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ues by examining the node inode. ;  ; void UpdateRange (Index inode, Value *point, Value range, std::vector< Index > &res);  Internal recursive function with the implementation of range searches. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TKDTree.h>. Inheritance diagram for TKDTree< Index, Value >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TKDTree() [1/4]. template<typename Index , typename Value > . TKDTree< Index, Value >::TKDTree. Default constructor. Nothing is built. ; Definition at line 270 of file TKDTree.cxx. ◆ TKDTree() [2/4]. template<typename Index , typename Value > . TKDTree< Index, Value >::TKDTree ; (; Index ; npoints, . Index ; ndim, . UInt_t ; bsize . ). Definition at line 292 of file TKDTree.cxx. ◆ TKDTree() [3/4]. template<typename Index , typename Value > . TKDTree< Index, Value >::TKDTree ; (; Index ; npoints, . Index ; ndim, . UInt_t ; bsize, . Value ** ; data . ). Create a kd-tree from the provided data array. ; This function on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKDTree.html:27928,inherit,inherited,27928,doc/master/classTKDTree.html,https://root.cern,https://root.cern/doc/master/classTKDTree.html,2,['inherit'],['inherited']
Modifiability,"ues for the events of the given Data type ;  ; const TString & GetInternalVarName (Int_t ivar) const;  ; virtual std::vector< Double_t > GetMvaValues (Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the current Data type ;  ; const TString & GetOriginalVarName (Int_t ivar) const;  ; const TString & GetWeightFileDir () const;  ; Bool_t HasTrainingTree () const;  ; Bool_t Help () const;  ; Bool_t IgnoreEventsWithNegWeightsInTraining () const;  ; Bool_t IsConstructedFromWeightFile () const;  ; Bool_t IsNormalised () const;  ; virtual void MakeClassSpecific (std::ostream &, const TString &="""") const;  ; virtual void MakeClassSpecificHeader (std::ostream &, const TString &="""") const;  ; void NoErrorCalc (Double_t *const err, Double_t *const errUpper);  ; void SetNormalised (Bool_t norm);  ; void SetWeightFileDir (TString fileDir);  set directory of weight file ;  ; void SetWeightFileName (TString);  set the weight file name (depreciated) ;  ; void Statistics (Types::ETreeType treeType, const TString &theVarName, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &);  calculates rms,mean, xmin, xmax of the event variable this can be either done for the variables as they are or for normalised variables (in the range of 0-1) if ""norm"" is set to kTRUE ;  ; Bool_t TxtWeightsOnly () const;  ; Bool_t Verbose () const;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html:25632,variab,variable,25632,doc/master/classTMVA_1_1MethodBoost.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html,10,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"ues from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxy_stateProxy to hiding state category; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsHiddenReal.html:32565,config,configuration,32565,root/html530/RooAbsHiddenReal.html,https://root.cern,https://root.cern/root/html530/RooAbsHiddenReal.html,1,['config'],['configuration']
Modifiability,"ues from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxy_paramSetSet of parameters to which constraints apply; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooListProxy_set1Set of constraint terms; TIterator*_setIter1! do not persist; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooConstraintSum.html:31919,config,configuration,31919,root/html526/RooConstraintSum.html,https://root.cern,https://root.cern/root/html526/RooConstraintSum.html,2,['config'],['configuration']
Modifiability,"ues not in the right sequence.; The solution to this problem is to call BypassStreamer(kFALSE); for the TClonesArray. In this case, the normal Bar::Streamer function; will be called. The Bar::Streamer function works OK independently; if the Bar StreamerInfo had been generated in optimized mode or not. void Compress(); Remove empty slots from array. void Clear(Option_t* option = """"); Clear the clones array. Only use this routine when your objects don't; allocate memory since it will not call the object dtors.; However, if the class in the TClonesArray implements the function; Clear(Option_t *option) and if option = ""C"" the function Clear(); is called for all objects in the array. In the function Clear(), one; can delete objects or dynamic arrays allocated in the class.; This procedure is much faster than calling TClonesArray::Delete(). void Delete(Option_t* option = """"); Clear the clones array. Use this routine when your objects allocate; memory (e.g. objects inheriting from TNamed or containing TStrings; allocate memory). If not you better use Clear() since if is faster. void Expand(Int_t newSize); Expand or shrink the array to newSize elements. void ExpandCreate(Int_t n); Expand or shrink the array to n elements and create the clone; objects by calling their default ctor. If n is less than the current size; the array is shrinked and the allocated space is freed.; This routine is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly). void ExpandCreateFast(Int_t n); Expand or shrink the array to n elements and create the clone; objects by calling their default ctor. If n is less than the current size; the array is shrinked but the allocated space is _not_ freed.; This routine is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; Th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClonesArray.html:14919,inherit,inheriting,14919,root/html526/TClonesArray.html,https://root.cern,https://root.cern/root/html526/TClonesArray.html,1,['inherit'],['inheriting']
Modifiability,"ues.; -. TFormula(const char* name, const char* formula = """", bool addToGlobList = true). TFormula& operator=(const TFormula& rhs); -; *-* = Operator; -. Int_t Compile(const char* expression = """"); Compile the given expression with Cling; backward compatibility method to be used in combination with the empty constructor; if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used.; return 0 if the formula compilation is successfull. void Copy(TObject& f1) const. void Clear(Option_t* option = """"); clear the formula setting expression to empty and reset the variables and parameters containers. bool PrepareEvalMethod(); -; *-* Sets TMethodCall to function inside Cling environment; *-* TFormula uses it to execute function.; *-* After call, TFormula should be ready to evaluate formula.; -. void InputFormulaIntoCling(); -; *-* Inputs formula, transfered to C++ code into Cling; -. void FillDefaults(); -; *-* Fill structures with default variables, constants and function shortcuts; -; #ifdef ROOT_CPLUSPLUS11. void HandlePolN(TString& formula); -; *-* Handling polN; *-* If before 'pol' exist any name, this name will be treated as variable used in polynomial; *-* eg.; *-* varpol2(5) will be replaced with: [5] + [6]*var + [7]*var^2; *-* Empty name is treated like variable x.; -. void HandleParametrizedFunctions(TString& formula); -; *-* Handling parametrized functions; *-* Function can be normalized, and have different variable then x.; *-* Variables should be placed in brackets after function name.; *-* No brackets are treated like [x].; *-* Normalized function has char 'n' after name, eg.; *-* gausn[var](0) will be replaced with [0]*exp(-0.5*((var-[1])/[2])^2)/(sqrt(2*pi)*[2]); -; *-* Adding function is easy, just follow these rules:; *-* - Key for function map is pair of name and dimension of function; *-* - value of key is a pair function body and normalized function body; *-* - {Vn} is a place where variable appear, n repre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:11614,variab,variables,11614,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,2,['variab'],['variables']
Modifiability,"uested (good for individual trees that are best grown out, and then pruned back, while boosted decision trees are best 'small' trees to start with. ;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  ; void SetMinNodeSize (Double_t sizeInPercent);  ; void SetMinNodeSize (TString sizeInPercent);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t TestTreeQuality (DecisionTree *dt);  ; void Train (void);  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () const;  ; const Event * GetEvent (const TMVA::Event *ev) const;  ; const Event * GetEvent (Long64_t ievt) const;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:5305,inherit,inherited,5305,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,1,['inherit'],['inherited']
Modifiability,"uffer &ClassDef_StreamerNVirtual_b);  ; void wireCache () override;  ;  Public Member Functions inherited from RooAbsCache;  RooAbsCache (const RooAbsCache &, RooAbsArg *owner=nullptr);  Copy constructor. Takes owner as argument and registers cache with owne. ;  ;  RooAbsCache (RooAbsArg *owner=nullptr);  Constructor. Takes owner as argument and register cache with owner. ;  ; virtual ~RooAbsCache ();  Destructor. Unregisters cache with owner. ;  ; void setOwner (RooAbsArg *owner);  Reset the owner, triggering the owner to register this cache in its list of caches. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static bool clearObsList ();  ; static const char * DeclFileName ();  ; static void doClearObsList (bool flag);  ;  Static Public Member Functions inherited from RooCacheManager< RooAbsCacheElement >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCache; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; bool _allowOptimize;  ; bool _clearOnRedirect;  ; bool _optCacheModeSeen;  ! ;  ; RooArgSet * _optCacheObservables = nullptr;  ! current optCacheObservables ;  ;  Protected Attributes inherited from RooCacheManager< RooAbsCacheElement >; Int_t _lastIndex;  ! Last slot accessed ;  ; Int_t _maxSize;  ! Maximum size ;  ; std::vector< RooNormSetCache > _nsetCache;  ! Normalization/Integration set manager ;  ; std::vector< RooAbsCacheElement * > _object;  ! Payload ;  ; Int_t _size;  ! Actual use ;  ; bool _wired;  ! In wired mode, there is a single payload which is returned always ;  ;  Protected Attributes inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooObjCacheManager.html:5420,inherit,inherited,5420,doc/master/classRooObjCacheManager.html,https://root.cern,https://root.cern/doc/master/classRooObjCacheManager.html,2,['inherit'],['inherited']
Modifiability,"uffer &ClassDef_StreamerNVirtual_b);  ; void wrapPdfsInBinSamplingPdfs (RooAbsData const &data, double precision);  Wraps the components of this RooSimultaneous in RooBinSamplingPdfs. ;  ; void wrapPdfsInBinSamplingPdfs (RooAbsData const &data, std::map< std::string, double > const &precisions, bool useCategoryNames=false);  Wraps the components of this RooSimultaneous in RooBinSamplingPdfs, with a different precision parameter for each component. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooArgSet &nset=RooArgSet());  Create a cumulative distribution function of this p.d.f in terms of the observables listed in iset. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; virtual std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() returns an object that returns the integral. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsDat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:8145,extend,extended,8145,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['extend'],['extended']
Modifiability,"uffer &b, void *, const TConfiguration *)Definition TStreamerInfoActions.cxx:1534; TStreamerInfoActions::ReadSTLMemberWiseChangedClassvoid ReadSTLMemberWiseChangedClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers)Definition TStreamerInfoActions.cxx:1266; TStreamerInfoActions::ReadSTLObjectWiseFastArrayV2void ReadSTLObjectWiseFastArrayV2(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers, UInt_t start)Definition TStreamerInfoActions.cxx:1371; TStreamerInfoActions::ReadBasicType< BitsMarker >Int_t ReadBasicType< BitsMarker >(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:235; TStreamerInfoActions::ReadStreamerLoopInt_t ReadStreamerLoop(TBuffer &buf, void *addr, const TConfiguration *config)Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text st...Definition TStreamerInfoActions.cxx:638; TStreamerInfoActions::WriteTextBaseClassInt_t WriteTextBaseClass(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:275; TStreamerInfoActions::GenericWriteActionInt_t GenericWriteAction(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:198; TStreamerInfoActions::ReadArraySTLMemberWiseChangedClassvoid ReadArraySTLMemberWiseChangedClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers)Definition TStreamerInfoActions.cxx:1310; TStreamerInfoActions::PopDataCacheVectorPtrInt_t PopDataCacheVectorPtr(TBuffer &b, void *, const void *, const TConfiguration *)Definition TStreamerInfoActions.cxx:1540; TStreamerInfoActions::ReadTextStreamerInt_t ReadTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:315; TStreamerInfoActions::GenericReadActionInt_t GenericReadAction(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:191; TStreamerInfoActions::ESelectLooperESelectLooperDefinitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:254716,config,config,254716,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"uffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ; Definition at line 638 of file TStreamerInfoActions.cxx. ◆ ReadTextBaseClass(). Int_t TStreamerInfoActions::ReadTextBaseClass ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 307 of file TStreamerInfoActions.cxx. ◆ ReadTextObject(). Int_t TStreamerInfoActions::ReadTextObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 293 of file TStreamerInfoActions.cxx. ◆ ReadTextStreamer(). Int_t TStreamerInfoActions::ReadTextStreamer ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 315 of file TStreamerInfoActions.cxx. ◆ ReadTextTNamed(). Int_t TStreamerInfoActions::ReadTextTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 335 of file TStreamerInfoActions.cxx. ◆ ReadTextTObject(). Int_t TStreamerInfoActions::ReadTextTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 300 of file TStreamerInfoActions.cxx. ◆ ReadTextTObjectBase(). Int_t TStreamerInfoActions::ReadTextTObjectBase ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 327 of file TStreamerInfoActions.cxx. ◆ ReadTNamed(). Int_t TStreamerInfoActions::ReadTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 950 of file TStreamerInfoActions.cxx. ◆ ReadTObject(). Int_t TStreamerInfoActions::ReadTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 940 of file TStreamerInfoActions.cxx. ◆ ReadTString(). Int_t TStreamerInfoActions::ReadTString ; (; TBuffer & ; buf, . void *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:15793,config,config,15793,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"uffer object; TStringTKey::fClassNameObject Class name; Short_tTKey::fCycleCycle number; TDatimeTKey::fDatimeDate/Time of insertion in file; Long64_tfKeyId! unique identifier of key for search methods; XMLNodePointer_tfKeyNode! node with stored object; Short_tTKey::fKeylenNumber of bytes for the key itself; Int_tTKey::fLeftNumber of bytes left in current segment; TDirectory*TKey::fMotherDir! pointer to mother directory; TStringTNamed::fNameobject identifier; Int_tTKey::fNbytesNumber of bytes for the object on file; Int_tTKey::fObjlenLength of uncompressed object in bytes; UShort_tTKey::fPidOffset! Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir; Long64_tTKey::fSeekKeyLocation of object on file; Long64_tTKey::fSeekPdirLocation of parent directory on file; Bool_tfSubdir! indicates that key contains subdirectory; TStringTNamed::fTitleobject title; Int_tTKey::fVersionKey version identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TKeyXML(); default constructor. TKeyXML(TDirectory* mother, Long64_t keyid, const TObject* obj, const char* name = 0, const char* title = 0); Creates TKeyXML and convert obj data to xml structures. TKeyXML(TDirectory* mother, Long64_t keyid, const void* obj, const TClass* cl, const char* name, const char* title = 0); Creates TKeyXML and convert obj data to xml structures. TKeyXML(TDirectory* mother, Long64_t keyid, XMLNodePointer_t keynode); Creates TKeyXML and takes ownership over xml node, from which object can be restored. ~TKeyXML(); TKeyXML destructor. void Delete(Option_t* option = """"); Delete key from current directory; Note: TKeyXML object is not deleted. You still have to call ""delete key"". void StoreKeyAttributes(); Stores keys attributes in key node. void StoreObject(const void* obj, const TClass* cl); convert object to xml structure and keep this structure in key. void UpdateAttributes(); update key attributes in key node. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKeyXML.html:8290,Inherit,Inheritance,8290,root/html532/TKeyXML.html,https://root.cern,https://root.cern/root/html532/TKeyXML.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIsActiveis object attached to MemStat. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStat(Option_t* option = ""read"", Int_t buffersize = 10000, Int_t maxcalls = 5000000); Supported options:; ""gnubuiltin"" - if declared, then MemStat will use gcc build-in function,; otherwise glibc backtrace will be used. Note: Currently MemStat uses a hard-coded output file name (for writing) = ""memstat.root"";. ~TMemStat(); destructor. void Close(); close the TMemStat manager. void Disable(); Disable memory statistics. void Enable(); Enable memory statistics. void Show(Double_t update = 0.1, Int_t nbigleaks = 20, const char* fname = ""*""); Show results. TMemStat(Option_t* option = ""read"", Int_t buffersize = 10000, Int_t maxcalls = 5000000). » Author: Anar Manafov (A.Manafov@gsi.de) 2008-03-02 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/memstat:$Id$ » Last generated: 2015-03-14 16:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in gene",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMemStat.html:8536,Inherit,Inheritance,8536,root/html534/TMemStat.html,https://root.cern,https://root.cern/root/html534/TMemStat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. Bool_tIsValid(Int_t field). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTSQLResult::fRowCountnumber of rows in result. private:. MYSQL_FIELD*fFieldInfoinfo for each field in the row; MYSQL_RES*fResultquery result (rows). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMySQLResult(void* result); MySQL query result. ~TMySQLResult(); Cleanup MySQL query result. void Close(Option_t* opt = """"); Close query result. Bool_t IsValid(Int_t field); Check if result set is open and field index within range. Int_t GetFieldCount(); Get number of fields in result. const char * GetFieldName(Int_t field); Get name of specified field. TSQLRow * Next(); Get next query result row. The returned object must be; deleted by the user. TMySQLResult(void* result). » Author: Fons Rademakers 15/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/mysql:$Id$ » Last generated: 2015-03-14 16:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMySQLResult.html:5508,Inherit,Inheritance,5508,root/html534/TMySQLResult.html,https://root.cern,https://root.cern/root/html534/TMySQLResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTestAllMethods(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTrainAllMethods(); voidTrainAllMethodsForClassification(); voidTrainAllMethodsForRegression(); virtual voidTObject::UseCurrentStyle(); Bool_tUserAssignEvents(UInt_t clIndex); Bool_tVerbose() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. TMVA::DataInputHandler&DataInput(); TMVA::DataSetInfo&DefaultDataSetInfo(); voidGreetings(); voidSetInputTreesFromEventAssignTrees(); voidWriteDataInformation(). Data Members; public:. enum DataAssignType { kUndefined; kAssignTrees; kAssignEvents; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Float_t*fATreeEventevent variables; Int_tfATreeTypetype of event (=classIndex); Float_tfATreeWeightweight of the event; TMVA::Types::EAnalysisTypefAnalysisType! the training type; TMVA::Factory::DataAssignTypefDataAssignType! flags for data assigni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Factory.html:10802,Config,Configurable,10802,root/html534/TMVA__Factory.html,https://root.cern,https://root.cern/root/html534/TMVA__Factory.html,6,['Config'],['Configurable']
Modifiability,"uffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTestAllMethods(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTrainAllMethods(); voidTrainAllMethodsForClassification(); voidTrainAllMethodsForRegression(); virtual voidTObject::UseCurrentStyle(); Bool_tUserAssignEvents(UInt_t clIndex); Bool_tVerbose() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. TMVA::DataInputHandler&DataInput(); TMVA::DataSetInfo&DefaultDataSetInfo(); voidGreetings(); voidSetInputTreesFromEventAssignTrees(); voidWriteDataInformation(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Factory.html:10859,Config,Configurable,10859,root/html602/TMVA__Factory.html,https://root.cern,https://root.cern/root/html602/TMVA__Factory.html,12,['Config'],['Configurable']
Modifiability,"uffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidAddKeyEvent(const int& event, TQtClientWidget* widget); booleventFilter(QObject* o, QEvent* e); static Bool_tIsGrabSelected(UInt_t selectEventMask); TQtEventQueue*Queue(); voidRestoreLostGrabbing(Event_t& event); static Bool_tSelectGrab(Event_t& event, UInt_t selectEventMask, int& me); voidSetKeyGrabber(TQtClientWidget* grabber); voidUnSetKeyGrabber(TQtClientWidget* grabber). private:. TQtClientFilter(const TQtClientFilter&); voidoperator=(const TQtClientFilter&). Data Members; protected:. UInt_tfInputEventMask; TQtClientWidget*fKeyGrabber; TQtNextEventMessage*fNotifyClient; TQtEventQueue*fRootEventQueue; static TQtClientWidget*fgActiveGrabber; static TQtClientWidget*fgButtonGrabber; static QCursor*fgGrabPointerCursor; static UInt_tfgGrabPointerEventMask; static Bool_tfgGrabPointerOwner; static TQtPointerGrabber*fgGrabber; static TQtClientWidget*fgPointerGrabber. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t IsGrabSelected(UInt_t selectEventMask); return the selection by ""grabButton"" / ""grabPointer"". ~TQtClientFilter(). void AddKeyEvent(const int& event, TQtClientWidget* widget); Map and and to the ROOT event queue Qt KeyBoard event mapped to the ROOT Event_t; For ""dest"" widget. bool SelectGrab(Event_t& event, UInt_t selectEventMask, int& me); Select Event: -- 04.12.2005 --. bool eventFilter(QObject* o, QEvent* e); Dispatch The Qt event from event queue to Event_t structure; Not all of the event fields are valid for each event type,; except fType and fWindow. void GrabPointer(TQtClientWidget* grabber, UInt_t evmask, Window_t confine, QCursor* cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); Set the X11 style active grabbing for ROOT TG widgets. TQtPointerGrabber * PointerGrabber(); { return fgGrabber; }. TQtClientWidget * GetPointerGrabber(); { return fgPointerGrabber; }. TQtClientWidget * GetButtonGrabber(); { return fgBu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQtClientFilter.html:2030,Inherit,Inheritance,2030,root/html534/TQtClientFilter.html,https://root.cern,https://root.cern/root/html534/TQtClientFilter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"uffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TClass*GetClassPointer(Bool_t load = kTRUE); Int_tGetDelta(); static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; ROOT::ESTLTypeIsSTLContainer(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBaseClass.html:2810,Inherit,InheritsFrom,2810,root/html602/TBaseClass.html,https://root.cern,https://root.cern/root/html602/TBaseClass.html,2,['Inherit'],['InheritsFrom']
Modifiability,"uffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidGetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsGeneral() const; Bool_tIsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReflection() const; Bool_tIsRegistered() const; Bool_tIsRotAboutZ() const; Bool_tIsRotation() const; Bool_tIsScale() const; Bool_tIsShared() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidLocalToMaster(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterVect(const Double_t* local, Double_t* master) const; virtual voidTNamed::ls(Option_t* option = """") const; virtual TGeoM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoMatrix.html:9353,Inherit,InheritsFrom,9353,root/html534/TGeoMatrix.html,https://root.cern,https://root.cern/root/html534/TGeoMatrix.html,3,['Inherit'],['InheritsFrom']
Modifiability,"uffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidGetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsGeneral() const; Bool_tIsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReflection() const; Bool_tIsRegistered() const; Bool_tIsRotAboutZ() const; Bool_tIsRotation() const; Bool_tIsScale() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidLocalToMaster(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterVect(const Double_t* local, Double_t* master) const; virtual voidTNamed::ls(Option_t* option = """") const; virtual TGeoMatrix*MakeClone() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMatrix.html:9353,Inherit,InheritsFrom,9353,root/html532/TGeoMatrix.html,https://root.cern,https://root.cern/root/html532/TGeoMatrix.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMessage (const TMessage &);  ; void operator= (const TMessage &);  ; Bool_t TestBitNumber (UInt_t bitnumber) const;  . Private Attributes; TBits fBitsPIDs;  ; char * fBufComp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . Static Private Attributes; static Bool_t fgEvolution = kFALSE;  . Friends; class TAuthenticate;  ; class TPSocket;  ; class TSocket;  ; class TUDPSocket;  ; class TXSocket;  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMessage.html:36443,inherit,inherited,36443,doc/master/classTMessage.html,https://root.cern,https://root.cern/doc/master/classTMessage.html,1,['inherit'],['inherited']
Modifiability,"ufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferFile.html:36038,inherit,inherited,36038,doc/master/classTBufferFile.html,https://root.cern,https://root.cern/doc/master/classTBufferFile.html,1,['inherit'],['inherited']
Modifiability,"ufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Prote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL.html:36816,inherit,inherited,36816,doc/master/classTBufferSQL.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL.html,1,['inherit'],['inherited']
Modifiability,"ufferSkip(b,&ptr,config->fCompInfo,conf->fCompInfo->fType+TStreamerInfo::kSkip,aElement,n,0);; 1617 } else {; 1618 TVectorLoopConfig cached_config( nullptr, cached->fClass->Size(), /* read */ kTRUE );; 1619 void *cached_start = (*cached)[0];; 1620 void *cached_end = ((char*)cached_start) + cached->fSize * cached_config.fIncrement;; 1621 config->fAction(b,cached_start,cached_end,&cached_config);; 1622 }; 1623 // Idea: Factor out this 'if' to a UseCacheRepeat function; 1624 if (config->fNeedRepeat) {; 1625 b.SetBufferOffset(bufpos);; 1626 }; 1627 return 0;; 1628 }; 1629 ; 1630 INLINE_TEMPLATE_ARGS Int_t UseCacheVectorLoop(TBuffer &b, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *conf); 1631 {; 1632 TConfigurationUseCache *config = (TConfigurationUseCache*)conf;; 1633 ; 1634 Int_t bufpos = b.Length();; 1635 TVirtualArray *cached = b.PeekDataCache();; 1636 if (cached==0) {; 1637 TStreamerElement *aElement = config->fCompInfo->fElem;; 1638 TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1639 Warning(""ReadBuffer"",""Skipping %s::%s because the cache is missing."",info->GetName(),aElement->GetName());; 1640 char *ptr = (char*)start;; 1641 UInt_t n = (((char*)end)-((char*)start))/((TVectorLoopConfig*)loopconf)->fIncrement;; 1642 info->ReadBufferSkip(b,&ptr,config->fCompInfo,config->fCompInfo->fType+TStreamerInfo::kSkip,aElement,n,0);; 1643 } else {; 1644 TVectorLoopConfig cached_config( nullptr, cached->fClass->Size(), /* read */ kTRUE );; 1645 void *cached_start = (*cached)[0];; 1646 void *cached_end = ((char*)cached_start) + cached->fSize * cached_config.fIncrement;; 1647 config->fAction(b,cached_start,cached_end,&cached_config);; 1648 }; 1649 // Idea: Factor out this 'if' to a UseCacheRepeat function; 1650 if (config->fNeedRepeat) {; 1651 b.SetBufferOffset(bufpos);; 1652 }; 1653 return 0;; 1654 }; 1655 ; 1656 INLINE_TEMPLATE_ARGS Int_t UseCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *loopcon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:67728,config,config,67728,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"uffix () const;  ; void wireAllCaches ();  ; RooExpensiveObjectCache & expensiveObjectCache () const;  ; virtual void setExpensiveObjectCache (RooExpensiveObjectCache &cache);  ; virtual void setCachedValue (double, bool=true);  Overwrite the current value stored in this object, making it look like this object computed that value. ;  ; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED (6, 36, ""Use observableOverlaps()."") inline bool dependentOverlaps(const RooAbsData *dset;  ;  R__DEPRECATED (6, 36, ""Use observableOverlaps()."") inline bool dependentOverlaps(const RooArgSet *depList;  ;  R__DEPRECATED (6, 36, ""Use checkObservables()."") inline bool checkDependents(const RooArgSet *nset) const;  ;  R__DEPRECATED (6, 36, ""Use recursiveCheckObservables()."") inline bool recursiveCheckDependents(const RooArgSet *nset) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStringVar.html:20473,inherit,inherited,20473,doc/master/classRooStringVar.html,https://root.cern,https://root.cern/doc/master/classRooStringVar.html,1,['inherit'],['inherited']
Modifiability,"ufirst, Double_t ulast);  Set the viewing range for the axis from ufirst to ulast (in user coordinates, that is, the ""natural"" axis coordinates). ;  ; virtual void SetTicks (Option_t *option=""+"");  Set ticks orientation. ;  ; virtual void SetTimeDisplay (Int_t value);  ; virtual void SetTimeFormat (const char *format="""");  Change the format used for time plotting. ;  ; virtual void SetTimeOffset (Double_t toffset, Option_t *option=""local"");  Change the time offset If option = ""gmt"", set display mode to GMT. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TAxis. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnZoom ();  Reset first & last bin to the full range. ;  ; virtual void ZoomOut (Double_t factor=0, Double_t offset=0);  Zoom out by a factor of 'factor' (default =2) uses previous zoom factor by default Keep center defined by 'offset' fixed ie. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classAxis2.html:7825,inherit,inherited,7825,doc/master/classAxis2.html,https://root.cern,https://root.cern/doc/master/classAxis2.html,2,['inherit'],['inherited']
Modifiability,"ufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Long64_t fFirst;  First free word of segment. ;  ; Long64_t fLast;  Last free word of segment. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFree.h>. Inheritance diagram for TFree:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFree.html:10325,inherit,inherited,10325,doc/master/classTFree.html,https://root.cern,https://root.cern/doc/master/classTFree.html,1,['inherit'],['inherited']
Modifiability,"ug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » About License. The ROOT system is being made available under the LGPL 2.1 or (at your option) any later version, which allows ROOT to be used in a wide range of open and closed environments. The LGPL is copied verbatim below.; The optional MathMore library uses the GSL library which is licensed under the GPL and hence the MathMore library is only available under the GPL (to exclude MathMore from ROOT run configure with the -Dmathmore=OFF option).; RooFit is distributed under a University of California and Stanford University license. GNU LESSER GENERAL PUBLIC LICENSE; Version 2.1, February 1999. Copyright (C) 1991, 1999 Free Software Foundation, Inc.; 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. [This is the first released version of the Lesser GPL. It also counts; as the successor of the GNU Library Public License, version 2, hence; the version number 2.1.]. Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; Licenses are intended to guarantee your freedom to share and change; free software--to make sure the software is free for all its users. This license, the Lesser General Public License, applies",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/license.html:2252,config,configure,2252,d/license.html,https://root.cern,https://root.cern/d/license.html,1,['config'],['configure']
Modifiability,"ug) {; 4019 Printf("" START COVARIANCE MATRIX CALCULATION."");; 4020 }; 4021 fCfrom = ""HESSE "";; 4022 fNfcnfr = fNfcn;; 4023 fCstatu = ""OK "";; 4024 npard = fNpar;; 4025// make sure starting at the right place; 4026 mninex(fX);; 4027 nparx = fNpar;; 4028 Eval(nparx, fGin, fs1, fU, 4); ++fNfcn;; 4029 if (fs1 != fAmin) {; 4030 df = fAmin - fs1;; 4031 mnwarn(""D"", ""MNHESS"", TString::Format(""function value differs from AMIN by %g"",df));; 4032 }; 4033 fAmin = fs1;; 4034 if (ldebug) {; 4035 Printf("" PAR D GSTEP D G2 GRD SAG "");; 4036 }; 4037// diagonal elements .; 4038 ; 4039// fISW[1] = 1 if approx, 2 if not posdef, 3 if ok; 4040// AIMSAG is the sagitta we are aiming for in second deriv calc.; 4041 ; 4042 aimsag = TMath::Sqrt(fEpsma2)*(TMath::Abs(fAmin) + fUp);; 4043// Zero the second derivative matrix; 4044 npar2 = fNpar*(fNpar + 1) / 2;; 4045 for (i = 1; i <= npar2; ++i) { fVhmat[i-1] = 0; }; 4046 ; 4047// Loop over variable parameters for second derivatives; 4048 idrv = 2;; 4049 for (id = 1; id <= npard; ++id) {; 4050 i = id + fNpar - npard;; 4051 iext = fNexofi[i-1];; 4052 if (fG2[i-1] == 0) {; 4053 mnwarn(""W"", ""HESSE"", Form(""Second derivative enters zero, param %d"",iext));; 4054 wint = fWerr[i-1];; 4055 if (fNvarl[iext-1] > 1) {; 4056 mndxdi(fX[i-1], i-1, dxdi);; 4057 if (TMath::Abs(dxdi) < .001) wint = .01;; 4058 else wint /= TMath::Abs(dxdi);; 4059 }; 4060 fG2[i-1] = fUp / (wint*wint);; 4061 }; 4062 xtf = fX[i-1];; 4063 dmin_ = fEpsma2*8*TMath::Abs(xtf);; 4064 ; 4065// find step which gives sagitta = AIMSAG; 4066 d = TMath::Abs(fGstep[i-1]);; 4067 int skip50 = 0;; 4068 for (icyc = 1; icyc <= ncyc; ++icyc) {; 4069// loop here only if SAG=0; 4070 for (multpy = 1; multpy <= 5; ++multpy) {; 4071// take two steps; 4072 fX[i-1] = xtf + d;; 4073 mninex(fX);; 4074 nparx = fNpar;; 4075 Eval(nparx, fGin, fs1, fU, 4); ++fNfcn;; 4076 fX[i-1] = xtf - d;; 4077 mninex(fX);; 4078 Eval(nparx, fGin, fs2, fU, 4); ++fNfcn;; 4079 fX[i-1] = xtf;; 4080 sag = (fs1 + fs2 - fAmin*2)*.5;; 4081 i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:136187,variab,variable,136187,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ug-in with name Minuit2 Minimization Library or TMinuit). In addition the user can choose the minimizer algorithm: Migrad (the default one), Simplex, or Minimize (combined Migrad + Simplex) ; Definition at line 51 of file TMinuitMinimizer.h. Public Member Functions;  TMinuitMinimizer (const char *type, unsigned int ndim=0);  Constructor from a char * (used by PM) ;  ;  TMinuitMinimizer (ROOT::Minuit::EMinimizerType type=ROOT::Minuit::kMigrad, unsigned int ndim=0);  Default constructor. ;  ;  ~TMinuitMinimizer () override;  Destructor (no operations) ;  ; bool Contour (unsigned int i, unsigned int j, unsigned int &npoints, double *xi, double *xj) override;  find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; bool FixVariable (unsigned int) override;  fix an existing variable ;  ; bool GetCovMatrix (double *cov) const override;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; bool GetHessianMatrix (double *h) const override;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; bool GetMinosError (unsigned int i, double &errLow, double &errUp, int=0) override;  minos error for variable i, return false if Minos failed ;  ; bool GetVariableSettings (unsigned int, ROOT::Fit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:1619,variab,variable,1619,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,4,['variab'],"['variable', 'variables']"
Modifiability,"ugh , typename OutContainer > ; double operator() (PassThrough &settingsAndBatch, const Weights &weights, ModeOutput eFetch, OutContainer &outputContainer) const;  execute computation of the DNN for one mini-batch; helper function ;  ; template<typename Weights , typename Gradients , typename PassThrough > ; double operator() (PassThrough &settingsAndBatch, Weights &weights, Gradients &gradients) const;  execute computation of the DNN for one mini-batch (used by the minimizer); returns gradients as well ;  ; template<typename Weights , typename Gradients , typename PassThrough , typename OutContainer > ; double operator() (PassThrough &settingsAndBatch, Weights &weights, Gradients &gradients, ModeOutput eFetch, OutContainer &outputContainer) const;  ; size_t outputSize () const;  output size of the DNN ;  ; template<typename LayerContainer , typename DropContainer , typename ItWeight , typename ItGradient > ; std::vector< std::vector< LayerData > > prepareLayerData (LayerContainer &layers, Batch &batch, const DropContainer &dropContainer, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t &totalNumWeights) const;  ; template<typename Minimizer > ; void preTrain (std::vector< double > &weights, std::vector< Pattern > &trainPattern, const std::vector< Pattern > &testPattern, Minimizer &minimizer, Settings &settings);  pre-training for future use ;  ; void removeLayer ();  remove one layer ;  ; void setErrorFunction (ModeErrorFunction eErrorFunction);  which error function is to be used ;  ; void setInputSize (size_t sizeInput);  set the input size of the DNN ;  ; void SetIpythonInteractive (IPythonInteractive *fI, bool *fE, UInt_t *M, UInt_t *C);  ; void setOutputSize (size_t sizeOutput);  set the output size of the DNN ;  ; template<typename Minimizer > ; double train (std::vector< double > &weights, std::vector< Pattern > &trainPattern, const std::vector< Pattern > &testPattern, Minimizer &minimizer, Settings &s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:4983,layers,layers,4983,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['layers'],['layers']
Modifiability,"uick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » TPyMultiGenFunction. class TPyMultiGenFunction: public ROOT::Math::IBaseFunctionMultiDim. Python wrapper for Fit functions. Function Members (Methods); public:. TPyMultiGenFunction(PyObject* self = 0); virtual~TPyMultiGenFunction(); static TClass*Class(); virtual ROOT::Math::IBaseFunctionMultiDim*Clone() const; virtual doubleDoEval(const double* x) const; virtual TClass*IsA() const; virtual unsigned intNDim() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TPyMultiGenFunction(const TPyMultiGenFunction& src); TPyMultiGenFunction&operator=(const TPyMultiGenFunction&). Data Members; private:. PyObject*fPySelf! actual python object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyMultiGenFunction(PyObject* self = 0); Construct a TPyMultiGenFunction derived with <self> as the underlying. ~TPyMultiGenFunction(); Destructor. Only deref if still holding on to Py_None (circular otherwise). unsigned int NDim() const; Simply forward the call to python self. double DoEval(const double* x) const; Simply forward the call to python self. TPyMultiGenFunction(PyObject* self = 0); ctor/dtor, and assignment. ROOT::Math::IBaseFunctionMultiDim* Clone() const; Math::IMultiGenFunction implementation. { return new TPyMultiGenFunction( fPySelf ); }. TPyMultiGenFunction& operator=(const TPyMultiGenFunction& ); { return *this; }. » Last changed: Thu Nov 3 20:22:00 2011 » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPyMultiGenFunction.html:1073,Inherit,Inheritance,1073,root/html532/TPyMultiGenFunction.html,https://root.cern,https://root.cern/root/html532/TPyMultiGenFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
