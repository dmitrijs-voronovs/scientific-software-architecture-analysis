quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Security,Rename ValidateBasicSomaticShortMutations to something more in-line with MutationValidator,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5871:7,Validat,ValidateBasicSomaticShortMutations,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5871,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,Renamed existing test for validating generated WDLs.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7829:26,validat,validating,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7829,1,['validat'],['validating']
Security,Reported by Intel. Should be a `UserException` instead. ```; ./gatk-launch BwaSpark -I hdfs://sn1:8020/user/$USER/gatk/CEUTrio.HiSeq.WEx.b37.NA12892.readnamesort.bam -R hdfs://sn1:8020/user/$USER/gatk/human_g1k_v37.fasta -O hdfs://sn1:8020/user/$USER/gatk/CEUTrio.HiSeq.WEx.b37.NA12892.readnamesort.bam -- --sparkRunner SPARK --sparkMaster spark://sn1:7077 --driver-memory 8G --num-executors 4 --executor-cores 9 --executor-memory 27g; ```. ```; java.lang.NullPointerException; at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getContigNames(SequenceDictionaryUtils.java:464); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getCommonContigsByName(SequenceDictionaryUtils.java:458); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.compareDictionaries(SequenceDictionaryUtils.java:234); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:150); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:98); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.validateToolInputs(GATKSparkTool.java:402); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:312); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:108); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:166); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:185); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:76); at org.broadinstitute.hellbender.Main.main(Main.java:92); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAcce,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2020:893,validat,validateDictionaries,893,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2020,1,['validat'],['validateDictionaries']
Security,"Reposting from the Slack channel:. When I run ValidateVariants on an *invalid* VCF without providing a reference or any ""--validation-type-to-exclude"" arguments, I don't get any validation errors. However, if I add ""--validation-type-to-exclude REF"", then I get validation errors as expected. Even when I get validation errors in the second case, the error message seems to terminate abruptly: `A USER ERROR has occurred: Input output.vcf fails strict validation: the Allele Count (AC) tag is incorrect for the record at position 1:1262288, 2 vs. 1 of type:`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4642:46,Validat,ValidateVariants,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4642,7,"['Validat', 'validat']","['ValidateVariants', 'validation', 'validation-type-to-exclude']"
Security,Request: Easy access to FeatureInput<VariantContext> in GATKTool for walkers that traverse VariantContext,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1710:14,access,access,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1710,1,['access'],['access']
Security,Requester pays access isn't working,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6179:15,access,access,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6179,1,['access'],['access']
Security,"Requires a ""git lfs pull"" to access. File size is ~230 MB.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/927:29,access,access,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/927,1,['access'],['access']
Security,"Returning false instead of throwing when data is missing in the `GoogleGenomicsReadToGATKReadAdapter` is misleading -- we don't know the answer to the question the client is asking in such cases, so returning false is not correct behavior. If these fields are actually missing in the underlying reads we really do want to blow up with an exception on access, as it means the read object is not usable by us (and the query that produced these incomplete objects likely needs to be modified). Could you restore the previous versions of these methods (`isSecondaryAlignment()`, `isDuplicate()`, etc.) before I review?. As for the Google read converters, could you open a separate ticket with your description of the inconsistencies so we can decide whether to submit a patch?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/871#issuecomment-136771148:351,access,access,351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/871#issuecomment-136771148,1,['access'],['access']
Security,"Revamping the existing somatic validation pipeline needs to be done before development of the TH prototype can continue. - [ ] Identify test bed of TCGA samples from various tumor types. We can mix tumor-normal samples (as I've done at the counts/allelic-counts level in preliminary evaluations of the TH prototype) to expand the effective number of samples.; - [ ] Determine minimal version of current CGA ABSOLUTE pipeline (to be used as a baseline for comparison).; - [ ] Generate and manually curate ABSOLUTE results and narrow samples down to those with relatively robust solutions.; - [ ] Construct ModelSegments/M2 -> ABSOLUTE pipeline (will at least require minor development/tuning of ModelSegments output -> ABSOLUTE input conversion script, may also require germline tagging, see related #5804) and evaluate.; - [ ] Construct ModelSegments/M2 -> TH pipeline and evaluate.; - [ ] Remove unsupported code/tools. See https://github.com/broadinstitute/gatk/pull/5450#issuecomment-461431199 for a summary. We should make sure that any users that would be affected by this are notified and prepare accordingly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4122#issuecomment-526272699:31,validat,validation,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4122#issuecomment-526272699,1,['validat'],['validation']
Security,Revert explicit GAR references in our Docker build scripts for now. Variants team members are not Methods team members and thus do not have the access required to make Variants GAR repos public in the `broad-dsde-methods` project. Note that Variants images are still ending up in GAR thanks to the magic of DevOps redirects. This PR also retains the Docker image ID-based referencing that was introduced at the same time as the explicit GAR references that are now being backed out. Successful (or at least non-instafailing) [integration run here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/2f00b836-0c2d-41e9-84b1-b8c6a2bea8f6).,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8789:144,access,access,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8789,1,['access'],['access']
Security,"Reviving this. This will essentially be a major refactor/rewrite of CreatePanelOfNormals to make it scalable enough to handle WGS. - [x] CombineReadCounts is too cumbersome for large matrices. Change CreatePanelOfNormals to take in multiple -I instead.; - [x] Rename NormalizeSomaticReadCounts to DenoiseReadCounts and require integer read counts as input. These will still be backed by a ReadCountCollection until @asmirnov239's changes are in.; - [x] Remove optional outputs (factor-normalized and beta-hats) from DenoiseReadCounts. For now, TN and PTN output will remain in the same format (log2) to maintain compatibility with downstream tools.; - [x] Maximum number of eigensamples K to retain in the PoN is specified; the smaller of this or the number of samples remaining after filtering is used. The number actually used to denoise can be specified in DenoiseReadCounts. If we are going to spend energy computing K eigensamples, there is no reason we shouldn't expose all of them in the PoN, even if we don't want to use all of them for denoising. (Also, the current SVD utility methods do not allow for specification of K < N when performing SVD on an MxN matrix, even though the backend implementations that are called do allow for this; this is terrible. In any case, randomized SVD should be much faster than the currently available implementations, even when K = N).; - [x] Rename CreatePanelOfNormals to CreateReadCountPanelOfNormals; - [x] Refer to ""targets"" as intervals. See #3246.; - [x] Remove QC.; - [x] Refer to proportional coverage as fractional coverage.; - [x] Perform optional GC-bias correction internally if annotated intervals are passed as input.; - [x] Make standardization process for panel and case samples identical. Currently, a sample mean is taken at one point in the PoN standardization process, while a sample median is taken in the case standardization process.; - [x] HDF5 PoN will store version number, all integer read counts, all/panel intervals, all/panel ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-313921687:969,expose,expose,969,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-313921687,1,['expose'],['expose']
Security,"Rightnow doing the manual docker build locally would fail. One needs to copy the line in `.travis.yml`. ```; sudo bash build_docker.sh -e ${HASH} -s -u -d $PWD/temp_staging/;; sudo docker run -v $(pwd)/src/test/resources:/testdata --rm -e ""TEST_VERBOSITY=minimal"" -e ""TEST_TYPE=${TEST_TYPE}"" -t broadinstitute/gatk:${HASH} bash /root/run_unit_tests.sh;; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3160:140,HASH,HASH,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3160,2,['HASH'],['HASH']
Security,Rlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.581% <0.000%> (+1.613%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `98.333% <0.000%> (+1.667%)` | :arrow_up: |; | ... and [211 more](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute) | |. </details>,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315:4692,validat,validation,4692,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315,1,['validat'],['validation']
Security,"Run validation tests continuously in jenkins: ReadsPipelineSpark, BQSR etc",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1401:4,validat,validation,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1401,1,['validat'],['validation']
Security,"Running on the hg19/b37 NA12878 bam file, I'm getting the following exception in stage 0:. ```; org.apache.spark.SparkException: Job aborted due to stage failure: Task 589 in stage 0.0 failed 4 times, most recent failure: Lost task 589.3 in stage 0.0 (TID 757, cwhelan-na12878-pcr--30x-bam-w-6.c.broad-dsde-methods.internal): java.lang.IllegalArgumentException: observedValue must be non-negative; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:681); at org.broadinstitute.hellbender.tools.spark.utils.IntHistogram.addObservation(IntHistogram.java:50); at org.broadinstitute.hellbender.tools.spark.sv.evidence.ReadMetadata$LibraryRawStatistics.addRead(ReadMetadata.java:367); at org.broadinstitute.hellbender.tools.spark.sv.evidence.ReadMetadata$PartitionStatistics.<init>(ReadMetadata.java:431); at org.broadinstitute.hellbender.tools.spark.sv.evidence.ReadMetadata.lambda$new$1dcab782$1(ReadMetadata.java:57); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:152); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:152); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:785); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:785); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319); at org.apache.spark.rdd.RDD.iterator(RDD.scala:283); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); at org.apache.spark.scheduler.Task.run(Task.scala:86); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:748). Driver stacktrace:; at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGSchedul",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3462:443,validat,validateArg,443,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3462,1,['validat'],['validateArg']
Security,"Running something like this on the outputs of the score tool from a validation shard could help determine the threshold. (This was done hastily, so excuse any errors!). Below I show the results of running with a test VCF of 50 1000G WES samples. Note that ""training"" and ""truth"" are used in the VQSR meanings, and that we derive positive labels for the validation set from their union; but one could imagine variations on this. ```; import h5py; import numpy as np; import matplotlib.pyplot as plt. annot_file = 'test.all-unlabeled.annot.hdf5'; scores_file = 'test.all-unlabeled.scores.hdf5'. with h5py.File(annot_file, 'r') as f:; is_training_n = f['/labels/training'][()].astype(bool); is_truth_n = f['/labels/truth'][()].astype(bool); ; with h5py.File(scores_file, 'r') as f:; score_n = f['/data/scores'][()]. score_sort_order_n = score_n.argsort(); sorted_score_n = score_n[score_sort_order_n]; is_positive_n = is_training_n | is_truth_n. p_n = is_positive_n[score_sort_order_n]; m_n = ~p_n. tp_n = np.cumsum(p_n[::-1])[::-1]; fn_n = np.cumsum(p_n); mp_n = np.cumsum(m_n[::-1])[::-1]. recall_n = tp_n / (tp_n + fn_n); LL_score_n = recall_n**2 / (mp_n / sum(m_n)). argmax_idx = np.argmax(LL_score_n); LL_score_max = LL_score_n[argmax_idx]; LL_score_argmax = sorted_score_n[argmax_idx]; recall_at_LL_score_argmax = recall_n[argmax_idx]. plt.plot(sorted_score_n, LL_score_n, label=f'LL score, max = {LL_score_max:.2f}, argmax = {LL_score_argmax:.2f}'); plt.plot(sorted_score_n, recall_n, label=f'recall, at LL score argmax = {recall_at_LL_score_argmax:.2f}'); plt.axvline(LL_score_argmax, c='grey'); plt.xlabel('score'); plt.legend(); plt.show(); ```. ![image](https://user-images.githubusercontent.com/11076296/158000937-79dcfc26-45c6-400f-9101-37a96087492e.png). Would be interesting to also plot e.g. F1 vs. score, where F1 is determined on a orthogonal set of positive/negative gold-standard labels (e.g., GIAB), to see how close the LL score determined on the ""training/truth"" labels gets us.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1065794594:68,validat,validation,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1065794594,2,['validat'],['validation']
Security,"SCAN\_WINDOW\_SIZE=1000. When it's set to default value 100, the error message is slightly different but ArrayIndexOutOfBoundsException persists. I have also experimented with different window sizes, all values >1000 give same error at the same read on chrX (details below). The reference fasta file is taken from UCSC: [https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz](https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz). Any feedback leading to resolving the issue is greatly appreciated. a) Picard version:. 2.21.6-SNAPSHOT. b) Command script:. java -jar picard.jar CollectGcBiasMetrics \\ ; ; I=sorted.sam \\ ; ; O=gc\_bias\_metrics.txt \\ ; ; CHART=gc\_bias\_metrics.pdf \\ ; ; S=summary\_metrics.txt \\ ; ; R=hg19.fa \\ ; ; SCAN\_WINDOW\_SIZE=1000. c) Error log:. MINIMUM\_GENOME\_FRACTION=1.0E-5 IS\_BISULFITE\_SEQUENCED=false METRIC\_ACCUMULATION\_LEVEL=\[ALL\_READS\] ALSO\_IGNORE\_DUPLICATES=false ASSUME\_SORTED=true STOP\_AFTER=0 VERBOSITY=INFO QUIET=false VALIDATION\_STRINGENCY=STRICT COMPRESSION\_LEVEL=5 MAX\_RECORDS\_IN\_RAM=500000 CREATE\_INDEX=false CREATE\_MD5\_FILE=false GA4GH\_CLIENT\_SECRETS=client\_secrets.json USE\_JDK\_DEFLATER=false USE\_JDK\_INFLATER=false ; ; \[Tue Jan 07 16:48:19 PST 2020\] Executing as [akoch@hpc5-0-3.local](mailto:akoch@hpc5-0-3.local) on Linux 2.6.32-431.11.2.el6.x86\_64 amd64; OpenJDK 64-Bit Server VM 1.8.0\_181-b13; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.21.6-SNAPSHOT ; ; INFO 2020-01-07 16:51:24 SinglePassSamProgram Processed 1,000,000 records. Elapsed time: 00:00:33s. Time for last 1,000,000: 27s. Last read position: chr5:92,832,908 ; ; INFO 2020-01-07 16:51:53 SinglePassSamProgram Processed 2,000,000 records. Elapsed time: 00:01:01s. Time for last 1,000,000: 28s. Last read position: chr11:121,228,669 ; ; \[Tue Jan 07 16:52:25 PST 2020\] picard.analysis.CollectGcBiasMetrics done. Elapsed time: 4.10 minutes. ; ; Runtime.totalMemory()=4236247040 ; ; To ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6372:1491,VALIDAT,VALIDATION,1491,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6372,1,['VALIDAT'],['VALIDATION']
Security,"SSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Process",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:3060,Validat,ValidateVariants,3060,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(Fil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:7852,secur,security,7852,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(Fil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6146,secur,security,6146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(Fil,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9634,secur,security,9634,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"SamAssertionUtils.samsEqualStringent tries to short-circuit file validation by first doing an md5 compare. Most of the time when we run the test suite (in the current tests 171 out of 193), the short-circuiting fails we do the more expensive read by read test. All of these have one or more that fail md5 check (some are probably crams, which IIRC places the file name in the cram header):. MarkDuplicatesIntegrationTest; AddOrReplaceReadGroupsIntegrationTest; ApplyBQSRIntegrationTest; ApplyBQSRSparkIntegrationTest; BQSRPipelineSparkIntegrationTest; BwaSparkIntegrationTest; GatherBamFilesIntegrationTest; HaplotypeBAMWriterUnitTest; PrintReadsIntegrationTest; ReadsPipelineSparkIntegrationTest; SamAssertionUtilsUnitTest; SamFormatConverterIntegrationTest; SortReadFileSparkIntegrationTest; SortSamIntegrationTest; SplitNCigarReadsIntegrationTest; ClipReadsIntegrationTest",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2395:65,validat,validation,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2395,1,['validat'],['validation']
Security,"SamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:129840, bin field of BAM record does not equal value compu",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:2008,Validat,ValidateSamFile,2008,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,SampleDBBuilder validationStrictness argument doesn't do anything,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3949:16,validat,validationStrictness,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3949,1,['validat'],['validationStrictness']
Security,"Say hello to Azure SQL Database from `sqlcmd`, Python and Java (via Ammonite) running in a Cromwell on Azure deployment. Since the Azure Batch VMs spun up by Cromwell on Azure appear to have no identity associated with them the workflow currently takes a database access token as a parameter which it passes to the three tasks.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8220:264,access,access,264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8220,1,['access'],['access']
Security,"ScoreVariantAnnotations:. Scores variant calls in a VCF file based on site-level annotations using a previously trained model. TODOs:. - [x] Integration tests. Exact-match tests for (non-exhaustive) configurations given by the Cartesian product of the following options:; * Java Bayesian Gaussian Mixture Model (BGMM) backend vs. python sklearn IsolationForest backend; (BGMM tests to be added once PR for the backend goes in.); * non-allele-specific vs. allele-specific; * SNP-only vs. SNP+INDEL (for both of these options, we use trained models that contain both SNP and INDEL scorers as input) ; - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs.; - [x] Parameter/mode validation.; - [x] Double check or add behavior for handling previously filtered input, clearing present filters, etc. Future work:. - [ ] The `score_samples` method of the sklearn IsolationForest is single-threaded. See (possibly stalled) PR at https://github.com/scikit-learn/scikit-learn/pull/14001 and some workarounds using e.g. `multiprocessing` ibid.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948563:686,validat,validation,686,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948563,2,['validat'],['validation']
Security,"See #2488 for context. In short, the internal pathways for authentication changed, breaking some tests. We're pushing forward anyways but need to remember to re-enable the code & tests once we can (should be the next release).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2496:59,authenticat,authentication,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2496,1,['authenticat'],['authentication']
Security,"See Issue #7622 for more details. In addition to unit tests, here is how I validated:. ```; ##; # Split the WGS list; ##; rm -rf test_split. ./gatk --java-options ""-Xmx4g $DEBUG"" \; WeightedSplitIntervals \; --scatter-count 100 \; --weight-bed-file gvs_vet_weights_1kb.bed \; -R gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta \; --dont-mix-contigs true \; -L wgs_calling_regions.hg38.noCentromeres.noTelomeres.interval_list \; --output test_split. ##; # merge all the intervals lists back into one; ##; IL=""""; for f in test_split/*-scattered.interval_list; do; IL=""${IL} -I $f ""; done; ./gatk IntervalListTools --ACTION UNION $IL -O test_split/merged.interval_list. #; # compare it to the original; ##; ./gatk CompareIntervalLists \; -R gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta \; -L wgs_calling_regions.hg38.noCentromeres.noTelomeres.interval_list \; -L2 test_split/merged.interval_list. ##; # A visual check to see that the ordering is the same, and that the only splits; # are across file boundaries; ##; cat test_split/*-scattered.interval_list | grep -v ""@"" | cut -f1-3 > test_split/combined.txt; cat wgs_calling_regions.hg38.noCentromeres.noTelomeres.interval_list | grep -v ""@"" | cut -f1-3 > test_split/orig.txt; diff -y test_split/orig.txt test_split/combined.txt; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7643:75,validat,validated,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7643,1,['validat'],['validated']
Security,"See https://github.com/broadinstitute/gatk/issues/4125 (which I suspect is due to the conda env not being established). @mbabadi @samuelklee @vdauwera Unfortunately we didn't add anything to the doc for these tools saying that they require the conda env. Some suggestions:. - Ideally, we could do something along the lines of what @droazen suggested in #4125, where the script executor validates that the environment is established. In a previous discussion though, @vdauwera expressed some concerns around requiring miniconda (as opposed to enumerating the individual requirements and allowing users to install these themselves - which is harder to communicate, and even harder to validate). We should discuss this further.; - Either way, the tools themselves could catch PythonScriptExecutorException and re-throw it with a helpful message saying the conda env is required.; - Update the tool summaries saying that the conda env is required.; - Update the tool javadoc/gatkdoc with more detail.; - Other ? Blog entry/forum post ?. This shouldn't be an issue for Docker users. We did discover a last minute issue that will affect OSX users though, which has a couple of workarounds described in this [PR](https://github.com/broadinstitute/gatk/pull/4087).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4127:386,validat,validates,386,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4127,2,['validat'],"['validate', 'validates']"
Security,Seeing a test failure due to errors with the service account access token. Possibly related to updating the NIO dependency. We've seen this multiple times today. ; ```; Gradle suite > Gradle test > org.broadinstitute.hellbender.utils.nio.GcsNioIntegrationTest.openPublicFile FAILED; com.google.cloud.storage.StorageException: Error getting access token for service account: ; at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:203); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:349); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:186); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:183); at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:183); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:197); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:194); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.<init>(CloudStorageReadChannel.java:72); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:62); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:268); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:229); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newInputStream(CloudStorageFileSystemProvider.java:348); at java.nio.file.Files.newInputStream(Files.java:152); at org.broadinstitute.hellbender.utils.nio.GcsNioIntegrationTest.openPublicFile(GcsNioIntegra,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2514:61,access,access,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2514,2,['access'],['access']
Security,"Seems a shame to have every Spark application depend on GCS code, just to have access to HDFS. Maybe we could bust this into two pieces: separate out a spark.utils.HDFSUtils that knows nothing about GCS but can handle ""file:"" and ""hdfs:"" URLs, leaving the original gcs.BucketUtils that handles only ""gcs:"" URLs, and delegates non-gcs URLs to HDFSUtils.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1887:79,access,access,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1887,1,['access'],['access']
Security,"Sequence dictionary is not enough -- we actually need the reference because GenomicsDB uses that to fill in the reference base in some cases. For this reason, the reference is a required argument when reading from GenomicsDB, but as this issue outlines we probably should go one step further and validate that the intervals being queried are in the reference. We can add this to GenomicsDB but it's probably better to have a check done in GATK so that we fail fast. It is interesting though that the results seem valid...presumably having the reference base as 'N' in some cases doesn't affect it?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7751#issuecomment-1095222041:296,validat,validate,296,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7751#issuecomment-1095222041,1,['validat'],['validate']
Security,Serious Security Vulnerabilities in GATK,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215:8,Secur,Security,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215,1,['Secur'],['Security']
Security,"Several of our HGSV snapshot samples are failing with current master due to an exception in `CpxVariantInterpreter`. For example, sample HG00732 fails with this stacktrace:. ```; 18/04/11 14:30:28 WARN org.apache.spark.scheduler.TaskSetManager: Lost task 2.0 in stage 42.0 (TID 60116, cwhelan-hg00732-cram-samtools-bam-feature-w-5.c.broad-dsde-methods.internal, executor 27): java.lang.IllegalArgumentException: Invalid interval. Contig:chr19 start:33757506 end:33757488; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.spark.sv.discovery.alignment.ContigAlignmentsModifier.computeNewRefSpanAndCigar(ContigAlignmentsModifier.java:159); at org.broadinstitute.hellbender.tools.spark.sv.discovery.alignment.ContigAlignmentsModifier.clipAlignmentInterval(ContigAlignmentsModifier.java:42); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantInterpreter.removeOverlap(CpxVariantInterpreter.java:179); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantInterpreter.deOverlapAlignments(CpxVariantInterpreter.java:122); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantInterpreter.furtherPreprocess(CpxVariantInterpreter.java:79); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantInterpreter.lambda$inferCpxVariant$bdd686a3$1(CpxVariantInterpreter.java:51); at org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1.apply(JavaPairRDD.scala:1040); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.jav",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4648:517,validat,validateArg,517,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4648,2,['validat'],"['validateArg', 'validatePositions']"
Security,Should be validated to the point where production would be willing to use it.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1640:10,validat,validated,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1640,1,['validat'],['validated']
Security,"Similar to how `GATKTool` requires a reference when there's at least one cram input, we need to do the same thing in spark. Right place to do this is probably in `GATKSparkTool.initializeReads()` or `GATKSparkTool.validateToolInputs()`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1181:214,validat,validateToolInputs,214,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1181,1,['validat'],['validateToolInputs']
Security,"SimpleInterval has a constructor that parses an interval String, but without access to a SequenceDictionary its not possible to correctly interpret intervals with contig names such as those used in hg38. It looks like the only non-test consumer of this method is TableCodec. For example:. - `HLA-A*01:01:01:01` is interpreted as `HLA-A*01:01:01:1-1`, but `HLA-A*01:01:01` doesn't exist; - `HLA-A*01:01:01:02N` its interpreted as position `02N` on contig `HLA-A*01:01:01`, which fails to parse, and the contig doesn't exist. GATK command line intervals resolve these by consulting the sequence dictionary. For hg38 at least, there can be no ambiguity and there is always only one correct interpretation. Its possible to construct a legal sequence dictionary that has ambiguities though.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4597:77,access,access,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4597,1,['access'],['access']
Security,"Since GenomicsDB can be used with `CreateSomaticPanelOfNormals`, allow for the GenomicsDBArgumentCollection to be exposed with this tool.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6746:114,expose,exposed,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6746,1,['expose'],['exposed']
Security,"Since NIO reportedly now works from Spark clients, this bit of; authentication is unnecessary. Removing it greatly simplifies; BucketUtils, and also stops users having to worry about where; to get the AuthHolder from. This work is part of #2402",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2565:64,authenticat,authentication,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2565,1,['authenticat'],['authentication']
Security,"Since https://github.com/broadinstitute/gatk/pull/4711, we use a deletion hook to delete the temp directories created by the R executor, but the R executor also deletes these itself. https://github.com/samtools/htsjdk/pull/1315 seems to have exposed this by propagating the exception from the second attempt. See https://gatkforums.broadinstitute.org/gatk/discussion/comment/46733#Comment_46733.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5893:242,expose,exposed,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5893,1,['expose'],['exposed']
Security,"Since it's realigning the bam, it shouldn't validate that the file to be aligned already matches the header. This makes it impossible to realign to a different reference or align a headerless file. . This can currently be worked around using `--disableSequenceDictionaryValidation`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2121:44,validat,validate,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2121,1,['validat'],['validate']
Security,"Since the migration from travis-ci.org to travis-ci.com I've been unable to access our coveralls page. The coverage badge on the repo is broken as well. Others seem to be able to access the https://coveralls.io/r/broadinstitute/hellbender page, but I get an ""Access Denied"". It's still commenting on our posts, but it's not very useful without the actual coverage display. . I know @droazen can still see the page, @akiezun, can you? . I filed an issue with coveralls here: https://github.com/lemurheavy/coveralls-public/issues/497 but haven't heard anything back from them.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/381:76,access,access,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/381,3,"['Access', 'access']","['Access', 'access']"
Security,"Since we are already injecting Arguments including FeatureInputs and referenceDictionaries... why we need to pass ReferenceContext or FeatureContext in the apply method? . If a tool requires some features, it could access it directly from the feature-input that is already declaring as a member field (of course, once the query api is provided there)... . What is the Optional<FeatureContext> giving us that could not be perfectly supported by an API-enriched FeatureInput object?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/242:21,inject,injecting,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/242,2,"['access', 'inject']","['access', 'injecting']"
Security,"Small PR containing fixes for various issues:; - Move CompareSAMs to picard package (fixes https://github.com/broadinstitute/hellbender/issues/139); - Move most of `CompareSAMs.doWork()` into a separate public method, to be used by external unit tests; - Use HTSJDK's SamFileValidator in assorted unit tests, rather than ValidateSamFile (which is just a CLP wrapper); - Insert `--VERBOSITY ERROR` into CommandLineProgramTest, which suppresses most logging output for CLPs that use HTSJDK-based logging (fixes https://github.com/broadinstitute/hellbender/issues/134)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/171:321,Validat,ValidateSamFile,321,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/171,1,['Validat'],['ValidateSamFile']
Security,"So this seems to only happen when trying to access a bucket from a job on dataproc. For example, the following throws the error:. ./gatk-launch PathSeqFilterSpark -I gs://bucket/in.bam -O gs://bucket/out.bam -- --sparkRunner GCS --cluster my-cluster. but the following does not:; ./gatk-launch PathSeqFilterSpark -I hdfs://bams/in.bam -O hdfs://bams/out.bam -- --sparkRunner GCS --cluster my-cluster. This happens even if I launch the cluster ""gcloud dataproc clusters create ... --scope cloud-platform"", which is supposed to grant full storage permissions. I believe this is equivalent to checking the ""Allow API access to all Google Cloud Services"" box if you launch a cluster through the web console. . Also explicitly adding the service account as a ""storage legacy bucket owner"" does not seem to help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-331002437:44,access,access,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-331002437,2,['access'],['access']
Security,"So, I have a question that I believe some discussions are necessary, regarding read filtering. The background that triggered this question is when I tried `PrintReads(Spark)` to filter out reads with `ReadFilterLibrary.GoodCigarReadFilter`. As it turns out, that one of the read (long read) have several alignment records, (unfortunately) the primary (i.e. 256 and 2048 flags not turned on) record is the one having a problematic CIGAR, hence filtered out. The alignment records left are&mdash;as expected&mdash;all records with either `not-primary` or `supplementary` flag turned on. . Should one consider such bam valid for analysis?; And more generally, should the collection of alignments after read filtering be checked with `ValidateBam` (assuming the tool checks for that error) as part of best practices?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6433:731,Validat,ValidateBam,731,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6433,1,['Validat'],['ValidateBam']
Security,"Somatic WDLs have them hidden, gCNV WDLs (in sl_gcnv_ploidy_cli) have them exposed. (EDIT: Actually, gCNV WDLs only have them exposed for gCNV-specific tasks. Common tasks such as PreprocessIntervals are also not exposed.). The former makes for cleaner `wdltool inputs` JSONs that contain only the bare minimum inputs, but it is unclear whether FC will allow for task-level parameters to be set. However, this can still be done via JSON, as long as the task is at the main workflow level (although this may change with a C30 hotfix?). The latter makes for messier JSONs and requires more upkeep to make sure everything stays exposed, but should work in FC (unless the workflow is used as a subworkflow?)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3980:75,expose,exposed,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3980,4,['expose'],['exposed']
Security,"Somatic WDLs should be up to date (they're passing on Travis, at least) and ready for running validations in the sl_wgs_segmentation branch @LeeTL1220.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-328536706:94,validat,validations,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-328536706,1,['validat'],['validations']
Security,"Some additional information I can add about this is that a potential solution to this problem is to remove altenate alleles and force the sites into being biallelic but this causes problems in other tools, like FastaAlternateReferenceMaker, so it's not a viable solution. . Since AD is 0-indexed and GT starts at 0, GT really seems like the best way to access the elements of the AD array. Perhaps a new feature could be added that automatically finds the called allele, like getAD().getCalledGT if giving the user access to GT is problematic for some reason. This would require getAD to accept something other than a pure number though and to my knowledge anything other than eg: getAD().1 or getAD().2 or 0, causes errors.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7448#issuecomment-909126111:353,access,access,353,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7448#issuecomment-909126111,2,['access'],['access']
Security,"Some comments/questions for the review:; - I'll add a separate ticket to rewrite the integration tests, all of which pass and most of which are disabled since they require access to large files on the broad file system. In the meantime I need to add a couple of small tests to get the coverage back up, and would like to get the CR process started.; - I ported a bunch of support files but need feedback on whether they're in the right location.; - Somewhere I saw something that said GATK no longer supports .ped files ? If not, what should the replacement be in the tests require pedigree input?; - Is it a requirement to support Ploidy > 2 ? The current GATK tool, and thus the HB tool, do not; - I did not port the WalkerTestSpec.disableShadowVCF? Is that needed in Hellbender ?; - Are there other headers I should be applying to the output variant file ?. Command Line Arguments:; - I didn't port the GATK command line argument ""-no_cmd_line_in_header"". Should I ? And if not, should the command line args automatically be propagated to the output vcf file ? I didn't see GATK do this anywhere.; - There was one test that used --variant:dbsnp on the command line but I couldn't find the code that processed that in GATK, not sure what the means on the command line.; - I replaced ""-U LENIENT_VCF_PROCESSING"" with ""--lenient"" (testFileWithoutInfoLineInHeaderWithOverride needs this to pass).; - I replaced ""-L"" with --interval since HB seems to use -L for ""lane"" ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/792#issuecomment-128798027:172,access,access,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/792#issuecomment-128798027,1,['access'],['access']
Security,"Some filters are implemented in the ModelSegments CreatePoN code (since these filters were directly ported from GATK CNV). Other filters were implemented as external python scripts by @mbabadi for GPC2 validation. We should extract and productionize if possible. Ideally, the tool would take several coverage files (collected over identical bins) and filtering parameters as input, and output a filtered list of bins. Downstream tools would subset the original coverage files to these bins accordingly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2992#issuecomment-391682843:202,validat,validation,202,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2992#issuecomment-391682843,1,['validat'],['validation']
Security,"Some of the GTF files from ENSEMBL do not follow the format that the current `EnsemblGtfCodec` expects. This will cause Funcotator to fail on those files. A complete description (courtesy of ENSEMBL themselves) of their GTF format is as follows (and it differs from what is expected in the code):. ```; #### README ####. --------; GTF DUMP; --------. This directory includes a summary of the gene annotation information ; and GTF format. Ensembl provides an automatic gene annotation for Aedes aegypti.; For some species ( human, mouse, zebrafish, pig and rat), the; annotation provided through Ensembl also includes manual annotation; from HAVANA.; In the case of human and mouse, the GTF files found here are equivalent; to the GENCODE gene set. GTF provides access to all annotated transcripts which make; up an Ensembl gene set. Annotation is based on alignments of; biological evidence (eg. proteins, cDNAs, RNA-seq) to a genome assembly.; The annotation dumped here is transcribed and translated from the ; genome assembly and is not the original input sequence data that ; we used for alignment. Therefore, the sequences provided by Ensembl ; may differ from the original input sequence data where the genome ; assembly is different to the aligned sequence. . Additionally, we provide a GTF file containing the predicted gene set; as generated by Genscan and other abinitio prediction tools.; This file is identified by the abinitio extension. -----------; FILE NAMES; ------------; The files are consistently named following this pattern:; <species>.<assembly>.<version>.gtf.gz. <species>: The systematic name of the species.; <assembly>: The assembly build name.; <version>: The version of Ensembl from which the data was exported.; gtf : All files in these directories are in GTF format; gz : All files are compacted with GNU Zip for storage efficiency. e.g.; Homo_sapiens.GRCh38.81.gtf.gz. For the predicted gene set, an additional abinitio flag is added to the name file.; <species>.<assem",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6488:761,access,access,761,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6488,1,['access'],['access']
Security,"Some tools have had usage examples ported from GATK3 that don't work in GATK4. We should fix ; these. . As well as fixing errors, it would be good to change the javadoc so it references parameters by the constant values instead of hardcoding them. (use `{@value StandardArgumentDefinitions#SOME_NAME}` ). These occur in at least the following tools, (found by `find in path -T`):; - [ ] ValidateVariants; - [ ] VariantFiltration; - [ ] AnalyzeCovariates; - [ ] BaseRecalibrator; - [ ] LeftAlignIndels",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1632:387,Validat,ValidateVariants,387,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1632,1,['Validat'],['ValidateVariants']
Security,"Some tools need to dynamically resize the reference context window based upon other; input. This commit exposes a setWindow() method to allow tools to do this. -To change the reference context size, tools should invoke setWindow() on the; ReferenceContext provided by the engine before invoking getBases()/getBasesIterator(). -Hopefully eliminates the need for tools to create their own reference readers. -ReferenceContext still caches previous query results, but cache gets invalidated; every time the window size changes. Resolves #131",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/136:104,expose,exposes,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/136,1,['expose'],['exposes']
Security,"Sorry @cmnbroad, I misunderstood your comment before - what I've got is that it is ok to have beta/experimental for this, but it's obviosly not what you said, so my fault for not reading carefully. In that case, I would like to have a proposal for how to proceed here:. * I will implement the port for the tools in two independent PRs - just direct translation into the new framework, documentation and kebab-case argument style.; * The port for `RealignerTargetCreator` will be similar to this one; * The port for `IndelRealigner` would not have support for n-way output, although it will be fully functional in other ways. The n-way option can be ported in the future as an extra feature if necessary (maybe the communications team can weight in, and tell if it is really a needed feature); * For the first test, which will be removed before merging, I will use the data from the tutorial. This will be the validation for the port before test data valid for the repository is provided; * For the final tests, I will draft the class with the tests from GAKT3 without the data and disabled, waiting for @sooheelee for meaningful tests (or other people from your team). The main idea is to have two PRs with the port validated with the tutorial data, and add other tests similar to the GATK3's ones for extra validation and/or covering missing codepaths using @sooheelee or ported GATK3 data. Does it makes sense, @cmnbroad and @sooheelee?. @sooheelee - I think that the 1000G data can be a good validation if chromosomes 20/21 have realigned reads without a pair mapping on other chromosomes. In that case, some of that reads can be extracted and reset to the state previous to realignment to validate the new tool.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371728774:909,validat,validation,909,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371728774,5,['validat'],"['validate', 'validated', 'validation']"
Security,"Sorry, it's difficult for me to spot git notifications in my email. . > Maybe @bshifaw can chime in? Are the featured workspaces covered by tests elsewhere? What is the current SOP for taking workflows from this repo, turning them into featured workspaces, and populating their configurations?. Example JSONs with input test data are usually introduced in the gatk-workflows git repos and carried over to the featured workspaces. That isn't to say they are not welcomed from the gatk repo. > @bshifaw related to what Sam was saying - we also have a few standard resources needed to run the workflows that we would like to share with users. What is the standard procedure for doing so? Ideally they would be bundled with featured workspaces, but also accessible from outside of Terra. Workflow resources files that are not already in [broad-references](https://console.cloud.google.com/storage/browser/broad-references) would be saved in the [gatk-best-practices](https://console.cloud.google.com/storage/browser/gatk-best-practices) bucket. In the past i've separated the resources files per workflow directory (e.g. pathseq, cnn-hg38) but you can organize them a different way if the resources files would be shared by other workflows (e.g. somatic-hg38, somatic-b37).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6017#issuecomment-507703719:750,access,accessible,750,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6017#issuecomment-507703719,1,['access'],['accessible']
Security,Spark large scale validation: allow tests to be run in push-button fashion using a script or similar,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/695:18,validat,validation,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/695,1,['validat'],['validation']
Security,Spark large scale validation: requirements gathering and design,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1167:18,validat,validation,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1167,1,['validat'],['validation']
Security,"Spark large scale validation: tools to ingest GATK3 outputs, and prepare them as GATK4 inputs",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1169:18,validat,validation,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1169,1,['validat'],['validation']
Security,Spark large scale validation: tools to intelligently compare MarkDuplicates results,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1168:18,validat,validation,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1168,1,['validat'],['validation']
Security,"Spark tests in Jenkins are failing nightly. They've been failing since August 29th. This command:. ```; gcloud auth activate-service-account gatktestjenkins@broad-gatk-test.iam.gserviceaccount.com --key-file /scratch/testservice.json --project broad-gatk-test; ./gatk-launch MarkDuplicatesSpark \; --shardedOutput true \; -O /scratch/tmp.md.bam \; --numReducers 0 \; --apiKey $APIKEY \; -I $bamIn \; -- \; --sparkRunner GCS \; --driver-memory 8G \; --cluster $CLUSTERNAME \; --executor-cores 3 \; --executor-memory 25G \; --conf spark.yarn.executor.memoryOverhead=2500""; ```. Fails with:. ```; Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/spark/Logging; at java.lang.ClassLoader.defineClass1(Native Method); at java.lang.ClassLoader.defineClass(ClassLoader.java:763); at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); at java.net.URLClassLoader.defineClass(URLClassLoader.java:467); at java.net.URLClassLoader.access$100(URLClassLoader.java:73); at java.net.URLClassLoader$1.run(URLClassLoader.java:368); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at org.apache.spark.util.ChildFirstURLClassLoader.loadClass(MutableURLClassLoader.scala:52); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.bdgenomics.adam.serialization.ADAMKryoRegistrator.registerClasses(ADAMKryoRegistrator.scala:85); at org.broadinstitute.hellbender.engine.spark.GATKRegistrator.registerClasses(GATKRegistrator.java:74); at org.apache.spark.serializer.KryoSerializer$$anonfun$newKryo$6.apply(KryoSerializer.scala:125); at org.apache.spark.serializer.KryoSerializer$$anonfun$newKryo$6.apply(KryoSerializer.scala:125); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.sc",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2183:801,secur,security,801,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2183,4,"['Secur', 'access', 'secur']","['SecureClassLoader', 'access', 'security']"
Security,Spark version of ValidateSamFile,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5642:17,Validat,ValidateSamFile,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5642,1,['Validat'],['ValidateSamFile']
Security,"SparkGenomeReadCounts has some code to get rid of some of the non-autosomal chromosomes:. private static final Set<String> NONAUTOSOMALCONTIGS = new HashSet<>(Arrays.asList(""X"", ""Y"", ""MT"", ""M"", ""x"", ""y"",; ""m"", ""chrX"", ""chrY"", ""chrMT"", ""chrM"", ""chrm""));. protected static final String DROP_NON_AUTOSOMES_SHORT_NAME = ""keepxy"";; protected static final String DROP_NON_AUTOSOMES_LONG_NAME = ""keepXYMT"";. @Argument(doc = ""Keep X, Y, GL*, NC_*, and MT regions. If this option is not specified, these regions will be dropped, regardless of intervals specified. Use -L (or -XL) and enable this option for exact specification of intervals. This option may be removed in the future."",; fullName = DROP_NON_AUTOSOMES_LONG_NAME,; shortName = DROP_NON_AUTOSOMES_SHORT_NAME,; optional = true; ); protected boolean keepNonAutosomes = false;. This is a bit hacky, but we could expand the list to account for GRCh38 non-autosomes. (Also note that the choice of the short name for the parameter is not great...we should fix that.) @asmirnov239 the final version of your new tool should be able to handle this sort of thing more elegantly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3357#issuecomment-317808987:149,Hash,HashSet,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3357#issuecomment-317808987,1,['Hash'],['HashSet']
Security,SparkSubmit.scala:210); 	at org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:124); 	at org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala); Caused by: java.io.IOException: Error reading null at position 0; 	at com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream.openStream(SeekableGCSStream.java:126); 	at com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream.seek(SeekableGCSStream.java:103); 	at com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream.<init>(SeekableGCSStream.java:59); 	at com.google.cloud.genomics.dataflow.readers.bam.BAMIO.openBAMFile(BAMIO.java:67); 	at com.google.cloud.genomics.dataflow.readers.bam.BAMIO.openBAM(BAMIO.java:51); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:178); 	... 20 more; Caused by: com.google.api.client.googleapis.json.GoogleJsonResponseException: 401 Unauthorized; Anonymous users does not have storage.objects.get access to object mw-pathseq-test/hs37d5cs.reads.sorted.bam.; 	at com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:146); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1056); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929:9835,access,access,9835,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929,1,['access'],['access']
Security,Spawn of VS-1214 which required the ability to run with a wheel. Hopefully we never need to use this but now we would have the ability if we ever need it. Full integration run [in progress](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/6d67fda8-1237-4cd8-bf49-fe582ae7fc13). Runs requiring PMI ops access exercising this new wheel functionality with a Delta-age 0.2.98 wheel:; - [Delta](https://app.terra.bio/#workspaces/allofus-drc-wgs-dev/GVS%20AoU%20Echo%20RD/job_history/7215bdc8-f951-4b84-b9bf-3aaa80eae0a1); - [Delcho](https://app.terra.bio/#workspaces/allofus-drc-wgs-dev/GVS%20AoU%20Echo%20RD/job_history/a336972e-d9f4-4a74-92fe-6ed94d2b5fff),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8692:324,access,access,324,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8692,1,['access'],['access']
Security,"Spin up a public jenkins server for long-running validation tests (and other tests that can't or shouldn't run in travis), or switch from travis to a more flexible CI provider",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1400:49,validat,validation,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1400,1,['validat'],['validation']
Security,"Stacktrace is below. It looks like the default port (8020) is not being picked up.; ```; org.apache.spark.SparkException: Job aborted due to stage failure: Task 8 in stage 5.0 failed 4 times, most recent failure: Lost task 8.3 in stage 5.0 (TID 82, tw-cluster-2-w-4.c.broad-gatk-collab.internal): java.lang.IllegalArgumentEx; ception: Wrong FS: hdfs://tw-cluster-2-m:-1/user/tom/small_spark_eval/dbsnp_138.b37.20.21.vcf, expected: hdfs://tw-cluster-2-m; at org.apache.hadoop.fs.FileSystem.checkPath(FileSystem.java:648); at org.apache.hadoop.hdfs.DistributedFileSystem.getPathName(DistributedFileSystem.java:194); at org.apache.hadoop.hdfs.DistributedFileSystem.access$000(DistributedFileSystem.java:106); at org.apache.hadoop.hdfs.DistributedFileSystem$22.doCall(DistributedFileSystem.java:1305); at org.apache.hadoop.hdfs.DistributedFileSystem$22.doCall(DistributedFileSystem.java:1301); at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81); at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:1301); at org.apache.hadoop.fs.FileSystem.exists(FileSystem.java:1426); at hdfs.jsr203.HadoopFileSystem.checkAccess(HadoopFileSystem.java:937); at hdfs.jsr203.HadoopFileSystemProvider.checkAccess(HadoopFileSystemProvider.java:75); at java.nio.file.Files.exists(Files.java:2385); at org.broadinstitute.hellbender.utils.io.IOUtils.assertFileIsReadable(IOUtils.java:551); at org.broadinstitute.hellbender.engine.FeatureDataSource.getFeatureReader(FeatureDataSource.java:292); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:244); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:218); at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:202); at org.broadinstitute.hellbender.engine.spark.KnownSitesCache.loadFromFeatureDataSource(KnownSitesCache.java:43); ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3468:662,access,access,662,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3468,1,['access'],['access']
Security,Still got to test my Rc vs 923 add validation branch on the integration test now that it's fixed!,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8592:35,validat,validation,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8592,1,['validat'],['validation']
Security,Stream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 15 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInput,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:8202,secur,security,8202,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,Stream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 50 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInput,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6496,secur,security,6496,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,Stream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 58 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:209); 	at java.net.SocketInput,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9984,secur,security,9984,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"Submitting workflow; [2020-07-14 05:09:30,55] [info] Unspecified type (Unspecified version) workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 submitted; [2020-07-14 05:09:30,66] [info] SingleWorkflowRunnerActor: Workflow submitted 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,67] [info] 1 new workflows fetched by cromid-ca5c695: 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,68] [info] WorkflowManagerActor Starting workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] WorkflowManagerActor Successfully started WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] Retrieved 1 workflows from the WorkflowStoreActor; [2020-07-14 05:09:30,72] [info] WorkflowStoreHeartbeatWriteActor configured to flush with batch size 10000 and process rate 2 minutes.; [2020-07-14 05:09:30,83] [info] MaterializeWorkflowDescriptorActor [968be82c]: Parsing workflow as WDL 1.0; [2020-07-14 05:09:31,60] [info] MaterializeWorkflowDescriptorActor [968be82c]: Call-to-Backend assignments: ValidateBamsWf.ValidateBAM -> Local; [2020-07-14 05:09:31,82] [warn] Local [968be82c]: Key/s [memory, disks] is/are not supported by backend. Unsupported attributes will not be part of job executions.; [2020-07-14 05:09:35,38] [info] Not triggering log of token queue status. Effective log interval = None; [2020-07-14 05:09:37,15] [info] WorkflowExecutionActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 [968be82c]: Starting ValidateBamsWf.ValidateBAM; [2020-07-14 05:09:37,39] [info] Assigned new job execution tokens to the following groups: 968be82c: 1; [2020-07-14 05:09:41,61] [warn] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Unrecognized runtime attribute keys: disks, memory; [2020-07-14 05:09:41,71] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: /gatk/gatk \; ValidateSamFile \; --INPUT /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-Val",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:3951,Validat,ValidateBamsWf,3951,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['Validat'],['ValidateBamsWf']
Security,Subset VDS during validation,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8727:18,validat,validation,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8727,1,['validat'],['validation']
Security,"Successful run on the quickstart with the new python validation; https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20cremer/job_history/475e425d-5be5-47a7-a2ed-ebbdcb3746d5. Successful run on the 3k callset with samples sets; https://app.terra.bio/#workspaces/allofus-drc-wgs-dev/NHGRI_AnVIL_3K%20Cremer/job_history/1db17d59-c221-4345-be15-7fed27358d6f. Sample set with 3202 samples; <img width=""435"" alt=""Screen Shot 2023-05-22 at 11 48 11 PM"" src=""https://github.com/broadinstitute/gatk/assets/6863459/de5683e3-b927-4fb3-bb06-ff4adc7b5435"">. <img width=""1078"" alt=""Screen Shot 2023-05-23 at 12 23 05 AM"" src=""https://github.com/broadinstitute/gatk/assets/6863459/976a382a-9953-42e7-a53a-0a7a4d15a9b8"">",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8325:53,validat,validation,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8325,1,['validat'],['validation']
Security,Support for GVCF validation with multiple contigs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6028:17,validat,validation,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6028,1,['validat'],['validation']
Security,"Suppose the reference haplotype is; TAAGC. . . . TAAGG. . . . and an alt haplotype (SNV at the last G shown) is; TAAGC. . . TAAG**C**. . . Suppose further that we have a read ending in the first TAAGC that has been hard-clipped (to fit the assembly region) to just a 5-base TAAGC stub. Pair-HMM is fully Bayesian and computes the total likelihood of *all* possible alignments of a read to each haplotype. This gives the alt haplotype a factor of 2 advantage because TAAGC matches it in two locations, so there are two perfectly matching alignments instead of one. In log 10 space this is log_10(2) = 0.301, which is greater than our 0.2 threshold for a likelihood to be considered informative. Therefore, by clipping the read and losing the information of its first 96 bases, we end up considering it informative for the wrong haplotype. This can lead to false positives. It *also* causes false negatives because sometimes a read stub from the normal sample get misaligned to the alt haplotype, triggering the normal artifact filter. It also causes problems in our bamout-based MC3 validation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5060:1082,validat,validation,1082,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5060,1,['validat'],['validation']
Security,"Sure, it's a fair point that we could write this genotype-compare operation as a standalone tool. It's convenient to make it work via VariantAnnotator so that we can do it concurrently with other annotation tasks, instead of needed two passes through the VCF. I primarily ask b/c this is a downgrade from GATK3, where the equivalent of FeatureContext was passed. . Would it be reasonable for the FeatureManager to somehow get exposed? In my example I am calling FeatureContext.getValues() without supplying an interval, but I certainly could (and maybe should). If one supplies a specific query interval, the Feautrecontext isnt doing much other than providing an abstraction between FeatureManager, and the boundaries set on Featurecontext (which i agree are tricky to figure out in some cases) dont really matter.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-754256795:426,expose,exposed,426,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-754256795,1,['expose'],['exposed']
Security,"TCGA SNP validation looks about the same on WES---perhaps a slight tradeoff of sensitivity for specificity at the 0.1% level, but nothing to write home about. WGS validations are still running due to the (intermittent?) NIO failures discussed elsewhere.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454570347:9,validat,validation,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454570347,2,['validat'],"['validation', 'validations']"
Security,Task.scala:96); 	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); 	at org.apache.spark.scheduler.Task.run(Task.scala:109); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); 18/10/17 19:23:59 ERROR Executor: Exception in task 518.0 in stage 0.0 (TID 518); java.io.FileNotFoundException: /home/data/WGS/F002/F002.sort.bam (Too many open files); 	at java.io.FileInputStream.open0(Native Method); 	at java.io.FileInputStream.open(FileInputStream.java:195); 	at java.io.FileInputStream.<init>(FileInputStream.java:138); 	at org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream.<init>(RawLocalFileSystem.java:106); 	at org.apache.hadoop.fs.RawLocalFileSystem.open(RawLocalFileSystem.java:202); 	at org.apache.hadoop.fs.ChecksumFileSystem.open(ChecksumFileSystem.java:349); 	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:769); 	at org.seqdoop.hadoop_bam.util.WrapSeekable.openPath(WrapSeekable.java:60); 	at org.seqdoop.hadoop_bam.BAMRecordReader.initialize(BAMRecordReader.java:147); 	at org.seqdoop.hadoop_bam.BAMInputFormat.createRecordReader(BAMInputFormat.java:222); 	at org.seqdoop.hadoop_bam.AnySAMInputFormat.createRecordReader(AnySAMInputFormat.java:190); 	at org.apache.spark.rdd.NewHadoopRDD$$anon$1.liftedTree1$1(NewHadoopRDD.scala:187); 	at org.apache.spark.rdd.NewHadoopRDD$$anon$1.<init>(NewHadoopRDD.scala:186); 	at org.apache.spark.rdd.NewHadoopRDD.compute(NewHadoopRDD.scala:141); 	at org.apache.spark.rdd.NewHadoopRDD.compute(NewHadoopRDD.scala:70); 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324); 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288); 	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoi,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5316:5299,Checksum,ChecksumFileSystem,5299,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316,1,['Checksum'],['ChecksumFileSystem']
Security,Test to validate that CRAM MD5 slice calculation matches samtools.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3430:8,validat,validate,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3430,1,['validat'],['validate']
Security,Test to verify that picard interval lists are handled properly by GATK tools. Validates the fix for https://github.com/broadinstitute/gatk/issues/3555.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3827:78,Validat,Validates,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3827,1,['Validat'],['Validates']
Security,"Testing updated branch with improved messaging.; ```; WMCF9-CB5:shlee$ ./gatk LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign_96branch.vcf.gz; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign_96branch.vcf.gz; 12:55:31.964 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 06, 2018 12:55:32 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:55:32.083 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 12:55:32.083 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-25-g0c6f06f-SNAPSHOT; 12:55:32.083 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:55:32.083 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:55:32.083 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:55:32.083 INFO LeftAlignAndTrimVariants - Start Date/Time: September 6",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326:1001,authenticat,authenticated,1001,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326,1,['authenticat'],['authenticated']
Security,Tests that need to access data in a GCS bucket (but not run an actual pipeline); need a PipelineOptions object containing our API key. This new method makes; it for them.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/742:19,access,access,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/742,1,['access'],['access']
Security,Tests to prove that we can access and query bams in GCS from ReadWalkers,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2407:27,access,access,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2407,1,['access'],['access']
Security,"Thank you @SHuang-Broad. The error was gone after I copied bwaindeximage file to lustre file system, which can be accessed by all worker nodes.; The new problem is: the program started but didn't give any informative message/progress (see log below). It was stopped (Ctl-C) after 16 hours. The sequence data is regular human exome, which could be mapped in 1-2 hours in our traditional pipeline. ```; ../gatk/gatk-launch BwaAndMarkDuplicatesPipelineSpark ; -I hdfs://ln16/user/myname/NA12878/wes/NA12878-NGv3-LAB1360-A.unaligned.bam ; -O hdfs://ln16/user/myname/gatk4test/BwaAndMarkDuplicatesPipelineSpark_out.bam ; -R hdfs://ln16/user/myname/genomes/Hsapiens/GRCh37/seq/GRCh37.2bit ; --bwamemIndexImage /TEST/hadoop/myname/GRCh37.fa.img ; --disableSequenceDictionaryValidation ; -- --sparkRunner SPARK ; --sparkMaster spark://ln16:7077 ; --conf spark.cores.max=720 ; --executor-cores 20 ; --executor-memory 50g ; --conf spark.driver.memory=50g; Using GATK jar /home/myname/gatk4/gatk/build/libs/gatk-package-4.alpha.2-1125-g27b5190-SNAPSHOT-spark.jar; Running:; /opt/spark-2.1.0-bin-hadoop2.7/bin/spark-submit --master spark://ln16:7077 --conf spark.driver.userClassPathFirst=true --conf spark.io.compression.codec=lzf --conf spark.driver.maxResultSize=0 --conf spark.executor.extraJavaOption; s=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -Dsnappy.disable=true --conf spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -Dsnappy.di$able=true --conf spark.kryoserializer.buffer.max=512m --conf spark.yarn.executor.memoryOverhead=600 --conf spark.cores.max=720 --executor-cores 20 --executor-memory 50g --conf spark.driver.memory=50g /home/myname/gatk4/gatk$build/libs/gatk",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-312229998:114,access,accessed,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-312229998,1,['access'],['accessed']
Security,"Thank you @kshakir. What I see there is that the code sets the default NIO option, and as part of this is creates a google cloud `StorageOptions` object. Sadly for us, when this object is created it determines which Google credentials to use, and if nothing was specified by the user it will send some network messages to try to figure out whether it's running on a Google Compute Engine machine. When we wrote the default-setting code we didn't realize that setting the number of retries was going to cause a network message to be sent, with the associated potential retries and delays. We can't change the way Google Compute Engine works, or how the Google authentication works either. Ideally we'd want some way to only search for credentials when we know NIO is going to be used. The point of these defaults is that they're used for anything that uses NIO, including third-party library code. We can't fully replicate this behavior in a different way from the outside. So I think the ""correct"" fix would be to go deep inside the Google NIO library and change it so that instead of providing a default configuration (that the user would have to put together, causing the problem you've seen), we can provide a *callback* that sets the configuration when the Google Cloud NIO provider is loaded. This is harder for future developers to wrap their heads around, but at least it would prevent this delay if NIO is not used. I'd like to think about this some more before doing something quite this drastic, though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3491#issuecomment-443837504:659,authenticat,authentication,659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3491#issuecomment-443837504,1,['authenticat'],['authentication']
Security,"Thank you @vruano for your diligent review. I've implemented logger classes to encapsulate the metrics classes. Unfortunately the metrics classes must remain public in order to write output using `MetricsUtils.saveMetrics()`, but at least the tools aren't using them directly. There are two logging class groups - one for Filter and one Score. For Filter, there is an interface `PSFilterLogger` that is implemented by a file-logging class `PSFilterFileLogger` and a dummy class `PSFilterEmptyLogger` that does nothing. There are analogous classes for Score, but there is no Empty logger because it's not actually necessary. This adds a lot of new classes (maybe you can think of a better way) but usage has been greatly simplified. As we discussed in person, I don't think there is a faster way to count the reads in Spark. If you wanted to count the reads as they pass through, you would have to use some kind of atomic type that would be slow. Also it may be impossible to account for cases when tasks fail and restart. @lbergelson @droazen In this PR, I wanted to use htsjdk's MetricsFile and MetricBase classes for writing metrics to a file. I notice that these classes are mostly used for picard-related things. Is this the preferred way to do things? They do force you to expose public variables and also use an upper-case naming convention. On the other hand, they are somewhat convenient.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-334308160:1278,expose,expose,1278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-334308160,2,['expose'],['expose']
Security,Thanks @droazen! What data are you using to test the 2D model? And can we have access to your verification method?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1230344708:79,access,access,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1230344708,1,['access'],['access']
Security,Thanks @jamesemery . The issue seems to be solved on my end. Sorry but this was my misunderstanding of the improvements made to the tool itself. . https://gatk.broadinstitute.org/hc/en-us/community/posts/1260803956870-SplitNCigarReads-does-not-seem-to-split-reads-properly-as-it-was-before-3-8-1-?page=1#community_comment_4402553149467. BTW the bam file created after splitting by 4.2.0.0 is still not validated thoroughly by ValidateSamFile. Split Bam file needs its new NM MD and UQ tags regenerated by picard. . So I am closing the issue.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7323#issuecomment-865338591:402,validat,validated,402,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7323#issuecomment-865338591,2,"['Validat', 'validat']","['ValidateSamFile', 'validated']"
Security,"Thanks @ldgauthier! I think this is what you're asking for:. ```; # gVCF without --max-mnp-distance; chr4 5743509 . C T,<NON_REF> 5888.77 . DP=135;ExcessHet=3.0103;MLEAC=2,0;MLEAF=1.00,0.00;RAW_MQandDP=486000,135 GT:AD:DP:GQ:PGT:PID:PL:PS:SB 1|1:0,135,0:135:99:0|1:5743509_C_T:5917,406,0,5917,406,5917:5743509:0,0,0,135; chr4 5743512 . T C,<NON_REF> 2745.77 . BaseQRankSum=-1.002;DP=131;ExcessHet=3.0103;MLEAC=1,0;MLEAF=0.500,0.00;MQRankSum=0.000;RAW_MQandDP=471600,131;ReadPosRankSum=2.613 GT:AD:DP:GQ:PGT:PID:PL:PS:SB 0|1:57,74,0:131:99:0|1:5743509_C_T:2774,0,2060,2945,2283,5228:5743509:0,57,0,74. # gVCF with --max-mnp-distance 5; chr4 5743509 . CTAT TTAC,TTAT,<NON_REF> 5485.73 . DP=136;ExcessHet=3.0103;MLEAC=1,1,0;MLEAF=0.500,0.500,0.00;RAW_MQandDP=489600,136 GT:AD:DP:GQ:PL:SB 1/2:0,74,56,0:130:99:5523,2213,2060,3016,0,2774,5388,2261,2994,5376:0,0,0,130; ```. I should also be able to share the BAM later today - I just need to sanitize it a little before sharing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5698#issuecomment-466160716:937,sanitiz,sanitize,937,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5698#issuecomment-466160716,1,['sanitiz'],['sanitize']
Security,"Thanks @vidprijatelj. I see the [sticky bit](https://www.redhat.com/sysadmin/suid-sgid-sticky-bit) being used for groups for the workspace - `# flags: -s-`. That, by itself, seems to be OK, that is I am not able to reproduce the issue. But it looks like std::vector is not able to resize - `Caused by: java.io.IOException: GenomicsDB JNI Error: vector::_M_default_append`. What are the permissions to your tmp directory? Does it also have the sticky bit set? Even if the workspace only requires read permissions, GenomicsDB and probably the underlying standard C++ runtime may require write access to tmp and the sticky bit may be affecting the execution. . Also, can you please confirm that the user creating the workspace and the user reading from the workspace are the same?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1476526522:591,access,access,591,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1476526522,1,['access'],['access']
Security,"Thanks JP! We do have an argument to control the number of simultaneous GCS readers in the tool in question. However, even setting it to a low value is triggering the throttling, since we're running about 10,000 ways parallel, and each job is accessing the same set of files. We can currently only control the number of simultaneous readers within each of the 10,000 individual jobs, not across all jobs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3072#issuecomment-307444524:243,access,accessing,243,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3072#issuecomment-307444524,1,['access'],['accessing']
Security,"Thanks a lot @davidbenjamin! One of the questions that I have is how to add a new read to the `ReadLikelihoods` for a new allele that is found while iterating. A very simple example will be:. ``` java; public static PerReadAlleleLikelihoodMap flatPerReadAlleleLikelihoodsFromPileup(final ReadPileup pileup, final Allele refAllele) {; final PerReadAlleleLikelihoodMap pralm = new PerReadAlleleLikelihoodMap();; final byte ref = refAllele.getBases()[0];; for (final PileupElement e : pileup) {; final Allele current;; if (e.isDeletion()) {; current = Allele.SPAN_DEL;; } else if (e.getBase() == ref) {; current = refAllele;; } else {; current = Allele.create(e.getBase());; }; pralm.add(e, current, DEFAULT_FAKE_LIKELIHOOD);; }; return pralm;; }; ```. The solution that I found after looking at the class was this one, that it's very complicated:. ``` java; public static ReadLikelihoods<Allele> flatPerReadAlleleLikelihoodsFromPileup(final ReadPileup pileup, final Allele refAllele, final SAMFileHeader header) {; final Set<Allele> alleleSet = new TreeSet<Allele>();; final Map<String, List<GATKRead>> reads = new HashMap<>();; final byte ref = refAllele.getBases()[0];; alleleSet.add(refAllele);; for (final PileupElement e : pileup) {; if (e.isDeletion()) {; alleleSet.add(Allele.SPAN_DEL);; } else if (e.getBase() == ref) {; alleleSet.add(refAllele);; } else {; alleleSet.add(Allele.create(e.getBase()));; }; final String sample = ReadUtils.getSampleName(e.getRead(), header);; List<GATKRead> list = reads.getOrDefault(sample, null);; if(list == null) {; list = new ArrayList<>();; reads.put(sample, list);; }; list.add(e.getRead());; }; final ReadLikelihoods<Allele> likelihoods = new ReadLikelihoods<>(new IndexedSampleList(reads.keySet()), new IndexedAlleleList<Allele>(alleleSet), reads);; for(final PileupElement e: pileup) {; final String sample = ReadUtils.getSampleName(e.getRead(), header);; final LikelihoodMatrix<Allele> l = likelihoods.sampleMatrix(likelihoods.indexOfSample(sample));; f",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-249930107:1113,Hash,HashMap,1113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-249930107,1,['Hash'],['HashMap']
Security,"Thanks a lot for looking into this @sooheelee - I understand the pain of making the small data for the tests, so I really appreciate your work there. I have almost prepare a PR for the new port of `RealignerTargetCreator` that will have TODOs for the test data prepared by you, and with some tests using files already in the repository (for the target-creator, I guess that the validation for getting the regions to realign would be enough, because thanks to that tests I realized of a small bug due to not including all the loci in the `LocusWalker`). On the other hand, I will still fight for the `--nWayOut` not blocking the inclusion of `IndelRealigner` in the first place. My reasons are the following:; ; 1. Looking a bit into the code of GATK3, there is a lot of complication to get the reader ID for each read. It will require to modify the `GATKRead` interface, the data source for reads, or find an *ad hoc* solution on `IndelRealignment` to set the procedence of the read. This requires going into the engine-level code, which in my experience is difficult to port from GATK3 and also slow on the reviewing/acceptance process.; 1. My idea for developing a new writer of general use as the n-way output (which can be used in other tools as well) is to factor out some code from `SplitReads` to have a custom `GATKReadWriter` for arbitrary splitting. i'm already using a similar solution on `ReadTools`, so backporting the code to GATK might be a solution. Nevertheless, this still requires that the `GATKRead` has somehow the identity store at the object level, which requires to address point 1.; 1. The use case of the tumor-normal pair can be resolved by an extra processing step (split by read group). I understand that it is quite convenient to add this argument, but I would suggest that until it can be develop.; 1. Last, bu quite important for me as a developer, I don't have time to spend looking at that engine-level features required to include that argument. I would definitely u",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373376231:378,validat,validation,378,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373376231,1,['validat'],['validation']
Security,"Thanks a lot, @ddrichel. Given that the current Mutect2 release is still broken on both tumor-normal and tumor-only WES data, and downgrade is not possible on production systems due to the log4j vulnerability: is there any path forward for users that care for both accuracy and security, @davidbenjamin and @droazen ?. I fear waiting for Mutect3 isn't an option since even when it is finished there won't be independent benchmarks available for it for quite a while. Also, I suspect (as any other software product) the new version will have bugs, too, until it has matured in production. Therefore I'd suggest that identifying, understanding and fixing the bug in the current Mutect2 release would be the wisest path forward - do you agree?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534464682:278,secur,security,278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534464682,1,['secur'],['security']
Security,"Thanks for adding this! Let me discuss further with @mwalker174 to understand the need and typical use cases (e.g., combining fixed-grid bins) to make sure we don't run into any gotchas downstream. I'll try to review by EOD, but in the meantime, you might want to address a few issues I see at first glance:. 1) Correct the name of the tool (PreprocessIntervals) in the commit message and description.; 2) Add descriptions of the new parameters to the tool Javadoc.; 3) Amend the corresponding WDL task and expose the new parameters in all relevant germline and somatic WDLs.; 4) We should be sure to update the relevant documentation for all germline and somatic WDLs, which emphasizes how PreprocessIntervals should be run differently for WES and WGS, if we plan on changing the default behavior of the tool in the future.; 5) Tests are failing due to a compilation warning about a redundant cast to int.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5701#issuecomment-465978387:507,expose,expose,507,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5701#issuecomment-465978387,1,['expose'],['expose']
Security,"Thanks for making this change! I might include more detail with the note (""Substantially improves results on FFPE samples""), for posterity---it's probably true, but we can't really say anything definitive with only N=1 and without the cross-validation procedure I mentioned on Slack. That is, the higher degree of denoising might just be an artifact of effectively removing more PCs with GC-bias correction (since I'm assuming the same number of PCs were explicitly removed in both cases), but it's possible that removing the optimal number of PCs without GC-bias correction could achieve a better result. Since our correction procedure is relatively naive, there may also be some dependence on bin size. However, I think it's probably not worth a detailed analysis, and that it's generally safe to enable correction by default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5966#issuecomment-496933928:241,validat,validation,241,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5966#issuecomment-496933928,1,['validat'],['validation']
Security,"Thanks for the additional info! To clarify, though, was any validation done on the GVCF outputs themselves to check concordance vs. GATK3? If not, can I suggest that we do such a validation? Being able to say that we have 856 validated runs of the GATK4 HC on exome data would greatly bolster the case for including it in the new exome pipeline.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-380785661:60,validat,validation,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-380785661,3,['validat'],"['validated', 'validation']"
Security,"Thanks for the clarification @magicDGS. What I have are 1000 Genomes Project BAMs, which were preprocessed by the 1000 Genomes Project. The BAMs are aligned to GRCh38 and have undergone indel realignment (GATK3), so they represent a state of preprocessing against which we can validate the new indel realignment. If some representation of indels in such a BAM is sufficient as a truthset, then I can make this VCF. These samples, being from the 1000 Genomes Project, are well-analyzed and their indels will be represented in dbSNP and gnomAD resources. Of course, the test data will have been re-mapped with BWA and be without any trace of indel realignment. We should probably get someone familiar with the test suite to weigh in on the scope of the validation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371519632:277,validat,validate,277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371519632,2,['validat'],"['validate', 'validation']"
Security,"Thanks for the heads up @lbergelson! I'm looking at this now; we'd added stricter validation of the strand argument in the `ReferenceRegion` constructor recently, so this should be a fairly straightforward fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356024413:82,validat,validation,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356024413,1,['validat'],['validation']
Security,"Thanks for the suggestion @fnothaft. Unfortunately, switching to Scala 2.11 didn't help as I still get a compile error due to the logging change in Spark 2:. ```; /Users/tom/workspace/gatk/src/main/java/org/broadinstitute/hellbender/utils/read/GATKReadToBDGAlignmentRecordConverter.java:38: error: cannot access Logging; return converter.convert(gatkRead.convertToSAMRecord(header), dict, readGroups);; ```. I get that with `org.bdgenomics.adam:adam-core_2.11:0.19.0` too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2073#issuecomment-241995596:305,access,access,305,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2073#issuecomment-241995596,1,['access'],['access']
Security,"Thanks for the suggestion @taytayp! We could also just go ahead and expose this in PlotDenoisedCopyRatios as well and only output a single plot there. I think it would be best to expose ylim parameters set to the current range by default (to preserve current behavior and so that comparison across samples remains easy), but perhaps we can consider a flag that plots the entire range. Perhaps we can also address things like #5748 at the same time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6391#issuecomment-576688903:68,expose,expose,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6391#issuecomment-576688903,2,['expose'],['expose']
Security,"Thanks for these suggestions, @sooheelee. Note that there's already an issue filed to add `@PG` tags at https://github.com/broadinstitute/gatk/issues/4117. As for the `@RG` tag, I was following the example of the SV team, which I saw introduced a custom RG ID (although this may only be used for tagging intermediate files---not sure?) Although not ideal, I think passing the sequence dictionary and sample name in this way allows us to reuse the relevant SAM header code and also prevents the possibility of users mixing up samples. (Recall that the old pipeline required the sample name to be passed in as a separate input to each tool and that no validation that each input came from the same sample was performed.). As for VCF output, we are also planning to add this to the ModelSegments pipeline (it is already in the gCNV pipeline). See https://github.com/broadinstitute/gatk/issues/4114. However, I think it makes sense for this to wait until the improved caller is in. I'll close this as a dupe for now, but we'll be able to reference your comments here from those issues in the future.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4481#issuecomment-369986160:650,validat,validation,650,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4481#issuecomment-369986160,1,['validat'],['validation']
Security,"Thanks for your response @droazen -- just tried it and it still does not work for me. I am able to access the bucket fine via gsutil -u {project} as expected. I wonder if this is some GCP issue because I am also unable to get Cromwell to pull down files from requester pays (via Terra, so this should be handled in theory), an issue that a colleague also has once I asked her to run this command on a different r/p bucket using her billing project and account. Also, for a different project and bucket the usual workflow I have to get Hail to read from r/p buckets seems to not work with this same error. Very confused. EDIT: https://support.terra.bio/hc/en-us/articles/4447388269851 seems to provide the most parsimonious explanation:; ```; It was determined that Google tweaked an error message causing Cromwell not to recognize buckets as requestor pays.; ```. Wonder if something similar is going on with GATK?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6179#issuecomment-1048028114:99,access,access,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6179#issuecomment-1048028114,1,['access'],['access']
Security,"Thanks very much for your analysis. Job 4 does create a lot of garbage, but that appears to be inevitable whenever you are dealing with a PairRDD: You have to use a Tuple2 to represent key and value rather than using a more memory-conservative custom data object. You end up with a gazillion tiny objects that survive only during the shuffle. Too bad they didn't base PairRDD on an interface like Map.Entry. Also too bad that you cannot force a shuffle on a (plain old, non-Pair) RDD. Why not just treat it as a key-only structure and allow repartitioning? I mention this not merely to whine, but also in the faint hope that you've developed some helpful workarounds. I don't think we have enough memory to persist the reads, but we can revisit that later. Job 5 *is* doing a lot of computation. It's turning each read into kmers and testing each of those kmers to see if they exist in a large hash table. I don't think there's much opportunity for further optimization -- I knew this would be a bottleneck and tried my best to make the code efficient. The skew in task size is definitely a problem, and I'll be looking for opportunities to address that issue. Thanks again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2458#issuecomment-292230002:894,hash,hash,894,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2458#issuecomment-292230002,1,['hash'],['hash']
Security,"Thanks, @gokalpcelik! That's unfortunate that the packages are no longer accessible. However, this old version of the environment was also somewhat problematic in that it included build strings, installed many packages using pip instead of conda, and was otherwise overly restrictive, see e.g. https://gatk.broadinstitute.org/hc/en-us/community/posts/360061666671-Broken-conda-env-create-n-gatk-f-gatkcondaenv-yml. I would suggest, in the following order:. 1) Users upgrade to more recent versions of GATK; 2) Users use the 4.1.0.0 Docker; 3) Users edit the 4.1.0.0 environment to be less restrictive. For example, using Ubuntu 20.04.2 + conda 23.10.0, I was able to build something that is probably sufficiently close to the 4.1.0.0 conda environment by making the following changes:. ``` <- certifi=2016.2.28=py36_0; < - openssl=1.0.2l=0; < - pip=9.0.1=py36_1; < - python=3.6.2=0; < - readline=6.2=2; < - setuptools=36.4.0=py36_1; < - sqlite=3.13.0=0; < - tk=8.5.18=0; < - wheel=0.29.0=py36_0; < - xz=5.2.3=0; < - zlib=1.2.11=0; ---; > - openssl=1.0.2l; > - pip=9.0.1; > - python=3.6.2; > - setuptools=36.5.0; > - wheel=0.29.0; > - xz=5.2.3; > - zlib=1.2.11 ; ```. There is some clobbering that happens with the pip installs, but nothing major. Note that I cannot guarantee that this environment exactly reproduces results generated with the Docker (and it's possible that there might be a more minimal fix), but it's perhaps a starting point for those users that cannot go with the other (highly preferred) options.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8504#issuecomment-1852138745:73,access,accessible,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8504#issuecomment-1852138745,1,['access'],['accessible']
Security,"Thanks, @vruano, but I think you'll have to give me access to the FC workspace and bucket. I've opened a branch sl_revert_glob that I think will fix the issue. I'll test it out on FC and let you know how it goes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630:52,access,access,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424415630,1,['access'],['access']
Security,"Thanks, JP!; Yes, you understood right. I did not change anything. It was only different days. The probability that the same bucket could have been accessed by multiple jobs/projects totally makes sense. I will try lowering the number of scattered tasks and see if it works.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-526274700:148,access,accessed,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-526274700,1,['access'],['accessed']
Security,"Thanks, we have access now. I'm pretty sure that sl_revert_glob will fix the error. I've rebased my dev branch sl_filter (which includes the filtering steps Jack mentioned in the BSV meeting today) onto sl_revert and am testing cohort mode on FC now. I'll try to test scattered-case mode as well later today if that succeeds. As @asmirnov239 pointed out to me, this revert leaves #4397 unresolved, so we should go back and clean up at some point. However, our priority now is to get a stable v1 of the SFARI evaluation on FC.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535:16,access,access,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5217#issuecomment-424436535,1,['access'],['access']
Security,"Thanx for feedback. I obviously don’t know much if anything about the underlying logic but; have had enough experience to look in unusual places. Have a good weekend. RDB. On Fri, Nov 1, 2019 at 4:24 PM JP Martin <notifications@github.com> wrote:. > @rdbremel <https://github.com/rdbremel> for ""mystery 1"" see issue #5447; > <https://github.com/broadinstitute/gatk/issues/5447>. This should be an; > innocuous warning that it can't initialize the Google Cloud Storage code; > and shouldn't cause a failure unless you try to access paths that start; > with ""gs://"". Going through the Cloud initialization steps described in the; > README should remove the warning (though again, this isn't required if you; > don't need to read files from the cloud).; >; > Mystery 2: For what it's worth, ""GC overhead limit exceeded"" indicates; > that the VM was spending too much time in GC. Running low on memory is a; > possible cause but generating too many small objects or being stuck in an; > infinite loop of allocation/deallocation are others. In the past these have; > been caused by inputs that were malformed in some way. This isn't the place; > for this discussion though, please file a separate issue since it's a; > separate bug.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/6182?email_source=notifications&email_token=ANCR2VHWQ6XDSUQ6KEGISFDQRSM7TA5CNFSM4I2MRFQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEC4GNZY#issuecomment-548955879>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ANCR2VEC5ARUEQRTEDGJ3TDQRSM7TANCNFSM4I2MRFQA>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548989454:524,access,access,524,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548989454,2,['access'],['access']
Security,"That should work for both my cases. It could be nice for SelectVariants to; be able to specify whether genotypes should be called or not too. Other; tools might want the sites-only option. On Mon, Mar 4, 2019 at 12:40 PM droazen <notifications@github.com> wrote:. > *@droazen* commented on this pull request.; > ------------------------------; >; > In; > src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBUtils.java; > <https://github.com/broadinstitute/gatk/pull/4947#discussion_r262167602>:; >; > > @@ -40,7 +40,7 @@; > */; > public static GenomicsDBExportConfiguration.ExportConfiguration createExportConfiguration(final File reference, final String workspace,; > final String callsetJson, final String vidmapJson,; > - final String vcfHeader) {; > + final String vcfHeader, final boolean doGnarlyGenotyping) {; >; > @lbergelson <https://github.com/lbergelson> @ldgauthier; > <https://github.com/ldgauthier> If tools had a way to inject custom GDB; > config (eg., via an overridable method in GATKTool), and the engine used; > this config when creating the Feature Manager on startup, would that solve; > the problem here?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/4947#discussion_r262167602>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdOOjGpZBu39mqk7jekA7iOzWDTFrks5vTVqFgaJpZM4U4KK0>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-469412816:954,inject,inject,954,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-469412816,1,['inject'],['inject']
Security,"The BAM file is partitioned into chunks (called partitions) by Spark. The section of code that is failing is attempting to calculate the median number of bases covered in each partition. It calculates the number of bases covered for each partition, sorts the list, and grabs the middle entry. The code is not very defensive, and sadly, this number is 0 for your BAM. This could be because there are no partitions (I don't know why this might be), or because more than half of the partitions cover no bases (if, e.g., there are no mapped reads in the partition). Do you have a BAM that runs properly in the tool? You could try the Picard tool ValidateBAM or some tool that gathers mapping statistics (maybe samtools?) and compare the statistics on the good BAM as well as on the failing BAM. Maybe you'll spot some glaring distinction. The failing BAM is aligned and coordinate sorted, right? And the majority of the reads are mapped?. Is it a tiny BAM? Maybe we're creating too many partitions and most of them are empty?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7710#issuecomment-1065282915:642,Validat,ValidateBAM,642,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7710#issuecomment-1065282915,1,['Validat'],['ValidateBAM']
Security,"The CNNPipelineIntegration tests for CNNVariantWriteTensors, CNNVariantTrain and FilterVariantTranches executes tool code, but does no expected results validation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4537:152,validat,validation,152,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4537,1,['validat'],['validation']
Security,"The Google Cloud web UI allows you to create ""directories"". When you press that button, it creates a file with a trailing slash, and the web UI interprets it as a directory even though it's a file. This causes no end of trouble because now every other program in the world that accesses cloud storage must be updated to adopt this ""convention"" or they'll see files where the user doesn't expect them. My guess would be that's what's going on here. That said, NIO *should* understand what these things are and ignore them. The [current workaround](https://github.com/googleapis/google-cloud-java/pull/4304) is to consider 0-byte files as potentially being fake directories. @cwhelan I cannot access the file `gs://broad-dsde-methods-shuang/pb/bams/NA12892/` but if you can, could you please check its size for me? I mean the file specifically. If it's nonzero that would explain the problem. If it's zero or nonexistent then we'll need to dig some more to understand what's going on.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-492450635:278,access,accesses,278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-492450635,2,['access'],"['access', 'accesses']"
Security,"The PathSeq filter repartitioning the reads directly before the BWA host filtering step to even out the load on each partition. This is helpful for typical samples with low pathogen abundance, when ~90% of the reads are filtered before this step. . However, in some sample types such as stool, saliva, or environmental samples, one can have a large number of reads (i.e. ~10M) at this stage so the cost of the repartition shuffle outweighs the benefit of load balancing for the slow BWA step. . This PR exposes a tool argument to skip the repartitioning.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3405:503,expose,exposes,503,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3405,1,['expose'],['exposes']
Security,"The WGS validations that have completed so far look fine, though. Changes at the 0.1% level, mostly improvements, but nothing appears to be obviously broken. Should still run some of the other validations to be sure, but let's get this in for 4.1.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454581846:8,validat,validations,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454581846,2,['validat'],['validations']
Security,"The [rules for requester pays](https://cloud.google.com/storage/docs/requester-pays#requirements) now specify two conditions under which the bucket may be accessed:. 1. userProject is specified (this is what `--gcs-project-for-requester-pays` does), or. 2. The requester has `resourcemanager.projects.createBillingAssignment` permission for the project that contains the bucket. . I suspect condition (2) is true here, so the access is granted. Note that if I remember correctly, condition (2) didn't exist when requester-pays was initially introduced.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6176#issuecomment-534288270:155,access,accessed,155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6176#issuecomment-534288270,2,['access'],"['access', 'accessed']"
Security,"The `./gradlew clean install printVersion` command I mentioned publishes it to the local maven repo. Then you need to reference that version from your own build.gradle. Also beware when doing this iteratively that the local snapshot version # is based on the current head commit hash. In my experience, once gatk is published to local maven under a given version, if you want to make a change, you'll need to make a commit to force the version number to update, and then rerun the command above, and update your VariantQC to the new version. Otherwise the local repo won't be updated since it will appear up to date. Hope that makes sense.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-759638068:279,hash,hash,279,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-759638068,1,['hash'],['hash']
Security,"The `MafOutputRenderer` changed how some funcotation fields are accessed. . Need to make VCF output consistent with the code in MAF output, and need to make sure it's consistent to the VCF format. Specifically, `VCFOutputRenderer` should use the funcotation map that is now created internally to go through and render the annotations. Specifically use `Funcotation::getFieldNames` and `Funcotation::getField`.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4583:64,access,accessed,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4583,1,['access'],['accessed']
Security,The addition of sequence dictionary validation functionality breaks two tests in ValidateVariantsIntegrationTest. These tests are testBadID and testBadID2_OKif_notInDBSNP.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/659:36,validat,validation,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/659,2,"['Validat', 'validat']","['ValidateVariantsIntegrationTest', 'validation']"
Security,"The code that composes the result output folder depends on ```git batch --contains HASH``` to pick up a line with a standard branch name (e.g. ``` joe_doe_bugfix```) . However this is not neceserely the case if the current checkout is not attach to a local branch... for example when one does ```git fetch; git checkout origin/master```. In that case a typical git-batch line that gets picked up is ```* (HEAD detached at origin/master)``` and in this case it will use ""origin/master)"" rather than ""joe_doe_bugfix"" to be part of the result output directory name. The problem is the ""/"" and "")"" which causes problems later at least when running copy_sv_results.sh as they are not escaped appropriately. Obvious ways to address this: ; 1. remove that component of the output name as is not needed to make it quite unique.; 2. change the sub-command to handle that situation. ; 3. or fail early (before spinning the cluster) if the GATK git checkout is detached.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3642:83,HASH,HASH,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3642,1,['HASH'],['HASH']
Security,"The constructors (some of them anyway) use the args during constructor execution, so validating them after the constructor is done executing is too late. Anyway, if you revert that commit so the validation happens as before, and instead add the following to the catch block in `VariantEvalEngine::createClass`, they will get propagated as expected:. ```; if (e.getCause() instanceof CommandLineException) {; // failures due to argument validation should be propagated; throw new CommandLineException(e.getCause().getMessage(), e.getCause());; }; throw new GATKException(""Problem making an instance of "" + clazz + "" Do check that the class has a constructor that accepts VariantEvalEngine"", e);; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827866803:85,validat,validating,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827866803,3,['validat'],"['validating', 'validation']"
Security,"The current `IsUsingCompressedReferences`; It does not pass project id that hosted dataset. ; When the project_id is missing in a BigQuery SQL query, the bq command will use the --project_id flag specified in the command as the default project for resolving dataset and table references.; Add additional parameter to allow passing dest project. . In our case; Error we saw in GCP console:; ```; Access Denied: Table terra-vpc-sc-dev-7ee328ad:1kg_wgs_2022q1.INFORMATION_SCHEMA.COLUMNS: User does not have permission to query table terra-vpc-sc-dev-7ee328ad:1kg_wgs_2022q1.INFORMATION_SCHEMA.COLUMNS, or perhaps it does not exist.; ```. `terra-vpc-sc-dev-7ee328ad:1kg_wgs_2022q1.INFORMATION_SCHEMA.COLUMNS` is wrong - `terra-vpc-sc-dev-7ee328ad` is the user workspace; It should be `fc-aou-cdr-synth-test-2.1kg_wgs_2022q1` - `fc-aou-cdr-synth-test-2` is the project that contains CDR data.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9023:395,Access,Access,395,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9023,1,['Access'],['Access']
Security,"The current hardcoded limit restricts us to 16777215 bins, which we can hit as we go below 200bp bins. For a given matrix that needs to be broken into chunks, increasing the chunk size by decreasing CHUNK_DIVISOR will require more heap space. In practice, it's not too hard to build a PoN per contig to get around this limit at the moment. We might start having issues with doing SVD on the entire matrix anyway when we have this many bins. But it might be good to have the option exposed.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4365:481,expose,exposed,481,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4365,1,['expose'],['exposed']
Security,"The current implementation delegates to Hadoop-BAM SAMHeaderReader.readSAMHeaderFrom, which in turn delegates to htsjdk SAMFileReader (which is deprecated). This is fragile and in a couple of cases is succeeding now only because of some existing htsjdk quirks/bugs:. -It succeeds on ADAM files only because the htsjdk code [falls through](https://github.com/broadinstitute/gatk/issues/1280) to using a SAMTextReader on the ADAM stream, which surprisingly doesn't throw but returns a completely bogus header.; -It succeeds on CRAM files even though no reference is passed because the htsjdk code currently creates a default reference with nothing backing it in that case. Since we're never using this reader to access reads, this works now, but this will throw if we take [this htsjdk PR](https://github.com/samtools/htsjdk/pull/400) which enforces passing a valid reference to CRAMReaders. More generally, I think we need to reconcile the need to have a SAMFileHeader with the desire to have alternate read stores, and decide of delegating to Hadoop-BAM is sufficient here.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1346:710,access,access,710,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1346,1,['access'],['access']
Security,The default jar is taken to be the one bundled with the Docker in the CNV WDLs but is an exposed argument in the M2 WDLs.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4072:89,expose,exposed,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4072,1,['expose'],['exposed']
Security,"The fact that `ReadCoordinateComparator` does not exactly match the ordering of htsjdk's `SAMRecordCoordinateComparator` has been the cause of a few bugs. It sorts all unmapped reads after mapped reads, whereas `SAMRecordCoordinateComparator` sorts unmapped reads that are assigned the positions of their mapped mates with their mapped mates. The issue is that the `GATKRead` interface does not allow unmapped reads to have a position. Ie., even if an unmapped `SAMRecord` is assigned the position of its mapped mate, calling `getContig()`/`getStart()` on the unmapped read via the `GATKRead` interface will return `null`/`0`. This was done mainly for consistency reasons and to simplify client code. Perhaps we could add `getAssignedContig()`, `getAssignedStart()`, etc. methods to GATKRead to expose the positions that unmapped reads with mapped mates get assigned for sorting purposes, and use these in `ReadCoordinateComparator`. This should allow us to match `SAMRecordCoordinateComparator` exactly, and then `ReadCoordinateComparator` could be used even when sorting for the purpose of writing a bam.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1911:795,expose,expose,795,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1911,1,['expose'],['expose']
Security,"The failing test is unrelated to this branch, and I have secured permission to merge. Here we go. . .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1553213661:57,secur,secured,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1553213661,1,['secur'],['secured']
Security,"The git hash refers to the commit of GATK you have checked out in your branch as opposed to the commit of GATK that has been built in Java (and will be run on the cluster). I will clarify the error message: it means that you need to rebuild GATK to match your changes to the repository. The malformed object name is a different story, and seems like a bug. I will try to figure that out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3593#issuecomment-330818394:8,hash,hash,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3593#issuecomment-330818394,1,['hash'],['hash']
Security,"The idea is that this WDL will run all the checks for each release of the VAT table, one call for each validation. The first validation rule (""Validation Check confirms that data is put into the VAT table after completing without an error."") is included as a model for subsequent calls. - workflow should succeed if it's able to try all tests; - workflow output `validation_results` will contain details of each test result in an array of `{""testName"": ""result details""}`:; Example 1 — [fail](https://job-manager.dsde-prod.broadinstitute.org/jobs/2728b55b-5344-492a-951a-48fd416e9d0d); `{ ""EnsureVatTableHasVariants"": ""FAIL: The VAT table spec-ops-aou.rsa_gvs_quickstart.rsa_scratch has no variants in it."" }`; Example 2 — [pass](https://job-manager.dsde-prod.broadinstitute.org/jobs/83e3bd5a-9144-452e-93d9-9f273055177f); `{ ""EnsureVatTableHasVariants"": ""PASS: The VAT table spec-ops-aou.anvil_100_for_testing.aou_shard_223_vat has 294821 variants in it."" },`; Example 3 — [the test wasn't able to run](https://job-manager.dsde-prod.broadinstitute.org/jobs/7179d111-02aa-4bca-a0a0-f55e10e43791); `{ ""EnsureVatTableHasVariants"": ""Something went wrong. The attempt to count the variants returned: Error in query string: Error processing job 'spec-ops- aou:bqjob_r357c4b6fe6b0c6fb_0000017aac301de7_1': Unrecognized name: vid at [1:24]"" }`. Closes https://github.com/broadinstitute/dsp-spec-ops/issues/364",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7352:103,validat,validation,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7352,3,"['Validat', 'validat']","['Validation', 'validation']"
Security,"The idea of putting more help into the command line tools seems like a good one. We don't really have global ""man pages"" maybe we should have some that are accessible directly through the CLI describing important concepts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6639#issuecomment-656182276:156,access,accessible,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6639#issuecomment-656182276,1,['access'],['accessible']
Security,"The issue with the tests is that this PR is from a fork so the tests don't have access to the permissions we need for BigQuery in the variantstore WDL tests. I need to fix this for the future (by making sure those tests don't run when the PR is from a fork), but I don't think that test failure should block this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6872#issuecomment-710041086:80,access,access,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6872#issuecomment-710041086,1,['access'],['access']
Security,The jenkins spark tests are failing with the following error:. This seems to have been introduced in https://github.com/broadinstitute/gatk/pull/3576. ```; code: 0; message: Error code 404 trying to get security access token from Compute Engine metadata for the default service account. This may be because the virtual machine instance does not have permission scopes specified.; reason: null; location: null; retryable: false; com.google.cloud.storage.StorageException: Error code 404 trying to get security access token from Compute Engine metadata for the default service account. This may be because the virtual machine instance does not have permission scopes specified.; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:339); 	at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:197); 	at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:194); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:91); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:54); 	at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:194); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:614); 	at java.nio.file.Files.exists(Files.java:2385); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:346); 	at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:206); 	at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:162); 	at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:118); 	at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:87); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:182); 	at org.broadinstitute.hellbender.engine.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3591:203,secur,security,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3591,4,"['access', 'secur']","['access', 'security']"
Security,"The latest code in htsjdk, which includes https://github.com/samtools/htsjdk/pull/1454 (changes the Allele class into an interface, and uses SimpleAllele as the concrete implementation) causes the `VariantAnnotatorEngineUnitTest.testCombineAnnotations` test to fail because the order of the list returned by `ReducibleAnnotationData.getAlleles` is different with that change than it is without it (presumably due to the different hashCode/equals implementations). `AS_RMSMappingQuality.parseRawData` seems to assume that the order of the Alleles in the list returned by ; `ReducibleAnnotationData.getAlleles` exactly matches the order of the raw data in the String returned by `ReducibleAnnotationData.getRawData`, since it uses indexed access to the list, but I don't see anything that states or ensures/enforces this. Changing the Map maintained by `ReducibleAnnotationData` into a LinkedHashMap fixes the issue for this test, but that just changes the order to be input order - the real issue is that the contract around how the order of the list and the order of the raw data is maintained isn't clear. This will need to be addressed before we can upgrade to the next release of htsjdk.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7586:430,hash,hashCode,430,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7586,2,"['access', 'hash']","['access', 'hashCode']"
Security,"The manifest file describes the files produced by the GvsExtractCallset task and is uploaded to GCS once all the shards have finished running. The existence of the manifest.txt file can be used to determine if the extraction is complete or not by just using `gsutil` command and not going through Cromwell/Terra. Here's a snippet of what that looks like. ```; interval_number, vcf_file_location, vcf_file_bytes, vcf_index_location, vcf_index_bytes; 0,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_0.vcf.gz,879403,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_0.vcf.gz.tbi,1682; 1,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_1.vcf.gz,871855,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_1.vcf.gz.tbi,1670; 2,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_2.vcf.gz,710617,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_2.vcf.gz.tbi,1629; 3,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_3.vcf.gz,715565,gs://fc-secure-765db3ba-3e2d-432e-89eb-9efda7430f93/genomic-extractions/66f225d3-35cf-4ff7-a4ec-3d887a86ea8b/vcfs/interval_3.vcf.gz.tbi,1645; ...; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7457:459,secur,secure-,459,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7457,8,['secur'],['secure-']
Security,The name for the `variantContext` (as accessed by `getSource()`) is never populated properly. It needs to be populated in the codec. This field should be populated when the codec is created in `FeatureDataSource::getCodecForFeatureInput`.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4570:38,access,accessed,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4570,1,['access'],['accessed']
Security,"The new pipeline is in a complete state. Nearly all tools and scripts were rewritten, many from scratch. I've tried to minimize interaction with old `tools/exome` code (notably, `ReadCountCollection` and `SegmentUtils`). There are still some improvements that can be made (especially in segment union and the subsequent modeling), but we should be ready to go for a first validation. Some notes:. WDL:; - I've moved the old pipeline to `somatic_old` folders.; - There is now just a matched-pair workflow and a panel workflow. We can add a single BAM case workflow or expand the matched-pair workflow to handle this, depending on the discussion at https://github.com/broadinstitute/gatk/issues/3657.; - WES/WGS is toggled by providing an optional target-file input.; - For all workflows, we always collect integer read counts; for WGS, these are output as both HDF5 and TSV and the HDF5 is used for subsequent input.; - For the case workflow, we always collect allelic counts at all sites and output as TSV.; - [x] We should output all data files as HDF5 by default and as TSV optionally. EDIT: This is done for `CollectFragmentCounts`.; - [x] We will need to update the workflows when @MartonKN and @asmirnov239 get `PreprocessIntervals` and `CollectReadCounts` merged, respectively. These tools will remove the awkwardness required by `PadTargets` and `CalculateTargetCoverage`/`SparkGenomeReadCounts`. Denoising:; - All parameters are exposed in the PoN creation tool (#3356).; - Without a PoN, standardization and optional GC correction are performed (#3570).; - Other than the minor point about sample mean/median being used inconsistently noted above, the denoising process is essentially exactly the same mathematically as before (""superficial"" differences include the vastly improved memory and I/O optimizations, the ability to adjust number of principal components used, the removal of redundant SVDs, the enforcement of consistent GC-bias correction).; - [ ] That said, I'll carry over this ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828:372,validat,validation,372,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828,2,['validat'],['validation']
Security,The new validation tests for `ReadsPipelineSpark` should be easily runnable in either a push-button fashion or on a set automatic schedule (nightly or weekly) via a jenkins server. Depends on https://github.com/broadinstitute/gatk/issues/1400,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1401:8,validat,validation,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1401,1,['validat'],['validation']
Security,"The only parallelism exposed by GenomicsDBImport is via `max-num-intervals-to-import-in-parallel` and that is at the granularity of threads in the same process. Not sure there is any parallelism in GenotypeGVCFs. ; The granularity of parallelism that @nickhsmith seems to want is at the level of a node and @mjohnsonngi is correct. Assuming GenotypeGVCFs processes each position independently, run GenomicsDBImport followed by GenotypeGVFs per node and then use GatherVcfs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7898#issuecomment-1175552901:21,expose,exposed,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7898#issuecomment-1175552901,1,['expose'],['exposed']
Security,"The possibility that this problem could be specific to the TCGA FC BAMs did arise in our previous discussions---not sure what storage class those are on?. However, in this workflow, at most one ReadWalker (CollectReadCounts) and one LocusWalker (CollectAllelicCounts) would try to access the same (tumor) BAM. There were several instances of (normal) BAMs which only had one LocusWalker (CollectAllelicCounts) accessing them that failed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-459845523:281,access,access,281,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-459845523,2,['access'],"['access', 'accessing']"
Security,The presence of gcloud-java-nio on the classpath prevents other providers being used if the GCS provider ID has not been specified (e.g. by setting `GOOGLE_APPLICATION_CREDENTIALS`). Here's an example test case: https://github.com/broadinstitute/gatk/commit/8b217f82352ceb55d21d7a5236e879818910d9c9. and the stacktrace:. ```; java.util.ServiceConfigurationError: java.nio.file.spi.FileSystemProvider: Provider com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider could not be instantiated; at java.util.ServiceLoader.fail(ServiceLoader.java:232); at java.util.ServiceLoader.access$100(ServiceLoader.java:185); at java.util.ServiceLoader$LazyIterator.nextService(ServiceLoader.java:384); at java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:404); at java.util.ServiceLoader$1.next(ServiceLoader.java:480); at java.nio.file.spi.FileSystemProvider.loadInstalledProviders(FileSystemProvider.java:119); at java.nio.file.spi.FileSystemProvider.access$000(FileSystemProvider.java:77); at java.nio.file.spi.FileSystemProvider$1.run(FileSystemProvider.java:169); at java.nio.file.spi.FileSystemProvider$1.run(FileSystemProvider.java:166); at java.security.AccessController.doPrivileged(Native Method); at java.nio.file.spi.FileSystemProvider.installedProviders(FileSystemProvider.java:166); at java.nio.file.Paths.get(Paths.java:141); at org.broadinstitute.hellbender.engine.spark.datasources.NioProviderExceptionUnitTest.test(NioProviderExceptionUnitTest.java:12). Caused by:; java.lang.IllegalArgumentException: A project ID is required for this service but could not be determined from the builder or the environment. Please set a project ID using the builder.; at shaded.cloud-nio.com.google.common.base.Preconditions.checkArgument(Preconditions.java:122); at com.google.cloud.ServiceOptions.<init>(ServiceOptions.java:208); at com.google.cloud.HttpServiceOptions.<init>(HttpServiceOptions.java:153); at com.google.cloud.storage.StorageOptions.<init>(StorageOptions.java:69); at c,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2110:589,access,access,589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2110,2,['access'],['access']
Security,"The problem is that the package can't download any files during build due to security reasons. It has to use predefined, repeatable set of dependencies, and can't download random versions of gradle either. It has to use the ```devel/gradle``` port, and once this port has been upgraded to version 5.0 gatk became broken. ```devel/gradle4``` had to be created. Generally, indiscriminate downloads of files lead to security problems like the one that recently happened with a particular bitcoin-related node code, which was using a zillion node dependencies. One of them got infiltrated by a criminal who eventually stole bitcoins because he managed to inject his code into financial applications running on user's sites. To prevent such things from happening, all major packaging systems only use fingerprinted dependencies, and can't ""just download"" some alternative version of something during build, contrary to what devs might be expecting.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059:77,secur,security,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5483#issuecomment-444205059,3,"['inject', 'secur']","['inject', 'security']"
Security,"The pull request addresses two issues:. 1. Improved and more robust parsing of FlowBasedReads. Specifically, the code now determines the minimal reportable quality; 2. New tool AddFlowSNVQuality that allows users to convert the flow-based quality format when every base quality reports probability of an insertion or deletion to a conventional format that gives base qualities (total probability of mismatch and probability of each mismatch in separate tags). . We believe that this tool is going to be important for users of the Ultima Genomics data that care about calling SNVs, especially in somatic setting, so the goal was to make documentation more accessible. . Happy to receive feedback about it",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8697:655,access,accessible,655,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8697,1,['access'],['accessible']
Security,The recently-added sequence dictionary validation in `BaseRecalibratorDataflow` does not work when the reference is stored in a bucket -- we should patch it so that it does.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/683:39,validat,validation,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/683,1,['validat'],['validation']
Security,"The result of this bug is that if you produce a BAM with Spark, then produce a different BAM with the same name with the walker-framework, then try to read _that_ bam with Spark, it produces checksum (and other more misleading) errors.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1266:191,checksum,checksum,191,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1266,1,['checksum'],['checksum']
Security,"The same error was reported in other modules of GATK4. For eacmple, in GenomicsDBimport [Ref.1]. And I encountered it again when I check the bams with ValidateSamFile. [1] https://gatk.broadinstitute.org/hc/en-us/community/posts/360076477211-GenomicsDBimport-not-importing-all-the-batches?page=1#community_comment_4411519756827",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7582#issuecomment-991512945:151,Validat,ValidateSamFile,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7582#issuecomment-991512945,1,['Validat'],['ValidateSamFile']
Security,"The snapshot builds get published to an artifact repository, but I don't think those are accessible from outside of Broad. The build from this morning with your branch is [here](https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/org/broadinstitute/gatk/4.0.11.0-30-g9c4a27b-SNAPSHOT/) if you can access it. Otherwise, for local development, you can do the following:. - pull gatk master from today so it includes your commit; - run `git fetch --tags` (this is optional but it will give your local build a more reasonable version tag); - run `./gradlew install printVersion` to install the locally built gatk into your local machine's maven repository; - change your VariantQC gradle project to include the `maven` gradle plugin if its not already there; - add `mavenLocal()` to your projects' `repositories `closure; - change your gatk dependency to the version number printed out by 'printVersion'; - rebuild VariantQC. Having said all that, what code are you dependent on ? I expect the command line interface to VariantEval, and the VariantUtils and StratificationManager and friends classes all to undergo some refactoring and evolve a bit before the tool has the beta tag removed and the interfaces are stabilized. See https://github.com/broadinstitute/gatk/issues/5439 and https://github.com/broadinstitute/gatk/issues/5440.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148:89,access,accessible,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440782148,2,['access'],"['access', 'accessible']"
Security,"The table names in GvsAssignId were not quoted with backticks, which is fine **except** if your dataset name starts with a number… which is a total valid identifier, but requires quoting. . Recently we had a customer (AoU) supply a dataset with the name `1kg_wgs` which exposed this problem",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7666:270,expose,exposed,270,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7666,1,['expose'],['exposed']
Security,"The task here is to simply move the code while changing as little as possible, and then validate that. Once that's done, we can do whatever refactoring/changes we want to VQSR, or replace it completely.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2062#issuecomment-236014525:88,validat,validate,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2062#issuecomment-236014525,2,['validat'],['validate']
Security,"The tool-specific WDLs we generate in https://github.com/broadinstitute/gatk-tool-wdls don't have the `localization_optional` parameter turned on for args that support cloud access (ie., arguments of type GATKPath), and so always localize.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7094:174,access,access,174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7094,1,['access'],['access']
Security,"There are a number of GATK code paths that check to ensure that a reference is provided whenever a CRAM input is provided. Since htsjdk now accepts both embedded reference and reference-less (no reference compression) CRAMs, these checks should be removed once we update htsjdk. The CRAM code will defer accessing the reference until one is actually required, and will fail gracefully in the case where it is not provided.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6541:304,access,accessing,304,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6541,1,['access'],['accessing']
Security,"There are currently two failing tests, both of which need fixes in htsjdk.; * CountVariantsSparkIntegrationTest. This is a concurrency issue where VCFCodec (which isn't threadsafe) is being shared by multiple tasks in each Spark executor. The fix is for each task (partition) to have its own VCFCodec. This needs a couple of small changes in htsjdk to make it possible to access the codec's version and header fields so the codec can be recreated. See https://github.com/samtools/htsjdk/pull/1176.; * CpxVariantReInterpreterSparkIntegrationTest. I tracked this down to a problem with the buffer in htsjdk's SeekableBufferedStream. See https://github.com/samtools/htsjdk/pull/1175 for the fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035:372,access,access,372,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-417241035,1,['access'],['access']
Security,"There are params in Extract Cohort that can be tightened up. Extract Tool has two params that are not used by Extract Features and are _already_ in Extract Cohort. The filter_set_name is used in the BQ filtering tables and looks like we can set it to be completely required for any type of filtering. There are 3 BQ filter tables -- 2 are needed for filtering (no matter what?) and 1 (tranches) is needed for thresholding and sensitivity calculations?. Genotype level filtering is true by default, but this doesn't seem like it should effect things after this cleanup. Though technically it should only be true if a filter_set_name has been specified. I will add another comment in the body of the code, but I would like to add this safety gate explicitly. Disable gnarly doesn't need to be a passed in param---so we'll rip it out for now. SNP and INDEL truth sensitivity and SNP and INDEL Lod scores are cumbersome to have to worry about passing in, but I dont see a better alternative. Should there be additional validation on these (where if they are specified, but no filter_set_name is, then they throw an error?)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7293:1015,validat,validation,1015,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7293,1,['validat'],['validation']
Security,"There are quite a few v2.1 CRAM test files being used in GATK that should probably be regenerated and replaced with v3.0 files. There are also quite a few CRAM test files floating around in both htsjdk and GATK that have external blocks with content ID=0 (not valid per the spec) and some of those blocks have no actual content:. gatk/src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTestCRAM.QT_10.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/clippingReadsTestCRAM.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/print_reads.sorted.queryname.htsjdk-2.1.0.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.bqsr.pipeline.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/validation/single.read.cram; gatk/src/test/resources/org/broadinstitute/hellbender/tools/validation/another.single.read.cram. These have external blocks with ID=0, but the blocks have no actual content:. gatk/src/test/resources/org/broadinstitute/hellbender/engine/cram_with_crai_index.cram (0 bytes); gatk/src/test/resources/org/broadinstitute/hellbender/engine/cram_with_bai_index.cram (0 bytes). We should regenerate and replace with v3.0 CRAM files.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6018:1234,validat,validation,1234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6018,2,['validat'],['validation']
Security,"There are several cases where ValidateVariants does no actual validation, and issues no warning message. This includes the default case, where the minimal set of required args is provided (these are examples from the doc, which should be updated when this is fixed): . `gatk ValidateVariants -V some.vcf`; `gatk ValidateVariants -V some.vcf -R some.fasta`. Either of these silently results in no validation and no warning message, despite the entire VCF being decoded and traversed, because the default validation type is ""ALL"", which includes validation type ""IDS"". But IDS requires a dbsnp arg, and none was provided, so the code short-circuits out. The default case should probably do whatever validation it can, but at a minimum a warning should be logged. Ironically, if you provide an exclusion on the command line via `--validation-type-to-exclude IDS`, then validation is done. Another no-op case is `--validation-type-to-exclude ALL` (also recommended in the doc), which also should probably be rejected, or at least logged, since it silently does no validation and reports no errors. This tripped up [this user](https://github.com/samtools/htsjdk/issues/1117), and resulted in a downstream BCF issue.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5862:30,Validat,ValidateVariants,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5862,12,"['Validat', 'validat']","['ValidateVariants', 'validation', 'validation-type-to-exclude']"
Security,"There are two differences in GATK4 relative to GATK3 that are causing bugs in the read clipping code (see #3466 and #3845):. * `GATKRead` does not allow you to set mapped reads to a negative start position or a null contig, whereas the GATK3 clipping code allowed reads to enter such states. * We return a `ReadUtils.emptyRead()` when we completely clip away a read, as opposed to (eg.,) a read with a negative start position and no bases like we did in GATK3. We should audit all usages of the `ReadClipper` (as well as direct usages of `ReadUtils.emptyRead()` itself) to make sure that all client code can handle the return value of `ReadUtils.emptyRead()`, which returns an unmapped read with no bases. I've already audited the usages in `HaplotypeCaller`.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4204:471,audit,audit,471,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4204,2,['audit'],"['audit', 'audited']"
Security,"There are two issues with running this on Travis:; 1. Spinning up Dataproc requires access to a bunch of secrets -- namely API Keys and Google Service accounts (usually in the form of a JSON). Travis allows for encrypted Secrets, so I'm okay with them existing there, but they are ONLY available to PRs that originate from the repo (ie, no forked PRs have access to them). So doing this in Travis would only work from your local PR. Is that acceptable? If not, no Travis that I can think of. 2. We don't want ANYONE to just come in and launch these tests as they are $ expensive (spinning up clusters in Google). If this activates with any PR that comes in, then we can easily run up a bill by any malicious A-hole who feels like launching a bunch of PRs. I know that when I was 14 or so I would have probably done that if I discovered it. Jenkins has some mechnaisms to prevent run away PR tests. Does Travis? I didn't find any info on that... Happy to hash it out in a room (and sorry it took this long to get to. Pester Banks if you need my attention faster otherwise Workbench and Security get first dibs). But be aware of these issues with Travis and running dataproc.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287539859:84,access,access,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287539859,5,"['Secur', 'access', 'encrypt', 'hash']","['Security', 'access', 'encrypted', 'hash']"
Security,"There currently is no way to access files in a GCS bucket that is not public. I will need this feature in the near future to analyze sensitive data. . Just discussed this with @lbergelson, and it sounds like this is something that is not a ton of work but has just been on the back-burner for a while.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394:29,access,access,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394,1,['access'],['access']
Security,"There is a pattern for abstracting these out, and even hiding them, but its intrusive and probably way overkill for this (see for example how `getSequenceDictionaryValidationArgumentCollection` is used). Also see `customCommandLineValidation` which can similarly be used for command line arg validation. Another option is to use a subclass constructor that resets the defaults, and logs a warning if you clobber a user value. The worst way is to do what AlleleFrequencyQC does in onTraversalStart, which just silently clobbers...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7287#issuecomment-853371556:292,validat,validation,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7287#issuecomment-853371556,1,['validat'],['validation']
Security,There is one test in ValidateSamFileIntegrationTest that is commented out since it depends on a change to htsjdk.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1084:21,Validat,ValidateSamFileIntegrationTest,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1084,1,['Validat'],['ValidateSamFileIntegrationTest']
Security,"There is some confusing code in MarkDuplicatesSpark for comparison, some of which will cause inherent differences with picard Mark Duplicates. Some time should be set aside to ensure it is all performing correctly and that the differences are justified during validation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4707:260,validat,validation,260,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4707,1,['validat'],['validation']
Security,"There may be a general need to allow tools to request additional context around the current locus/interval. This currently is implemented for `ReferenceContext` via `setWindow()`, but could be expanded to the other *Context classes as well. . Note, however, that we should not encourage tools to perform arbitrary queries as a general rule, since it would be difficult or impossible to optimize a traversal in which the access pattern is random. If a tool needs to group disparate data items together (eg., mates on different contigs), there should be an initial grouping step to prepare the required data for the main analysis, instead of random queries within the main analysis.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/245:420,access,access,420,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/245,1,['access'],['access']
Security,There needs to be a validation tool for data sources to ensure that they conform to their formats properly. This tool is envisioned to be run just prior to data source release to fix any silent errors.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4380:20,validat,validation,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4380,1,['validat'],['validation']
Security,"There should be a robust mechanism to check whether an index file is up-to-date with respect to the file it indexes (eg., UUIDs, hashes, etc.). Modification time alone is not sufficient, since files can get uploaded out-of-order in cloud environments.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5571:129,hash,hashes,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5571,1,['hash'],['hashes']
Security,"There should be an option to inform the user when reads do not pass the WellFormedReadFilter. This could be by logging the number of reads failing this filter or exploding (user-specified). Ideally, it would also report which part of the filter they failed. There are a lot of simple ""gotchas"" that can cause reads to fail, like not adding read groups with sample names. To a lay user, this could be very frustrating. In Spark tools that perform their own additional filtering, it can be impossible to tell even when a substantial subset of the input is silently lost this way (very scary stuff!). A tool to detect reads that are not Wellformed (akin to ValidateSamFile) would be helpful, although not for catching bugs like #3453. @lbergelson suggested creating a WellFormedOrExplodeReadFilter, which would allow tool developers to handle this issue at their discretion. I will work on something like this because PathSeq is especially susceptible to the problem.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3454:654,Validat,ValidateSamFile,654,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3454,1,['Validat'],['ValidateSamFile']
Security,"There were a few issues with this case. First, the data source was not constructed 100% correctly. The config file is correct. . The index file is for the tar.gz version of the source data and not for the uncompressed version that they're using. The index should correspond to the source data in the file referenced by the config file itself (not a zipped or otherwise transformed version). Secondly, the source `tsv` data file has the header line for the table commented out. The Xsv codec is aware of leading hash marks as comments and will ignore any such lines. Because of this, the leading hash in the table header is ignored and the file cannot be properly parsed. The fix is simple - just remove the leading hash from the table header (the preceding line with the two hash marks is correctly interpreted as a file header because of the leading hashes acting as comments). Lastly, even if the user fixed the file they would still need to index it with`IndexFeatureFile`. At some point the code underlying this in `HTSJDK` was broken such that no Xsv files can currently be indexed. I have submitted a pull request in `HTSJDK` (https://github.com/samtools/htsjdk/pull/1429) for this and have another ready to go in GATK (#6224) that includes a test for this case so this reversion cannot happen again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545186183:511,hash,hash,511,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545186183,10,['hash'],"['hash', 'hashes']"
Security,"There's a small set of tools that only outputs their results to stdout, making it difficult to use the output in a pipeline/script. This PR adds a way to output simple results from such tools to an (optional) output file. I Added this option to the following tools:; - CountBases; - CountBasesInReference; - CountReads; - CountVariants; - FlagStat. Other tools that might benefit from this (but it will require an API change, so I didn't do it):; - CompareIntervalLists; - ValidateVariants",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7072:473,Validat,ValidateVariants,473,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7072,1,['Validat'],['ValidateVariants']
Security,There's an issue in `VcfFuncotationFactory.createFuncotationsOnVariant` where certain cites that need multiple functotations merged produce incorrect output. The cause is an accidental conversion of LinkedHashMap -> HashMap which scrambles the iteration order of the map. The order is used when writing the fields so the names of the fields end up on different values.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6173:216,Hash,HashMap,216,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6173,1,['Hash'],['HashMap']
Security,There's some bad input in the BQSR test; update the input validation test to make sure it can find reads that are malformed in that way.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/557:58,validat,validation,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/557,1,['validat'],['validation']
Security,"These are failing with:. ```; Error: (converted from warning) unable to access index for repository http://lib.stat.cmu.edu/R/CRAN/src/contrib; Execution halted; The command ""if [[ $TEST_DOCKER != true ]]; then sudo mkdir -p /usr/local/lib/R/; sudo mkdir -p site-library; sudo ln -sFv ~/site-library /usr/local/lib/R/site-library; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; sudo add-apt-repository ""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/""; sudo apt-get update; sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty; sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty; sudo Rscript scripts/docker/gatkbase/install_R_packages.R; fi;"" failed and exited with 1 during; ```; which has nothing to do with the PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5595#issuecomment-456911203:72,access,access,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5595#issuecomment-456911203,1,['access'],['access']
Security,"These can almost definitely go:; CalculatePulldownPhasePosteriors; PerformAlleleFractionSegmentation; PerformCopyRatioSegmentation; PerformJointSegmentation; XHMMSegmentCaller; XHMMSegmentGenotyper. @mbabadi will touch base with Monkol, but we think these can go:; TargetCoverageSexGenotyper; GermlineCNVCaller. Not sure about these germline validation tools, let me know:; ConvertGSVariantsToSegments; EvaluateCopyNumberTriStateCalls",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3887:342,validat,validation,342,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3887,1,['validat'],['validation']
Security,This PR Creates and exposes the `is_wgs` parameter in the GvsJointVariantCalling wdl.; It follows the rules defined in the ticket VS-1020 as to how to set `is_wgs` and the `optional interval_list` and `interval_weights_bed` inputs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8515:20,expose,exposes,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8515,1,['expose'],['exposes']
Security,"This PR addresses required changes in order to use latest version of GenomicsDB which exposes new functionality such as:; - [Multi interval import and query support](https://github.com/broadinstitute/gatk/issues/3269):; - We create multiple arrays (directories) in a single workspace - one per interval. So, if you wish to import intervals (""chr1"", [ 1, 100M ]) and (""chr2"", [ 1, 100M ]), you end up with 2 directories/arrays in the workspace with names chr1$1$100M and chr2$1$100M. The array names depend on the partition bounds.; - During the read phase, the user only supplies the workspace. The array names are obtained by scanning the entries in the workspace and reading the right arrays. For example, if you wish to read (""chr2"", [ 50, 50M] ), then only the second array is queried.; - In the previous version of the tool, the array name was a constant - _genomicsdb_array_. The new version will be backward compatible with respect to reads. Hence, if a directory named _genomicsdb_array_ is found in the workspace directory, it's passed as the array for the _GenomicsDBFeatureReader_ otherwise the array names are generated from the directory entry names.; - Parallel import based on chromosome intervals. The number of threads to use can be specified as an integer argument to the [executeImport call](https://github.com/francares/gatk/blob/fmc_GenomicsDB_parallel_import/src/main/java/org/broadinstitute/hellbender/tools/genomicsdb/GenomicsDBImport.java#L535). If no argument is specified, the number of threads is determined by Java's ForkJoinPool (typically equal to the \#cores in the system). ; - The max number of intervals to import in parallel can be controlled by the command line argument --max-num-intervals-to-import-in-parallel (default 1); - Note that increasing parallelism increases the number of FeatureReaders opened to feed data to the importer. So, if you are using _N_ threads and your batch size is _B_, you will have _N*B_ feature readers open.; - Protobuf based API fo",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4645:86,expose,exposes,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4645,1,['expose'],['exposes']
Security,"This PR adds segments VCF writing to `PostprocessGermlineCNVCalls`. Segmentation (Viterbi) and segment quality calculation are performed by `gcnvkernel`. This PR introduces the following additional features:; - Calls and model shards are not required to be provided in sorted order anymore; - The user can specify the ref copy-number state for autosomal contigs, as well as allosomal contigs; - For both intervals and segments VCF output: now we use either `<DUP>` or `<DEL>` alleles (in place of `CN_x` alleles), depending on whether the most likely copy-number call is below or above the ; contig baseline. The contig baseline state is whatever the user has specified for autosomal contigs, and the contig ploidy state on sex chromosomes (from the output of `DetermineGermlineContigPloidy`).; - Fail-fast validations and better test coverage; - Updated cohort and case WDL scripts and WDL tests",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4396:807,validat,validations,807,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4396,1,['validat'],['validations']
Security,"This PR does most of the work for VS-565. It exposes the interval list and the sample list to whole way up the nested WDLs to GvsJointVariantCallng.wdl. Two minor things of note:; 1. sample_name_list is a File option and not a File because it's only computed inside of a branch of GvsExtractCallset where control_samples is false. If there is other behavior we want in the condition where it isn't computed, just let me know. This isn't an issue when it's run inside of GvsJointVariantCalling for the beta workflow though, and making it work there was the ultimate purpose of the ticket. 2. This PR does not fully complete the ticket. It will also require changes to the actual beta work space to add the necessary columns to the data table sample_set and change the outputs for the GvsJointVariantCalling workflow to map the new outputs to those columns. I have made these changes and test thems in my copy of the beta workflow, and can make the required changes in the one in gvs-prod once this PR is verified and merged.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8010:45,expose,exposes,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8010,1,['expose'],['exposes']
Security,"This PR is an attempt at improving SelectVariants by. - Rewriting unclear code;; - Adding documentation where needed; and; - Adding tests. The initial motivation for this code change (#7497) was to improve performance of SelectVariants by adding an option to do the ""INFO-level filtering"" before doing ""genotype filtering."" Our assumption was that this would improve performance because then we would avoid the expensive genotype ""fully-decode"" operation, which turns string format fields into appropriate object/types (int, array, etc.). This is (we think) done in `VariantContext.fullyDecode().`. This turned out not to be possible for the following reasons. First, there are roughly four types of genotype subsetting you could do:. a) By the sample names (`--sample-name NA12878`); b) JEXL (`--select GQ > 0`); c) JEXL by accessing the variant context object (`--select vc.getGenotype('NA12878').getGQ() > 1`); d) Others (e.g. `--remove-fraction-genotype`). a) does not need ""fully-decode."" It turns out b) was never supported (GATK currently removes all variants and succeed.) And from my experiments, c) does not seem to ever trigger calling `VariantContext.fullyDecode().` In fact the only code path I can see that calls fullyDecode() is by setting the `fully-decode` SelectVariants argument, which seems to just call fullyDecode at the beginning just for the sake of calling it (or so it appears to me. The utility of this command line argument is highly dubious.) . It's possible that apache code does something similar to fully decoding that could affect performance. All that is to say that we cannot achieve performance improvement with our original blueprint simply because this expensive ""fullyDecode"" operation seems to be a mythical operation that is never used in reality. So while I could not speed up SelectVariants, I cleaned up the code and added the following new arguments:. * `--select-genotype`: with this new genotype-specific JEXL argument, we support filtering by genotype f",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8092:825,access,accessing,825,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8092,1,['access'],['accessing']
Security,"This PR only has a subset of the tools, but I wanted put something out there quickly to get comments and make sure I'm on the right track.; - Created tools.picard subpackage.; - Extend CommandLineProgram with PicardCommandLineProgram.; - Ported the following CLPs, with tests and small test files from Picard:; - AddCommentsToBam; - CleanSam; - CreateSequenceDictionary; - FastqToSam; - MergeBamAlignment; - RevertSam; - SamFormatConverter; - SamToFastq; - ValidateSamFile. Some notes:; - doWork() returns null for most CLPs. The exception is ValidateSam; in Picard, it returns a meaningful exit code (0 if input SAM is valid, 1 if not). Various unit tests were relying on this behavior. For now, I preserved it by returning a boolean.; - MergeBamAlignment actually involves a fair amount of logic, a la MarkDuplicates. It combines an aligned BAM with an unmapped BAM. Its helper classes have been placed in utils.sam.mergealignment. More information can be found there.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/124:457,Validat,ValidateSamFile,457,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/124,2,['Validat'],"['ValidateSam', 'ValidateSamFile']"
Security,"This PR primarily fixes a bug in the hashCode method of BreakpointAllele that was causing Spark's groupByKey() method to not group identical inversion events together, resulting in duplicate variant calls in the output VCF. . All changes:; - Fix hashCode of BreakpointAllele to use the ordinal of the InversionType enum, which is consistent across executors; - Added Kryo Serializers to several SV classes; - Made the INSERTED_SEQUENCE_MAPPINGS VCF annotation include the assembly id and contig name for each mapping, which is necessary to read them.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2168:37,hash,hashCode,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2168,2,['hash'],['hashCode']
Security,"This addresses issue 569 - the cleanup of format errors in bam and sam files in tests. I will send an archive with a README, validations for the post-modification bams and sams, and diffs for the bams to akiezun.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/809:125,validat,validations,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/809,1,['validat'],['validations']
Security,"This adds a new folder for large runtime resources to git-lfs. Unlike the large test resources, which are only accessed via a volume mount when tests are run on the Docker image, the runtime resources need to be accessible to the GATK build during the Docker build process, since they're included in the jar. AFAICT there is no `docker build` equivalent to `docker run -v`. So for now the runtime resources are git pulled into the Docker staging area, and thus onto the Docker image. We need this for @lucidtronix 's CNN branch (and possibly for @TedBrookings) if we're going to load models for resources, but longer term, we need a better solution.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4530:111,access,accessed,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4530,2,['access'],"['accessed', 'accessible']"
Security,This authenticates us to dockerhub on travis builds that require docker.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7204:5,authenticat,authenticates,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7204,1,['authenticat'],['authenticates']
Security,"This class was created to provided for a need to keep a sorted (by location) set of targets. However there is nothing in it that could not really be applied to any locatable in general. . As a matter of fact now I find myself in a situation in where I need the same functionality for a different subclass of Locatables, TargetCollection (and its implementations) have the functionality I need but using TargetCollection looks ugly due to its name and its methods names. The task is the to rename TargetCollection<T> to LocatableCollection<L> and accordingly replace 'target' in methods names for something else (either locatable or a generic name such 'elements'). . Also I recently noticed the existence of IntervalsSkipList which could be an additional implementation for TargetCollection (or rather the new LocatableCollection). So perhaps as part of this task we could unified the skip-list and the hash based solutions under a single common interface.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1538:903,hash,hash,903,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1538,1,['hash'],['hash']
Security,"This code (building off of Louis' fixes) adds the following:; - AuthHolder, a replacement for the PipelineOptions. It stores the authentication info we need for GCS and supports both API_KEY and client-secrets.json. I adapted a few classes to accept an AuthHolder.; - BaseRecalibratorOptimizedSpark, a port of the ""shard"" approach I first did on the Dataflow side. Note that currently this code only performs reasonably for small inputs if you specify -L on the command line (for large inputs it doesn't matter).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/987:129,authenticat,authentication,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/987,1,['authenticat'],['authentication']
Security,"This consists almost entirely of using `Utils.nonNull` and `Utils.validateArg` in code ported from GATK 3. There are less trivial but straightforward simplifications of code in `MathUtils` and `ReadLikelihoods`. @droazen and @lbergelson is one of you willing to review this mind-numbing PR, or suggest a victim? It should be quick.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1979:66,validat,validateArg,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1979,1,['validat'],['validateArg']
Security,"This constant controls both the maximum number of retries and the maximum number of reopens the GCS NIO library will perform in the face of transient errors. It's currently hardcoded, but should be exposed as an engine argument.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3315:198,expose,exposed,198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3315,1,['expose'],['exposed']
Security,This epic is to track work on porting and validating VQSR for alpha-3. Feel free to add related tickets to the epic.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2062:42,validat,validating,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2062,1,['validat'],['validating']
Security,"This error does not occur with every VCF but at least with the one enclosed below. It passes vcf-validator with default arguments. . To reproduce: . ```; term1$ spark-shell # start you spark local cluster in another screen; ...; term2$ cd /dsde/working/valentin/bugs/gatk-var-walker-ser; term2$ git checkout 58cb99ec ; term2$ ./gradlew sparkJar; term2$ ./gatk-launch ExampleVariantWalkerSpark -V ./in.vcf.gz -- --sparkRunner SPARK --sparkMaster local. ```. ```; The stacktrace starts with:. 17/03/29 16:44:56 INFO SparkContext: Successfully stopped SparkContext; 16:44:56.000 INFO ExampleVariantWalkerSpark - Shutting down engine; [March 29, 2017 4:44:56 PM EDT] org.broadinstitute.hellbender.tools.examples.ExampleVariantWalkerSpark done. Elapsed time: 0.08 minutes.; Runtime.totalMemory()=576192512; java.lang.IllegalArgumentException: requirement failed: The partition coalescer passed in must be serializable.; 	at scala.Predef$.require(Predef.scala:224); 	at org.apache.spark.rdd.CoalescedRDD.<init>(CoalescedRDD.scala:84); 	at org.apache.spark.rdd.RDD$$anonfun$coalesce$1.apply(RDD.scala:466); 	at org.apache.spark.rdd.RDD$$anonfun$coalesce$1.apply(RDD.scala:445); 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151); 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112); 	at org.apache.spark.rdd.RDD.withScope(RDD.scala:362); 	at org.apache.spark.rdd.RDD.coalesce(RDD.scala:445); 	at org.broadinstitute.hellbender.engine.spark.SparkSharder.coalesce(SparkSharder.java:321); 	at org.broadinstitute.hellbender.engine.spark.SparkSharder.joinOverlapping(SparkSharder.java:189); 	at org.broadinstitute.hellbender.engine.spark.SparkSharder.joinOverlapping(SparkSharder.java:126); 	at org.broadinstitute.hellbender.engine.spark.SparkSharder.shard(SparkSharder.java:99); 	at org.broadinstitute.hellbender.engine.spark.VariantWalkerSpark.getVariants(VariantWalkerSpark.java:129); 	at org.broadinstitute.hellbender.engine.spark.VariantWalkerSpa",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2545:97,validat,validator,97,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2545,1,['validat'],['validator']
Security,"This happens whenever the start position of an interval for which intermediate bands must be created is less than the value `of break-bands-at-multiples-of`. For example, an input reference block record with a `start` position (say 1) that is less than the value of `of break-bands-at-multiples-of` (say 10000) would result in the invalid intermediate band interval:; ```; java.lang.IllegalArgumentException: Invalid interval. Contig:chr21 start:-1 end:-1. 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); 	at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); 	at org.broadinstitute.hellbender.tools.walkers.CombineGVCFs.createIntermediateVariants(CombineGVCFs.java:191); 	at org.broadinstitute.hellbender.tools.walkers.CombineGVCFs.apply(CombineGVCFs.java:134). ```; This doesn't happen in GATK3.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4672:503,validat,validateArg,503,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4672,2,['validat'],"['validateArg', 'validatePositions']"
Security,This has exposed a dumb bug in our tests. It turns out we rely on the exact output of VariantContext.toString() Will fix. https://storage.googleapis.com/hellbender-test-logs/build_reports/lb_update_to_htsjdk_2.14.2_17106.2/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4350#issuecomment-363248723:9,expose,exposed,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4350#issuecomment-363248723,1,['expose'],['exposed']
Security,"This includes:; * the GQ0 --> no call conversion; * the setting of the max ref block size (already 1000, but need to let the VDS know). Bonus:; a validation script for the VDS itself. <img width=""851"" alt=""valid"" src=""https://user-images.githubusercontent.com/6863459/220472873-184c7c51-7b1b-41e7-abca-55d05293e590.png"">",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8205:146,validat,validation,146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8205,1,['validat'],['validation']
Security,"This is a different sample/locus, but same issue:; `java -jar $GATKjar HaplotypeCaller --emit-ref-confidence GVCF --gvcf-gq-bands 10 --gvcf-gq-bands 20 --gvcf-gq-bands 30 --gvcf-gq-bands 40 --gvcf-gq-bands 50 --gvcf-gq-bands 60 --gvcf-gq-bands 70 --gvcf-gq-bands 80 --gvcf-gq-bands 90 --contamination-fraction-to-filter 0.011583226666666667 -L gs://broad-gotc-dev-cromwell-execution/ExomeGermlineSingleSample/873ad750-62ac-41a1-857a-a9388ad23392/call-BamToGvcf/BamToGvcf/c6c55d1d-7f26-4816-b268-10acfe409083/call-ScatterIntervalList/glob-cb4648beeaff920acb03de7603c06f98/41scattered.interval_list -I gs://broad-gotc-dev-cromwell-execution/ExomeGermlineSingleSample/873ad750-62ac-41a1-857a-a9388ad23392/call-UnmappedBamToAlignedBam/UnmappedBamToAlignedBam/3945800d-4668-41b0-9eb0-602c2bf9b209/call-GatherBamFiles/NA12878.bam -G StandardAnnotation -G AS_StandardAnnotaiton -new-qual`; where GATKjar is 4.0.10.1 in my case. My problematic output is:; `chr6 149638730 . G GTTT,<NON_REF> 0.13 . AS_RAW_BaseQRankSum=||;AS_RAW_MQ=0.00|0.00|0.00;AS_RAW_MQRankSum=||;AS_RAW_ReadPosRankSum=||;AS_SB_TABLE=0,0|0,0|0,0;ExcessHet=3.0103;MLEAC=1,0;MLEAF=0.500,0.00 GT:AD:DP:GQ:PL:SB 1/1:0,0,0:0:3:19,3,0,19,3,19:0,0,0,0`; which is missing DP, QD, and RAW_MQandDP. Let me know if you don't have access to the gotc-dev bucket.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447350938:1280,access,access,1280,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5434#issuecomment-447350938,1,['access'],['access']
Security,"This is a prototype of the basic infrastructure that must go in to make the junction tree based Haplotype finding work. I have pulled out a toggle for the HaplotypeCaller that that enables a separate ReadThreadingAssembler codepath for haplotype finding. Right now when this mode is enabled `ExperimentalReadThreadingAssembler` is used in conjunction with `JuncitonTreeKBestHalotypeFinder` to extract only haplotypes that show up in our junction trees with evidence of > 3 reads. This still poses problems with dangling end recovery as definitionally those branches never include complete junction tree data. . I will continue to work on this branch (as it is in a somewhat rough state still) but I would like to at least get some eyes on it before i get too deep in the weeds to at least validate the structural approach I have chosen. . Currently known issues in this branch: ; - Tests are failing due to resolution of non-unique reference sink vertexes, I would solicit help as to how best to resolve the case where junction trees point to both a reference stop allele and a continued path.; - There is at least one very degenerate edge case that might cause the code to hang, I would also ask after what is the best way to close out of looping assembly structures that never have reads to close them (i.e. a ""dangling end"" hom-var that happens to point to a non-unique reference base). ; - Probably after discussion the threshold for discarding junction trees will be changed to instead use paths from the discarded tree first. . Resolves #5925",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6034:789,validat,validate,789,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6034,1,['validat'],['validate']
Security,"This is an implementation of a pileup validation tool. Additionally, some testing utilities for creating reads with variants have been added.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3755:38,validat,validation,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3755,1,['validat'],['validation']
Security,This is exactly the sort of nightmare bug we get every java update. Just 1 isn't bad at all. I'm surprised replacing all the hashsets didn't work. It could come down to inadequate tiebreaking in a sort which falls back to identityHash. We saw that in a different bug recently. I'll take a look.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532701834:125,hash,hashsets,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532701834,1,['hash'],['hashsets']
Security,"This is meant as a group discussion that could happen several places, and here is as good as any. We know that shipping around the header is has a _huge_ cost. So, we need to find a way to effectively strip it from the `SAMRecord` without breaking it. I propose the following.; - Modify `SAMRecord` to use getter methods for the header; - Create a `HeaderSAMRecord` that extends `SAMRecord` and that has a static field for the header. This class would override `getHeader` to return the static; - Use `Broadcast` with `mapPartitions` to set the static on each worker. An alternative would be audit the field usage and do a combination of performing all necessary calls that require the header to when we load the reads and, if possible, making the still offending methods inaccessible. So, @tomwhite , @akiezun , @droazen , @lbergelson , @jean-philippe-martin , what do you all think?. I know @lbergelson previous expressed he didn't like the usage of statics for this purpose.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900:592,audit,audit,592,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900,1,['audit'],['audit']
Security,This is often needed since the docker image is big. Expose this parameter with a 20GB value,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3566:52,Expose,Expose,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3566,1,['Expose'],['Expose']
Security,"This is rebased off of https://github.com/broadinstitute/gatk/pull/3716, since it depends on code there. Hence, only the second commit needs to be reviewed in this PR. The code and tests are quite similar to that for PlotSegmentedCopyRatio/PlotACNVResults. However, I've changed the R scripts to be more efficient (WGS plots no longer take several hours). Furthermore, PlotModeledSegments is more flexible than PlotACNVResults in that it plots CR, AF, or both on the fly depending on the available inputs. I've also added some more input validation, changed some terminology, and moved over to data.table for reading TSVs in R.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3729:538,validat,validation,538,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3729,1,['validat'],['validation']
Security,This is required for some validation work we're currently doing.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1089:26,validat,validation,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1089,1,['validat'],['validation']
Security,"This is something we got to only in a rather basic way in GATK but is very useful to enable in order to save users from themselves. This would involve three components:. 1) Hard min/max values that correspond to limits beyond which values could cause errors/program failures; violation should throw a User Exception;. 2) Recommended min/max values that correspond to limits beyond which values do not make sense for a given analysis functionality for standard use cases; violation should log a WARN entry. 3) Behavior-disabling value if applicable. Let's say we have an argument that provides a threshold for filtering; and it takes min. 4, max. 20. We may want to set it up so that passing -1 disables the behavior controlled by the argument (so in the filtering case, ""-1"" means ""don't filter at all"") without tripping the min value check. . These should all be accessible to the GATKDoclet (or equivalent) for documentation purposes.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/143:864,access,accessible,864,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/143,1,['access'],['accessible']
Security,This looks like a bug. I'm not sure if the issue is in the HaplotypeCaller output or in the way CombineGvcfs is merging things. Could you run ValidateVariants on each of the vcfs and let us know if they pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6368#issuecomment-574336680:142,Validat,ValidateVariants,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6368#issuecomment-574336680,1,['Validat'],['ValidateVariants']
Security,"This looks like a good start! I'm not quite sure how you are planning to handle dictionary validation, specifically, but you can take a look at the CNV plotting tools (PlotDenoisedCopyRatios and PlotModeledSegments) to see what level of validation we currently do. We can discuss further in person if you like. (Also, note that those tools take a sequence dictionary as an input to specify which contigs should be plotted; typically, this will be a subset of the full dictionary that excludes alt contigs, etc. Requiring this sequence-dictionary input is somewhat vestigial; previous versions of the pipeline did not include dictionaries in the headers of all CNV data files. Part of making these tools into GATKTools could include switching over to -L to specify regions for plotting.). Finally, are the changes to `-imr` mentioned in #2471 going to be addressed in a separate issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-363209925:91,validat,validation,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4341#issuecomment-363209925,2,['validat'],['validation']
Security,"This looks like the auth service saw some transient error and instead of replying with a 503 (service temporarily unavailable), it replied with a 403 (forbidden). A workaround would be to retry on those. The side effect will be that if we genuinely do not have access, it'll take a bit longer to report it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3735#issuecomment-338778985:261,access,access,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3735#issuecomment-338778985,1,['access'],['access']
Security,This method (validateSequenceDictionaries) in GATKTool needs to be modified so that the vcf file names associated with each sequence dictionary are passed into validateDictionaries() to make error messages more useful.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/660:13,validat,validateSequenceDictionaries,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/660,2,['validat'],"['validateDictionaries', 'validateSequenceDictionaries']"
Security,This needs to happen for MAF too. . We should add a method `OutputRenderer::sanitizeField` that we can plug into the annotation process that will automatically sanitize each field for illegal characters as they are added to the output. This will require refactoring the `OutputRenderer::write` method to be concrete with a call to another write method and this sanitizeField method to get the benefits automatically for all OutputRenderers.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4693#issuecomment-383709501:76,sanitiz,sanitizeField,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4693#issuecomment-383709501,3,['sanitiz'],"['sanitize', 'sanitizeField']"
Security,This only works for the conventional gather. adding useConventionalGather argument to force using conventional gather. adding --ignoreSafetyChecks to skip pre-validating the headers. continuing the tradition of having no tests for this tool,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2736:159,validat,validating,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2736,1,['validat'],['validating']
Security,"This pr adds the subpopulation AC/AN/AF calculations.; It does this by taking in the ancestry table and making sublists of each---then passing that list of samples into the SelectVariants GATK tool. Updated Lucid chart here: https://lucid.app/lucidchart/fee376a4-4b72-481e-a239-a027f7f6ab1f/edit?page=CsG3hy3S1zEH#. Design Doc for this work:; https://docs.google.com/document/d/1FnPu_Jkz2O9rElApAQld0v6iBEFGe22dKarVWcwNxGI/edit. misc:; how should I add the VAT validation to the VAT pipeline? Should it run automatically?. Anvil data version of this table: spec-ops-aou:anvil_100_for_testing.vat_aug19. <img width=""1379"" alt=""Screen Shot 2021-08-11 at 5 38 22 PM"" src=""https://user-images.githubusercontent.com/6863459/129606564-bfc20a68-119a-4072-88b4-aeaf011cc965.png"">",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7399:461,validat,validation,461,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7399,1,['validat'],['validation']
Security,"This produces a resource that will be used as input to an upcoming tool to filter intervals based on these annotations (as well as coverage statistics). Currently, we have an external python script performing this step in the gCNV pipeline. I also updated the AnnotateIntervals task and calls in WDL, but these changes are untested; the reviewer should check carefully for typos. Currently, all annotations are of double type, but I've added code that can support all types supported by the TSV code as well. Additional tracks can also be added relatively easily. Currently, allowed annotations and their corresponding types are hardcoded; we could possibly move this information to the SAM-style header in the future. For the Umap hg19 k100 single-read mappability track and the segmental-duplication track used by the Talkowski lab, annotation of 1kb bins on hg19 takes less than a minute with the default feature lookahead (which is exposed as a parameter). I tested using the Umap multi-read mappability track (which is orders of magnitude larger, but is actually what is used in the external script), but this is much slower (documentation indicates that the single-read track should be used to dissuade this). We should evaluate whether or not using the single-read track suffices for filtering.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5162:936,expose,exposed,936,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5162,1,['expose'],['exposed']
Security,"This pulls the bulk of the pipeline into a separate subworkflow so that the validations (with the mixture samples) can be run. The mixtures have already been subset and tagged, which is why the rest of the pipeline needed to be extracted.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5708:76,validat,validations,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5708,1,['validat'],['validations']
Security,"This replaces a secret that requires a pr to fix, and updates the name of one of the others.; Requires 1 more step after this.; * Switch travis variable name from DOCKER_SERVICE_PASS -> DOCKER_SERVICE_TOKEN for clarity; * Replace gcloud encrypted key",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7521:237,encrypt,encrypted,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7521,1,['encrypt'],['encrypted']
Security,"This request comes from the forum: . Mutect2 accepts multiple _different_ tumor samples (from the same individual) and calls on each sample at the same time, much like in a time-course experiment. Relatedly, if it's not too much to ask, I'd like to be able to provide multiple `--germline-resource` VCFs. ---; @Sheila and @shlee,; Thank you so much for referring me to the informative article and discussion!; I can't say I fully understand the technical difficulties. But I understood it is nontrivial to implement and joint somatic variant calling should be different from the joint calling of haplotypecaller. I still think it might be worthwhile for Mutect2 to be able to call somatic variants jointly on multiple tumor samples from **an** individual. It would help track somatic variants of a person over time. By the way, the article mentioned that Mutect2 would run without a matched normal. I wonder if Mutect2 now supports the tumor only mode. I remember no variant passed filters in tumor only mode for an older version. (One the other hand, I now think tumor only calling with high false positives would be a privacy threat..). ![](https://public.media.smithsonianmag.com/legacy_blog/snowflake-growth-2.gif """"); Image credit: [Libbrecht lab](https://smithsonianmag.com/science-nature/the-art-and-science-of-growing-snowflakes-in-a-lab-180949243/). This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/comment/45571#Comment_45571",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4327:1128,threat,threat,1128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4327,1,['threat'],['threat']
Security,"This request was created from a contribution made by ABours on May 29, 2020 18:23 UTC. Link: https://gatk.broadinstitute.org/hc/en-us/community/posts/360067695771-GenotypeGvcfs-has-formatting-issues-in-both-v4-1-6-0-as-v4-1-7-0. --. Hi,. I'm using v4.1.6.0 of GenotypeGvcfs to make a vcf, out of whole genome data from 19 samples (following your recommendations). When I run ValidateVariants to check the output of GenotypeGvcfs I get a error message, which states that one or more of the ALT allele are actually not in the samples provided. A previous user already found a similar error in ValidateVariants (https://gatk.broadinstitute.org/hc/en-us/community/posts/360061452132-GATK4-RNAseq-short-variant-discovery-SNPs-Indels-), but then for Haplotypecaller, and you have opened a bugreport to add a feature to ValidateVariants: https://github.com/broadinstitute/gatk/issues/6553. However, it would be nice if you could actually investigate the formatting error. Unfortunately my formatting error isn't the same as reported in the other post. I have 105 error in which the 1st alternative allele is a spanning deletion and the 2nd (and 3rd) is either an indel or snp. It's true that the 2nd and 3rd allele is actually not found in my samples. I even have 7 occurances in which the 1st allele (spanning deletion) has allele frequency 1.00. my code is the following for GenotypeGVCFs:. java -Xms32G -Xmx32G -jar ${gatk4} GenotypeGVCFs -R ${ref} -V ${pipeline}/${name}\_v4.1.6.0.g.vcf.gz -O ${vcf}/${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list 2> ${log}/${name}\_v4.1.6.0\_genotype.log. for ValidateVariants:. java -Xms10G -Xmx10G -jar ${gatk4} ValidateVariants -R ${ref} -V ${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list --warn-on-errors 2> ${log}/${name}\_v4.1.6.0\_genotype\_valivar.log. the warning in ValidateVariants and the site look like this:. 14:12:15.126 WARN ValidateVariants - \*\*\*\*\* Input 1st\_v4.1.6.0.vcf.gz fails strict validation of type ALL: on",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6630:375,Validat,ValidateVariants,375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6630,3,['Validat'],['ValidateVariants']
Security,"This request was created from a contribution made by Francesco Mazzarotto on March 23, 2022 14:16 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/4892502642075-FilterMutectCalls-haplotype-filter-value-assigned-to-variants-with-different-PGT-tag](https://gatk.broadinstitute.org/hc/en-us/community/posts/4892502642075-FilterMutectCalls-haplotype-filter-value-assigned-to-variants-with-different-PGT-tag). \--. Hello,. I am using GATK v4.2.5.0 to process tumor-only samples sequenced with WES. In a sample, one variant that has been detected with Sanger sequencing (chr14-45137087-C-T) gets filtered out as non-PASS (also) because of the 'haplotype' filter value. As far as the 'haplotype' filter value is concerned, the 'guilty' variant seems to be another SNP 3bp upstream (chr14-45137084-C-T). There are no other variants called within 100bp of the Sanger-validated one (see below). chr14    45136964    .    C    T    .    haplotype;weak\_evidence    AS\_FilterStatus=weak\_evidence;AS\_SB\_TABLE=3,0|1,0;DP=4;ECNT=2;GERMQ=25;MBQ=41,37;MFRL=360,390;MMQ=60,60;MPOS=69;POPAF=7.30;ROQ=17;TLOD=3.20    GT:AD:AF:DP:F1R2:F2R1:PGT:PID:PS:SB    0|1:3,1:0.333:4:1,0:1,1:0|1:45136962\_C\_T:45136962:3,0,1,0 ; ; chr14    45137084    .    C    T    .    germline;haplotype;panel\_of\_normals    AS\_FilterStatus=SITE;AS\_SB\_TABLE=9,1|12,5;DP=27;ECNT=2;GERMQ=1;MBQ=41,41;MFRL=297,326;MMQ=60,60;MPOS=45;PON;POPAF=0.830;ROQ=90;TLOD=59.93    GT:AD:AF:DP:F1R2:F2R1:PGT:PID:PS:SB    0|1:10,17:0.615:27:4,13:4,4:0|1:45137084\_C\_T:45137084:9,1,12,5 ; ; chr14    45137087    .    C    T    .    germline;haplotype    AS\_FilterStatus=SITE;AS\_SB\_TABLE=12,5|9,1;DP=27;ECNT=2;GERMQ=1;MBQ=41,41;MFRL=326,297;MMQ=60,60;MPOS=44;POPAF=2.33;ROQ=93;TLOD=31.76    GT:AD:AF:DP:F1R2:F2R1:PGT:PID:PS:SB    1|0:17,10:0.385:27:13,4:4,6:1|0:45137084\_C\_T:45137084:12,5,9,1 ; ; chr14    45149295    .    AC    A    .    haplotype;weak\_evidence    AS\_FilterStatus=weak\_evidence;AS\_SB\_TABLE=0,0|0,0;DP=1;ECNT",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7809:878,validat,validated,878,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7809,1,['validat'],['validated']
Security,"This request was created from a contribution made by Joyce Anon on April 25, 2022 06:30 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/5573282748699-Error-ShouldNeverReachHereException-FuncotationMap-in-FilterFuncotations](https://gatk.broadinstitute.org/hc/en-us/community/posts/5573282748699-Error-ShouldNeverReachHereException-FuncotationMap-in-FilterFuncotations). \--. FilterFuncotations stops with an error. The input file with the reference genome seems to pass ValidateVariants (no errors). It looks like ""FuncotationMap"" doesn't have enough values to go with the keys. I started with a .vcf file downloaded from Nebula Genomics, and sequentially used CNNScoreVariants, FilterVariantTranches (CNN\_1D), and Funcotator, with default settings. I am trying to find the most pathogenic variants. I considered using FilterVcf to remove synonymous and intron variants, but it doesn't look like it can do that. So then I tried FilterFuncotations, but it returns an error. What I want is some way to sort the variants by severity, to find the most pathogenic ones, but I don't know how to do that. GATK version: 4.2.6.1 ; ; Java runtime: OpenJDK 64-Bit Server VM v11.0.14.1+1-Ubuntu-0ubuntu1.20.04. Excerpt: ; ; \[April 25, 2022 at 2:00:35 AM EDT\] org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations done. Elapsed time: 0.03 minutes. ; ; Runtime.totalMemory()=319815680 ; ; org.broadinstitute.hellbender.exceptions.GATKException$ShouldNeverReachHereException: Cannot parse the funcotation attribute.  Num values: 31   Num keys: 53. Copied from the terminal: ; ; (gatk) aru@BioinformaticsVM:/mnt/sdb/gatk$ ./gatk FilterFuncotations --allele-frequency-data-source gnomad -O ./output/nebulaFilterFuncotations.vcf --ref-version hg38 -V ./output/nebulaFuncotatorAnnotated.vcf --java-options '-DGATK\_STACKTRACE\_ON\_USER\_EXCEPTION=true' ; ; Using GATK jar /mnt/sdb/gatk/gatk-package-4.2.6.1-local.jar ; ; Running: ; ;     java -Dsamjdk.use\_async\_io\_read\_samtools=f",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7865:491,Validat,ValidateVariants,491,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7865,1,['Validat'],['ValidateVariants']
Security,This retains the commit hash and commit number delta part in the version.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4118:24,hash,hash,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4118,1,['hash'],['hash']
Security,"This set of optimizations brings the GATK4 HaplotypeCaller performance into line; with GATK3.x performance. Note that HaplotypeCallerSpark is not touched by this PR (that is for a future PR). Summary of changes:. * AssemblyRegionWalker: query all intervals on each contig simultaneously, rather than individually; * GATKRead: Cache adaptor boundary, soft start/end, and cigar length; * GATKRead: add getBasesNoCopy() / getBaseQualitiesNoCopy(); * ReadPileup: speed up stratified constructor; * LIBS.lazyLoadNextAlignmentContext(): don't keep pileup elements unnecessarily separated by sample during pileup creation; * Restore faster GATK3 version of ReferenceConfidenceModel.sumMismatchingQualities(); * RefVsAnyResult: nest within ReferenceConfidenceModel, and allow direct field access; * Remove redundant getBases() call in ReadThreadingGraph; * Fix BaseGraph Utils.validateArg() call; * ReadPileup: replace Collections.unmodifiableList(pileupElements).iterator() with direct return of an iterator that forbids removal; * Kill expensive bounds checking in GATKRead getBase()/getBaseQuality()/getCigarElement(); * Kill nonNull checks in PileupElement; * Kill expensive PileupElement and ReadPileup arg validation; * GATKRead adapter: clear cached values upon mutation",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4031:781,access,access,781,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4031,3,"['access', 'validat']","['access', 'validateArg', 'validation']"
Security,This should http access more seem less in a lot of places. . The way this handles query parameters is not ideal for signed url cases so we'll need to revisit that.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8626:17,access,access,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8626,1,['access'],['access']
Security,"This should resolve our git-lfs quota issues, since the quotas; for unauthenticated requests are much stingier than those for; authenticated requests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3179:127,authenticat,authenticated,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3179,1,['authenticat'],['authenticated']
Security,This simplifies the code and didn't affect specificity in our validations. @takutosato can you review this?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3243:62,validat,validations,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3243,1,['validat'],['validations']
Security,This test exposed a bug in Spark Dataflow which is being fixed by https://github.com/cloudera/spark-dataflow/pull/57,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/599:10,expose,exposed,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/599,1,['expose'],['exposed']
Security,"This test input is malformed. When I try to read it with the Dataflow code, I get this error:. htsjdk.samtools.SAMFormatException: SAM validation error: ERROR: Record 129, Read name 809R9ABXX101220:5:6:17918:145992, Mate Alignment start should be 0 because reference name = *. Here's the corresponding read:. 809R9ABXX101220:5:6:17918:145992 97 17 69400 37 67M9S \* 71202348 0 ACTCCCCACCTTACCTGACTCCTTCCAGGGTTTGTCGCCTTTCCGGTCCCTGACCCCAGTGGATGGGAGTCTGTCC ?ABDDEEABEECBDBDAB=DEDCDEEBFADABCEAD?EEEDCFE?ABEEE@FCDEEEBF@F?C<E@########## MD:Z:67 PG:Z:BWA RG:Z:809R9.5 AM:i:0 NM:i:0 SM:i:37 MQ:i:0 OQ:Z:DGEGGGGBFGGGGGDF8@@FGFBGGGBGCECCEEDFGGGFGFGGGBDGGF9DBFFGFBF;@>A4@@########## UQ:i:0. @droazen confirms that Picard's ValidateSAMFile utility reports that this bam has multiple errors. We should replace it with a clean input, and update the ""known good"" output accordingly.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/568:135,validat,validation,135,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/568,2,"['Validat', 'validat']","['ValidateSAMFile', 'validation']"
Security,"This tool creates a data file containing a map from reference accessions to NCBI taxonomic IDs, and the taxonomic tree, which includes parent/child relationships as well as other metadata like the reference length and scientific name of each node. . The input files are available from the NCBI FTP server. One is a ""catalog"" file that gives the mapping from reference contig accession to taxonomic ID. There are catalog files available for RefSeq and for Genbank - the tool can take in either. . There are two other files - a ""names"" and ""nodes"" file contained in a single tarball - that contain the scientific names of each node and parent/child relationships. For convenience, the tool takes in the path to the tarball and extracts the two files automatically. The resulting database size is minimized using the given reference. Once the full NCBI taxonomy tree is built, any organism node that is neither in the reference nor an ancestor of a reference organism is removed. The resulting datafile is read in by the ClassifyReads tool (coming in a future PR) to assign relative abundance scores to each taxonomic node. Also made some changed to the way the PSTree and PSTreeNode are serialized (using Kryo read/writeObject instead of read/writeClassAndObject) so that loading old files won't break if these classes change packages.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2730:62,access,accessions,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2730,2,['access'],"['accession', 'accessions']"
Security,"This update of genomicsDB includes the option to not validate the sampleMapFile against the actual headers. Choosing to not validate allows us to save time at the start by not having to open each file on the initial header construction when using --`sampleMapFile`. closes #2713, closes #2714, and closes #2715. It also includes an update to have GenomicsDB capture RSId's by default, (closes #2636) which should make diffs easier on our end at a slight cost of storage size. If that's an issue we may need to revisit the default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2733#issuecomment-306254281:53,validat,validate,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2733#issuecomment-306254281,2,['validat'],['validate']
Security,"This user is receiving an empty output file when running GenomicsDBImport. The user ran ValidateVariants on the input files which was successful. . This request was created from a contribution made by Enrico Cocchi on July 14, 2021 10:31 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/4403568031515-Mutect2-PoN-GenomicsDBImport-creates-empty-DB](https://gatk.broadinstitute.org/hc/en-us/community/posts/4403568031515-Mutect2-PoN-GenomicsDBImport-creates-empty-DB). \--. I am trying to follow GATK 4.2.0 best-practice guidelines for  \[Mutect2 PoN creation\](/hc/en-us/articles/360035531132--How-to-Call-somatic-mutations-using-GATK4-Mutect2). I called variants in my samples as recommended with:. gatk Mutect2 \\ ; ; \-R ${REF} \\ ; ; \-L ${EXOME\_INPUT\_INTERVALS} \\ ; ; \-I ${BAM} \\ ; ; \--sequence-dictionary ${DICT} \\ ; ; \--max-mnp-distance 0 \\ ; ; \-O ${SAMPLE\_NAME}.mutect2.vcf. but I see that the tool is unable to create a proper  `GenomicsDB`  through the  \[GenomicsDBImport\](/hc/en-us/articles/360057439331-GenomicsDBImport) command. Even focusing the analysis on a little interval in which I know I have variants in the Mutect2 generated VCFs, here the  `SelectVariants`  output from one of the VCF I'll use in the  `GenomicsDBImport`  command:. #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT XXX ; ; 1 883625 . A G . . AS\_SB\_TABLE=0,0|12,41;DP=54;ECNT=1;MBQ=0,33;MFRL=0,260;MMQ=60,60;MPOS=31;POPAF=7.30;TLOD=182.40 GT:AD:AF:DP:F1R2:F2R1:SB 0/1:0,53:0.981:53:0,26:0,26:0,0,12,41. \`\`. and here the command to generate the DB:. gatk \ ; . \--java-options ""-Djava.io.tmpdir=/nfs/projects/CNV\_WGS/CHIP-PON-DB/TMP-DIR"" \\ ; ; GenomicsDBImport \\ ; ; \-R $REF \\ ; ; \-L 1:883600-883650 \\ ; ; \--genomicsdb-workspace-path $OUT \\ ; ; \--tmp-dir /nfs/projects/CNV\_WGS/CHIP-PON-DB/TMP-DIR \\ ; ; \-V /nfs/projects/CNV\_WGS/Mutetc2-PON-OUT/Roche-M/fetal0003D.Roche-M.mutect2.vcf -V /nfs/projects/CNV\_WGS/Mutetc2-PON-OUT/Roche-M/fetal0020D.Roche-M.mutect2.vcf -V ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7362:88,Validat,ValidateVariants,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7362,1,['Validat'],['ValidateVariants']
Security,"This user received an ArrayIndexOutofBoundsException error when running GenotypeGVCFs. The user confirmed that the headers of their vcf files and the their fasta files have matching IDs and contig lengths. The user also tried running ValidateVariants and received the following error: A USER ERROR has occurred: Input MA1.g.vcf fails strict validation of type ALL: one or more of the ALT allele(s) for the record at position 1A:3456221 are not observed at all in the sample genotypes. This request was created from a contribution made by Alon Ziv on July 07, 2021 12:21 UTC. . Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/4403256366107--java-lang-ArrayIndexOutOfBoundsException-32772-while-running-GenotypeGVCFs](https://gatk.broadinstitute.org/hc/en-us/community/posts/4403256366107--java-lang-ArrayIndexOutOfBoundsException-32772-while-running-GenotypeGVCFs). \--. i don't get an error but the massge  java.lang.ArrayIndexOutOfBoundsException: 32772 ; ; i use : GATK version used: 4.2.0 ; ; b) Exact command used  this line for Geomics DBImport. gatk GenomicsDBImport -V MA1.g.vcf -V MA2.g.vcf -V MA3.g.vcf -V MH1.g.vcf -V MH2.g.vcf -V MH3.g.vcf -V F4\_1.g.vcf -V F4\_2.g.vcf -V F4\_3.g.vcf --genomicsdb-workspace-path my\_database1AB -L 1A -L 1B -L 2A -L 2B -L 3A -L 3B -L 4A -L 4B -L 5A -L 5B -L 6A -L 6B -L 7A -L 7B. and this for GenotypeGVCFs. gatk --java-options ""-Xmx12g -Xms12g"" GenotypeGVCFs -R Triticum\_dicoccoides.WEWSeq\_v.1.0.dna.toplevel.fa -V gendb://my\_database -O output.vcf.gz --new-qual --tmp-dir temp/. c) Entire error log:. Using GATK jar /home/alonzi/miniconda3/envs/rna-seq/share/gatk4-4.2.0.0-1/gatk-package-4.2.0.0-local.jar ; ; Running: ; ; java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -Xmx12g -Xms12g -jar /home/alonzi/miniconda3/envs/rna-seq/share/gatk4-4.2.0.0-1/gatk-package-4.2.0.0-local.jar GenotypeGVCFs -R Triticum\_d",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7348:234,Validat,ValidateVariants,234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7348,2,"['Validat', 'validat']","['ValidateVariants', 'validation']"
Security,"This was unearthed by #7542 and is plumbed correctly in this PR. Note that we need to still address the broader issue of hooking arguments to GenomicsDB - #6456 . GenomicsDB exposes a whole set of export arguments all added in response of gatk requests, some of them are hardcoded by certain tools(e.g GenotypeGVCFs uses --max-alternate-alleles while SelectVariants does not), many are unused.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7576:174,expose,exposes,174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7576,1,['expose'],['exposes']
Security,"To be clear, this will work perfectly fine as long as you have enough space in /dev/shm---which is typically true everywhere outside of our default Docker container. I'm loath to cripple a tool just because of limitations that are fundamentally elsewhere...let's just address those in the appropriate places. (Furthermore, I'm especially loath to write a plotting tool that takes ~5 minutes to generate a plot!) And yes, while it is not great that data.table forces us to use /dev/shm, I think `fread(""grep ..."")` is relatively standard. If `--shm-size` is indeed not exposed, why doesn't the Google backend scale /dev/shm or other tmpfs space with requested machine memory?. If there really is no other way around it, then all we're doing is filtering out the lines beginning with `@`. We could do this first by calling system commands within R to write to a temporary file, and then reading that back in with fread. This seems hacky to me, but I've confirmed that it works within the Docker. This will solve our immediate problem, but I still think it's worth taking a look at those other limitations elsewhere now as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357337827:568,expose,exposed,568,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357337827,2,['expose'],['exposed']
Security,"To clarify what needs to be done here:. -Add a new `--javaOptions` argument to `gatk-launch`. -When running with a packaged local jar, the value of `--javaOptions` should be injected into the command line built by `formatLocalJarCommand()`. -When running with the ""wrapper script"" (as a result of building with `./gradlew installDist` instead of `./gradlew localJar`), propagate the value of `--javaOptions` to the `JAVA_OPTS` environment variable the wrapper script expects. You can inspect the wrapper script itself by running `./gradlew installDist` and then examining `build/install/gatk/bin/gatk`. -When running on Spark, you'll need to add the `--javaOptions` to `spark.driver.extraJavaOptions` and `spark.executor.extraJavaOptions`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2694#issuecomment-305007868:174,inject,injected,174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2694#issuecomment-305007868,1,['inject'],['injected']
Security,"To the question on building it: I guess it isnt really a problem with your build per-se, but rather it seems to make a variety of assumptions or requirements on the environment that were difficult to replicate on our cluster (where i lack admin privs). Using your docker image was the faster way i could find to replicate the needed environment. Issues I hit included: 1) needed git lfs installed (on cluster i lack sudo/apt access), 2) gradle complained about building on the lustre filesystem, so i needed to move to other disks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7675#issuecomment-1042026487:425,access,access,425,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7675#issuecomment-1042026487,1,['access'],['access']
Security,"To update:. Chris and I just tested copying the bam and indices (3 files) from `gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1` (note that Chris reports it works on this bucket) to a just-created ""directory"" `gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1/tmp`, and it fails. Also an interested behavior we noticed, and a suspicion that is hard to test (due to lack of access to time machine), that this might be related when the ""directory"" is created: any directory freshly created after October 2018 might be susceptible to this, which is also the month when newer (>66) release of NIO became available.; In the mean time, if one does ; `gsutil ls -L gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1`; you'd get, at the last line, `TOTAL: 3 objects`, which is expected, whereas if one does; `gsutil ls -L gs://broad-dsde-methods-sv/samples/G94797_CHM_MIX/WGS1/tmp`; guess what: `TOTAL: 4 objects`!; It seems to list the ""directory"" itself as an object as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-491969032:385,access,access,385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5935#issuecomment-491969032,1,['access'],['access']
Security,"Totally get it now; with these changes, `assertEqualTextFiles` is getting `LinkedList`s from `XReadLines`, rather than `ArrayList`s, which it used to get from the trailing `stream.collect` calls. Since it then uses indexed access to iterate thorough the two lists zip style, the serial `get` calls are super slow on even moderately sized (100k) linked lists. Should be an easy fix. @jean-philippe-martin let me know if you want me to make this change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167:223,access,access,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462784167,1,['access'],['access']
Security,"Touch/Reference_data_b38/gnomad.genomes.v3.1.2.sites.chr3.vcf.bgz; 10:58:19.971 INFO FeatureManager - Using codec VCFCodec to read file file:///run/media/riadh/My%20Book_From%20Eiklid/Analysis/gatk-4.2.4.1/ensembl-vep/PE69_chr3.vcf; 10:58:20.063 INFO VariantAnnotator - Done initializing engine; 10:58:20.091 WARN VariantAnnotatorEngine - The requested expression attribute ""gnomad.ALT"" is missing from the header in its resource file gnomad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); 	at org.broadinstitute.hellben",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:3972,validat,validateGenotypes,3972,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['validat'],['validateGenotypes']
Security,Trace:. ...; 11:54:40.426 [ERROR] [system.err] [bwt_restore_sa] SA-BWT inconsistency: seq_len is not the same. Abort!; ... 11:54:40.433 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':test'.; 11:54:40.433 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:98); 11:54:40.433 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:68); 11:54:40.433 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62); 11:54:40.433 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58); 11:54:40.433 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:88); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:46); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:51); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTas,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2802:1149,Validat,ValidatingTaskExecuter,1149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2802,1,['Validat'],['ValidatingTaskExecuter']
Security,"TrainVariantAnnotationsModel:. Trains a model for scoring variant calls based on site-level annotations. TODOs:. - [x] Integration tests. Exact-match tests for (non-exhaustive) configurations given by the Cartesian product of the following options:; * non-allele-specific vs. allele-specific; * SNP-only vs. SNP+INDEL (for both of these options, we use extracted annotations that contain both SNP and INDEL variants as input); * positive (training with *.annot.hdf5) vs. positive-unlabeled (training with *.annot.hdf5 and *.unlabeled.annot.hdf5); * Java Bayesian Gaussian Mixture Model (BGMM) backend vs. python sklearn IsolationForest backend; (BGMM tests to be added once PR for the backend goes in.); - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs.; - [x] Parameter/mode validation.; - [x] Refactor main code block for model training; it's a bit monolithic and procedural now.; - [x] Decide on behavior for ill-behaved annotations. E.g., all missing, zero variance. Future work:. - [ ] We could allow subsetting of annotations here, which might allow for easier treatment of ill-behaved annotations. However, I'd say enabling workflows where the set of annotations is fixed is the priority.; - [ ] We could do positive-unlabeled training more rigorously or iteratively. Right now, we essentially do a single iteration to determine negative data. This could perhaps be preceded by a round of refactoring to clean up model training and make it less procedural.; - [ ] Automatic threshold tuning could be built into the tool, see #7711. We'd probably have to introduce a ""validation"" label. Perhaps it makes sense to keep this sort of thing at the workflow level?; - [ ] In the positive-negative framework enforced by the Java code in this tool, a ""model"" is anything that assigns a score, we fit two models to different subsets of the data, and then take the difference of the two scores. While the python backend does give some freedom to specify a model, future developers may want",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948369:791,validat,validation,791,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948369,1,['validat'],['validation']
Security,"Travis is terminating our cron job because there is too much log output. ; It seems to be thousands of repetitions of:. ```; 21:44:23.077 WARN DefaultDocWorkUnitHandler - Could not access the field definition for backtrace while searching for SHOW_HIDDEN, presumably because the field is inaccessible; ```. Possibly related to our recent inclusion of picard in our doc output?. See: https://travis-ci.org/broadinstitute/gatk/jobs/289240692",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3710:181,access,access,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3710,1,['access'],['access']
Security,"Two .vcf.idx files used by the haplotype caller integration test had; file name lengths > 144. This is incompatible with ecryptfs, which is; commonly used for encrypted home directories on linux. Renaming the; .vcf and .vcf.idx files and updating references to them fixed the; problem. Fixes #4718.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4736:159,encrypt,encrypted,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4736,1,['encrypt'],['encrypted']
Security,"UFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned;",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1892,Validat,ValidateSamFile,1892,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"UIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start a",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1646,Validat,ValidateSamFile,1646,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"UMINA.library.000000000-BCFDC.1.1.sorted.bam --MODE SUMMARY --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --INDEX_VALIDATION_STRINGENCY EXHAUSTIVE --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --SKIP_MATE_VALIDATION false --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false; [Thu Mar 07 16:08:24 UTC 2019] Executing as mpmachado@lx-bioinfo02 on Linux 2.6.32-696.23.1.el6.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_191-8u191-b12-0ubuntu0.16.04.1-b12; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.0.0; WARNING 2019-03-07 16:08:24 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2019-03-07 16:10:25 SamFileValidator Validated Read 10,000,000 records. Elapsed time: 00:02:00s. Time for last 10,000,000: 120s. Last read position: chr9:32,633,613; INFO 2019-03-07 16:12:22 SamFileValidator Validated Read 20,000,000 records. Elapsed time: 00:03:58s. Time for last 10,000,000: 117s. Last read position: chrM:11,340; No errors found; [Thu Mar 07 16:13:05 UTC 2019] picard.sam.ValidateSamFile done. Elapsed time: 4.79 minutes.; Runtime.totalMemory()=2602041344; Tool returned:; 0; ```. But when run BaseRecalibrator got the _fromIndex toIndex_ error:; `gatk BaseRecalibrator --input sorted.bam --output sorted.baserecalibrator_report.txt --reference GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.bowtie_index.fasta --use-original-qualities true --known-sites snp151common_tablebrowser.bed.bgz --known-sites snp151flagged_tablebrowser.bed.bgz`; ```; ERROR: return code 3; STDERR:; 15:46:35.795 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.1.0.0-local.jar!/com/intel/gkl",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5807:1907,Validat,Validated,1907,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5807,1,['Validat'],['Validated']
Security,Undisabling/fixing tests for ValidateVariants,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/832:29,Validat,ValidateVariants,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/832,1,['Validat'],['ValidateVariants']
Security,Unexpected behavior for --validation-type-to-exclude argument in ValidateVariants.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4642:26,validat,validation-type-to-exclude,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4642,2,"['Validat', 'validat']","['ValidateVariants', 'validation-type-to-exclude']"
Security,"Unfortunately, projects like TCGA with BAMs from different sequencing centers do not use the exact same sequence dictionary across them. I've relaxed validation in cases where dictionaries are checked across different BAMs so that only a warning is thrown; however, cases where dictionaries should arise from the same BAM still throw an exception.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4758:150,validat,validation,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4758,1,['validat'],['validation']
Security,"Unit tests for tool X should not rely on the behavior of instanceMain or doWork in tool Y. . In particular, unit tests that involve comparing/validating outputs should not reference CLPs like CompareSAMs or ValidateSamFile directly. Instead, these CLPs should just be thin wrappers around other classes that have the actual logic. This is already the case for ValidateSamFile, which is just a wrapper for SamFileValidator in HTSJDK. CompareSAMs should be refactored to match this.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/145:142,validat,validating,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/145,3,"['Validat', 'validat']","['ValidateSamFile', 'validating']"
Security,"Unless, that is, we want to use the API key to allow non-logged-in access to public data?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288549673:67,access,access,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288549673,1,['access'],['access']
Security,"Unlike the other validation rules, this does not test the validity of the VAT, but whether the pipeline completed as we expected it to--so I have added this as the singular test that runs during the pipeline. Validation Rule 2: The number of passing variants in GVS matches the number of variants in the VAT. Please note that we are counting the number of variants in GVS, not the number of sites, which may add a difficulty to this task. Another way to phrase it: ""If I were to make a sites only VCF of GVS and split each passing variant into it's own line, that number should equal the number of unique VIDs in the VAT."". Measure number of unique variants in sites only VCF that is generated. We don't want to count filtered variants so we can't count the GVS table. NOTE:. this pr also has some general cleanup as per discussion with Andrea. ; where would y'all suggest I put the template file for the custom annotations?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7374:17,validat,validation,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7374,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,Update GATK dependencies to patch security vulnerabilities,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8352:34,secur,security,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8352,1,['secur'],['security']
Security,Update SV split-read strand validation and clustering,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8378:28,validat,validation,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8378,1,['validat'],['validation']
Security,Update ValidateSamFileIntegrationTest once htsjdk #369 CRAM bug fix is available,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1138:7,Validat,ValidateSamFileIntegrationTest,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1138,1,['Validat'],['ValidateSamFileIntegrationTest']
Security,"Update dependencies to address security vulnerabilities, and add a security scanner to build.gradle",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8607:31,secur,security,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8607,2,['secur'],['security']
Security,"Update: I made a list of particularly bad intervals for the DREAM4 and 20-plex Hapmap bams by scattering 500 ways, choosing the 20 slowest jobs (weighting by an empirical 3x slowness factor for jobs on nodes that couldn't use AVX PairHMM acceleration), scattering again etc to obtain 100 or so intervals of roughly 200 bp that took long. Then I confirmed that the slowness had nothing to do with SGE or cromwell (it shouldn't, because I was getting runtime from the GATK output log, not the cromwell log, but just in case. . .) by re-running each interval on gsa5. In *every* case, the slow intervals had extremely deep coverage (2,000 - 30,000) due to mapping error. Even after filtering to MQ == 60, the high coverage usually remained, although it often decreased significantly. In addition to the extreme depth, the only other sign was a significant proportion of reads with multiple SNVs relative to the reference. Unfortunately, something cheap to compute, like CIGAR complexity, was often not a sign, because many CIGARs were eg 101M, with many of the M's coming from SNVs. One quick solution would be to completely skip calling on regions with extremely high depth. It's hard to imagine being able to trust any calls from them. Another option is MQ-based downsampling, for example downsampling to the 1000 reads with the best MQ. Some people might like the downsampling option for the secure feeling of not losing sensitivity, although realistically those regions are so terrible that this security is an illusion. The only real protection is a more complete reference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2975#issuecomment-309565338:1392,secur,secure,1392,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2975#issuecomment-309565338,2,['secur'],"['secure', 'security']"
Security,Update: the cfDNA validation is all set up.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2942#issuecomment-357065450:18,validat,validation,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2942#issuecomment-357065450,1,['validat'],['validation']
Security,"Update:; - [ ] A cool name! (Marduk, Clarendon, NeuroVar) ? maybe I'll do a slack poll of dsde methods?; - [x] Model training script (in Python, eventually in Java); - [x] Pretrained model for WGS; - [x] Pretrained model for WEx (still being validated and was only trained on NA12878); - [x] Model inference and VCF annotation (in Java); - [x] Solution for applying filters based on CNN score cutoff (tranches.py script); - [ ] Alternate joint calling WDL? Or for re-filtering? (ideally with a $$$ estimate); - [ ] Performance optimizations?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4225#issuecomment-363436039:242,validat,validated,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4225#issuecomment-363436039,1,['validat'],['validated']
Security,"Updates (EchoCallset Version):. Changes to scatter width of VCFs generated has changed the amount of data generated in tests, so need to update truth; Adding a new field to extracted VCF Header EXCESS_ALLLELES and that will break the tests.; And why not validate our VCFs for jollies.; Updates 'truth' path for data to match these changes. Integration tests failed due to different number of output VCFs now. So I cherry-picked Miguel's commit on ah_var_store that changed the scatter.; Integration tests *still* [failing](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/8f7b0cc9-4a31-404b-99b3-89e182707e8b) due to the change in VCF Header:. > 6,7d5; < ##FILTER=<ID=high_CALIBRATION_SENSITIVITY_INDEL,Description=""Site failed INDEL model calibration sensitivity cutoff (0.99)"">; < ##FILTER=<ID=high_CALIBRATION_SENSITIVITY_SNP,Description=""Site failed SNP model calibration sensitivity cutoff (0.997)"">; 9c7; < ##FORMAT=<ID=FT,Number=1,Type=String,Description=""Genotype Filter Field"">; ---; > ##FORMAT=<ID=FT,Number=1,Type=String,Description=""Sample Genotype Filter Field"">; 3388a3387,3388; > ##high_CALIBRATION_SENSITIVITY_INDEL=Sample Genotype FT filter value indicating that the genotyped allele failed INDEL model calibration sensitivity cutoff (0.99); > ##high_CALIBRATION_SENSITIVITY_SNP=Sample Genotype FT filter value indicating that the genotyped allele failed SNP model calibration sensitivity cutoff (0.997)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8848:254,validat,validate,254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8848,1,['validat'],['validate']
Security,"Updates:; - Changes to scatter width of VCFs generated has changed the amount of data generated in tests, so need to update truth; - Adding a new field to extracted VCF Header `EXCESS_ALLLELES` and that will break the tests.; - And why not validate our VCFs for jollies.; - Updates 'truth' path for data to match these changes. Integration Tests:; Passing test against Chr20/X/Y [Here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/985fbc06-36ed-4006-9703-0b86577f704c); Passing test against All Chromosomes [Here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/9d473c81-4742-4188-bc70-1e9371bfcc11)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8846:240,validat,validate,240,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8846,1,['validat'],['validate']
Security,"Upgrading htsjdk to 2.21.0. . This includes a change that relaxes restrictions on loading vcfs with sequence dictionaries that are missing lengths. This effected one of the tests which I changed a bit. We could also implement blanket ban on sequence dictionaries with missing lengths in our sequence dictionary validation code, but we currently allow them for sam/bam as far as I can tell and have tests that take them into account.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6250:311,validat,validation,311,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6250,1,['validat'],['validation']
Security,Upgrading to Spark 3.3 (switches to log4j 2.x) when it's released would be ideal since it would solve the security issue mentioned [here](https://gatk.broadinstitute.org/hc/en-us/community/posts/4592331786651-vulnerability-issue-for-gatk-package-4-2-5-0-local-jar),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6671#issuecomment-1155747154:106,secur,security,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6671#issuecomment-1155747154,1,['secur'],['security']
Security,"Upon further investigating, the builds are indeed there. Dockerhub is deprecating their build security scan feature, and in the meantime it only allows one scan of an image a day. Because we tag each image with a different name they show up in the nightly build repository as being unscanned and thus get binned at the bottom of the page (after scrolling through everything since the beginning of time) to view the unscanned images.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4454#issuecomment-368648512:94,secur,security,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4454#issuecomment-368648512,1,['secur'],['security']
Security,"Use SampleLocatableMetadata if you want CombineSegmentBreakpoints to only operate on segment files from a single sample. It's conceivable that you want it to be more flexible, in which case I would use LocatableMetadata. Also, go ahead and move the collection class into the collection package, rather than expose the abstract classes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3995#issuecomment-352762883:307,expose,expose,307,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3995#issuecomment-352762883,1,['expose'],['expose']
Security,Use more secure HTTPS URL in GitHub description,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3211:9,secur,secure,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3211,1,['secur'],['secure']
Security,"Use setHeaderStrict, which validates the record's reference and mate reference against the new header. Requires disabling the ADAM test in MeanQualityByCycleSparkIntegrationTest due to https://github.com/broadinstitute/gatk/issues/1540.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1541:27,validat,validates,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1541,1,['validat'],['validates']
Security,"User Question: I'm trying to speed up the process of calling variants using SPARK. I have access to a slurm HPC cluster, so I guess it's not that straightforward to run GATK in a proper distributed master-slave architecture (if there is any tutorial on how to setup slurm jobs to use GATK Spark tools on multiple nodes I would appreciate it a lot). ; Therefore, I run GATK in local mode with some SPARK threads, eventually speeding up the process by parallelising the number of samples processed simultaneously with GNU parallel. But then, I'm having troubles because some samples crash due to SPARK errors. Perhaps you could send my logs to the developers ? I'm trying to run 8 parallel GATk jobs (8 samples) using 5 Spark cpus on each in a node with 40 cpus. . Best,; Pedro. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/comment/56193#Comment_56193",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5717:90,access,access,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5717,1,['access'],['access']
Security,"User Report:. Hi,. I'm trying to run gatk MarkDuplicatesSpark (v 4.1.4.1) locally, so not on a spark cluster, and provided the option --conf 'spark.executor.cores=4' to tell MarkDuplicatesSpark to use only 4 cores on the machine. However when I check the system load with e.g. top I see that all 44 cores of the system are used by MarkDuplicatesSpark. What am I doing wrong?. command:; gatk MarkDuplicatesSpark \; --tmp-dir /local/scratch/tmp \; -I Control_aligned.bam \; -O Control_aligned_sort_mkdp.bam \ ; -M Control_aligned_sort_mkdp.txt \; --create-output-bam-index true \; --read-validation-stringency LENIENT \; --conf 'spark.executor.cores=4'. ------------------------------------------------------------------. **Solution** is to use this argument: `--spark-master local[2] -> ""Run on the local machine using two cores""`. More details in this doc: https://software.broadinstitute.org/gatk/documentation/article?id=11245. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/24671/markduplicatesspark-not-respecting-conf-spark-executor-cores-4-option/p1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6324:586,validat,validation-stringency,586,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6324,1,['validat'],['validation-stringency']
Security,"User has tested GATK3.7 HaplotypeCaller and GATK4 HaplotypeCaller. GATK4 takes ~35 hours while GATK3.7 takes about 18 hours. Original report is here: https://github.com/broadinstitute/gatk/issues/3631 David, I assigned you just so you could take a look. User seems satisfied that GATK4 is faster, but I am just making sure this is expected. I asked for more details on what type of data they are using and whether Spark version is faster (assuming this is from non-Spark version). . ----; User Report; ----. @Sheila,. Hi Sheila,. I repeated the experiment with GATK4.0.0 version. The performance is much better than GATK4beta5 version. Here are the logs: . $ tail -400 NA12892.HaplotypeCaller.err; Using GATK jar /gpfs/software/genomics/GATK/4.0.0/gatk-package-4.0.0.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -jar /gpfs/software/genomics/GATK/4.0.0/gatk-package-4.0.0.0-local.jar HaplotypeCaller --reference /gpfs/data_jrnas1/ref_data/Hsapiens/hs37d5/hs37d5.fa --input /gpfs/projects/NAGA/naga/NGS/pipeline/GATK_Best_Practices/GATK4.0.0/NA12892/bam/NA12892.recal.bam --dbsnp /gpfs/data_jrnas1/ref_data/Hsapiens/GRCh37/variation/dbsnp_138.vcf.gz --emit-ref-confidence GVCF --read-validation-stringency LENIENT --native-pair-hmm-threads 32 --output /gpfs/projects/NAGA/naga/NGS/pipeline/GATK_Best_Practices/GATK4.0.0/NA12892/vcf/NA12892.raw.snps.indels.g.vcf; [January 26, 2018 1:09:58 AM AST] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: **2,133.48 minutes**.; Runtime.totalMemory()=2183659520; real 128010.56; user 436969.62; sys 3030.18. Thanks and Regards,; Naga. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/comment/45634#Comment_45634",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4361:1320,validat,validation-stringency,1320,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4361,1,['validat'],['validation-stringency']
Security,"User report:. ValidateVariants causes the error:; ```; java -Xms32G -Xmx32G -jar /data/biosoftware/GATK/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar ValidateVariants -R ~/reference/reference.fasta -V $i -gvcf; ```; And it causes the following error for all my files:; ```; ***********************************************************************. A USER ERROR has occurred: In a GVCF all records must ordered. Record: [VC Unknown @ Super-Scaffold_2:1-4 Q. of type=SYMBOLIC alleles=[G*, <NON_REF>] attr={END=4} filters= covers a position previously traversed. ***********************************************************************; ```. This doesn't cause the error:; ```; java -Xms32G -Xmx32G -jar /data/biosoftware/GATK/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar ValidateVariants -R ~/reference/reference.fasta -V $i; ```. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/comment/59104#Comment_59104",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6023:14,Validat,ValidateVariants,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6023,3,['Validat'],['ValidateVariants']
Security,"Using GENOTYPE_GIVEN_ALLELES (""GGA"") mode with HaplotypeCaller, I've encountered a couple instances of crashes that I've traced to spanning deletions (of the type considered in #4963).; One case involved the following in the `--alleles` input:; ```; 22	16137300	rs567136176	TAG	T; 22	16137302	rs573978809	G	C; ```; and it crashed with:; ```; java.lang.IllegalStateException: Allele in genotype TAG* not in the variant context [G*, *, C]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.makeMergedVariantContext(AssemblyBasedCallerUtils.java:221); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:150); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:599); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller.apply(HaplotypeCaller.java:236); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hell",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5336:487,validat,validateGenotypes,487,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336,2,['validat'],"['validate', 'validateGenotypes']"
Security,"Using HaplotypeCaller with `GENOTYPE_GIVEN_ALLELES` (""GGA"") mode, I came across a couple of cases that crashed, and I traced them to spanning deletions (of the type considered in #4963). The first case involved the following spanning deletion in the `--alleles` input:; ```; 22	16137300	rs567136176	TAG	T; 22	16137302	rs573978809	G	C; ```; and it crashed with:; ```; java.lang.IllegalStateException: Allele in genotype TAG* not in the variant context [G*, *, C]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.makeMergedVariantContext(AssemblyBasedCallerUtils.java:221); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:150); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:599); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller.apply(HaplotypeCaller.java:236); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	a",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5337:512,validat,validateGenotypes,512,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5337,2,['validat'],"['validate', 'validateGenotypes']"
Security,"Using VCFTools to validate:; ```; vcf-validator SAMPLE7T-vs-SAMPLE7N-filtered.vcf; ```. I get a massive amount of messages:; ```; .....snip.......; column SAMPLE7N at 19:49136721 .. Could not validate the float [NaN],FORMAT tag [MPOS] expected different number of values (expected 1, found 2),FORMAT tag [MFRL] expected different number of values (expected 1, found 2),FORMAT tag [MMQ] expected different number of values (expected 1, found 2),FORMAT tag [MCL] expected different number of values (expected 1, found 2),FORMAT tag [MBQ] expected different number of values (expected 1, found 2); .....snip.......; column SAMPLE7T at 19:45901415 .. FORMAT tag [MBQ] expected different number of values (expected 1, found 2),FORMAT tag [MMQ] expected different number of values (expected 1, found 2),FORMAT tag [MCL] expected different number of values (expected 1, found 2),FORMAT tag [MFRL] expected different number of values (expected 1, found 2),FORMAT tag [MPOS] expected different number of values (expected 1, found 2); .....snip.......; ```. Sure enough, the header does not match the values for those fields (in the header number=""A""), so the validation errors are correct. Not sure what is the deal with FOXOG, but that may not be a big deal.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3296:18,validat,validate,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3296,4,['validat'],"['validate', 'validation', 'validator']"
Security,"Using the `--gcs-project-for-requester-pays` argument to access a requester-pays bucket, I tried `broad-dsde-methods`, `""broad-dsde-methods""`, and `222581509023`, but no dice. The log shows that the engine is reading the argument, but it doesn't seem to be passed to the cloud utils correctly.; ```; 14:23:16.753 INFO PrintReads - GCS max retries/reopens: 20; 14:23:16.753 INFO PrintReads - Requester pays: enabled. Billed to: broad-dsde-methods; 14:23:16.753 INFO PrintReads - Initializing engine; 14:23:18.501 INFO PrintReads - Shutting down engine; [September 23, 2019 2:23:18 PM EDT] org.broadinstitute.hellbender.tools.PrintReads done. Elapsed time: 0.03 minutes.; Runtime.totalMemory()=375914496; code: 400; message: Bucket is requester pays bucket but no user project provided.; reason: required; location: null; retryable: false; com.google.cloud.storage.StorageException: Bucket is requester pays bucket but no user project provided.; ```. `gsutil -u 222581509023 stat gs://fc-secure-2011b97c-a9c9-4a13-8911-f3833be31253/CCDG_WashU_CVD_EOCAD_METSIM_WGS_all/2893803451.cram` works and `gsutil stat gs://fc-secure-2011b97c-a9c9-4a13-8911-f3833be31253/CCDG_WashU_CVD_EOCAD_METSIM_WGS_all/2893803451.cram` produces; ```; BadRequestException: 400 Bucket is requester pays bucket but no user project provided.; ```. I tried the above variations on `export GOOGLE_CLOUD_PROJECT=` in the shell, but that didn't change things. It's possible I missed some combination of the above, but at the very least our docs need clarification.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6179:57,access,access,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6179,3,"['access', 'secur']","['access', 'secure-']"
Security,"Using underlying functionality from GenomicsDB to validate/specify cloud url's for GenomicsDB workspaces. This allows for the specification of s3 and azure blob storage uri's in addition to gcs for GenomicsDB workspaces. Currently, there are no tests for s3/az uri's, this is just experimental functionality available if needed.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7271:50,validat,validate,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7271,1,['validat'],['validate']
Security,UvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NhbGxDb3B5UmF0aW9TZWdtZW50cy5qYXZh) | `100% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `75.51% <ø> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...institute/hellbender/tools/spark/bwa/BwaSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9id2EvQndhU3BhcmsuamF2YQ==) | `69.231% <ø> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...tute/hellbender/tools/AnnotatePairOrientation.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Bbm5vdGF0ZVBhaXJPcmllbnRhdGlvbi5qYXZh) | `96.429% <ø> (ø)` | `8 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/tools/GatherVcfsCloud.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9HYXRoZXJWY2ZzQ2xvdWQuamF2YQ==) | `70.811% <ø> (ø)` | `40 <0> (ø)` | :arrow_down: |; | [...lbender/tools/spark/pathseq/PathSeqBuildKmers.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BhdGhTZXFCdWlsZEttZXJzLmphdmE=) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `82.927% <ø> (ø)` | `24 <0> (ø)` | :arrow_down: |; | ... and [92 more](https://codecov.io/gh/broadinstitute/gatk/pull/3880?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3880#issuecomment-347373155:3616,validat,validation,3616,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3880#issuecomment-347373155,1,['validat'],['validation']
Security,VCF file names in validateSequenceDictionaries,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/660:18,validat,validateSequenceDictionaries,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/660,1,['validat'],['validateSequenceDictionaries']
Security,VCF row validation error on gCNV results,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8834:8,validat,validation,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8834,1,['validat'],['validation']
Security,VET Ingest Validation / Allow Ingest of non-VQSR'ed data,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7870:11,Validat,Validation,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7870,1,['Validat'],['Validation']
Security,VS 923 add validation to cluster creation,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8581:11,validat,validation,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8581,1,['validat'],['validation']
Security,VS-1433 add vcf validator to tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8903:16,validat,validator,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8903,1,['validat'],['validator']
Security,VS-1433.; This PR adds the tool vcf-validator to our variants docker and uses it in our integration test.; It validates that the VCFs have no errors in the `AD` field (which were previously reported by AoU friends).; It also modifies the Beta integration test to only run on WGS samples (previously ran on all samples). Passing Integration test [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/0c9fb830-7831-4bee-a82c-d0146b250e59).,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8903:36,validat,validator,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8903,2,['validat'],"['validates', 'validator']"
Security,VS-402. Add VAT Validation check that aa_change and exon_number are consistentally set.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7850:16,Validat,Validation,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7850,1,['Validat'],['Validation']
Security,VS-775 vat validation shards,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8175:11,validat,validation,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8175,1,['validat'],['validation']
Security,Validate GenotypeGVCFs walker for production use (with palantir and/or short variants team help),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2071:0,Validat,Validate,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2071,1,['Validat'],['Validate']
Security,Validate SVCallRecord coordinates,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7714:0,Validat,Validate,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7714,1,['Validat'],['Validate']
Security,Validate all existing test BAMs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569:0,Validat,Validate,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569,1,['Validat'],['Validate']
Security,Validate state utility method,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2543:0,Validat,Validate,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2543,1,['Validat'],['Validate']
Security,Validate the tiebreaking code for MarkDuplicatesSpark,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4707:0,Validat,Validate,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4707,1,['Validat'],['Validate']
Security,Validate the walkers BaseRecalibrator/ApplyBQSR for production,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1413:0,Validat,Validate,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1413,1,['Validat'],['Validate']
Security,ValidateBasicSomaticShortMutations will validate variants with reads in the validation normal,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5059:0,Validat,ValidateBasicSomaticShortMutations,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5059,3,"['Validat', 'validat']","['ValidateBasicSomaticShortMutations', 'validate', 'validation']"
Security,ValidateSamFile shows no errors with the bam.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-242510056:0,Validat,ValidateSamFile,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-242510056,1,['Validat'],['ValidateSamFile']
Security,ValidateVariants,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/314:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/314,1,['Validat'],['ValidateVariants']
Security,ValidateVariants + tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/314:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/314,1,['Validat'],['ValidateVariants']
Security,ValidateVariants exception message improvement,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6076:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6076,1,['Validat'],['ValidateVariants']
Security,"ValidateVariants gVCF mode error ""covers a position previously traversed""",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6023:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6023,1,['Validat'],['ValidateVariants']
Security,"ValidateVariants give an `IllegalArgumentException` if a reference isn't provided. . It should be a `UserException`. I don't know but I think there may be modes that don't require the reference, so it may need to give a smart error message. ```; gatk-launch ValidateVariants --variant src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; Using GATK wrapper script /Users/louisb/Workspace/gatk/build/install/gatk/bin/gatk; Running:; /Users/louisb/Workspace/gatk/build/install/gatk/bin/gatk ValidateVariants --variant src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.119 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/louisb/Workspace/gatk/build/install/gatk/lib/gkl-0.4.1.jar!/com/intel/gkl/native/libgkl_compression.dylib; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants --variant src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf --doNotValidateFilteredRecords false --warnOnErrors false --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --readValidationStringency SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Def",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,7,"['Validat', 'validat']","['ValidateVariants', 'validationExampleGood']"
Security,ValidateVariants gvcf validation,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3445:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3445,2,"['Validat', 'validat']","['ValidateVariants', 'validation']"
Security,ValidateVariants is smarter about when a reference is and is not required. Closes #2509.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2649:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2649,1,['Validat'],['ValidateVariants']
Security,ValidateVariants memory usage is high when using a gvcf as the interval list,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8608:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8608,1,['Validat'],['ValidateVariants']
Security,ValidateVariants should have a flag to validate based solely on VCF spec,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6553:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6553,2,"['Validat', 'validat']","['ValidateVariants', 'validate']"
Security,ValidateVariants should validate counts of info-field annotation values,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,2,"['Validat', 'validat']","['ValidateVariants', 'validate']"
Security,ValidateVariants silently does no validation in use common cases,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5862:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5862,2,"['Validat', 'validat']","['ValidateVariants', 'validation']"
Security,ValidateVariants throws IllegalArgumentException if a reference isn't provided,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,ValidateVariants: Error reports last (not first) overlapping interval,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8103:0,Validat,ValidateVariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8103,1,['Validat'],['ValidateVariants']
Security,Validation of sequence dictionaries from multiple BAMs now throws warning instead of exception in CNV workflows.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4758:0,Validat,Validation,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4758,1,['Validat'],['Validation']
Security,Validation stringency is ignored in LoadReadsFromFileFn,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/745:0,Validat,Validation,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/745,1,['Validat'],['Validation']
Security,Validation tests for on-the-fly .gz/.tbi creation.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3056:0,Validat,Validation,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3056,1,['Validat'],['Validation']
Security,VariantWalker / VariantContext doesn't validate variants at parse-time,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5867:39,validat,validate,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5867,1,['validat'],['validate']
Security,"Variants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN ValidateVariants - Other possible validations will still be performed; 19:53:35.594 INFO ProgressMeter - Starting traversal; 19:53:35.595 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 19:53:35.660 INFO ValidateVariants - Shutting down engine; [October 25, 2020 7:53:35 PM CDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.02 minutes.; Runtime.totalMemory()=2114453504; java.lang.ArrayIndexOutOfBoundsException: -87; 	at org.broadinstitute.hellbender.utils.BaseUtils.convertIUPACtoN(BaseUtils.java:123); 	at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.getSubsequenceAt(CachingIndexedFastaSequenceFile.java:340); 	at org.broadinstitute.hellbender.engine.ReferenceFileSource.queryAndPrefetch(ReferenceFileSource.java:78); 	at org.broadinstitute.hellbender.engine.ReferenceDataSource.queryAndPrefetch(ReferenceDataSource.j",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:2892,Validat,ValidateVariants,2892,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,2,"['Validat', 'validat']","['ValidateVariants', 'validation']"
Security,Variants Processed Variants/Minute; 14:55:54.857 INFO FilterMutectCalls - Starting pass 0 through the variants; 14:56:05.368 INFO ProgressMeter - 1:2019484 0.2 16000 91332.9; 14:56:15.521 INFO ProgressMeter - 1:4008750 0.3 35000 101621.1; 14:56:26.027 INFO ProgressMeter - 1:5856032 0.5 55000 105867.6; ...; 19:37:05.295 INFO ProgressMeter - GL000209.1:48811 281.2 30739000 109323.8; 19:37:15.543 INFO ProgressMeter - GL000224.1:65537 281.3 30758000 109324.9; 19:37:25.847 INFO ProgressMeter - GL000248.1:21736 281.5 30768000 109293.8; 19:37:25.906 INFO FilterMutectCalls - Finished pass 0 through the variants; 19:50:04.590 INFO FilterMutectCalls - Shutting down engine; [9 January 2020 7:50:04 PM] org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls done. Elapsed time: 294.19 minutes.; Runtime.totalMemory()=14966849536; java.lang.IllegalArgumentException: Values in probability array sum to a negative number NaN; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:731); 	at org.broadinstitute.hellbender.utils.MathUtils.normalizeSumToOne(MathUtils.java:731); 	at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.performEMIteration(SomaticClusteringModel.java:336); 	at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.learnAndClearAccumulatedData(SomaticClusteringModel.java:306); 	at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.Mutect2FilteringEngine.learnParameters(Mutect2FilteringEngine.java:158); 	at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls.afterNthPass(FilterMutectCalls.java:159); 	at org.broadinstitute.hellbender.engine.MultiplePassVariantWalker.traverse(MultiplePassVariantWalker.java:44); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.Com,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6202#issuecomment-572799341:4269,validat,validateArg,4269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6202#issuecomment-572799341,2,['validat'],['validateArg']
Security,"Variants with the `-no-overlaps` option, a USER ERROR is outputted after the entire tool finishes running, as shown below:. ```; ***********************************************************************. A USER ERROR has occurred: This GVCF contained overlapping reference blocks. The first overlapping interval is [genomic coordinates here]. ***********************************************************************; ```. This error should be generally helpful, but it appears that the interval that is reported in the error message is the _last_ overlapping interval, not the _first_. I'm not super familiar with java, but I'm guessing that `firstOverlap` might be continuously replaced by `refInterval` if there are multiple overlaps, which is inconsistent with expected behavior. . Potentially relevant lines of code: ; - `-no-overlaps` argument description ([lines 192-201](; https://github.com/broadinstitute/gatk/blob/ca33bc953abfa7050b791f049285f5262675cf84/src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ValidateVariants.java#L192-L201)); - `firstOverlap = refInterval` ([line 275](https://github.com/broadinstitute/gatk/blob/ca33bc953abfa7050b791f049285f5262675cf84/src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ValidateVariants.java#L275)). #### Steps to reproduce. Running ValidateVariants with the `-no-overlaps` flag on a .g.vcf with overlapping intervals will cause this error. More specifically, we're running this within WARP's Exome Germline Single Sample v.3.1.7 WDL release. Our command is as follows:. ```; gatk --java-options ""-Xms6000m -Xmx6500m"" \; ValidateVariants \; -V /path/to/our/.g.vcf.gz \; -R /path/to/our/.fa \; -L /path/to/our/.interval_list \; -gvcf \; --validation-type-to-exclude ALLELES \; --dbsnp /path/to/our/.vcf.gz \; --no-overlaps; ```. #### Expected behavior. The error message should report the _first_ overlapping interval. #### Actual behavior; The error message is reporting the _last_ overlapping interval.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8103:1633,Validat,ValidateVariants,1633,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8103,4,"['Validat', 'validat']","['ValidateVariants', 'validation-type-to-exclude']"
Security,"Variants`, which ports LeftAlignAndTrimVariants from GATK3 to GATK4. ### stdout; ```; WMCF9-CB5:shlee$ ./gatk LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign.vcf.gz; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign.vcf.gz; 16:34:35.251 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 4:34:35 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 16:34:35.413 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.414 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 16:34:35.414 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 16:34:35.414 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 16:34:35.414 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 16:34:35.414 INFO LeftAlignAndTrimVariants - Start Date/Time",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494:1059,authenticat,authenticated,1059,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494,1,['authenticat'],['authenticated']
Security,"Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value comp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1816,Validat,ValidateSamFile,1816,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,VsdHMuamF2YQ==) | `84.615% <ø> (ø)` | `22 <0> (ø)` | :arrow_down: |; | [...adinstitute/hellbender/tools/exome/PadTargets.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9QYWRUYXJnZXRzLmphdmE=) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...hellbender/tools/genome/SparkGenomeReadCounts.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWUvU3BhcmtHZW5vbWVSZWFkQ291bnRzLmphdmE=) | `91.089% <ø> (ø)` | `18 <0> (ø)` | :arrow_down: |; | [...egmentation/PerformAlleleFractionSegmentation.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9zZWdtZW50YXRpb24vUGVyZm9ybUFsbGVsZUZyYWN0aW9uU2VnbWVudGF0aW9uLmphdmE=) | `88.889% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [...ute/hellbender/tools/exome/ConvertACNVResults.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9Db252ZXJ0QUNOVlJlc3VsdHMuamF2YQ==) | `87.805% <ø> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...idation/AnnotateVcfWithExpectedAlleleFraction.java](https://codecov.io/gh/broadinstitute/gatk/pull/3135?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbi5qYXZh) | `96.429% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...tools/exome/convertbed/ConvertBedToTargetFile.java](https://codecov.io/gh/broadinstitute/gatk/pull,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3135#issuecomment-309876624:2684,validat,validation,2684,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3135#issuecomment-309876624,1,['validat'],['validation']
Security,WDLs failing validation 😿,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8261#issuecomment-1483440501:13,validat,validation,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8261#issuecomment-1483440501,1,['validat'],['validation']
Security,"WGS validations are done and still look fine. @LeeTL1220 want to run your validations? 4.0.12.0 Docker + override jar should do the trick. In any case, I think the review can proceed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454765304:4,validat,validations,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-454765304,2,['validat'],['validations']
Security,"WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:129840, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 126595, Read name 20FUKAAXX100202:6:46:9311:1219, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ...; ERROR: Read name 20FUKAAXX100202:3:66:14857:5877, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:3:42:3602:56427, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:3:43:9956:132423, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:5:28:11981:2516, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:6:24",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:2065,Validat,ValidateSamFile,2065,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"We already added the functionality needed for the gCNV workflow to IntervalListTools in https://github.com/broadinstitute/picard/pull/1208. The issue is that the tool outputs each scattered interval list to a separate directory if the number of scatters is greater than 1, but it just outputs to a file (essentially a noop) if we don't need to scatter. Not sure the reason for this design, but it makes things difficult from the perspective of WDL. Would be easier if the expected output was always `Array[File]+`. I don't really see why IntervalListTools needs to create those intermediate directories (nor why the naming scheme is determined by `DecimalFormat(""0000"")`---don't think this is documented, either), but I am not sure if that behavior is expected by now or if it is safe to modify it. Pretty sure SplitIntervals is just calling the same backend class used by IntervalListTools. Perhaps that tool might've been spun off before we exposed the Picard tools? See e.g. https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435588845. I think we should try to avoid writing such custom/utility GATK tools unless really warranted.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6502#issuecomment-599639907:943,expose,exposed,943,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6502#issuecomment-599639907,1,['expose'],['exposed']
Security,"We also have to audit the data to identify private data, and replace or sanitize.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2063#issuecomment-235997161:16,audit,audit,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2063#issuecomment-235997161,2,"['audit', 'sanitiz']","['audit', 'sanitize']"
Security,"We found an issue with the way GKL was freeing an internal data structure. The issue was exposed by the `IntelInflaterIntegrationTest`, which uses the Inflater API in a different way than HTSJDK and GATK. We've fixed that issue and the GATK integration tests pass. We're releasing GKL 0.4.1 now and will update this PR when 0.4.1 is available in Maven Central.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282325096:89,expose,exposed,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282325096,1,['expose'],['exposed']
Security,"We found this trying to tie out the BQ version of the VQSR annotations with the Evoquer+Gnarly outputs, specifically in the RankSumTest annotations. This never got merged into master. The short story is... the implementation of median in the Histogram class is broken. Precisely, in this line it iterates through the bins of the histogram to find the midpoint index... however the keySet() it gets is from a HashMap and therefore not ordered. That code hasn't been touched in 2 years, so it's been this way for a while. It's tough to catch because of course there is a non-guaranteed ordering to the keys, and in the case of hashmap today when there are < 16 keys will be the hashcode of the keys modulo 16 until there is collision. The hashcode of integers is just the integer... so in our tests we have today it just happens to work because we have a small number of keys and they are close to each other so hash in the order we happen to want. I learned more about [HashMap internals](http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/HashMap.java) than I wanted to know in order to make a test case for it :/ . I. A test on data like this breaks:. 1,2,16. as it returns 1 instead of 2 as the median. I have a test for this, and have a fix (basically sort the keys, running through a TreeSet). Thanks to @mmorgantaylor and @schaluva for helping with this",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7131:408,Hash,HashMap,408,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7131,7,"['Hash', 'hash']","['HashMap', 'hash', 'hashcode', 'hashmap']"
Security,We had already planned to remove this limitation. The limitation comes from using an older version of TileDB in GenomicsDB. The latest version of TileDB has an API called array_move() to do this correctly which we will expose in GenomicsDB.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-320304844:219,expose,expose,219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-320304844,1,['expose'],['expose']
Security,"We have a tool, VariantQC, that extends VariantEval. This PR is a minor refactor to expose the code that creates the list of VariantStratifier and VariantEvaluator objects as protected methods, so subclasses could modify them. This should have no functional difference on VariantEval itself. We're hoping to use these changes in order to adapt our tool in response to reviewers, so if there is any way to push these changes we would appreciate it.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5998:84,expose,expose,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5998,1,['expose'],['expose']
Security,"We have access to data that should reproduce this issue, but can't post it here because it's not publicly shareable BAMs. Please let me know how I can share the data if someone decides to look at this issue. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5513#issuecomment-446315089:8,access,access,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5513#issuecomment-446315089,1,['access'],['access']
Security,We have run this tools successfully with a number of crams and bam at this point so we will need access to the data to reproduce the issue on our end. Would that be possible @jjfarrell?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7182#issuecomment-819635502:97,access,access,97,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7182#issuecomment-819635502,1,['access'],['access']
Security,"We have the basic DREAM somatic challenge, but there's also an RNA challenge, and perhaps others. If it's a similar format of bams, masks, and truth vcfs it would be really easy to set up a validation like the one we currently have on Firecloud.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5427:190,validat,validation,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5427,1,['validat'],['validation']
Security,"We just merged PR #5562, which addresses one of @munrosa's missed calls. I am investigating the harder fix of threading in both directions from the first unique kmer. It seems that there is nothing fundamentally wrong with this change, but it exposes mapping artifacts that we have never had to handle before. I think I know how to address these but it will take a while. Maybe two months, though it's hard to guess.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-468028441:243,expose,exposes,243,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-468028441,1,['expose'],['exposes']
Security,"We need a tool to compare multiple references and spit out a TSV (or similar) detailing what the differences are. Additionally it should be able to spit out a liftover file that will properly move a variant from one reference to another. We should first compare the sequence dictionaries in the references to see if they have equal lengths and checksums - the names may differ and we should track this so we can definitively say which contigs are equivalent. After this, we should walk the references and find out specifically which bases differ between contigs that have different checksums (with some limits on the number of differences between them so we don't get bogged down by `hg19` vs `hg38` comparisons). ; Then it should create a liftover file from those comparisons so the data can be easily converted between the references given. . Additionally, it should be able to take a variant file and a set of references and say:. - whether the variant file ""belongs"" to one of the given references; - if it isn't exactly from one of the given references, which reference is closest; - _optionally_: a lifted-over version of that VCF to the closest reference (with a bunch of warnings, if applicable). This will finally lay to rest the questions raised by [my blog post about ""HG19""](https://gatk.broadinstitute.org/hc/en-us/articles/360035890711). I believe Adam Phillipy had created a perl script that does something similar to this, but a brief view of his github page doesn't show anything like that anymore (maybe it was called `refdiff` or similar). I created a bash script that does something similar to this (see attached), but it only looks at the sequence dictionaries. It produces a table similar to that in the above blog post. For example:. |MD5 | HG38(Homo_sapiens_assembly38.dict) | HG38_WEIRD(genome.hg38rg.fa.dict)|; | --- | --- | --- |; |1e95e047b98ed92148dd84d6c037158c|chr1_KI270708v1_random|1_KI270708v1_random|; |42f7a452b8b769d051ad738ee9f00631|chr1_KI270714v1_random|1_KI270",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6837:344,checksum,checksums,344,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6837,2,['checksum'],['checksums']
Security,"We need the ability to store command-line argument definitions in @ArgumentCollections like in the GATK, to avoid duplicate definitions, and to provide a standard way of accessing the argument values.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/96:170,access,accessing,170,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/96,1,['access'],['accessing']
Security,"We need to add a validation check to ensure that any read input file contains a header (since they're technically optional). There are code paths that assume that a header/sequence dictionary is always present (i.e., some of the SplitReads tests get NPEs if presented with one).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2334:17,validat,validation,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2334,1,['validat'],['validation']
Security,We need to look into Java 8 java.util.stream for accessing Read and Variant data,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/9:49,access,accessing,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/9,1,['access'],['accessing']
Security,We need to understand the data access patterns in the existing engines: Picard/GATK/Foghorn; @lbergelson and @kshakir already started doing it. Can you move the list here?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1:31,access,access,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1,1,['access'],['access']
Security,"We noticed today that there's no way in GATK4 to change the sigma of the band pass filter Gaussian kernel in `AssemblyRegionWalker`, even though `maxProbPropagationDistance` is settable. For consistency's sake, we should expose the band pass sigma via an arg as well.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5387:221,expose,expose,221,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5387,1,['expose'],['expose']
Security,"We recently discovered that some of the tests we didn't think required google cloud authentication require that gcloud be initialized. Travis didn't catch this because we always initialize gcloud in order to do log uploading. We should change this so it's only initialized during the tests for the cloud tests. . The actual error we discovered didn't require that credentials be correct, only that a default project had been configured so simply logging out isn't enough to trigger it.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2706:84,authenticat,authentication,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2706,1,['authenticat'],['authentication']
Security,"We should audit the plugin system (and add tests) to ensure that crazy combinations of enable/disable arguments (like `--readFilter` and `--disableReadFilter`) are disallowed, while useful combinations are permitted. Here's my attempt at an initial proposal:. `--enable X --disable X`: crazy, should be an error. `--enable X --enable X`: error. `--disable X --disable X`: error. `--enable X when X is already on by default in the tool`: warning, but should be allowed -- this is useful for pipeline authors to guarantee that a particular filter will be on, even if tool defaults change over time. We should make sure that the filter is only actually applied ONCE, however. `--disable X when X is not enabled by default in the tool`: warning, but should be allowed -- this is useful for pipeline authors to guarantee that a particular filter will be off, even if tool defaults change over time.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2377:10,audit,audit,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2377,1,['audit'],['audit']
Security,"We should expose a `getSource()` method at the GATKRead level, and have GATK delegate to `samRecord.getFileSource()` in the `SAMRecord` case. We might need to do something extra to get HTSJDK to populate this field for us. Use case is a ReadsDataSource backed by multiple bam/cram inputs, with the reads merged into a single sorted stream, and the tool needing to be able to tell where each read came from. Can't always use read groups / sample names to accomplish this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8671#issuecomment-1919937519:10,expose,expose,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8671#issuecomment-1919937519,1,['expose'],['expose']
Security,"We use the GATKGCSOptions class to hold GCP authentication. It inherits from the Dataflow hierarchy and works well there, but since it doesn't implement Serializable it's cumbersome to work with in Spark. We've created AuthHolder as a replacement. It can do all the things GATKGCSOptions can do, and more (well, except for holding Dataflow debug options but we don't need that anymore). Once #978 is merged in, we need to migrate the code from GATKGCSOptions to AuthHolder. One benefit is that this will allow the Spark code to support client-secrets.json (for access to private GCS files, unlike the API key which only grants access to world-readable GCS files).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1002:44,authenticat,authentication,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1002,3,"['access', 'authenticat']","['access', 'authentication']"
Security,"We want something like a hosted jenkins server to run parts of the test suite that can't or shouldn't be run in travis. This includes:. -Long-running validation tests, like those designed by @davidadamsphd for the `ReadsPipelineSpark`; -Tests involving reading data from HDFS.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1400:150,validat,validation,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1400,1,['validat'],['validation']
Security,We were seeing failures on spark clusters that manifested as being; unable to find the Main class while running spark submit. The caused was the accidental introduction of a jar signature file; and key from the transitive gnu.getopt dependency. This was causing; signature validation failures since our uber jar did not match the; expected hashes. Fixed by excluding .SF and .RSA files from our jars.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2618:273,validat,validation,273,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2618,2,"['hash', 'validat']","['hashes', 'validation']"
Security,"We will commit this separately, but I don't want to do that until we validate that it actually solves the problem for the other branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827765900:69,validat,validate,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827765900,1,['validat'],['validate']
Security,We're having issues with all of our tests today. Github is refusing our git-lfs requests because they're over quota and we need to figure out how to either authenticate our requests in a safe way from travis or figure out why we're suddenly going over quota. It happened very suddenly and I suspect there might be an issue on github's end..,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2506#issuecomment-292005363:156,authenticat,authenticate,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2506#issuecomment-292005363,1,['authenticat'],['authenticate']
Security,"We're marking all of these as bucket for now @lbergelson to unblock our work (with the exception of the `PSUtilsUnitTest`). They require authentication now, so need to be properly marked. The underlying issue should ultimately be fixed by https://github.com/broadinstitute/gatk/issues/958",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300815096:137,authenticat,authentication,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300815096,1,['authenticat'],['authentication']
Security,"We're seeing a lot of failures of the form:. ```; com.google.cloud.storage.StorageException: 806222273987-uilktks3j6i7962rp0v7nusveer58497@developer.gserviceaccount.com does not have serviceusage.services.use access to project 685190392835.; Caused by:; shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 403 Forbidden; {; ""code"" : 403,; ""errors"" : [ {; ""domain"" : ""global"",; ""message"" : ""806222273987-uilktks3j6i7962rp0v7nusveer58497@developer.gserviceaccount.com does not have serviceusage.services.use access to project 685190392835."",; ""reason"" : ""forbidden""; } ],; ""message"" : ""806222273987-uilktks3j6i7962rp0v7nusveer58497@developer.gserviceaccount.com does not have serviceusage.services.use access to project 685190392835.""; }; ```. It looks like it now requires some new permission for the service accounts but our existing service account doesn't have that permission.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511986926:209,access,access,209,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511986926,3,['access'],['access']
Security,We've been encountering transient 403 errors when using GCS NIO.; It seems that some GCS-related service is incorrectly returning 403 in; certain cases where we do actually have permission to access a resource.; This commit moves us to a google-cloud-java snapshot that retries upon; 403 errors:. https://github.com/droazen/google-cloud-java/commit/6d11bef1c81f885c26b2b56c8616b7a705171e4f. Resolves #3735,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3766:192,access,access,192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3766,1,['access'],['access']
Security,"We've been using 4.beta.6 to generate new callsets because it has the GenomicsDBImport batching fix and it seems to have introduced transient Auth errors that production was not seeing before. This happens a maybe one shard at every task level and when rerun usually succeeds but as you can imagine is pretty annoying. This happens across multiple tools (GenomicsDBImport, GatherVcfs). Sometimes we get this as the only response from GATK when this happens. ```; ***********************************************************************. A USER ERROR has occurred: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-gotc-prod-storage/pipeline/G101956/gvcfs/DDP_ATCP_42_1.4afb46bb-4009-47c4-9aa0-407e92de0db8.g.vcf.gz. ***********************************************************************; ```. and other times we get a nice stacktrace for this issue. ```; java.lang.RuntimeException: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-jg-dev-11k-call-set/JointGenotyping/0cb36821-b8bf-4e6d-a352-07b101f6b7d1/call-ApplyRecalibration/shard-1734/GMKF_Seidman_CHD_WGS_904.filtered.1734.vcf.gz.; 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.read(SeekableByteChannelPrefetcher.java:309); 	at htsjdk.samtools.seekablestream.SeekablePathStream.read(SeekablePathStream.java:86); 	at htsjdk.samtools.util.IOUtil.transferByStream(IOUtil.java:141); 	at org.broadinstitute.hellbender.tools.GatherVcfsCloud.gatherWithBlockCopying(GatherVcfsCloud.java:394); 	at org.broadinstitute.hellbender.tools.GatherVcfsCloud.doWork(GatherVcfsCloud.java:143); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineP",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3735:807,access,access,807,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3735,1,['access'],['access']
Security,"We've discovered a number of bam files being used in tests which are not valid BAM files. We should go through all the checked in BAMs, validate them, and replace broken ones. (Except ones that are intentionally broken for testing.) . (added later by @akiezun); In particular, copied from https://github.com/broadinstitute/hellbender/issues/568, NA12878.chr17_69k_70k.dictFix.bam has a problem:; whoever fixes this ticket needs to take care of this input. `htsjdk.samtools.SAMFormatException: SAM validation error: ERROR: Record 129, Read name 809R9ABXX101220:5:6:17918:145992, Mate Alignment start should be 0 because reference name = *.`. Here's the corresponding read:; `809R9ABXX101220:5:6:17918:145992 97 17 69400 37 67M9S * 71202348 0 ACTCCCCACCTTACCTGACTCCTTCCAGGGTTTGTCGCCTTTCCGGTCCCTGACCCCAGTGGATGGGAGTCTGTCC ?ABDDEEABEECBDBDAB=DEDCDEEBFADABCEAD?EEEDCFE?ABEEE@FCDEEEBF@F?CA4@@########## UQ:i:0`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569:136,validat,validate,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569,2,['validat'],"['validate', 'validation']"
Security,"We've had to do that in other places... On Fri, Jan 12, 2018 at 3:20 PM, samuelklee <notifications@github.com>; wrote:. > To be clear, this will work perfectly fine as long as you have enough; > space in /dev/shm---which is typically true everywhere outside of our; > default Docker container.; >; > I'm loath to cripple a tool just because of limitations that are; > fundamentally elsewhere...let's just address those in the appropriate; > places. (Furthermore, I'm especially loath to write a plotting tool that; > takes ~5 minutes to generate a plot!) And yes, while it is not great that; > data.table forces us to use /dev/shm, I think fread(""grep ..."") is; > relatively standard.; >; > If --shm-size is indeed not exposed, why doesn't the Google backend scale; > /dev/shm or other tmpfs space with requested machine memory?; >; > If there really is no other way around it, then all we're doing is; > filtering out the lines beginning with @. We could do this first by; > calling system commands within R to write to a temporary file, and then; > reading that back in with fread. This seems hacky to me, but I've confirmed; > that it works within the Docker. This will solve our immediate problem, but; > I still think it's worth taking a look at those other limitations elsewhere; > now as well.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357337827>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACDXkxNvcMcJfIhdlPhdU3vLHTiAVPPSks5tJ76mgaJpZM4RclpR>; > .; >. -- ; Lee Lichtenstein; Broad Institute; 75 Ames Street, Room 8011A; Cambridge, MA 02142; 617 714 8632",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357349198:719,expose,exposed,719,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357349198,2,['expose'],['exposed']
Security,"Well, when the `clearItems` call is removed from the `consumeFinalizeItems` else branch, some `HaplotypeCallerSparkIntegrationTest`s [fail](https://api.travis-ci.com/v3/job/173147001/log.txt) because `PushToPullIterator` doesn't call clearItems to reset the state when `consumeFinalizeItems` returns no items, and the next submit is rejected because eoi hasn't been reset. So, since `consumeFinalizeItems` can't reset/mutate the state when there are no items, then we can't assert the precondition that `endOfInput==false` in `submit`. So I'm removing the validation of that from both `ReservoirDownsampler` and `PositionalDownsampler`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-457870723:556,validat,validation,556,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-457870723,2,['validat'],['validation']
Security,"Well, you're welcome to use gatk-launch as a launch script if you'd like (and feel free to rename to whatever you like...) A. There are a few reasons we have spark and non-spark versions of the tools. . 1. We wanted to port and validate certain tools as quickly as possible and doing a direct port from gatk3 -> gatk4 was easier than making them sparkified at the same time. 2. There's a tradeoff in using spark where you end up spending more total cpu hours in order to finish a job faster. Ideally this would be 1:1, double the number of cores and you halve the time to finish a job. It never scales perfectly though, there's always some overhead for being parallel. Our production pipelines are extremely sensitive to cost and not very sensitive to runtime, so they prefer we have a version that's optimized to use the least cpu hours even if that means a longer runtime. Other users prefer to be able to finish a job quickly and are willing to pay slightly more to do so, so we also have a spark version. . 3. Some tool are complicated to make work well spark. Spark works best when you can divide the input data into independent shards and then process them separately. This is complicated for things like the AssemblyRegion walker where you need context around each location of interest. We had to do things like add extra overlapping padding and things like that to avoid boundary issues where there are shard divisions. We don't yet fully understand spark performance and it's caveats, we're looking into that actively now. We hope that we'll be able to optimize our tools so that a spark pipeline of several tools in series is faster than running the individual non-spark versions, since it lets us avoid doing things like loading the bam file multiple times from disk. Whether or not we can achieve this is still and open question though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2345#issuecomment-273318100:228,validat,validate,228,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2345#issuecomment-273318100,1,['validat'],['validate']
Security,"When I was trying to use user exceptions in a consistent way independently of the constructor (mostly related with files), I found very weird behaviour with the messages. Here I try to fix some of the things that I was struggling with:. * Support for path in constructors for `CouldNotReadInputFile`, `CouldNotCreateOutputFile`, `MalformedFile` and `MalformedBAM`, in addition to some missing constructors to have the same structure for all of them (with `File` and/or `String`).; * ~~Updated javadoc in `CommandLineException`, including extending classes to make clear that in the GATK framework is not printed out if it is thrown out of parameter validation.~~ __Edited__: this is not longer required, because `CommandLineException` is decoupled from `UserException` through barclay.; * Added a TODO into the `MalformedBAM` constructor that includes a `GATKRead` that is not used.; * __Edited__: added final to constructors.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2282:649,validat,validation,649,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2282,1,['validat'],['validation']
Security,"When `ReadPosRankSumTest.getReadPosition` encounters the second of two deletions with two bases in between it hits the following code:; ```; if ( AlignmentUtils.isInsideDeletion(read.getCigar(), offset) ) {; return OptionalDouble.of(INVALID_ELEMENT_FROM_READ);; }; ```; which returns negative infinity. Those with TCGA access can reproduce the issue by running on the TCGA exome pair ESCA-IG-A3YB-TP-NB at 15:34525804-34525810.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5492:319,access,access,319,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5492,1,['access'],['access']
Security,When accessing the help output for Picard tools (example MarkDuplicates) through the gatk launch script it seems that engine level Picard arguments are not showing up in the help output (example `--TMP_DIR`). The default behavior in picard itself is to hide those engine arguments from the help output behind a special help flag `--stdhelp` which adds all of those arguments back into the help output. We should reintroduce those arguments into the GATK help output for Picard tools.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6811:5,access,accessing,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6811,1,['access'],['accessing']
Security,"When running GATK with specific interval(s), the default behavior is to include any variant spanning those interval(s). When running scatter/gather jobs, this behavior is generally not what one wants, since this would result in variants spanning the job intervals getting included twice. In a handful of GATK tools, there is support for something like --ignore-variants-starting-outside-interval, which is probably designed to solve this problem. GenotypeGVCFs supports this. However, the implementation/support is generally tool-level and I dont believe all tools support this. For example, SelectVariants does not appear to. If one wants to run a scatter/gather task that doesnt start with a GATK tool that supports --ignore-variants-starting-outside-interval, you're out of luck. My questions are:. 1) Am I completely missing some existing capability?. 2) There is already some low-level support in the engine for control over intervals. Would you be receptive to a PR that pushes support for ""--ignore-variants-starting-outside-intervals"" lower into GATK? Perhaps into VariantWalkerBase? One possibility would be to create a StartsWithinIntervalsVariantFilter, and override makeVariantFilter() to inject it. I dont think this would be particularly invasive, and could be pretty useful across many tools. As part of this, MultiVariantWalkerGroupedOnStart's argument would get merged with this.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8063:1201,inject,inject,1201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8063,1,['inject'],['inject']
Security,"When we make enhancements to the walker engine (eg., modify the `GATKTool` base class to support CRAM, or to validate the sequence dictionaries of the inputs), it would be good if Spark tools could also reap the benefits of these changes automatically. We may need to unify (or better integrate) the `GATKTool` and `SparkCommandLineProgram` base classes somehow to make this possible, as well as classes like `ReadsDataSource` (for walkers) and `ReadsSparkSource` (for Spark tools).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/680:109,validat,validate,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/680,1,['validat'],['validate']
Security,"While a minor issue, moving to `slf4j-api` as the logging API and `slf4j-log4jxx` as the implementation would help with interoperability. For example, I'm working on a proposal for a separate library for conversions between formats, and currently the API passes in a slf4j `Logger` and an enum similar to `ValidationStringency`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-261286474:306,Validat,ValidationStringency,306,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-261286474,1,['Validat'],['ValidationStringency']
Security,"While using a custom tool that validates arguments (e.g., certain range for an `Integer` parameter), a way of handling it is override `CommandLineProgram.customCommandLineValidation()` and return an String with the error found. Nevertheless, if parsing the arguments throws a `UserException.CommandLineException`, the error is printed with a concrete format (`printDecoratedUserExceptionMessage`) after the usage. This is different from the custom validation, which is printed without any decoration and before the usage. Although this behavior could be desirable, I expect that if my custom validation thrown an `UserException.CommandLineException` it is printed in the same way as other exceptions, and the exception is re-thrown in the same way (for testing purposes, for instance). But the current behaviour just exit without any error printed because the exception is catched in `Main`. A very minor change is include in the `try` block the custom validation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2225:31,validat,validates,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2225,4,['validat'],"['validates', 'validation']"
Security,"While working on validating #5607 I noticed that at the top of the method `isReadInformativeOfIndelOfSize()` that there is the following breakout condition:; ```; if( read.getLength() - readStart < maxIndelSize || refBases.length - refStart < maxIndelSize ) {; return false;; }; ```; This says that if the readStart is too close to the read.getLenght() then it will break out and not calculate the informativeness of a read. Unfortunately readStart isn't the readbase indexed readStart, its actually the ""IGV view"" offset for the read generated by the pileup for a particular reference position. The actual length that matters to us is: `AlignmentUtils.getBasesAlignedOneToOne(read).length` which is computed later when we realign the read bases to the reference. What this means is that if a read happens to have a long deletion in it then we will end up prematurely marking the read bases as being non-informative despite there being more than enough bases to work with when doing computations. Furthermore, since we realign the read bases later in the codepath, these bases in the gap between the realigned length and `read.getLength()` are still used to compute mismatch likelihood for bases before that point in the read. An example of this issue: I have a read with the cigar ""77M10D24M"", at position 92 of the read (the igv offset so in reality the 5th base into the last element of the cigar) the code returns false due to this condition. In reality `AlignmentUtils.getBasesAlignedOneToOne(read).length - readStart` value is 19, and thus comparable since there are >10 bases left in the read to test. . I have duplicated this behavior in #5607, perhaps it would be easiest to get that branch in first before tackling this issue just so validation for that refactor is easier.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5646:17,validat,validating,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5646,2,['validat'],"['validating', 'validation']"
Security,"Will include a top-level abstract Tool class, subclasses for each of the standard traversal types (ReadWalker, LocusWalker, etc.), and a class for each kind of data source (ReadDataSource, ReferenceDataSource, etc.). Initial framework will have placeholders/stub implementations for some functionality, but will support at least traversal by reads with the ability to access overlapping reference bases.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/82:368,access,access,368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/82,1,['access'],['access']
Security,"With `--genomicsdb-shared-posixfs-optimizations`, the storage system should only require read access. @droazen, will work towards a fix for this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1468563326:94,access,access,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-1468563326,1,['access'],['access']
Security,"With a service account key set, it worked like a charm:. ```; $ ./gatk-launch PrintReadsSpark -I gs://jpmartin-testing-project/hellbender-test-inputs/CEUTrio.HiSeq.WGS.b37.ch20.1m-2m.NA12878.bam -O gs://jpmartin-testing-project/test-output/readcount --shardedOutput true -- --sparkRunner GCS --cluster jps-test-cluster; (...); [November 20, 2017 6:17:08 PM UTC] org.broadinstitute.hellbender.tools.spark.pipelines.PrintReadsSpark done. Elapsed time: 0.72 minutes.; Runtime.totalMemory()=670040064; Job [13c93a62-96d0-456e-91d1-ef7b20f1236b] finished successfully.; ```. Though I understand that [this is expected](https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330650894). So next I tried it without any `HELLBEND*` environment variable and it worked as well!. ```; Job [6e2f2c6b-921a-4fdf-a42e-0706216b2098] finished successfully.; (...); $ gsutil ls -lh gs://jpmartin-testing-project/test-output/readcount/; 0 B 2017-11-20T18:28:27Z gs://jpmartin-testing-project/test-output/readcount/; 0 B 2017-11-20T18:28:52Z gs://jpmartin-testing-project/test-output/readcount/_SUCCESS; 120.25 MiB 2017-11-20T18:28:51Z gs://jpmartin-testing-project/test-output/readcount/part-r-00000.bam; ```. This is with `GOOGLE_APPLICATION_CREDENTIALS` set, as I believe is part of the GATK README instructions. Next I went to my repro code and tried it again with v30. It failed (`StorageException: Error code 404 trying to get security access token from Compute Engine metadata for the default service account.`) I'm not sure why but the new version is certainly an improvement over the previous one since it fixes `PrintReadsSpark`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-345788205:1422,secur,security,1422,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-345788205,2,"['access', 'secur']","['access', 'security']"
Security,"With the new GCS NIO reader, it may well be preferable to access large side inputs directly in GCS buckets rather than broadcasting them. This would reduce our memory usage dramatically relative to broadcast, and if the performance is the same or better it seems like the way to go.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2015:58,access,access,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2015,1,['access'],['access']
Security,"With this addition, summarizing the results of the MC3 validation will use more GATK, less scripting.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4982:55,validat,validation,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4982,1,['validat'],['validation']
Security,With this new version I'm able to make it fail again; I opened a million channels to read the same file (across 1k threads) and got the error below. Yes I know a million parallel reads on a single file is more than a normal user would issue. ```; shaded.cloud_nio.com.google.api.client.http.HttpRequest execute; WARNING: exception thrown while executing request; javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:992); 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); 	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316); 	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:250); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:77); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.auth.oauth2.ServiceAccountCredentials.refreshAccessToken(ServiceAccountCredentials.java:365); 	at shaded.cloud_nio.com.google.auth.oauth2.OAuth2Credentials.refresh(OAuth2Credentials.java:149); 	at shaded.cloud_nio.com.google.auth.oauth2.OAuth2Credentials.getRequestMetadata(OAuth2Credentials.java:135); 	at shaded.cloud_nio.com.google.auth.http.HttpCredentialsAdapter.initialize(HttpCredentialsAdapter.java:96); 	at com.google.cloud.http.HttpTransportOptions$1.initialize(HttpTransportOptions.java:156); 	at shaded.cloud_nio.c,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156:456,secur,security,456,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156,4,['secur'],['security']
Security,Work with palantir and/or short variants team to validate GATK4 version of VQSR,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2065:49,validat,validate,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2065,1,['validat'],['validate']
Security,"Would also be good to annotate which annotator (curr M2, HC and VA) has access to each annotation module.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344760216:72,access,access,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344760216,1,['access'],['access']
Security,"Would it be possible to expose the [`READ_QUALITY_FILTER_THRESHOLD`](https://github.com/broadinstitute/gatk/blob/9d5727df8db3a475b1ba5f9bff6bc92a322f5633/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerEngine.java#L729) on the command line for 4.9.0.1? I know on the latest branch we have [`--mapping-quality-threshold`](https://github.com/broadinstitute/gatk/blob/7e3d8a1e0c56206345128e3a6125ecc30427deda/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerArgumentCollection.java#L153). For data and regions where we get low mapping qualities (eg. PacBio), a hard-filter on mapq 20 is onerous. I'd also echo the comment in the latter TODO that the interplay between `----mapping-quality-threshold` (new) and ` --minimum-mapping-quality` (old) is confusing upon first inspection.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7034:24,expose,expose,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7034,1,['expose'],['expose']
Security,Wrapper around VC object to access SVContext specific annotations.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3476:28,access,access,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3476,1,['access'],['access']
Security,"Wrote a SimpleCopyRatioCaller that is still relatively naive, but I think a bit more sensible than ReCapSegCaller. It does the following:. 1) use the non-log2 mean copy ratio to determine copy-neutral segments (those within 1 +/- x, where x is an exposed parameter),; 2) weight segments by length for determining the mean and standard deviation of the non-log2 copy ratio in copy-neutral segments,; 3) filter outlier copy-neutral segments by non-log2 copy ratio z-score,; 4) use the filtered copy-neutral segments to determine a length-weighted mean and standard deviation,; 5) call remaining segments using z-score based on this mean and standard deviation. @MartonKN take note of these changes! I am sure that your caller will still do much better, especially given the allele-fraction data.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3825#issuecomment-344590576:247,expose,exposed,247,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3825#issuecomment-344590576,1,['expose'],['exposed']
Security,WxlY3RWYXJpYW50c1VuaXRUZXN0LmphdmE=) | `100% <ø> (ø)` | `12 <0> (?)` | |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `87.037% <0%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...te/hellbender/engine/spark/VariantWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvVmFyaWFudFdhbGtlclNwYXJrLmphdmE=) | `72.34% <0%> (-2.128%)` | `14 <0> (ø)` | |; | [...itute/hellbender/engine/spark/ReadWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvUmVhZFdhbGtlclNwYXJrLmphdmE=) | `77.419% <0%> (ø)` | `10 <0> (ø)` | :arrow_down: |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `84.946% <0%> (ø)` | `24 <0> (ø)` | :arrow_down: |; | [...tute/hellbender/engine/spark/LocusWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvTG9jdXNXYWxrZXJTcGFyay5qYXZh) | `77.778% <0%> (ø)` | `12 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/tools/HaplotypeCallerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9IYXBsb3R5cGVDYWxsZXJTcGFyay5qYXZh) | `84% <0%> (+23%)` | `30 <0> (+14)` | :arrow_up: |; | [...ava/org/broadinstitute/hellbender/utils/Utils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4495/diff?src=pr&el=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4495#issuecomment-370539956:2174,validat,validation,2174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4495#issuecomment-370539956,1,['validat'],['validation']
Security,XMuamF2YQ==) | `81.818% <0%> (-3.182%)` | `18% <0%> (+1%)` | |; | [...stitute/hellbender/utils/nio/PathLineIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vUGF0aExpbmVJdGVyYXRvci5qYXZh) | `61.111% <0%> (-3.175%)` | `4% <0%> (ø)` | |; | [...rs/variantutils/SelectVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `98% <0%> (-2%)` | `71% <0%> (ø)` | |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `87.179% <0%> (-1.417%)` | `41% <0%> (+2%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.601% <0%> (-1.399%)` | `8% <0%> (+2%)` | |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.163% <0%> (-0.426%)` | `101% <0%> (+1%)` | |; | [...lbender/utils/variant/GATKVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzLmphdmE=) | `84.892% <0%> (-0.172%)` | `256% <0%> (-4%)` | |; | [...ls/walkers/mutect/CreateSomaticPanelOfNormals.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164:2435,validat,validation,2435,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164,1,['validat'],['validation']
Security,XZh) | `60.57% <100%> (ø)` | `65 <0> (ø)` | :arrow_down: |; | [...nder/tools/walkers/vqsr/FilterVariantTranches.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzLmphdmE=) | `92.241% <100%> (ø)` | `42 <0> (ø)` | :arrow_down: |; | [...ellbender/tools/funcotator/FilterFuncotations.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0ZpbHRlckZ1bmNvdGF0aW9ucy5qYXZh) | `93.103% <100%> (ø)` | `18 <0> (ø)` | :arrow_down: |; | [...itute/hellbender/tools/walkers/vqsr/ApplyVQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQXBwbHlWUVNSLmphdmE=) | `75% <100%> (ø)` | `55 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/validation/RemoveNearbyIndels.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzLmphdmE=) | `90.476% <100%> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/engine/GATKToolUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2xVbml0VGVzdC5qYXZh) | `91.017% <100%> (ø)` | `71 <0> (ø)` | :arrow_down: |; | [...idation/AnnotateVcfWithExpectedAlleleFraction.java](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbi5qYXZh) | `96.429% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | ... and [23 more](https://codecov.io/gh/broadinstitute/gatk/pull/5728/diff?src=pr&,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5728#issuecomment-467660715:3055,validat,validation,3055,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5728#issuecomment-467660715,1,['validat'],['validation']
Security,"Y. On Mon, Nov 14, 2016 at 6:19 PM, Geraldine Van der Auwera <; notifications@github.com> wrote:. > From what I understand of the referenced thread, the ""incorrect"" interval; > list may always be around, so we may never be able to just blow up on it.; > Would it perhaps be more viable to add an option to toggle the level of; > stringency, ie choose in the command line whether to blow up or skip on; > these invalid intervals?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260495927,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACnk0uvegvUmCq7_G7U2PSuTpvIYl0wQks5q-Ox0gaJpZM4JNjE-; > . ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260519118). So, would adding a toggle be acceptable? And more importantly, can we make stringent validation default, with the option to not blow up on silly exome files? Will production accept that?. ---. @yfarjoun commented on [Tue Nov 15 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260617185). let me talk with production to see if we can post-facto change the exome; file... On Mon, Nov 14, 2016 at 8:27 PM, Geraldine Van der Auwera <; notifications@github.com> wrote:. > So, would adding a toggle be acceptable? And more importantly, can we make; > stringent validation default, with the option to not blow up on silly exome; > files? Will production accept that?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260519118,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACnk0tUTNAAyuk3m_2cJ8j_3KYroaqB1ks5q-QpsgaJpZM4JNjE-; > . ---. @vdauwera commented on [Mon Mar 20 2017](https://github.com/broad",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2520:2559,validat,validation,2559,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2520,1,['validat'],['validation']
Security,YNC_IO_WRITE_FOR_TRIBBLE : false; 17:28:28.782 INFO GermlineCNVCaller - Deflater: IntelDeflater; 17:28:28.782 INFO GermlineCNVCaller - Inflater: IntelInflater; 17:28:28.782 INFO GermlineCNVCaller - GCS max retries/reopens: 20; 17:28:28.782 INFO GermlineCNVCaller - Requester pays: disabled; 17:28:28.782 INFO GermlineCNVCaller - Initializing engine; 17:28:34.716 INFO GermlineCNVCaller - Done initializing engine; 17:28:34.723 INFO GermlineCNVCaller - Intervals specified...; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 17:28:35.689 INFO FeatureManager - Using codec IntervalListCodec to read file file:///media/Data/AnnotationDBs/CNV/Genom/hdf5/../Genom.filtered.interval_list; 17:28:42.892 INFO IntervalArgumentCollection - Processing 2741406000 bp from intervals; 17:28:43.237 INFO GermlineCNVCaller - Reading and validating annotated intervals...; 17:28:51.740 INFO GermlineCNVCaller - GC-content annotations for intervals found; explicit GC-bias correction will be performed...; 17:28:57.410 INFO GermlineCNVCaller - Running the tool in COHORT mode...; 17:28:57.410 INFO GermlineCNVCaller - Validating and aggregating data from input read-count files...; 17:28:57.940 INFO GermlineCNVCaller - Aggregating read-count file 0028-21.hdf5 (1 / 44); 17:29:00.837 INFO GermlineCNVCaller - Aggregating read-count file 0045-21.hdf5 (2 / 44); 17:29:03.690 INFO GermlineCNVCaller - Aggregating read-count file 0098-18.hdf5 (3 / 44); 17:29:06.658 INFO GermlineCNVCaller - Aggregating read-count file 0156-21.hdf5 (4 / 44); 17:29:09.435 INFO GermlineCNVCaller - Aggregating read-count file 0429-20.hdf5 (5 / 44); 17:29:12.235 INFO GermlineCNVCaller - Aggregating read-count file 0779-18.hdf5 (6 / 44); 17:29:14.939 INFO GermlineCNVCaller - Aggregating read-count file 1030-20.hdf5 (7 / 44); 17:29:17.822 INFO GermlineCNV,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7234:5312,validat,validating,5312,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7234,1,['validat'],['validating']
Security,YXRpb24vQ2FsY3VsYXRlQ29udGFtaW5hdGlvbi5qYXZh) | `97.207% <0%> (+1.339%)` | `56% <0%> (+18%)` | :arrow_up: |; | [...bender/tools/walkers/mutect/FilterMutectCalls.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9GaWx0ZXJNdXRlY3RDYWxscy5qYXZh) | `97.436% <0%> (+1.603%)` | `13% <0%> (+6%)` | :arrow_up: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.973% <0%> (+2.74%)` | `11% <0%> (ø)` | :arrow_down: |; | [...ools/walkers/contamination/GetPileupSummaries.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vR2V0UGlsZXVwU3VtbWFyaWVzLmphdmE=) | `84.286% <0%> (+3.851%)` | `20% <0%> (+4%)` | :arrow_up: |; | [...ellbender/tools/exome/FilterByOrientationBias.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9GaWx0ZXJCeU9yaWVudGF0aW9uQmlhcy5qYXZh) | `86.905% <0%> (+3.886%)` | `21% <0%> (+7%)` | :arrow_up: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `93.182% <0%> (+4.64%)` | `44% <0%> (+16%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/4315/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `90% <0%> (+10%)` | `3% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4315#issuecomment-362048697:3167,validat,validation,3167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4315#issuecomment-362048697,1,['validat'],['validation']
Security,"Yeah, `--force` is the right thing to do, and I added it to build.gradle a few months ago as part of https://github.com/broadinstitute/gatk/pull/5081, but that PR has languished because my original package validation was lame, and I never went back and resolved it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5776#issuecomment-470985048:206,validat,validation,206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5776#issuecomment-470985048,1,['validat'],['validation']
Security,"Yeah, it's definitely confusing, we should look into changing it for the future. We definitely do recommend using our launcher script though, which handles it for you. . It was tricky to enable both spark-submit and standalone running spark through the jar without having a way to inject the spark master as a command line argument, but there's probably a better way of handling it then the way we do. . I'm keeping this issue open, but since it's a pretty easy workaround I don't know when we'll be able to fix it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2718#issuecomment-302179455:281,inject,inject,281,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2718#issuecomment-302179455,1,['inject'],['inject']
Security,"Yep, antares58 is me. Elizabeth Lee. Sent with [Proton Mail](https://proton.me/) secure email. ------- Original Message -------; On Tuesday, November 22nd, 2022 at 7:14 AM, Anthony Dias-Ciarla ***@***.***> wrote:. > Hi ***@***.***(https://github.com/antares58) ,; >; > We created this ticket for one of our users on the GATK forum, [Elizabeth Lee](https://gatk.broadinstitute.org/hc/en-us/community/posts/9761457082907-JointGenotyping-ImportGvcfs-terminates-without-an-active-exception).; >; > In the interest of clarity, are you responding on her behalf? Are you the cluster admin? If you are not related to the original user, we will need to create a separate ticket.; >; > Thank you in advance for any clarity that you can provide!; >; > Best,; > Anthony; >; > —; > Reply to this email directly, [view it on GitHub](https://github.com/broadinstitute/gatk/issues/8076#issuecomment-1323834544), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/AWNKFIEGLOGOYBSTJEDLUF3WJTPNBANCNFSM6AAAAAARQLF3GE).; > You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8076#issuecomment-1336529947:81,secur,secure,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8076#issuecomment-1336529947,1,['secur'],['secure']
Security,"Yes I know but still, I gave it Storage Legacy Bucket Reader access to both buckets....; Is it possible it can come from the gs://gcp-public-data--gnomad or gs://genomics-public-data buckets?; <img width=""1352"" alt=""Screenshot 2021-10-05 at 16 05 09"" src=""https://user-images.githubusercontent.com/17239533/136094811-db2fc1ff-56f0-4ad7-a3b7-dac0e4663ad3.png"">; <img width=""1357"" alt=""Screenshot 2021-10-05 at 16 07 53"" src=""https://user-images.githubusercontent.com/17239533/136095179-34f0adac-7ae6-49bf-abbf-57c21c709ddb.png"">",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7492#issuecomment-934754734:61,access,access,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7492#issuecomment-934754734,1,['access'],['access']
Security,"Yes, I messed up the commit message and wrote that it ""resolves issue 5433"" instead of ""resolves issue #5433"". Without the hash I guess github assumes it's stupid meatbag language and ignores it. The bug should be fixed so I'm closing the issue manually. Sorry to leave this hanging the last month, and thanks for pointing it out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779:123,hash,hash,123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5433#issuecomment-449899779,1,['hash'],['hash']
Security,"Yes, I see the same errors in `CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam` from `ValidateSamFile`. Here's some of the output:. ```; [March 9, 2017 7:03:42 PM EST] org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile --input src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.00",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:78,Validat,ValidateSamFile,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,4,['Validat'],['ValidateSamFile']
Security,"Yes, ideally we'd generate these once and check them, but I think that would also require a little bit of process to ensure that they're always accessible to both gatkdoc and javadoc.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6606#issuecomment-640585794:144,access,accessible,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6606#issuecomment-640585794,1,['access'],['accessible']
Security,"Yes, what are the plans? I too would like to know. ---; What are the plans for the tools available in Picard 2.9.2 or GATK3.7 that are not in GATK4 alpha? Is the plan eventually to port everything to GATK4? Or are some being permanently sent out to pasture?. I have specifically noticed as missing:; - CollectVariantCallingMetrics; - SetNmMdAndUqTags; - the -gvcf option for ValidateVariants. This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/9736/gatk4-status-of-some-picard-gatk3-7-tools-missing-from-alpha/p1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3084:375,Validat,ValidateVariants,375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3084,1,['Validat'],['ValidateVariants']
Security,YnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `22.807% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQXBwbHlCUVNSLmphdmE=) | `91.667% <ø> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ellbender/tools/walkers/bqsr/BaseRecalibrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvci5qYXZh) | `88.372% <ø> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmsuamF2YQ==) | `86.957% <100%> (ø)` | `9 <0> (ø)` | :arrow_down: |; | [...recalibration/RecalibrationArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087:2131,validat,validation,2131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087,1,['validat'],['validation']
Security,"You might be right---and I think it's worse, in that the ReadCountCollection argument validation (for uniqueness of targets, etc.) also adds to the overhead.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-316481843:86,validat,validation,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-316481843,1,['validat'],['validation']
Security,You would not have access to docker container options when using the Google backend because the running of your image is all controlled by Pipelines API. You would be able to set that value when running on a local backend but thats probably not portable enough for your workflow.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357313468:19,access,access,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4140#issuecomment-357313468,1,['access'],['access']
Security,"You're totally right about the assembly failures. As we talked about in person yesterday, I worry about biasing the; likelihoods when genotyping positions near homVar variants. For the; record, the conclusion of that conversation was to inject the GGA allele; into the five best assembled haplotypes, though I'm open to something less; heuristic than ""best five"" if anyone has a good idea. (I don't want to; double the number of haplotypes by adding the GGA allele into all of them). On Thu, Apr 4, 2019 at 2:19 PM David Benjamin <notifications@github.com>; wrote:. > Update: I wrote an integration test in my branch that runs M2 with; > --kmer-size 1 --dont-increase-kmer-sizes-for-cycles. It still calls the; > given alleles, whereas in master it does not.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5857#issuecomment-480008571>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdF1sCpAlqKNa6S_qlL_ypNX_A0eGks5vdkI7gaJpZM4cbxVV>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-480291626:237,inject,inject,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-480291626,1,['inject'],['inject']
Security,"Your interpretation sounds right, although I wish the language in the SAM spec were clearer - something like ""if 0x1 is unset, fields 0x2, 0x8, 0x20, 0x40, and 0x80 have no meaning and are ignored by the tools"". SAMRecord.IsValid() returns errors not only for 0x8(mate unmapped)/unpaired read, but also for the other four fields, so all of these errors would need to be removed. IsValid() also triggers an error when an unpaired read has RNEXT set, but the spec. ; doesn't appear to exclude this error. No error is triggered for the unpaired/PNEXT case. . So I agree that it looks like IsValid() should be changed to align with the spec. But I can also imagine potential pitfalls of leaving the GenomicsConverter code the way it is. The code adds spurious information to the bam that might cause problems with legacy versions of the tools. I don't know what the plans are for the state of the existing tool distribution once gatk4 is released. Is it possible that bam files produced in the cloud could make their way into gatk3 workflows, maybe via the sharing of bams between groups? If this happens, then unpaired reads processed in the cloud, with their mate unpaired flags set by the converter, could trigger validation errors when they are fed to the legacy tools. Is there a downside to altering the converter code as well as modifying the ; validator (I don't know what altering google packages entails...)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114510392:1213,validat,validation,1213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114510392,2,['validat'],"['validation', 'validator']"
Security,"Your solution doesn't address your third listed drawback to the current; approach, though I'm not sure there's any way to do that that wouldn't; require a pretty dramatic change. It's not obvious to me why we wanted the given alleles in the graph; originally. Maybe the use case was variants from UG that we didn't; necessarily believe were aligned properly?. I don't have any objections, but I'd feel better if we had a better guess; at what the original method was trying to do. On Wed, Apr 3, 2019 at 9:56 PM David Benjamin <notifications@github.com>; wrote:. > In Mutect2 and HaplotypeCaller, we force-call alleles by injecting them; > into the ref haplotype, then threading these constructed haplotypes into; > the assembly graph with a large edge weight. There are several drawbacks to; > this approach:; >; > - The strange edge weights interfere with the AdaptiveChainPruner.; > - The large edge weights may not be large enough to avoid pruning when; > depth is extremely high.; > - The alleles may be lost if assembly fails.; > - If the alleles actually exist but are in phase with another variant; > we end up putting an enormous amount of weight on a false haplotype.; >; > We can get around these issue with the following method:; >; > - assemble haplotypes without regard to the force-called alleles.; > - if an allele is present in these haplotypes, do nothing further.; > - otherwise, add a haplotype in which the allele is injected into the; > reference haplotype.; >; > @LeeTL1220 <https://github.com/LeeTL1220> I prototyped this and it seems; > to resolve the missed forced alleles that Ziao found.; >; > @ldgauthier <https://github.com/ldgauthier> Can you think of any; > objections to making this change in HaplotypeCaller?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5857>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdMcaTJg47gn",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767:622,inject,injecting,622,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767,1,['inject'],['injecting']
Security,"Yup, sorry about this---caught and fixed in #4280. I'd maybe count this as a `womtool validate` bug...?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4281#issuecomment-361069134:86,validat,validate,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4281#issuecomment-361069134,1,['validat'],['validate']
Security,[Echo] bq query audit [VS-1396] (#8847),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8854:16,audit,audit,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8854,1,['audit'],['audit']
Security,"[info] WorkflowManagerActor Starting workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] WorkflowManagerActor Successfully started WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] Retrieved 1 workflows from the WorkflowStoreActor; [2020-07-14 05:09:30,72] [info] WorkflowStoreHeartbeatWriteActor configured to flush with batch size 10000 and process rate 2 minutes.; [2020-07-14 05:09:30,83] [info] MaterializeWorkflowDescriptorActor [968be82c]: Parsing workflow as WDL 1.0; [2020-07-14 05:09:31,60] [info] MaterializeWorkflowDescriptorActor [968be82c]: Call-to-Backend assignments: ValidateBamsWf.ValidateBAM -> Local; [2020-07-14 05:09:31,82] [warn] Local [968be82c]: Key/s [memory, disks] is/are not supported by backend. Unsupported attributes will not be part of job executions.; [2020-07-14 05:09:35,38] [info] Not triggering log of token queue status. Effective log interval = None; [2020-07-14 05:09:37,15] [info] WorkflowExecutionActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 [968be82c]: Starting ValidateBamsWf.ValidateBAM; [2020-07-14 05:09:37,39] [info] Assigned new job execution tokens to the following groups: 968be82c: 1; [2020-07-14 05:09:41,61] [warn] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Unrecognized runtime attribute keys: disks, memory; [2020-07-14 05:09:41,71] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: /gatk/gatk \; ValidateSamFile \; --INPUT /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/inputs/-1942028726/test.bam \; --OUTPUT test.validation_.txt \; --MODE SUMMARY; [2020-07-14 05:09:41,76] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: executing: # make sure there is no preexisting Docker CID file; rm -f /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execut",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:4371,Validat,ValidateBamsWf,4371,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['Validat'],['ValidateBamsWf']
Security,"\ ; ; ASEReadCounter \\ ; ; \-L scattered.interval\_list \\ ; ; \-R Homo\_sapiens\_assembly19.fasta \\ ; ; \-V 1000G\_phase1.snps.high\_confidence.b37.vcf.gz \\ ; ; \-I downsample\_10k.bam \\ ; ; \-O output.txt --verbosity INFO. c) Entire error log:. 19:13:25.991 INFO NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/broad/software/free/Linux/redhat\_7\_x86\_64/pkgs/gatk\_4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl\_compression.so. Jun 14, 2021 7:13:26 PM shaded.cloud\_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials. WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see [https://cloud.google.com/docs/authentication/](https://cloud.google.com/docs/authentication/). 19:13:26.217 INFO ASEReadCounter - ------------------------------------------------------------. 19:13:26.218 INFO ASEReadCounter - The Genome Analysis Toolkit (GATK) v4.1.8.1. 19:13:26.218 INFO ASEReadCounter - For support and documentation go to [https://software.broadinstitute.org/gatk/](https://software.broadinstitute.org/gatk/). 19:13:26.219 INFO ASEReadCounter - Executing as [cbao@uger-c009.broadinstitute.org](mailto:cbao@uger-c009.broadinstitute.org) on Linux v3.10.0-1160.15.2.el7.x86\_64 amd64. 19:13:26.219 INFO ASEReadCounter - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0\_181-b13. 19:13:26.219 INFO ASEReadCounter - Start Date/Time: June 14, 2021 7:13:25 PM UTC. 19:13:26.219 INFO ASEReadCounter - ------------------------------------------------------------. 19:13:26.219 INFO ASEReadCounter - ------------------------------------------------------------. 19:13:26.220 INFO ASEReadCounter - HTSJDK Version: 2.23.0. 19:",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7327:2114,authenticat,authentication,2114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7327,1,['authenticat'],['authentication']
Security,"] Running with database db.url = jdbc:hsqldb:mem:f10b64bd-d8ca-4428-917b-311fca24c372;shutdown=false;hsqldb.tx=mvcc; [2020-07-14 05:09:29,36] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2020-07-14 05:09:29,37] [info] [RenameWorkflowOptionsInMetadata] 100%; [2020-07-14 05:09:29,47] [info] Running with database db.url = jdbc:hsqldb:mem:e337a356-2f0c-4389-92c5-255465180f24;shutdown=false;hsqldb.tx=mvcc; [2020-07-14 05:09:29,89] [info] Slf4jLogger started; [2020-07-14 05:09:30,10] [info] Workflow heartbeat configuration:; {; ""cromwellId"" : ""cromid-ca5c695"",; ""heartbeatInterval"" : ""2 minutes"",; ""ttl"" : ""10 minutes"",; ""failureShutdownDuration"" : ""5 minutes"",; ""writeBatchSize"" : 10000,; ""writeThreshold"" : 10000; }; [2020-07-14 05:09:30,23] [info] Metadata summary refreshing every 1 second.; [2020-07-14 05:09:30,23] [warn] 'docker.hash-lookup.gcr-api-queries-per-100-seconds' is being deprecated, use 'docker.hash-lookup.gcr.throttle' instead (see reference.conf); [2020-07-14 05:09:30,25] [info] CallCacheWriteActor configured to flush with batch size 100 and process rate 3 seconds.; [2020-07-14 05:09:30,26] [info] KvWriteActor configured to flush with batch size 200 and process rate 5 seconds.; [2020-07-14 05:09:30,26] [info] WriteMetadataActor configured to flush with batch size 200 and process rate 5 seconds.; [2020-07-14 05:09:30,36] [info] JobExecutionTokenDispenser - Distribution rate: 50 per 1 seconds.; [2020-07-14 05:09:30,46] [info] SingleWorkflowRunnerActor: Version 51; [2020-07-14 05:09:30,48] [info] SingleWorkflowRunnerActor: Submitting workflow; [2020-07-14 05:09:30,55] [info] Unspecified type (Unspecified version) workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 submitted; [2020-07-14 05:09:30,66] [info] SingleWorkflowRunnerActor: Workflow submitted 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,67] [info] 1 new workflows fetched by cromid-ca5c695: 968be82c-eef3-4bdb-a1ab-3d",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:2263,hash,hash-lookup,2263,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['hash'],['hash-lookup']
Security,"_64 ; INFO 10:49:20,811 HelpFormatter - Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14 ; INFO 10:49:20,813 HelpFormatter - Program Args: -T LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V zeta_snippet.vcf.gz -o zeta_snippet_leftalign.vcf.gz ; INFO 10:49:20,819 HelpFormatter - Executing as shlee@WMCF9-CB5 on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14. ; INFO 10:49:20,819 HelpFormatter - Date/Time: 2017/08/23 10:49:20 ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,830 GenomeAnalysisEngine - Strictness is SILENT ; INFO 10:49:21,846 GenomeAnalysisEngine - Downsampling Settings: Method: BY_SAMPLE, Target Coverage: 1000 ; WARN 10:49:22,065 IndexDictionaryUtils - Track variant doesn't have a sequence dictionary built in, skipping dictionary validation ; INFO 10:49:22,989 GenomeAnalysisEngine - Preparing for traversal ; INFO 10:49:22,994 GenomeAnalysisEngine - Done preparing for traversal ; INFO 10:49:22,995 ProgressMeter - [INITIALIZATION COMPLETE; STARTING PROCESSING] ; INFO 10:49:22,995 ProgressMeter - | processed | time | per 1M | | total | remaining ; INFO 10:49:22,995 ProgressMeter - Location | sites | elapsed | sites | completed | runtime | runtime ; INFO 10:49:23,191 LeftAlignAndTrimVariants - Reference allele is too long (245) at position chr1:10146; skipping that record. Set --reference_window_stop >= 245 ; INFO 10:49:23,197 LeftAlignAndTrimVariants - Reference allele is too long (225) at position chr1:10178; skipping that record. Set --reference_window_stop >= 225 ; INFO 10:49:23,200 LeftAlignAndTrimVariants - Reference allele is too long (221) at position chr1:10213; skipping that record. Set --reference_window_stop >= 221 ; INFO 10:49:23,201 LeftAlignAndTrimVariants - Reference allele is",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091:2110,validat,validation,2110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091,1,['validat'],['validation']
Security,_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 18:35:26.517 INFO MarkDuplicatesSpark - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 18:35:26.517 INFO MarkDuplicatesSpark - Deflater: IntelDeflater; 18:35:26.517 INFO MarkDuplicatesSpark - Inflater: IntelInflater; 18:35:26.517 INFO MarkDuplicatesSpark - GCS max retries/reopens: 20; 18:35:26.517 INFO MarkDuplicatesSpark - Requester pays: disabled; 18:35:26.517 INFO MarkDuplicatesSpark - Initializing engine; 18:35:26.517 INFO MarkDuplicatesSpark - Done initializing engine; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/user/wup/miniconda3/envs/gatk/share/gatk4-4.1.8.1-0/gatk-package-4.1.8.1-local.jar) to method java.nio.Bits.unaligned(); WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 20/10/08 18:35:27 INFO SparkContext: Running Spark version 2.4.5; 18:35:27.640 WARN NativeCodeLoader - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 20/10/08 18:35:27 INFO SparkContext: Submitted application: MarkDuplicatesSpark; 20/10/08 18:35:27 INFO SecurityManager: Changing view acls to: wup; 20/10/08 18:35:27 INFO SecurityManager: Changing modify acls to: wup; 20/10/08 18:35:27 INFO SecurityManager: Changing view acls groups to: ; 20/10/08 18:35:27 INFO SecurityManager: Changing modify acls groups to: ; 20/10/08 18:35:27 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(wup); groups with view permissions: Set(); users with modify permissions: Set(wup); groups with modify permissions: Set(); 20/10/08 18:35:28 INFO Utils: Suc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6875:2317,access,access,2317,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6875,3,['access'],['access']
Security,"_CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath). TEST_DIR=""hdfs://cromwellhadooptest:8020/user/hadoop/gatk/small""; COMMON_DIR=""hdfs://cromwellhadooptest:8020/user/hadoop/gatk/common""; INPUT_DIR=""$TEST_DIR/input""; OUTPUT_DIR=""$TEST_DIR/output"". input_bam=""$INPUT_DIR/small_CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam""; output_vcf_basename=""$OUTPUT_DIR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21"". ref_fasta=""$COMMON_DIR/human_g1k_v37.20.21.fasta""; known_sites=""$COMMON_DIR/dbsnp_138.b37.20.21.vcf"". gatk ReadsPipelineSpark \; -R ${ref_fasta} \; -I ${input_bam} \; -O ${output_vcf_basename}.vcf \; --known-sites ${known_sites} \; -pairHMM AVX_LOGLESS_CACHING \; --spark-verbosity DEBUG \; -- --spark-runner SPARK --spark-master yarn-cluster \; # --conf 'spark.submit.deployMode=cluster'; ```. #### Expected behavior. ReadsPipelineSpark should be able to resolve the hdfs file path: `hdfs://cromwellhadooptest:8020/user/hadoop/gatk/common/human_g1k_v37.20.21.fasta`. #### Actual behavior; The tool tries to access: `file:///user/hadoop/gatk/common/human_g1k_v37.20.21.fasta` even when the input is: `hdfs://cromwellhadooptest:8020/user/hadoop/gatk/common/human_g1k_v37.20.21.fasta`. Verified that the file is accesible through hdfs:; ```; (gatk) root@2e738717b9c1:/gatk/mnt# $HADOOP_HOME/bin/hdfs dfs -ls hdfs://cromwellhadooptest:8020/user/hadoop/gatk/common/human_g1k_v37.20.21.fasta; -rw-r--r-- 3 hadoop supergroup 113008112 2020-07-29 15:54 hdfs://cromwellhadooptest:8020/user/hadoop/gatk/common/human_g1k_v37.20.21.fasta; ```; When I specify input as: `hdfs://cromwellhadooptest/user/hadoop/gatk/common/human_g1k_v37.20.21.fasta`, (i.e. without the port) I get the same error. **Stack trace for this**:; ```; ***********************************************************************; A USER ERROR has occurred: The specified fasta file (file:///user/hadoop/gatk/common/human_g1k_v37.20.21.fasta) does not exist.; ***********************************************************************; org.broadinstitute.hellbe",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6730:1653,access,access,1653,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6730,1,['access'],['access']
Security,"_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 17:43:53.302 INFO ValidateVariants - Shutting down engine; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=194510848; java.lang.IllegalArgumentException: Illegal base [] seen in the allele; 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:231); 	at htsjd",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:3541,Validat,ValidateVariants,3541,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,2,"['Validat', 'validat']","['ValidateVariants', 'validationExampleGood']"
Security,"_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to whic",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1483,Validat,ValidateSamFile,1483,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY must be set or the GCS hadoop connector will not be configured properly; 12:33:52.162 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/FGI2017B/pub/gatk-4.1.0.0/gatk-package-4.1.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 12:33:53.793 INFO CreateReadCountPanelOfNormals - ------------------------------------------------------------; 12:33:53.794 INFO CreateReadCountPanelOfNormals - The Genome Analysis Toolkit (GATK) v4.1.0.0; 12:33:53.794 INFO CreateReadCountPanelOfNormals - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:33:53.797 INFO CreateReadCountPanelOfNormals - Initializing engine; 12:33:53.797 INFO CreateReadCountPanelOfNormals - Done initializing engine; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 19/02/18 12:33:53 INFO SparkContext: Running Spark version 2.2.0; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/share/FGI2017B/pub/gatk-4.1.0.0/gatk-package-4.1.0.0-local.jar) to method sun.security.krb5.Config.getInstance(); WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:33:54.187 WARN NativeCodeLoader - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 12:33:54.263 INFO CreateReadCountPanelOfNormals - Shutting down engine; [February 18, 2019 at 12:33:54 PM CST] org.broadinstitute.hellbender.tools.copynumber.CreateReadCountPanelOfNormals done. Elapsed time: 0.04 minutes.; Runtime.totalMemory()=2147483648; Exception in thread ""main"" java.lang.ExceptionInInitializerError; 	at or",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5686:1424,access,access,1424,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5686,2,['access'],['access']
Security,_async_io_write_tribble=false -Dsamjdk.compression_level=2 --conf spark.kryoserializer.buffer.max=512m --conf spark.yarn.executor.memoryOverhead=600 /root/gatk-4.0.7.0/gatk-package-4.0.7.0-spark.jar PrintReadsSpark -I ../6484_snippet.bam -O ../output.bam --spark-master spark://10.0.0.21:7077; SLF4J: Class path contains multiple SLF4J bindings.; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark2/jars/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark_llap/spark-llap-assembly-1.0.0.2.6.3.40-13.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]; java.lang.NoClassDefFoundError: org/apache/logging/log4j/core/appender/AbstractAppender; at java.lang.ClassLoader.defineClass1(Native Method); at java.lang.ClassLoader.defineClass(ClassLoader.java:763); at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); at java.net.URLClassLoader.defineClass(URLClassLoader.java:467); at java.net.URLClassLoader.access$100(URLClassLoader.java:73); at java.net.URLClassLoader$1.run(URLClassLoader.java:368); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349); at java.lang.ClassLoader.loadClass(ClassLoader.java:411); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.decodeCacheFiles(PluginRegistry.java:181); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.loadFromMainClassLoader(PluginRegistry.java:119); at org.apache.logging.log4j.core.config.plugins.util.PluginManager.collectPlugins(PluginManager.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5126:2581,secur,security,2581,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126,1,['secur'],['security']
Security,_nio_fixes; 10:56:25.360 WARN GermlineCNVCaller -. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: GermlineCNVCaller is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 10:56:25.361 INFO GermlineCNVCaller - Initializing engine; 10:56:54.347 INFO GermlineCNVCaller - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 10:56:55.287 INFO GermlineCNVCaller - Retrieving intervals from first read-count file (hdf5/grexome0426.hdf5)...; 10:56:55.384 INFO GermlineCNVCaller - No GC-content annotations for intervals found; explicit GC-bias correction will not be performed...; 10:56:55.482 INFO GermlineCNVCaller - Running the tool in the COHORT mode...; 10:56:55.485 INFO GermlineCNVCaller - Validating and aggregating data from input read-count files...; 10:56:55.511 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0426.hdf5 (1 / 387); 10:56:55.812 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0342.hdf5 (2 / 387); 10:56:56.274 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0316.hdf5 (3 / 387); 10:56:56.635 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0338.hdf5 (4 / 387); 10:56:57.092 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0360.hdf5 (5 / 387); 10:56:57.728 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0384.hdf5 (6 / 387); 10:56:58.144 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0213.hdf5 (7 / 387); 10:56:58.681 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0347.hdf5 (8 / 387); 10:56:59.192 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0125.hdf5 (9 / 387); 10:56:59.643 INFO GermlineCNVCaller - Aggregating read-count ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5053:3460,Validat,Validating,3460,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053,1,['Validat'],['Validating']
Security,"`CloudStorageReadChannel.create()` appears to do a GCS access outside of the retry mechanism in `CloudStorageReadChannel.read()`. It calls the constructor, which calls `CloudStorageReadChannel.fetchSize()`, which does a `gcsStorage.get(file)` followed by a `getSize()`. . We are seeing 503 failures specifically from the GCS access in `CloudStorageReadChannel.fetchSize()`:. ```; com.google.cloud.storage.StorageException: 503 Service Unavailable; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:335); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:191); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:188); at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:94); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:54); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:188); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:202); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:234); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.<init>(CloudStorageReadChannel.java:78); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:68); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:304); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:265); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at htsjdk.samtools.seekablestream.SeekablePathStream.<init>(SeekablePathStream.java:41); at htsjdk.samtools.seekablestream.SeekableStreamFactory$DefaultSeekableStreamFactory.getStreamFor(SeekableStreamFactory.java:101); at htsjdk.tribble.readers.Ta",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3253:55,access,access,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3253,2,['access'],['access']
Security,`DataSourceUtils` contains string constants for fields in the config file (e.g. `CONFIG_FILE_FIELD_NAME_NAME`). These should be rolled into an enum together. This will facilitate file validation by enabling them to be iterated over automatically using the enum's built in methods.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5465:184,validat,validation,184,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5465,1,['validat'],['validation']
Security,"`GATKReadFilterPluginDescriptor.getAllInstances()` returns only the filters provided by the user, but I expect it to return the default ones. I know that they are added to the merged filter in `getMergedReadFilter`, but this does not allow to retrieve it as a list. In addition, there is no way to access the default filters provided. I suggest to move the code to merge into the same list the default and the user-provided filters to `getAllInstances()` and use that list in the `getMergedReadFilter`. ## EDITED:; The contract of `getAllInstances()` says that it should not include the default ones, so I propose a new specific method for retrieval.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2362:298,access,access,298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2362,1,['access'],['access']
Security,"`GATKTool` uses stricter sequence dictionary validation settings for CRAM vs. reference than for non-CRAM vs. reference:. ```; if ( hasCramInput() ) {; // Use stricter validation for CRAM vs. the reference; SequenceDictionaryUtils.validateCRAMDictionaryAgainstReference(refDict, readDict);; }; else {; // Use standard validation settings for non-CRAM reads input vs. the reference; SequenceDictionaryUtils.validateDictionaries(""reference"", refDict, ""reads"", readDict);; }; ```. `GATKSparkTool.validateToolInputs()` should be patched to do the same, AFTER https://github.com/broadinstitute/gatk/issues/966 is done and cram support is in a usable state.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1179:45,validat,validation,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1179,6,['validat'],"['validateCRAMDictionaryAgainstReference', 'validateDictionaries', 'validateToolInputs', 'validation']"
Security,"`HashedListTargetCollection` sorts targets by `IntervalUtils.LEXICOGRAPHICAL_ORDER_COMPARATOR` i.e. ASCII order. Any tool that uses this class to store its targets outputs chromosomes in the order 1, 10, 11 . . . 19, 2, 20, 21, 22, 3 . . .",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1754:1,Hash,HashedListTargetCollection,1,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1754,1,['Hash'],['HashedListTargetCollection']
Security,`LoadReadsFromFileFn` has a `ValidationStringency` argument that is currently ignored. This line needs to be changed to pass in a customized SamReaderFactory that respects validation . ```; ReadsDataSource bam = new ReadsDataSource(c.element());; ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/745:29,Validat,ValidationStringency,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/745,2,"['Validat', 'validat']","['ValidationStringency', 'validation']"
Security,"`ValidateVariants` performs several checks that go above and beyond what the VCF spec requires for VCF files (e.g. throwing an exception if a variant has an alt allele but has a genotype of hom ref [as found by this user](https://gatk.broadinstitute.org/hc/en-us/community/posts/360061452132-GATK4-RNAseq-short-variant-discovery-SNPs-Indels-)). This is good - it helps catch logic errors in our and others' pipelines. . However, we should add a flag to `ValidateVariants` that will cause it to validate solely based on the VCF spec and not the more strict guidelines.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6553:1,Validat,ValidateVariants,1,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6553,3,"['Validat', 'validat']","['ValidateVariants', 'validate']"
Security,"`ValidateVariants` requires a large amount of memory (>16Gb) to validate a GVCF when another GVCF is used as the interval list. This is not the case if a regular interval list is used instead. This comes up in the production `ReblockGVCFs` pipeline since we validate the reblocked GVCF using the input (unreblocked) GVCF as the interval list to validate over (with `-L`). For now we can just use larger memory machines to run this tool, but it is confusing to me why using a ~4Gb GVCF as an interval list would cause such a large increase in memory requirement.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8608:1,Validat,ValidateVariants,1,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8608,4,"['Validat', 'validat']","['ValidateVariants', 'validate']"
Security,"`VariantWalker` and `VariantContext` do not do variant validation at parse-time. This causes awkward errors on invalid files like the one found here:; https://gatkforums.broadinstitute.org/gatk/discussion/23809/oncotator-for-build-hg38. It would be best if there was a way to properly validate the variants before parsing them. `ValidateVariants` currently doesn't properly work when given default options (#5862). When #5862 is fixed, this may be ignored - I think validating at run-time when iterating over variants may add too much overhead.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5867:55,validat,validation,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5867,4,"['Validat', 'validat']","['ValidateVariants', 'validate', 'validating', 'validation']"
Security,"```; $ git remote show origin; fatal: 'origin' does not appear to be a git repository; fatal: Could not read from remote repository. Please make sure you have the correct access rights; and the repository exists.; $ cat .git/config ; [core]; 	repositoryformatversion = 0; 	filemode = true; 	bare = false; 	logallrefupdates = true; $; ```. Hmm, here is the full log, actually I see some shared library errors at the top. Grr, I have `ncurses-6` library only. Why doesn't the build system die immediately upon an error? Anyway, this is exactly why Gentoo does not like executing zillions of evil jar files and other executables. As I said in the past, your step away from Apache ant build system was a very bad decision. You can see in the log the git tag too. I am not sure if the build system used `master` instead of `gatk` branch. Is that a problem?. [build.log.txt](https://github.com/broadinstitute/gatk/files/1933626/build.log.txt)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4687#issuecomment-383221183:171,access,access,171,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4687#issuecomment-383221183,1,['access'],['access']
Security,"```; java.lang.IllegalArgumentException: errorRateLog10 must be good probability but got NaN; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); at org.broadinstitute.hellbender.utils.QualityUtils.phredScaleLog10ErrorRate(QualityUtils.java:321); at org.broadinstitute.hellbender.utils.QualityUtils.phredScaleErrorRate(QualityUtils.java:307); at org.broadinstitute.hellbender.tools.exome.orientationbiasvariantfilter.PreAdapterOrientationScorer.scoreOrientationBiasMetricsOverContext(PreAdapterOrientationScorer.java:78); at org.broadinstitute.hellbender.tools.exome.FilterByOrientationBias.onTraversalStart(FilterByOrientationBias.java:191); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:964); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:138); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); at org.broadinstitute.hellbender.Main.main(Main.java:291); ```. These calls are from IonTorrent platform (not Illumina), maybe that could be an issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5553#issuecomment-485476488:139,validat,validateArg,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5553#issuecomment-485476488,1,['validat'],['validateArg']
Security,"`ah_var_store` edition: Allows hard-filtering based on a maximum number of alt alleles [VS-1334], as well as fixing GATK Docker image building to use image IDs rather than git hashes [VS-1357]. Integration test _mostly_ successful [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/5d021859-5971-4fd7-8451-086c224fdb00). `GvsQuickstartIntegration` failed with:. ```; The bytes observed (89733530) for 'ExtractFilterTask.GvsCreateFilterSet.BigQuery Query Scanned' differ from those expected (85119360); FAIL!!! The relative difference between these is 0.0514208, which is greater than the allowed tolerance (0.05); ```. Successful tieout run [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/04b840f9-9779-48d6-8faa-4425d67ddadb). [VS-1334]: https://broadworkbench.atlassian.net/browse/VS-1334?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ; [VS-1357]: https://broadworkbench.atlassian.net/browse/VS-1357?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8806:176,hash,hashes,176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8806,1,['hash'],['hashes']
Security,"`mapred.max.split.size` is currently hardcoded to 10485760 in ReadsSparkSource. It should be exposed as a parameter that can be set at the command line since different values are better for different tools. It's a deprecated property, so it should probably be replaced with the new `mapreduce.input.fileinputformat.split.maxsize` instead.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1064:93,expose,exposed,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1064,1,['expose'],['exposed']
Security,`serializeToVcfString` should not be be in the interface for Funcotation (see `Funcotation.java`). That should be the job of the VCFOutputRenderer to sanitize any strings. A Funcotation should not care whether it is being rendered to a VCF or MAF. It's poor separation of concerns.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4797:150,sanitiz,sanitize,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4797,1,['sanitiz'],['sanitize']
Security,a386c148681ab69025a0?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #3027 +/- ##; ===============================================; + Coverage 79.973% 79.981% +0.008% ; Complexity 16727 16727 ; ===============================================; Files 1139 1139 ; Lines 60902 60902 ; Branches 9437 9437 ; ===============================================; + Hits 48705 48710 +5 ; + Misses 8401 8396 -5 ; Partials 3796 3796; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../DiscoverVariantsFromContigAlignmentsSGASpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTR0FTcGFyay5qYXZh) | `85.484% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [.../DiscoverVariantsFromContigAlignmentsSAMSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTQU1TcGFyay5qYXZh) | `95.238% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ools/coveragemodel/germline/GermlineCNVCaller.java](https://codecov.io/gh/broadinstitute/gatk/pull/3027?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3ZlcmFnZW1vZGVsL2dlcm1saW5lL0dlcm1saW5lQ05WQ2FsbGVyLmphdmE=) | `73.196% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...exome/sexgenotyper/TargetCoverageSexGenotyper.java](https://codecov.io/gh/broadin,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3027#issuecomment-306340681:1255,validat,validation,1255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3027#issuecomment-306340681,1,['validat'],['validation']
Security,a:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:171); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:6646,secur,security,6646,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['secur'],['security']
Security,"a:1336); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:912); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:912); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1899); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1899); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); at org.apache.spark.scheduler.Task.run(Task.scala:86); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:748); 00:11:09.632 WARN TaskSetManager:66 - Lost task 15.0 in stage 1.0 (TID 519, localhost): java.lang.IllegalStateException: Duplicate key [B@4e233a3c; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1253); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.buildGapContinuationPenalties(PairHMMLikelihoodCalculat; ionEngine.java:304); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngi; ne.java:253); at org.broadinstitute.hellbe",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3018:5516,Hash,HashMap,5516,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3018,1,['Hash'],['HashMap']
Security,aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9HZW5lRXhwcmVzc2lvbkV2YWx1YXRpb24uamF2YQ==) | `89.286% <0.000%> (+0.397%)` | :arrow_up: |; | [...llbender/tools/spark/sv/evidence/ReadMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9SZWFkTWV0YWRhdGEuamF2YQ==) | `88.480% <0.000%> (+0.490%)` | :arrow_up: |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278:3439,Validat,ValidateBasicSomaticShortMutations,3439,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9HZW5lRXhwcmVzc2lvbkV2YWx1YXRpb24uamF2YQ==) | `89.286% <0.000%> (+0.397%)` | :arrow_up: |; | [...llbender/tools/spark/sv/evidence/ReadMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9SZWFkTWV0YWRhdGEuamF2YQ==) | `88.480% <0.000%> (+0.490%)` | :arrow_up: |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617:3045,Validat,ValidateBasicSomaticShortMutations,3045,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9HZW5lRXhwcmVzc2lvbkV2YWx1YXRpb24uamF2YQ==) | `89.286% <0.000%> (+0.397%)` | :arrow_up: |; | [...llbender/tools/spark/sv/evidence/ReadMetadata.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9SZWFkTWV0YWRhdGEuamF2YQ==) | `88.480% <0.000%> (+0.490%)` | :arrow_up: |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/8048/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315:3847,Validat,ValidateBasicSomaticShortMutations,3847,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8048#issuecomment-1272595315,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,accept(ForEachOps.java:183) ; at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ; at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ; at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ; at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ; at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ; at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ; at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ; at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ; at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ; at org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations.lambda$getMatchingFilters$2(FilterFuncotations.java:192) ; at java.base/java.util.HashMap$Values.forEach(HashMap.java:976) ; at org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations.getMatchingFilters(FilterFuncotations.java:191) ; at org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations.secondPassApply(FilterFuncotations.java:174) ; at org.broadinstitute.hellbender.engine.TwoPassVariantWalker.nthPassApply(TwoPassVariantWalker.java:19) ; at org.broadinstitute.hellbender.engine.MultiplePassVariantWalker.lambda$traverse$0(MultiplePassVariantWalker.java:40) ; at org.broadinstitute.hellbender.engine.MultiplePassVariantWalker.lambda$traverseVariants$1(MultiplePassVariantWalker.java:77) ; at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ; at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ; at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133) ; at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ; at java.base/java.util.stream,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7504:5820,Hash,HashMap,5820,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7504,1,['Hash'],['HashMap']
Security,"actually investigate the formatting error. Unfortunately my formatting error isn't the same as reported in the other post. I have 105 error in which the 1st alternative allele is a spanning deletion and the 2nd (and 3rd) is either an indel or snp. It's true that the 2nd and 3rd allele is actually not found in my samples. I even have 7 occurances in which the 1st allele (spanning deletion) has allele frequency 1.00. my code is the following for GenotypeGVCFs:. java -Xms32G -Xmx32G -jar ${gatk4} GenotypeGVCFs -R ${ref} -V ${pipeline}/${name}\_v4.1.6.0.g.vcf.gz -O ${vcf}/${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list 2> ${log}/${name}\_v4.1.6.0\_genotype.log. for ValidateVariants:. java -Xms10G -Xmx10G -jar ${gatk4} ValidateVariants -R ${ref} -V ${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list --warn-on-errors 2> ${log}/${name}\_v4.1.6.0\_genotype\_valivar.log. the warning in ValidateVariants and the site look like this:. 14:12:15.126 WARN ValidateVariants - \*\*\*\*\* Input 1st\_v4.1.6.0.vcf.gz fails strict validation of type ALL: one or more of the ALT allele(s) for the record at position chr\_1:1088200 are not observed at all in the sample genotypes \*\*\*\*\* ; ; chr\_1 1088200 . T \*,TAAAAAAAAAAAA 64.39 . AC=8,0;AF=0.667,0.00;AN=12;DP=118;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.4286;MLEAC=7,7;MLEAF=0.583,0.583;MQ=58.73;QD=32.19;SOR=2.303 GT:AD:DP:GQ:PL ./.:9,0,0:9:.:0,0,0,0,0,0 0/0:9,0,0:9:0:0,0,113,0,113,113 ./.:10,0,0:10:.:0,0,0,0,0,0 ./.:5,0,0:5:.:0,0,0,0,0,0 1/1:0,0,1:1:0:225,15,0,15,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:12,0,0:12:.:0,0,0,0,0,0 ./.:8,0,0:8:.:0,0,0,0,0,0 0/0:3,0,0:3:0:0,0,43,0,43,43 ./.:7,0,0:7:.:0,0,0,0,0,0 ./.:1,0,0:1:.:0,0,0,0,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:3,0,0:3:.:0,0,0,0,0,0 ./.:7,0,0:7:.:0,0,0,0,0,0 1/1:0,0,0:0:0:45,3,0,3,0,0 ./.:0,0,0 1/1:0,0,1:1:0:45,3,0,3,0,0 1/1:0,0,0:0:0:267,18,0,18,0,0 ./.:9,0,0:9:.:0,0,0,0,0,0 ; . The exactly the same happens when I run GenotypeGVCFs in --include-non-variant-site",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6630:1905,Validat,ValidateVariants,1905,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6630,1,['Validat'],['ValidateVariants']
Security,ad(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:171); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(H,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:6519,secur,security,6519,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['secur'],['security']
Security,add IBM. @frank-y-liu please review (I can't assign to you because you need write access for that),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1766:82,access,access,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1766,1,['access'],['access']
Security,add logging and validate vat to echo callset branch,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8770:16,validat,validate,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8770,1,['validat'],['validate']
Security,added option for ValidateBasicSomaticShortMutations to output a vcf,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4999:17,Validat,ValidateBasicSomaticShortMutations,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4999,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,adding git hash dependent version number,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/196:11,hash,hash,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/196,1,['hash'],['hash']
Security,adds arg validation to make sure margin is non-negative in SimpleInte…,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3794:9,validat,validation,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3794,1,['validat'],['validation']
Security,"adinstitute/gsa-unstable/issues/1053#issuecomment-222214083). Still a thing. No work has been done here AFAIK. ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-260465013). This seems like fairly low-hanging fruit -- @ronlevine . ---. @ronlevine commented on [Wed Nov 23 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262613152). @ldgauthier Shouldn't a locus without genotypes bypass `AC` validation, given it's defined as: `Allele count in genotypes, for each ALT allele, in the same order as listed`?. ---. @ldgauthier commented on [Wed Nov 23 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262613997). Agreed. ---. @ronlevine commented on [Thu Nov 24 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262635204). The change should be a lot simpler than proposed. The code can validate the number of alleles before it checks for the presence of genotypes in [VariantContext#validateChromosomeCounts](https://github.com/samtools/htsjdk/blob/master/src/main/java/htsjdk/variant/variantcontext/VariantContext.java#L1236). . ---. @ldgauthier commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263277972). Sorry, I needed to refresh my memory. I actually don't want to bypass AC validation for variants without genotypes, but I think you already figured that out. My proposal was more general, but you're right -- AC and AF should always have the same count as alt alleles and we don't need to check the header for that. When this came up (a year and a half ago!) we were thinking about validating all the info field annotations. ---. @ronlevine commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263280085). That's exactly what I did in https://github.com/samtools/htsjdk/pull/759. I can expand this to all INFO field annotations. ---. @ld",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:5843,validat,validate,5843,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,2,['validat'],"['validate', 'validateChromosomeCounts']"
Security,"ah---this is what I get for making an example inputs file when we really didn't need one and for choosing the full AoU 1k release (vat_kc_vat_1) as the default. I wanted to run the validations here because it is the largest dataset and it is the AoU data (not just Anvil data) BUT it has no values for gvs_all_ac or gvs_all_an yet because that step wasn't implemented by the time of creation. (Validation #9 was added by Lee recently) The table vat_jul18 does have those values as it was created just last week, but may get cleaned up...so this might be a good best practices question for what we run this on in the future if there is ever an automated version?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7365#issuecomment-886085289:181,validat,validations,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7365#issuecomment-886085289,2,"['Validat', 'validat']","['Validation', 'validations']"
Security,ain.java:275); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.apache.spark.deploy.SparkSubmit$.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:755); 	at org.apache.spark.deploy.SparkSubmit$.doRunMain$1(SparkSubmit.scala:180); 	at org.apache.spark.deploy.SparkSubmit$.submit(SparkSubmit.scala:205); 	at org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:119); 	at org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala); Caused by: java.lang.IllegalArgumentException: two input alignments' overlap on read consumes completely one of them.	1_1097_chrUn_JTFH01000492v1_decoy:501-1597_+_1097M6H_60_1_1092_O	483_612_chr17:26962677-26962806_-_482S130M491S_60_-1_281_S; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:681); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.prototype.ContigAlignmentsModifier.removeOverlap(ContigAlignmentsModifier.java:36); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.prototype.AssemblyContigAlignmentSignatureClassifier.lambda$processContigsWithTwoAlignments$e28aa838$1(AssemblyContigAlignmentSignatureClassifier.java:114); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1.apply(JavaPairRDD.scala:1040); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at org.apache.spark.util.collection.ExternalSor,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4141:13118,validat,validateArg,13118,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4141,1,['validat'],['validateArg']
Security,"al; se --min-assembly-region-size 50 --max-assembly-region-size 300 --active-probability-threshold 0.002 --max-prob-propagation-distance 50 --force-active false --assembly-region-padding 100 -; -padding-around-indels 75 --padding-around-snps 20 --padding-around-strs 75 --max-extension-into-assembly-region-padding-legacy 25 --max-reads-per-alignment-start 50 --enable-legacy-assemb; ly-region-trimming false --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-pro; gress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md; 5 false --max-variants-per-shard 0 --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --dis; able-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false ; --gcs-max-retries 20 --gcs-project-for-requester-pays --disable-tool-default-read-filters false --minimum-mapping-quality 20 --disable-tool-default-annotations false --enable-all-annotati; ons false --allow-old-rms-mapping-quality-annotation-data false"",Version=""4.4.0.0"",Date=""2023?8?21? CST ??5:33:54"">; ##GVCFBlock0-1=minGQ=0(inclusive),maxGQ=1(exclusive); ##GVCFBlock1-2=minGQ=1(inclusive),maxGQ=2(exclusive); ##GVCFBlock10-11=minGQ=10(inclusive),maxGQ=11(exclusive); ##GVCFBlock11-12=minGQ=11(inclusive),maxGQ=12(exclusive); ##GVCFBlock12-13=minGQ=12(inclusive),maxGQ=13(exclusive); ##GVCFBlock13-14=minGQ=13(inclusive),maxGQ=14(exclusive); ##GVCFBlock14-15=minGQ=14(inclusive),maxGQ=15(exclusive); ##GVCFBlock15-16=minGQ=15(inclusive),maxGQ=16(exclusive); ##GVCFBlock16-17=minGQ=16(inclusive),maxGQ=17(exclusive); ##GVCFBlock17-18=minGQ=17(inclusive)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8574#issuecomment-1793390789:9116,validat,validation,9116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8574#issuecomment-1793390789,1,['validat'],['validation']
Security,"alArgumentException` if a reference isn't provided. . It should be a `UserException`. I don't know but I think there may be modes that don't require the reference, so it may need to give a smart error message. ```; gatk-launch ValidateVariants --variant src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; Using GATK wrapper script /Users/louisb/Workspace/gatk/build/install/gatk/bin/gatk; Running:; /Users/louisb/Workspace/gatk/build/install/gatk/bin/gatk ValidateVariants --variant src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.119 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/louisb/Workspace/gatk/build/install/gatk/lib/gkl-0.4.1.jar!/com/intel/gkl/native/libgkl_compression.dylib; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants --variant src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf --doNotValidateFilteredRecords false --warnOnErrors false --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --readValidationStringency SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:967,Validat,ValidateVariants,967,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,3,"['Validat', 'validat']","['ValidateVariants', 'validationExampleGood']"
Security,"allow me to look at individual shards running ExtractTask if I ran GvsExtractCallsetPgenMerged. Job Manager would be an alternative for this, but it seems to be pretty much unusable for even moderately-sized jobs.); 4. Run GvsExtractCallset on the newly created cohort, making sure to use the same parameters, including scatter count. This will generate VCF files that we can use to compare to the PGEN files created during the previous step for validation.; 5. Run GvsExtractCallsetPgenMerged with the same parameters used to run GvsExtractCallsetPgen in Step 3. This will use call-caching for the extract steps and then merge the PGEN files by chromosome. (Running it this way is maybe not the ideal way to do this, but it's what I've been doing for reasons described in the parenthetical in Step 3).; 6. Create list files, by file type, containing the gs:// URIs for the .pgen, .psam, and .pvar.zst files created in Step 3, along with the .vcf.gz files created in Step 4. Upload them to the workspace to use for validation.; 7. Run ComparePgenAndVcfScatter using the file lists as inputs. If there are any differences, it will output files that contain those differences. If there are no diff files generated, the files match. ComparePgenAndVcfScatter is a workflow I wrote that converts a list of .pgen, .psam, and .pvar.zst files generated by GvsExtractCallsetPgen into .vcf.gz files and then compares those files to a list of .vcf.gz files generated by GvsExtractCallset. . It ignores basically everything except genotypes, because PGENs do not store all the other fields and annotations that the VCFs might have. It will also skip over any sites in the VCFs with >254 alleles because those will not be present in the PGEN files. Any differences are written to diff files, in the form of the differing lines in the VCFs being compared. The code for this comparison tool lives [here](https://github.com/KevinCLydon/pgen_vcf_comparator) in a repo I created under my GitHub account. (I didn't crea",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708:11597,validat,validation,11597,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708,1,['validat'],['validation']
Security,"alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv ; Using GATK jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar LearnReadOrientationModel -alt-table 13_tumor-alt.tsv -ref-hist 13_tumor-ref.metrics -alt-hist 13_tumor-alt-depth1.metrics -O 13_tumor-artifact-prior-table.tsv; 12:16:19.960 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Applications/genomicstools/gatk/gatk-4.0.11.0/gatk-package-4.0.11.0-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Nov 26, 2018 12:16:20 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 12:16:20.176 INFO LearnReadOrientationModel - ------------------------------------------------------------; 12:16:20.177 INFO LearnReadOrientationModel - The Genome Analysis Toolkit (GATK) v4.0.11.0; 12:16:20.177 INFO LearnReadOrientationModel - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:16:20.177 INFO LearnReadOrientationModel - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 12:16:20.177 INFO LearnReadOrientationModel - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 12:16:20.177 INFO LearnReadOrientationModel - Start Date/Time: November 26,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615:1145,authenticat,authenticated,1145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5447#issuecomment-441721615,1,['authenticat'],['authenticated']
Security,"am; VALIDATION_STRINGENCY=SILENT \; REFERENCE_SEQUENCE=Homo_sapiens_assembly38.fasta \; INCLUDE_BQ_HISTOGRAM=true \; INTERVALS=wgs_coverage_regions.hg38.interval_list \; OUTPUT=example.raw_wgs_metrics \; USE_FAST_ALGORITHM=true \; READ_LENGTH=250; ```. **Output:**; ```; 18:48:46.330 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/usr/local/share/picard-2.20.7-0/picard.jar!/com/intel/gkl/native/libgkl_compression.so; [Fri Sep 20 18:48:46 GMT 2019] CollectRawWgsMetrics INPUT=example.bam; [Fri Sep 20 18:48:46 GMT 2019] Executing as root@98e13b9f4ef1 on Linux 4.19.44+ amd64; OpenJDK 64-Bit Server VM 1.8.0_152-release-1056-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.7-SNAPSHOT; [Fri Sep 20 18:49:00 GMT 2019] picard.analysis.CollectRawWgsMetrics done. Elapsed time: 0.24 minutes.; Runtime.totalMemory()=4054515712; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" java.lang.IllegalArgumentException: The requested position is not covered by this StartEdgingRecordAndOffset object.; at htsjdk.samtools.util.AbstractRecordAndOffset.validateOffset(AbstractRecordAndOffset.java:146); at htsjdk.samtools.util.EdgingRecordAndOffset$StartEdgingRecordAndOffset.getBaseQuality(EdgingRecordAndOffset.java:112); at picard.analysis.FastWgsMetricsCollector.excludeByQuality(FastWgsMetricsCollector.java:189); at picard.analysis.FastWgsMetricsCollector.processRecord(FastWgsMetricsCollector.java:144); at picard.analysis.FastWgsMetricsCollector.addInfo(FastWgsMetricsCollector.java:105); at picard.analysis.WgsMetricsProcessorImpl.processFile(WgsMetricsProcessorImpl.java:93); at picard.analysis.CollectWgsMetrics.doWork(CollectWgsMetrics.java:231); at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:103); at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:113); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6163#issuecomment-533770047:1456,validat,validateOffset,1456,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6163#issuecomment-533770047,1,['validat'],['validateOffset']
Security,amesystem.concatInt(FSNamesystem.java:2257); > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concat(FSNamesystem.java:2219); > at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.concat(NameNodeRpcServer.java:829); > at org.apache.hadoop.hdfs.server.namenode.AuthorizationProviderProxyClientProtocol.concat(AuthorizationProviderProxyClientProtocol.java:285); > at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.concat(ClientNamenodeProtocolServerSideTranslatorPB.java:580); > at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); > at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:617); > at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1073); > at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2278); > at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2274); > at java.security.AccessController.doPrivileged(Native Method); > at javax.security.auth.Subject.doAs(Subject.java:422); > at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1924); > at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2272); > ; > org.broadinstitute.hellbender.exceptions.UserException$CouldNotCreateOutputFile: Couldn't write file hdfs://cloudera08/gatk-test2/WES2019-022_S4_out.vcf because writing failed with exception concat: target file /gatk-test2/WES2019-022_S4_out.vcf.parts/output is empty; > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concatInternal(FSNamesystem.java:2303); > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concatInt(FSNamesystem.java:2257). #### Steps to reproduce; The user's command line was. > nohup /opt/gatk/gatk-4.1.4.0/gatk ReadsPipelineSpark --spark-runner SPARK --spark-master yarn --spark-submit-command spark2-submit -I hdfs://cloudera08/gatk-test2/WES2019-022_S4.bam -O hdfs://cloudera08/gatk-test2/WES2019-022_S4_o,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6218:1831,Access,AccessController,1831,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6218,1,['Access'],['AccessController']
Security,"ampleIndex);; final int[] indexesToRemove = evidences.stream().mapToInt(e -> {; final int index = evidenceIndexes.getInt(e);; if (index == MISSING_INDEX) {; throw new IllegalArgumentException(""evidence provided is not in sample"");; }; ```; We get an error when `evidenceIndexBySampleIndex(sampleIndex)` yields a `Map` that for some reason doesn't contain a read that it should. So let's investigate `evidenceIndexBySampleIndex()`. This method returns the `evidenceIndexBySampleIndex.get(sampleIndex)` field if it is not `null` (ie uninitialized); otherwise it fills it and then returns it. The code for filling it seems fine, and it explicitly loops over every sample read, so it's hard to see that the error could come from there. It seems rather that the problem is in returning the cached value whenever it is not `null`. The cached value of `evidenceIndexBySampleIndex.get(sampleIndex)` becomes invalid whenever reads are added or removed. However, you can check all the accesses of `evidenceIndexBySampleIndex` (there are only six) and verify that the class never accounts for this. So, suppose that an `AlleleLikelihoods` object invokes `evidenceIndexBySampleIndex(sampleIndex)` more than once and adds or removes reads between these. The second call returns the cached map from the first call, which is bogus. Even if it doesn't explain this issue, it is a bug. Now let's think about which public methods `evidenceIndexBySampleIndex(sampleIndex)` is called in and where this occurs in HaplotypeCaller:. * `addEvidence` (in HC this happens only in the likelihoods for annotations, downstream of our issue, so this is not the culprit).; * `filterPoorlyModeledEvidence` (this happens after Pair-HMM to the haplotype likelihoods, so not the culprit either); * `contaminationDownsampling`; * `retainEvidence` (hmmm in HC `readAlleleLikelihoods.retainEvidence(variantCallingRelevantOverlap::overlaps);` occurs immediately before `contaminationDownsampling`); * `indexOfEvidence` (nothing stands out)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6586#issuecomment-625021336:1166,access,accesses,1166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6586#issuecomment-625021336,1,['access'],['accesses']
Security,an exception. * What went wrong:; Execution failed for task ':gatkTabComplete'.; > Javadoc generation failed. Generated Javadoc options file (useful for troubleshooting): '/vsc-hard-mounts/leuven-data/304/vsc30484/git/gatk/build/tmp/gatkTabComplete/javadoc.options'. * Try:; Run with --info or --debug option to get more log output. * Exception is:; org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':gatkTabComplete'.; at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46); at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35); at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64); at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58); at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52); at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52); at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53); at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:233); at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:215); at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:74); at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:55); at org.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4155:1536,Validat,ValidatingTaskExecuter,1536,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4155,1,['Validat'],['ValidatingTaskExecuter']
Security,"anager (via SPARK_LOCAL_DIRS in mesos/standalone/kubernetes and LOCAL_DIRS in YARN).; 10:33:06.427 INFO ResourceUtils - ==============================================================; 10:33:06.427 INFO ResourceUtils - No custom resources configured for spark.driver.; 10:33:06.428 INFO ResourceUtils - ==============================================================; 10:33:06.428 INFO SparkContext - Submitted application: SortSamSpark; 10:33:06.446 INFO ResourceProfile - Default ResourceProfile created, executor resources: Map(memoryOverhead -> name: memoryOverhead, amount: 600, script: , vendor: , cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0); 10:33:06.454 INFO ResourceProfile - Limiting resource is cpu; 10:33:06.455 INFO ResourceProfileManager - Added ResourceProfile id: 0; 10:33:06.500 INFO SecurityManager - Changing view acls to: root; 10:33:06.501 INFO SecurityManager - Changing modify acls to: root; 10:33:06.501 INFO SecurityManager - Changing view acls groups to:; 10:33:06.502 INFO SecurityManager - Changing modify acls groups to:; 10:33:06.502 INFO SecurityManager - SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set(); 10:33:06.755 INFO Utils - Successfully started service 'sparkDriver' on port 34861.; 10:33:06.784 INFO SparkEnv - Registering MapOutputTracker; 10:33:06.815 INFO SparkEnv - Registering BlockManagerMaster; 10:33:06.827 INFO BlockManagerMasterEndpoint - Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 10:33:06.828 INFO BlockManagerMasterEndpoint - BlockManagerMasterEndpoint up; 10:33:06.831 INFO SparkEnv - Registering BlockManagerMasterHeartbeat; 10:33:06.846 INFO DiskBlockManage",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8949:41780,Secur,SecurityManager,41780,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8949,1,['Secur'],['SecurityManager']
Security,"ance. The stuff I've; worked on is a bit of a corner case, and I didn't write much of the; infrastructure, I've been tacking on features. For now I've just been keeping the gzipped text files from the UCSC; browser. They're tab delimited with two header lines, the first basically; giving info about context of the data (it's genome data for the , hg38) and; the second being a description of the columns (each being of form; tract_name.column_name). There's nothing at all sophisticated about this; format, but it's pretty generalizable and easy to parse (and create). An; example; >; > # hgIntegrator: database=hg38 region=genome Wed Apr 18 11:15:34 2018; >; > #gap.chrom gap.chromStart gap.chromEnd gap.type; >; > chr1 0 10000 telomere; >; > chr1 207666 257666 contig; >; > chr1 297968 347968 contig; >; > chr1 535988 585988 contig; >; > chr1 2702781 2746290 scaffold; >; >; For what it's worth, your description of your approach sounds like a; sensible one to me.; I am concerned about the size of the data and how we'd access it. I've; chosen the tracts I have because they are small enough to jam into; resources. On Tue, May 1, 2018 at 8:06 AM samuelklee <notifications@github.com> wrote:. > @TedBrookings <https://github.com/TedBrookings> which formats are you; > using, in particular?; >; > In the CNV package, I've taken pains to unify how tabular data are; > represented in Java, depending on whether each record is Locatable or; > whether the collection of records can be associated with a sample name or; > sequence dictionary. This allows us to represent records that extend; > Locatable with multidimensional numerical or non-numerical annotations; > along with some metadata (sample name and sequence dictionary) with a; > minimum of boilerplate. There are also base methods for producing interval; > trees, etc.; >; > However, this unification effort was a quick push I made before release,; > so some polishing or redesigning may be warranted. We may also want to add; > more forms o",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4717#issuecomment-385683551:1152,access,access,1152,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4717#issuecomment-385683551,1,['access'],['access']
Security,and sometimes I get:. ```; java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:170); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:3; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2306#issuecomment-271423848:344,secur,security,344,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2306#issuecomment-271423848,5,['secur'],['security']
Security,ang.NoSuchMethodError: scala.collection.Seq.aggregate(Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;; at org.bdgenomics.adam.models.NonoverlappingRegions.mergeRegions(NonoverlappingRegions.scala:75); at org.bdgenomics.adam.models.NonoverlappingRegions.<init>(NonoverlappingRegions.scala:55); at org.bdgenomics.adam.models.NonoverlappingRegions$.apply(NonoverlappingRegions.scala:169); at org.bdgenomics.adam.util.TwoBitRecord$.apply(TwoBitFile.scala:193); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at org.bdgenomics.adam.util.TwoBitFile.<init>(TwoBitFile.scala:70); at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceTwoBitSource.<init>(ReferenceTwoBitSource.java:43); at org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.<init>(ReferenceMultiSource.java:41); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReference(GATKSparkTool.java:353); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:320); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:311); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:108); at or,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2073:1217,Hash,HashMap,1217,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2073,2,['Hash'],"['HashMap', 'HashTrieMap']"
Security,"ants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN ValidateVariants - Other possible validations will still be performed; 19:53:35.594 INFO ProgressMeter - Starting traversal; 19:53:35.595 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 19:53:35.660 INFO ValidateVariants - Shutting down engine; [October 25, 2020 7:53:35 PM CDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.02 minutes.; Run",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:2403,Validat,ValidateVariants,2403,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"ark - Inflater: IntelInflater; 16:58:10.116 INFO PrintVariantsSpark - GCS max retries/reopens: 20; 16:58:10.116 INFO PrintVariantsSpark - Requester pays: disabled; 16:58:10.116 WARN PrintVariantsSpark - . ?[1m?[31m !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: PrintVariantsSpark is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!?[0m. 16:58:10.116 INFO PrintVariantsSpark - Initializing engine; 16:58:10.116 INFO PrintVariantsSpark - Done initializing engine; 19/02/18 16:58:10 WARN org.apache.spark.SparkConf: The configuration key 'spark.yarn.executor.memoryOverhead' has been deprecated as of Spark 2.3 and may be removed in the future. Please use the new key 'spark.executor.memoryOverhead' instead.; 19/02/18 16:58:10 INFO org.spark_project.jetty.util.log: Logging initialized @8431ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: jetty-9.3.z-SNAPSHOT, build timestamp: unknown, git hash: unknown; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: Started @8536ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.AbstractConnector: Started ServerConnector@45c90a05{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 19/02/18 16:58:11 WARN org.apache.spark.scheduler.FairSchedulableBuilder: Fair Scheduler configuration file not found so jobs will be scheduled in FIFO order. To use fair scheduling, configure pools in fairscheduler.xml or set spark.scheduler.allocation.file to a file that contains the configuration.; 19/02/18 16:58:12 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:8032; 19/02/18 16:58:13 INFO org.apache.hadoop.yarn.client.AHSProxy: Connecting to Application History server at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:10200; 19/02/18 16:58:15 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_155050875104",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765:4367,hash,hash,4367,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765,1,['hash'],['hash']
Security,"as a Selenocysteine edit. Look for the Selenocysteine; feature for the position of this on the genome; - cds_end_NF: the coding region end could not be confirmed; - cds_start_NF: the coding region start could not be confirmed; - mRNA_end_NF: the mRNA end could not be confirmed; - mRNA_start_NF: the mRNA start could not be confirmed.; - basic: the transcript is part of the gencode basic geneset. Comments. Lines may be commented out by the addition of a single # character at the start. These; lines should be ignored by your parser. Pragmas/Metadata. GTF files can contain meta-data. In the case of experimental meta-data these are ; noted by a #!. Those which are stable are noted by a ##. Meta data is a single key,; a space and then the value. Current meta data keys are:. * genome-build - Build identifier of the assembly e.g. GRCh37.p11; * genome-version - Version of this assembly e.g. GRCh37; * genome-date - The date of this assembly's release e.g. 2009-02; * genome-build-accession - The accession and source of this accession e.g. NCBI:GCA_000001405.14; * genebuild-last-updated - The date of the last genebuild update e.g. 2013-09. ------------------; Example GTF output; ------------------. #!genome-build GRCh38; 11 ensembl_havana gene 5422111 5423206 . + . gene_id ""ENSG00000167360""; gene_version ""4""; gene_name ""OR51Q1""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding"";; 11 ensembl_havana transcript 5422111 5423206 . + . gene_id ""ENSG00000167360""; gene_version ""4""; transcript_id ""ENST00000300778""; transcript_version ""4""; gene_name ""OR51Q1""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""OR51Q1-001""; transcript_source ""ensembl_havana""; transcript_biotype ""protein_coding""; tag ""CCDS""; ccds_id ""CCDS31381"";; 11 ensembl_havana exon 5422111 5423206 . + . gene_id ""ENSG00000167360""; gene_version ""4""; transcript_id ""ENST00000300778""; transcript_version ""4""; exon_number ""1""; gene_name ""OR51Q1""; gene_source ""ensembl_havana""; gene_biotype """,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6488:6108,access,accession,6108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6488,3,['access'],['accession']
Security,ass file major version 55; 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:166); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:148); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:136); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:237); 	at org.apache.spark.util.ClosureCleaner$.getClassReader(ClosureCleaner.scala:49); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:517); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:500); 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236); 	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40); 	at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:134); 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732); 	at org.apache.spark.util.FieldAccessFinder$$anon$3.visitMethodInsn(ClosureCleaner.scala:500); 	at org.apache.xbean.asm6.ClassReader.readCode(ClassReader.java:2175); 	at org.apache.xbean.asm6.ClassReader.readMethod(ClassReader.java:1238); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:631); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:355); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:307); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:306); 	at scala.collection.immutable.List.foreach(List.scala:392); 	at org.apache.spark.util.ClosureCleaner$.org$apache$spark$util$ClosureCleaner$$clean(ClosureCleaner.scala:306),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:7009,Hash,HashMap,7009,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,1,['Hash'],['HashMap']
Security,at org.broadinstitute.hellbender.tools.HaplotypeCallerSpark.runTool(HaplotypeCallerSpark.java:115); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:353); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:116); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:121); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:142); at org.broadinstitute.hellbender.Main.main(Main.java:220); Caused by: java.lang.IllegalStateException: Duplicate key [B@4e233a3c; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1253); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.buildGapContinuationPenalties(PairHMMLikelihoodCalculat; ionEngine.java:304); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngi; ne.java:253); at org.broadinstitute.hellbe,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3018:16848,Hash,HashMap,16848,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3018,1,['Hash'],['HashMap']
Security,"atic_old` folders.; - There is now just a matched-pair workflow and a panel workflow. We can add a single BAM case workflow or expand the matched-pair workflow to handle this, depending on the discussion at https://github.com/broadinstitute/gatk/issues/3657.; - WES/WGS is toggled by providing an optional target-file input.; - For all workflows, we always collect integer read counts; for WGS, these are output as both HDF5 and TSV and the HDF5 is used for subsequent input.; - For the case workflow, we always collect allelic counts at all sites and output as TSV.; - [x] We should output all data files as HDF5 by default and as TSV optionally. EDIT: This is done for `CollectFragmentCounts`.; - [x] We will need to update the workflows when @MartonKN and @asmirnov239 get `PreprocessIntervals` and `CollectReadCounts` merged, respectively. These tools will remove the awkwardness required by `PadTargets` and `CalculateTargetCoverage`/`SparkGenomeReadCounts`. Denoising:; - All parameters are exposed in the PoN creation tool (#3356).; - Without a PoN, standardization and optional GC correction are performed (#3570).; - Other than the minor point about sample mean/median being used inconsistently noted above, the denoising process is essentially exactly the same mathematically as before (""superficial"" differences include the vastly improved memory and I/O optimizations, the ability to adjust number of principal components used, the removal of redundant SVDs, the enforcement of consistent GC-bias correction).; - [ ] That said, I'll carry over this TODO from above: Revisit standardization procedure by checking with simulated data. We should make sure that the centering of the data does not rescale the true copy ratio.; - The only major difference is we no longer make a QC PoN or check for large events. This was performed awkwardly in the old pipeline, so I'd rather not port it over. Eventually we will do all denoising with the gCNV coverage model anyway.; - Pre/tangent-normalizati",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828:1437,expose,exposed,1437,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2858#issuecomment-333202828,2,['expose'],['exposed']
Security,atk-package-4.0.7.0-spark.jar PrintReadsSpark -I ../6484_snippet.bam -O ../output.bam --spark-master spark://10.0.0.21:7077; SLF4J: Class path contains multiple SLF4J bindings.; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark2/jars/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark_llap/spark-llap-assembly-1.0.0.2.6.3.40-13.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]; java.lang.NoClassDefFoundError: org/apache/logging/log4j/core/appender/AbstractAppender; at java.lang.ClassLoader.defineClass1(Native Method); at java.lang.ClassLoader.defineClass(ClassLoader.java:763); at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); at java.net.URLClassLoader.defineClass(URLClassLoader.java:467); at java.net.URLClassLoader.access$100(URLClassLoader.java:73); at java.net.URLClassLoader$1.run(URLClassLoader.java:368); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349); at java.lang.ClassLoader.loadClass(ClassLoader.java:411); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.decodeCacheFiles(PluginRegistry.java:181); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.loadFromMainClassLoader(PluginRegistry.java:119); at org.apache.logging.log4j.core.config.plugins.util.PluginManager.collectPlugins(PluginManager.java:132); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:131); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternP,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5126:2741,access,access,2741,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126,1,['access'],['access']
Security,attending to this. The security posture has greatly improved from where we started. Community greatly benefits from your effort. I have migrated to using the 4.5 release after some regression testing. Below is a list of critical and high findings with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJE,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:1070,secur,security,1070,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['secur'],['security']
Security,audit use of ReferenceSequenceFile and replace with ReferenceUtils.loadFastaDictionary(),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5180:0,audit,audit,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5180,1,['audit'],['audit']
Security,aults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : false; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Deflater: IntelDeflater; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Inflater: IntelInflater; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - GCS max retries/reopens: 20; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Initializing engine; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Done initializing engine; 18/01/09 18:30:54 INFO spark.SparkContext: Running Spark version 2.2.0.cloudera1; 18/01/09 18:30:54 INFO spark.SparkContext: Submitted application: BwaAndMarkDuplicatesPipelineSpark; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing view acls to: sun; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing modify acls to: sun; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing view acls groups to: ; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing modify acls groups to: ; 18/01/09 18:30:54 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(sun); groups with view permissions: Set(); users with modify permissions: Set(sun); groups with modify permissions: Set(); 18/01/09 18:30:55 INFO util.Utils: Successfully started service 'sparkDriver' on port 38793.; 18/01/09 18:30:55 INFO spark.SparkEnv: Registering MapOutputTracker; 18/01/09 18:30:55 INFO spark.SparkEnv: Registering BlockManagerMaster; 18/01/09 18:30:55 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 18/01/09 18:30:55 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 18/01/09 18:30:55 INFO sto,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:5369,Secur,SecurityManager,5369,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,1,['Secur'],['SecurityManager']
Security,"aults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 16:51:57.770 INFO SparkGenomeReadCounts - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 16:51:57.770 INFO SparkGenomeReadCounts - Deflater: IntelDeflater; 16:51:57.770 INFO SparkGenomeReadCounts - Inflater: IntelInflater; 16:51:57.770 INFO SparkGenomeReadCounts - Initializing engine; 16:51:57.770 INFO SparkGenomeReadCounts - Done initializing engine; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 17/07/21 16:51:58 INFO SparkContext: Running Spark version 2.0.2; 17/07/21 16:51:58 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 17/07/21 16:51:58 INFO SecurityManager: Changing view acls to: ameyner2; 17/07/21 16:51:58 INFO SecurityManager: Changing modify acls to: ameyner2; 17/07/21 16:51:58 INFO SecurityManager: Changing view acls groups to: ; 17/07/21 16:51:58 INFO SecurityManager: Changing modify acls groups to: ; 17/07/21 16:51:58 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(ameyner2); groups with view permissions: Set(); users with modify permissions: Set(ameyner2); groups with modify permissions: Set(); 17/07/21 16:51:58 INFO Utils: Successfully started service 'sparkDriver' on port 43815.; 17/07/21 16:51:58 INFO SparkEnv: Registering MapOutputTracker; 17/07/21 16:51:58 INFO SparkEnv: Registering BlockManagerMaster; 17/07/21 16:51:58 INFO DiskBlockManager: Created local directory at /tmp/ameyner2/blockmgr-d8bbd2bc-8366-4b98-a238-2d51da1689d1; 17/07/21 16:51:58 INFO MemoryStore: MemoryStore started with capacity 15.8 GB; 17/07/21 16:51:58 INFO SparkEnv: Registering OutputCommitCoordinator; 17/07/21 16:51:58 INFO Utils: Successfully started service 'SparkUI' on port 4040.; 17/07/21 16:51:58 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://192.41.105.80:4040; 17/07/21 16:51:58 INFO Executor: Starting executor ID driver o",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3360:3126,Secur,SecurityManager,3126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3360,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.581% <0.000%> (+1.613%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `98.333% <0.000%> (+1.667%)` | :arrow_up: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/7634/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278:4284,validat,validation,4284,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7634#issuecomment-1364365278,1,['validat'],['validation']
Security,b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0.000%> (+0.562%)` | :arrow_up: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `79.570% <0.000%> (+1.075%)` | :arrow_up: |; | [...dinstitute/hellbender/tools/sv/SiteDepthtoBAF.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zdi9TaXRlRGVwdGh0b0JBRi5qYXZh) | `82.418% <0.000%> (+1.099%)` | :arrow_up: |; | [...lkers/validation/EvaluateInfoFieldConcordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRXZhbHVhdGVJbmZvRmllbGRDb25jb3JkYW5jZS5qYXZh) | `72.581% <0.000%> (+1.613%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broadinstitute#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9HQVRLQmFzZVRlc3QuamF2YQ==) | `98.333% <0.000%> (+1.667%)` | :arrow_up: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/7992/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=broad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617:3890,validat,validation,3890,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7992#issuecomment-1218381617,1,['validat'],['validation']
Security,"bam --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [May 5, 2017 5:03:35 PM UTC] Executing as yarn@ip-172-30-0-122 on Linux 4.4.35-33.55.amzn1.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_121-b13; Version: Version:4.alpha.2-252-gf627ed4-SNAPSHOT; 17/05/05 17:03:35 INFO SparkContext: Running Spark version 2.1.0; 17/05/05 17:03:35 INFO SecurityManager: Changing view acls to: yarn,hadoop; 17/05/05 17:03:35 INFO SecurityManager: Changing modify acls to: yarn,hadoop; 17/05/05 17:03:35 INFO SecurityManager: Changing view acls groups to: ; 17/05/05 17:03:35 INFO SecurityManager: Changing modify acls groups to: ; 17/05/05 17:03:35 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(yarn, hadoop); groups with view permissions: Set(); users with modify permissions: Set(yarn, hadoop); groups with modify permissions: Set(); 17/05/05 17:03:35 INFO Utils: Successfully started service 'sparkDriver' on port 42358.; 17/05/05 17:03:35 INFO SparkEnv: Registering MapOutputTracker; 17/05/05 17:03:35 INFO SparkEnv: Registering BlockManagerMaster; 17/05/05 17:03:35 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/05/05 17:03:35 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/05/05 17:03:35 INFO DiskBlockManager: Created local directory at /mnt/yarn/usercache/hadoop/appcache/application_1493961816416_0010/blockmgr-356a706f-2395-4ef6-985a-d3a7d7b01a8a; 17/05/05 17:03:35 INFO DiskBlockManager: Created local directory at /mnt1/yarn/usercache/hadoop/appcache/application_1493961816416_0010/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046:3408,authenticat,authentication,3408,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046,8,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,bam \; --output gatk.split.bam \; > split.log 2>&1; ```. A tiny BAM file illustrating the problem is attached (it is gzipped to allow Github upload).; [100I_rna.bam.gz](https://github.com/broadinstitute/gatk/files/2456955/100I_rna.bam.gz). #### Actual behavior; Here is the stacktrace:; ```; ***********************************************************************. A USER ERROR has occurred: Badly formed genome unclippedLoc: Parameters to GenomeLocParser are incorrect:The stop position 3146412 is less than start 3146413 in contig chr20. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$MalformedGenomeLoc: Badly formed genome unclippedLoc: Parameters to GenomeLocParser are incorrect:The stop position 3146412 is less than start 3146413 in contig chr20; at org.broadinstitute.hellbender.utils.GenomeLocParser.vglHelper(GenomeLocParser.java:280); at org.broadinstitute.hellbender.utils.GenomeLocParser.validateGenomeLoc(GenomeLocParser.java:226); at org.broadinstitute.hellbender.utils.GenomeLocParser.createGenomeLoc(GenomeLocParser.java:185); at org.broadinstitute.hellbender.utils.GenomeLocParser.createGenomeLoc(GenomeLocParser.java:169); at org.broadinstitute.hellbender.utils.GenomeLocParser.createGenomeLoc(GenomeLocParser.java:150); at org.broadinstitute.hellbender.tools.walkers.rnaseq.OverhangFixingManager$SplitRead.setRead(OverhangFixingManager.java:402); at org.broadinstitute.hellbender.tools.walkers.rnaseq.OverhangFixingManager$SplitRead.<init>(OverhangFixingManager.java:396); at org.broadinstitute.hellbender.tools.walkers.rnaseq.OverhangFixingManager.getSplitRead(OverhangFixingManager.java:467); at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); at java.util.Collections$2.tryAdvance(Collections.java:4717); at java.util.Collections$2.forEachRemaining(Collections.java:4725); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.A,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5293:2265,validat,validateGenomeLoc,2265,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5293,1,['validat'],['validateGenomeLoc']
Security,"bgkl_compression.so from jar:file:/home/zepengmu/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Oct 25, 2020 7:53:34 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 19:53:34.606 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.606 INFO ValidateVariants - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:1728,Validat,ValidateVariants,1728,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250_splitmultiallelics.vcf.gz --splitMultiallelics; 17:52:19.004 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 5:52:19 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 17:52:19.130 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 17:52:19.131 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 17:52:19.131 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 17:52:19.131 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 17:52:19.131 INFO LeftAlignAndTrimVariants - Start Date/Time: September 5, 2018 5:52:18 PM EDT; 17:52:19.131 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - HTSJDK Version: 2.16.0; 17:52:19.132 INFO LeftAlignAndTrimVariants - Picard V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971:1495,authenticat,authentication,1495,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971,1,['authenticat'],['authentication']
Security,"ble technical artifacts (false positves); ## gnomad, gnomad_index: optional database of known germline variants (see http://gnomad.broadinstitute.org/downloads); ## variants_for_contamination, variants_for_contamination_index: VCF of common variants with allele frequencies fo calculating contamination; ##; ## ** Secondary resources ** (for optional tasks); ## onco_ds_tar_gz, default_config_file: Oncotator datasources and config file; ## sequencing_center, sequence_source: metadata for Oncotator; ##; ## Outputs :; ## - One VCF file and its index with primary filtering applied; secondary filtering and functional annotation if requested.; ##; ## Cromwell version support ; ## - Successfully tested on v27; ##; ## LICENSING : ; ## This script is released under the WDL source code license (BSD-3) (see LICENSE in ; ## https://github.com/broadinstitute/wdl). Note however that the programs it calls may ; ## be subject to different licenses. Users are responsible for checking that they are; ## authorized to run all programs before running this script. Please see the docker ; ## pages at https://hub.docker.com/r/broadinstitute/* for detailed licensing information ; ## pertaining to the included programs. workflow Mutect2 {; # Runtime; String gatk4_jar; File picard_jar; String m2_docker; String oncotator_docker; Int preemptible_attempts; # Workflow options; Int scatter_count; File? intervals ; Array[String] artifact_modes; String? m2_extra_args; String? m2_extra_filtering_args; Boolean is_run_orientation_bias_filter; Boolean is_run_oncotator; # Primary inputs ; File ref_fasta; File ref_fasta_index; File ref_dict; File tumor_bam; File tumor_bam_index; String tumor_sample_name; File? normal_bam; File? normal_bam_index; String? normal_sample_name; # Primary resources; File? pon; File? pon_index; File? gnomad; File? gnomad_index; File? variants_for_contamination; File? variants_for_contamination_index; # Secondary resources / inputs; File? onco_ds_tar_gz; File? default_config_file; ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3341:3101,authoriz,authorized,3101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3341,1,['authoriz'],['authorized']
Security,bq query audit [VS-1396],MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8847:9,audit,audit,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8847,1,['audit'],['audit']
Security,"branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --max-indel-length 250 -O zeta_snippet_leftalign_250_96branch.vcf.gz; 14:03:44.243 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 06, 2018 2:03:44 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 14:03:44.358 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 14:03:44.358 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-25-g0c6f06f-SNAPSHOT; 14:03:44.359 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:03:44.359 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 14:03:44.359 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 14:03:44.359 INFO LeftAlignAndTrimVariants - Start Date/Time: September 6, 2018 2:03:44 PM EDT; 14:03:44.359 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 14:03:44.359 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 14:03:44.359 INFO LeftAlignAndTrimVariants - HTSJDK Version: 2.16.0; 14:03:44.359 INFO LeftAlignAndTrimVariants - Picard V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326:7452,authenticat,authentication,7452,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-419190326,1,['authenticat'],['authentication']
Security,"broadinstitute.hellbender.tools.funcotator.Funcotator).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 23:01:58.560 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///omics/chatchawit/bundle/test/gencode/hg38/gencode.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; 23:02:05.335 INFO ProgressMeter - Starting traversal; 23:02:05.337 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:02:06.530 INFO Funcotator - Shutting down engine; [April 27, 2018 11:02:06 PM ICT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.16 minutes.; Runtime.totalMemory()=3420979200; java.lang.IllegalArgumentException: Invalid interval. Contig:ENST00000342066.7|ENSG00000187634.11|OTTHUMG00000040719.10|OTTHUMT00000276866.2|SAMD11-202|SAMD11|2551|protein_coding| start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.getCodingSequenceFromTranscriptFasta(GencodeFuncotationFactory.java:418); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSequenceComparison(GencodeFuncotationFactory.java:1177); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createCodingRegionFuncotation(GencodeFuncotationFactory.java:619); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnTranscript(GencodeFuncotationFactory.java:575); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotations(GencodeFuncotationFa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157:7219,validat,validateArg,7219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157,1,['validat'],['validateArg']
Security,"bs per interval, store the data from StratificationManager, and then restore/aggregate it, we could execute VariantEval/VariantQC scatter/gathered. Here is the proposal:; ; - This assumes my PR to separate VariantEvalEngine has been merged.; - In StratificationManager, create a SerializedStratificationState class. This class is responsible for gathering the relevant state of StratificationManager and would get serialized to disk using Jackson.; - StratificationManager would have a saveToDisk(), and a new constructor that accepts the Path to a serialized SerializedStratificationState object. The implementation of saving/restoring would basically be private to StratificationManager.; - In VariantEvalEngine, make a public method for saveToDisk(), which saves StratificationManager and any potential other needed information to disk, serializing with Jackson.; - StratificationManager already has a concept of combineStrats() and Combiner. This needs to be fully implemented across the VariantEval classes; however, I propose to build off this to allow VariantEvaluators and VariantStratifiers to be combined. ; - If the above works, then it is possible to take N serialized SerializedStratificationState objects, restore and combine to create one StratificationManager that represents the data from across the genome.; - With the above steps, the core capabilities I need should be present. As far as how that's exposed in existing GATK tools, I dont have strong opinions. If you want this exposed in VariantEval, I'm happy to make an new argument for --save-state-to-disk-only, which would save the result of VariantEval's interation to a serialized file and skip the reports. To be useful, we need a companion walker to ""MergeVariantEvals"", which takes N serialized files, loads/aggregates and makes the actual report. Does anyone have thoughts or concerns on this proposal? Is this something you think you'd accept as a PR to GATK/VariantEvalEngine/StratificationManager? Thanks in advance.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7030:3164,expose,exposed,3164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7030,2,['expose'],['exposed']
Security,build_docker script should fail early if gcloud isn't authenticated,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5353:54,authenticat,authenticated,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5353,1,['authenticat'],['authenticated']
Security,"build_docker.sh creates unzippedJar and testsJar, but it does not remove them and it fails as a result in subsequent runs. . I ran ./build_socker.sh -e <GIT LOG HASH> and I got the error message ; mv: rename ./build/bundle-files-collected to ./unzippedJar/bundle-files-collected: Directory not empty. Only after removing unzippedJar and testJar could I build the image again successfully.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5369:161,HASH,HASH,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5369,1,['HASH'],['HASH']
Security,"but for fingerprinting it seems that since it is effectively random-access,; perhaps prefetching will not be worth it?. On Fri, Apr 12, 2019 at 2:32 PM droazen <notifications@github.com> wrote:. > @yfarjoun <https://github.com/yfarjoun> We should sit down at some point; > to discuss the best way to activate the prefetching in Picard. It may be a; > little less trivial than I had thought based on the above, but should still; > be fairly simple.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482678256>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACnk0ptBXdOQ-9HlXMjjpFHI_zp-cQJqks5vgNEzgaJpZM4csje4>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482678782:68,access,access,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5882#issuecomment-482678782,2,['access'],['access']
Security,"c/user/farrell/.sparkStaging/application_1542127286896_0153/__spark_libs__7473738539612638927.zip; 2019-01-07 11:33:38 INFO Client:54 - Uploading resource file:/tmp/spark-1ac79f09-1a36-4668-92d9-0739775f98ed/__spark_conf__4147634812449814799.zip -> hdfs://scc/user/farrell/.sparkStaging/application_1542127286896_0153/__spark_conf__.zip; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing view acls to: farrell; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing modify acls to: farrell; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing view acls groups to:; 2019-01-07 11:33:38 INFO SecurityManager:54 - Changing modify acls groups to:; 2019-01-07 11:33:38 INFO SecurityManager:54 - SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(farrell); groups with view permissions: Set(); users with modify permissions: Set(farrell); groups with modify permissions: Set(); 2019-01-07 11:33:38 INFO Client:54 - Submitting application application_1542127286896_0153 to ResourceManager; 2019-01-07 11:33:38 INFO YarnClientImpl:251 - Submitted application application_1542127286896_0153; 2019-01-07 11:33:38 INFO SchedulerExtensionServices:54 - Starting Yarn extension services with app application_1542127286896_0153 and attemptId None; 2019-01-07 11:33:39 INFO Client:54 - Application report for application_1542127286896_0153 (state: ACCEPTED); 2019-01-07 11:33:39 INFO Client:54 -; client token: Token { kind: YARN_CLIENT_TOKEN, service: }; diagnostics: N/A; ApplicationMaster host: N/A; ApplicationMaster RPC port: -1; queue: default; start time: 1546878818531; final status: UNDEFINED; tracking URL: https://scc-hsn1.scc.bu.edu:8090/proxy/application_1542127286896_0153/; user: farrell; 2019-01-07 11:33:40 INFO Client:54 - Application report for application_1542127286896_0153 (state: ACCEPTED); 2019-01-07 11:33:41 INFO Client:54 - Application report for application_1542127286896_0153 (state: ACCEPTED); 2019-01-07 11:33:42 INFO Client:54 - Applic",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-451999969:12578,authenticat,authentication,12578,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-451999969,8,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"c/user/farrell/.sparkStaging/application_1542127286896_0166/__spark_libs__7821719163562430010.zip; 2019-01-09 13:35:22 INFO Client:54 - Uploading resource file:/tmp/spark-69cc5c72-eff6-4259-8b3b-12fa6f8c42b0/__spark_conf__4520928824604875683.zip -> hdfs://scc/user/farrell/.sparkStaging/application_1542127286896_0166/__spark_conf__.zip; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing view acls to: farrell; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing modify acls to: farrell; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing view acls groups to:; 2019-01-09 13:35:22 INFO SecurityManager:54 - Changing modify acls groups to:; 2019-01-09 13:35:22 INFO SecurityManager:54 - SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(farrell); groups with view permissions: Set(); users with modify permissions: Set(farrell); groups with modify permissions: Set(); 2019-01-09 13:35:22 INFO Client:54 - Submitting application application_1542127286896_0166 to ResourceManager; 2019-01-09 13:35:22 INFO YarnClientImpl:251 - Submitted application application_1542127286896_0166; 2019-01-09 13:35:22 INFO SchedulerExtensionServices:54 - Starting Yarn extension services with app application_1542127286896_0166 and attemptId None; 2019-01-09 13:35:23 INFO Client:54 - Application report for application_1542127286896_0166 (state: ACCEPTED); 2019-01-09 13:35:23 INFO Client:54 -; client token: Token { kind: YARN_CLIENT_TOKEN, service: }; diagnostics: N/A; ApplicationMaster host: N/A; ApplicationMaster RPC port: -1; queue: default; start time: 1547058922320; final status: UNDEFINED; tracking URL: https://scc-hsn1.scc.bu.edu:8090/proxy/application_1542127286896_0166/; user: farrell; 2019-01-09 13:35:24 INFO Client:54 - Application report for application_1542127286896_0166 (state: ACCEPTED); 2019-01-09 13:35:25 INFO Client:54 - Application report for application_1542127286896_0166 (state: ACCEPTED); 2019-01-09 13:35:26 INFO Client:54 - Applic",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452814616:12317,authenticat,authentication,12317,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452814616,8,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9VdGlscy5qYXZh) | `80.593% <ø> (-0.309%)` | `124 <0> (-3)` | |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `59.459% <100%> (+2.629%)` | `48 <5> (+3)` | :arrow_up: |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `73.6% <100%> (ø)` | `37 <0> (ø)` | :arrow_down: |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `81.081% <0%> (-0.737%)` | `24% <0%> (+8%)` | |; | [...org/broadinstitute/hellbender/utils/MathUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9NYXRoVXRpbHMuamF2YQ==) | `81.009% <0%> (+1.638%)` | `170% <0%> (+29%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `74.026% <0%> (+1.948%)` | `35% <0%> (ø)` | :arrow_down: |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/2651?src=pr&el=tree#diff-c3JjL21haW4vamF2YS,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2651#issuecomment-298994813:2050,Validat,ValidateVariants,2050,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2651#issuecomment-298994813,1,['Validat'],['ValidateVariants']
Security,c=pr&el=desc) will **decrease** coverage by `0.002%`.; > The diff coverage is `86.667%`. ```diff; @@ Coverage Diff @@; ## master #5718 +/- ##; ===============================================; - Coverage 87.069% 87.067% -0.003% ; - Complexity 31875 31880 +5 ; ===============================================; Files 1940 1940 ; Lines 146738 146756 +18 ; Branches 16226 16229 +3 ; ===============================================; + Hits 127764 127776 +12 ; - Misses 13061 13065 +4 ; - Partials 5913 5915 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5718?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.601% <100%> (-1.399%)` | `8 <6> (+2)` | |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `87.179% <50%> (-1.417%)` | `41 <0> (+2)` | |; | [...oadinstitute/hellbender/utils/pairhmm/PairHMM.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9wYWlyaG1tL1BhaXJITU0uamF2YQ==) | `74.82% <0%> (-3.597%)` | `24% <0%> (ø)` | |; | [...hellbender/utils/pairhmm/VectorLoglessPairHMM.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9wYWlyaG1tL1ZlY3RvckxvZ2xlc3NQYWlySE1NLmphdmE=) | `85.526% <0%> (-1.316%)` | `12% <0%> (ø)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5718/diff?src=pr&el=tree#diff-c3JjL21haW4va,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5718#issuecomment-467164762:1278,validat,validation,1278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5718#issuecomment-467164762,1,['validat'],['validation']
Security,came up in recent profiling - hashCode computation on KMer was very inefficient and wasteful in String creation . @lbergelson can you review?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1620:30,hash,hashCode,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1620,1,['hash'],['hashCode']
Security,came up in review of #614. ; Because of sequence dict validation we needed to hardwire bogus contig lengths in the tests. This issue is about how to resolve this - keep validation and not having to lie about the lengths (and ideally not having to commit the whole reference into the repository).,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/690:54,validat,validation,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/690,2,['validat'],['validation']
Security,came up on profiling - computing the hashcode over and over is expensive to we precompute it. @lbergelson please review,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1625:37,hash,hashcode,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1625,1,['hash'],['hashcode']
Security,"catesSpark) that running with an input in the form ""CountReadsSpark -I gs://my-bucket-dir/my-file.bam."" The tool crashes with the following unhelpful stacktraces:. ```; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; 	at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); 	at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:70); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1825); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1012); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:975); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2653); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:92); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2687); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2669); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:371); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:295); 	at org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(FileInputFormat.java:500); 	at org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(FileInputFormat.java:469); 	at org.apache.spark.SparkContext$$anonfun$newAPIHadoopFile$2.apply(SparkContext.scala:1084); 	at org.apache.spark.SparkContext$$anonfun$newAPIHadoopFile$2.apply(SparkContext.scala:1072); 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151); 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112); 	at org.apache.spark.SparkContext.withScope(SparkContext.scala:679); 	at org.apache.spark.SparkContext.newAPIHadoopFile(SparkContext.scala:1072); 	at org.apa",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4369:1068,access,access,1068,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4369,1,['access'],['access']
Security,cePipeline.forEach(ReferencePipeline.java:485); at org.broadinstitute.hellbender.engine.MultiVariantWalker.traverse(MultiVariantWalker.java:136); at org.broadinstitute.hellbender.engine.MultiVariantWalkerGroupedOnStart.traverse(MultiVariantWalkerGroupedOnStart.java:165); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1095); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); Caused by: java.lang.IllegalStateException: Padded span must contain active span.; at org.broadinstitute.hellbender.utils.Utils.validate(Utils.java:814); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:109); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:85); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:120); at org.broadinstitute.hellbender.tools.walkers.realignmentfilter.FilterAlignmentArtifacts.makeAssemblyRegionFromVariantReads(FilterAlignmentArtifacts.java:280); at org.broadinstitute.hellbender.tools.walkers.realignmentfilter.FilterAlignmentArtifacts.apply(FilterAlignmentArtifacts.java:212); at org.broadinstitute.hellbender.engine.MultiVariantWalkerGroupedOnStart.apply(MultiVariantWalkerGroupedOnStart.java:133); at org.broadinstitute.hellbender.engine.MultiVariantWalkerGroupedOnStart.apply(MultiVariantWalkerGroupedOnStart.java:108); at org.broadinstitute.hellbender.engine.MultiVariantWalker.lambda$traverse$1(MultiVariantWalker.java:139); ... 21 more; ```. #### Steps to reproduce; _Tell us how to reproduce this,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8221:12552,validat,validate,12552,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8221,1,['validat'],['validate']
Security,"ch info header line, call on each VCFInfoHeaderLine getCount(vc) to get the expected number of info annotation entries; - Compare the expected number with a count based on vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some additional parsing because it returns an Object; - (Bonus points if you use the isFixedCount() and getCount() functions on the VCF info header line to simplify annotations that aren't according to the number of alt alleles); ### Test data. /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; Should fail AC/AF validation at ; `1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120`; See results using:. ```; use VCFtools; vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; ```. which outputs:; `INFO field at 1:768589 .. INFO tag [AC=1] expected different number of values (expected 2, found 1),INFO tag [AF=0.00047] expected different number of values (expected 2, found 1)`; ### Notes. Currently, all the validation modes call out to HTSJDK. Do we want to put the new functionality there as well?. ---. @yfarjoun commented on [Thu Jul 16 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122130280). I think that it is very appropriate to validate in htsjdk. On Thu, Jul 16, 2015 at 4:05 PM, ldgauthier notifications@github.com; wrote:. > Currently ValidateVariants relies on genotypes to transitively check that; > each alt allele occurs in at least one sample and that the AC adds up.; > However, this can fail on sites-only files because there are no genotypes.; > We should use the definition of the info annotations in the header to check; > how many entries each should have.; > Outline; > - Add a new validation type for info-field counts to enum and to; > switch statement; > - Grab info headers from input VCF with something like; > GATKVCFUtils.getVCFHeadersFromRods(getToolkit(),; > variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; > - In the map() f",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:1753,validat,validation,1753,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validation']
Security,change shards `hashCode` to fix bad distribution to partitions. fix NPE. adding uri's change from distinct to aggregate. reduce shard size by half,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/937:15,hash,hashCode,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/937,1,['hash'],['hashCode']
Security,cker image fails. #### Steps to reproduce. (base) fleharty@wm3b9-dfa docker % docker run -it broadinstitute/gatk:4.2.2.0; Unable to find image 'broadinstitute/gatk:4.2.2.0' locally; 4.2.2.0: Pulling from broadinstitute/gatk; a7fe112a8303: Already exists ; Digest: sha256:32175c3c7c1fb9f5bd6650183c9c5cf26fb822dddb0cad0123d48c33124b6065; Status: Downloaded newer image for broadinstitute/gatk:4.2.2.0; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# apt-get update; Get:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]; Get:2 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB] ; Get:3 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB] ; Get:4 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [543 kB] ; Get:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease [6786 B] ; Get:6 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1426 kB] ; Err:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease ; The following signatures couldn't be verified because the public key is not available: NO_PUBKEY FEEA9169307EA071 NO_PUBKEY 8B57C5C2836F4BEB; Get:7 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2295 kB] ; Get:8 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] ; Get:9 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] ; Get:10 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB] ; Get:11 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]; Get:12 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB] ; Get:13 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB] ; Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2200 kB]; Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]; Get:16 http:,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7447:1182,secur,security,1182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7447,1,['secur'],['security']
Security,conda3/envs/gatk/share/gatk4-4.1.8.1-0/gatk-package-4.1.8.1-local.jar) to method java.nio.Bits.unaligned(); WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 20/10/08 18:35:27 INFO SparkContext: Running Spark version 2.4.5; 18:35:27.640 WARN NativeCodeLoader - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 20/10/08 18:35:27 INFO SparkContext: Submitted application: MarkDuplicatesSpark; 20/10/08 18:35:27 INFO SecurityManager: Changing view acls to: wup; 20/10/08 18:35:27 INFO SecurityManager: Changing modify acls to: wup; 20/10/08 18:35:27 INFO SecurityManager: Changing view acls groups to: ; 20/10/08 18:35:27 INFO SecurityManager: Changing modify acls groups to: ; 20/10/08 18:35:27 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(wup); groups with view permissions: Set(); users with modify permissions: Set(wup); groups with modify permissions: Set(); 20/10/08 18:35:28 INFO Utils: Successfully started service 'sparkDriver' on port 44712.; 20/10/08 18:35:28 INFO SparkEnv: Registering MapOutputTracker; 20/10/08 18:35:28 INFO SparkEnv: Registering BlockManagerMaster; 20/10/08 18:35:28 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 20/10/08 18:35:28 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 20/10/08 18:35:28 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-50a111b1-9241-4bc8-b711-cdb6d7054e70; 20/10/08 18:35:28 INFO MemoryStore: MemoryStore started with capacity 17.8 GB; 20/10/08 18:35:28 INFO SparkEnv: Registering OutputCommitCoordinator; 20/1,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6875:2863,Secur,SecurityManager,2863,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6875,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"connector will not be configured properly; 12:33:52.162 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/FGI2017B/pub/gatk-4.1.0.0/gatk-package-4.1.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 12:33:53.793 INFO CreateReadCountPanelOfNormals - ------------------------------------------------------------; 12:33:53.794 INFO CreateReadCountPanelOfNormals - The Genome Analysis Toolkit (GATK) v4.1.0.0; 12:33:53.794 INFO CreateReadCountPanelOfNormals - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:33:53.797 INFO CreateReadCountPanelOfNormals - Initializing engine; 12:33:53.797 INFO CreateReadCountPanelOfNormals - Done initializing engine; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 19/02/18 12:33:53 INFO SparkContext: Running Spark version 2.2.0; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/share/FGI2017B/pub/gatk-4.1.0.0/gatk-package-4.1.0.0-local.jar) to method sun.security.krb5.Config.getInstance(); WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:33:54.187 WARN NativeCodeLoader - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 12:33:54.263 INFO CreateReadCountPanelOfNormals - Shutting down engine; [February 18, 2019 at 12:33:54 PM CST] org.broadinstitute.hellbender.tools.copynumber.CreateReadCountPanelOfNormals done. Elapsed time: 0.04 minutes.; Runtime.totalMemory()=2147483648; Exception in thread ""main"" java.lang.ExceptionInInitializerError; 	at org.apache.spark.SparkConf.validateSettings(SparkConf.scala:546); 	at org.apache.spark",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5686:1520,authenticat,authentication,1520,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5686,1,['authenticat'],['authentication']
Security,"cords false --warnOnErrors false --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --readValidationStringency SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO Valid",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2116,Validat,ValidateVariants,2116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,cram dictionary validation should print the missing contigs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1289:16,validat,validation,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1289,1,['validat'],['validation']
Security,cutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:992); 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(AbstractGoogleClientRequest.java:380); 	at shaded.cloud_nio.com.google.api.services.storage.Storage$Objects$Get.executeMedia(Storage.java:5130); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:491); 	... 12 more; Caused by: java.io.EOFException: SSL peer shut down incorrectly; 	at sun.security.ssl.InputRecord.read(InputRecord.java:505); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	... 25 more; ```; The error seems to appear after `org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 19.15 minutes.` is logged which is surprising.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685:7810,secur,security,7810,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685,2,['secur'],['security']
Security,"d binding in [jar:file:/mnt/yarn/usercache/hadoop/filecache/37/__spark_libs__6987413740287883326.zip/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/usr/lib/hadoop/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for TERM; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for HUP; 17/05/05 17:03:30 INFO SignalUtils: Registered signal handler for INT; 17/05/05 17:03:30 INFO ApplicationMaster: Preparing Local resources; 17/05/05 17:03:32 INFO ApplicationMaster: ApplicationAttemptId: appattempt_1493961816416_0010_000002; 17/05/05 17:03:32 INFO SecurityManager: Changing view acls to: yarn,hadoop; 17/05/05 17:03:32 INFO SecurityManager: Changing modify acls to: yarn,hadoop; 17/05/05 17:03:32 INFO SecurityManager: Changing view acls groups to: ; 17/05/05 17:03:32 INFO SecurityManager: Changing modify acls groups to: ; 17/05/05 17:03:32 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(yarn, hadoop); groups with view permissions: Set(); users with modify permissions: Set(yarn, hadoop); groups with modify permissions: Set(); 17/05/05 17:03:32 INFO ApplicationMaster: Starting the user application in a separate Thread; 17/05/05 17:03:32 INFO ApplicationMaster: Waiting for spark context initialization...; [May 5, 2017 5:03:35 PM UTC] org.broadinstitute.hellbender.tools.spark.pipelines.PrintReadsSpark --output hdfs:///output2.bam --input hdfs:///chr1.bam --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046:1835,authenticat,authentication,1835,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-299525046,8,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"d positives and negatives and use the existing code for extracting labels, but this will require a bit of engineering and be more trouble than it's worth. There are other options---see https://ir.cwi.nl/pub/30479, for example. We might want to experiment with the LL score discussed there (see https://www.aaai.org/Papers/ICML/2003/ICML03-060.pdf for the original paper---although note that despite the paper's high citation count, I'm not sure what the canonical name for this metric actually is, but it doesn't appear to be ""LL score""---perhaps someone else knows or has better Google-fu and can figure it out) before moving on to their methods for estimating F1. Doing a literature search for other discussions of optimizing F1 or other metrics in the context of positive-unlabeled learning might be worthwhile, but I think most methods will probably involve some sort of estimation of the base rate in unlabeled data. I think we may have to add some mechanism for holding out a validation set during training if we want to automatically tune thresholds in a rigorous fashion. Shouldn't be too bad---we can just have the training tool randomly mask out a set of the truth and pass the mask to the scoring tool (or maybe just determine the threshold in the training tool, if we are running in positive/negative mode and have access to unlabeled data)---but does add a couple of parameters to the tool interfaces. This also adds additional dependence on the quality of the truth resources. I think an implicit assumption in any use of the truth---even just thresholding/calibrating by sensitivity---is that it is a random sample; however, I'm not sure how true this is in actual use. For example, in malaria, it looks like we may have to resort to using a callset that has been very conservatively filtered as truth, which will bias us towards high scores and the peaks of the positive distribution. Perhaps we can also experiment with just treating training/truth on an equal footing (I think the d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241:1257,validat,validation,1257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241,2,['validat'],['validation']
Security,"d.interval\_list \\ ; ; \-R Homo\_sapiens\_assembly19.fasta \\ ; ; \-V 1000G\_phase1.snps.high\_confidence.b37.vcf.gz \\ ; ; \-I downsample\_10k.bam \\ ; ; \-O output.txt --verbosity INFO. c) Entire error log:. 19:13:25.991 INFO NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/broad/software/free/Linux/redhat\_7\_x86\_64/pkgs/gatk\_4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl\_compression.so. Jun 14, 2021 7:13:26 PM shaded.cloud\_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials. WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see [https://cloud.google.com/docs/authentication/](https://cloud.google.com/docs/authentication/). 19:13:26.217 INFO ASEReadCounter - ------------------------------------------------------------. 19:13:26.218 INFO ASEReadCounter - The Genome Analysis Toolkit (GATK) v4.1.8.1. 19:13:26.218 INFO ASEReadCounter - For support and documentation go to [https://software.broadinstitute.org/gatk/](https://software.broadinstitute.org/gatk/). 19:13:26.219 INFO ASEReadCounter - Executing as [cbao@uger-c009.broadinstitute.org](mailto:cbao@uger-c009.broadinstitute.org) on Linux v3.10.0-1160.15.2.el7.x86\_64 amd64. 19:13:26.219 INFO ASEReadCounter - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0\_181-b13. 19:13:26.219 INFO ASEReadCounter - Start Date/Time: June 14, 2021 7:13:25 PM UTC. 19:13:26.219 INFO ASEReadCounter - ------------------------------------------------------------. 19:13:26.219 INFO ASEReadCounter - ------------------------------------------------------------. 19:13:26.220 INFO ASEReadCounter - HTSJDK Version: 2.23.0. 19:13:26.220 INFO ASEReadCounter - Picard V",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7327:2161,authenticat,authentication,2161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7327,1,['authenticat'],['authentication']
Security,"d4e2ca70674 submitted; [2020-07-14 05:09:30,66] [info] SingleWorkflowRunnerActor: Workflow submitted 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,67] [info] 1 new workflows fetched by cromid-ca5c695: 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,68] [info] WorkflowManagerActor Starting workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] WorkflowManagerActor Successfully started WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] Retrieved 1 workflows from the WorkflowStoreActor; [2020-07-14 05:09:30,72] [info] WorkflowStoreHeartbeatWriteActor configured to flush with batch size 10000 and process rate 2 minutes.; [2020-07-14 05:09:30,83] [info] MaterializeWorkflowDescriptorActor [968be82c]: Parsing workflow as WDL 1.0; [2020-07-14 05:09:31,60] [info] MaterializeWorkflowDescriptorActor [968be82c]: Call-to-Backend assignments: ValidateBamsWf.ValidateBAM -> Local; [2020-07-14 05:09:31,82] [warn] Local [968be82c]: Key/s [memory, disks] is/are not supported by backend. Unsupported attributes will not be part of job executions.; [2020-07-14 05:09:35,38] [info] Not triggering log of token queue status. Effective log interval = None; [2020-07-14 05:09:37,15] [info] WorkflowExecutionActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 [968be82c]: Starting ValidateBamsWf.ValidateBAM; [2020-07-14 05:09:37,39] [info] Assigned new job execution tokens to the following groups: 968be82c: 1; [2020-07-14 05:09:41,61] [warn] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Unrecognized runtime attribute keys: disks, memory; [2020-07-14 05:09:41,71] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: /gatk/gatk \; ValidateSamFile \; --INPUT /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/inputs/-1942028726/test.bam \; --OUTPUT test.validation_.txt \; --MODE SUMMARY; [2020-07-14 05:09:41,76] [inf",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:3966,Validat,ValidateBAM,3966,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['Validat'],['ValidateBAM']
Security,"dPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbende",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2515,Validat,ValidateVariants,2515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"dateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:delegated \; broadinstitute/gatk@sha256:18146e79d06787483310e5de666502090a480e10ac0fad06a36a5e7a5c9bb1dc /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/script. # get the return code (working even if the container was detached); rc=$(docker wait cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid). # remove the container after waiting; docker rm cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid. # return exit code; exit $rc; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: job id: 243; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Status change from - to Done; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor Workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 failed (during ExecutingWorkflowState): Job ValidateBamsWf.ValidateBAM:0:1 exited with return code -1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr.; Could not retrieve content: Could not read from /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:6584,Validat,ValidateBAM,6584,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['Validat'],['ValidateBAM']
Security,"dateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 17:43:53.302 INFO ValidateVariants - Shutting down engine; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=194510848; java.lang.IllegalArgumentException: Illegal base [] seen in the allele; 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:231); 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:374); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants.apply(ValidateVariants.java:181); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.lambda$traverse$0(VariantWalkerBase.java:104); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184); 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175); 	at java.util.I",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:3904,Validat,ValidateVariants,3904,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"dbSNP build, it throws this error:. \[Fri Jul 23 13:25:03 CEST 2021\] picard.vcf.CollectVariantCallingMetrics done. Elapsed time: 70.55 minutes. Runtime.totalMemory()=1623195648. To get help, see [http://broadinstitute.github.io/picard/index.html#GettingHelp](http://broadinstitute.github.io/picard/index.html#GettingHelp). java.lang.NullPointerException: Cannot invoke ""htsjdk.samtools.SAMSequenceRecord.getSequenceLength()"" because the return value of ""htsjdk.samtools.SAMSequenceDictionary.getSequence(String)"" is null. at picard.util.DbSnpBitSetUtil.loadVcf(DbSnpBitSetUtil.java:163). at picard.util.DbSnpBitSetUtil.createSnpAndIndelBitSets(DbSnpBitSetUtil.java:131). at picard.vcf.CollectVariantCallingMetrics.doWork(CollectVariantCallingMetrics.java:101). at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:308). at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:37). at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160). at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203). at org.broadinstitute.hellbender.Main.main(Main.java:289). As a bit of a background, I am trying to use the latest dbSNP release (build 155, GRCh38, GCF\_000001405.39) and have tried using GATK version 4.1.9.0 and the latest 4.2.0.0, both having the same problem. To prepare the dbSNP file for use with the best practices workflow, I renamed the NCBI chromosome accession numbers  to UCSC style names using bcftools annotate, updated the vcf headers using UpdateVcfSequenceDictionary, and indexed the file using IndexFeatureFile. The dbSNP file worked well with both HaplotypeCaller and GenotypeGVCFs, with the rsids overlapping perfectly with those obtained when using the dbSNP resource bundle version. Any help with this would be greatly appreciated!<br><br><i>(created from <a href='https://broadinstitute.zendesk.com/agent/tickets/171466'>Zendesk ticket #171466</a>)<br>gz#171466</i>",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7383:2426,access,accession,2426,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7383,1,['access'],['accession']
Security,"de.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; WARNING	2018-05-23 23:24:53	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 23:25:09.380 INFO ProgressMeter - Starting traversal; 23:25:09.381 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:25:20.674 INFO ProgressMeter - chr1:24929636 0.2 3000 15941.9; 23:25:42.601 INFO ProgressMeter - chr1:64681324 0.6 6000 10837.2; 23:25:54.659 INFO ProgressMeter - chr1:156245393 0.8 9000 11926.3; 23:26:06.846 INFO ProgressMeter - chr1:206965947 1.0 12000 12529.6; 23:26:12.318 INFO Funcotator - Shutting down engine; [May 23, 2018 11:26:12 PM ICT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 1.38 minutes.; Runtime.totalMemory()=10974920704; java.lang.IllegalArgumentException: Genomic positions must be > 0.; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:722); 	at org.broadinstitute.hellbender.utils.param.ParamUtils.isPositive(ParamUtils.java:153); 	at org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.getAlignedPosition(FuncotatorUtils.java:336); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSequenceComparison(GencodeFuncotationFactory.java:1392); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createCodingRegionFuncotationForProteinCodingFeature(GencodeFuncotationFactory.java:751); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createExonFuncotation(GencodeFuncotationFactory.java:649); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnTranscript(GencodeFuncotationFactory.java:609); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.create",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-391421032:4514,validat,validateArg,4514,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-391421032,1,['validat'],['validateArg']
Security,"dependency-name=commons-io:commons-io&package-manager=gradle&previous-version=2.7&new-version=2.14.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/broadinstitute/gatk/network/alerts). </details>",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9003:2021,secur,security,2021,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9003,2,"['Secur', 'secur']","['Security', 'security']"
Security,"derLine) or similar; add a test to VariantContextUnitTest.java; 2) After change 1) is merged, update ValidateVariants accordingly to use the new function and add a test to its integration tests. ---. @vdauwera commented on [Fri May 27 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-222213763). @ldgauthier is this still a thing? (in the sense of not having been addressed in htsjdk). ---. @ldgauthier commented on [Fri May 27 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-222214083). Still a thing. No work has been done here AFAIK. ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-260465013). This seems like fairly low-hanging fruit -- @ronlevine . ---. @ronlevine commented on [Wed Nov 23 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262613152). @ldgauthier Shouldn't a locus without genotypes bypass `AC` validation, given it's defined as: `Allele count in genotypes, for each ALT allele, in the same order as listed`?. ---. @ldgauthier commented on [Wed Nov 23 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262613997). Agreed. ---. @ronlevine commented on [Thu Nov 24 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262635204). The change should be a lot simpler than proposed. The code can validate the number of alleles before it checks for the presence of genotypes in [VariantContext#validateChromosomeCounts](https://github.com/samtools/htsjdk/blob/master/src/main/java/htsjdk/variant/variantcontext/VariantContext.java#L1236). . ---. @ldgauthier commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263277972). Sorry, I needed to refresh my memory. I actually don't want to bypass AC validation for variants without genotypes, but I think you already figured that out. My proposal was more general, but you're rig",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:5394,validat,validation,5394,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validation']
Security,"detected as B37 in HG19 annotation mode. Performing conversion.; 17:14:13.209 WARN FuncotatorEngine - WARNING: You are using B37 as a reference. Funcotator will convert your variants to GRCh37, and this will be fine in the vast majority of cases. There MAY be some errors (e.g. in the Y chromosome, but possibly in other places as well) due to changes between the two references.; 17:14:13.411 INFO ProgressMeter - Starting traversal; 17:14:13.412 INFO ProgressMeter - Current Locus Elapsed Minutes Features Processed Features/Minute; 17:14:15.391 INFO FuncotateSegments - Shutting down engine; [September 11, 2022 5:14:15 PM GMT] org.broadinstitute.hellbender.tools.funcotator.FuncotateSegments done. Elapsed time: 0.30 minutes.; Runtime.totalMemory()=1752170496; java.lang.IllegalArgumentException: Invalid interval. Contig:chr1 start:917445 end:911649; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:804); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:35); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.findInclusiveExonIndex(SegmentExonUtils.java:95); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.determineSegmentExonPosition(SegmentExonUtils.java:63); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2939); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2914); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsOnSegment(GencodeFuncotationFactory.java:2866); at org.broadinstitute.hellbender.tools.funcotator.DataSourceFuncotationFactory.determineFuncotations(DataSourc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314:1253,validat,validatePositions,1253,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314,2,['validat'],['validatePositions']
Security,"dian count is significantly away from the main peak (due to the abundance of low mappability bins with small counts). . Also, the second peak of chrX coverage in XY samples that you show above is not a large germline event -- it is simply a low mappable PAR-like region that borrows reads from chrY. Here's how the X coverage distribution looks like on an XY sample after mappability filtering (which removes most of all approximate homologies):; ![chrx](https://user-images.githubusercontent.com/15305869/37867778-54e3d196-2f73-11e8-8345-d8964b39a17e.png). **The second spurious peak is gone and range of NB-like behavior is pretty much perfect. Without mappability filtering, all of the bins on the second mode _will_ show up as CN = 2 events (in fact, if you look at gCNV calls on a typical XY samples, there are tons of CN = 2 calls).**. Most, if not all, of the non-NB-like coverage before/after the main peak in your plots are reads from unmappable regions, many of which show up as real CNV events if we do not filter them (reads in these regions do not follow from the coverage model and we are at the mercy of BWA). I strongly believe Genome STRiP has achieved ~ 99% experimental validation accuracy because of aggressive filtering, not because of a superior model (it's an elementary Gaussian mixture mix). Garbage in, garbage out. Anyhow, I am not comfortable at all with cutting a non-Beta release without taking care of about:. 1. Mappability-based bin/read filtering (for WGS), and; 2. Trying out and evaluating a bait-based coverage collection (for WES), so that the raw coverage distribution is more NB-like to begin with. These are both perfectly achievable goals before May 15. I'd be happy to leave stuff such as different coverage collection strategies (e.g. base call coverage) and fragment-based per-sample GC content estimation for later. These are other areas where significant improvements come from. For the record -- I am working full steam on evaluations, as we discussed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4558#issuecomment-375917669:1391,validat,validation,1391,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4558#issuecomment-375917669,2,['validat'],['validation']
Security,"directly, view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260495927,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACnk0uvegvUmCq7_G7U2PSuTpvIYl0wQks5q-Ox0gaJpZM4JNjE-; > . ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260519118). So, would adding a toggle be acceptable? And more importantly, can we make stringent validation default, with the option to not blow up on silly exome files? Will production accept that?. ---. @yfarjoun commented on [Tue Nov 15 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260617185). let me talk with production to see if we can post-facto change the exome; file... On Mon, Nov 14, 2016 at 8:27 PM, Geraldine Van der Auwera <; notifications@github.com> wrote:. > So, would adding a toggle be acceptable? And more importantly, can we make; > stringent validation default, with the option to not blow up on silly exome; > files? Will production accept that?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260519118,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACnk0tUTNAAyuk3m_2cJ8j_3KYroaqB1ks5q-QpsgaJpZM4JNjE-; > . ---. @vdauwera commented on [Mon Mar 20 2017](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-287821154). Any update on this, @yfarjoun ?. ---. @yfarjoun commented on [Mon Mar 20 2017](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-287826525). I think we will only fix the interval list when we move exomes to; hg38....so, no. On Mon, Mar 20, 2017 at 12:45 PM, Geraldine Van der Auwera <; notifications@github.com> wrote:. > Any update on this, @yfarjoun <https://github.com/yfarjoun> ?; >; > —; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2520:3059,validat,validation,3059,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2520,1,['validat'],['validation']
Security,dockstore testing: move validate vat inputs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7449:24,validat,validate,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7449,1,['validat'],['validate']
Security,"ds an artificial break at 1000 bins and screws up the scaling:. ![cr-ss](https://user-images.githubusercontent.com/11076296/51122629-417be180-17e8-11e9-9a8f-e17a5d0563f5.png). To fix this, I implemented minibatch slice sampling as described in http://proceedings.mlr.press/v33/dubois14.pdf. This uses early stopping of sampling as determined by a simple statistical test to perform approximate sampling of the posterior in a way that is more well behaved:. ![cr-mb](https://user-images.githubusercontent.com/11076296/51122680-61aba080-17e8-11e9-992a-f756a267d0ce.png). Note that the scaling levels off for larger segments, but the approximation can be made exact by taking the appropriate parameter to zero (here, this parameter is set to 0.1). However, since subsampling parameters were not exposed in the old code, I have not exposed the parameters for the approximation here. We can do this in a future PR if desired. Changing these parameters can affect runtime and results, but I've set them to reasonable values for now. The implementation involved 1) creating an abstract class to extract some common functionality shared with the old batch SliceSampler (which is now no longer used in production code), 2) implementing the MinibatchSliceSampler as described in the above reference, and 3) adding some hash-based caching functionality to both the batch/minibatch implementations, as well as to the allele-fraction likelihood calculations (see related discussion in #2860). I also made a few miscellaneous improvements to code style, etc. This is a relatively sizable change and can rather dramatically change the number of segments remaining after smoothing, etc. (although primarily on small scales and probably well within the noise). I will rerun the TCGA SNP array evaluations to make sure there are no negative effects on performance from this change or those introduced in #5556. @LeeTL1220 should also run some tests. The branch might require some further tweaking based on the results.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575:2024,hash,hash-based,2024,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575,1,['hash'],['hash-based']
Security,"ds.bam; **********. 11:25:52.673 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/fleharty/resources/picard.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Tue Jul 14 11:25:52 EDT 2020] ValidateSamFile INPUT=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam MODE=VERBOSE MAX_OUTPUT=100 IGNORE_WARNINGS=false VALIDATE_INDEX=true INDEX_VALIDATION_STRINGENCY=EXHAUSTIVE IS_BISULFITE_SEQUENCED=false MAX_OPEN_TEMP_FILES=8000 SKIP_MATE_VALIDATION=false VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false; [Tue Jul 14 11:25:52 EDT 2020] Executing as fleharty@wm462-624 on Mac OS X 10.15.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.4-SNAPSHOT; WARNING	2020-07-14 11:25:52	ValidateSamFile	NM validation cannot be performed without the reference. All other validations will still occur.; ERROR: Record 18321, Read name UMI-ATT-GAA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 26312, Read name UMI-CCT-TTC-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 70755, Read name UMI-CAG-GGA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 145082, Read name UMI-AAC-ATG-5, Zero-length read without FZ, CS or CQ tag; ERROR: Record 181500, Read name UMI-ACT-CTT-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186837, Read name UMI-CAA-CTC-4, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186862, Read name UMI-CGC-GCC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186904, Read name UMI-AGG-GTC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186919, Read name UMI-CGC-TGC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186947, Read name UMI-TAA-TAG-3, Zero-length read without FZ, CS or CQ tag; ERROR",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132:1855,Validat,ValidateSamFile,1855,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132,2,"['Validat', 'validat']","['ValidateSamFile', 'validation']"
Security,"e ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 17:43:53.302 INFO ValidateVariants - Shutting down engine; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=194510848; java.lang.IllegalArgumentException: Illegal base [] seen in the allele; 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:231); 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:374); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants.apply(ValidateVariants.java:181); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.lambda$traverse$0(VariantWalkerBase.java:104); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184); 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.traverse(VariantWalkerBase.j",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:4622,Validat,ValidateVariants,4622,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"e GATK3 traversal. Initially, I did plan on having `AssemblyRegionWalker` extend the former `ReadWindowWalker`, or an adapted version of your `SlidingWindowWalker`, and I did implement it like this at first, but ultimately I collapsed it into a single class for several reasons:; - Inheriting from a more generic traversal type caused usability issues and confusion with respect to the command-line arguments. The `ReadWindow` was the unit of processing for the superclass, but for `AssemblyRegionWalker` it was the unit of I/O and `AssemblyRegion` was the unit of processing, and I couldn't update the docs for `ReadWindowWalker` to clear up the confusion without mentioning `AssemblyRegion`-specific concepts.; - The `ReadShard` / `ReadWindow` was/is **only** there to prove that we can shard the data without introducing calling artifacts, and to provide a unit of parallelism for the upcoming Spark implementation. It's not something we really want to expose to users as a prominent knob, and we may hide it completely in the future once the shard size is tuned for performance.; - Inheriting from a more abstract walker type caused a number of other problems as well: methods that should have been final in the supertype could no longer be made final, with the result that tool implementations could inappropriately override engine initialization/shutdown routines. Also, there were issues with the progress meter, since both the supertype traversal and subtype traversal needed their own progress meter for their different units of processing. Ultimately it was just too awkward and forced, and the read shard is something that we eventually want to make an internal/encapsulated implementation detail anyway. GATK3 made the mistake, I think, of using long, confusing inheritance chains for its walker types, with the result that you got awkward and forced relationships like `RodWalker` inheriting from `LocusWalker`. It's better, I think, to make each traversal as standalone as possible, esp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-210806513:1255,expose,expose,1255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-210806513,1,['expose'],['expose']
Security,"e PairHMM as a separate project/repo on github and host AVX code there and have alternative implementations extend that project/repo (by creating repos that depend on the AVX one). . In other words, now we have 1 repo, broadinstitute/gatk. After the proposed change we'll have 3 repos (all BSD licensed):; 1) broadinstitute/gatk; 2) broadinstitute/nativePairHMM-AVX; 2) broadinstitute/nativePairHMM-PPC. We will duplicate the native code (AVX and PPC will be separate copies of C++ files etc) to simplify the testing burden. The parties interested in working on a specific architecture will contribute code directly to the respective architecture-specific repo and gatk will take occasional updates of those repos. The gatk repo will depend on the other two. The PPC repo will depend on the AVX repo (and any other native repos will depend on the AVX one). The avx and ppc repos will have their own build systems and unit tests against the new interface. The AVX repo will expose something like the following Java API (to be worked out in detail). ```; //Used to copy references to byteArrays to JNI from reads; public final class JNIReadDataHolderClass {; public byte[] readBases = null;; public byte[] readQuals = null;; public byte[] insertionGOP = null;; public byte[] deletionGOP = null;; public byte[] overallGCP = null;; }. //Used to copy references to byteArrays to JNI from haplotypes; public final class JNIHaplotypeDataHolderClass {; public byte[] haplotypeBases = null;; }. public interface NativePairHMMKernel extends AutoCloseable { . /**; * Function to initialize the fields of JNIReadDataHolderClass and JNIHaplotypeDataHolderClass from JVM.; * C++ code gets FieldIDs for these classes once and re-uses these IDs for the remainder of the program. Field IDs do not; * change per JVM session; *; * @param readDataHolderClass class type of JNIReadDataHolderClass; * @param haplotypeDataHolderClass class type of JNIHaplotypeDataHolderClass; */; void jniInitializeClassFields(Class<JNIRead",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-214914864:1130,expose,expose,1130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-214914864,1,['expose'],['expose']
Security,"e adopt a new default branch name and retire the use of 'master'.*. The use of 'master' as the default branch is quickly tipping into the realm of being archaic, and present the image of being increasingly tone deaf. 'main' is the commonly accepted replacement on GitHub, but I'm stopping short of suggesting the replacement name, just asking ""please retire master"". . ### 'master has a specific technical meaning' . It does. And is also an example of structural racism, which; > refers to the complex interactions of large scale societal systems, practices, ideologies, and programs that produce and and perpetuate inequities for racial minorities. The key aspect of structural or systematic racism is that these macro-level mechanisms operate independent of the intentions and actions of individuals, so that even if individual racism is not present, the adverse conditions and inequalities for racial minorities will continue to exist - [Gee & Ford, 2011](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4306458/). _And if you just felt as if you were accused of being a racist, please re-read the above definition again_ I'm addressing the bureaucracy ( which I can not realistically effect much change with, but some of you can).; ; Ultimately, a fair number of people are to varying degrees uncomfortable or threatened by this trope. And on these merits alone are a good reason to ditch master. [The process is straight forward and documentation abounds](https://www.git-tower.com/learn/git/faq/git-rename-master-to-main), [there are even tools to help automate the conversion](https://github.com/dsyer/main-branch-switch). But it will take time, and is not the most exciting work in the world. . Perhaps it's a sticky change as part of all major releases, or otherwise planned for? So, that's my vote, if I were to be asked to vote that is. And, if there are detailed plans in place to make this change, horray! Link them here, and now you have a(nother?) nice honeypot for this topic. John Major",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7621:1884,threat,threatened,1884,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7621,1,['threat'],['threatened']
Security,"e canonicalized/masked kmers. The result is a Collection<long[]> variable, which is then converted to either a PSKmerSet (Hopscotch set) or PSKmerBloomFilter, depending on the desired false positive probability. . The PSKmerSet/BloomFilter classes are basically wrappers for LargeLongHopscotchSet and LongBloomFilter, respectively. They both inherit PSKmerCollection, which provides a contains() function for querying new kmers for set membership and makes loading the kmers for filtering more convenient. These classes also store the kmer size, mask, and false positive probability. They also handle canonicalization/masking on queried kmers. **PathSeqFilterSpark tool**. Input:; 1) Input BAM; 2) Host kmer set file (optional); 3) Host reference bwa image (optional). Output:; 1) BAM containing paired reads that still have mates; 2) BAM containing unpaired reads / reads whose mates were filtered out; 3) Metrics file containing read counts and elapsed wall time at each step (optional). Filtering steps performed on each read:; - If the user sets the --isHostAligned, the read will first be filtered if it is aligned sufficiently well ; - Alignment info is stripped; - A series of quality filters (same as in the previous version of this tool); - Kmerized and filtered out if at least a threshold number of kmers are in the host set (default 1); - Aligned to the host reference and filtered if it maps sufficiently well; - Sequence duplicates are removed. Other:; -Fixed bugginess in very large LongBloomFilters by changing a size variable from int to long. ; - Also realized we can't get away with using just 1 hash function in the Bloom filter. Before, I was using a single 64-bit hash and splitting it into 2 32-bit hashes, then using the hash1 + i*hash2 trick to generate each hash value. I don't think we can do this now because we allow for tables of size >2 billion bits in a single filter, so we need 2 64-bit hashes to use the trick.; -A couple of utility functions have been moved around",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3115:2256,hash,hash,2256,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3115,5,['hash'],"['hash', 'hashes']"
Security,"e deleted, and its use `support = range(lo, hi)` should become `support = new IndexRange(lo, hi)`. Then `IntStream.of(support).mapToDouble(___).toArray()` becomes `range.mapToDouble(___)` and `apply(promote(support), ___)` becomes `support.mapToDouble(___)`. * `final double relErr = 1 + pow(10, -7)` should become a `static` constant. * The steps; ```java; final double maxD1 = arrayMax(d1);; final double[] d2 = apply(apply(d1, d -> d - maxD1), d -> exp(d));; final double sumD2 = sum(d2);; return apply(d2, d -> d/sumD2);; ```; inside `dnHyper` are just a home-brewed way to normalize the log-space array `d1`. Let's go throught the steps: 1) find the max. 2) subtract the max -- subtracting a constant in log-space is equivalent to dividing by a constant in real space, and since we're normalizing in the end this constant is arbitrary. It's done for numerical stability. 3) exponentiate to get an unnormalized real-space array. 4) find the sum. 5) divide by the sum to get the normalized result. The log-10 version of this is `MathUtils::normalizeFromLog10ToLinearSpace(d1)`. You could either calculate `d1` in log-10 space or convert it, replacing the above line with `return MathUtils.normalizeFromLog10ToLinearSpace(MathUtils.applyToArrayInPlace(d1, MathUtils::logToLog10))`. The latter option is simpler. * Import static should be avoided except to escape horrible clutter, which is not the case here. * The second argument of `Utils.validateArg(condition, calculated string expression)` should become `Utils.validateArg(condition, () -> calculated string expression)`. In the first version, the expression is calculated *even if* the condition is satisfied, whereas in the second it is only calculated as needed. It's not critical here but it's a good habit to get into. PS I am a zealot of the Boy Scout Rule (always leave the camp site cleaner than you found it). It is a great way to get familiar with a large code base and a great way to make the code more readable for the next person.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266263155:2063,validat,validateArg,2063,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266263155,4,['validat'],['validateArg']
Security,"e for info-field counts to enum and to; > switch statement; > - Grab info headers from input VCF with something like; > GATKVCFUtils.getVCFHeadersFromRods(getToolkit(),; > variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; > - In the map() function, for each info header line, call on each; > VCFInfoHeaderLine getCount(vc) to get the expected number of info; > annotation entries; > - Compare the expected number with a count based on; > vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some; > additional parsing because it returns an Object; > - (Bonus points if you use the isFixedCount() and getCount() functions; > on the VCF info header line to simplify annotations that aren't according; > to the number of alt alleles); > ; > Test data; > ; > /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > Should fail AC/AF validation at; > 1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120; > See results using:; > ; > use VCFtools; > vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > ; > which outputs:; > INFO field at 1:768589 .. INFO tag [AC=1] expected different number of; > values (expected 2, found 1),INFO tag [AF=0.00047] expected different; > number of values (expected 2, found 1); > Notes; > ; > Currently, all the validation modes call out to HTSJDK. Do we want to put; > the new functionality there as well?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1053. ---. @ldgauthier commented on [Fri Jul 17 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122308040). Today I learned that the way we currently build GATK, you can't point to a local htsjdk jar anymore, so this task will be two-fold:; 1) Make a PR to htsjdk with a new function in the VariantContext class for validateInfoFieldCounts(VCFInfoHeaderLine headerLine) or similar; add a test to VariantContextUnitTest.java; 2) After chang",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:3494,validat,validator,3494,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validator']
Security,"e running on Google Compute Engine.; 19:53:34.606 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.606 INFO ValidateVariants - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN ValidateVariants - Other possible validations will still be perfor",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:2048,Validat,ValidateVariants,2048,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"e running on Google Compute Engine.; [Sun Jul 26 10:20:35 EDT 2020] Executing as farrell@scc-hadoop.bu.edu on Linux 3.10.0-1062.12.1.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_121-b13; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.7.0; INFO 2020-07-26 10:20:35 LiftoverVcf Loading up the target reference genome.; INFO 2020-07-26 10:20:56 LiftoverVcf Lifting variants over and sorting (not yet writing the output file.); [Sun Jul 26 10:20:56 EDT 2020] picard.vcf.LiftoverVcf done. Elapsed time: 0.36 minutes.; Runtime.totalMemory()=5861015552; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; htsjdk.tribble.TribbleException: Badly formed variant context at location chr1:596697; getEnd() was 596797 but this VariantContext contains an END key with value 532177; at htsjdk.variant.variantcontext.VariantContext.validateStop(VariantContext.java:1401); at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1383); at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); at picard.util.LiftoverUtils.liftVariant(LiftoverUtils.java:92); at picard.vcf.LiftoverVcf.doWork(LiftoverVcf.java:426); at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:25); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292). ```. #### Steps to reproduce. Download vcf from here:. ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio/analysis/NIST_SVs_Integration_v0.6/HG002_SVs_Tier1_v0.6.vcf.gz",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6725:3148,validat,validate,3148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6725,1,['validat'],['validate']
Security,"e.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:173); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1085); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); Using GATK jar /root/gatk.jar defined in environment variable GATK_LOCAL_JAR; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx3000m -jar /root/gatk.jar Mutect2 -R gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta -I gs://cclebams/hg38_wes/CDS-ce3y1s.hg38.bam -tumor HAP1_1 --germline-resource gs://gatk-best-practices/somatic-hg38/af-only-gnomad.hg38.vcf.gz -pon gs://gatk-best-practices/somatic-hg38/1000g_pon.hg38.vcf.gz -L gs://fc-secure-76d1542e-1c49-4411-8268-e41e92f9f311/729d209c-0ef4-409f-b3af-2e84ff45ee36/omics_mutect2/16911ef5-efb2-4e12-86f2-f3d5a54b28c0/call-mutect2/Mutect2/4e4a27e2-6c57-40e9-8ddc-1024bdcc50c1/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list -O output.vcf.gz --f1r2-tar-gz f1r2.tar.gz --genotype-germline-sites true --genotype-pon-sites true --emit-ref-confidence GVCF --gcs-project-for-requester-pays broad-firecloud-ccle; ```. #### Steps to reproduce. running the same pipeline as described in previous issues: #7492. But I have added ""--genotype-germline-sites true --genotype-pon-sites true --emit-ref-confidence GVCF"" as additional args. the rest of the arguments are defaults/basic from the mutect2.wdl pipeline.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7849:7714,secur,secure-,7714,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7849,1,['secur'],['secure-']
Security,e.cloud.storage.contrib.nio.CloudStorageReadChannel.<init>(CloudStorageReadChannel.java:72); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:62); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:268); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:229); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newInputStream(CloudStorageFileSystemProvider.java:348); at java.nio.file.Files.newInputStream(Files.java:152); at org.broadinstitute.hellbender.utils.nio.GcsNioIntegrationTest.openPublicFile(GcsNioIntegrationTest.java:33); Caused by:; java.io.IOException: Error getting access token for service account: ; at shaded.cloud-nio.com.google.auth.oauth2.ServiceAccountCredentials.refreshAccessToken(ServiceAccountCredentials.java:319); at shaded.cloud-nio.com.google.auth.oauth2.OAuth2Credentials.refresh(OAuth2Credentials.java:149); at shaded.cloud-nio.com.google.auth.oauth2.OAuth2Credentials.getRequestMetadata(OAuth2Credentials.java:135); at shaded.cloud-nio.com.google.auth.http.HttpCredentialsAdapter.initialize(HttpCredentialsAdapter.java:96); at com.google.cloud.HttpTransportOptions$1.initialize(HttpTransportOptions.java:149); at shaded.cloud-nio.com.google.api.client.http.HttpRequestFactory.buildRequest(HttpRequestFactory.java:93); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud-nio.com.google.api.client.googlea,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2514:2067,access,access,2067,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2514,1,['access'],['access']
Security,"e.com/apt cloud-sdk-bionic InRelease [6786 B] ; Get:6 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1426 kB] ; Err:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease ; The following signatures couldn't be verified because the public key is not available: NO_PUBKEY FEEA9169307EA071 NO_PUBKEY 8B57C5C2836F4BEB; Get:7 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2295 kB] ; Get:8 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] ; Get:9 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] ; Get:10 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB] ; Get:11 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]; Get:12 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB] ; Get:13 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB] ; Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2200 kB]; Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]; Get:16 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [575 kB]; Get:17 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2731 kB]; Get:18 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]; Get:19 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]; Reading package lists... Done ; W: GPG error: http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY FEEA9169307EA071 NO_PUBKEY 8B57C5C2836F4BEB; E: The repository 'http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease' is not signed.; N: Updating from such a repository can't be done securely, and is therefore disabled by default.; N: See apt-secure(8) manpage for repository creation and user configuration details.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7447:2954,secur,securely,2954,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7447,2,['secur'],"['secure', 'securely']"
Security,e/CpxVariantCanonicalRepresentation.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRDYW5vbmljYWxSZXByZXNlbnRhdGlvbi5qYXZh) | `78.992% <71.429%> (+0.022%)` | `52 <0> (+2)` | :arrow_up: |; | [...transforms/markduplicates/MarkDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `90.909% <0%> (-4.213%)` | `9% <0%> (-6%)` | |; | [...hellbender/tools/walkers/mutect/Mutect2Engine.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyRW5naW5lLmphdmE=) | `87.654% <0%> (-3.39%)` | `50% <0%> (+1%)` | |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `82.927% <0%> (-1.518%)` | `24% <0%> (ø)` | |; | [...forms/markduplicates/MarkDuplicatesSparkUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmtVdGlscy5qYXZh) | `89.5% <0%> (-1.083%)` | `58% <0%> (-9%)` | |; | [...ellbender/tools/walkers/vqsr/CNNScoreVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4677/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50cy5qYXZh) | `74.057% <0%> (-0.829%)` | `40% <0%> (-1%)` | |; | [...r/engine/filters/ReadGroupBlackListReadFilter.java](https://codecov.io/gh/b,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4677#issuecomment-383092400:2277,validat,validation,2277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4677#issuecomment-383092400,1,['validat'],['validation']
Security,"e82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/script. # get the return code (working even if the container was detached); rc=$(docker wait cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid). # remove the container after waiting; docker rm cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid. # return exit code; exit $rc; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: job id: 243; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Status change from - to Done; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor Workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 failed (during ExecutingWorkflowState): Job ValidateBamsWf.ValidateBAM:0:1 exited with return code -1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr.; Could not retrieve content: Could not read from /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 is in a terminal state: WorkflowFailedState; [2020-07-14 05:09:51,97] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2020-07-14 05:09:55,28] [info] Workflow polling stopped; [2020-07-14 05:09:55,30] [info] 0 workflows released by cromid",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:6916,Validat,ValidateBAM,6916,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['Validat'],['ValidateBAM']
Security,"e; [January 12, 2021 at 3:50:33 PM EST] org.broadinstitute.hellbender.tools.spark.transforms.markduplicates.MarkDuplicatesSpark done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=1065353216; java.lang.IllegalArgumentException: Unsupported class file major version 55; 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:166); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:148); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:136); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:237); 	at org.apache.spark.util.ClosureCleaner$.getClassReader(ClosureCleaner.scala:49); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:517); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:500); 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236); 	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40); 	at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:134); 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732); 	at org.apache.spark.util.FieldAccessFinder$$anon$3.visitMethodInsn(ClosureCleaner.scala:500); 	at org.apache.xbean.asm6.ClassReader.readCode(ClassReader.java:2175); 	at org.apache.xbean.asm6.ClassReader.readMethod(ClassReader.java:1238); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:631); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:355); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:307); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$ap",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:6749,Hash,HashMap,6749,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,1,['Hash'],['HashMap']
Security,"eManagers; 18/01/09 18:30:58 INFO yarn.Client: Verifying our application has not requested more than the maximum memory capability of the cluster (18432 MB per container); 18/01/09 18:30:58 INFO yarn.Client: Will allocate AM container, with 896 MB memory including 384 MB overhead; 18/01/09 18:30:58 INFO yarn.Client: Setting up container launch context for our AM; 18/01/09 18:30:58 INFO yarn.Client: Setting up the launch environment for our AM container; 18/01/09 18:30:58 INFO yarn.Client: Preparing resources for our AM container; 18/01/09 18:30:59 INFO yarn.Client: Uploading resource file:/tmp/sun/spark-5a3e539e-2e2b-4da2-b218-2bda166bd4c0/__spark_conf__7100950787185363106.zip -> hdfs://tele-1:8020/user/sun/.sparkStaging/application_1515493209401_0001/__spark_conf__.zip; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(sun); groups with view permissions: Set(); users with modify permissions: Set(sun); groups with modify permissions: Set(); 18/01/09 18:31:00 INFO yarn.Client: Submitting application application_1515493209401_0001 to ResourceManager; 18/01/09 18:31:00 INFO impl.YarnClientImpl: Submitted application application_1515493209401_0001; 18/01/09 18:31:00 INFO cluster.SchedulerExtensionServices: Starting Yarn extension services with app application_1515493209401_0001 and attemptId None; 18/01/09 18:31:01 INFO yarn.Client: Application report for application_1515493209401_0001 (state: ACCEPTED); 18/01/09 18:31:01 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: root.users.sun; 	 start ti",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:11947,Secur,SecurityManager,11947,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,1,['Secur'],['SecurityManager']
Security,"eReadCounts - Deflater: IntelDeflater; 20:08:45.223 INFO DenoiseReadCounts - Inflater: IntelInflater; 20:08:45.223 INFO DenoiseReadCounts - GCS max retries/reopens: 20; 20:08:45.223 INFO DenoiseReadCounts - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 20:08:45.223 INFO DenoiseReadCounts - Initializing engine; 20:08:45.223 INFO DenoiseReadCounts - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 20:08:45.300 INFO DenoiseReadCounts - Reading read-counts file (BT1813.counts.hdf5)...; HDF5-DIAG: Error detected in HDF5 (1.8.14) thread 0:; #000: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5F.c line 604 in H5Fopen(): unable to open file; major: File accessibilty; minor: Unable to open file; #001: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Fint.c line 1085 in H5F_open(): unable to read superblock; major: File accessibilty; minor: Read failed; #002: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Fsuper.c line 277 in H5F_super_read(): file signature not found; major: File accessibilty; minor: Not an HDF5 file; 20:08:49.800 INFO DenoiseReadCounts - Shutting down engine; [May 18, 2021 8:08:49 PM EDT] org.broadinstitute.hellbender.tools.copynumber.DenoiseReadCounts done. Elapsed time: 0.08 minutes.; Runtime.totalMemory()=1789919232; org.broadinstitute.hdf5.HDF5LibException: exception when opening '/hpf/largeprojects/tabori/projects/bmmrd/CNA_project/gatk_cna/gatk/analysis/lgg/cnvponC2.pon.hdf5' with READ_ONLY mode: Not an HDF5 file; at org.broadinstitute.hdf5.HDF5File.open(HDF5File.java:490); at org.broadinstitute.hdf5.HDF5File.<init>(HDF5File.java:82); at org.broadinstitute.hdf5.HDF5File.<init",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7258:4104,access,accessibilty,4104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7258,1,['access'],['accessibilty']
Security,eTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:233); at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:215); at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:74); at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:55); at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:32); at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:113); at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37); at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37); at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23); at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43); at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32); at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37); at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30); at org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:186); at org.gradle.internal.Factories$1.create(Factories.java:22); at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91); at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:53); at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:183); at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:33); at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultG,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4155:2967,access,access,2967,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4155,2,['access'],['access']
Security,"e_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx30g -jar /gpfs/data/lab/bin/gatk/gatk-package-4.4.0.0-local.jar FilterAlignmentArtifacts -R /gpfs/data/lab/reference-files/hg38-gatk/Homo_sapiens_assembly38.fasta -V 60603-bulk.filtered.vcf.gz -I /gpfs/data/lab/projects/Mini/analysis/STR/60603-bulk_results/60603-bulk.cram --bwa-mem-index-image /gpfs/data/lab/reference-files/hg38-gatk/Homo_sapiens_assembly38.fasta.img -O 60603-bulk.filtered.FAA.vcf.gz; ```. Error:; ```; 11:02:16.087 INFO ProgressMeter - chrX:144247387 619.0 145000 234.3; 11:05:08.297 WARN IntelInflater - Zero Bytes Written : 0; 12:29:39.297 INFO FilterAlignmentArtifacts - Shutting down engine; [August 15, 2023 at 12:29:39 PM EDT] org.broadinstitute.hellbender.tools.walkers.realignmentfilter.FilterAlignmentArtifacts done. Elapsed time: 710.24 minutes.; Runtime.totalMemory()=4345298944; java.lang.IllegalStateException: Padded span must contain active span.; at org.broadinstitute.hellbender.utils.Utils.validate(Utils.java:814); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:109); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:85); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:120); at org.broadinstitute.hellbender.tools.walkers.realignmentfilter.FilterAlignmentArtifacts.makeAssemblyRegionFromVariantReads(FilterAlignmentArtifacts.java:280); at org.broadinstitute.hellbender.tools.walkers.realignmentfilter.FilterAlignmentArtifacts.apply(FilterAlignmentArtifacts.java:212); at org.broadinstitute.hellbender.engine.MultiVariantWalkerGroupedOnStart.apply(MultiVariantWalkerGroupedOnStart.java:133); at org.broadinstitute.hellbender.engine.MultiVariantWalkerGroupedOnStart.afterTraverse(MultiVariantWalkerGroupedOnStart.java:193); at org.broadinstitute.hellbender.engine.MultiVariantWalkerGroupedOnStart.traverse(MultiVariantWalkerGroupedOnStart.java:166); at org.broadinstitute.hellbender.engine.GATKTo",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8476:1183,validat,validate,1183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8476,1,['validat'],['validate']
Security,e_tribble=false -Dsamjdk.compression_level=2 --conf spark.kryoserializer.buffer.max=512m --conf spark.yarn.executor.memoryOverhead=600 /root/gatk-4.0.7.0/gatk-package-4.0.7.0-spark.jar PrintReadsSpark -I ../6484_snippet.bam -O ../output.bam --spark-master spark://10.0.0.21:7077; SLF4J: Class path contains multiple SLF4J bindings.; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark2/jars/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark_llap/spark-llap-assembly-1.0.0.2.6.3.40-13.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]; java.lang.NoClassDefFoundError: org/apache/logging/log4j/core/appender/AbstractAppender; at java.lang.ClassLoader.defineClass1(Native Method); at java.lang.ClassLoader.defineClass(ClassLoader.java:763); at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); at java.net.URLClassLoader.defineClass(URLClassLoader.java:467); at java.net.URLClassLoader.access$100(URLClassLoader.java:73); at java.net.URLClassLoader$1.run(URLClassLoader.java:368); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349); at java.lang.ClassLoader.loadClass(ClassLoader.java:411); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.decodeCacheFiles(PluginRegistry.java:181); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.loadFromMainClassLoader(PluginRegistry.java:119); at org.apache.logging.log4j.core.config.plugins.util.PluginManager.collectPlugins(PluginManager.java:132); at,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5126:2590,Secur,SecureClassLoader,2590,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126,1,['Secur'],['SecureClassLoader']
Security,eadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:992); 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(AbstractGoogleClientRequest.java:380); 	at shaded.c,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685:6542,secur,security,6542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685,1,['secur'],['security']
Security,"ed by groupReadPairs is very expensive both in time and in memory. It's a full hash shuffle of GATKReads (time expensive), that results in a gazillion 1- and 2-element Lists (memory expensive). So you certainly don't want to do it twice. But the way pairedReads and unpairedReads is set up, you *will* do it twice if you want to process both paired and unpaired reads. (And even if you aren't, someone else might try to use this code to do so.). So my first suggestion is that you remove the call to groupReadPairs from pairedReads and unpairedReads, and let a user groupReadPairs once, and reuse the resulting JavaPairRDD to process paired and unpaired reads. My second suggestion is quite a bit more complicated, but I think it would result in far better performance. I'll sketch it out here, and then I can explain it further in person, if it's a direction you'd like to pursue. The first step is to create a JavaRDD<GATKRead> in which all pairs sharing a template name are in the same partition (but without grouping them). To do that, you temporarily boost the input JavaRDD into a JavaPairRDD<String,GATKRead> by extracting the read name as a key. Then you repartition (to do the shuffle). Then you map back to an ordinary JavaRDD<GATKRead> by keeping just the value. (Note: if the BAM has queryname sort order, you can just skip this step entirely.); Now you can do a mapPartition operation to filter for paired or unpaired reads: Iterate over the reads in the partition, and keep a hash map of [name -> read] of reads that have not yet found mates. To filter for paired reads, whenever you find the name of the current read already in the table, just emit the current read and the read in the map as a pair, and delete the read from the map (you're done with that name -- this keeps the table smaller). To filter for unpaired reads, just delete any map entry that you successfully look up, and insert any name that you don't. What's left at the end of this process are all the unpaired reads.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2664#issuecomment-299955039:1578,hash,hash,1578,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2664#issuecomment-299955039,1,['hash'],['hash']
Security,"ed.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 19:53:34.606 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.606 INFO ValidateVariants - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:1926,Validat,ValidateVariants,1926,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,ee http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 21:06:12.479 INFO FeatureManager - Using codec IntervalListCodec to read file file:///paedyl01/disk1/louisshe/work/NGS/wdl/test_workflow_cnv/germline/cromwell-executions/CNVGuts/-947966988/Homo_sapiens_assembly38.bed.preprocessed.filtered.scattered.0154.interval_list; 21:06:12.640 DEBUG FeatureDataSource - Cache statistics for FeatureInput /paedyl01/disk1/louisshe/work/NGS/wdl/test_workflow_cnv/germline/cromwell-executions/CNVGermlineCohort8/Homo_sapiens_assembly38.bed.preprocessed.filtered.scattered.0154.interval_list:/paedyl01/disk1/louisshe/work/NGS/wdl/test_workflow_cnv/germline/cromwell-executions/CNVGermli947966988/Homo_sapiens_assembly38.bed.preprocessed.filtered.scattered.0154.interval_list:; 21:06:12.640 DEBUG FeatureCache - Cache hit rate was 0.00% (0 out of 0 total queries); 21:06:12.645 INFO IntervalArgumentCollection - Processing 4999155 bp from intervals; 21:06:12.656 INFO GermlineCNVCaller - Reading and validating annotated intervals...; 21:06:18.914 WARN GermlineCNVCaller - Sequence dictionary in annotated-intervals file does not match the master sequence dictionary.; 21:06:19.130 INFO GermlineCNVCaller - GC-content annotations for intervals found; explicit GC-bias correction will be performed...; 21:06:19.200 INFO GermlineCNVCaller - Running the tool in COHORT mode...; 21:06:19.200 INFO GermlineCNVCaller - Validating and aggregating data from input read-count files...; 21:07:11.897 DEBUG ScriptExecutor - Executing:; 21:07:11.897 DEBUG ScriptExecutor - python; 21:07:11.897 DEBUG ScriptExecutor - /paedyl01/disk1/louisshe/tmp/gatk/cohort_denoising_calling.418897092082188314.py; 21:07:11.897 DEBUG ScriptExecutor - --ploidy_calls_path=/paedyl01/disk1/louisshe/work/NGS/wdl/test_workflow_cnv/germline/cromwell-executions/CNVGermlineCohortWorkflow/d53c0a; 21:07:11.897 DEBUG ScriptExecutor - --output_calls_path=/paedyl01/disk1/louisshe/out/NMD/batch1_2023/batch1_all/cnv/cohort_calls/batc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8952:6615,validat,validating,6615,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8952,1,['validat'],['validating']
Security,eekableByteChannelPrefetcher.java:136); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.fetch(SeekableByteChannelPrefetcher.java:255); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.read(SeekableByteChannelPrefetcher.java:300); 	... 28 more; Caused by: com.google.cloud.storage.StorageException: Read timed out; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:186); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:512); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:128); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:125); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:92); 	at shaded.cloud_nio.com.google.api.gax.retrying.RetryingFutureImpl.executeAttempt(RetryingFutureImpl.java:141); 	at shaded.cloud_nio.com.google.api.gax.retrying.RetryingFutureImpl.access$500(RetryingFutureImpl.java:59); 	at shaded.cloud_nio.com.google.api.gax.retrying.RetryingFutureImpl$AttemptFutureCallback.onFailure(RetryingFutureImpl.java:177); 	at shaded.cloud_nio.com.google.api.gax.core.ApiFutures$1.onFailure(ApiFutures.java:52); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures$6.run(Futures.java:1764); 	at shaded.cloud_nio.com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:456); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures$ImmediateFuture.addListener(Futures.java:153); 	at shaded.cloud_nio.com.google.common.util.concurrent.ForwardingListenableFuture.addListener(ForwardingListenableFuture.java:47); 	at shaded.cloud_nio.com.google.api.gax.core.internal.ApiFutureToListenableFuture.addListener(ApiFutureToListenableFuture.java:53); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures.addCallback(Futures.java:1776); 	at shaded.cloud_nio.com.google.common.util.concurrent.Futures.addCallback(Futures,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:4061,access,access,4061,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['access'],['access']
Security,"efaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 24466, Read name 20FUKAAXX100202:7:46:13035:77621, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97940, Read name 20FUKAAXX100202:5:7:21464:86224, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1950,Validat,ValidateSamFile,1950,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"egions within the reference,; > and therefore will have fine mapping quality even though they are artifacts.; >; > There are published ""decoy genomes"" -- essentially pseudo-contigs of; > regions missing from the reference, and mapping with BWA in memory to; > *those* might be very helpful.; >; > So, we need to: 1) get our hands on a decoy genome that will play nicely; > with BWA, and 2) talk to the SV team.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk-protected/issues/844#issuecomment-296515266>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdCJQob4WqdwDN0R8jvbNGT1l0vSCks5rzBOmgaJpZM4Lb8pz>; > .; >. ---. @davidbenjamin commented on [Wed May 03 2017](https://github.com/broadinstitute/gatk-protected/issues/844#issuecomment-298946022). Copying comments from closed issue #993. Instead of running an aligner in memory, let's first try preprocessing an alignability (to the ref + decoy) resource file. Then we can simply query this file at each called variant. > ENCODE used a kmer size of 36 bp, which is seriously obsolete and will tend to underestimate alignability. However, the GEM program (paper here: http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0030377 and binary here: http://algorithms.cnag.cat/wiki/The_GEM_library#Documentation and blog post on how to run it here: http://blog.kokocinski.net/index.php/sequence-mappability-alignability?blog=2) was used by ENCODE to produce this track and we can easily produce it ourselves with any kmer size and any mismatch threshold. > Furthermore, once we make this track we can store this track in memory eg as a `HashedListTargetCollection` and therefore we can query it for every read to get an annotation for the number of uniquely mappable reads (up to some error tolerance). > One more thing: we can also query based on the start position of each read's mate.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2930:5486,Hash,HashedListTargetCollection,5486,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2930,1,['Hash'],['HashedListTargetCollection']
Security,el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | |; | [...utils/variant/GATKVariantContextUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzVW5pdFRlc3QuamF2YQ==) | `87.194% <0%> (-0.088%)` | `316% <0%> (+156%)` | |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `10% <0%> (+4%)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `12% <0%> (+5%)` | :arrow_up: |; | ... and [10 more](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:3578,validat,validation,3578,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931,1,['validat'],['validation']
Security,eline_app/Apps/GATK/gatk-4.1.9.0/gatk-package-4.1.9.0-local.jar) to method java.nio.Bits.unaligned(); WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 21/01/12 15:50:31 INFO SparkContext: Running Spark version 2.4.5; 21/01/12 15:50:31 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 21/01/12 15:50:31 INFO SparkContext: Submitted application: MarkDuplicatesSpark; 21/01/12 15:50:31 INFO SecurityManager: Changing view acls to: root; 21/01/12 15:50:31 INFO SecurityManager: Changing modify acls to: root; 21/01/12 15:50:31 INFO SecurityManager: Changing view acls groups to: ; 21/01/12 15:50:31 INFO SecurityManager: Changing modify acls groups to: ; 21/01/12 15:50:31 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set(); 21/01/12 15:50:31 INFO Utils: Successfully started service 'sparkDriver' on port 36657.; 21/01/12 15:50:31 INFO SparkEnv: Registering MapOutputTracker; 21/01/12 15:50:31 INFO SparkEnv: Registering BlockManagerMaster; 21/01/12 15:50:31 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 21/01/12 15:50:31 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 21/01/12 15:50:31 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-273b4c87-579e-4d57-81de-aa47a79634bb; 21/01/12 15:50:31 INFO MemoryStore: MemoryStore started with capacity 9.2 GB; 21/01/12 15:50:31 INFO SparkEnv: Registering OutputCommitCoordinator; 21/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:1101,Secur,SecurityManager,1101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"ellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. The user mentioned that this didn't happen on GATK 4.1, so I've been comparing both versions of the code. It turns out that the implementation of ""GenotypingEngine.java"" has changed since then, and after some digging, I noticed that the issue is that the newer versions have uninitialized instances of the class ""OneShotLogger"". The fix is simple, I've added the change myself and built GATK again. The user reports that the issue is gone. Just add the following code inside the constructor method:. ``` ; protected GenotypingEngine(final Config configuration,; final SampleList samples,; final boolean doAlleleSpecificCalcs) {; this.configuration = Utils.nonNull(configuration, ""the configuration cannot be null"");; Utils.validate(!samples.asListOfSamples().isEmpty(), ""the sample list cannot be null or empty"");; this.samples = samples;; this.doAlleleSpecificCalcs = doAlleleSpecificCalcs;; logger = LogManager.getLogger(getClass());; this.oneShotLogger = new OneShotLogger(logger); // <------ ADD THIS LINE; numberOfGenomes = this.samples.numberOfSamples() * configuration.genotypeArgs.samplePloidy;; alleleFrequencyCalculator = AlleleFrequencyCalculator.makeCalculator(configuration.genotypeArgs);; }; ```. #### Steps to reproduce; See description, but I can't provide the exact inputs used for it. #### Expected behavior; The null pointer exception shouldn't occur, there should be a warning only. #### Actual behavior; Program crashes with null pointer exception for high enough values of ploidy.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8158:3863,validat,validate,3863,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8158,1,['validat'],['validate']
Security,ellbender/tools/splitNCigarReadsSnippet.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.sam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.sam; src/test/resources/org/broadinstitute/hellbender/tools/validation/marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/picard.marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/single.read.bai; src/test/resources/org/broadinstitute/hellbender/tools/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/valid.dict; src/test/resources/org/broadinstitute/hellbender/tools/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.indels.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.HACKEDhg38header.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.snps.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.input.vcf.idx; src/test/resources/org/broadinstitute/hel,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:45664,validat,validation,45664,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['validat'],['validation']
Security,emBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2812); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:100); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2849); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2831); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:389); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:171); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:168); 	at java.base/java.security.AccessController.doPrivileged(Native Method); 	at java.base/javax.security.auth.Subject.doAs(Subject.java:423); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1836); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:168); 	at org.genomicsdb.reader.GenomicsDBQueryStream.jniGenomicsDBInit(Native Method); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:209); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:182); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:91); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.generateHeadersForQuery(GenomicsDBFeatureReader.java:176); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.<init>(GenomicsDBFeatureReader.java:80); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.getGenomicsDBFeatureReader(GenomicsDBImportIntegrationTest.java:926); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.checkGenomicsDBAgainstExpected(GenomicsDBImportIntegrationTest.java:550); 	at org.broadinstitu,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6522:1696,secur,security,1696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6522,1,['secur'],['security']
Security,emory including 384 MB overhead; 18/01/09 18:30:58 INFO yarn.Client: Setting up container launch context for our AM; 18/01/09 18:30:58 INFO yarn.Client: Setting up the launch environment for our AM container; 18/01/09 18:30:58 INFO yarn.Client: Preparing resources for our AM container; 18/01/09 18:30:59 INFO yarn.Client: Uploading resource file:/tmp/sun/spark-5a3e539e-2e2b-4da2-b218-2bda166bd4c0/__spark_conf__7100950787185363106.zip -> hdfs://tele-1:8020/user/sun/.sparkStaging/application_1515493209401_0001/__spark_conf__.zip; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(sun); groups with view permissions: Set(); users with modify permissions: Set(sun); groups with modify permissions: Set(); 18/01/09 18:31:00 INFO yarn.Client: Submitting application application_1515493209401_0001 to ResourceManager; 18/01/09 18:31:00 INFO impl.YarnClientImpl: Submitted application application_1515493209401_0001; 18/01/09 18:31:00 INFO cluster.SchedulerExtensionServices: Starting Yarn extension services with app application_1515493209401_0001 and attemptId None; 18/01/09 18:31:01 INFO yarn.Client: Application report for application_1515493209401_0001 (state: ACCEPTED); 18/01/09 18:31:01 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: root.users.sun; 	 start time: 1515493860237; 	 final status: UNDEFINED; 	 tracking URL: http://tele-1:8088/proxy/application_1515493209401_0001/; 	 user: sun; 18/01/09 18:31:02 INFO yarn.Client: Application report for application_1515493209401_0001 (state: ACCEPTED); 18/01/09,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:12105,Secur,SecurityManager,12105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,3,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"en't according to the number of alt alleles); ### Test data. /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; Should fail AC/AF validation at ; `1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120`; See results using:. ```; use VCFtools; vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; ```. which outputs:; `INFO field at 1:768589 .. INFO tag [AC=1] expected different number of values (expected 2, found 1),INFO tag [AF=0.00047] expected different number of values (expected 2, found 1)`; ### Notes. Currently, all the validation modes call out to HTSJDK. Do we want to put the new functionality there as well?. ---. @yfarjoun commented on [Thu Jul 16 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122130280). I think that it is very appropriate to validate in htsjdk. On Thu, Jul 16, 2015 at 4:05 PM, ldgauthier notifications@github.com; wrote:. > Currently ValidateVariants relies on genotypes to transitively check that; > each alt allele occurs in at least one sample and that the AC adds up.; > However, this can fail on sites-only files because there are no genotypes.; > We should use the definition of the info annotations in the header to check; > how many entries each should have.; > Outline; > - Add a new validation type for info-field counts to enum and to; > switch statement; > - Grab info headers from input VCF with something like; > GATKVCFUtils.getVCFHeadersFromRods(getToolkit(),; > variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; > - In the map() function, for each info header line, call on each; > VCFInfoHeaderLine getCount(vc) to get the expected number of info; > annotation entries; > - Compare the expected number with a count based on; > vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some; > additional parsing because it returns an Object; > - (Bonus points if you use the isFixedCount() and getCount() functions; > on the VCF info header li",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:2125,Validat,ValidateVariants,2125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['Validat'],['ValidateVariants']
Security,"en't seen discussed in these threads.; Perhaps it's impractical, but I'll mention it anyway. It seems like ; another approach would be to create (internal to the implementation) a ; ""header tag"" that could be efficiently serialized; and passed as part of the SAMRecord when you need to distribute it. The ; header tag could be used by the receiver to reattach the SAMRecord to ; its header (either proactively or on demand), but transparently to ; application code that is running against the SAMRecord API.; This would allow SAM headers to be transmitted out-of-band in a way that ; depends on the execution environment. Depending on the environment, ; this might be done by proactive broadcast, or you could think of the ; header tag as a promise to retrieve the header if/when it is needed. ; The size and complexity of the header tag might also depend on the ; execution environment. If the execution environment only supports a ; small finite number of headers, the header tag could be a small integer, ; or in a different execution environment it could be; a unique hash of the header or something like that. Memory footprint in ; the receiver is minimized because many SAMRecords can all share the same ; header object.; This requires more work to support in each execution environment, but it ; seems like it could be efficient and allows application code written to ; operate on SAMRecords to be portable; across different execution environments without having to contend with ; the possible presence of headerless SAMRecords. -Bob. On 9/17/15 4:28 PM, droazen wrote:. > @davidadamsphd https://github.com/davidadamsphd, @lbergelson ; > https://github.com/lbergelson, and myself met for an hour or two ; > just now to discuss this issue, and after reviewing all the options I ; > think we were convinced by the following argument:; > ; > The |SAMRecord| class currently allows its header to be set to null, ; > so if there are cases where the class won't function properly or can ; > enter int",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141451518:2261,hash,hash,2261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141451518,1,['hash'],['hash']
Security,en; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-jg-dev-11k-call-set/JointGenotyping/0cb36821-b8bf-4e6d-a352-07b101f6b7d1/call-ApplyRecalibration/shard-1734/GMKF_Seidman_CHD_WGS_904.filtered.1734.vcf.gz.; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.getBuf(SeekableByteChannelPrefetcher.java:136); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.fetch(SeekableByteChannelPrefetcher.java:255); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.read(SeekableByteChannelPrefetcher.java:300); 	... 10 more; Caused by: com.google.cloud.storage.StorageException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-jg-dev-11k-call-set/JointGenotyping/0cb36821-b8bf-4e6d-a352-07b101f6b7d1/call-ApplyRecalibration/shard-1734/GMKF_Seidman_CHD_WGS_904.filtered.1734.vcf.gz.; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:526); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:94); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:54); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:114); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUni,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3735:3476,access,access,3476,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3735,1,['access'],['access']
Security,"engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 17:43:53.302 INFO ValidateVariants - Shutting down engine; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=194510848; java.lang.IllegalArgumentException: Illegal base [] seen in the allele; 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:231); 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:374); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants.apply(ValidateVariants.java:181); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.lambda$traverse$0(VariantWalkerBase.java:104); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184); 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.str",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:4119,Validat,ValidateVariants,4119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"enotypeGVCFs \; 	-R 128_Mmul_10.fasta \; 	--variant gendb:///home/exacloud/gscratch/prime-seq/cachedData/16b9ede7-6db8-103a-9262-f8f3fc86a851/WGS_Feb22_1852.gdb \; 	-O /home/exacloud/gscratch/prime-seq/workDir/1bb5295c-6ec5-103a-8692-f8f3fc86cd3f/Job1.work/WGS_pre-mGAPv2.3_1852.vcf.gz \; 	--annotate-with-num-discovered-alleles \; 	-stand-call-conf 30 \; 	--max-alternate-alleles 6 \; 	--force-output-intervals mmul10.WGS-WXS.whitelist.v2.3.sort.merge.bed \; 	-L 1:1-3714165 \; 	--only-output-calls-starting-in-intervals \; 	--genomicsdb-shared-posixfs-optimizations; ```. and the exception:. ```; Exception in thread ""main"" java.lang.NoClassDefFoundError: org/broadinstitute/hellbender/relocated/com/google/common/base/Function; 	at org.broadinstitute.hellbender.Main.<clinit>(Main.java:45); Caused by: java.lang.ClassNotFoundException: org.broadinstitute.hellbender.relocated.com.google.common.base.Function; 	at java.net.URLClassLoader$1.run(URLClassLoader.java:370); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:362); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:361); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357); 	... 1 more; Caused by: java.util.zip.ZipException: invalid LOC header (bad signature); 	at java.util.zip.ZipFile.read(Native Method); 	at java.util.zip.ZipFile.access$1400(ZipFile.java:60); 	at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:716); 	at java.util.zip.ZipFile$ZipFileInflaterInputStream.fill(ZipFile.java:419); 	at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158); 	at sun.misc.Resource.getBytes(Resource.java:124); 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:462); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:73); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:368). ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7675:1632,secur,security,1632,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7675,4,"['Access', 'access', 'secur']","['AccessController', 'access', 'security']"
Security,"ent with the command:; ```; conda env create -n gatk -f scripts/gatkcondaenv.yml; ```; This currently fails with the following message (at least on MacOS):; ```; Requirement 'build/gatkPythonPackageArchive.zip' looks like a filename, but the file does not exist; Processing ./build/gatkPythonPackageArchive.zip; Exception:; Traceback (most recent call last):; File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/basecommand.py"", line 215, in main; status = self.run(options, args); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/commands/install.py"", line 335, in run; wb.build(autobuilding=True); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/wheel.py"", line 749, in build; self.requirement_set.prepare_files(self.finder); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/req/req_set.py"", line 380, in prepare_files; ignore_dependencies=self.ignore_dependencies)); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/req/req_set.py"", line 620, in _prepare_file; session=self.session, hashes=hashes); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/download.py"", line 809, in unpack_url; unpack_file_url(link, location, download_dir, hashes=hashes); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/download.py"", line 715, in unpack_file_url; unpack_file(from_path, location, content_type, link); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/utils/__init__.py"", line 599, in unpack_file; flatten=not filename.endswith('.whl'); File ""/Users/markw/anaconda/envs/gatk/lib/python3.6/site-packages/pip/utils/__init__.py"", line 482, in unzip_file; zipfp = open(filename, 'rb'); FileNotFoundError: [Errno 2] No such file or directory: '/Users/markw/IdeaProjects/gatk/scripts/build/gatkPythonPackageArchive.zip'; ```; Moving gatkcondaenv.yml to the GATK root solves the issue. We can either change the yml location or modify the readme.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4741:1148,hash,hashes,1148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4741,4,['hash'],['hashes']
Security,ent.googleapis.services.AbstractGoogleClientRequest.buildHttpRequest(AbstractGoogleClientRequest.java:300); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(AbstractGoogleClientRequest.java:380); 	at shaded.cloud_nio.com.google.api.services.storage.Storage$Objects$Get.executeMedia(Storage.java:5130); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:494); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:93); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:49); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:113); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.io.EOFException: SSL peer shut down incorrectly; 	at sun.security.ssl.InputRecord.read(InputRecord.java:505); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	... 34 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156:3986,secur,security,3986,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-309120156,2,['secur'],['security']
Security,ent: Uploading resource file:/tmp/spark-28ab5ef4-82d1-425e-879f-5056e9b51e43/__spark_libs__7655440475844189559.zip -> hdfs://192.168.0.104:9000/user/jacky/.sparkStaging/application_1603353714322_0004/__spark_libs__7655440475844189559.zip; 20/10/22 12:02:31 INFO yarn.Client: Uploading resource file:/home/jacky/Exec/gatk/build/libs/gatk-spark.jar -> hdfs://192.168.0.104:9000/user/jacky/.sparkStaging/application_1603353714322_0004/gatk-spark.jar; 20/10/22 12:02:33 INFO yarn.Client: Uploading resource file:/tmp/spark-28ab5ef4-82d1-425e-879f-5056e9b51e43/__spark_conf__3248804172036151699.zip -> hdfs://192.168.0.104:9000/user/jacky/.sparkStaging/application_1603353714322_0004/__spark_conf__.zip; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing view acls to: jacky; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing modify acls to: jacky; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing view acls groups to: ; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing modify acls groups to: ; 20/10/22 12:02:33 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(jacky); groups with view permissions: Set(); users with modify permissions: Set(jacky); groups with modify permissions: Set(); 20/10/22 12:02:33 INFO yarn.Client: Submitting application application_1603353714322_0004 to ResourceManager; 20/10/22 12:02:33 INFO impl.YarnClientImpl: Submitted application application_1603353714322_0004; 20/10/22 12:02:34 INFO yarn.Client: Application report for application_1603353714322_0004 (state: ACCEPTED); 20/10/22 12:02:34 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: default; 	 start time: 1603360953394; 	 final status: UNDEFINED; 	 tracking URL: http://jacky:8088/proxy/application_1603353714322_0004/; 	 user: jacky; 20/10/22 12:02:35 INFO yarn.Client: Application report for application_1603353714322_0004 (state: AC,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6906:3481,Secur,SecurityManager,3481,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6906,1,['Secur'],['SecurityManager']
Security,"ents - Gencode 34 CANONICAL; 17:14:13.209 INFO FuncotatorEngine - VCF sequence dictionary detected as B37 in HG19 annotation mode. Performing conversion.; 17:14:13.209 WARN FuncotatorEngine - WARNING: You are using B37 as a reference. Funcotator will convert your variants to GRCh37, and this will be fine in the vast majority of cases. There MAY be some errors (e.g. in the Y chromosome, but possibly in other places as well) due to changes between the two references.; 17:14:13.411 INFO ProgressMeter - Starting traversal; 17:14:13.412 INFO ProgressMeter - Current Locus Elapsed Minutes Features Processed Features/Minute; 17:14:15.391 INFO FuncotateSegments - Shutting down engine; [September 11, 2022 5:14:15 PM GMT] org.broadinstitute.hellbender.tools.funcotator.FuncotateSegments done. Elapsed time: 0.30 minutes.; Runtime.totalMemory()=1752170496; java.lang.IllegalArgumentException: Invalid interval. Contig:chr1 start:917445 end:911649; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:804); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:35); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.findInclusiveExonIndex(SegmentExonUtils.java:95); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.determineSegmentExonPosition(SegmentExonUtils.java:63); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2939); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2914); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsOnSegment(GencodeFuncotationFactory.java:2866); at org.broadinstitu",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314:1170,validat,validateArg,1170,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-1243013314,2,['validat'],['validateArg']
Security,"epare, factored out sample name (#7288); - Remove training sites only param from ExtractFeatures broadinstitute/dsp-spec-ops#261; - add param for mem for indels (#7282); - Ah prepare localize option (#7299); - Export sites only vcf STEP 1-- 317 add AC, AN, AF to the final VCF (#7279); - AoU GVS Cohort Extract wdl (#7242); - reliability (#7310); - bump to include FT tag filtering (#7316); - First pass at a Terra QuickStart (#7267); - Ah fix timestamp query (#7319); - 313 Cleanup Extract Cohort params (#7293); - bump bq storage version. See GVS-332 (#7330); - Variant Store extraction - Add VCF size to output (#7329); - add WARP-style scattering to SNPsVariantRecalibrator in GvsCreateFilterSet (#7320); - added ref ranges support (#7337); - 318 Sites only filtered vcf then annotate wdl (#7305); - Replace service_account_json (file) with service_account_json_path (string) to allow call-caching (#7347); - Parallelize create filterset by breaking out the 3 filter set file creation/loads into separate tasks (#7342); - Create WDL to validate VAT and add first test (#7352); - Add task for VAT validation #3 (#7360); - Add task for VAT validation #4 (#7363); - Instructions on how to download BQ Metadata and visualize results (#7359); - don't mix contigs, rightsize memory (#7361); - Add custom annotations as ac an af (#7351); - Add task for VAT validation #8 & 9 (#7364); - added bcftools, upgraded gcloud version (#7369); - fix wdl (#7378); - Update .dockstore.yml; - Add VAT validation rule #5 [VS-16] (#7365); - Add VAT validation rule #7 [VS-14] and validation rule #6 [VS-15] (#7379); - Batching of samples for create import TSVs (#7382); - Add VAT validation rule #2 [VS-19] (#7374); - Create VAT scripts directory (#7386); - fixing SA change from file to string (#7371); - add extract_subpop script (#7387); - Add is_loaded column to sample_info and logic to populate after ingest [VS-158] (#7389); - Add Gnomad subpopulation info into the VAT (#7381); - implement GVS ID assignment (#",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:15969,validat,validate,15969,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,8,['validat'],"['validate', 'validation']"
Security,eq.1mb.1RG.sg4.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg5.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.dict; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/dream3-chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_4.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/na12878-chr20-consumes-zero-reference-bases.bai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/repeated_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/validation/nearby_indels.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/NA12878.rg_subset.chr1.recal_data.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/NA12878.rg_subset.chrY_Plus.recal_data.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/originalQuals.chr1.1-1K.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.chr1only.dict; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.chr1only.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.intervals; src/test/resources/org/broadinstitute/hellbender/tools/print_reads_sorted.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.sorted.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.sorted.chr1_1.bam.bai; ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:39469,validat,validation,39469,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['validat'],['validation']
Security,er #2643 +/- ##; ===============================================; + Coverage 76.126% 76.133% +0.007% ; - Complexity 11150 11160 +10 ; ===============================================; Files 769 769 ; Lines 40751 40767 +16 ; Branches 7110 7115 +5 ; ===============================================; + Hits 31022 31037 +15 ; + Misses 7062 7061 -1 ; - Partials 2667 2669 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vU2Vla2FibGVCeXRlQ2hhbm5lbFByZWZldGNoZXIuamF2YQ==) | `76.73% <71.429%> (+0.414%)` | `25 <0> (+2)` | :arrow_up: |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `81.081% <0%> (-0.737%)` | `24% <0%> (+8%)` | |; | [...ute/hellbender/utils/recalibration/RecalUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWNhbGlicmF0aW9uL1JlY2FsVXRpbHMuamF2YQ==) | `89.407% <0%> (+0.045%)` | `52% <0%> (+1%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2643?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `74.026% <0%> (+1.948%)` | `35% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-298471381:1542,Validat,ValidateVariants,1542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-298471381,1,['Validat'],['ValidateVariants']
Security,"er container); 17/10/11 14:19:12 INFO yarn.Client: Will allocate AM container, with 896 MB memory including 384 MB overhead; 17/10/11 14:19:12 INFO yarn.Client: Setting up container launch context for our AM; 17/10/11 14:19:12 INFO yarn.Client: Setting up the launch environment for our AM container; 17/10/11 14:19:12 INFO yarn.Client: Preparing resources for our AM container; 17/10/11 14:19:12 INFO gcs.GoogleHadoopFileSystemBase: GHFS version: 1.6.1-hadoop2; 17/10/11 14:19:12 INFO yarn.Client: Uploading resource file:/tmp/hdfs/spark-8c88439f-dcb0-48b2-86f3-fc82cef4c438/__spark_conf__8945422067005652415.zip -> hdfs://mg:8020/user/hdfs/.sparkStaging/application_1507683879816_0006/__spark_conf__8945422067005652415.zip; 17/10/11 14:19:13 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/11 14:19:13 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/11 14:19:13 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); users with modify permissions: Set(hdfs); 17/10/11 14:19:13 INFO yarn.Client: Submitting application 6 to ResourceManager; 17/10/11 14:19:13 INFO impl.YarnClientImpl: Submitted application application_1507683879816_0006; 17/10/11 14:19:14 INFO yarn.Client: Application report for application_1507683879816_0006 (state: ACCEPTED); 17/10/11 14:19:14 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: root.users.hdfs; 	 start time: 1507702753100; 	 final status: UNDEFINED; 	 tracking URL: http://mg:8088/proxy/application_1507683879816_0006/; 	 user: hdfs; 17/10/11 14:19:15 INFO yarn.Client: Application report for application_1507683879816_0006 (state: ACCEPTED); 17/10/11 14:19:15 INFO cluster.YarnSchedulerBackend$YarnSchedulerEndpoint: ApplicationMaster registered as NettyRpcEndpointRef(null); 17/10/11 14:19:15 INFO cluster.YarnClientSchedulerBackend: Add WebUI Filter. org.apache.hadoop",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686:6305,Secur,SecurityManager,6305,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686,3,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"er of query methods in GoogleGenomicsReadAdapter adapter; throw if the corresponding field is not present in the underlying read. For some; of these there are guard methods you can call to avoid this (see for example; the changes in ReadUtils.java), but for some of the others I'm not sure how to; usefully query the state without already knowing the answer, ie.:. -isSupplementaryAlignment; -isSecondaryAlignment,; -failsVendorQualityCheck; -isDuplicate; -mateIsReverseStrand. To have fidelity with SAMRecord.getSAMString , we need to be able to query these; (as does ReadUtils.getFlags, which has a similar problem, but I changed that to; use guard methods to prevent throwing). In a couple of cases I had to change; the Read adapter to not throw. We need to figure out if this kind; of change is ok. or what the alternative is. 2) This is incidental to this PR, but there are a few inconsistencies between how; GenomicsConverter.makeSAMRecord and ReadUtils compute derived state values, ie. flags.; I can work around these in the getSAMString tests (I'm using Read->SAMRecord; conversions to validate the tests), but the underlying format conversions; are inconsistent. Should we align them ?. For example, GenomicsConverter sets the firstInPair flag on the SAMRecord if readNumber==0,; even if numberOfReads==1, whereas the ReadUtils/GoogleReadAdapter requires readNumber==0; and numberOfReads==2. Likewise the unmapped flag is determined differently: Genomics converter: (http://google-genomics.readthedocs.org/en/latest/migrating_tips.html):; final boolean unmapped = (read.getAlignment() == null || ; read.getAlignment().getPosition() == null || ; read.getAlignment().getPosition().getPosition() == null);; ReadUtils:; private boolean positionIsUnmapped( final Position position ) {; return position == null ||; position.getReferenceName() == null || position.getReferenceName().equals(SAMRecord.NO_ALIGNMENT_REFERENCE_NAME) ||; position.getPosition() == null || position.getPosition() < 0;; }",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/871:1160,validat,validate,1160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/871,1,['validat'],['validate']
Security,"er.vcf.gz -R ../../../../index/hg19.fa.gz; 19:53:34.379 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/zepengmu/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Oct 25, 2020 7:53:34 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 19:53:34.606 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.606 INFO ValidateVariants - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - I",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:1641,Validat,ValidateVariants,1641,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,er/engine/MultiVariantWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvTXVsdGlWYXJpYW50V2Fsa2VyLmphdmE=) | `96.154% <0%> (-0.398%)` | `24% <0%> (+11%)` | |; | [...der/tools/walkers/variantutils/SelectVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50cy5qYXZh) | `79.405% <0%> (-0.181%)` | `158% <0%> (+43%)` | |; | [...nder/utils/samples/MendelianViolationUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zYW1wbGVzL01lbmRlbGlhblZpb2xhdGlvblVuaXRUZXN0LmphdmE=) | `100% <0%> (ø)` | `47% <0%> (+7%)` | :arrow_up: |; | [...eVcfWithExpectedAlleleFractionIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <0%> (ø)` | `10% <0%> (+3%)` | :arrow_up: |; | [...s/walkers/variantutils/SelectVariantsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c1VuaXRUZXN0LmphdmE=) | `100% <0%> (ø)` | `14% <0%> (+2%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `4% <0%> (+1%)` | :arrow_up: |; | ... and [14 more](https://codecov.io/gh/broadinstitute/gatk/pull/5032/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5032#issuecomment-406335133:3484,validat,validation,3484,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5032#issuecomment-406335133,1,['validat'],['validation']
Security,"er: IntelDeflater; 10:33:37.513 INFO Mutect2 - Inflater: IntelInflater; 10:33:37.514 INFO Mutect2 - GCS max retries/reopens: 20; 10:33:37.514 INFO Mutect2 - Requester pays: disabled; 10:33:37.514 INFO Mutect2 - Initializing engine; 10:33:37.874 INFO Mutect2 - Shutting down engine; [August 28, 2019 at 10:33:37 AM GMT] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.05 minutes.; Runtime.totalMemory()=161480704; java.lang.NullPointerException; at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getContigNames(SequenceDictionaryUtils.java:463); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getCommonContigsByName(SequenceDictionaryUtils.java:457); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.compareDictionaries(SequenceDictionaryUtils.java:234); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:150); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:98); at org.broadinstitute.hellbender.engine.GATKTool.validateSequenceDictionaries(GATKTool.java:769); at org.broadinstitute.hellbender.engine.GATKTool.onStartup(GATKTool.java:711); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.onStartup(AssemblyRegionWalker.java:161); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:137); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); at org.broadinstitute.hellbender.Main.main(Main.java:291). This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/comment/60577#Comment_60577",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6142:3501,validat,validateDictionaries,3501,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6142,2,['validat'],"['validateDictionaries', 'validateSequenceDictionaries']"
Security,erException` instead. ```; ./gatk-launch BwaSpark -I hdfs://sn1:8020/user/$USER/gatk/CEUTrio.HiSeq.WEx.b37.NA12892.readnamesort.bam -R hdfs://sn1:8020/user/$USER/gatk/human_g1k_v37.fasta -O hdfs://sn1:8020/user/$USER/gatk/CEUTrio.HiSeq.WEx.b37.NA12892.readnamesort.bam -- --sparkRunner SPARK --sparkMaster spark://sn1:7077 --driver-memory 8G --num-executors 4 --executor-cores 9 --executor-memory 27g; ```. ```; java.lang.NullPointerException; at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getContigNames(SequenceDictionaryUtils.java:464); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getCommonContigsByName(SequenceDictionaryUtils.java:458); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.compareDictionaries(SequenceDictionaryUtils.java:234); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:150); at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:98); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.validateToolInputs(GATKSparkTool.java:402); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:312); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:108); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:166); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:185); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:76); at org.broadinstitute.hellbender.Main.main(Main.java:92); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2020:1012,validat,validateDictionaries,1012,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2020,1,['validat'],['validateDictionaries']
Security,"erator.scala:1336); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:912); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:912); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1899); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1899); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); at org.apache.spark.scheduler.Task.run(Task.scala:86); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:748); 00:11:09.632 WARN TaskSetManager:66 - Lost task 15.0 in stage 1.0 (TID 519, localhost): java.lang.IllegalStateException: Duplicate key [B@4e233a3c; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1253); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.buildGapContinuationPenalties(PairHMMLikelihoodCalculat; ionEngine.java:304); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngi; ne.java:253); at org.broadinsti",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3018:5502,Hash,HashMap,5502,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3018,1,['Hash'],['HashMap']
Security,"erer.java:216); 	at org.broadinstitute.hellbender.tools.exome.FilterByOrientationBias.onTraversalSuccess(FilterByOrientationBias.java:168); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:781); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:115); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:170); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:189); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:122); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:143); 	at org.broadinstitute.hellbender.Main.main(Main.java:221); ```; and; ```; java.lang.IllegalStateException: Allele in genotype G* not in the variant context [C*, T]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.tools.exome.orientationbiasvariantfilter.OrientationBiasFilterer.annotateVariantContextsWithFilterResults(OrientationBiasFilterer.java:216); 	at org.broadinstitute.hellbender.tools.exome.FilterByOrientationBias.onTraversalSuccess(FilterByOrientationBias.java:211); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:840); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:115); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:170); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:189); 	at org.br",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3291:2321,validat,validate,2321,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3291,1,['validat'],['validate']
Security,"erformed a round of evaluations against XHMM and cn.MOPS on a cohort of 160 samples from SFARI project (which is described in our ASHG poster). For ground truth we used a callset generated from Talkowski lab SV pipeline on matched whole genome samples. Unfortunately, SFARI cohort is not public and cannot be used for public facing evaluations.; - Some hyperparameter tweaking was necessary to achieve good performance. Hyperparameters changed were contained mostly only to `psi_t` parameter.; - We developed a clustering procedure that is based on coverage profile at the set of targets that are highly variable across different capture kits. ; - We found that filtering on a QS metric on a final callset significantly boosted the specificity while lowering sensitivity insignificantly.; - We developed a hyperparameter optimization framework prototype that could be used in a future for general optimizations of cost/performance parameters for all GATK pipelines.; - We resolved several memory issues that came up during validations. **A few issues were encountered along the way:**; - The sensitivity and specificity on multiallellic (common) sites was significantly lower than on rare events.; - Single target calling sensitivity was lower than 20%.; - Pipeline WDL required optimization in order to handle whole genome data, however these changes were not consolidated in the official WDL. **Currently the ongoing work is focused on the following:**; - Improving sensitivity/specificity of calls on common regions. One solution being tested involves setting a prior for common regions derived from a high quality callset. Second solution is to set a different filtering threshold for common regions.; - Consolidating validation scripts to process gCNV output and outputs of competing tools measure their performances against ground truth.; - Analyzing 1000 Genomes exomes, which could be potentially used for public facing automatic evaluations. **The following items are necessary done for auto",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502:1068,validat,validations,1068,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502,1,['validat'],['validations']
Security,"error in which the 1st alternative allele is a spanning deletion and the 2nd (and 3rd) is either an indel or snp. It's true that the 2nd and 3rd allele is actually not found in my samples. I even have 7 occurances in which the 1st allele (spanning deletion) has allele frequency 1.00. my code is the following for GenotypeGVCFs:. java -Xms32G -Xmx32G -jar ${gatk4} GenotypeGVCFs -R ${ref} -V ${pipeline}/${name}\_v4.1.6.0.g.vcf.gz -O ${vcf}/${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list 2> ${log}/${name}\_v4.1.6.0\_genotype.log. for ValidateVariants:. java -Xms10G -Xmx10G -jar ${gatk4} ValidateVariants -R ${ref} -V ${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list --warn-on-errors 2> ${log}/${name}\_v4.1.6.0\_genotype\_valivar.log. the warning in ValidateVariants and the site look like this:. 14:12:15.126 WARN ValidateVariants - \*\*\*\*\* Input 1st\_v4.1.6.0.vcf.gz fails strict validation of type ALL: one or more of the ALT allele(s) for the record at position chr\_1:1088200 are not observed at all in the sample genotypes \*\*\*\*\* ; ; chr\_1 1088200 . T \*,TAAAAAAAAAAAA 64.39 . AC=8,0;AF=0.667,0.00;AN=12;DP=118;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.4286;MLEAC=7,7;MLEAF=0.583,0.583;MQ=58.73;QD=32.19;SOR=2.303 GT:AD:DP:GQ:PL ./.:9,0,0:9:.:0,0,0,0,0,0 0/0:9,0,0:9:0:0,0,113,0,113,113 ./.:10,0,0:10:.:0,0,0,0,0,0 ./.:5,0,0:5:.:0,0,0,0,0,0 1/1:0,0,1:1:0:225,15,0,15,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:12,0,0:12:.:0,0,0,0,0,0 ./.:8,0,0:8:.:0,0,0,0,0,0 0/0:3,0,0:3:0:0,0,43,0,43,43 ./.:7,0,0:7:.:0,0,0,0,0,0 ./.:1,0,0:1:.:0,0,0,0,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:3,0,0:3:.:0,0,0,0,0,0 ./.:7,0,0:7:.:0,0,0,0,0,0 1/1:0,0,0:0:0:45,3,0,3,0,0 ./.:0,0,0 1/1:0,0,1:1:0:45,3,0,3,0,0 1/1:0,0,0:0:0:267,18,0,18,0,0 ./.:9,0,0:9:.:0,0,0,0,0,0 ; . The exactly the same happens when I run GenotypeGVCFs in --include-non-variant-sites and when I run GenotypeGVCFS and ValidateVariants in v4.1.7.0. In principle, these sites just take up space in the vcf, as the corr",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6630:1975,validat,validation,1975,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6630,1,['validat'],['validation']
Security,"error specified; 1 error; 1 warning; :compileJava FAILED; :compileJava (Thread[Daemon worker Thread 2,5,main]) completed. Took 4.116 secs. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':compileJava'.; > Compilation failed; see the compiler error output for details. * Try:; Run with --debug option to get more log output. * Exception is:; org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':compileJava'.; at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:69); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46); at org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35); at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64); at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58); at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52); at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52); at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53); at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:233); at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:215); at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:74); at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPla",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4248:6010,Validat,ValidatingTaskExecuter,6010,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4248,1,['Validat'],['ValidatingTaskExecuter']
Security,"es); gatk SplitNCigarReads. ### Affected version(s); - gatk 4.2.6.1. ### Description ; I produced the bam files using STAR, and adjusted the MQ value to 60. I then used sambamba markdup to mark duplicate, then I proceeded to use SplitNCigarReads. The CPU load for SplitNCigarReads was very high and at certain times can spike up to 2400%. I tried limiting the cpu usage with commands like `-XX:ParallelGCThreads=1` and `-XX:ConcGCThreads=1`, but it doesn't seem to have an effect. (The cpu usage sometimes do stay at 100%) I also adjusted the MQ value in STAR to lessen the load in SplitNCigarReads. I also tried to increase the read size to reduce I/O time.; ![image](https://user-images.githubusercontent.com/106958825/175206165-08b28567-d671-45fa-b033-f20c4792edb7.png). #### Steps to reproduce; STAR; ```; STAR \; --genomeDir ${star_reference_path} \; --runThreadN 16 \; --readFilesIn ${file_1} ${file_2} \; --readFilesCommand ""gunzip -c"" \; --sjdbOverhang 149 \; --outSAMtype BAM SortedByCoordinate \; --outBAMsortingThreadN 16 \; --outSAMmultNmax 1 \; --outSAMmapqUnique 60 \; --outSAMattrRGline ID:${id} LB:RNASEQ SM:${sample_name} PL:ILLUMINA PU:${platform_unit} PM:${instrument_id} \; --limitBAMsortRAM 50000000000 \; --twopassMode Basic \; --outFileNamePrefix /rawdata/rnaseq/clean/bam/1.; ```. Mark Duplicate; ```; sambamba markdup \; -t 4 \; --tmpdir=/tmp \; --hash-table-size=262144 \; --overflow-list-size=67108864 \; /rawdata/rnaseq/clean/bam/1.Aligned.sortedByCoord.out.bam \; /rawdata/rnaseq/clean/bam/1.aligned.duplicate_marked.sorted.bam \; ```. SplitNCigarReads; ```; gatk --java-options ""-Djava.io.tmpdir=/tmp -Xmx20G -XX:ParallelGCThreads=1 -XX:ConcGCThreads=1"" SplitNCigarReads \; -R ${reference_path} \; --tmp-dir /tmp \; -I /rawdata/rnaseq/clean/bam/1.aligned.duplicate_marked.sorted.bam \; -O /rawdata/rnaseq/clean/bam_gatk/1.aligned.duplicate_marked.sorted.bam \; --create-output-bam-md5 TRUE \; --max-reads-in-memory 1000000 \; --skip-mapping-quality-transform TRUE \; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7914:1418,hash,hash-table-size,1418,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7914,1,['hash'],['hash-table-size']
Security,"es.githubusercontent.com/11076296/158385777-6174f8b8-7abb-4b31-92d1-11cc8064854b.png). Note that the malaria data used was pretty small: chr1-2 training (~20k positive training/truth variants, ~50k negative training variants; note also that the threshold for determining negative training was not tuned---a threshold corresponding to a 98% truth sensitivity was arbitrarily chosen), chr3 validation (~50k variants), and chr4-6 test (~150k variants). The LL score is calculated from a validation set held out from the training/truth positives used to train the model, while the F1 score is calculated using ""orthogonal truth"" positives/negatives determined using 3 families of ~30 trios each. However, there's some arbitrariness in how we define the boundary for the latter positives/negatives, and hence some arbitrariness in the F1 score itself. But I'd expect using gold-standard GIAB truth would be more straightforward. Not sure how much we can conclude, but that the validation and test F1s are similar and that the validation LL score isn't *too* far off are encouraging. That said, there is a pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot s",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:1148,validat,validation,1148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,4,['validat'],['validation']
Security,esources/org/broadinstitute/hellbender/tools/spark/sv/utils/SVContext.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/splitNCigarReadsSnippet.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.sam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.sam; src/test/resources/org/broadinstitute/hellbender/tools/validation/marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/picard.marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/single.read.bai; src/test/resources/org/broadinstitute/hellbender/tools/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/valid.dict; src/test/resources/org/broadinstitute/hellbender/tools/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.indels.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.HACKEDhg38header.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.snps.recal.vcf.idx; src/test/r,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:45543,validat,validation,45543,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['validat'],['validation']
Security,"et held out from the training/truth positives used to train the model, while the F1 score is calculated using ""orthogonal truth"" positives/negatives determined using 3 families of ~30 trios each. However, there's some arbitrariness in how we define the boundary for the latter positives/negatives, and hence some arbitrariness in the F1 score itself. But I'd expect using gold-standard GIAB truth would be more straightforward. Not sure how much we can conclude, but that the validation and test F1s are similar and that the validation LL score isn't *too* far off are encouraging. That said, there is a pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot shows the ""orthogonal truth"" positives/negatives used to calculate F1. So we can see that the difficulty in deriving F1 as a function of the score along the horizontal axis to give the third plot lies in collapsing the columns in the top plot into a single condition positive or condition negative status. Again, hard to do so without some arbitrariness; I simply came up with some rules to convert various amounts of red, yellow, green, etc. in each column to a red/white/green status. If you're u",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:1659,validat,validation,1659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,2,['validat'],['validation']
Security,etryHelper.java:47); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:992); 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleCl,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685:6466,secur,security,6466,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685,1,['secur'],['security']
Security,etryHelper.java:54); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:114); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.UnknownHostException: www.googleapis.com; 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:668); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527); 	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264); 	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetH,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5094:6597,secur,security,6597,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094,1,['secur'],['security']
Security,"eue; SEVERE: *~*~*~ Channel ManagedChannelImpl{logId=121, target=bigquerystorage.googleapis.com:443} was not shutdown properly!!! ~*~*~*; Make sure to call shutdown()/shutdownNow() and wait until awaitTermination() returns true.; java.lang.RuntimeException: ManagedChannel allocation site; 	at io.grpc.internal.ManagedChannelOrphanWrapper$ManagedChannelReference.<init>(ManagedChannelOrphanWrapper.java:93); 	at io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:53); 	at io.grpc.internal.ManagedChannelOrphanWrapper.<init>(ManagedChannelOrphanWrapper.java:44); 	at io.grpc.internal.ManagedChannelImplBuilder.build(ManagedChannelImplBuilder.java:615); 	at io.grpc.internal.AbstractManagedChannelImplBuilder.build(AbstractManagedChannelImplBuilder.java:261); 	at com.google.api.gax.grpc.InstantiatingGrpcChannelProvider.createSingleChannel(InstantiatingGrpcChannelProvider.java:360); 	at com.google.api.gax.grpc.InstantiatingGrpcChannelProvider.access$1800(InstantiatingGrpcChannelProvider.java:81); 	at com.google.api.gax.grpc.InstantiatingGrpcChannelProvider$1.createSingleChannel(InstantiatingGrpcChannelProvider.java:231); 	at com.google.api.gax.grpc.ChannelPool.create(ChannelPool.java:72); 	at com.google.api.gax.grpc.InstantiatingGrpcChannelProvider.createChannel(InstantiatingGrpcChannelProvider.java:241); 	at com.google.api.gax.grpc.InstantiatingGrpcChannelProvider.getTransportChannel(InstantiatingGrpcChannelProvider.java:219); 	at com.google.api.gax.rpc.ClientContext.create(ClientContext.java:199); 	at com.google.cloud.bigquery.storage.v1.stub.EnhancedBigQueryReadStub.create(EnhancedBigQueryReadStub.java:89); 	at com.google.cloud.bigquery.storage.v1.BigQueryReadClient.<init>(BigQueryReadClient.java:129); 	at com.google.cloud.bigquery.storage.v1.BigQueryReadClient.create(BigQueryReadClient.java:110); 	at com.google.cloud.bigquery.storage.v1.BigQueryReadClient.create(BigQueryReadClient.java:102); 	at org.broadinstitute.hellbender.utils.bigquery.St",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7583:1303,access,access,1303,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7583,1,['access'],['access']
Security,eup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.IMPROPER_PAIR.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validati,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:60190,Validat,ValidateVariants,60190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,execute(NetHttpRequest.java:93); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:158); 	at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:489); 	at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:206); 	at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:70); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1825); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1012); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:975); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2653); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:92); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2687); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2669); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:371); 	at org.apache.hadoop.fs.Path.getFileSystem(Path.java:295); 	at org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(FileInputFormat.java:500); 	at org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(FileInputFormat.java:469); 	at org.apache.spark.SparkContext$$anonfun$newAPIHadoopFile$2.apply(SparkContext.scala:1084); 	at org.apache.spark.SparkContext$$anonfun$newAPIHadoopFile$2.apply(SparkContext.scala:1072); 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151); 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112); 	at org.apache.spark.SparkContext.withScope(SparkContext.scala:679); 	at org.apache.spark.SparkContext.newAPIHadoopFile(SparkContext.scala:1072); 	at org.apa,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4369:7498,access,access,7498,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4369,1,['access'],['access']
Security,executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:347); ... 17 more; Caused by:; java.net.SocketTimeoutException: Read timed out; at java.net.SocketInputStream.socketRead0(Native Method); at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); at java.net.SocketInputStream.read(SocketInputStream.java:170); at java.net.SocketInputStream.read(SocketInputStream.java:141); at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); at sun.security.ssl.InputRecord.read(InputRecord.java:503); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316); at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:250); at shaded.cloud-nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:77); at shaded.cloud-nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); at shaded.cloud-nio.com.google.auth.oauth2.ServiceAccountCredentials.refreshAccessToken(ServiceAccountCredentials.java:317); ... 27 more; ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2514:4009,secur,security,4009,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2514,2,['secur'],['security']
Security,"executing `gradle test -Dtest.single=ValidateVariantsIntegrationTest`; produces, among other things, this:. testBadID2_OKif_notInDBSNP(org.broadinstitute.hellbender.tools.walkers.ValidateVariantsIntegrationTest) produced standard out/err: [Wed Mar 18 21:15:38 EDT 2015] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants --dbsnp **org.broadinstitute.hellbender.engine.FeatureInput@4c4054af** **--validationTypeToExclude [REF, ALLELES, CHR_COUNTS]**. Two problems:; 1) FeatureInput needs a meaningful toString; 2) the argument that is a list of enum values should be printed as multiples of 'validationTypeToExclude' each with a value (so that the commandline is copy-paste-able)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/318:37,Validat,ValidateVariantsIntegrationTest,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/318,5,"['Validat', 'validat']","['ValidateVariants', 'ValidateVariantsIntegrationTest', 'validationTypeToExclude']"
Security,expose DEFAULT_FEATURE_CACHE_LOOKAHEAD as a configurable option,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3489:0,expose,expose,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3489,1,['expose'],['expose']
Security,expose intervalMerging Argument in IntervalArguments,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/165:0,expose,expose,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/165,1,['expose'],['expose']
Security,"f --recal-file recalibration. cat sb-recalibrated-tiny.vcf; ##fileformat=VCFv4.2; ##FILTER=<ID=LOW_VQSLOD,Description=""VQSLOD < 0.0"">; ##FILTER=<ID=PASS,Description=""Site contains at least one allele that passes filters"">; ##GATKCommandLine=<ID=ApplyVQSR,CommandLine=""ApplyVQSR --recal-file /Users/vlad/tmp/sb/recalibration --output sb-recalibrated-tiny-renamed4.vcf --variant sb-good-tiny-renamed4.vcf --use-allele-specific-annotations false --ignore-all-filters false --exclude-filtered false --mode SNP --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays --disable-tool-default-read-filters false"",Version=""4.1.9.0"",Date=""31 May 2021 12:07:54 PM"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##INFO=<ID=NEGATIVE_TRAIN_SITE,Number=0,Type=Flag,Description=""This variant was used to build the negative training set of bad variants"">; ##INFO=<ID=POSITIVE_TRAIN_SITE,Number=0,Type=Flag,Description=""This variant was used to build the positive training set of good variants"">; ##INFO=<ID=SB,Number=1,Type=Float,Description=""Strand Bias"">; ##INFO=<ID=VQSLOD,Number=1,Type=Float,Description=""Log odds of being a true variant versus being false under the trained gaussian mixture model"">; ##INFO=<ID=culprit,Number=1,Type=String,Description=""The annotation which w",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7280:2401,validat,validation,2401,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7280,1,['validat'],['validation']
Security,"f.gz`) . The log issue looks very similar to that described here [#7162)](https://github.com/broadinstitute/gatk/issues/7162), but the *Problematic frame* information is different. ; As suggested in this issue [#5690](https://github.com/broadinstitute/gatk/issues/5690), the problem disappears when using gatk 4.1.3.0 on the same inputs. . log:; ```bash; 17:37:20.674 INFO ProgressMeter - chr20:43968267 10.6 44000 4132.2; 17:37:38.646 INFO ProgressMeter - chr22:22736335 10.9 45000 4110.5; 17:37:52.672 INFO ProgressMeter - chrX:7000139 11.2 46000 4113.9; 17:38:05.421 INFO ProgressMeter - chrX:26360893 11.4 47000 4125.0; 17:38:17.207 INFO ProgressMeter - chrX:44917184 11.6 48000 4141.4; 17:38:29.312 INFO ProgressMeter - chrX:77681733 11.8 49000 4155.3; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fc0ccec5cdb, pid=15987, tid=15988; #; # JRE version: OpenJDK Runtime Environment (11.0.11+9) (build 11.0.11+9-Ubuntu-0ubuntu2.18.04); # Java VM: OpenJDK 64-Bit Server VM (11.0.11+9-Ubuntu-0ubuntu2.18.04, mixed mode, sharing, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x97cdb] cfree+0x31b; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/share/apport/apport %p %s %c %d %P %E"" (or dumping to /home/kt/core.15987); #; # An error report file with more information is saved as:; # /home/kt/hs_err_pid15987.log; ```. #### Steps to reproduce; My commands:; ```bash; gatk --java-options ""-Xmx11g"" \; FilterAlignmentArtifacts \; -R GRCh38.no_alt_analysis_set.fa \; -V in.vcf.gz \; -I bamout.bam \; --bwa-mem-index-image Homo_sapiens_assembly38.fa.img \; --num-regular-contigs 194 \; --max-reasonable-fragment-length 2000 \; --drop-ratio 0.1 \; --indel-start-tolerance 8 \; -O out.vcf.gz; ```; I copied the input vcfs (small: test.cf.gz and initial: m2.vcf.gz), bamout and ""hs_err_pid.logs"" to `gs://iseq/kt/strange-bug/` ; I hope you can access them. ; Best,; Kasia",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7247:2633,access,access,2633,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7247,1,['access'],['access']
Security,"factor of around four, which gzip often does not reach (because it doesn't know ahead of time that DNA has only four letters).; Use reference genome fasta as proxy for nearly no repetition at all. It doesn't compress much beyond 2bit. Tweaking of the Huffmann coding etc. might have influenced the compression level much in this case, by ""giving the compressor a subtle hint about the four letters"".; Paradoxically, Intel might have optimized for average data and thus brought a disadvantage for the four letter nature of DNA (and also the few letters used in quality data encoding compared to text). 3. BQSR:; When I did interleaving compression experiments, I noticed that the BQSR step decreases compressiblity considerably.; In this example I had the same BAM file in different versions that were aligned to hs38DH, hs38, hs37d5 and could compress them to nearly the size of one, by putting similar pieces of the files after one another.; Adding the same BAM with BQSR increased final file size more than several pre-BQSR versions together.; Note: This piece-meal packing might be useful for different BAMs mostly only with many BAMs where similar regions accumulate. 4. Even faster:; In my experience, level 0 (no compression) (with samtools view -u) increases speed even more, if files are on a lz4 encrypted disk (such as with ZFS).; The speed-up of lz4 over even level 1 of any gzip-like compression is substantial.; With data on SSDs or similarly fast storage, that can make a huge difference. Another factor 6 six faster than level 1 on compression and a factor 9 on decompression. The then possible decompression speed of 3GB/s makes it possible to e.g. load a 180GB bam into a RAM disk in 60 seconds on a sufficiently fast SSD array (e.g. as on an aws ec2 i3.8xlarge instance).; Still 600MB/s if the RAM is also lz4 compressed. See image from https://github.com/lz4/lz4 below.; ![grafik](https://user-images.githubusercontent.com/1612006/35339046-d84b8b78-011f-11e8-99ec-a36cde725bb3.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-360179673:3572,encrypt,encrypted,3572,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-360179673,1,['encrypt'],['encrypted']
Security,fb822dddb0cad0123d48c33124b6065; Status: Downloaded newer image for broadinstitute/gatk:4.2.2.0; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# apt-get update; Get:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]; Get:2 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB] ; Get:3 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB] ; Get:4 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [543 kB] ; Get:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease [6786 B] ; Get:6 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1426 kB] ; Err:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease ; The following signatures couldn't be verified because the public key is not available: NO_PUBKEY FEEA9169307EA071 NO_PUBKEY 8B57C5C2836F4BEB; Get:7 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2295 kB] ; Get:8 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] ; Get:9 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] ; Get:10 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB] ; Get:11 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]; Get:12 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB] ; Get:13 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB] ; Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2200 kB]; Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]; Get:16 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [575 kB]; Get:17 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2731 kB]; Get:18 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]; Get:19 http://archive.ubuntu.com/ubuntu bionic,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7447:1488,secur,security,1488,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7447,1,['secur'],['security']
Security,fix for sequence dict validation on cram,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1275:22,validat,validation,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1275,1,['validat'],['validation']
Security,fix inefficient hashcode computation and added tests to 100%,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1620:16,hash,hashcode,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1620,1,['hash'],['hashcode']
Security,fix invalid certificate for gatk-jenkins,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2446:12,certificate,certificate,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2446,1,['certificate'],['certificate']
Security,fix issue with validatevariants when validatign a gvcf and a record is followed by a record that is fully encompassed by the first one. The interval math was off in this case,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3530:15,validat,validatevariants,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3530,2,['validat'],"['validatevariants', 'validatign']"
Security,fix the script to validate-reads-spark-pipeline,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1921:18,validat,validate-reads-spark-pipeline,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1921,1,['validat'],['validate-reads-spark-pipeline']
Security,fixes #1398 . @yfarjoun can you review? it's a super simple picard-style CLP for comparing quals between bams (needed for GATK4 validation of BQSR - may be useful for GoTC too (?)),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1415:128,validat,validation,128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1415,1,['validat'],['validation']
Security,"fixes #1486 (code already existed, just needed to be exposed). I found a limitation in Hadoop-BAM (https://github.com/HadoopGenomics/Hadoop-BAM/issues/68) regarding reading blocked vcfs.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1496:53,expose,exposed,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1496,1,['expose'],['exposed']
Security,fixes #754. updating spark along side the dataflow jump; also updating other dependencies as well. changing GatkTestPipeline to downgrade a naming error to a warning; replacing calls to setName; replacing calls to setCoder with calls to withCoder when possible. hooking up the validation stringency for local files; fixes #745. disabling failing test and opening #774 to reenable it,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/775:277,validat,validation,277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/775,1,['validat'],['validation']
Security,"fixes the issue where CommandLineExceptions produced no error message. added a public getUsage() method to CommandLineProgram; added a catch for these in instanceMain(), where the CommandLineProgram is in scope for printing the usage message; added a protected accessor getCommandLineParser to CommandLineProgram which guards against having an uninitialized CommandLineParser; moved the ""A USER ERROR HAS OCCURRED"" text out of the actual user exception and into the pretty printing",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2340:261,access,accessor,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2340,1,['access'],['accessor']
Security,"flater: IntelInflater; 18:11:33.871 INFO PrintReadsSpark - GCS max retries/reopens: 20; 18:11:33.871 INFO PrintReadsSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 18:11:33.871 INFO PrintReadsSpark - Initializing engine; 18:11:33.871 INFO PrintReadsSpark - Done initializing engine; 17/10/13 18:11:33 INFO spark.SparkContext: Running Spark version 2.2.0.cloudera1; 17/10/13 18:11:34 WARN spark.SparkConf: spark.master yarn-client is deprecated in Spark 2.0+, please instead use ""yarn"" with specified deploy mode.; 17/10/13 18:11:34 INFO spark.SparkContext: Submitted application: PrintReadsSpark; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'sparkDriver' on port 45754.; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering MapOutputTracker; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering BlockManagerMaster; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/10/13 18:11:34 INFO storage.DiskBlockManager: Created local directory at /tmp/hdfs/blockmgr-ea0e0669-2981-4277-80a0-a67eddf1001d; 17/10/13 18:11:34 INFO memory.MemoryStore: MemoryStore started with capacity 366.3 MB; 17/10/13 18:11:34 INFO spark.SparkE",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:4186,Secur,SecurityManager,4186,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,1,['Secur'],['SecurityManager']
Security,"fo header line, call on each; > VCFInfoHeaderLine getCount(vc) to get the expected number of info; > annotation entries; > - Compare the expected number with a count based on; > vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some; > additional parsing because it returns an Object; > - (Bonus points if you use the isFixedCount() and getCount() functions; > on the VCF info header line to simplify annotations that aren't according; > to the number of alt alleles); > ; > Test data; > ; > /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > Should fail AC/AF validation at; > 1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120; > See results using:; > ; > use VCFtools; > vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > ; > which outputs:; > INFO field at 1:768589 .. INFO tag [AC=1] expected different number of; > values (expected 2, found 1),INFO tag [AF=0.00047] expected different; > number of values (expected 2, found 1); > Notes; > ; > Currently, all the validation modes call out to HTSJDK. Do we want to put; > the new functionality there as well?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1053. ---. @ldgauthier commented on [Fri Jul 17 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122308040). Today I learned that the way we currently build GATK, you can't point to a local htsjdk jar anymore, so this task will be two-fold:; 1) Make a PR to htsjdk with a new function in the VariantContext class for validateInfoFieldCounts(VCFInfoHeaderLine headerLine) or similar; add a test to VariantContextUnitTest.java; 2) After change 1) is merged, update ValidateVariants accordingly to use the new function and add a test to its integration tests. ---. @vdauwera commented on [Fri May 27 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-222213763). @ldgauthier is this still a thing? (i",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:3815,validat,validation,3815,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validation']
Security,"g engine; 00:05:57.036 INFO ProgressMeter - Starting traversal; 00:05:57.036 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 00:07:26.967 WARN ReferenceConfidenceVariantContextMerger - Detected invalid annotations: When trying to merge variant contexts at location chr16:10185 the annotation AS_VarDP=59|115|0 was not a numerical value and was ignored; 00:07:26.967 WARN ReferenceConfidenceVariantContextMerger - Reducible annotation 'AS_VarDP' detected, add -G StandardAnnotation -G AS_StandardAnnotation to the command to annotate in the final VC with this annotation.; 00:07:26.991 INFO GenotypeGVCFs - Shutting down engine; GENOMICSDB_TIMER,GenomicsDB iterator next() timer,Wall-clock time(s),0.02938786500000001,Cpu time(s),0.029037034000000003; [August 25, 2021 12:07:27 AM EDT] org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFs done. Elapsed time: 1.55 minutes.; Runtime.totalMemory()=1807745024; java.lang.NullPointerException; at java.util.HashMap.putMapEntries(HashMap.java:500); at java.util.HashMap.putAll(HashMap.java:784); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.combineAnnotations(VariantAnnotatorEngine.java:211); at org.broadinstitute.hellbender.tools.walkers.ReferenceConfidenceVariantContextMerger.mergeAttributes(ReferenceConfidenceVariantContextMerger.java:318); at org.broadinstitute.hellbender.tools.walkers.ReferenceConfidenceVariantContextMerger.merge(ReferenceConfidenceVariantContextMerger.java:142); at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsEngine.callRegion(GenotypeGVCFsEngine.java:130); at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFs.apply(GenotypeGVCFs.java:281); at org.broadinstitute.hellbender.engine.VariantLocusWalker.lambda$traverse$0(VariantLocusWalker.java:135); at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184); at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); at java.util.stream.Ref",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7437:8033,Hash,HashMap,8033,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7437,1,['Hash'],['HashMap']
Security,g(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2812); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:100); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2849); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2831); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:389); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:171); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:168); 	at java.base/java.security.AccessController.doPrivileged(Native Method); 	at java.base/javax.security.auth.Subject.doAs(Subject.java:423); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1836); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:168); 	at org.genomicsdb.reader.GenomicsDBQueryStream.jniGenomicsDBInit(Native Method); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:209); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:182); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:91); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.generateHeadersForQuery(GenomicsDBFeatureReader.java:176); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.<init>(GenomicsDBFeatureReader.java:80); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.getGenomicsDBFeatureReader(GenomicsDBImportIntegrationTest.java:926); 	at org.broadinstitute.hellbender.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6522:1553,secur,security,1553,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6522,1,['secur'],['security']
Security,g.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); 	at org.apache.spark.scheduler.Task.run(Task.scala:109); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); 18/10/17 19:23:59 ERROR Executor: Exception in task 518.0 in stage 0.0 (TID 518); java.io.FileNotFoundException: /home/data/WGS/F002/F002.sort.bam (Too many open files); 	at java.io.FileInputStream.open0(Native Method); 	at java.io.FileInputStream.open(FileInputStream.java:195); 	at java.io.FileInputStream.<init>(FileInputStream.java:138); 	at org.apache.hadoop.fs.RawLocalFileSystem$LocalFSFileInputStream.<init>(RawLocalFileSystem.java:106); 	at org.apache.hadoop.fs.RawLocalFileSystem.open(RawLocalFileSystem.java:202); 	at org.apache.hadoop.fs.ChecksumFileSystem.open(ChecksumFileSystem.java:349); 	at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:769); 	at org.seqdoop.hadoop_bam.util.WrapSeekable.openPath(WrapSeekable.java:60); 	at org.seqdoop.hadoop_bam.BAMRecordReader.initialize(BAMRecordReader.java:147); 	at org.seqdoop.hadoop_bam.BAMInputFormat.createRecordReader(BAMInputFormat.java:222); 	at org.seqdoop.hadoop_bam.AnySAMInputFormat.createRecordReader(AnySAMInputFormat.java:190); 	at org.apache.spark.rdd.NewHadoopRDD$$anon$1.liftedTree1$1(NewHadoopRDD.scala:187); 	at org.apache.spark.rdd.NewHadoopRDD$$anon$1.<init>(NewHadoopRDD.scala:186); 	at org.apache.spark.rdd.NewHadoopRDD.compute(NewHadoopRDD.scala:141); 	at org.apache.spark.rdd.NewHadoopRDD.compute(NewHadoopRDD.scala:70); 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324); 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:288); 	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324); 	a,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5316:5323,Checksum,ChecksumFileSystem,5323,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316,1,['Checksum'],['ChecksumFileSystem']
Security,g/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtriMixedPloidyTest.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioPopPriorsTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/Calculat,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61487,Validat,ValidateVariants,61487,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,"['Validat', 'validat']","['ValidateVariants', 'validationExampleRSIDonPositionNotInDBSNP']"
Security,"gPloidy - GCS max retries/reopens: 20; 15:09:27.690 INFO DetermineGermlineContigPloidy - Requester pays: disabled; 15:09:27.690 INFO DetermineGermlineContigPloidy - Initializing engine; 15:09:37.241 INFO DetermineGermlineContigPloidy - Done initializing engine; 15:09:37.253 INFO DetermineGermlineContigPloidy - No contig-ploidy model was provided, running in cohort mode...; 15:09:37.253 INFO DetermineGermlineContigPloidy - Intervals specified...; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 15:09:38.533 INFO FeatureManager - Using codec IntervalListCodec to read file file:///home/n.liorni/snakemake_cnv_gatk/results/cnv/targets.preprocessed.interval_list; 15:09:38.659 INFO IntervalArgumentCollection - Processing 548086 bp from intervals; 15:09:38.697 INFO DetermineGermlineContigPloidy - Validating and aggregating coverage per contig from input read-count files...; 15:09:38.711 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-0848_S4.hdf5 (1 / 4); 15:09:38.734 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-0872_S2.hdf5 (2 / 4); 15:09:38.745 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-1121_S4.hdf5 (3 / 4); 15:09:38.757 INFO DetermineGermlineContigPloidy - Aggregating read-count file results/cnv/hdf5/MGM20-1543_S10.hdf5 (4 / 4); 15:12:24.486 INFO DetermineGermlineContigPloidy - Shutting down engine; [18 ottobre 2021 15.12.24 CEST] org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy done. Elapsed time: 2.95 minutes.; Runtime.totalMemory()=2215116800; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /tmp/cohort_determine_ploidy_and_depth.1340409154615700376.py --sample_cover",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7444#issuecomment-945753905:4324,Validat,Validating,4324,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7444#issuecomment-945753905,1,['Validat'],['Validating']
Security,"galArgumentException: beta must be greater than 0 but got -87566.7500301585; ```; ""this error only comes after the first pass of filtermutectCalls completed."". ValidateVarinats shows no errors when run on VCF.; ""The stats file was created by mutect2 for each shard and then joined with MergeMutectStats. Similar the read orientation model was built with the f1r2 files from all shards."". @davidbenjamin. --------------; Hi there,. I have a simulated dataset of related samples and currently running Mutect2 on it (10 tumor samples WGS with 130x); I managed to run everything through and now FilterMutectCalls crashes after the first pass through the variants with. ```; [October 1, 2019 12:16:16 PM UTC] org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls done. Elapsed time: 370.68 minutes.; Runtime.totalMemory()=20597702656; java.lang.IllegalArgumentException: beta must be greater than 0 but got -87566.7500301585; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:724); at org.broadinstitute.hellbender.tools.walkers.readorientation.BetaDistributionShape.<init>(BetaDistributionShape.java:14); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.BinomialCluster.getFuzzyBinomial(BinomialCluster.java:42); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.BinomialCluster.learn(BinomialCluster.java:33); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.lambda$learnAndClearAccumulatedData$7(SomaticClusteringModel.java:131); at org.broadinstitute.hellbender.utils.IndexRange.forEach(IndexRange.java:116); at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.learnAndClearAccumulatedData(SomaticClusteringModel.java:131); at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.Mutect2FilteringEngine.learnParameters(Mutect2FilteringEngine.java:156); at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls.afterNthP",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6202:1042,validat,validateArg,1042,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6202,1,['validat'],['validateArg']
Security,"gatk --java-options ""-Xmx4g -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" BaseRecalibrator -I /mnt/fq2bam/sample1.markdup.sorted.bam \; -R /mnt/fq2bam/inputs/reference/files/Homo_sapiens_assembly38.fasta \; --known-sites /mnt/fq2bam/inputs/resources/files/Homo_sapiens_assembly38.known_indels.vcf.gz \; --known-sites /mnt/fq2bam/inputs/resources/files/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz \; --known-sites /mnt/fq2bam/inputs/resources/files/Homo_sapiens_assembly38.dbsnp138.vcf.gz \; -L chr1 \; -DF MappingQualityNotZeroReadFilter \; -DF MappedReadFilter \; -O /mnt/fq2bam/sample1_BQSR001.recal_data.table. I got the following error. java.lang.IllegalStateException: No cigar elements left after removing leading and trailing deletions.; at org.broadinstitute.hellbender.utils.Utils.validate(Utils.java:814); at org.broadinstitute.hellbender.utils.read.CigarBuilder.make(CigarBuilder.java:138); at org.broadinstitute.hellbender.utils.read.CigarBuilder.make(CigarBuilder.java:143); at org.broadinstitute.hellbender.utils.recalibration.BaseRecalibrationEngine.consolidateCigar(BaseRecalibrationEngine.java:293); at org.broadinstitute.hellbender.transformers.ReadTransformer.lambda$andThen$f85d1091$1(ReadTransformer.java:20); at org.broadinstitute.hellbender.transformers.ReadTransformer.lambda$andThen$f85d1091$1(ReadTransformer.java:20); at org.broadinstitute.hellbender.transformers.ReadTransformer.lambda$andThen$f85d1091$1(ReadTransformer.java:20); at org.broadinstitute.hellbender.transformers.ReadTransformer.lambda$andThen$f85d1091$1(ReadTransformer.java:20); at org.broadinstitute.hellbender.utils.recalibration.BaseRecalibrationEngine.processRead(BaseRecalibrationEngine.java:118); at org.broadinstitute.hellbender.tools.walkers.bqsr.BaseRecalibrator.apply(BaseRecalibrator.java:189); at org.broadinstitute.hellbender.engine.ReadWalker.lambda$traverse$0(ReadWalker.java:100); at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183); at java.util.stream.ReferencePipe",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8523:791,validat,validate,791,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8523,1,['validat'],['validate']
Security,"gatk silently sets TMP_DIR globally readable/writable for all users. This is problematic for admins trying to maintain a secure multi-user environment. It would be better (imho) if gatk tests if TMP_DIR is writeable and errors out when it is not instead of just globally making it writeable by all users. src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java. for (final File f : TMP_DIR) {; // Intentionally not checking the return values, because it may be that the program does not; // need a tmp_dir. If this fails, the problem will be discovered downstream.; if (!f.exists()) f.mkdirs();; f.setReadable(true, false);; f.setWritable(true, false);",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4513:121,secur,secure,121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4513,1,['secur'],['secure']
Security,gatk/pull/4029?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `22.807% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQXBwbHlCUVNSLmphdmE=) | `91.667% <ø> (ø)` | `6 <0> (ø)` | :arrow_down: |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `88.542% <ø> (ø)` | `28 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...ellbender/tools/walkers/bqsr/BaseRecalibrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4029/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvci5qYXZh) | `88.372% <ø> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [.../hellbender/tools/spark/BaseRecalibratorSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/402,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087:1833,validat,validation,1833,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-354921087,1,['validat'],['validation']
Security,"ge tested against the workflow (#8062); - VS-637 Address a couple of issues in SampleLoadStatus handling in GVSImportGenomes. (#8052); - Revert Alpinizing of apt dependent task [VS-688] (#8065); - Fix missing vat schema JSONs [VS-699] (#8072); - Fix integration expectations for fixed AD [VS-689] (#8066); - VS-698 Remove unnecessary columns from Call set statistics (#8073); - Fix Dockerfile nits that break 20.10.21 (#8078); - Nirvana 3.18.1 Docker images support [VS-661] (#8082); - Add option to not prepare __REF_DATA or __SAMPLES tables to Prepare [VS-697] (#8079); - ""build-base"" Docker image for faster variantstore image builds [VS-712] (#8085); - GVS / Hail VDS integration test [VS-639] (#8086); - Remove AI/AN from VDS docs [VS-726] (#8096); - Add flag for cost_observability table writing to support sub-cohort use case [VS-521] (#8093); - Document STS delivery process for VDS [VS-727] (#8101); - delete obsolete callset_QC directory and its contents [VS-318] (#8108); - doc link typo and add check for control samples in AVRO export (#8110); - Add defaults for scatter_count in GvsExtractCohortFromSampleNames [VS-496] (#8109); - Escape table names properly in ValidateVat WDL (#8116); - Vs 741 fix indefinite freeze in split intervals task when using exome data (#8113); - VAT Readme updates (#8090); - WDL and python scripts to use the VDS in the VAT (#8077); - VS-757 - Use JASIX to make sub-jsons of annotated output of Nirvana (#8133); - add note about permissions for P&S workflow to work (#8135); - VS-759 (and VS-760) (#8137); - VS-765. Scatter the RemoveDuplicates task. (#8144); - update delivery docs based on latest VDS delivery run [VS-770] (#8150); - Add monitoring to index vcf (#8151); - Make some noise when VDS validation succeeds (#8155); - Handle empty genes annotation file. (#8153); - Add escapes for otherwise problematic dataset / table names. (#8162); - New WDL to create VAT tsvs from previously generated BigQuery table. (#8165); - Treat withdrawn samples in ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:30901,Validat,ValidateVat,30901,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,2,['Validat'],['ValidateVat']
Security,"ge-4.0.0.0-local.jar HaplotypeCaller -L chr5 --reference genomes/ucsc_hg19.fasta --input NA12878_S1_md.bam --output hc_variants_7.vcf --bam-output realigned_slice_7.bam --max-reads-per-alignment-start 1000 --min-base-quality-score 0 --minimum-mapping-quality 0 --disable-read-filter MappingQualityReadFilter --disable-read-filter MappingQualityAvailableReadFilter --disable-read-filter NotSecondaryAlignmentReadFilter --disable-read-filter NotDuplicateReadFilter --disable-read-filter PassesVendorQualityCheckReadFilter --disable-read-filter NonZeroReferenceLengthAlignmentReadFilter --disable-read-filter GoodCigarReadFilter --disable-read-filter WellformedReadFilter`; [January 10, 2018 2:39:19 PM EST] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: 91.81 minutes.; Runtime.totalMemory()=7215251456; java.lang.IllegalArgumentException: Invalid interval. Contig:chr5 start:71357769 end:71357768; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:49); at org.broadinstitute.hellbender.engine.AssemblyRegion.add(AssemblyRegion.java:335); at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.fillNextAssemblyRegionWithReads(AssemblyRegionIterator.java:230); at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.loadNextAssemblyRegion(AssemblyRegionIterator.java:194); at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.next(AssemblyRegionIterator.java:135); at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.next(AssemblyRegionIterator.java:34); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:290); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.tra",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4120:1267,validat,validateArg,1267,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4120,1,['validat'],['validateArg']
Security,geImpl$5.call(StorageImpl.java:241); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:105); 	at shaded.cloud_nio.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at shaded.cloud_nio.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:240); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:232); 	... 22 more; Caused by: java.net.SocketTimeoutException: connect timed out; 	at java.net.PlainSocketImpl.socketConnect(Native Method); 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350); 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206); 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188); 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392); 	at java.net.Socket.connect(Socket.java:589); 	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:673); 	at sun.net.NetworkClient.doConnect(NetworkClient.java:175); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463); 	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558); 	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264); 	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156); 	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:162); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetH,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8275#issuecomment-1817434417:6929,secur,security,6929,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8275#issuecomment-1817434417,1,['secur'],['security']
Security,"genotypes. We should use the definition of the info annotations in the header to check how many entries each should have.; ### Outline; - Add a new validation type for info-field counts to enum and to switch statement; - Grab info headers from input VCF with something like GATKVCFUtils.getVCFHeadersFromRods(getToolkit(), variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; - In the map() function, for each info header line, call on each VCFInfoHeaderLine getCount(vc) to get the expected number of info annotation entries; - Compare the expected number with a count based on vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some additional parsing because it returns an Object; - (Bonus points if you use the isFixedCount() and getCount() functions on the VCF info header line to simplify annotations that aren't according to the number of alt alleles); ### Test data. /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; Should fail AC/AF validation at ; `1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120`; See results using:. ```; use VCFtools; vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; ```. which outputs:; `INFO field at 1:768589 .. INFO tag [AC=1] expected different number of values (expected 2, found 1),INFO tag [AF=0.00047] expected different number of values (expected 2, found 1)`; ### Notes. Currently, all the validation modes call out to HTSJDK. Do we want to put the new functionality there as well?. ---. @yfarjoun commented on [Thu Jul 16 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122130280). I think that it is very appropriate to validate in htsjdk. On Thu, Jul 16, 2015 at 4:05 PM, ldgauthier notifications@github.com; wrote:. > Currently ValidateVariants relies on genotypes to transitively check that; > each alt allele occurs in at least one sample and that the AC adds up.; > However, this can fail on sites-only files because there are no geno",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:1332,validat,validation,1332,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validation']
Security,get gcloud authorization working on travis,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/444:11,authoriz,authorization,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/444,1,['authoriz'],['authorization']
Security,"gine; 19:10:31.451 INFO CalculateContamination - Shutting down engine; [March 6, 2022 7:10:31 PM CST] org.broadinstitute.hellbender.tools.walkers.contamination.CalculateContamination done. Elapsed time: 0.01 minutes.; Runtime.totalMemory()=2141192192; java.lang.IllegalArgumentException: there is no such column: contig; 	at org.broadinstitute.hellbender.utils.tsv.DataLine.columnIndex(DataLine.java:483); 	at org.broadinstitute.hellbender.utils.tsv.DataLine.get(DataLine.java:452); 	at org.broadinstitute.hellbender.utils.tsv.DataLine.get(DataLine.java:581); 	at org.broadinstitute.hellbender.tools.walkers.contamination.PileupSummary$PileupSummaryTableReader.createRecord(PileupSummary.java:193); 	at org.broadinstitute.hellbender.tools.walkers.contamination.PileupSummary$PileupSummaryTableReader.createRecord(PileupSummary.java:188); 	at org.broadinstitute.hellbender.utils.tsv.TableReader.fetchNextRecord(TableReader.java:364); 	at org.broadinstitute.hellbender.utils.tsv.TableReader.access$200(TableReader.java:99); 	at org.broadinstitute.hellbender.utils.tsv.TableReader$1.hasNext(TableReader.java:472); 	at java.util.Iterator.forEachRemaining(Iterator.java:115); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472); 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566); 	at org.broadinstitute.hellbender.utils.tsv.TableReader.toList(TableReader.java:532); 	at org.broadinstitute.hellbender.tools.walkers.contamination.PileupSummary.readFromFile(PileupSummary.java:139); 	at org.broadinstitute.hellbender.tools.walkers.contamination.CalculateContamination.doWork(CalculateContamination.java:116); 	at org.broadinstitute.hell",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7707:3994,access,access,3994,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7707,1,['access'],['access']
Security,google-cloud-java: CloudStorageReadChannel.create() does a GCS access outside of the retry mechanism in CloudStorageReadChannel.read(),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3253:63,access,access,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3253,1,['access'],['access']
Security,google-cloud-nio 0.123.23: certain non-requester-pays accesses fail when --gcs-project-for-requester-pays is specified,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716:54,access,accesses,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716,1,['access'],['accesses']
Security,google.cloud.RetryHelper.runWithRetries(RetryHelper.java:47); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.secu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:6913,secur,security,6913,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,gradlew bundle --stacktrace; > Task :gatkDoc FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':gatkDoc'.; > Javadoc generation failed. Generated Javadoc options file (useful for troubleshooting): '/home/cb2/gatk/build/tmp/gatkDoc/javadoc.options'. * Try:; Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Exception is:; org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':gatkDoc'.; at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.accept(ExecuteActionsTaskExecuter.java:166); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.accept(ExecuteActionsTaskExecuter.java:163); at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:191); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:156); at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:62); at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:108); at org.gradle.api.internal.tasks.execution.ResolveBeforeExecutionOutputsTaskExecuter.execute(ResolveBeforeExecutionOutputsTaskExecuter.java:67); at org.gradle.api.internal.tasks.execution.ResolveAfterPreviousExecutionStateTaskExecuter.execute(ResolveAfterPreviousExecutionStateTaskExecuter.java:46); at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:94); at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46); at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:95); at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57); at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskEx,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4155#issuecomment-566796716:2108,Validat,ValidatingTaskExecuter,2108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4155#issuecomment-566796716,1,['Validat'],['ValidatingTaskExecuter']
Security,"gs://depmapomicsdata/1000g_pon.hg38.vcf.gz; 20:59:55.629 INFO Mutect2 - Shutting down engine; [October 4, 2021 8:59:55 PM GMT] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.12 minutes.; Runtime.totalMemory()=876609536; code: 403; message: pet-102022583875839491351@broad-firecloud-ccle.iam.gserviceaccount.com does not have storage.buckets.get access to the Google Cloud Storage bucket.; reason: forbidden; location: null; retryable: false; com.google.cloud.storage.StorageException: pet-102022583875839491351@broad-firecloud-ccle.iam.gserviceaccount.com does not have storage.buckets.get access to the Google Cloud Storage bucket.; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:229); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:406); at com.google.cloud.storage.StorageImpl$4.call(StorageImpl.java:217); ...; ```. This happens while it runs the command:. ```; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx15500m\ ; -jar /root/gatk.jar Mutect2 -R gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta\ ; -I gs://cclebams/hg38_wes/CDS-00rz9N.hg38.bam -tumor BC1_HAEMATOPOIETIC_AND_LYMPHOID_TISSUE --germline-resource gs://gcp-public-data--gnomad/release/3.0/vcf/genomes/gnomad.genomes.r3.0.sites.vcf.bgz\ ; -pon gs://gatk-best-practices/somatic-hg38/1000g_pon.hg38.vcf.gz\ ; -L gs://fc-secure-d2a2d895-a7af-4117-bdc7-652d7d268324/7a157f4a-7d93-4a3e-aaf4-c41833463f5a/Mutect2/3be8ce8e-1075-4063-bc43-6f61e386c3f5/call-SplitIntervals/cacheCopy/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list\ ; -O output.vcf.gz --f1r2-tar-gz f1r2.tar.gz --gcs-project-for-requester-pays broad-firecloud-ccle; ```. But I gave read (both regular and legacy) access to gs://cclebams (this is a requester pays bucket). This was done on GATK 4.2.2 docker. Best,",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7492:2132,secur,secure-,2132,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7492,2,"['access', 'secur']","['access', 'secure-']"
Security,"gsutil working is not a good predictor of gatk working. It's possible for default credentials to be wrong but gsutil credentials to be fine at the same time. Here is an example of how to get into this situation:. ```; // set application credentials; gcloud auth login; // unset default credentials (alternatively, forget to set them in the first place); gcloud auth application-default revoke; // gsutil works; gsutil cat $VCF > /dev/null; // GATK does not work; ./gatk-launch SelectVariants --verbosity=DEBUG -V $VCF -L 1:1000-2000 -O /tmp/foo.vcf; A USER ERROR has occurred: Couldn't read file (...); ```. Please make sure to set up Google Cloud access as follows:; ```; $ gcloud auth application-default login; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2415#issuecomment-281526964:648,access,access,648,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2415#issuecomment-281526964,1,['access'],['access']
Security,"h a stack trace:; ```; code: 401; message: Anonymous caller does not have storage.objects.get access to joel-cram/SAM24339124.cram.; reason: required; location: Authorization; retryable: false; com.google.cloud.storage.StorageException: Anonymous caller does not have storage.objects.get access to joel-cram/SAM24339124.cram.; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:220); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:415); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:198); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:195); at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:89); at com.google.cloud.RetryHelper.run(RetryHelper.java:74); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:51); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:195); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:673); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:429); at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:206); ```. ```; Caused by: shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 401 Unauthorized; {; ""code"" : 401,; ""errors"" : [ {; ""domain"" : ""global"",; ""location"" : ""Authorization"",; ""locationType"" : ""header"",; ""message"" : ""Anonymous caller does not have storage.objects.get access to joel-cram/SAM24339124.cram."",; ""reason"" : ""required""; } ],; ""message"" : ""Anonymous caller does not have storage.objects.get access to joel-cram/SAM24339124.cram.""; }; ```. ### Desired; Something like ""Unable to read gs://joel-cram/SAM24339124.cram due to permissions. Have you enabled Google Cloud Application Default Credentials by running 'gcloud auth application-default login'? See [this forum post] for details.""",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5468:1992,Authoriz,Authorization,1992,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5468,3,"['Authoriz', 'access']","['Authorization', 'access']"
Security,h/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9Db2xsZWN0RjFSMkNvdW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `0.917% <0%> (-99.083%)` | `1% <0%> (-12%)` | |; | [.../walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | [...ientation/ReadOrientationModelIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9SZWFkT3JpZW50YXRpb25Nb2RlbEludGVncmF0aW9uVGVzdC5qYXZh) | `1.667% <0%> (-98.333%)` | `1% <0%> (-5%)` | |; | ... and [154 more](https://codecov.io/gh/broadinstitute/gatk/pull/5397/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437157098:3542,validat,validation,3542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437157098,1,['validat'],['validation']
Security,"h/supportingMultiA.vcf; > ; > which outputs:; > INFO field at 1:768589 .. INFO tag [AC=1] expected different number of; > values (expected 2, found 1),INFO tag [AF=0.00047] expected different; > number of values (expected 2, found 1); > Notes; > ; > Currently, all the validation modes call out to HTSJDK. Do we want to put; > the new functionality there as well?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1053. ---. @ldgauthier commented on [Fri Jul 17 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122308040). Today I learned that the way we currently build GATK, you can't point to a local htsjdk jar anymore, so this task will be two-fold:; 1) Make a PR to htsjdk with a new function in the VariantContext class for validateInfoFieldCounts(VCFInfoHeaderLine headerLine) or similar; add a test to VariantContextUnitTest.java; 2) After change 1) is merged, update ValidateVariants accordingly to use the new function and add a test to its integration tests. ---. @vdauwera commented on [Fri May 27 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-222213763). @ldgauthier is this still a thing? (in the sense of not having been addressed in htsjdk). ---. @ldgauthier commented on [Fri May 27 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-222214083). Still a thing. No work has been done here AFAIK. ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-260465013). This seems like fairly low-hanging fruit -- @ronlevine . ---. @ronlevine commented on [Wed Nov 23 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262613152). @ldgauthier Shouldn't a locus without genotypes bypass `AC` validation, given it's defined as: `Allele count in genotypes, for each ALT allele, in the same order as listed`?. ---. @ldgauthier commented on [Wed No",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:4521,Validat,ValidateVariants,4521,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['Validat'],['ValidateVariants']
Security,haded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:92); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:47); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:992); 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.Abstra,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685:6310,secur,security,6310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685,1,['secur'],['security']
Security,handle normal reads in validation sample in BasicSomaticValidator,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5322:23,validat,validation,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5322,1,['validat'],['validation']
Security,hashtable lookups are expensive in Kryo and they add up to 15% or more of runtime (top hotspot on Xprof). https://twitter.com/aphyr/status/478638361150636032. This PR turns off reference tracking in Kryo which speeds things up ~7.2mins vs 7.4mins on MarkDuplicatesSpark but it's a bit risky because I think it may result in an infinite loop for cyclic object graphs. We do not have any cyclic object graphs now and so it's fine. The PR is to open a convo about this.; @tomwhite @droazen @laserson wdyt?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1734:0,hash,hashtable,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1734,1,['hash'],['hashtable']
Security,"have been written, a new file is created with the index at the top and the contents of the temporary .pgen file appended to it. When `WRITE_SEPARATE_INDEX` is selected, the index is instead written to a separate .pgi file. The default is `WRITE_AND_COPY`. #### max-alt-alleles; The PGEN format can only support up to 254 alt alleles per site. This argument allows you to specify a limit. The default is the max of 254. Any sites with more alt alleles than the specified max will not be written. #### lenient-ploidy-validation; PGEN is a bit quirky in that it requires samples to be diploid but has a special case for sex chromosomes, which are allowed to be haploid. By default, any attempt to write a record with an unsupported ploidy will result in an exception being thrown. If this flag is used, then ploidy failures will instead be logged and the records will be written as missing. #### writer-log-file; The C++ code in the PGEN writer in PGEN-JNI will log sites that exceed max-alt-alleles and with unsupported ploidy (if lenient-ploidy-validation is set) to the specified log file, if this argument is set. #### allow-empty-pgen; Empty PGEN files are not technically valid PGEN files. However, for parallel processing purposes, it is sometimes helpful to allow the creation of empty files when there are no variants to be written. The GvsExtractCallsetPgenMerged workflow relies on this. If this flag is set and no variants are written, an empty .pgen, .psam, and .pvar.zst file will be written in `onShutdown()`. By default (i.e. if this flag is not set), if there are no variants written, an exception will be thrown. . ### Part 3: GvsExtractCallsetPgenMerged; GvsExtractCallsetPgenMerged is a WDL workflow that calls ExtractCohortToPgen to extract data from GVS and write it to PGEN files, and then merges those PGEN files by chromosome. This workflow has 3 steps:. #### Step 1: GvsExtractCallsetPgen; This is a workflow based very closely on the GvsExtractCallset workflow (which is used f",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708:5098,validat,validation,5098,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708,1,['validat'],['validation']
Security,"he Y chromosome, but possibly in other places as well) due to changes between the two references. ; ; 12:37:55.679 INFO  ProgressMeter - Starting traversal ; ; 12:37:55.679 INFO  ProgressMeter -        Current Locus  Elapsed Minutes    Features Processed  Features/Minute ; ; 12:37:56.198 WARN  FuncotatorUtils - Reference allele is different than the reference coding sequence (strand: -, alt = G, ref G != T reference coding seq) @\[chr1:13839497\]!  Substituting given allele for sequence code (TTC->GTC) ; ; 12:37:56.213 INFO  FuncotateSegments - Shutting down engine ; ; \[February 9, 2022 12:37:56 PM EST\] org.broadinstitute.hellbender.tools.funcotator.FuncotateSegments done. Elapsed time: 0.24 minutes. ; ; Runtime.totalMemory()=3139436544 ; ; java.lang.IllegalArgumentException: Invalid interval. Contig:chr1 start:29534 end:14501 ; ;     at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:804) ; ;     at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59) ; ;     at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:35) ; ;     at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.findInclusiveExonIndex(SegmentExonUtils.java:95) ; ;     at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.segment.SegmentExonUtils.determineSegmentExonPosition(SegmentExonUtils.java:63) ; ;     at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2938) ; ;     at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSegmentFuncotations(GencodeFuncotationFactory.java:2914) ; ;     at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsOnSegment(GencodeFuncotationFactory.java:2866) ; ;     at org.broadinstitute.hellbender.tools.funcotator.DataSourceF",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7676:2483,validat,validatePositions,2483,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7676,1,['validat'],['validatePositions']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.apache.hadoop.ipc.Client.call(Client.java:1475); 	at org.apache.hadoop.ipc.Client.call(Client.java:1412); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:229); 	at com.sun.proxy.$Proxy10.getBlockLocations(Unknown Source); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getBlockLocations(ClientNamenodeProtocolTranslatorPB.java:255); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.apache.hadoop.io.retry.RetryInvocation,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:9686,secur,security,9686,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:237); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:488); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:468); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:458); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:30); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.ja,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:3528,secur,security,3528,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106); 	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:73); 	at org.apache.hadoop.hdfs.DFSClient.callGetBlockLocations(DFSClient.java:1228); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1213); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(D,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:6445,secur,security,6445,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,he.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException: Failed to read bam header from /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; Caused by:File does not exist: /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:72); 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:1865,secur,security,1865,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['secur'],['security']
Security,"his version includes a fix for the issue we were seeing which required multiple pulls; removed the workaround (fixes #1404). The problem was that we were using an ssh git remote. git-lfs fails in this case because it can't authenticate. (unclear to me if this is a bug or not, I don't know if github requires authentication for ssh access to public repos). In versions <= 1.1.0 git-lfs was falling back to trying over an http connection. They removed this fallback mechanism in 1.1.1. See github/git-lfs#1090 for discussion.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1600:223,authenticat,authenticate,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1600,3,"['access', 'authenticat']","['access', 'authenticate', 'authentication']"
Security,"houghts for @samuelklee. For example, CollectFragmentCounts produces the following hybrid-type `@RG` line:. ![screenshot 2018-02-22 15 05 48](https://user-images.githubusercontent.com/11543866/36908820-66b90938-1e0a-11e8-8830-793ff3f71e96.png). ```; @RG ID:GATKCopyNumber SM:HCC1143_tumor; ```; Official format specifications are at https://samtools.github.io/hts-specs/. Let me briefly describe the #choices. ---; If we are to follow conventions used in the alignment world (SAM specs, for interval lists), then... We note data transformations using `@PG` program groups. These can be added successively to the same data file, given unique `@PG ID` fields, and collectively these lines showcase the history of data transformations for a dataset. The `@RG` group is reserved for lane level data and yes, does unify based on the sample or library. ---; If we examine VCFs, the convention is to use `#` hashtags to denote header rows (VCF specs). Double hashtags `##` denote all metadata lines and a single hashtag `#` denotes the line with the column labels. Here are some select rows from an M2 VCF header:; ```; ##fileformat=VCFv4.2; ##FILTER=<ID=artifact_in_normal,Description=""artifact_in_normal"">; ...; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths for the ref and alt alleles in the order listed"">; ...; ##GATKCommandLine=<ID=FilterMutectCalls,CommandLine=""FilterMutectCalls...; ...; ##GATKCommandLine=<ID=Mutect2,CommandLine=""Mutect2 --tumor-sample HCC1143_tumor ...; ...; ##INFO=<ID=TLOD,Number=A,Type=Float,Description=""Tumor LOD score"">; ##Mutect Version=2.1-beta; ##command=FilterByOrientationBias --output hcc1143_T_clean-filtered.vcf...; ...; ##contig=<ID=chr1,length=248956422>; ##contig=<ID=chr2,length=242193529>; ...; ##contig=<ID=HLA-DRB1*16:02:01,length=11005>; ##filtering_status=These calls have been filtered by FilterMutectCalls to label false positives with a list of failed filters and true positives with PASS.; ##normal_sample=HCC1143_normal; ##orientatio",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4481:963,hash,hashtags,963,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4481,2,['hash'],"['hashtag', 'hashtags']"
Security,"htsjdk versions older than 2.1.1 would remove NM and MD tags on bam->cram compression, and then automatically regenerate NM tags when reading cram. Starting with 2.1.1, in order to ensure lossless round-tripping, it no longer does either, and restores only the tags present in the compressed file . As a result, any cramfile read with 2.1.1+ that was generated with older htsjdk versions (or samtools) will fail validation due to missing NM tags. So this PR contains an updated cram file that contains NM tags for the SAMFileValidation tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1551:412,validat,validation,412,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1551,1,['validat'],['validation']
Security,https://gatk-jenkins.broadinstitute.org/ is currently giving a warning when you try to visit it. We need to fix it's certificate so that it doesn't give a scary warning. It says it expired several days ago. @davidbernick Could you look into this?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2446:117,certificate,certificate,117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2446,1,['certificate'],['certificate']
Security,"https://github.com/broadinstitute/gatk/blob/c6daf7dd02b866907fbfebad150baeb540c35bce/src/main/java/org/broadinstitute/hellbender/tools/walkers/sv/JointGermlineCNVSegmentation.java#L701. I'm running into a recurrent issue in JointGermlineCNVSegmentation, running after PostprocessGermlineCNVCalls in a gCNV pipeline. A number of batches are being merged in parallel - some of those succeed, some fail. It's not clear just yet if this is a deterministic failure, I'll re-run a few times and see if I can answer that. . ```text; org.broadinstitute.hellbender.exceptions.GATKException: Exception thrown at chrX:6383391 [VC SAMPLE_ID.segments.vcf.gz @ chrX:6383391-17732942 Q3076.53 of type=NO_VARIATION alleles=[N*] attr={END=17732942} GT=GT:CN:NP:QA:QS:QSE:QSS	0:1:581:1:3077:4:20 filters=. ... Caused by: java.lang.IllegalStateException: Encountered genotype with ploidy 1 but 2 alleles.; 	at org.broadinstitute.hellbender.utils.Utils.validate(Utils.java:814); 	at org.broadinstitute.hellbender.tools.walkers.sv.JointGermlineCNVSegmentation.correctGenotypePloidy(JointGermlineCNVSegmentation.java:701); 	at org.broadinstitute.hellbender.tools.walkers.sv.JointGermlineCNVSegmentation.prepareGenotype(JointGermlineCNVSegmentation.java:682); ```. The VCF row in question is . ```text; chrX	6383391	CNV_chrX_6383391_17732942	N	.	3076.53	.	END=17732942	GT:CN:NP:QA:QS:QSE:QSS	0:1:581:1:3077:4:20; ```. The characterisation of this row as `type=NO_VARIATION alleles=[N*]` seems... partially correct? There is no variation at this locus, but I'm not sure why alleles is `N*`. In this situation, as I read it, the first clause should be satisfied: 1 allele, and allele is no-call. Instead the variant process is dying in the else side of the condition. Could you clarify if I'm interpreting this correctly?. Relevant versioning:; ```; 13:18:38.320 INFO JointGermlineCNVSegmentation - ------------------------------------------------------------; 13:18:38.321 INFO JointGermlineCNVSegmentation - The Genome Analy",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8834:933,validat,validate,933,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8834,1,['validat'],['validate']
Security,"i,. Using GATK mutect2's wdl file on Terra (version 21 on agora) I keep getting the same error:; ""pet-102022583875839491351@broad-firecloud-ccle.iam.gserviceaccount.com does not have storage.buckets.get access to the Google Cloud Storage bucket"" . Here is part of the stacktrace : ; ```; 20:59:48.744 INFO Mutect2 - Inflater: IntelInflater; 20:59:48.744 INFO Mutect2 - GCS max retries/reopens: 20; 20:59:48.744 INFO Mutect2 - Requester pays: enabled. Billed to: broad-firecloud-ccle; 20:59:48.744 INFO Mutect2 - Initializing engine; 20:59:54.630 INFO FeatureManager - Using codec VCFCodec to read file gs://depmapomicsdata/1000g_pon.hg38.vcf.gz; 20:59:55.629 INFO Mutect2 - Shutting down engine; [October 4, 2021 8:59:55 PM GMT] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.12 minutes.; Runtime.totalMemory()=876609536; code: 403; message: pet-102022583875839491351@broad-firecloud-ccle.iam.gserviceaccount.com does not have storage.buckets.get access to the Google Cloud Storage bucket.; reason: forbidden; location: null; retryable: false; com.google.cloud.storage.StorageException: pet-102022583875839491351@broad-firecloud-ccle.iam.gserviceaccount.com does not have storage.buckets.get access to the Google Cloud Storage bucket.; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:229); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:406); at com.google.cloud.storage.StorageImpl$4.call(StorageImpl.java:217); ...; ```. This happens while it runs the command:. ```; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx15500m\ ; -jar /root/gatk.jar Mutect2 -R gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta\ ; -I gs://cclebams/hg38_wes/CDS-00rz9N.hg38.bam -tumor BC1_HAEMATOPOIETIC_AND_LYMPHOID_TISSUE --germline-resource gs://gcp-public-data--gnomad/release/3",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7492:982,access,access,982,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7492,1,['access'],['access']
Security,"ializing engine. 07:33:16.008 INFO FeatureManager - Using codec VCFCodec to read file file:///nobackup/lnsingh/MTRNA/out/COVSUBJ_0121_1_N_HA_filtered.humanspliced.gvcf.gz. 07:33:16.053 INFO IntervalArgumentCollection - Processing 16569 bp from intervals. 07:33:16.059 INFO FilterMutectCalls - Done initializing engine. 07:33:16.157 INFO ProgressMeter - Starting traversal. 07:33:16.157 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute. 07:33:16.158 INFO FilterMutectCalls - Starting pass 0 through the variants. 07:33:17.341 INFO FilterMutectCalls - Finished pass 0 through the variants. 07:33:17.404 INFO FilterMutectCalls - Shutting down engine. [September 20, 2020 7:33:17 AM PDT] org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls done. Elapsed time: 0.04 minutes. Runtime.totalMemory()=1256194048. java.lang.IllegalArgumentException: alpha must be greater than 0 but got NaN. at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:727). at org.broadinstitute.hellbender.utils.param.ParamUtils.isPositive(ParamUtils.java:165). at org.broadinstitute.hellbender.tools.walkers.readorientation.BetaDistributionShape.<init>(BetaDistributionShape.java:13). at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.BinomialCluster.getFuzzyBinomial(BinomialCluster.java:43). at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.BinomialCluster.<init>(BinomialCluster.java:17). at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.initializeClusters(SomaticClusteringModel.java:184). at org.broadinstitute.hellbender.tools.walkers.mutect.clustering.SomaticClusteringModel.learnAndClearAccumulatedData(SomaticClusteringModel.java:325). at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.Mutect2FilteringEngine.learnParameters(Mutect2FilteringEngine.java:153). at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls.afterNthPass(Filte",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6850:4600,validat,validateArg,4600,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6850,1,['validat'],['validateArg']
Security,"ile:///run/media/riadh/One%20Touch/Reference_data_b38/gnomad.genomes.v3.1.2.sites.chr3.vcf.bgz; 10:58:19.971 INFO FeatureManager - Using codec VCFCodec to read file file:///run/media/riadh/My%20Book_From%20Eiklid/Analysis/gatk-4.2.4.1/ensembl-vep/PE69_chr3.vcf; 10:58:20.063 INFO VariantAnnotator - Done initializing engine; 10:58:20.091 WARN VariantAnnotatorEngine - The requested expression attribute ""gnomad.ALT"" is missing from the header in its resource file gnomad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:3961,Validat,Validation,3961,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['Validat'],['Validation']
Security,"ility to tweak sample-every-Nth-variant parameter for SNP model creation (#8019); - add initial notebook copy pasta (#8008); - add sample_table_timestamp to GetNumSamplesLoaded (#8022); - Batched Avro export [VS-630] (#8020); - Updating references to old GATK for VS-620 (#8023); - VS-517 Use standard version of GetBQTableLastModifiedDatetime in GvsValidateVat (#8024); - Fix bug in GvsWithdrawSamples.wdl (#8026); - Ah 617 exposing the drop_state parameter to the GvsJointVariantCalling wdl used for beta (and internal customer) (#8032); - Expose maximum-training-variants VQSR parameter [VS-634] (#8029); - Callset statistics [VS-560] (#8018); - Check for withdrawn before exporting to AVRO files [VS-646] (#8039); - Small updates to GVS Integration WDL [VS-618] (#8042); - Rework Hail script generation [VS-616] (#8034); - Alpine based Variant Store Docker image [VS-648] (#8044); - update warp version (#7906); - Fail Avro extract and callset stats on bad filter name [VS-655] (#8046); - Vs 629 failure to retrieve job information during ingest (#8047); - Restore accidentally removed bcftools [VS-661] (#8051); - Allowing our pipeline to function with a sample size of one (#8055); - Vs 665 re create vcf for cd 68 po 52339 with ad padding fixed (#8057); - VS-665 and VS-620 updating code to use latest docker images containing Rori's AD calculation changes in extract (#8061); - updating the beta workflow to use the latest jar, representing the version of GATK George tested against the workflow (#8062); - VS-637 Address a couple of issues in SampleLoadStatus handling in GVSImportGenomes. (#8052); - Revert Alpinizing of apt dependent task [VS-688] (#8065); - Fix missing vat schema JSONs [VS-699] (#8072); - Fix integration expectations for fixed AD [VS-689] (#8066); - VS-698 Remove unnecessary columns from Call set statistics (#8073); - Fix Dockerfile nits that break 20.10.21 (#8078); - Nirvana 3.18.1 Docker images support [VS-661] (#8082); - Add option to not prepare __REF_DATA or __",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:28794,Expose,Expose,28794,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,2,['Expose'],['Expose']
Security,"ilter.OrientationBiasFilterer.annotateVariantContextsWithFilterResults(OrientationBiasFilterer.java:216); 	at org.broadinstitute.hellbender.tools.exome.FilterByOrientationBias.onTraversalSuccess(FilterByOrientationBias.java:168); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:781); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:115); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:170); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:189); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:122); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:143); 	at org.broadinstitute.hellbender.Main.main(Main.java:221); ```; and; ```; java.lang.IllegalStateException: Allele in genotype G* not in the variant context [C*, T]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.tools.exome.orientationbiasvariantfilter.OrientationBiasFilterer.annotateVariantContextsWithFilterResults(OrientationBiasFilterer.java:216); 	at org.broadinstitute.hellbender.tools.exome.FilterByOrientationBias.onTraversalSuccess(FilterByOrientationBias.java:211); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:840); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:115); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:170); 	at org.broadinstitute.he",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3291:2227,validat,validateGenotypes,2227,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3291,1,['validat'],['validateGenotypes']
Security,"imVariants - Reference allele is too long (212) at position chr2_KI270894v1_alt:202602; skipping that record. Set --reference_window_stop >= 212 ; INFO 21:38:54,233 LeftAlignAndTrimVariants - Reference allele is too long (220) at position chr2_KI270894v1_alt:204859; skipping that record. Set --reference_window_stop >= 220 ; INFO 21:38:54,237 LeftAlignAndTrimVariants - Reference allele is too long (262) at position chr2_KI270894v1_alt:207863; skipping that record. Set --reference_window_stop >= 262 ; 0 variants were aligned; INFO 21:38:54,554 ProgressMeter - done 3.31246907E8 31.8 m 5.0 s 99.7% 31.8 m 5.0 s ; INFO 21:38:54,554 ProgressMeter - Total runtime 1905.29 secs, 31.75 min, 0.53 hours ; ------------------------------------------------------------------------------------------; Done. There were 4 WARN messages, the first 4 are repeated below.; WARN 17:39:57,688 IndexDictionaryUtils - Track variant doesn't have a sequence dictionary built in, skipping dictionary validation ; WARN 18:13:42,039 SimpleTimer - Clock drift of -1,503,348,737,016,211,299 - -1,503,346,772,578,127,937 = 1,964,438,083,362 nanoseconds detected, vs. max allowable drift of 5,000,000,000. Assuming checkpoint/restart event. ; WARN 20:14:18,043 SimpleTimer - Clock drift of -1,503,355,916,564,964,097 - -1,503,348,737,015,111,124 = 7,179,549,852,973 nanoseconds detected, vs. max allowable drift of 5,000,000,000. Assuming checkpoint/restart event. ; WARN 21:10:35,064 SimpleTimer - Clock drift of -1,503,359,203,412,549,926 - -1,503,355,916,564,817,209 = 3,286,847,732,717 nanoseconds detected, vs. max allowable drift of 5,000,000,000. Assuming checkpoint/restart event. ; ------------------------------------------------------------------------------------------; WMCF9-CB5:Mutect2 shlee$ ; ```. ### Notice the following line from above. > 0 variants were aligned. Also, it would be great if the tool, which appears to keep track of the lengths of reference alleles that are too long, could give me the **ma",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487:7468,validat,validation,7468,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487,1,['validat'],['validation']
Security,"ime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12); 	at scala.App.$anonfun$main$1$adapted(App.scala:76); 	at scala.collection.immutable.List.foreach(List.scala:389); 	at scala.App.main(App.scala:76); 	at scala.App.main$(App.scala:74); 	at StudentAws$.main(StudentAws.scala:8); 	at StudentAws.main(StudentAws.scala); Exception in thread ""main"" java.lang.UnsatisfiedLinkError: org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Ljava/lang/String;I)Z; 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Native Method); 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access(NativeIO.java:793); 	at org.apache.hadoop.fs.FileUtil.canRead(FileUtil.java:1249); 	at org.apache.hadoop.fs.FileUtil.list(FileUtil.java:1454); 	at org.apache.hadoop.fs.RawLocalFileSystem.listStatus(RawLocalFileSystem.java:601); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.fs.ChecksumFileSystem.listStatus(ChecksumFileSystem.java:761); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.getAllCommittedTaskPaths(FileOutputCommitter.java:334); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJobInternal(FileOutputCommitter.java:404); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJob(FileOutputCommitter.java:377); 	at org.apache.parquet.hadoop.ParquetOutputCommitter.commitJob(ParquetOutputCommitter.java:48); 	at org.apache.spark.internal.io.HadoopMapReduceCommitProtocol.commitJob(HadoopMapReduceCommitProtocol.scala:192); 	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$writeAndCommit$3(FileFormatWriter.scala:275); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12); 	at org.apache.spark.util.Utils$.timeTakenMs(Utils.scala:640); 	at o",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8587:8246,Checksum,ChecksumFileSystem,8246,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8587,1,['Checksum'],['ChecksumFileSystem']
Security,"in `BwaSparkEngine` the method `alignWithBwa` is like this. ```; public JavaRDD<GATKRead> alignWithBWA(final JavaSparkContext ctx, final JavaRDD<GATKRead> unalignedReads, final SAMFileHeader readsHeader) {; //Note: SparkContext is not serializable so we don't store it in the engine and set this property here. Setting it multiple times is fine.; // ensure reads in a pair fall in the same partition (input split), so they are processed together; ctx.hadoopConfiguration().setBoolean(BAMInputFormat.KEEP_PAIRED_READS_TOGETHER_PROPERTY, true);. final JavaRDD<Tuple2<ShortRead, ShortRead>> shortReadPairs = convertToUnalignedReadPairs(unalignedReads);; final JavaRDD<String> samLines = align(shortReadPairs);; final SAMLineParser samLineParser = new SAMLineParser(new DefaultSAMRecordFactory(), ValidationStringency.SILENT, readsHeader, null, null);; final Broadcast<SAMLineParser> samLineParserBroadcast = ctx.broadcast(samLineParser);; return samLines.map(r -> new SAMRecordToGATKReadAdapter(samLineParserBroadcast.getValue().parseLine(r)));; }; ```. note that the parser is distributed by broadcast and thus shared by all tasks in an executor. That's a race condition because the parser is mutable (eg the `fields` field in the coded that gets mutated for each decode call). https://github.com/broadinstitute/gatk/issues/2039 may be caused by this bug",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2050:793,Validat,ValidationStringency,793,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2050,1,['Validat'],['ValidationStringency']
Security,"ine the earlier stages of your pipeline that produce your bam to ensure you get a correctly formed bam. I'm going to close this ticket now since this doesn't appear to be an issue with Mutect2. (base) wm462-624:Downloads fleharty$ java -jar $PICARD ValidateSamFile I=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam ; INFO	2020-07-14 11:25:52	ValidateSamFile	. ********** NOTE: Picard's command line syntax is changing.; **********; ********** For more information, please see:; ********** https://github.com/broadinstitute/picard/wiki/Command-Line-Syntax-Transition-For-Users-(Pre-Transition); **********; ********** The command line looks like this in the new syntax:; **********; ********** ValidateSamFile -I concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam; **********. 11:25:52.673 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/fleharty/resources/picard.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Tue Jul 14 11:25:52 EDT 2020] ValidateSamFile INPUT=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam MODE=VERBOSE MAX_OUTPUT=100 IGNORE_WARNINGS=false VALIDATE_INDEX=true INDEX_VALIDATION_STRINGENCY=EXHAUSTIVE IS_BISULFITE_SEQUENCED=false MAX_OPEN_TEMP_FILES=8000 SKIP_MATE_VALIDATION=false VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false; [Tue Jul 14 11:25:52 EDT 2020] Executing as fleharty@wm462-624 on Mac OS X 10.15.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.4-SNAPSHOT; WARNING	2020-07-14 11:25:52	ValidateSamFile	NM validation cannot be performed without the reference. All other validations will still occur.; ERROR: Record 18321, Read name UMI-ATT-GAA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 26312, Read name UMI-CCT-TTC-1, Zero-l",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132:1094,Validat,ValidateSamFile,1094,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132,1,['Validat'],['ValidateSamFile']
Security,ineCNVCaller - . !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: GermlineCNVCaller is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 21:54:28.627 INFO GermlineCNVCaller - Initializing engine; 21:54:31.994 INFO GermlineCNVCaller - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 21:54:33.457 INFO GermlineCNVCaller - Intervals specified...; 21:54:34.113 INFO IntervalArgumentCollection - Processing 10999816 bp from intervals; 21:54:34.145 INFO GermlineCNVCaller - No GC-content annotations for intervals found; explicit GC-bias correction will not be performed...; 21:54:34.217 INFO GermlineCNVCaller - Running the tool in the COHORT mode...; 21:54:34.217 INFO GermlineCNVCaller - Validating and aggregating data from input read-count files...; 21:54:34.241 INFO GermlineCNVCaller - Aggregating read-count file /home/shlee/gcnv/low_coverage_1k/HG00096.lc.soohee1k.hdf5 (1 / 24); 21:54:36.539 INFO GermlineCNVCaller - Aggregating read-count file /home/shlee/gcnv/low_coverage_1k/HG00268.lc.soohee1k.hdf5 (2 / 24); 21:54:37.967 INFO GermlineCNVCaller - Aggregating read-count file /home/shlee/gcnv/low_coverage_1k/HG00419.lc.soohee1k.hdf5 (3 / 24); 21:54:40.147 INFO GermlineCNVCaller - Aggregating read-count file /home/shlee/gcnv/low_coverage_1k/HG00759.lc.soohee1k.hdf5 (4 / 24); 21:54:41.782 INFO GermlineCNVCaller - Aggregating read-count file /home/shlee/gcnv/low_coverage_1k/HG01051.lc.soohee1k.hdf5 (5 / 24); 21:54:43.197 INFO GermlineCNVCaller - Aggregating read-count file /home/shlee/gcnv/low_coverage_1k/HG01112.lc.soohee1k.hdf5 (6 / 24); 21:54:45.169 INFO GermlineCNVCaller - Aggregating read-count file /home/shlee/gcnv/low_coverage_1k/HG01500.lc.soohee1k.hdf5 (7 / 24); 21:54:46.852 I,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4826:2913,Validat,Validating,2913,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4826,1,['Validat'],['Validating']
Security,"info annotations in the header to check; > how many entries each should have.; > Outline; > - Add a new validation type for info-field counts to enum and to; > switch statement; > - Grab info headers from input VCF with something like; > GATKVCFUtils.getVCFHeadersFromRods(getToolkit(),; > variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; > - In the map() function, for each info header line, call on each; > VCFInfoHeaderLine getCount(vc) to get the expected number of info; > annotation entries; > - Compare the expected number with a count based on; > vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some; > additional parsing because it returns an Object; > - (Bonus points if you use the isFixedCount() and getCount() functions; > on the VCF info header line to simplify annotations that aren't according; > to the number of alt alleles); > ; > Test data; > ; > /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > Should fail AC/AF validation at; > 1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120; > See results using:; > ; > use VCFtools; > vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > ; > which outputs:; > INFO field at 1:768589 .. INFO tag [AC=1] expected different number of; > values (expected 2, found 1),INFO tag [AF=0.00047] expected different; > number of values (expected 2, found 1); > Notes; > ; > Currently, all the validation modes call out to HTSJDK. Do we want to put; > the new functionality there as well?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1053. ---. @ldgauthier commented on [Fri Jul 17 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122308040). Today I learned that the way we currently build GATK, you can't point to a local htsjdk jar anymore, so this task will be two-fold:; 1) Make a PR to htsjdk with a new function in the VariantContext class for valid",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:3379,validat,validation,3379,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validation']
Security,"ing false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.2",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2585,Validat,ValidateVariants,2585,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"ining CachingIndexedFastaSequenceFile/overloads; - [ ] Update tools in the pathseq package (PathSeqBwaSpark, PathSeqScoreSpark) that do directory manipulation. [Edit] Somewhat tangentially, PathSeqBwaSpark currently rejects read inputs specified through `--inputs` and uses separate args to allow the user to identify inputs as paired or unpaired. Once this is using `GATKPathSpecifier` this could be changed to use ""--inputs"" annotated with tags instead. Might be a problem for WDL gen though (which doesn't support tags).; - [ ] Test utilities (createTempFile/Dir, etc. that return GATKPath); - [ ] Add a `toHadoopPath` method to `GATKPath` that returns a `org.apache.hadoop.fs.Path`.; - [ ] Change tools that generate multiple output files using a stem (SplitReads, etc) to use the `resolve` methods listed above once they're available.; - [ ] All usages of `PrintStream` should be replaced with `OutputStreamWriter` (code that requires printf-style formatting can use `write` with `String.format` instead of the `printf` methods). `PrintStream` doesn't propagate IOExceptions and instead requires calls to `checkError`, but almost all usages of `PrintStream` don't call it.; - [ ] Update `org.broadinstitute.hellbender.utils.report` (`GATKReport` and friends) to eliminate `File` references and `PrintStream` usages.; - [ ] Update `org.broadinstitute.hellbender.utils.recalibration` (`RecalUtils` and friends) to eliminate `File` references and `PrintStream` usages.; - [ ] Fix cases where we have a tool with a `File` that needs to be accessible to R code (determine if the code can handle non-local file paths). i.e.`VariantRecalibrator` TRANCHES_FILE.; - [ ] Fix cases where we have a tool with a `File` that needs to be accessible to Python (determine if the code can handle non-local file paths).; - [ ] `FeatureInput` should have all of it's String constructors removed, and only take GATKPath inputs. The constructor overloads that take tag Maps can be removed, and all call sites updated.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6610:2290,access,accessible,2290,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6610,2,['access'],['accessible']
Security,"institute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```; A second case involved `--alleles` input:; ```; 22	16464044	rs571268158	CCAGGTCT	C; 22	16464051	rs569099729	T	C; ```; and crashed similarly, with:; ```; java.lang.IllegalStateException: Allele in genotype CCAGGTCT* not in the variant context [T*, *, C]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.makeMergedVariantContext(AssemblyBasedCallerUtils.java:221); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:150); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:599); 	at org.broadinstitute.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5336:2898,validat,validate,2898,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336,1,['validat'],['validate']
Security,institute.hellbender.utils.locusiterator.LocusIteratorByState.lazyLoadNextAlignmentContext(LocusIteratorByState.java:288); at org.broadinstitute.hellbender.utils.locusiterator.LocusIteratorByState.hasNext(LocusIteratorByState.java:225); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.getPileupsOverReference(AssemblyBasedCallerUtils.java:443); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.ReferenceConfidenceModel.calculateRefConfidence(ReferenceConfidenceModel.java:195); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:645); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller.apply(HaplotypeCaller.java:212); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:200); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:173); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292); ```; This hypothesis is further evidenced by the fact that one user at least claims that their input file validates and that they couldn't find the problem reads by looking at the input files manually. We probably will want to look at an example file in the debugger to catch what is happening at this site. We have refactored a bunch of code adjacent to this function recently so its possible this is a recent regression.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6490:3006,validat,validates,3006,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6490,1,['validat'],['validates']
Security,"institute/gatk/issues/6553. However, it would be nice if you could actually investigate the formatting error. Unfortunately my formatting error isn't the same as reported in the other post. I have 105 error in which the 1st alternative allele is a spanning deletion and the 2nd (and 3rd) is either an indel or snp. It's true that the 2nd and 3rd allele is actually not found in my samples. I even have 7 occurances in which the 1st allele (spanning deletion) has allele frequency 1.00. my code is the following for GenotypeGVCFs:. java -Xms32G -Xmx32G -jar ${gatk4} GenotypeGVCFs -R ${ref} -V ${pipeline}/${name}\_v4.1.6.0.g.vcf.gz -O ${vcf}/${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list 2> ${log}/${name}\_v4.1.6.0\_genotype.log. for ValidateVariants:. java -Xms10G -Xmx10G -jar ${gatk4} ValidateVariants -R ${ref} -V ${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list --warn-on-errors 2> ${log}/${name}\_v4.1.6.0\_genotype\_valivar.log. the warning in ValidateVariants and the site look like this:. 14:12:15.126 WARN ValidateVariants - \*\*\*\*\* Input 1st\_v4.1.6.0.vcf.gz fails strict validation of type ALL: one or more of the ALT allele(s) for the record at position chr\_1:1088200 are not observed at all in the sample genotypes \*\*\*\*\* ; ; chr\_1 1088200 . T \*,TAAAAAAAAAAAA 64.39 . AC=8,0;AF=0.667,0.00;AN=12;DP=118;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.4286;MLEAC=7,7;MLEAF=0.583,0.583;MQ=58.73;QD=32.19;SOR=2.303 GT:AD:DP:GQ:PL ./.:9,0,0:9:.:0,0,0,0,0,0 0/0:9,0,0:9:0:0,0,113,0,113,113 ./.:10,0,0:10:.:0,0,0,0,0,0 ./.:5,0,0:5:.:0,0,0,0,0,0 1/1:0,0,1:1:0:225,15,0,15,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:12,0,0:12:.:0,0,0,0,0,0 ./.:8,0,0:8:.:0,0,0,0,0,0 0/0:3,0,0:3:0:0,0,43,0,43,43 ./.:7,0,0:7:.:0,0,0,0,0,0 ./.:1,0,0:1:.:0,0,0,0,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:3,0,0:3:.:0,0,0,0,0,0 ./.:7,0,0:7:.:0,0,0,0,0,0 1/1:0,0,0:0:0:45,3,0,3,0,0 ./.:0,0,0 1/1:0,0,1:1:0:45,3,0,3,0,0 1/1:0,0,0:0:0:267,18,0,18,0,0 ./.:9,0,0:9:.:0,0,0,0,0,0 ; . The exactly the",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6630:1840,Validat,ValidateVariants,1840,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6630,1,['Validat'],['ValidateVariants']
Security,"intReadsSpark - Deflater: IntelDeflater; 18:11:33.871 INFO PrintReadsSpark - Inflater: IntelInflater; 18:11:33.871 INFO PrintReadsSpark - GCS max retries/reopens: 20; 18:11:33.871 INFO PrintReadsSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 18:11:33.871 INFO PrintReadsSpark - Initializing engine; 18:11:33.871 INFO PrintReadsSpark - Done initializing engine; 17/10/13 18:11:33 INFO spark.SparkContext: Running Spark version 2.2.0.cloudera1; 17/10/13 18:11:34 WARN spark.SparkConf: spark.master yarn-client is deprecated in Spark 2.0+, please instead use ""yarn"" with specified deploy mode.; 17/10/13 18:11:34 INFO spark.SparkContext: Submitted application: PrintReadsSpark; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing view acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: Changing modify acls groups to: ; 17/10/13 18:11:34 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'sparkDriver' on port 45754.; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering MapOutputTracker; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering BlockManagerMaster; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/10/13 18:11:34 INFO storage.DiskBlockManager: Created local directory at /tmp/hdfs/blockmgr-ea0e0669-2981-4277-80a0-a67eddf1001d; 17/10/13 18:11:34 INFO memory.MemoryStore: ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:4108,Secur,SecurityManager,4108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,1,['Secur'],['SecurityManager']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:7981,secur,security,7981,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6275,secur,security,6275,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9763,secur,security,9763,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:77); 	at org.gradle.wrapper.Download.download(Download.java:44); 	at org.gradle.wrapper.Install$1.call(Install.java:61); 	at org.gradle.wrapper.Install$1.call(Install.java:48); 	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69); 	at org.gradle.wrapper.Install.createDist(Install.java:48); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:284); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3368); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:62); 	... 7 more; Caused by: java.net.SocketException: Connection reset; 	,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401:1659,secur,security,1659,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401,1,['secur'],['security']
Security,ion 2.16.3. $ git-lfs pull --include src/main/resources/large; No default remote. No remotes defined. Current time in UTC: ; 2018-04-20 20:10:32. ENV:; LocalWorkingDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999; LocalGitDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git; LocalGitStorageDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git; LocalMediaDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git/lfs/objects; LocalReferenceDir=; TempDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git/lfs/tmp; ConcurrentTransfers=3; TusTransfers=false; BasicTransfersOnly=false; SkipDownloadErrors=false; FetchRecentAlways=false; FetchRecentRefsDays=7; FetchRecentCommitsDays=0; FetchRecentRefsIncludeRemotes=true; PruneOffsetDays=3; PruneVerifyRemoteAlways=false; PruneRemoteName=origin; LfsStorageDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git/lfs; AccessDownload=none; AccessUpload=none; DownloadTransfers=basic; UploadTransfers=basic. Client IP addresses:; xx.xx.xx.xx; xx.xx.xx.xx; xx.xx.xx.xx; portage$ ls -latr; total 188; -rw-r--r-- 1 portage portage 428 Apr 20 22:05 codecov.yml; -rwxr-xr-x 1 portage portage 5741 Apr 20 22:05 build_docker.sh; -rw-r--r-- 1 portage portage 32161 Apr 20 22:05 build.gradle; -rw-r--r-- 1 portage portage 37502 Apr 20 22:05 README.md; -rw-r--r-- 1 portage portage 1502 Apr 20 22:05 LICENSE.TXT; -rw-r--r-- 1 portage portage 1555 Apr 20 22:05 Dockerfile; -rw-r--r-- 1 portage portage 1128 Apr 20 22:05 AUTHORS; -rw-r--r-- 1 portage portage 8237 Apr 20 22:05 .travis.yml; -rw-r--r-- 1 portage portage 395 Apr 20 22:05 .gitignore; -rw-r--r-- 1 portage portage 128 Apr 20 22:05 .gitattributes; -rw-r--r-- 1 portage portage 142 Apr 20 22:05 .dockerignore; drwxr-xr-x 2 portage portage 4096 Apr 20 22:05 resources_for_CI; drwxr-xr-x 2 portage portage 4096 Apr 20 22:05 hooks; -rwxr-xr-x 1 portage portage 5242 Apr 20 22:05 gradlew; drwxr-xr-x 3 portage port,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4687:16348,Access,AccessDownload,16348,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4687,2,['Access'],"['AccessDownload', 'AccessUpload']"
Security,"ion for variants without genotypes, but I think you already figured that out. My proposal was more general, but you're right -- AC and AF should always have the same count as alt alleles and we don't need to check the header for that. When this came up (a year and a half ago!) we were thinking about validating all the info field annotations. ---. @ronlevine commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263280085). That's exactly what I did in https://github.com/samtools/htsjdk/pull/759. I can expand this to all INFO field annotations. ---. @ldgauthier commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265221057). Expanding to all INFO annotations would be wonderful, but that can be a separate issue. ---. @ronlevine commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265223581). That's not the only one, @magicDGS requested validating the `AF` values (which can be a separate issue). . ---. @vdauwera commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265226356). I think this one requires some additional discussion, so let's hold off for now -- it's not essential for 3.7 and we can't wait any longer to release. ---. @vdauwera commented on [Mon Mar 20 2017](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-287824654). @ldgauthier Would it be ok to kick this down the road to whenever ValidateVariants gets ported to GATK4?. ---. @ldgauthier commented on [Tue Mar 21 2017](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-288223822). Yeah, this isn't critical for any production pipelines - pass that buck. On Mar 20, 2017 12:56 PM, ""Geraldine Van der Auwera"" <; notifications@github.com> wrote:. > @ldgauthier <https://github.com/ldgauthier> Would it be ok to kick this; > down the road to whenever ValidateVariants gets ported t",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:7293,validat,validating,7293,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validating']
Security,"ion. We will repeat the het-genotyping step, but this is cheap and it's probably better to repeat it to make sure filtering is applied consistently. It would also require more changes to the command line to specify where to output the hets for each sample during multisample segmentation and to skip genotyping in each scatter, if we were to go that route. There are many possible combinations of inputs that need to be tested, but the same is already true of the current ModelSegments. Furthermore, there are slight wrinkles when running in tumor-only mode (i.e., when `--normal-allelic-counts` are not available). Because each sample is genotyped indiviudally, each may yield a different set of hets (in contrast to genotyping in matched-normal mode, in which the normal determines the set of hets used in all samples). We will thus have to take the intersection of these hets before performing multisample segmentation. Unfortunately, we will not be able to re-perform this intersection in each scatter, since we will no longer have access to the hets from the other samples. However, we *will* ultimately intersect the hets from each sample with the joint segmentation before modeling, which may be a rough proxy for the intersection of hets from all samples. As always, tumor-only mode may yield suboptimal results in certain scenarios, e.g., high purity CNLOH. I think I'm OK with just documenting these wrinkles, rather than working too hard to iron them out. I think this structure sets us up nicely to accommodate germline tagging/filtering in the near future. We can still pass the Picard interval list containing the joint segmentation to the scatter for the normal, but can instead subsequently pass the *.modelBegin.seg result from the normal to the tumors. This modeled-segment file will have breakpoints identical to those from the joint segmentation (as opposed to the *.modelFinal.seg result, since that undergoes segment smoothing/merging), but will also contain the segment-level p",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-607313549:3176,access,access,3176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-607313549,1,['access'],['access']
Security,irectRetryingExecutor.submit(DirectRetryingExecutor.java:92); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:47); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:6843,secur,security,6843,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,"ired by the VCF spec, but this provides a much more flexible interface for other similar niche applications, like genotyping individuals with other known aneuploidies. The global `-ploidy` flag will still provide the background default (or the built-in ploidy of 2 for humans), but the user input value will supersede these in overlapping regions. Note that the overlap is checked against the active region, meaning variants near the boundary of the `--ploidy-regions` file may end up with GT fields having ploidy slightly differently than expected, for example if your custom region overlaps a given active region but the variant ends up being written to a location outside that interval. In this case the ploidy from the user input would be used rather than any other default. # Implementation Details. The key idea is to allow `HaplotypeCallerEngine` to initialize multiple genotyping engines based on the `--ploidy-regions` input. The intervals are first parsed to check for positive integer ploidy values, and then used to create hashmaps of ploidy -> genotyper. The engine uses two types of genotypers: one for active region determination and one for doing the actual genotyping. Both admit a ploidy paramter passed via `hcArgs`. This PR modifies the `HaplotypeCallerArgumentCollection` class to include a method for creating copies of this object with differing ploidy amounts. These then get fed to the constructors of the appropriate genotyper classes, which are organized into two hashmaps. In every situation where one of these genotypers is used, we instead begin the scope by calling a ""get local genotyper"" method that performs the logic of checking whether the region of interest overlaps any of the user-provided regions, and then selects the appropriate `localEngine` genotyper for the task, ensuring the user-provided ploidy supersedes any other defaults. # A Note on Dependency. The flexibility of using either .bed or .interval_list files to specify this information depends on [th",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8464:1372,hash,hashmaps,1372,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8464,1,['hash'],['hashmaps']
Security,"isn't match. The error log looks like below. Exception in thread ""main"" java.lang.NoSuchMethodError: scala.collection.Seq.aggregate(Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;; at org.bdgenomics.adam.models.NonoverlappingRegions.mergeRegions(NonoverlappingRegions.scala:75); at org.bdgenomics.adam.models.NonoverlappingRegions.<init>(NonoverlappingRegions.scala:55); at org.bdgenomics.adam.models.NonoverlappingRegions$.apply(NonoverlappingRegions.scala:169); at org.bdgenomics.adam.util.TwoBitRecord$.apply(TwoBitFile.scala:193); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at org.bdgenomics.adam.util.TwoBitFile.<init>(TwoBitFile.scala:70); at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceTwoBitSource.<init>(ReferenceTwoBitSource.java:43); at org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.<init>(ReferenceMultiSource.java:41); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReference(GATKSparkTool.java:353); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:320); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:311); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hel",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2073:1139,Hash,HashMap,1139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2073,2,['Hash'],"['HashMap', 'HashTrieMap']"
Security,it(DirectRetryingExecutor.java:92); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:47); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:125); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:109); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:992); 	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); 	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); 	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); 	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685:6381,secur,security,6381,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685,1,['secur'],['security']
Security,"it(DirectRetryingExecutor.java:94); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:54); 	at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:188); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:614); 	... 15 more; Caused by: shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 403 Forbidden; {; ""code"" : 403,; ""errors"" : [ {; ""domain"" : ""global"",; ""message"" : ""443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to fc-50c768b1-a285-4c95-8d8c-8ce209f1fda8/744139c5-3371-4a67-a2c8-e054e46f814f/ReblockGVCF/601ea396-b6cf-4baa-95c7-83e88b92c194/call-GenotypeGVCF/09C97227.c9cd4496-b4ed-4686-babd-177c66168178.vcf.gz.tbi."",; ""reason"" : ""forbidden""; } ],; ""message"" : ""443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to fc-50c768b1-a285-4c95-8d8c-8ce209f1fda8/744139c5-3371-4a67-a2c8-e054e46f814f/ReblockGVCF/601ea396-b6cf-4baa-95c7-83e88b92c194/call-GenotypeGVCF/09C97227.c9cd4496-b4ed-4686-babd-177c66168178.vcf.gz.tbi.""; }; 	at shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:145); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1056); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_ni",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4592:4145,access,access,4145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4592,1,['access'],['access']
Security,"ithout --rm flag (will remove later); docker run \; --cidfile /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid \; -i \; \; --entrypoint /bin/bash \; -v /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:delegated \; broadinstitute/gatk@sha256:18146e79d06787483310e5de666502090a480e10ac0fad06a36a5e7a5c9bb1dc /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/script. # get the return code (working even if the container was detached); rc=$(docker wait cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid). # remove the container after waiting; docker rm cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid. # return exit code; exit $rc; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: job id: 243; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Status change from - to Done; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor Workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 failed (during ExecutingWorkflowState): Job ValidateBamsWf.ValidateBAM:0:1 exited with return code -1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr.; Could not retrieve content: Could not read from /gatk/my_data/tools/cromwell-execution",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:6360,Validat,ValidateBamsWf,6360,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,2,['Validat'],"['ValidateBAM', 'ValidateBamsWf']"
Security,ity.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:7914,secur,security,7914,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,1,['secur'],['security']
Security,ity.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:6208,secur,security,6208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,ity.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:9696,secur,security,9696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"ize 250`.; ```; WMCF9-CB5:shlee$ ./gatk LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250.vcf.gz; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250.vcf.gz; 17:24:16.345 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 5:24:16 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 17:24:16.502 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:24:16.502 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 17:24:16.502 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 17:24:16.502 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 17:24:16.502 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 17:24:16.503 INFO LeftAlignAndTrimVariants - Start Date/Time",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418887543:1039,authenticat,authenticated,1039,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418887543,1,['authenticat'],['authenticated']
Security,"jars, because it increases entropy on the distribution & support side of things. I would much prefer to see this resolved by project development branches. With the possibility of making project-specific nightly builds off of those branches, to enable pointing people to hot fixes for a specific toolset without taking in whatever else is going on in other projects. ---. @droazen commented on [Fri Apr 29 2016](https://github.com/broadinstitute/gatk-protected/issues/473#issuecomment-215757315). Alright, to give an overview of where this stands, we have several options on the table for solving this problem:; 1. Split the GATK into even more repos (a CNV-only repo, a HaplotypeCaller repo) that are versioned separately. GATK release X would then consist of CNV version Y, HaplotypeCaller version Z, gatk-public version P, etc. This is probably the most ""correct"" solution from a software engineering perspective, but might be a nightmare to work with.; 2. Have the ability to release jars with a subset of the tools exposed to the user (eg., CNV-only jars). Geraldine hates this one, and it does seem like a bad idea to have these incomplete jars floating out in the wild.; 3. Everyone develops on separate branches, and merges to master only when everything in a branch is ""release-ready"". In this scenario master itself is always (theoretically, at least) ready for release. This solves the original problem of release of some tools being blocked by others, but creates some other problems: last-minute merge conflicts across dev teams, large amounts of code being held back for months while it undergoes testing, harder to share code across groups, more complex git workflows for everyone.; 4. Everyone is free to merge development versions of tools to master (as is currently the case), and most of the time we try to release everything in the GATK together. On rare occasions when, eg., CNV needs a release now and HC is not ready, we create a branch off of the last tagged release, cherry-pic",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2851:3486,expose,exposed,3486,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2851,1,['expose'],['exposed']
Security,java:205); at org.broadinstitute.hellbender.tools.HaplotypeCallerSpark.runTool(HaplotypeCallerSpark.java:115); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:353); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:116); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:121); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:142); at org.broadinstitute.hellbender.Main.main(Main.java:220); Caused by: java.lang.IllegalStateException: Duplicate key [B@4e233a3c; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1253); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.buildGapContinuationPenalties(PairHMMLikelihoodCalculat; ionEngine.java:304); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngi; ne.java:253); at org.broadinsti,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3018:16834,Hash,HashMap,16834,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3018,1,['Hash'],['HashMap']
Security,java:2219); > at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.concat(NameNodeRpcServer.java:829); > at org.apache.hadoop.hdfs.server.namenode.AuthorizationProviderProxyClientProtocol.concat(AuthorizationProviderProxyClientProtocol.java:285); > at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.concat(ClientNamenodeProtocolServerSideTranslatorPB.java:580); > at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); > at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:617); > at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1073); > at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2278); > at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2274); > at java.security.AccessController.doPrivileged(Native Method); > at javax.security.auth.Subject.doAs(Subject.java:422); > at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1924); > at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2272); > ; > org.broadinstitute.hellbender.exceptions.UserException$CouldNotCreateOutputFile: Couldn't write file hdfs://cloudera08/gatk-test2/WES2019-022_S4_out.vcf because writing failed with exception concat: target file /gatk-test2/WES2019-022_S4_out.vcf.parts/output is empty; > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concatInternal(FSNamesystem.java:2303); > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concatInt(FSNamesystem.java:2257). #### Steps to reproduce; The user's command line was. > nohup /opt/gatk/gatk-4.1.4.0/gatk ReadsPipelineSpark --spark-runner SPARK --spark-master yarn --spark-submit-command spark2-submit -I hdfs://cloudera08/gatk-test2/WES2019-022_S4.bam -O hdfs://cloudera08/gatk-test2/WES2019-022_S4_out.vcf -R hdfs://cloudera08/gatk-test1/ucsc.hg19.fasta --known-sites hdfs://cloudera08/gatk-test1/dbsnp_150_hg19.vcf.gz --,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6218:1957,secur,security,1957,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6218,1,['secur'],['security']
Security,java:300); at java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681); at scala.collection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:149); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:99); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.IllegalArgumentException: Invalid interval. Contig:chrUn_JTFH01000312v1_decoy start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations$BreakpointsInference.getLeftJustifiedBreakpoints(NovelAdjacencyReferenceLocations.java:86); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.leftJustifyBreakpoints(NovelAdjacencyReferenceLocations.java:301); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.<init>(NovelAdjacencyReferenceLocations.java:46); ... 18 more. 8/02/23 23:06:24 INFO storage.BlockManagerMaster: BlockManagerMaster stopped; 18/02/23 23:06:24 INFO scheduler.OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!; 18/02/23 23:06:24 INFO spark.SparkContext: Successfully stopped SparkC,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458:3386,validat,validateArg,3386,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458,1,['validat'],['validateArg']
Security,java:300); at java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681); at scala.collection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:149); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:99); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.IllegalArgumentException: Invalid interval. Contig:chrUn_JTFH01000312v1_decoy start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations$BreakpointsInference.getLeftJustifiedBreakpoints(NovelAdjacencyReferenceLocations.java:86); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.leftJustifyBreakpoints(NovelAdjacencyReferenceLocations.java:301); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.<init>(NovelAdjacencyReferenceLocations.java:46); ... 18 more. Driver stacktrace:; at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1435); at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1423); at org.apache.spa,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458:7065,validat,validateArg,7065,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458,1,['validat'],['validateArg']
Security,java:300); at java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681); at scala.collection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:149); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:99); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.IllegalArgumentException: Invalid interval. Contig:chrUn_JTFH01000312v1_decoy start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations$BreakpointsInference.getLeftJustifiedBreakpoints(NovelAdjacencyReferenceLocations.java:86); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.leftJustifyBreakpoints(NovelAdjacencyReferenceLocations.java:301); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.<init>(NovelAdjacencyReferenceLocations.java:46); ... 18 more; 18/02/23 23:06:24 INFO util.ShutdownHookManager: Shutdown hook called; 18/02/23 23:06:24 INFO util.ShutdownHookManager: Deleting directory /restricted/projectnb/casa/wgs.hg38/sv/gatk.sv/tmp/farrell/spark-94fa6743-3d29-4748-b8f8-d13a52dfed31; ```. The command line is:. ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458:13857,validat,validateArg,13857,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458,1,['validat'],['validateArg']
Security,java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 58 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:209); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 68 more; ```. Also anecdotally it seems to happen less often.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:11038,secur,security,11038,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,5,['secur'],['security']
Security,javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:515); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:93); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:49); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:113); 	... 41 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.secu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:5207,secur,security,5207,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,1,['secur'],['security']
Security,javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:515); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:93); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:49); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:113); 	... 49 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.available(AppInputStream.java:60); 	at java.io.BufferedInputStream.available(BufferedInputStream.java:410); 	at sun.net.www.MeteredStream.available(MeteredStream.java:170); 	at sun.net.www.http.KeepAliveStream.close(KeepAliveStream.java:85); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at java.io.FilterInputStream.close(FilterInputStream.java:181); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:97); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:63); 	at shaded.cloud_nio.com.google.api.client.http.HttpResponse.download(HttpResponse.java:421); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 55 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.secu,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138:8695,secur,security,8695,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549138,1,['secur'],['security']
Security,"joun is willing to help.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-252247496,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACnk0lAsJd9NECpPP0JYVp2ziDhga0B9ks5qxkRUgaJpZM4KQT_3; > . ---. @vdauwera commented on [Wed Oct 26 2016](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-256499771). Writing pipeline-help now and cc'ing everyone involved in this thread. Will try to get some kind of protocol set up for debugging things that happen in the cloud pipeline, because I expect this will happen again. But if it gets too complicated we could also mock up some fake records that would reproduce this. It seems to me that shouldn't be too hard. . ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-260498705). I need to ping Daniel on getting access to the files. ---. @ronlevine commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275576931). @vdauwera Can you get the data? I can take a look a this issue. ---. @vdauwera commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275578721). Oh, they gave me access to the files but I never took the next step of figuring out which files are relevant. There are twenty thousand samples... I'm not sure what is the best way to approach this. ---. @ldgauthier commented on [Wed Mar 01 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-283365248). It would be too computationally expensive and just generally painful to get; that dropped allele. I'd suggest making a unit test with some fake data.; You'll need two positions: one upstream with a deletion to generate the *; and one for the SNP. I think the dropped allele was a 1bp deletion at the; same position t",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2959:2982,access,access,2982,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2959,1,['access'],['access']
Security,"k; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz -O zeta_snippet_leftalign.vcf.gz; 16:34:35.251 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 4:34:35 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 16:34:35.413 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.414 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 16:34:35.414 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 16:34:35.414 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 16:34:35.414 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 16:34:35.414 INFO LeftAlignAndTrimVariants - Start Date/Time: September 5, 2018 4:34:35 PM EDT; 16:34:35.414 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.414 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 16:34:35.415 INFO LeftAlignAndTrimVariants - HTSJDK Version: 2.16.0; 16:34:35.415 INFO LeftAlignAndTrimVariants - Picard V",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494:1414,authenticat,authentication,1414,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418875494,1,['authenticat'],['authentication']
Security,kGraphExecuter.java:256); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199); 	at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249); 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663); 	at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597); 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at org.gradle.internal.con,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:11429,access,access,11429,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445,1,['access'],['access']
Security,"king each executor to shut down; 19/04/08 19:03:28 INFO SchedulerExtensionServices: Stopping SchedulerExtensionServices; (serviceOption=None,; services=List(),; started=false); 19/04/08 19:03:28 INFO YarnClientSchedulerBackend: Stopped; 19/04/08 19:03:28 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!; 19/04/08 19:03:28 INFO MemoryStore: MemoryStore cleared; 19/04/08 19:03:28 INFO BlockManager: BlockManager stopped; 19/04/08 19:03:28 INFO BlockManagerMaster: BlockManagerMaster stopped; 19/04/08 19:03:28 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!; 19/04/08 19:03:28 INFO SparkContext: Successfully stopped SparkContext; 19:03:28.389 INFO HaplotypeCallerSpark - Shutting down engine; [April 8, 2019 7:03:28 PM UTC] org.broadinstitute.hellbender.tools.HaplotypeCallerSpark done. Elapsed time: 1.75 minutes.; Runtime.totalMemory()=941096960; Exception in thread ""main"" java.lang.StackOverflowError; 	at java.util.HashMap.putMapEntries(HashMap.java:501); 	at java.util.HashMap.<init>(HashMap.java:490); 	at com.esotericsoftware.kryo.Generics.<init>(Generics.java:47); 	at com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil.buildGenericsScope(FieldSerializerGenericsUtil.java:116); 	at com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil.newCachedFieldOfGenericType(FieldSerializerGenericsUtil.java:225); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.newCachedField(FieldSerializer.java:368); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.createCachedFields(FieldSerializer.java:331); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.rebuildCachedFields(FieldSerializer.java:261); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.rebuildCachedFields(FieldSerializer.java:182); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.write(FieldSerializer.java:508); 	at com.esotericsoftware.kryo.Kryo.writeObject(Kryo.java:552); 	at com.esoterics",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5869:18424,Hash,HashMap,18424,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5869,1,['Hash'],['HashMap']
Security,"king from the original JAR. . The JAVA file where I added the most helpful statements was in CommandLineProgram.java which is actually in ""gatk"" repo (not ""gatk-protected"" repo). If I look at a LOG, I can see ""EAS"" my initials and see c40e75b which appears to be a more recent commit compared to 3a2bb0d. ```; EAS in main!!!!; EAS to call instanceMain second....; EAS to call instanceMain first....; 17:28:40.295 INFO SparkGenomeReadCounts - EAS ABOUT TO CALL instanceMainPostParseArgs in instanceMain in clp.java ; 17:28:40.396 INFO IntelGKLUtils - Trying to load Intel GKL library from:; 	jar:file:/cromwell_root/fc-7ac504fc-7fe4-4bc1-89d3-7f16317b8ff4/eddie.jar!/com/intel/gkl/native/libIntelGKL.so; 17:28:40.498 INFO IntelGKLUtils - Intel GKL library loaded from classpath.; [December 1, 2016 5:28:40 PM UTC] org.broadinstitute.hellbender.tools.genome.SparkGenomeReadCounts --binsize 5000 --outputFile this.entity_id.coverage.tsv --reference Homo_sapiens_assembly19.fasta --input firecloud-tcga-open-access/tutorial/bams/C835.HCC1143_BL.4.bam --keepXYMT false --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false --verbosity INFO --QUIET false --use_jdk_deflater false --disableAllReadFilters false; [December 1, 2016 5:28:40 PM UTC] Executing as root@71bfa07f6996 on Linux 3.16.0-0.bpo.4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_111-8u111-b14-2~bpo8+1-b14; Version: Version:c40e75b-SNAPSHOT; 17:28:40.501 INFO SparkGenomeReadCounts - Defaults.BUFFER_SIZE : 131072; ```. ---. @eddiebroad commented on [Wed Dec 07 2016](https://github.com/broadinstitute/gatk-protected/issues/806#issuecomment-265470147). I want to mention in my case, all the reference files were present (fasta, fai, dict) BUT the dict was in a different directory and NOT in the same directory as the other two ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2922:5232,access,access,5232,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2922,1,['access'],['access']
Security,"ks in advance!. ```; gatk ValidateVariants -V ../../data/geno/phased/chr1-22.phased.rename.reheader.vcf.gz -R ../../../../index/hg19.fa.gz; Using GATK jar ~/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/zepengmu/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar ValidateVariants -V ../../data/geno/phased/chr1-22.phased.rename.reheader.vcf.gz -R ../../../../index/hg19.fa.gz; 19:53:34.379 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/zepengmu/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Oct 25, 2020 7:53:34 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 19:53:34.606 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.606 INFO ValidateVariants - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Default",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:1116,Validat,ValidateVariants,1116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"l or two that use `PythonScriptExecutor` to call into a Python machine-learning library, and do an assessment of maintainability, etc. `PythonScriptExecutor` will come with an attached set of conditions for its use, intended to address the most serious issues raised by the engine and support teams with having Python code in the GATK. We should document these conditions in the docs for `PythonScriptExecutor` when it's implemented:. 1. All tools that use `PythonScriptExecutor` must have a Java-based front-end, with standard GATK (barclay-based) arguments. We put a lot of development effort into our arg parser and into striving for user-interface consistency across tools, and cannot afford to duplicate this effort in Python. Geraldine (CC'd) and the rest of the support team can back me up on this one!. 2. An honest effort should be made to minimize the amount of code written in Python -- as much of each tool's work as possible should be done in Java. In particular, reading/writing final inputs and outputs should happen in Java. This is important for a number of reasons, including the engine team's goal of ensuring universal GCS support, consistent Google authentication handling, etc. Again, we really don't want to have to duplicate that work in Python, or for the tools that call into Python to be inconsistent with the rest of the toolkit. 3. All dependencies (Python and native) of Python libraries used will be clearly documented, and included in the default GATK docker image. I don't think I need to explain why this one is important :) . 4. Before we go any further down this path, we prototype one or two tools using `PythonScriptExecutor`, and do a fair assessment of maintainability and other concerns of the engine/support teams, such as whether it will even be possible to package all dependencies without conflicts. 5. Engine team will continue to search for Java-based solutions while this evaluation is ongoing, but this proposal at least unblocks the CNV team for now.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3501:1352,authenticat,authentication,1352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3501,1,['authenticat'],['authentication']
Security,"l000209_random, chr21_gl000210_random, chrUn_gl000211, chrUn_gl000212, chrUn_gl000213, chrUn_gl000214, chrUn_gl000215, chrUn_gl000216, chrUn_gl000217, chrUn_gl000218, chrUn_gl000219, chrUn_gl000220, chrUn_gl000221, chrUn_gl000222, chrUn_gl000223, chrUn_gl000224, chrUn_gl000225, chrUn_gl000226, chrUn_gl000227, chrUn_gl000228, chrUn_gl000229, chrUn_gl000230, chrUn_gl000231, chrUn_gl000232, chrUn_gl000233, chrUn_gl000234, chrUn_gl000235, chrUn_gl000236, chrUn_gl000237, chrUn_gl000238, chrUn_gl000239, chrUn_gl000240, chrUn_gl000241, chrUn_gl000242, chrUn_gl000243, chrUn_gl000244, chrUn_gl000245, chrUn_gl000246, chrUn_gl000247, chrUn_gl000248, chrUn_gl000249]; reads contigs = []; 	at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:163); 	at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:98); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.validateToolInputs(GATKSparkTool.java:469); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:361); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:119); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:176); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:195); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:131); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:152); 	at org.broadinstitute.hellbender.Main.main(Main.java:233); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	a",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:34855,validat,validateToolInputs,34855,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,1,['validat'],['validateToolInputs']
Security,"l_padding 0 --interval_exclusion_padding 0 --readValidationStringency SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2184,Validat,ValidateVariants,2184,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,lassReader.java:166); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:148); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:136); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:237); 	at org.apache.spark.util.ClosureCleaner$.getClassReader(ClosureCleaner.scala:49); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:517); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:500); 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236); 	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40); 	at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:134); 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732); 	at org.apache.spark.util.FieldAccessFinder$$anon$3.visitMethodInsn(ClosureCleaner.scala:500); 	at org.apache.xbean.asm6.ClassReader.readCode(ClassReader.java:2175); 	at org.apache.xbean.asm6.ClassReader.readMethod(ClassReader.java:1238); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:631); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:355); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:307); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:306); 	at scala.collection.immutable.List.foreach(List.scala:392); 	at org.apache.spark.util.ClosureCleaner$.org$apache$spark$util$ClosureCleaner$$clean(ClosureCleaner.scala:306); 	at org.apache.spark.util.ClosureCleaner$.clean(ClosureCleaner.scala:16,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:7078,Hash,HashMap,7078,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,1,['Hash'],['HashMap']
Security,"lbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```; A second case involved `--alleles` input:; ```; 22	16464044	rs571268158	CCAGGTCT	C; 22	16464051	rs569099729	T	C; ```; and crashed similarly, with:; ```; java.lang.IllegalStateException: Allele in genotype CCAGGTCT* not in the variant context [T*, *, C]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.makeMergedVariantContext(AssemblyBasedCallerUtils.java:221); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:150); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5336:2804,validat,validateGenotypes,2804,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336,1,['validat'],['validateGenotypes']
Security,leapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:347); ... 17 more; Caused by:; java.net.SocketTimeoutException: Read timed out; at java.net.SocketInputStream.socketRead0(Native Method); at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); at java.net.SocketInputStream.read(SocketInputStream.java:170); at java.net.SocketInputStream.read(SocketInputStream.java:141); at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); at sun.security.ssl.InputRecord.read(InputRecord.java:503); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316); at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:250); at shaded.cloud-nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:77); at shaded.cloud-nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); at shaded.cloud-nio.com.google.auth.oauth2.ServiceAccountCredentials.refreshAccessToken(ServiceAcc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2514:3925,secur,security,3925,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2514,1,['secur'],['security']
Security,lection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:149); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:99); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.IllegalArgumentException: Invalid interval. Contig:chrUn_JTFH01000312v1_decoy start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations$BreakpointsInference.getLeftJustifiedBreakpoints(NovelAdjacencyReferenceLocations.java:86); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.leftJustifyBreakpoints(NovelAdjacencyReferenceLocations.java:301); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.<init>(NovelAdjacencyReferenceLocations.java:46); ... 18 more. 8/02/23 23:06:24 INFO storage.BlockManagerMaster: BlockManagerMaster stopped; 18/02/23 23:06:24 INFO scheduler.OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!; 18/02/23 23:06:24 INFO spark.SparkContext: Successfully stopped SparkContext; 23:06:24.240 INFO StructuralVariationDiscoveryPipelineSpark - Shutting down engine;,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458:3469,validat,validatePositions,3469,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458,1,['validat'],['validatePositions']
Security,lection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:149); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:99); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.IllegalArgumentException: Invalid interval. Contig:chrUn_JTFH01000312v1_decoy start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations$BreakpointsInference.getLeftJustifiedBreakpoints(NovelAdjacencyReferenceLocations.java:86); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.leftJustifyBreakpoints(NovelAdjacencyReferenceLocations.java:301); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.<init>(NovelAdjacencyReferenceLocations.java:46); ... 18 more. Driver stacktrace:; at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1435); at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1423); at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1422); at scala.co,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458:7148,validat,validatePositions,7148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458,1,['validat'],['validatePositions']
Security,"lection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:149); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96); at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53); at org.apache.spark.scheduler.Task.run(Task.scala:99); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.IllegalArgumentException: Invalid interval. Contig:chrUn_JTFH01000312v1_decoy start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations$BreakpointsInference.getLeftJustifiedBreakpoints(NovelAdjacencyReferenceLocations.java:86); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.leftJustifyBreakpoints(NovelAdjacencyReferenceLocations.java:301); at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyReferenceLocations.<init>(NovelAdjacencyReferenceLocations.java:46); ... 18 more; 18/02/23 23:06:24 INFO util.ShutdownHookManager: Shutdown hook called; 18/02/23 23:06:24 INFO util.ShutdownHookManager: Deleting directory /restricted/projectnb/casa/wgs.hg38/sv/gatk.sv/tmp/farrell/spark-94fa6743-3d29-4748-b8f8-d13a52dfed31; ```. The command line is:. ```; gatk --java-options ""-Djava.io.tmpdir=tmp"" StructuralVariationDiscoveryPipelineSpark \; -",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458:13940,validat,validatePositions,13940,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458,1,['validat'],['validatePositions']
Security,"lem:. ```; chr1	10027	.	A	C,G	.	PASS	.	GT:AD:AF:DP	1/2:0,5,5:0.500,0.500:10; ```. vs. ```; chr1	10027	.	A	C,G	.	PASS	.	GT:AD:DP	1/2:0,5,5:10; ```. The output for GATK 4.1.4.1 or when the AF field is removed looks like this:; ```; chr1	10027	.	A	C	.	PASS	.	GT:AD:DP	./.:0,5:10; chr1	10027	.	A	G	.	PASS	.	GT:AD:DP	./.:0,5:10; ```. #### Steps to reproduce; ```; $gatk/gatk LeftAlignAndTrimVariants -R $reference --split-multi-allelics -V test.input.vcf -O test.output.vcf; ```. #### Expected behavior; LeftAlignAndTrimVariants should be able to split multiallelic records in a VCF to two separate records as in GATK version 4.1.4.1. The AF field is removed from the 4.1.4.1 output, however. #### Actual behavior; GATK fails at a multiallelic record with the following error (GATK 4.2.0.0):; ```; java.lang.IllegalArgumentException: the range size cannot be negative; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:798); 	at org.broadinstitute.hellbender.utils.IndexRange.validate(IndexRange.java:107); 	at org.broadinstitute.hellbender.utils.IndexRange.<init>(IndexRange.java:67); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.splitASSBTable(GATKVariantContextUtils.java:1533); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.splitSomaticVariantContextToBiallelics(GATKVariantContextUtils.java:1501); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.LeftAlignAndTrimVariants.apply(LeftAlignAndTrimVariants.java:225); 	at org.broadinstitute.hellbender.engine.VariantWalker.lambda$traverse$0(VariantWalker.java:104); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183); 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175); 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$Ite",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7211:1543,validat,validate,1543,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7211,1,['validat'],['validate']
Security,"lfs pull (#7806); - Document AoU SOP (up to the VAT) [VS-63] (#7807); - Incident VS 365 clinvar classification fix (#7769); - VS-390. Add precision and sensitivity wdl (#7813); - Quickstart based integration test [VS-357] (#7812); - 365 vat python testing additions (#7756); - VS 396 clinvar grabs too many values (#7823); - Added a test to validate WDLs in the scripts directory. (#7826) (#7829); - VAT Performance / Reliability Improvements (#7828); - VAT naming conventions [VS-410] (#7827); - Rc remove ad from vat (#7832); - bugfix, we were trying to grep a binary file (#7837); - Cleanup scripts/variantstore [VS-414] (#7834); - Merge VAT TSV files into single bgzipped file [VS-304] (#7848); - Handle fully and partially loaded samples [VS-262] [VS-258] (#7843); - Ingest Error Handling Fixes [VS-261] (#7841); - First cut at a python notebook to validate inputs. (#7845); - Compute filter scatter [VS-392] (#7852); - remove withdrawn req (#7844); - Improve import error message [VS-437] (#7855); - Fix Input Validation python notebook (#7853); - Add VAT Validation check that aa_change and exon_number are consistently set. (#7850); - Ingest 10K [VS-344] (#7860); - X/Y chromosome reweighting for better extract shard runtime balance [VS-389] (#7868); - VET Ingest Validation / Allow Ingest of non-VQSR'ed data (#7870); - Fix AoU workflow bugs (#7874); - Curate input arrays to skip already ingested sample data [VS-246] (#7862); - KM upload GVS product sheet (#7883); - Default extract scatter width [VS-415] (#7878); - Volatile tasks review [VS-447] (#7880); - Update Quickstart Integration for X/Y scaling changes [VS-464] (#7881); - clean up dockstore; - Rc vs 63 vat sop documentation (#7879); - Fix up FQ and race condition issues with volatile tasks work [VS-478] (#7888); - Use gvs-internal project in integration test (#7901); - Add cost observability BQ table [VS-441] (#7891); - Add preliminary labels to queries [VS-381] (#7902); - Workflow compute costs [VS-472] (#7905); - Fix bu",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:24617,Validat,Validation,24617,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,4,['Validat'],['Validation']
Security,licatesSpark done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=1065353216; java.lang.IllegalArgumentException: Unsupported class file major version 55; 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:166); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:148); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:136); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:237); 	at org.apache.spark.util.ClosureCleaner$.getClassReader(ClosureCleaner.scala:49); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:517); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:500); 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236); 	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40); 	at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:134); 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732); 	at org.apache.spark.util.FieldAccessFinder$$anon$3.visitMethodInsn(ClosureCleaner.scala:500); 	at org.apache.xbean.asm6.ClassReader.readCode(ClassReader.java:2175); 	at org.apache.xbean.asm6.ClassReader.readMethod(ClassReader.java:1238); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:631); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:355); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:307); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:306); 	at scala.collection.immutable.List.fore,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:6880,Hash,HashMap,6880,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,1,['Hash'],['HashMap']
Security,lication_1603353714322_0004/__spark_libs__7655440475844189559.zip; 20/10/22 12:02:31 INFO yarn.Client: Uploading resource file:/home/jacky/Exec/gatk/build/libs/gatk-spark.jar -> hdfs://192.168.0.104:9000/user/jacky/.sparkStaging/application_1603353714322_0004/gatk-spark.jar; 20/10/22 12:02:33 INFO yarn.Client: Uploading resource file:/tmp/spark-28ab5ef4-82d1-425e-879f-5056e9b51e43/__spark_conf__3248804172036151699.zip -> hdfs://192.168.0.104:9000/user/jacky/.sparkStaging/application_1603353714322_0004/__spark_conf__.zip; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing view acls to: jacky; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing modify acls to: jacky; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing view acls groups to: ; 20/10/22 12:02:33 INFO spark.SecurityManager: Changing modify acls groups to: ; 20/10/22 12:02:33 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(jacky); groups with view permissions: Set(); users with modify permissions: Set(jacky); groups with modify permissions: Set(); 20/10/22 12:02:33 INFO yarn.Client: Submitting application application_1603353714322_0004 to ResourceManager; 20/10/22 12:02:33 INFO impl.YarnClientImpl: Submitted application application_1603353714322_0004; 20/10/22 12:02:34 INFO yarn.Client: Application report for application_1603353714322_0004 (state: ACCEPTED); 20/10/22 12:02:34 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: default; 	 start time: 1603360953394; 	 final status: UNDEFINED; 	 tracking URL: http://jacky:8088/proxy/application_1603353714322_0004/; 	 user: jacky; 20/10/22 12:02:35 INFO yarn.Client: Application report for application_1603353714322_0004 (state: ACCEPTED); 20/10/22 12:02:36 INFO yarn.Client: Application report for application_1603353714322_0004 (state: ACCEPTED); 20/10/22 12:02:37 INFO yarn.Client: Application report ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6906:3561,Secur,SecurityManager,3561,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6906,3,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,lidator.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1NvbWF0aWNTaG9ydE11dGF0aW9uVmFsaWRhdG9yLmphdmE=) | `64.865% <64.865%> (ø)` | `5 <5> (?)` | |; | [.../basicshortmutpileup/BetaBinomialDistribution.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CZXRhQmlub21pYWxEaXN0cmlidXRpb24uamF2YQ==) | `68.182% <68.182%> (ø)` | `4 <4> (?)` | |; | [...ation/basicshortmutpileup/AllelePileupCounter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9BbGxlbGVQaWxldXBDb3VudGVyLmphdmE=) | `81.25% <81.25%> (ø)` | `12 <12> (?)` | |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `85.965% <85.965%> (ø)` | `7 <7> (?)` | |; | [...ion/basicshortmutpileup/PowerCalculationUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9Qb3dlckNhbGN1bGF0aW9uVXRpbHMuamF2YQ==) | `95.238% <95.238%> (ø)` | `15 <15> (?)` | |; | [...bender/utils/GATKProtectedVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3755?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9HQVRLUHJvdGVjdGVkVmFyaWFudENvbnRleHRVdGlscy5qYXZh) | `77.901% <95.833%> (+6.472%)` | `70 <23> (+23)` | :arrow_up: |; | [...ion/basicshortmutpileup/B,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3755#issuecomment-341515732:2828,Validat,ValidateBasicSomaticShortMutations,2828,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3755#issuecomment-341515732,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,lientRequest.java:300); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at shaded.cloud-nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:347); ... 17 more; Caused by:; java.net.SocketTimeoutException: Read timed out; at java.net.SocketInputStream.socketRead0(Native Method); at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); at java.net.SocketInputStream.read(SocketInputStream.java:170); at java.net.SocketInputStream.read(SocketInputStream.java:141); at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); at sun.security.ssl.InputRecord.read(InputRecord.java:503); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316); at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:250); at shaded.cloud-nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:77); at shaded.cloud-nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:972); at shaded.cloud-nio.com.goog,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2514:3855,secur,security,3855,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2514,1,['secur'],['security']
Security,"linked hash set, linked hash map",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1844:7,hash,hash,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1844,2,['hash'],['hash']
Security,litIntervals		6/5/2017	https://github.com/broadinstitute/gatk-protected/blob/ec40da398e4185fa8fb0c62453304e8315f8f4e1/src/main/java/org/broadinstitute/hellbender/tools/walkers/SplitIntervals.java	scripts/mutect2_wdl/mutect2.wdl	https://github.com/broadinstitute/gatk/pull/3032	yes	Default value: INTERVAL_SUBDIVISION. warn users to be careful when dividing lengthy genomic intervals. Perhaps it would be wise to specify the workflow in which this tool would be used. Something for the second pass.; 44	GetPileupSummaries	beta; helper tool for CalculateContamination	6/5/2017	https://github.com/broadinstitute/gatk-protected/blob/2bf35790393332da5414b42ec6dca813fcc63202/src/main/java/org/broadinstitute/hellbender/tools/walkers/contamination/GetPileupSummaries.java	scripts/mutect2_wdl/mutect2.wdl	https://github.com/broadinstitute/gatk/pull/3006	yes	; 33	AnnotateVcfWithBamDepth	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/AnnotateVcfWithBamDepth.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 34	AnnotateVcfWithExpectedAlleleFraction	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/AnnotateVcfWithExpectedAlleleFraction.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 37	CalculateMixingFractions	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/CalculateMixingFractions.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 47	RemoveNearbyIndels	i,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3055:12697,validat,validation,12697,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3055,1,['validat'],['validation']
Security,"lity shouldn't really change across some of them.; ; I'm currently just using call outs to system commands to diff and h5diff the VCFs and HDF5s, respectively. I think the latter command should be available in the GATK Conda environment. This will be a bit awkward, in the sense that the tests for this tool will require the Conda environment, but the tool itself will not. But I think this is probably preferable to writing test code to compare HDF5s, minimal though that might be, since the schema might change in the future.; - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs. Could perhaps expand on the `resources` parameter once the required labels are settled.; - [x] Parameter validation.; - [x] Clean up docs for parent walker.; - [x] Decide on required labels. I think ""training"" and ""calibration"" (rather than the legacy ""training"" and ""truth"") might be good candidates. EDIT: Switched ""truth"" to ""calibration"" throughout the codebase.; - [x] Validate privileged labels (snp, training, calibration) in parent walker.; ; Future work:. - [ ] Clean up unlabeled outputs. This includes 1) sorting the corresponding HDF5, and 2) outputting a corresponding sites-only VCF. Unlike the labeled sites, which are written individually to VCF as we traverse them, unlabeled sites are placed into a reservoir of fixed size for subsampling purposes. Thus, we cannot write them to VCF as with labeled sites; furthermore, after traversal, the unlabeled sites are not ordered within the reservoir. Ultimately, the lack of this VCF means that extracted, unlabeled sites cannot be tagged as such by the scoring tool in the final VCF.; - [ ] Consider downsampling of labeled data. This is not done because 1) of the complications just mentioned, 2) we assume that labeled data is precious and that one-time extraction of it will always be relatively cheap, especially compared to training (and that training implementations can always downsample, if needed), and 3) using -L functionality to subs",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059:3440,Validat,Validate,3440,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059,1,['Validat'],['Validate']
Security,"lling all running tasks in stage 2: Stage finished; 23/11/16 12:09:10 INFO DAGScheduler: Job 2 finished: parquet at StudentAws.scala:36, took 10.369237 s; 23/11/16 12:09:10 INFO FileFormatWriter: Start to commit write Job b17a4b92-9ee1-46cc-858a-08ed0b22fb8b.; 23/11/16 12:09:10 ERROR FileFormatWriter: Aborting job b17a4b92-9ee1-46cc-858a-08ed0b22fb8b.; java.lang.UnsatisfiedLinkError: org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Ljava/lang/String;I)Z; 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Native Method); 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access(NativeIO.java:793); 	at org.apache.hadoop.fs.FileUtil.canRead(FileUtil.java:1249); 	at org.apache.hadoop.fs.FileUtil.list(FileUtil.java:1454); 	at org.apache.hadoop.fs.RawLocalFileSystem.listStatus(RawLocalFileSystem.java:601); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.fs.ChecksumFileSystem.listStatus(ChecksumFileSystem.java:761); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.getAllCommittedTaskPaths(FileOutputCommitter.java:334); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJobInternal(FileOutputCommitter.java:404); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJob(FileOutputCommitter.java:377); 	at org.apache.parquet.hadoop.ParquetOutputCommitter.commitJob(ParquetOutputCommitter.java:48); 	at org.apache.spark.internal.io.HadoopMapReduceCommitProtocol.commitJob(HadoopMapReduceCommitProtocol.scala:192); 	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$writeAndCommit$3(FileFormatWriter.scala:275); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12); 	at org.apache.spark.util.Utils$.timeTakenMs(Utils.scala:640); 	at o",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8587:2603,Checksum,ChecksumFileSystem,2603,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8587,1,['Checksum'],['ChecksumFileSystem']
Security,"log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 23:01:58.560 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///omics/chatchawit/bundle/test/gencode/hg38/gencode.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; 23:02:05.335 INFO ProgressMeter - Starting traversal; 23:02:05.337 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:02:06.530 INFO Funcotator - Shutting down engine; [April 27, 2018 11:02:06 PM ICT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.16 minutes.; Runtime.totalMemory()=3420979200; java.lang.IllegalArgumentException: Invalid interval. Contig:ENST00000342066.7|ENSG00000187634.11|OTTHUMG00000040719.10|OTTHUMT00000276866.2|SAMD11-202|SAMD11|2551|protein_coding| start:0 end:0; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:687); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:37); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.getCodingSequenceFromTranscriptFasta(GencodeFuncotationFactory.java:418); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createSequenceComparison(GencodeFuncotationFactory.java:1177); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createCodingRegionFuncotation(GencodeFuncotationFactory.java:619); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnTranscript(GencodeFuncotationFactory.java:575); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotations(GencodeFuncotationFactory.java:487); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.Genc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157:7302,validat,validatePositions,7302,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385021157,1,['validat'],['validatePositions']
Security,"looks like we need to run a special fetch command to get access to the pr merge commits, ex:; ```; git fetch origin +refs/pull/3217/merge; ```; Looks like the change is a bit more complicated than I hoped.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3217#issuecomment-313238500:57,access,access,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3217#issuecomment-313238500,1,['access'],['access']
Security,"loped a clustering procedure that is based on coverage profile at the set of targets that are highly variable across different capture kits. ; - We found that filtering on a QS metric on a final callset significantly boosted the specificity while lowering sensitivity insignificantly.; - We developed a hyperparameter optimization framework prototype that could be used in a future for general optimizations of cost/performance parameters for all GATK pipelines.; - We resolved several memory issues that came up during validations. **A few issues were encountered along the way:**; - The sensitivity and specificity on multiallellic (common) sites was significantly lower than on rare events.; - Single target calling sensitivity was lower than 20%.; - Pipeline WDL required optimization in order to handle whole genome data, however these changes were not consolidated in the official WDL. **Currently the ongoing work is focused on the following:**; - Improving sensitivity/specificity of calls on common regions. One solution being tested involves setting a prior for common regions derived from a high quality callset. Second solution is to set a different filtering threshold for common regions.; - Consolidating validation scripts to process gCNV output and outputs of competing tools measure their performances against ground truth.; - Analyzing 1000 Genomes exomes, which could be potentially used for public facing automatic evaluations. **The following items are necessary done for automatic evaluation:** ; - Dataset + truth. We need an access to a high quality public cohort with matched whole genomes. These genomes have to have a corresponding high quality truth set generated from split-read/read-pair methods. From that cohort we need to find 50-200 relatively homogeneous samples.; - An established validation workflow that outputs a set predetermined metrics that are unlikely to change in a future. Such as a sensitivity/specificity stratified by event size and allelic frequency.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502:1767,validat,validation,1767,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4123#issuecomment-532500502,3,"['access', 'validat']","['access', 'validation']"
Security,"lpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done init",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2922,Validat,ValidateVariants,2922,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,lse; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Deflater: IntelDeflater; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Inflater: IntelInflater; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - GCS max retries/reopens: 20; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Initializing engine; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Done initializing engine; 18/01/09 18:30:54 INFO spark.SparkContext: Running Spark version 2.2.0.cloudera1; 18/01/09 18:30:54 INFO spark.SparkContext: Submitted application: BwaAndMarkDuplicatesPipelineSpark; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing view acls to: sun; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing modify acls to: sun; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing view acls groups to: ; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing modify acls groups to: ; 18/01/09 18:30:54 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(sun); groups with view permissions: Set(); users with modify permissions: Set(sun); groups with modify permissions: Set(); 18/01/09 18:30:55 INFO util.Utils: Successfully started service 'sparkDriver' on port 38793.; 18/01/09 18:30:55 INFO spark.SparkEnv: Registering MapOutputTracker; 18/01/09 18:30:55 INFO spark.SparkEnv: Registering BlockManagerMaster; 18/01/09 18:30:55 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 18/01/09 18:30:55 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 18/01/09 18:30:55 INFO storage.DiskBlockManager: Created local directory at /tmp/sun/blockmgr-b03058dc-763a-449c-bd05-18f3304c01ea; 18/01/09 18:30:55 INFO memory.MemoryStore: Mem,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:5519,Secur,SecurityManager,5519,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,1,['Secur'],['SecurityManager']
Security,ltBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394); at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165); at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250); at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158); at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92); at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:461); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:444); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$200(ExecuteActionsTaskExecuter.java:93); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:237); at org.gradle.internal.execution.steps.ExecuteStep.lambda$execute$1(ExecuteStep.java:33); at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:33); at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:26); at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:58); at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:35); at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48); at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:33); at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:39); at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:73,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6466#issuecomment-590387973:7551,access,access,7551,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6466#issuecomment-590387973,2,['access'],['access']
Security,"lters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2750,Validat,ValidateVariants,2750,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,ltiIntervalLocalReadShard.iterator(MultiIntervalLocalReadShard.java:134); 	at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.<init>(AssemblyRegionIterator.java:86); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:188); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:173); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1085); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. #### Steps to reproduce; The error occurs when running a command: ; ```; gatk Mutect2 -R /home/genome/gatk.hg38/Homo_sapiens_assembly38.fasta -L panel_collapsed.bed -I bam/tumour_recalibrated.bam -I bam/normal_recalibrated.bam -tumor tumour -normal normal -germline-resource /home/genome/gatk.hg38/af-only-gnomad.hg38.vcf.gz -pon /home/genome/pon/PON_B1.vcf --genotype-pon-sites --f1r2-tar-gz results/learnOrientation/tumour_lo.tar.gz -O results/Mutect2/tumour.s.vcf.gz -bamout bam/tumour.mutect2.bam --disable-read-filter MateOnSameContigOrNoMappedMateReadFilter --af-of-alleles-not-in-resource 0.000001; ```. #### Expected behavior; Mutect2 producing outputs. #### Actual behavior; Full log: ; [Mutect2_error.txt](https://github.com/broadinstitute/gatk/files/8772744/Mutect2_error.txt). ---. I would be grateful if you could help me to investigate the cause of this error. I couldn't find any clues when googling it and tried `picard ValidateSamFile` but it returns no errors or warnings. Many thanks!,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7872:3181,Validat,ValidateSamFile,3181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7872,1,['Validat'],['ValidateSamFile']
Security,"ly$mcV$sp(AbstractFunction0.scala:12); 	at scala.App.$anonfun$main$1$adapted(App.scala:76); 	at scala.collection.immutable.List.foreach(List.scala:389); 	at scala.App.main(App.scala:76); 	at scala.App.main$(App.scala:74); 	at StudentAws$.main(StudentAws.scala:8); 	at StudentAws.main(StudentAws.scala); Exception in thread ""main"" java.lang.UnsatisfiedLinkError: org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Ljava/lang/String;I)Z; 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Native Method); 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access(NativeIO.java:793); 	at org.apache.hadoop.fs.FileUtil.canRead(FileUtil.java:1249); 	at org.apache.hadoop.fs.FileUtil.list(FileUtil.java:1454); 	at org.apache.hadoop.fs.RawLocalFileSystem.listStatus(RawLocalFileSystem.java:601); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.fs.ChecksumFileSystem.listStatus(ChecksumFileSystem.java:761); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.getAllCommittedTaskPaths(FileOutputCommitter.java:334); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJobInternal(FileOutputCommitter.java:404); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJob(FileOutputCommitter.java:377); 	at org.apache.parquet.hadoop.ParquetOutputCommitter.commitJob(ParquetOutputCommitter.java:48); 	at org.apache.spark.internal.io.HadoopMapReduceCommitProtocol.commitJob(HadoopMapReduceCommitProtocol.scala:192); 	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$writeAndCommit$3(FileFormatWriter.scala:275); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12); 	at org.apache.spark.util.Utils$.timeTakenMs(Utils.scala:640); 	at org.apache.spark.sql.exec",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8587:8276,Checksum,ChecksumFileSystem,8276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8587,1,['Checksum'],['ChecksumFileSystem']
Security,"m%20Eiklid/Analysis/gatk-4.2.4.1/ensembl-vep/PE69_chr3.vcf; 10:58:20.063 INFO VariantAnnotator - Done initializing engine; 10:58:20.091 WARN VariantAnnotatorEngine - The requested expression attribute ""gnomad.ALT"" is missing from the header in its resource file gnomad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.getMinRepresentationBiallelics(VariantAnnotatorEngine.java:568); 	at org.broadinstitute.hellbender.tools.walkers.annotato",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:4162,Validat,Validation,4162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['Validat'],['Validation']
Security,"m.google.cloud.genomics.gatk.common. I've been working on this bam file issue, correcting errors in the files used for tests. Many of the errors involve reads with FLAGs that indicate that they are in pairs, but the mate is not extant in the file, causing the error. A way to fix this without deleting the offending reads is to set the FLAG to zero and also modify the RNEXT, PNEXT, and TLEN fields, if necessary, so that the read becomes single (provided that the values of all of these fields are not important for the tests). However, when I do this, I find that tests that write and then read bam files fail, because when the just-written file is read back, SAM validation complains that the mate unmapped FLAG is set for an unpaired read. It turns out that the copy of the file written by the test substitutes the value '8' for '0' as the FLAG for the modified reads. The relevant code in GenomicsConvertermakeSamRecord() (line 170) is:. flags += ((read.getNextMatePosition() == null || read.getNextMatePosition.getPosition() == null)) ? 8 : 0;. The effect of this line is that all reads which have null mate positions, even those which the FLAG specifies as unpaired, get the mate unmapped FLAG set, causing the validation errors that i'm seeing. The reason the tests have not failed before is apparently that the existing test files do not contain any reads with FLAGs that specify them as unpaired. A simple fix for this would be to convert the line above to:. flags += ( paired && (read.getNextMatePosition() == null || read.getNextMatePosition.getPosition() == null)) ? 8 : 0;. The redundant parens in the original code suggest that something like this may have been intended,but the google genomics documentation at http://google-genomics.readthedocs.org/en/latest/migrating_tips.html gives the following pseudocode:. flags += read.nextMatePosition.position == null ? 8 : 0 #mate_unmapped. so it looks like the doc supports the existing code. Should I submit this as an issue? . Thank you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114101033:1375,validat,validation,1375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114101033,1,['validat'],['validation']
Security,mail.com>; Date: Tue Dec 12 11:26:31 2017 -0500. disabled some gCNV WDL tests. commit 6d8ca07fef41518b5b157fb9a214d4536c617156; Author: Samuel Lee <lee.samuel.k@gmail.com>; Date: Tue Dec 12 10:54:54 2017 -0500. fixed DenoiseReadCountsIntegrationTest files. commit adfbef12f2ab90f93b49a4f786979549648e1f22; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Mon Dec 11 02:22:56 2017 -0500. removed CNV evaluation code from this branch. commit 18c8d31f39a1964474c5d7b12ee8cbfafc4ac9e2; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Sun Dec 10 00:19:58 2017 -0500. GS VCF parser outputs dict for samples instead of list. commit b138be39cd8428342668ee6678079021006f983b; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Sun Dec 10 00:15:19 2017 -0500. renaming. commit eab5c90b74b4eb6bd11acb0fd1e0fa58a3b5b0c7; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 16:23:40 2017 -0500. exposed a global preemptible_attempts to gCNV workflows; set OMP_NUM_THREADS and MKL_NUM_THREADS to the number of requested CPUs. commit ad6fe348d6a7896c169b2b0499e2a4bca34021ad; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 10:21:25 2017 -0500. reverted log level in germline CNV tests. commit d9eb4e504baab834a9efc07cc3479176db2946ce; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 10:20:30 2017 -0500. the proper python environment yml for mkl and open -- leads to orders of magnitude speedup!. commit fea6bf874e0b62262a3b1d239ce4d76792d5c416; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 09:31:43 2017 -0500. revert. commit 456c53f88d01b603f4175d8896a0dac036af03f8; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 08:17:22 2017 -0500. enabled openmp g++ linking in theano. commit e2afef14ddb957f2dbdea76fd783d3bfb8d7a64e; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 08:04:19 2017 -0500. mkl. commit 43e2a65201286161fcd5bfe7dbb21ae888e1,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:2311,expose,exposed,2311,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,2,['expose'],['exposed']
Security,making the version number depend on the git hash using a gradle git plugin from https://github.com/ajoberstar/gradle-git. It seems like the top gradle-git integration library. There are lots of pre-baked things in it to help with releases and such that we can grow into.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/196:44,hash,hash,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/196,1,['hash'],['hash']
Security,manage_sv_pipeline checks version from gatk-spark.jar and compares it; to the current git hash (to ensure the correct version is run). Newer; gatk versions had a slightly different file name format and caused; errors parsing the hash. This updates the hash check and produces; more comprehensible error messages when it fails. Resolves: #3593,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3595:90,hash,hash,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3595,3,['hash'],['hash']
Security,"mand line argument is highly dubious.) . It's possible that apache code does something similar to fully decoding that could affect performance. All that is to say that we cannot achieve performance improvement with our original blueprint simply because this expensive ""fullyDecode"" operation seems to be a mythical operation that is never used in reality. So while I could not speed up SelectVariants, I cleaned up the code and added the following new arguments:. * `--select-genotype`: with this new genotype-specific JEXL argument, we support filtering by genotype fields like 'GQ > 0', where the behavior in the multi-sample case is 'GQ > 0' in at least one sample. I have not added the ability to do 'GQ > 0 for all samples' but it should be a simple (but not easy…) exercise in boolean operations.; * `applyJexlFiltersBeforeFilteringGenotypes`: if set to true, we do the JEXL checking before we subset by samples. In my tests, performance improvement from this option was very modest. Subsetting a ~3k 1kg SV vcf to a single sample was about 30 seconds faster (out of ~20 min total run time) than the default. I kept it in the PR because I thought some user might find it useful, but I wouldn't be opposed to removing it. Tests needed:; - [x] Filter by genotypes with a new flag --genotype-select, with the default behavior being 'passes if at least one sample passes' ; - [x] Multiple --select expressions should be combined with logical-or; - [x] Test string annotations (e.g. ALGORITHM == 'depth'); - [x] Jexl involving with logical-and (e.g. AC > 0 && AF > 0.01); - [x] Access genotypes directly e.g. vc.getsample('NA12878'); - [x] DP > 0 as --genotype-select and as --select; - [x] Combine --select and --select-genotypes; - [x] Code path that uses ""fully-decode""; - [x] Failing cases (reference genotype fields in --select and vice versa); - [x] `--applyJexlFiltersBeforeFilteringGenotypes.` Does this actually give us performance advantage? ; - [x] Add a test for `select-random-fraction`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8092:3012,Access,Access,3012,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8092,1,['Access'],['Access']
Security,"markw@WMC9F-819:~/IdeaProjects/gatk$ ./gatk-launch PrintReadsSpark -I gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam -O hs37d5cs.reads.txt --apiKey XXXXXXXXXXXXXXXXXXXX --verbosity DEBUG -- --sparkRunner GCS --cluster mw-test --project broad-dsde-methods; Using GATK jar /Users/markw/IdeaProjects/gatk/build/libs/gatk-package-4.alpha.2-157-g7d7c5ec-SNAPSHOT-spark.jar; jar caching is disabled because GATK_GCS_STAGING is not set. please set GATK_GCS_STAGING to a bucket you have write access too in order to enable jar caching; add the following line to you .bashrc or equivalent startup script. export GATK_GCS_STAGING=gs://<my_bucket>/. Replacing spark-submit style args with dataproc style args. --cluster mw-test --project broad-dsde-methods -> --cluster mw-test --project broad-dsde-methods --properties spark.kryoserializer.buffer.max=512m,spark.driver.maxResultSize=0,spark.driver.userClassPathFirst=true,spark.io.compression.codec=lzf,spark.yarn.executor.memoryOverhead=600,spark.driver.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true ,spark.executor.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true. Running:; gcloud dataproc jobs submit spark --cluster mw-test --project broad-dsde-methods --properties spark.kryoserializer.buffer.max=512m,spark.driver.maxResultSize=0,spark.driver.userClassPathFirst=true,spark.io.compression.codec=lzf,spark.yarn.executor.memoryOverhead=600,spark.driver.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true ,spark.executor.extraJavaOptions=-Dsamjdk.compression_level=1 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true --jar /Users/markw/IdeaProjects/gatk/build/libs/gatk-package-4.alpha.2-157-g7d7c5ec-SNAPSHOT-spark.jar -- PrintReadsSpark -I gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam -O hs37d5cs.reads.txt --apiKey XXXXXXXXXXXXXXXXXXXXX --verbosity DEBUG --sparkMaster yarn; Copying file:///Users/markw/IdeaProjects/gatk/build/libs/gatk-package-4.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929:485,access,access,485,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929,1,['access'],['access']
Security,"mblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```; The second case included the following `--alleles` input:; ```; 22	16464044	rs571268158	CCAGGTCT	C; 22	16464051	rs569099729	T	C; ```; and it crashed similarly, with:; ```; java.lang.IllegalStateException: Allele in genotype CCAGGTCT* not in the variant context [T*, *, C]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.makeMergedVariantContext(AssemblyBasedCallerUtils.java:221); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:150); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5337:2848,validat,validateGenotypes,2848,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5337,1,['validat'],['validateGenotypes']
Security,"mentations of copy-ratio, allele-fraction, and ""multidimensional"" (joint) segmentation. All implementations are pretty boilerplate; they simply partition by contig and then call out to KernelSegmenter. Note that there is some logic in multidimensional segmentation that only uses the first het in each copy-ratio interval and if any are available, and imputes the alt-allele fraction to 0.5 if not.; -Makes sense for @mbabadi to review this, since he reviewed the KernelSegmenter PR. Added modeling classes and tests for ModelSegments CNV pipeline.; -Most of this code is copied from the old MCMC code. However, I've done some overall code cleanup and refactoring, especially to remove some overextraction of methods in the allele-fraction likelihoods (see #2860). I also added downsampling and scaling of likelihoods to cut down on runtime. Tests have been simplified and rewritten to use simulated data.; -@LeeTL1220 do you think you could take a look?. Added ModelSegments CLI.; -Mostly control flow to handle optional inputs and validation, but there is some ugly and not well documented code that essentially does the GetHetCoverage step. We'll refactor later, I filed #3915.; -@asmirnov239 can review. This is lower priority than the gCNV VCF writing. Deleted gCNV WDL and Cromwell tests.; -Trivial to review. Added WDL and Cromwell tests for ModelSegments CNV pipeline.; -This includes the cost optimizations from @meganshand and @jsotobroad (sorry guys, I wasn't sure how to track your contributions while fixing up commits!) I also added tests for both GC/no-GC pair workflows.; -@MartonKN should review to gain familiarity with the WDL. Note that this WDL has already been through many revisions from @meganshand, @jsotobroad, and @LeeTL1220, so hopefully there shouldn't be too much for you to find serious fault with. Note that I punted on adding MultidimensionalKernelSegmenterUnitTest and ModelSegmentsIntegrationTest. Filed #3916. Closes #2858. (FINALLY!); Closes #3825.; Closes #3661.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3913:1600,validat,validation,1600,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3913,1,['validat'],['validation']
Security,"methods.internal, executor 48): java.lang.IllegalArgumentException: Unexpected CIGAR format with deletion neighboring clipping; cigar elements are: [1190M, 4D, 53M, 2I, 26M, 2I, 31M, 2D, 1450S]; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:681); 	at org.broadinstitute.hellbender.tools.spark.sv.utils.SvCigarUtils.validateCigar(SvCigarUtils.java:134); 	at org.broadinstitute.hellbender.tools.spark.sv.utils.SvCigarUtils.getUnclippedReadLength(SvCigarUtils.java:161); 	at org.broadinstitute.hellbender.tools.spark.sv.utils.SvCigarUtils.computeAssociatedDistOnRead(SvCigarUtils.java:330); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.alignment.AlignmentInterval.readIntervalAlignedToRefSpan(AlignmentInterval.java:634); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector.extractAltHaplotypeSeq(CpxVariantDetector.java:852); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector.access$300(CpxVariantDetector.java:47); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector$AnnotatedContig.annotate(CpxVariantDetector.java:194); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector$AnnotatedContig.<init>(CpxVariantDetector.java:132); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector.lambda$inferSvAndWriteVCF$14707a88$1(CpxVariantDetector.java:60); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1.apply(JavaPairRDD.scala:1040); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:59); 	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:104); 	at scala.collect",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4260:5745,access,access,5745,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4260,1,['access'],['access']
Security,"micsdb.GenomicsDBImport.getFeatureReadersSerially(GenomicsDBImport.java:602); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport.traverse(GenomicsDBImport.java:490); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:893); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:136); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:153); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:195); 	at org.broadinstitute.hellbender.Main.main(Main.java:277); Caused by: com.google.cloud.storage.StorageException: 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to fc-50c768b1-a285-4c95-8d8c-8ce209f1fda8/744139c5-3371-4a67-a2c8-e054e46f814f/ReblockGVCF/601ea396-b6cf-4baa-95c7-83e88b92c194/call-GenotypeGVCF/09C97227.c9cd4496-b4ed-4686-babd-177c66168178.vcf.gz.tbi.; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:335); 	at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:191); 	at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:188); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:94); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:54); 	at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:188); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:614); 	... 15 more; Caused by: shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 403 Forbidden; {; ""code"" : 403,; ""errors"" : [ {; ""domain"" : ""global"",; """,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4592:2625,access,access,2625,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4592,1,['access'],['access']
Security,"mment-262613152). @ldgauthier Shouldn't a locus without genotypes bypass `AC` validation, given it's defined as: `Allele count in genotypes, for each ALT allele, in the same order as listed`?. ---. @ldgauthier commented on [Wed Nov 23 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262613997). Agreed. ---. @ronlevine commented on [Thu Nov 24 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262635204). The change should be a lot simpler than proposed. The code can validate the number of alleles before it checks for the presence of genotypes in [VariantContext#validateChromosomeCounts](https://github.com/samtools/htsjdk/blob/master/src/main/java/htsjdk/variant/variantcontext/VariantContext.java#L1236). . ---. @ldgauthier commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263277972). Sorry, I needed to refresh my memory. I actually don't want to bypass AC validation for variants without genotypes, but I think you already figured that out. My proposal was more general, but you're right -- AC and AF should always have the same count as alt alleles and we don't need to check the header for that. When this came up (a year and a half ago!) we were thinking about validating all the info field annotations. ---. @ronlevine commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263280085). That's exactly what I did in https://github.com/samtools/htsjdk/pull/759. I can expand this to all INFO field annotations. ---. @ldgauthier commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265221057). Expanding to all INFO annotations would be wonderful, but that can be a separate issue. ---. @ronlevine commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265223581). That's not the only one, @magicDGS requested validating the `AF` val",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:6292,validat,validation,6292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validation']
Security,mory including 384 MB overhead; 17/10/13 18:11:36 INFO yarn.Client: Setting up container launch context for our AM; 17/10/13 18:11:36 INFO yarn.Client: Setting up the launch environment for our AM container; 17/10/13 18:11:36 INFO yarn.Client: Preparing resources for our AM container; 17/10/13 18:11:37 INFO yarn.Client: Uploading resource file:/tmp/hdfs/spark-c7e5eece-205e-4bce-a69b-4168c9b79045/__spark_conf__2918234914787361986.zip -> hdfs://mg:8020/user/hdfs/.sparkStaging/application_1507856833944_0003/__spark_conf__.zip; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing view acls groups to: ; 17/10/13 18:11:37 INFO spark.SecurityManager: Changing modify acls groups to: ; 17/10/13 18:11:37 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:37 INFO yarn.Client: Submitting application application_1507856833944_0003 to ResourceManager; 17/10/13 18:11:37 INFO impl.YarnClientImpl: Submitted application application_1507856833944_0003; 17/10/13 18:11:37 INFO cluster.SchedulerExtensionServices: Starting Yarn extension services with app application_1507856833944_0003 and attemptId None; 17/10/13 18:11:38 INFO yarn.Client: Application report for application_1507856833944_0003 (state: ACCEPTED); 17/10/13 18:11:38 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: root.users.hdfs; 	 start time: 1507889497661; 	 final status: UNDEFINED; 	 tracking URL: http://mg:8088/proxy/application_1507856833944_0003/; 	 user: hdfs; 17/10/13 18:11:39 INFO yarn.Client: Application report for application_1507856833944_0003 (state: ACCEPTED); 17/10/13 ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:10902,authenticat,authentication,10902,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,4,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,ms.markduplicates.MarkDuplicatesSpark done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=1065353216; java.lang.IllegalArgumentException: Unsupported class file major version 55; 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:166); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:148); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:136); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:237); 	at org.apache.spark.util.ClosureCleaner$.getClassReader(ClosureCleaner.scala:49); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:517); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:500); 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236); 	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40); 	at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:134); 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732); 	at org.apache.spark.util.FieldAccessFinder$$anon$3.visitMethodInsn(ClosureCleaner.scala:500); 	at org.apache.xbean.asm6.ClassReader.readCode(ClassReader.java:2175); 	at org.apache.xbean.asm6.ClassReader.readMethod(ClassReader.java:1238); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:631); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:355); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:307); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:306); 	at scala.collec,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:6839,Hash,HashMap,6839,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,1,['Hash'],['HashMap']
Security,mutect2 expose param,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8447:8,expose,expose,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8447,1,['expose'],['expose']
Security,"n [Wed Oct 19 2016](https://github.com/broadinstitute/gatk-protected/issues/751). Things that we discussed with @samuelklee that can be done to aid it:. -I think that all files we generate for individual case samples---""ReadCountCollection"" files for coverage profiles, ""AllelicCountCollection"" files for het pulldowns, and segment files---should contain the sample name as metadata in a header comment with a common tag (e.g., #sampleName = ...). Currently, these sample names are stored in column headers, in the fields of a SAMPLE column, or not at all, depending on the type of file. This would drastically simplify the use of the SampleNameFinder class, which would basically only contain a single method to parse this header comment and return the name. -CLIs that generate a file from an input BAM (CalculateTargetCoverage, GetHetCoverage, etc.) should take the sample name from that BAM by default. Since these are the first steps in our workflows, we could also optionally allow the user to specify a sample name different from that in the BAM. -Subsequent CLIs should then take the sample name from the header comment. -CLIs that take multiple non-BAM input files should check for consistency of the sample names as part of the argument validation step. -CLIs that output the sample name in plots should derive these from the header comment. -For files that contain data from multiple samples (e.g., the output of CombineReadCounts), we can probably leave the sample names in the column headers, but it would be nice to output the type of data stored in a header comment as well (e.g., PCOV or RAW). At some point I think we should restrict to RAW output only, see https://github.com/broadinstitute/gatk-protected/issues/615. -Entity names specified by the input file for the WDLs can be separate from the BAM sample names by default. However, if we do allow the user to optionally specify sample names as described in the first bullet point, we can set up the WDL to pass the entity names.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2910:1271,validat,validation,1271,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2910,1,['validat'],['validation']
Security,"n `CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam` from `ValidateSamFile`. Here's some of the output:. ```; [March 9, 2017 7:03:42 PM EST] org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile --input src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - In",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1019,Validat,ValidateSamFile,1019,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"n stage 2: Stage finished; 23/11/16 12:09:10 INFO DAGScheduler: Job 2 finished: parquet at StudentAws.scala:36, took 10.369237 s; 23/11/16 12:09:10 INFO FileFormatWriter: Start to commit write Job b17a4b92-9ee1-46cc-858a-08ed0b22fb8b.; 23/11/16 12:09:10 ERROR FileFormatWriter: Aborting job b17a4b92-9ee1-46cc-858a-08ed0b22fb8b.; java.lang.UnsatisfiedLinkError: org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Ljava/lang/String;I)Z; 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access0(Native Method); 	at org.apache.hadoop.io.nativeio.NativeIO$Windows.access(NativeIO.java:793); 	at org.apache.hadoop.fs.FileUtil.canRead(FileUtil.java:1249); 	at org.apache.hadoop.fs.FileUtil.list(FileUtil.java:1454); 	at org.apache.hadoop.fs.RawLocalFileSystem.listStatus(RawLocalFileSystem.java:601); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.fs.ChecksumFileSystem.listStatus(ChecksumFileSystem.java:761); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1972); 	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:2014); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.getAllCommittedTaskPaths(FileOutputCommitter.java:334); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJobInternal(FileOutputCommitter.java:404); 	at org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.commitJob(FileOutputCommitter.java:377); 	at org.apache.parquet.hadoop.ParquetOutputCommitter.commitJob(ParquetOutputCommitter.java:48); 	at org.apache.spark.internal.io.HadoopMapReduceCommitProtocol.commitJob(HadoopMapReduceCommitProtocol.scala:192); 	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.$anonfun$writeAndCommit$3(FileFormatWriter.scala:275); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12); 	at org.apache.spark.util.Utils$.timeTakenMs(Utils.scala:640); 	at org.apache.spark.sql.exec",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8587:2633,Checksum,ChecksumFileSystem,2633,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8587,1,['Checksum'],['ChecksumFileSystem']
Security,"naging and querying Supplementary alignment; > information from read alignment records:; >; > Some of the things that I think smell:; >; > 1.; >; > Querying: implemented in htsjdk consists in forging artificial; > SAMRecords that contain only the alignment info in the SA tag element... It; > seems to me that it makes more sense to create class to hold this; > information alone (e.g. ReadAlignmentInfo or ReadAlignment); SATagBuilder; > already has defined a private inner class with that in mind ""SARead"" so why; > not flesh it out and make it public.; > 2.; >; > Writing: currently SATagBuilder gets attached to a read, parsing its; > current SA attribute content into SARead instances. It provides the; > possibility adding additional SAM record one by one or clearing the list.; > ... then it actually updates the SA attribute on the original read when a; > method (setTag) is explicitly called.; >; > I don't see the need to attach the SATag Builder to a read... it could; > perfectly be free standing; the same builder could be re-apply to several; > reads for that matter and I don't see any gain in hiding the read SA tag; > setting process,... even if typically this builder output would go to the; > ""SA"" tag, perhaps at some point we would like to also write SA coordinate; > list somewhere else, some other tag name or perhaps an error message... why; > impose this single purpose limitation?; >; > I suggest to drop the notion of a builder for a more general custom; > ReadAlignmentInfo (or whatever name) list. Such list could be making; > reference to a dictionary to validate its elements, prevent duplicates,; > keep the primary SA in the first position... etc.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/3324>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AArTZft11VTCtCHT_xr89kPL7hMFYQyhks5sQNghgaJpZM4Ofpkb>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3324#issuecomment-317065323:2350,validat,validate,2350,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3324#issuecomment-317065323,2,['validat'],['validate']
Security,"naryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/Va",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2321,Validat,ValidateVariants,2321,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"nch SparkGenomeReadCounts -I hdfs://scc/user/farrell/adsp/bams/SRR990385.bam -o SRR990385.ReadCounts -R /restricted/projectnb/genpro/bundle/2.8/b37/human_g1k_v37.fasta --verbosity ERROR -- --sparkRunner SPARK --sparkMaster yarn --num-executors 1 --executor-memory 4G --executor-cores 3`. [December 3, 2017 2:56:35 PM EST] org.broadinstitute.hellbender.tools.genome.SparkGenomeReadCounts done. Elapsed time: 0.57 minutes.; Runtime.totalMemory()=982515712; org.apache.spark.SparkException: Job aborted due to stage failure: Task 12 in stage 0.0 failed 4 times, most recent failure: Lost task 12.3 in stage 0.0 (TID 14, scc-q09.scc.bu.edu, executor 1): java.lang.IllegalArgumentException: **Wrong FS: hdfs://scc:8020/user/farrell/adsp/bams/SRR990385.bai, expected: hdfs://scc**; at org.apache.hadoop.fs.FileSystem.checkPath(FileSystem.java:645); at org.apache.hadoop.hdfs.DistributedFileSystem.getPathName(DistributedFileSystem.java:193); at org.apache.hadoop.hdfs.DistributedFileSystem.access$000(DistributedFileSystem.java:105); at org.apache.hadoop.hdfs.DistributedFileSystem$3.doCall(DistributedFileSystem.java:302); at org.apache.hadoop.hdfs.DistributedFileSystem$3.doCall(DistributedFileSystem.java:298); at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81); at org.apache.hadoop.hdfs.DistributedFileSystem.open(DistributedFileSystem.java:298); at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:766); at org.seqdoop.hadoop_bam.util.WrapSeekable.openPath(WrapSeekable.java:60); at org.seqdoop.hadoop_bam.BAMRecordReader.initialize(BAMRecordReader.java:142); at org.seqdoop.hadoop_bam.BAMInputFormat.createRecordReader(BAMInputFormat.java:121); at org.seqdoop.hadoop_bam.AnySAMInputFormat.createRecordReader(AnySAMInputFormat.java:190); at org.apache.spark.rdd.NewHadoopRDD$$anon$1.liftedTree1$1(NewHadoopRDD.scala:178); at org.apache.spark.rdd.NewHadoopRDD$$anon$1.<init>(NewHadoopRDD.scala:177); at org.apache.spark.rdd.NewHadoopRDD.compute(NewHadoopRDD.scal",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3909:1390,access,access,1390,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3909,1,['access'],['access']
Security,nches 14766 14773 +7 ; ===============================================; + Hits 114640 114660 +20 ; - Misses 12746 12748 +2 ; - Partials 5327 5334 +7; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4999?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tmutpileup/BasicSomaticShortMutationValidator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9CYXNpY1NvbWF0aWNTaG9ydE11dGF0aW9uVmFsaWRhdG9yLmphdmE=) | `60.526% <0%> (-4.339%)` | `5 <3> (ø)` | |; | [...dateBasicSomaticShortMutationsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <100%> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `83.486% <75%> (-3.419%)` | `19 <4> (+6)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `71.292% <0%> (-0.957%)` | `35% <0%> (-1%)` | |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4999/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.973% <0%> (+2.74%)` | `11% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4999#issuecomment-405370854:1680,Validat,ValidateBasicSomaticShortMutations,1680,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4999#issuecomment-405370854,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,"ncy SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2250,Validat,ValidateVariants,2250,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"ne file; PrintReads Print reads in the SAM/BAM/CRAM file; ReorderSam Reorders reads in a SAM/BAM file to match ordering in reference; ReplaceSamHeader Replace the SAMFileHeader in a SAM/BAM file with the given header; RevertBaseQualityScores Revert Quality Scores in a SAM/BAM/CRAM file; RevertOriginalBaseQualitiesAndAddMateCigar Reverts the original base qualities and adds the mate cigar tag to read-group BAMs; RevertSam Reverts SAM/BAM files to a previous state; SamFormatConverter Convert a SAM/BAM/CRAM file to a SAM/BAM/CRAM file; SamToFastq Converts a SAM/BAM file into a FASTQ; SortSam Sorts a SAM/BAM/CRAM file; SplitNCigarReads Split Reads with N in Cigar; SplitReads Outputs reads from a SAM/BAM/CRAM by read group, sample and library name; UnmarkDuplicates Unmark duplicates in a SAM/BAM/CRAM file; ValidateSamFile Validates a SAM/BAM/CRAM file. --------------------------------------------------------------------------------------; Spark Validation tools: Tools written in Spark to compare aspects of two different files; CompareBaseQualitiesSpark Diff qs of the BAMs; CompareDuplicatesSpark Compares two BAMs for duplicates. --------------------------------------------------------------------------------------; Spark pipelines: Pipelines that combine tools and use Apache Spark for scaling out (experimental); BQSRPipelineSpark Both steps of BQSR (BaseRecalibrator and ApplyBQSR) on Spark; ReadsPipelineSpark Takes aligned reads (likely from BWA) and runs MarkDuplicates and BQSR. The final result is analysis-ready reads. --------------------------------------------------------------------------------------; Spark tools: Tools that use Apache Spark for scaling out (experimental); ApplyBQSRSpark ApplyBQSR on Spark; BaseRecalibratorSpark BaseRecalibrator on Spark; BaseRecalibratorSparkSharded BaseRecalibrator on Spark (experimental sharded implementation); CollectBaseDistributionByCycleSpark CollectBaseDistributionByCycle on Spark; CollectQualityYieldMetricsSpark CollectQua",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1669:6431,Validat,Validation,6431,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1669,1,['Validat'],['Validation']
Security,"ne; - Add a new validation type for info-field counts to enum and to switch statement; - Grab info headers from input VCF with something like GATKVCFUtils.getVCFHeadersFromRods(getToolkit(), variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; - In the map() function, for each info header line, call on each VCFInfoHeaderLine getCount(vc) to get the expected number of info annotation entries; - Compare the expected number with a count based on vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some additional parsing because it returns an Object; - (Bonus points if you use the isFixedCount() and getCount() functions on the VCF info header line to simplify annotations that aren't according to the number of alt alleles); ### Test data. /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; Should fail AC/AF validation at ; `1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120`; See results using:. ```; use VCFtools; vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; ```. which outputs:; `INFO field at 1:768589 .. INFO tag [AC=1] expected different number of values (expected 2, found 1),INFO tag [AF=0.00047] expected different number of values (expected 2, found 1)`; ### Notes. Currently, all the validation modes call out to HTSJDK. Do we want to put the new functionality there as well?. ---. @yfarjoun commented on [Thu Jul 16 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122130280). I think that it is very appropriate to validate in htsjdk. On Thu, Jul 16, 2015 at 4:05 PM, ldgauthier notifications@github.com; wrote:. > Currently ValidateVariants relies on genotypes to transitively check that; > each alt allele occurs in at least one sample and that the AC adds up.; > However, this can fail on sites-only files because there are no genotypes.; > We should use the definition of the info annotations in the header to check; > how many entries each should have.; > Outlin",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:1443,validat,validator,1443,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validator']
Security,ngs with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJETTISON-3168085); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3367610](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJETTISON-3367610); org.eclipse.jetty:jetty-http | 9.4.52.v20230823 | high | java ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:1310,secur,security,1310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['secur'],['security']
Security,"not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 97955, Read name 20GAVAAXX100126:5:7:1291:122571, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 112212, Read name 20GAVAAXX100126:8:1:1429:129840, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ERROR: Record 126595, Read name 20FUKAAXX100202:6:46:9311:1219, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ...; ERROR: Read name 20FUKAAXX100202:3:66:14857:5877, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:3:42:3602:56427, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:3:43:9956:132423, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:5:28:11981:2516, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:6:24:17640:150063, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:7:6:14036:136793, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:8:4:15388:58751, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:7:46:18099:135243, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:1:61:19609:50570, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:7:24:21385:130712, Mate not found for paired read; ERROR: Read name 20GAVAAXX100126:6:65:2547:48691, Mate not found for paired read; ERROR: Read name 20FUKAAXX100202:7:44:20236:184614, Mate not found for paired read; Maximum output of [100] errors reached.; 19:03:47.020 INFO ValidateSamFile - Shutting down engine; [March 9, 2017 7:03:47 PM EST] org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile done. Elapsed time: 0.07 minutes.; Runtime.totalMemory()=1674051584; Tool returned:; false; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:4375,Validat,ValidateSamFile,4375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,2,['Validat'],['ValidateSamFile']
Security,ntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoRXhwZWN0ZWRBbGxlbGVGcmFjdGlvbkludGVncmF0aW9uVGVzdC5qYXZh) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `84.274% <100%> (+0.128%)` | `69 <1> (+1)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <100%> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <100%> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/mutect/Mutect2IntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QySW50ZWdyYXRpb25UZXN0LmphdmE=) | `90.37% <87.5%> (ø)` | `53 <7> (ø)` | :arrow_down: |; | [...der/tools/walkers/variantutils/SelectVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5031/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50cy5qYXZh) | `79.405% <0%> (-1.258%)` | `158% <0%> (+33%)` | |; | ... and [14 more](https://codecov.io/gh/broadinstitute/gatk/pull/50,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079:3239,validat,validation,3239,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5031#issuecomment-406311079,1,['validat'],['validation']
Security,"ntigPloidy - Initializing engine; 08:48:45.931 DEBUG ScriptExecutor - Executing:; 08:48:45.931 DEBUG ScriptExecutor - python; 08:48:45.932 DEBUG ScriptExecutor - -c; 08:48:45.932 DEBUG ScriptExecutor - import gcnvkernel. WARNING (theano.tensor.blas): Using NumPy C-API based implementation for BLAS functions.; /home/ec2-user/miniconda3/envs/gatk/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.; from ._conv import register_converters as _register_converters; 08:48:50.351 DEBUG ScriptExecutor - Result: 0; 08:48:50.351 INFO DetermineGermlineContigPloidy - Done initializing engine; 08:48:50.352 INFO DetermineGermlineContigPloidy - Shutting down engine; [October 17, 2019 8:48:50 AM UTC] org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy done. Elapsed time: 0.08 minutes.; Runtime.totalMemory()=597164032; java.lang.IllegalArgumentException: List of input read-count files cannot contain duplicates.; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:725); at org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy.validateArguments(DetermineGermlineContigPloidy.java:304); at org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy.doWork(DetermineGermlineContigPloidy.java:277); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292). Kindly help me in fixing the issue",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6217:7088,validat,validateArg,7088,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6217,2,['validat'],"['validateArg', 'validateArguments']"
Security,"nts - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 17:43:53.302 INFO ValidateVariants - Shutting down engine; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=194510848; java.lang.IllegalArgumentException: Illegal base [] seen in the allele; 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:231); 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:374); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants.apply(ValidateVariants.java:181); 	at org.broadinstitute.hellb",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:3722,Validat,ValidateVariants,3722,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,2,"['Validat', 'validat']","['ValidateVariants', 'validationExampleGood']"
Security,"nts were underestimated. . For example, the copy-ratio posterior widths should scale with the inverse square root of the number of copy-ratio bins in each segment. However, subsampling yields an artificial break at 1000 bins and screws up the scaling:. ![cr-ss](https://user-images.githubusercontent.com/11076296/51122629-417be180-17e8-11e9-9a8f-e17a5d0563f5.png). To fix this, I implemented minibatch slice sampling as described in http://proceedings.mlr.press/v33/dubois14.pdf. This uses early stopping of sampling as determined by a simple statistical test to perform approximate sampling of the posterior in a way that is more well behaved:. ![cr-mb](https://user-images.githubusercontent.com/11076296/51122680-61aba080-17e8-11e9-992a-f756a267d0ce.png). Note that the scaling levels off for larger segments, but the approximation can be made exact by taking the appropriate parameter to zero (here, this parameter is set to 0.1). However, since subsampling parameters were not exposed in the old code, I have not exposed the parameters for the approximation here. We can do this in a future PR if desired. Changing these parameters can affect runtime and results, but I've set them to reasonable values for now. The implementation involved 1) creating an abstract class to extract some common functionality shared with the old batch SliceSampler (which is now no longer used in production code), 2) implementing the MinibatchSliceSampler as described in the above reference, and 3) adding some hash-based caching functionality to both the batch/minibatch implementations, as well as to the allele-fraction likelihood calculations (see related discussion in #2860). I also made a few miscellaneous improvements to code style, etc. This is a relatively sizable change and can rather dramatically change the number of segments remaining after smoothing, etc. (although primarily on small scales and probably well within the noise). I will rerun the TCGA SNP array evaluations to make sure there are ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575:1507,expose,exposed,1507,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575,2,['expose'],['exposed']
Security,"number of canine WGS. It is formatted as a VCF with no sample information:; ```; chr1 240 . TG T 464.40 PASS AC=4;AF=0.011;AN=332;BaseQRankSum=0.674;ClippingRankSum=0;DP=14798;ExcessHet=0.0026;FS=5.63;InbreedingCoeff=-0.005;MLEAC=14;MLEAF=0.017;MQ=7.49;MQRankSum=-0.967;QD=22.11;ReadPosRankSum=0.967;SOR=3.18; ```. The VCF for variants for contamination is a subset of this VCF, with only biallelic SNPs with AF between 0.01 and 0.2. Initially, it was formatted the same as the above file. As part of debugging, I tried removing everything from the INFO field of the variants for contamination file, except allele frequency, and I tried using that simplified VCF both for the germline resource and the variants for contamination file. This seemed to fix the index out of bounds error, but the job then failed at the filtering step, with the following error:. ```; java.lang.IllegalArgumentException: log10p: Log10-probability must be 0 or less; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:724); 	at org.broadinstitute.hellbender.utils.MathUtils.log10BinomialProbability(MathUtils.java:934); 	at org.broadinstitute.hellbender.utils.MathUtils.binomialProbability(MathUtils.java:927); 	at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.ContaminationFilter.calculateErrorProbability(ContaminationFilter.java:56); 	at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.Mutect2VariantFilter.errorProbability(Mutect2VariantFilter.java:15); 	at org.broadinstitute.hellbender.tools.walkers.mutect.filtering.ErrorProbabilities.lambda$new$1(ErrorProbabilities.java:19); 	at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1321); 	at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); 	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at jav",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6098:5142,validat,validateArg,5142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6098,1,['validat'],['validateArg']
Security,oadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:204); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:381); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:361); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:351); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:116); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:121); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:108); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:128); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:28); at org.broadinstitute.hellbender.utils.test.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:88); at org.broadinstitute.hellbender.tools.spark.pipelines.CountReadsSparkIntegrationTest.testNonExistentInputBam(CountReadsSparkIntegrationTest.java:111). Caused by:; java.io.FileNotFoundException: /Users/tom/workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/nonexistent.bam; at org.apache.hadoop.fs.RawLocalFileSystem.open(RawLocalFileSystem.java:200); at org.apache.hadoop.fs.ChecksumFileSystem.open(ChecksumFileSystem.java:344); at org.apache.hadoop.fs.FileSystem.open(FileSystem.java:767); at org.seqdoop.hadoop_bam.util.SAMHeaderReader.readSAMHeaderFrom(SAMHeaderReader.java:51); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:202); ... 13 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2541#issuecomment-293293199:2159,Checksum,ChecksumFileSystem,2159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2541#issuecomment-293293199,2,['Checksum'],['ChecksumFileSystem']
Security,"ode:. -`BaseRecalibratorSpark` is the standalone BQSR tool, and calls into the `BaseRecalibratorSparkFn` (which is also called from `ReadsPipelineSpark`). -`ApplyBQSRSpark` is the standalone ApplyBQSR tool, and calls into the `ApplyBQSRSparkFn` (also called from `ReadsPipelineSpark`). -Integration tests for the above are in `BaseRecalibratorSparkIntegrationTest` and `ApplyBQSRSparkIntegrationTest`. -Almost all other changes in the branch are related to the BQSR engine refactoring, which I summarize below:; - We pulled out the guts of the walker `BaseRecalibrator` tool, combined it with all of the code from the former `RecalibrationEngine` class (now deleted) to make a new `BaseRecalibrationEngine` class under `utils/recalibration`.; - We stripped out all copies of the code in `BaseRecalibrationEngine` from the walker, dataflow, and spark versions of BQSR, and modified them to call into `BaseRecalibrationEngine`.; - We moved all auxiliary classes needed by the `BaseRecalibrationEngine` (eg., the covariates, etc.) into `utils/recalibration`.; - We refactored the argument collections. Now there is a single shared `RecalibrationArgumentCollection` that contains **only** the parameters for the `BaseRecalibrationEngine` itself, and this argument collection is exposed by all 3 versions of the tool. Input/output arguments have been removed from this argument collection and put into the individual implementations of BQSR, since they vary between the walker, dataflow, and spark versions of the tool. This eliminates awkward problems such as having both a `knownSites` argument AND a `BQSRKnownVariants` exposed at the same time, with only 1 of them usable for a given version of a tool. The dataflow-only `BaseRecalibrationArgumentCollection` has been deleted completely as no longer needed.; - We tweaked the names of some tool arguments to enforce consistency between the 3 versions of the tool as well as the rest of hellbender (eg., output arg for BQSR is now a more standard `-O`)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073:1325,expose,exposed,1325,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073,2,['expose'],['exposed']
Security,odecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2ZpbHRlcnMvVmFyaWFudEZpbHRyYXRpb25JbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `0.826% <0%> (-99.174%)` | `1% <0%> (-25%)` | |; | [...dorientation/CollectF1R2CountsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9Db2xsZWN0RjFSMkNvdW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `0.917% <0%> (-99.083%)` | `1% <0%> (-12%)` | |; | [.../walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | ... and [162 more](https://codecov.io/gh/broadinstitute/gatk/pull/5451/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5451#issuecomment-467537358:3912,validat,validation,3912,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5451#issuecomment-467537358,1,['validat'],['validation']
Security,"of time working with Mutect2 in the past year (I've built a whole workflow centered around this tool). But, while I recognize that the internal reassembly feature leads to ""best-in-class"" results in terms of calling variants, for my purposes it generally just creates headaches since it makes interpreting (certain) calls and verifying (certain) base-level behaviors/expectations very difficult (even when looking at the bamout and assembly logs). Moreover, while we know our alignment process isn't perfect, we think it's appropriate for our purposes, and we would gladly accept the loss of a few calls to be able to have more control over the expected behaviors. With that, I purpose a ""--skip-assembly"" flag that would cause the Mutect2/HaplotypeCaller engine to use the original alignment information to determine the haplotypes. . All that said, I imagine this could be a niche feature request, so I've spent some time digging through the source code trying to see if there could be a quick fix that could be made available to whatever group of developers would want this. It seemed like there could be another conditional branched added here (https://github.com/broadinstitute/gatk/blob/9ff3f8b180c063a3fa67dae129b0cbd04012448e/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java#L159) to build a `resultSet` based on a non-assembly based approach. However, I'm not certain how using the original alignment information would affect the statistics employed for genotyping the candidate haplotypes, so I'm starting to back off implementing a custom fix and hoping the experts can help (or at least explain to me why this feature is not currently possible OR if there is a way that I can access this behavior that I'm missing). Thank you for the consideration. **(TL;DR)**; Introduce a `--skip-assembly` option that would cause the Mutect2/HaplotypeCaller engine to use the original alignment information to determine the haplotypes.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7064:1886,access,access,1886,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7064,1,['access'],['access']
Security,"ok well this was a draft, but Miguel got here first, so.....; do we want to just shut this all down and skip Validate VDS?. https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20cremer/job_history/91bc9190-d623-4ce6-8184-b20e5cb622e5. ok I hate this pr---I dont think it makes sense to have a VDS validation script that only produces a VDS if the VDS matches the VCF--that makes it very hard to debug. https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20cremer/job_history/c27c9bbe-6a01-4639-bdf9-14b00d5dc252",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8343:109,Validat,Validate,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8343,2,"['Validat', 'validat']","['Validate', 'validation']"
Security,"olders named ""SAMPLE_#""), and just check the sample_name.txt files at the PostprocessGermlineCNVCalls step. I don't think this should require GermlineCNVCaller code changes, right?. 4) We may require additional code at the WDL level if we want to both switch over to primarily using sample names but also get rid of bundling (i.e., by passing only the calls for each sample when needed). Locally, you can always just search all output for directories containing the appropriate sample_name.txt. But on the cloud, you'd want to make sure that the postprocessing step for a particular sample gets only its corresponding directories, which would have to happen at the WDL level; the check against sample_name.txt at the tool level would just be a formality. I can foresee headaches with globbing and funky sample names. I'm not sure I understand your point about extending PostprocessGermlineCNVCalls to run on all samples. The point of that tool is to take results from all genomic shards for a single sample and stitch them together, right? Even if we extend this to run on a batch of multiple samples (which would just be moving the loop over samples at the WDL level to some lower level, i.e., Java or python), we still need to see all shards for those samples. Perhaps I'm misunderstanding---can you clarify?. @mwalker174 can we once and for all clearly document the issue with the transpose? Perhaps by pointing to specific WGS runs that have issues with call caching? I think being able to pinpoint the exact issue will help us identify the right solution---whether that be choosing an appropriate bundling scheme, taking advantage of #5781 to reduce the number of shards, batching during the postprocessing step, removing unnecessary outputs, etc. Recall that we'd like to be able to use the same WDL locally (when you have easy access to all GermlineCNVCaller results from all genomic shards) and in the cloud, with minimal duplication of output from bundling when running locally, if possible.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6659#issuecomment-644829765:3154,access,access,3154,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6659#issuecomment-644829765,2,['access'],['access']
Security,"ols.github.io/hts-specs/VCFv4.2.pdf) doesn't actually say what format should the SB field be, so overriding it seems to be a bug in htsjdk?. #### Steps to reproduce; ```; cat sb-good-tiny.vcf; ##fileformat=VCFv4.2; ##INFO=<ID=SB,Number=.,Type=Integer,Description="""">; ##contig=<ID=chr1,length=248956422,assembly=GRCh38>; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO; chr1	10146	.	AC	A	.	.	SB=5,2,18,29. gatk ApplyVQSR -O sb-recalibrated-tiny.vcf -V sb-good-tiny.vcf --recal-file recalibration. cat sb-recalibrated-tiny.vcf; ##fileformat=VCFv4.2; ##FILTER=<ID=LOW_VQSLOD,Description=""VQSLOD < 0.0"">; ##FILTER=<ID=PASS,Description=""Site contains at least one allele that passes filters"">; ##GATKCommandLine=<ID=ApplyVQSR,CommandLine=""ApplyVQSR --recal-file /Users/vlad/tmp/sb/recalibration --output sb-recalibrated-tiny-renamed4.vcf --variant sb-good-tiny-renamed4.vcf --use-allele-specific-annotations false --ignore-all-filters false --exclude-filtered false --mode SNP --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays --disable-tool-default-read-filters false"",Version=""4.1.9.0"",Date=""31 May 2021 12:07:54 PM"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##INFO=<ID=NEGATIVE_TRAIN_SITE,Number=0,Type=Flag,Description=""This variant was used to build the negative",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7280:2302,validat,validation-stringency,2302,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7280,1,['validat'],['validation-stringency']
Security,"om jar:file:/share/FGI2017B/pub/gatk-4.1.0.0/gatk-package-4.1.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 12:33:53.793 INFO CreateReadCountPanelOfNormals - ------------------------------------------------------------; 12:33:53.794 INFO CreateReadCountPanelOfNormals - The Genome Analysis Toolkit (GATK) v4.1.0.0; 12:33:53.794 INFO CreateReadCountPanelOfNormals - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:33:53.797 INFO CreateReadCountPanelOfNormals - Initializing engine; 12:33:53.797 INFO CreateReadCountPanelOfNormals - Done initializing engine; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 19/02/18 12:33:53 INFO SparkContext: Running Spark version 2.2.0; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/share/FGI2017B/pub/gatk-4.1.0.0/gatk-package-4.1.0.0-local.jar) to method sun.security.krb5.Config.getInstance(); WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:33:54.187 WARN NativeCodeLoader - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 12:33:54.263 INFO CreateReadCountPanelOfNormals - Shutting down engine; [February 18, 2019 at 12:33:54 PM CST] org.broadinstitute.hellbender.tools.copynumber.CreateReadCountPanelOfNormals done. Elapsed time: 0.04 minutes.; Runtime.totalMemory()=2147483648; Exception in thread ""main"" java.lang.ExceptionInInitializerError; 	at org.apache.spark.SparkConf.validateSettings(SparkConf.scala:546); 	at org.apache.spark.SparkContext.<init>(SparkContext.scala:373); 	at org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContex",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5686:1638,secur,security,1638,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5686,1,['secur'],['security']
Security,om.google.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:507); 	... 12 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 15 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.security.ssl.InputRecord.read(InputRecord.java:532); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 25 more`,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931:9256,secur,security,9256,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-301610931,6,['secur'],['security']
Security,"omad; 10:58:20.140 INFO ProgressMeter - Starting traversal; 10:58:20.140 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 10:58:42.160 INFO VariantAnnotator - Shutting down engine; [March 17, 2022 at 10:58:42 AM CET] org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator done. Elapsed time: 0.37 minutes.; Runtime.totalMemory()=17158897664; java.lang.IllegalStateException: Allele in genotype C not in the variant context [C*, CT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.base/java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1464); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1420); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.getMinRepresentationBiallelics(VariantAnnotatorEngine.java:568); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.annotateExpressions(VariantAnnotatorEngine.java:509); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.addInfoAnnotations(VariantAnnotatorEngine.java:347); 	at org.broadinstitute.hellbender.tools.walkers.ann",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053:4413,validat,validate,4413,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689#issuecomment-1070784053,1,['validat'],['validate']
Security,"ome additional parsing because it returns an Object; - (Bonus points if you use the isFixedCount() and getCount() functions on the VCF info header line to simplify annotations that aren't according to the number of alt alleles); ### Test data. /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; Should fail AC/AF validation at ; `1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120`; See results using:. ```; use VCFtools; vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; ```. which outputs:; `INFO field at 1:768589 .. INFO tag [AC=1] expected different number of values (expected 2, found 1),INFO tag [AF=0.00047] expected different number of values (expected 2, found 1)`; ### Notes. Currently, all the validation modes call out to HTSJDK. Do we want to put the new functionality there as well?. ---. @yfarjoun commented on [Thu Jul 16 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122130280). I think that it is very appropriate to validate in htsjdk. On Thu, Jul 16, 2015 at 4:05 PM, ldgauthier notifications@github.com; wrote:. > Currently ValidateVariants relies on genotypes to transitively check that; > each alt allele occurs in at least one sample and that the AC adds up.; > However, this can fail on sites-only files because there are no genotypes.; > We should use the definition of the info annotations in the header to check; > how many entries each should have.; > Outline; > - Add a new validation type for info-field counts to enum and to; > switch statement; > - Grab info headers from input VCF with something like; > GATKVCFUtils.getVCFHeadersFromRods(getToolkit(),; > variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; > - In the map() function, for each info header line, call on each; > VCFInfoHeaderLine getCount(vc) to get the expected number of info; > annotation entries; > - Compare the expected number with a count based on; > vc.getAttribute(currentVCFinfoHeaderLine.getID",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:2015,validat,validate,2015,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validate']
Security,"ompression.dylib from jar:file:/Users/fleharty/resources/picard.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Tue Jul 14 11:25:52 EDT 2020] ValidateSamFile INPUT=concatenated_ACC5611A1_XXXXXX_consensusalign_ds.bam MODE=VERBOSE MAX_OUTPUT=100 IGNORE_WARNINGS=false VALIDATE_INDEX=true INDEX_VALIDATION_STRINGENCY=EXHAUSTIVE IS_BISULFITE_SEQUENCED=false MAX_OPEN_TEMP_FILES=8000 SKIP_MATE_VALIDATION=false VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json USE_JDK_DEFLATER=false USE_JDK_INFLATER=false; [Tue Jul 14 11:25:52 EDT 2020] Executing as fleharty@wm462-624 on Mac OS X 10.15.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12; Deflater: Intel; Inflater: Intel; Provider GCS is not available; Picard version: 2.20.4-SNAPSHOT; WARNING	2020-07-14 11:25:52	ValidateSamFile	NM validation cannot be performed without the reference. All other validations will still occur.; ERROR: Record 18321, Read name UMI-ATT-GAA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 26312, Read name UMI-CCT-TTC-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 70755, Read name UMI-CAG-GGA-2, Zero-length read without FZ, CS or CQ tag; ERROR: Record 145082, Read name UMI-AAC-ATG-5, Zero-length read without FZ, CS or CQ tag; ERROR: Record 181500, Read name UMI-ACT-CTT-1, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186837, Read name UMI-CAA-CTC-4, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186862, Read name UMI-CGC-GCC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186904, Read name UMI-AGG-GTC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186919, Read name UMI-CGC-TGC-0, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186947, Read name UMI-TAA-TAG-3, Zero-length read without FZ, CS or CQ tag; ERROR: Record 186970, Read name UMI-GAG-GCC-1, Zero-length read without FZ, CS or",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132:1938,validat,validations,1938,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6695#issuecomment-658247132,1,['validat'],['validations']
Security,"on/4e3bd06b-3018-4c94-ac98-feb78b924d1f/call-FilterFuncotations/shard-0/inputs/1333115969/104566-001-001.filtered.vcf.funcotated.vcf.gz \ ; --output 104566-001-001.filtered.vcf.filtered.vcf.gz \ ; --ref-version hg38 \ ; --allele-frequency-data-source gnomad --lenient true; ; ; ; ; . However, the command fails with the error message below:. ; ; ; ; [October 14, 2021 at 12:20:24 PM CEST] org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations done. Elapsed time: 16.57 minutes. ; Runtime.totalMemory()=1134559232 ; java.lang.IllegalStateException: Duplicate key Gencode\_34\_annotationTranscript (attempted merging values ENST00000450305.2 and ENST00000456328.2) ; at java.base/java.util.stream.Collectors.duplicateKeyException(Collectors.java:133) ; at java.base/java.util.stream.Collectors.lambda$uniqKeysMapAccumulator$1(Collectors.java:180) ; at java.base/java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169) ; at java.base/java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1603) ; at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ; at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ; at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ; at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ; at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ; at org.broadinstitute.hellbender.tools.funcotator.filtrationRules.AlleleFrequencyUtils.lambda$buildMaxMafRule$1(AlleleFrequencyUtils.java:30) ; at org.broadinstitute.hellbender.tools.funcotator.filtrationRules.FuncotationFilter.lambda$checkFilter$0(FuncotationFilter.java:48) ; at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ; at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ; at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.ja",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7504:2438,Hash,HashMap,2438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7504,1,['Hash'],['HashMap']
Security,"onActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Unrecognized runtime attribute keys: disks, memory; [2020-07-14 05:09:41,71] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: /gatk/gatk \; ValidateSamFile \; --INPUT /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/inputs/-1942028726/test.bam \; --OUTPUT test.validation_.txt \; --MODE SUMMARY; [2020-07-14 05:09:41,76] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: executing: # make sure there is no preexisting Docker CID file; rm -f /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid; # run as in the original configuration without --rm flag (will remove later); docker run \; --cidfile /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid \; -i \; \; --entrypoint /bin/bash \; -v /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:delegated \; broadinstitute/gatk@sha256:18146e79d06787483310e5de666502090a480e10ac0fad06a36a5e7a5c9bb1dc /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/script. # get the return code (working even if the container was detached); rc=$(docker wait cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid). # remove the container after waiting; docker rm cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid. # return exit code; exit $rc; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be8",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:5095,Validat,ValidateBAM,5095,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,11,['Validat'],"['ValidateBAM', 'ValidateBamsWf']"
Security,onUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2812); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:100); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2849); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2831); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:389); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:171); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:168); 	at java.base/java.security.AccessController.doPrivileged(Native Method); 	at java.base/javax.security.auth.Subject.doAs(Subject.java:423); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1836); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:168); 	at org.genomicsdb.reader.GenomicsDBQueryStream.jniGenomicsDBInit(Native Method); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:209); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:182); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:91); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.generateHeadersForQuery(GenomicsDBFeatureReader.java:176); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.<init>(GenomicsDBFeatureReader.java:80); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.getGenomicsDBFeatureReader(GenomicsDBImportIntegrationTest.java:926); 	at org.broadinstitute.hellbender.tools.genomic,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6522:1562,Access,AccessController,1562,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6522,1,['Access'],['AccessController']
Security,once #3480 is in and #3447 is in @magicDGS requested that we should expose DEFAULT_FEATURE_CACHE_LOOKAHEAD as a configurable option,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3489:68,expose,expose,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3489,1,['expose'],['expose']
Security,"ons=[] invertselect=false excludeNonVariants=false excludeFiltered=false preserveAlleles=false removeUnusedAlternates=false restrictAllelesTo=ALL keepOriginalAC=false keepOriginalDP=false mendelianViolation=false invertMendelianViolation=false mendelianViolationQualThreshold=0.0 select_random_fraction=0.0 remove_fraction_genotypes=0.0 selectTypeToInclude=[] selectTypeToExclude=[] keepIDs=null excludeIDs=null fullyDecode=false justRead=false maxIndelSize=2147483647 minIndelSize=0 maxFilteredGenotypes=2147483647 minFilteredGenotypes=0 maxFractionFilteredGenotypes=1.0 minFractionFilteredGenotypes=0.0 setFilteredGtToNocall=false ALLOW_NONOVERLAPPING_COMMAND_LINE_SAMPLES=false filter_reads_with_N_cigar=false filter_mismatching_base_and_quals=false filter_bases_not_stored=false"">; ```. The BAM header lines look something like this (may have changed slightly in more recent versions):. ```; @PG	ID:GATK IndelRealigner	VN:1.2-573-g821421d	CL:knownAlleles=[(RodBinding name=knownAlleles source=/humgen/gsa-hpprojects/GATK/data/Comparisons/Validated/dbSNP/dbsnp_132_b37.leftAligned.vcf), (RodBinding name=knownAlleles2 source=/humgen/1kg/processing/official_release/phase1/projectConsensus/ALL.wgs.projectConsensus_v2b.20101123.snps.sites.vcf), (RodBinding name=knownAlleles3 source=/humgen/gsa-hpprojects/GATK/data/Comparisons/Unvalidated/AFR+EUR+ASN+1KG.dindel_august_release_merged_pilot1.20110126.sites.vcf)] LODThresholdForCleaning=5.0 consensusDeterminationModel=USE_READS entropyThreshold=0.15 maxReadsInMemory=150000 maxIsizeForMovement=3000 maxPositionalMoveAllowed=200 maxConsensuses=30 maxReadsForConsensuses=120 maxReadsForRealignment=20000 noOriginalAlignmentTags=false nWayOut=null generate_nWayOut_md5s=false check_early=false noPGTag=false keepPGTags=false indelsFileForDebugging=null statisticsFileForDebugging=null SNPsFileForDebugging=null; ```. We don't need to replicate the formatting of these -- we can just have the raw command line as a String for both headers, along with ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2269:3429,Validat,Validated,3429,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2269,1,['Validat'],['Validated']
Security,"onsolidated with---@jamesemery thoughts? Again, let me reiterate that it seems that many of these parameter values were chosen arbitrarily (or, if not, that the procedure for choosing them has been lost). As a start, you can see the results of some optimizations I did on the CHM mix on slide 15 at https://docs.google.com/presentation/d/1zGuquAZWSUQ-wNxp8D6HhGNjIaFcV0_X9WAS4LODbEo/edit?usp=sharing Here, I optimized over haplotype-to-reference + read-to-haplotype SW parameters on various metrics after variant normalization using vcfeval. These optimizations were done using the Bayesian optimization framework I prototyped long ago (see https://github.com/broadinstitute/gatk-evaluation/tree/master/pipeline-optimizer and https://docs.google.com/presentation/d/1t5WOAEOMp0xAzJgpKbP68BUnclNYfIVRrDSL9wl1-3A/edit?usp=sharing); this entailed running parameter scans using a local Cromwell on my desktop. Probably this optimization work could be redone relatively easily using the Neptune framework put together by @dalessioluca, which was still in development at the time I did this work. Happy to share the resources and scripts I used if we go down this route; they are pretty lightweight. See more discussion starting here: https://github.com/broadinstitute/gatk/issues/5564#issuecomment-710107566. Alternatively, we could merge this branch to expose the parameters now and punt on consolidating/optimizing them. I'm not completely convinced we should even do the former unless we are going to follow through on the latter, but happy to defer to others. Finally, note also there is one code optimization that I removed, since it makes assumptions on the SW parameter values that might not be valid for non-default values. I'll highlight this with a comment below. We can restore it if we add code to check whether the assumptions hold, but I'd be curious to see in which cases the optimization makes a big difference. See https://github.com/broadinstitute/gatk/issues/6863#issuecomment-707870344.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471:2619,expose,expose,2619,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471,1,['expose'],['expose']
Security,oogle.cloud.storage.spi.v1.HttpStorageRpc.read(HttpStorageRpc.java:510); 	... 47 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse$SizeValidatingInputStream.read(NetHttpResponse.java:169); 	at java.io.FilterInputStream.read(FilterInputStream.java:107); 	at shaded.cloud_nio.com.google.api.client.util.ByteStreams.copy(ByteStreams.java:51); 	at shaded.cloud_nio.com.google.api.client.util.IOUtils.copy(IOUtils.java:94); 	... 50 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.security.ssl.InputRecord.read(InputRecord.java:532); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 60 more; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727:7550,secur,security,7550,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-308541727,6,['secur'],['security']
Security,"ools (GenomicsDBImport, GatherVcfs). Sometimes we get this as the only response from GATK when this happens. ```; ***********************************************************************. A USER ERROR has occurred: Couldn't read file. Error was: Failure while waiting for FeatureReader to initialize with exception: com.google.cloud.storage.StorageException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-gotc-prod-storage/pipeline/G101956/gvcfs/DDP_ATCP_42_1.4afb46bb-4009-47c4-9aa0-407e92de0db8.g.vcf.gz. ***********************************************************************; ```. and other times we get a nice stacktrace for this issue. ```; java.lang.RuntimeException: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-jg-dev-11k-call-set/JointGenotyping/0cb36821-b8bf-4e6d-a352-07b101f6b7d1/call-ApplyRecalibration/shard-1734/GMKF_Seidman_CHD_WGS_904.filtered.1734.vcf.gz.; 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.read(SeekableByteChannelPrefetcher.java:309); 	at htsjdk.samtools.seekablestream.SeekablePathStream.read(SeekablePathStream.java:86); 	at htsjdk.samtools.util.IOUtil.transferByStream(IOUtil.java:141); 	at org.broadinstitute.hellbender.tools.GatherVcfsCloud.gatherWithBlockCopying(GatherVcfsCloud.java:394); 	at org.broadinstitute.hellbender.tools.GatherVcfsCloud.doWork(GatherVcfsCloud.java:143); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:119); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:176); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:195); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:137); 	at org.broadinstitute.hellbender",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3735:1277,access,access,1277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3735,1,['access'],['access']
Security,"ools to overwrite the expected results.; ; We test the Cartesian product of the following options: 1) non-allele-specific vs. allele-specific, 2) SNP vs. indel vs. both, and 3) positive vs. positive-unlabeled. Downstream, we'll further subset to a subset of these options, since training/scoring functionality shouldn't really change across some of them.; ; I'm currently just using call outs to system commands to diff and h5diff the VCFs and HDF5s, respectively. I think the latter command should be available in the GATK Conda environment. This will be a bit awkward, in the sense that the tests for this tool will require the Conda environment, but the tool itself will not. But I think this is probably preferable to writing test code to compare HDF5s, minimal though that might be, since the schema might change in the future.; - [x] Tool-level docs. Minor TODOs:. - [x] Parameter-level docs. Could perhaps expand on the `resources` parameter once the required labels are settled.; - [x] Parameter validation.; - [x] Clean up docs for parent walker.; - [x] Decide on required labels. I think ""training"" and ""calibration"" (rather than the legacy ""training"" and ""truth"") might be good candidates. EDIT: Switched ""truth"" to ""calibration"" throughout the codebase.; - [x] Validate privileged labels (snp, training, calibration) in parent walker.; ; Future work:. - [ ] Clean up unlabeled outputs. This includes 1) sorting the corresponding HDF5, and 2) outputting a corresponding sites-only VCF. Unlike the labeled sites, which are written individually to VCF as we traverse them, unlabeled sites are placed into a reservoir of fixed size for subsampling purposes. Thus, we cannot write them to VCF as with labeled sites; furthermore, after traversal, the unlabeled sites are not ordered within the reservoir. Ultimately, the lack of this VCF means that extracted, unlabeled sites cannot be tagged as such by the scoring tool in the final VCF.; - [ ] Consider downsampling of labeled data. This is no",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059:3171,validat,validation,3171,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059,1,['validat'],['validation']
Security,ools.util.SortingCollection.spillToDisk(SortingCollection.java:247); 	at htsjdk.samtools.util.SortingCollection.add(SortingCollection.java:182); 	at htsjdk.samtools.SAMFileWriterImpl.addAlignment(SAMFileWriterImpl.java:202); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:36); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:16); 	at htsjdk.samtools.util.AbstractAsyncWriter$WriterRunnable.run(AbstractAsyncWriter.java:123); 	at java.base/java.lang.Thread.run(Thread.java:829); 	Suppressed: htsjdk.samtools.util.RuntimeIOException: Attempt to add record to closed writer.; 		at htsjdk.samtools.util.AbstractAsyncWriter.write(AbstractAsyncWriter.java:57); 		at htsjdk.samtools.AsyncSAMFileWriter.addAlignment(AsyncSAMFileWriter.java:58); 		at org.broadinstitute.hellbender.utils.read.SAMFileGATKReadWriter.addRead(SAMFileGATKReadWriter.java:21); 		at org.broadinstitute.hellbender.tools.walkers.rnaseq.OverhangFixingManager.writeReads(OverhangFixingManager.java:358); 		at org.broadinstitute.hellbender.tools.walkers.rnaseq.OverhangFixingManager.flush(OverhangFixingManager.java:338); 		at org.broadinstitute.hellbender.tools.walkers.rnaseq.SplitNCigarReads.closeTool(SplitNCigarReads.java:192); 		at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1095); 		at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:149); 		at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:198); 		at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:217); 		at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 		at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 		at org.broadinstitute.hellbender.Main.main(Main.java:289). Still have no idea why it's doing this though. Trying ValidateSamFile on my file in question doesn't turn up anything meaningful.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8232#issuecomment-1452463087:3042,Validat,ValidateSamFile,3042,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8232#issuecomment-1452463087,1,['Validat'],['ValidateSamFile']
Security,opFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); 	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2812); 	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:100); 	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2849); 	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2831); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:389); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:171); 	at org.apache.hadoop.fs.FileSystem$1.run(FileSystem.java:168); 	at java.base/java.security.AccessController.doPrivileged(Native Method); 	at java.base/javax.security.auth.Subject.doAs(Subject.java:423); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1836); 	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:168); 	at org.genomicsdb.reader.GenomicsDBQueryStream.jniGenomicsDBInit(Native Method); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:209); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:182); 	at org.genomicsdb.reader.GenomicsDBQueryStream.<init>(GenomicsDBQueryStream.java:91); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.generateHeadersForQuery(GenomicsDBFeatureReader.java:176); 	at org.genomicsdb.reader.GenomicsDBFeatureReader.<init>(GenomicsDBFeatureReader.java:80); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.getGenomicsDBFeatureReader(GenomicsDBImportIntegrationTest.java:926); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.checkGenomicsDBAgainstExpe,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6522:1628,secur,security,1628,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6522,1,['secur'],['security']
Security,"orMetricsUpdate(34,WrappedArray()); 18/01/12 20:38:37 ERROR org.apache.spark.scheduler.LiveListenerBus: SparkListenerBus has already stopped! Dropping event SparkListenerExecutorMetricsUpdate(60,WrappedArray()); 20:38:37.897 INFO StructuralVariationDiscoveryPipelineSpark - Shutting down engine; [January 12, 2018 8:38:37 PM UTC] org.broadinstitute.hellbender.tools.spark.sv.StructuralVariationDiscoveryPipelineSpark done. Elapsed time: 42.74 minutes.; Runtime.totalMemory()=16692805632; org.apache.spark.SparkException: Job aborted due to stage failure: Task 284 in stage 25.0 failed 4 times, most recent failure: Lost task 284.3 in stage 25.0 (TID 43224, cw-test-w-6.c.broad-dsde-methods.internal, executor 7): java.lang.IllegalArgumentException: two input alignments' overlap on read consumes completely one of them.	1_1097_chrUn_JTFH01000492v1_decoy:501-1597_+_1097M6H_60_1_1092_O	483_612_chr17:26962677-26962806_-_482S130M491S_60_-1_281_S; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:681); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.prototype.ContigAlignmentsModifier.removeOverlap(ContigAlignmentsModifier.java:36); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.prototype.AssemblyContigAlignmentSignatureClassifier.lambda$processContigsWithTwoAlignments$e28aa838$1(AssemblyContigAlignmentSignatureClassifier.java:114); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction$1.apply(JavaPairRDD.scala:1040); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at org.apache.spark.util.collection.ExternalSor",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4141:6681,validat,validateArg,6681,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4141,1,['validat'],['validateArg']
Security,"org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile --input src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1151,Validat,ValidateSamFile,1151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,org.gradle.wrapper.Install$1.call(Install.java:48); 	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69); 	at org.gradle.wrapper.Install.createDist(Install.java:48); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:284); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3368); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:62); 	... 7 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.security.ssl.InputRecord.read(InputRecord.java:532); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	... 14 more,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401:2801,secur,security,2801,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401,6,['secur'],['security']
Security,org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walker,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:60637,Validat,ValidateVariants,60637,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,"ormatter - Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14 ; INFO 17:39:56,368 HelpFormatter - Program Args: -T LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V zeta_af-only-gnomad_Hg19toGRCh38.vcf.gz -o eta_af-only-gnomad_Hg19toGRCh38.vcf.gz ; INFO 17:39:56,373 HelpFormatter - Executing as shlee@WMCF9-CB5 on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14. ; INFO 17:39:56,374 HelpFormatter - Date/Time: 2017/08/22 17:39:56 ; INFO 17:39:56,374 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 17:39:56,374 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 17:39:56,385 GenomeAnalysisEngine - Strictness is SILENT ; INFO 17:39:57,377 GenomeAnalysisEngine - Downsampling Settings: Method: BY_SAMPLE, Target Coverage: 1000 ; WARN 17:39:57,688 IndexDictionaryUtils - Track variant doesn't have a sequence dictionary built in, skipping dictionary validation ; INFO 17:39:58,497 GenomeAnalysisEngine - Preparing for traversal ; INFO 17:39:58,502 GenomeAnalysisEngine - Done preparing for traversal ; INFO 17:39:58,503 ProgressMeter - [INITIALIZATION COMPLETE; STARTING PROCESSING] ; INFO 17:39:58,503 ProgressMeter - | processed | time | per 1M | | total | remaining ; INFO 17:39:58,503 ProgressMeter - Location | sites | elapsed | sites | completed | runtime | runtime ; INFO 17:39:58,692 LeftAlignAndTrimVariants - Reference allele is too long (245) at position chr1:10146; skipping that record. Set --reference_window_stop >= 245 ; INFO 17:39:58,697 LeftAlignAndTrimVariants - Reference allele is too long (225) at position chr1:10178; skipping that record. Set --reference_window_stop >= 225 ; INFO 17:39:58,700 LeftAlignAndTrimVariants - Reference allele is too long (221) at position chr1:10213; skipping that record. Set --reference_window_stop >= 221 ; INFO 17:39:58,700 LeftAlignAndTrimVariants - Reference allele is",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487:3198,validat,validation,3198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487,1,['validat'],['validation']
Security,ort. I have migrated to using the 4.5 release after some regression testing. Below is a list of critical and high findings with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSJETTISON-3168085); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3367610](https://secur,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:1191,secur,security,1191,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['secur'],['security']
Security,"otator - Initializing Funcotator Engine...; 16:01:43.983 INFO Funcotator - Creating a VCF file for output: file:/home/deepak/software_library/gatk-4.1.7.0/variants.funcotated.vcf; 16:01:44.020 INFO ProgressMeter - Starting traversal; 16:01:44.020 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 16:01:44.068 WARN GencodeFuncotationFactory - Cannot create complete funcotation for variant at chr1:1-10454 due to alternate allele: <NON_REF>; 16:01:44.116 INFO VcfFuncotationFactory - dbSNP 9606_b150 cache hits/total: 0/0; 16:01:44.121 INFO Funcotator - Shutting down engine; [12 May, 2020 4:01:44 PM IST] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.14 minutes.; Runtime.totalMemory()=2889875456; java.lang.IllegalArgumentException: Invalid interval. Contig:chr1 start:-9 end:10464; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:733); at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:35); at org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.createReferenceSnippet(FuncotatorUtils.java:1439); at org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.getBasesInWindowAroundReferenceAllele(FuncotatorUtils.java:1468); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationForSymbolicAltAllele(GencodeFuncotationFactory.java:2560); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFlankFuncotation(GencodeFuncotationFactory.java:2465); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnSingleTranscript(GencodeFuncotationFactory.java:953); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsHelper(GencodeFuncot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-664565036:6484,validat,validatePositions,6484,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6598#issuecomment-664565036,1,['validat'],['validatePositions']
Security,"ou, please let me know if you think anyone else should look at this. This issue is created from a forum bug report (https://gatkforums.broadinstitute.org/gatk/discussion/24511/error-in-readspipelinespark-version-4-1-4/p1). More information can be requested if necessary. Stack trace copied below:; > A USER ERROR has occurred: Couldn't write file hdfs://cloudera08/gatk-test2/WES2019-022_S4_out.vcf because writing failed with exception concat: target file /gatk-test2/WES2019-022_S4_out.vcf.parts/output is empty; > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concatInternal(FSNamesystem.java:2303); > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concatInt(FSNamesystem.java:2257); > at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.concat(FSNamesystem.java:2219); > at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.concat(NameNodeRpcServer.java:829); > at org.apache.hadoop.hdfs.server.namenode.AuthorizationProviderProxyClientProtocol.concat(AuthorizationProviderProxyClientProtocol.java:285); > at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.concat(ClientNamenodeProtocolServerSideTranslatorPB.java:580); > at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); > at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:617); > at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1073); > at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2278); > at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2274); > at java.security.AccessController.doPrivileged(Native Method); > at javax.security.auth.Subject.doAs(Subject.java:422); > at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1924); > at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2272); > ; > org.broadinstitute.hellbender.exceptions.UserException$CouldNotCreateOutputFile: Cou",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6218:1163,Authoriz,AuthorizationProviderProxyClientProtocol,1163,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6218,1,['Authoriz'],['AuthorizationProviderProxyClientProtocol']
Security,"oud.auth.service.account.json.keyfile"", gcs_creds);; hdfsBuilderConfSetStr(builder, ""fs.gs.project.id"", value);; }; }. if (working_dir.empty()) {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", ""/"");; } else {; hdfsBuilderConfSetStr(builder, ""fs.gs.working.dir"", working_dir.c_str());; }. // Default buffer sizes are huge in the GCS connector. GenomicsDB reads/writes in smaller chunks,; // so the buffer size can be made a little smaller.; hdfsBuilderConfSetStr(builder, ""fs.gs.io.buffersize.write"", ""262144"");. hdfsFS hdfs_handle = hdfsBuilderConnect(builder);; free(value);; return hdfs_handle;; }; ```. This is the error from Travis logs-; ```; Running Test: Test method testWriteToAndQueryFromGCS(org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest); hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Error getting access token from metadata server at: http://metadata/computeMetadata/v1/instance/service-accounts/default/token; at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:210); at com.google.cloud.hadoop.util.CredentialConfiguration.getCredential(CredentialConfiguration.java:75); at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1826); Caused by: com.google.api.client.http.HttpResponseException: 404 Not Found; {""error"":""invalid_request"",""error_description"":""Service account not enabled on this instance""}; at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1072); at com.google.cloud.hadoop.util.CredentialFactory$ComputeCredentialWithRetry.executeRefreshToken(CredentialFactory.java:159); at com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); at com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:208); ... 77 more; [GenomicsDB::",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888:1619,access,access,1619,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422915888,1,['access'],['access']
Security,"oups in a SAM/BAM/CRAM file with a single new read group; ApplyBQSR Applies the BQSR table to the input SAM/BAM/CRAM; BaseRecalibrator Generates recalibration table for BQSR; BuildBamIndex Generates a BAM index (.bai) file; CalculateReadGroupChecksum Creates a hash code based on the read groups (RG) in the SAM/BAM/CRAM header; CleanSam Cleans the provided SAM/BAM/CRAM, soft-clipping beyond-end-of-reference alignments and setting MAPQ to 0 for unmapped reads; ClipReads Clip reads in a SAM/BAM/CRAM file; CompareBaseQualities Compares base qualities of two input SAM/BAM/CRAM files; CompareSAMs Compares two input SAM/BAM/CRAM files; CountBases Count bases in a SAM/BAM/CRAM file; CountReads Count reads in a SAM/BAM/CRAM file; DownsampleSam Down-sample a SAM/BAM file to retain a random subset of the reads; EstimateLibraryComplexity Estimates library complexity from the sequence of read pairs; ExampleReadWalkerWithReference Print reads with reference context; ExampleReadWalkerWithVariants Print reads with overlapping variants; FastqToSam Converts a fastq file to an unaligned SAM/BAM file; FilterReads Creates a new SAM/BAM/CRAM file by including or excluding aligned reads; FixMateInformation Ensure that all mate-pair information is in sync between each read and its mate pair; FixMisencodedBaseQualityReads Fix Illumina base quality scores in a SAM/BAM/CRAM file; FlagStat A reimplementation of the 'samtools flagstat' subcommand; GatherBQSRReports Gathers scattered BQSR recalibration reports into a single file; GatherBamFiles Concatenates one or more BAM files together as efficiently as possible; LeftAlignIndels Left-aligns indels from reads in a SAM/BAM/CRAM file; MarkDuplicates Examines aligned records in the supplied SAM/BAM/CRAM file to locate duplicate molecules.; MergeBamAlignment Merges alignment data from a SAM/BAM with data in an unmapped SAM/BAM/CRAM file; MergeSamFiles Merges multiple SAM/BAM files into one file; PrintReads Print reads in the SAM/BAM/CRAM file; Reor",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1669:3800,hash,hash,3800,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1669,1,['hash'],['hash']
Security,ow_down: |; | [.../walkers/contamination/CalculateContamination.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ2FsY3VsYXRlQ29udGFtaW5hdGlvbi5qYXZh) | `96.552% <ø> (ø)` | `10 <0> (ø)` | :arrow_down: |; | [...ender/tools/walkers/annotator/InbreedingCoeff.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9JbmJyZWVkaW5nQ29lZmYuamF2YQ==) | `72.414% <ø> (-13.793%)` | `7 <0> (-3)` | |; | [...der/tools/walkers/CombineGVCFsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL0NvbWJpbmVHVkNGc0ludGVncmF0aW9uVGVzdC5qYXZh) | `1.262% <ø> (-88.675%)` | `2 <0> (-36)` | |; | [...s/walkers/validation/CalculateMixingFractions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ2FsY3VsYXRlTWl4aW5nRnJhY3Rpb25zLmphdmE=) | `78.431% <ø> (ø)` | `15 <0> (ø)` | :arrow_down: |; | [...s/walkers/validation/MergeMutect2CallsWithMC3.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vTWVyZ2VNdXRlY3QyQ2FsbHNXaXRoTUMzLmphdmE=) | `81.25% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...tools/walkers/mutect/SomaticLikelihoodsEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9Tb21hdGljTGlrZWxpaG9vZHNFbmdpbmUuamF2YQ==) | `86.667% <ø> (-2.222%)` | `17 <0> (-1)` | |; | ... and [1382 more](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734:3415,validat,validation,3415,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734,1,['validat'],['validation']
Security,"pPartitionsRDD.scala:38); 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323); 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); 	at org.apache.spark.scheduler.Task.run(Task.scala:108); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:748). I don't understand why if the command is the same:; ```; $GATK_PATH BwaAndMarkDuplicatesPipelineSpark --bam-partition-size 64000000 or 4000000 \; --input hdfs://namenode:8020/$dir_prepro$ubam \; --reference hdfs://namenode:8020/hg19-ucsc/ucsc.hg19.2bit \; --bwa-mem-index-image /reference_image/ucsc.hg19.fasta.img \; --disable-sequence-dictionary-validation true \; --output hdfs://namenode:8020/$dir_prepro$output -- \; --spark-runner SPARK --spark-master spark://$SPARK_MASTER_HOST:7077 \; --driver-memory 20g --executor-cores 4 --executor-memory 8g; ```. Furthermore I have this problem with this version v4.0.4.0-23-g6e1cc8c-SNAPSHOT. > mark duplicate records objects corresponding to read with name, this could be the result of readnames spanning more than one partition; 	at org.broadinstitute.hellbender.tools.spark.transforms.markduplicates.MarkDuplicatesSpark.lambda$null$0(MarkDuplicatesSpark.java:109); 	at java.util.HashMap.merge(HashMap.java:1253); 	at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); 	at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.R",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4820:6506,validat,validation,6506,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4820,1,['validat'],['validation']
Security,"pdated based on them... I think that best way to move forward here is:; 1. Lift up that maximum number of Genotypes to output PLs based on the ploidy parameter (I think the limit was quite modest perhaps as low as 20).; 2. Implement the alt. allele `culling` or `collapsing` that I mention above in HaplotypeCaller already. ; 3. Implement the alt. allele `re-culling` or `re-collapsing` in GVCF (VCF as well?) merging tools such as CombineGVCFs/GenotypeGVCFs.; 4. Regenotyping and QUAL recalculating tools would need to make sure that PLs less input are handled appropriately, not sure what would happen now if some of the inputs lack PLs... (an Exception?) ; - For example QUAL could be approximated as the max of the input Quals, and QD as the average? ; - Or simple lift them blank?. So it would a bit of work I would say... 3 of the old PTs worth. ---. @vdauwera commented on [Thu May 14 2015](https://github.com/broadinstitute/gsa-unstable/issues/855#issuecomment-102235192). Recording test case while sanitizing: . The files are located here: . ```; gsa1:/humgen/gsa-scr1/schandra/GenotypeGVCFs_LargePloidyAndLargeAlleles; ```. The command I ran:. ```; java -jar /humgen/gsa-hpprojects/GATK/private_unstable_builds/GenomeAnalysisTK_latest_unstable.jar \; -T GenotypeGVCFs \; -R /humgen/gsa-scr1/schandra/GenotypeGVCFs_LargePloidyAndLargeAlleles/45S_Jacobsen_rearranged.fa \; -V /humgen/gsa-scr1/schandra/GenotypeGVCFs_LargePloidyAndLargeAlleles/Input_ploidy.list \; -o Sheila.GenotypeGVCFs.vcf; ```. Which produces:. ```; ##### ERROR MESSAGE: the combination of ploidy (19) and number of alleles (21) results in a very large number of genotypes (> 2147483647). You need to limit ploidy or the number of alternative alleles to analyze this locus; ```. ---. @chandrans commented on [Wed Jan 20 2016](https://github.com/broadinstitute/gsa-unstable/issues/855#issuecomment-173357206). @davidbenjamin Hi David. Have you had a chance to look at this?. ---. @davidbenjamin commented on [Sat Jan 23 201",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2955:3413,sanitiz,sanitizing,3413,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2955,1,['sanitiz'],['sanitizing']
Security,"peline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.ReadWalker.traverse(ReadWalker.java:94); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1039); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); 	at org.broadinstitute.hellbender.Main.main(Main.java:291). My GATK version is :GATK4.1.2.0; My command is:; /data/home/wuly/soft/GATK4/gatk-4.1.2.0/gatk --java-options ""-Xmx20G -Djava.io.tmpdir=./"" BaseRecalibrator -R /data/home/wuly/source/Homo_sapiens_assembly38.fasta \; -I M1.bam \; --known-sites /data/home/wuly/source/hapmap_3.3.hg38.vcf.gz \; --known-sites /data/home/wuly/source/dbsnp_146.hg38.vcf.gz \; --known-sites /data/home/wuly/source/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz \; --known-sites /data/home/wuly/source/1000G_phase1.snps.high_confidence.hg38.vcf.gz \; -O M1_recal.table; Then I run the ValidateSamFile to check the BAM file,this is the command : ; /data/home/wuly/soft/GATK4/gatk-4.1.2.0/gatk --java-options ""-Xmx20G -Djava.io.tmpdir=./"" ValidateSamFile -I M1.bam. And the result is: No errors found; I also tried to use the BAM file before I merge them to run BaseRecalibrator and ValidateSamFile, but I got the same result.Can anybody tell me how solve this problem?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5968:11938,Validat,ValidateSamFile,11938,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5968,3,['Validat'],['ValidateSamFile']
Security,"periment with the LL score discussed there (see https://www.aaai.org/Papers/ICML/2003/ICML03-060.pdf for the original paper---although note that despite the paper's high citation count, I'm not sure what the canonical name for this metric actually is, but it doesn't appear to be ""LL score""---perhaps someone else knows or has better Google-fu and can figure it out) before moving on to their methods for estimating F1. Doing a literature search for other discussions of optimizing F1 or other metrics in the context of positive-unlabeled learning might be worthwhile, but I think most methods will probably involve some sort of estimation of the base rate in unlabeled data. I think we may have to add some mechanism for holding out a validation set during training if we want to automatically tune thresholds in a rigorous fashion. Shouldn't be too bad---we can just have the training tool randomly mask out a set of the truth and pass the mask to the scoring tool (or maybe just determine the threshold in the training tool, if we are running in positive/negative mode and have access to unlabeled data)---but does add a couple of parameters to the tool interfaces. This also adds additional dependence on the quality of the truth resources. I think an implicit assumption in any use of the truth---even just thresholding/calibrating by sensitivity---is that it is a random sample; however, I'm not sure how true this is in actual use. For example, in malaria, it looks like we may have to resort to using a callset that has been very conservatively filtered as truth, which will bias us towards high scores and the peaks of the positive distribution. Perhaps we can also experiment with just treating training/truth on an equal footing (I think the distinction between the two is somewhat blurry in the original VQSR design, anyway). Perhaps @davidbenjamin has some thoughts? I see some related stuff going on in ThresholdCalculator, but I have to admit that I can't tell whether that's used in a ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241:1602,access,access,1602,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1062931241,2,['access'],['access']
Security,pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.IMPROPER_PAIR.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExa,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:60310,Validat,ValidateVariants,60310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,ples.MendelianViolation.updateViolations(MendelianViolation.java:122) at org.broadinstitute.hellbender.utils.samples.MendelianViolation.countFamilyViolations(MendelianViolation.java:148) at org.broadinstitute.hellbender.tools.walkers.varianteval.evaluators.MendelianViolationEvaluator.update1(MendelianViolationEvaluator.java:122) at org.broadinstitute.hellbender.tools.walkers.varianteval.util.EvaluationContext.apply(EvaluationContext.java:74) at org.broadinstitute.hellbender.tools.walkers.varianteval.VariantEval.processComp(VariantEval.java:596) at org.broadinstitute.hellbender.tools.walkers.varianteval.VariantEval.doApply(VariantEval.java:562) at org.broadinstitute.hellbender.tools.walkers.varianteval.VariantEval$PositionAggregator.callDoApply(VariantEval.java:497) at org.broadinstitute.hellbender.tools.walkers.varianteval.VariantEval$PositionAggregator.addVariant(VariantEval.java:478) at org.broadinstitute.hellbender.tools.walkers.varianteval.VariantEval$PositionAggregator.access$100(VariantEval.java:469) at org.broadinstitute.hellbender.tools.walkers.varianteval.VariantEval.apply(VariantEval.java:511) at org.broadinstitute.hellbender.engine.MultiVariantWalker.lambda$traverse$1(MultiVariantWalker.java:120) at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) at java.util.Iterator.forEachRemaining(Iterator.java:116) at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) at,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7304:5099,access,access,5099,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7304,1,['access'],['access']
Security,port ValidateVariants,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/46:5,Validat,ValidateVariants,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/46,1,['Validat'],['ValidateVariants']
Security,"port and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN ValidateVariants - Other possible validations will still be performed; 19:53:35.594 INFO ProgressMeter - Starting traversal; 19:53:35.595 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 19:53:35.660 INFO ValidateVariants - Shutting down engine; [October 25, 2020 7:53:35 PM CDT] org.broadi",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:2310,Validat,ValidateVariants,2310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"ports:; - 8334:50070; volumes:; - /data0/reference/hg19-ucsc/:/reference/hg19-ucsc/; - /data0/output/:/output/; - /data/ngs/:/ngs/; datanode:; image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8; networks:; - workbench; volumes:; - datanode:/hadoop/dfs/data; environment:; SERVICE_PRECONDITION: ""namenode:50070""; # depends_on:; # - namenode; env_file:; - ./hadoop.env; deploy:; mode: global; restart_policy:; condition: on-failure; labels:; traefik.docker.network: workbench; traefik.port: 50075. volumes:; datanode:; namenode:. networks:; workbench:; external: true; ```; the datanodes and namenode and spark master and workers are all working.; My hardware resources are:; 16 core and 1Tb memory ssd and 56Gb ram for 3 machines. I have this problem when I launch the version(GATK) v4.0.4.0 but not with this version v4.0.2.0-4-gb59d863-SNAPSHOT:. >java.lang.IllegalStateException: Duplicate key -1; 	at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); 	at java.util.HashMap.merge(HashMap.java:1253); 	at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); 	at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); 	at org.broadinstitute.hellbender.tools.spark.transforms.markduplicates.MarkDuplicatesSpark.lambda$mark$2142e97f$1(MarkDuplicatesSpark.java:82); 	at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$10$1.apply(JavaRDDLike.scala:319); 	at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4820:3691,Hash,HashMap,3691,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4820,1,['Hash'],['HashMap']
Security,precompute hashcode in MultiDeBruijnVertex and added a bunch of tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1625:11,hash,hashcode,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1625,1,['hash'],['hashcode']
Security,prevent accidental toString call during validation,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3478:40,validat,validation,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3478,1,['validat'],['validation']
Security,prevent sequence dictionary validation when aligning reads,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4308:28,validat,validation,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4308,1,['validat'],['validation']
Security,"previously, tools that align reads required you to manually disable sequence dictionary validation; if you didn't, they would fail because the unaligned bam didn't have the required sequence dictionary. extracting out a SequenceDictionaryValidationArgumentCollection and providing a method for GATKSparkTools to configure it; ReadsPipeline couldn't easily make use of this, so instead it overrides the method that does validation. BwaSpark / BwaAndMarkDuplicatesPipelineSpark now do not require or allow dictionary validation; fixes #4131",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4308:88,validat,validation,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4308,3,['validat'],['validation']
Security,"ps://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-256499771). Writing pipeline-help now and cc'ing everyone involved in this thread. Will try to get some kind of protocol set up for debugging things that happen in the cloud pipeline, because I expect this will happen again. But if it gets too complicated we could also mock up some fake records that would reproduce this. It seems to me that shouldn't be too hard. . ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-260498705). I need to ping Daniel on getting access to the files. ---. @ronlevine commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275576931). @vdauwera Can you get the data? I can take a look a this issue. ---. @vdauwera commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275578721). Oh, they gave me access to the files but I never took the next step of figuring out which files are relevant. There are twenty thousand samples... I'm not sure what is the best way to approach this. ---. @ldgauthier commented on [Wed Mar 01 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-283365248). It would be too computationally expensive and just generally painful to get; that dropped allele. I'd suggest making a unit test with some fake data.; You'll need two positions: one upstream with a deletion to generate the *; and one for the SNP. I think the dropped allele was a 1bp deletion at the; same position that generated the representation with the extra base at the; end. Give that one a really low quality in its gvcf so it gets dropped.; PLs don't really matter as long as they jive with the quals and aren't hom; ref. You can just grab numbers from any other valid vcf. I think you can do; it with three samples: one with the upstream deletion and *, one with the; AC SNP and one with the low quality deletion.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2959:3345,access,access,3345,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2959,1,['access'],['access']
Security,"questing a new application from cluster with 2 NodeManagers; 17/10/11 14:19:12 INFO yarn.Client: Verifying our application has not requested more than the maximum memory capability of the cluster (164726 MB per container); 17/10/11 14:19:12 INFO yarn.Client: Will allocate AM container, with 896 MB memory including 384 MB overhead; 17/10/11 14:19:12 INFO yarn.Client: Setting up container launch context for our AM; 17/10/11 14:19:12 INFO yarn.Client: Setting up the launch environment for our AM container; 17/10/11 14:19:12 INFO yarn.Client: Preparing resources for our AM container; 17/10/11 14:19:12 INFO gcs.GoogleHadoopFileSystemBase: GHFS version: 1.6.1-hadoop2; 17/10/11 14:19:12 INFO yarn.Client: Uploading resource file:/tmp/hdfs/spark-8c88439f-dcb0-48b2-86f3-fc82cef4c438/__spark_conf__8945422067005652415.zip -> hdfs://mg:8020/user/hdfs/.sparkStaging/application_1507683879816_0006/__spark_conf__8945422067005652415.zip; 17/10/11 14:19:13 INFO spark.SecurityManager: Changing view acls to: hdfs; 17/10/11 14:19:13 INFO spark.SecurityManager: Changing modify acls to: hdfs; 17/10/11 14:19:13 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hdfs); users with modify permissions: Set(hdfs); 17/10/11 14:19:13 INFO yarn.Client: Submitting application 6 to ResourceManager; 17/10/11 14:19:13 INFO impl.YarnClientImpl: Submitted application application_1507683879816_0006; 17/10/11 14:19:14 INFO yarn.Client: Application report for application_1507683879816_0006 (state: ACCEPTED); 17/10/11 14:19:14 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: root.users.hdfs; 	 start time: 1507702753100; 	 final status: UNDEFINED; 	 tracking URL: http://mg:8088/proxy/application_1507683879816_0006/; 	 user: hdfs; 17/10/11 14:19:15 INFO yarn.Client: Application report for application_1507683879816_0006 (state: ACCEPTED); 17/10/11 14:19:15 IN",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686:6153,Secur,SecurityManager,6153,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686,1,['Secur'],['SecurityManager']
Security,"r 01:13:16.078 INFO HaplotypeCaller - GCS max retries/reopens: 20 01:13:16.078 INFO HaplotypeCaller - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes 01:13:16.078 INFO HaplotypeCaller - Initializing engine 01:13:17.087 INFO HaplotypeCaller - Shutting down engine [January 18, 2020 1:13:17 AM IST] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: 0.02 minutes. Runtime.totalMemory()=2216689664 java.lang.NullPointerException at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getContigNames(SequenceDictionaryUtils.java:463) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.getCommonContigsByName(SequenceDictionaryUtils.java:457) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.compareDictionaries(SequenceDictionaryUtils.java:234) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:150) at org.broadinstitute.hellbender.utils.SequenceDictionaryUtils.validateDictionaries(SequenceDictionaryUtils.java:98) at org.broadinstitute.hellbender.engine.GATKTool.validateSequenceDictionaries(GATKTool.java:621) at org.broadinstitute.hellbender.engine.GATKTool.onStartup(GATKTool.java:563) at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.onStartup(AssemblyRegionWalker.java:160) at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:134) at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179) at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198) at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:152) at org.broadinstitute.hellbender.Main.mainEntry(Main.java:195) at org.broadinstitute.hellbender.Main.main(Main.java:275); > ; > Please suggest any solution. Thank you. hello，have you so",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5947#issuecomment-1605272955:2642,validat,validateDictionaries,2642,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5947#issuecomment-1605272955,1,['validat'],['validateDictionaries']
Security,"r [968be82cValidateBamsWf.ValidateBAM:0:1]: job id: 243; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Status change from - to Done; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor Workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 failed (during ExecutingWorkflowState): Job ValidateBamsWf.ValidateBAM:0:1 exited with return code -1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr.; Could not retrieve content: Could not read from /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 is in a terminal state: WorkflowFailedState; [2020-07-14 05:09:51,97] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2020-07-14 05:09:55,28] [info] Workflow polling stopped; [2020-07-14 05:09:55,30] [info] 0 workflows released by cromid-ca5c695; [2020-07-14 05:09:55,30] [info] Shutting down WorkflowStoreActor - Timeout = 5 seconds; [2020-07-14 05:09:55,30] [info] Shutting down WorkflowLogCopyRouter - Timeout = 5 seconds; [2020-07-14 05:09:55,30] [info] Shutting down JobExecutionTokenDispenser - Timeout = 5 seconds; [2020-07-14 05:09:55,31] [info] JobExecutionTokenDispenser stopped; [2020-07-14 05:09:55,31] [info] Aborting all running workflows.; [2020-07-14 05:09:55,31] [info] WorkflowStoreActor stopped; [2020-07-14 05:09:55,31] [info] WorkflowLogCopyRouter stopped; [2020-07-14 05:09:55,31] [info] Shutting down Workflow",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:7365,Validat,ValidateBamsWf,7365,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,4,['Validat'],"['ValidateBAM', 'ValidateBamsWf']"
Security,"r log: ; gsutil cat gs://broad-jg-dev-cromwell-execution/JointGenotyping/6918095f-ca06-4883-bcb5-f5c2e343bb6d/call-ImportGVCFs/shard-0/ImportGVCFs-0-stderr.log. Using GATK jar /usr/gitc/gatk-package-4.beta.6-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -Xmx4g -Xms4g -jar /usr/gitc/gatk-package-4.beta.6-local.jar GenomicsDBImport --genomicsDBWorkspace genomicsdb --batchSize 50 -L chr1:1-391754 --sampleNameMap /cromwell_root/broad-jg-dev-storage/freimer_dutch_fin_wgs_v1/v1/sample_map --readerThreads 5 -ip 500; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.H9t5pC; [December 14, 2017 7:41:30 PM UTC] GenomicsDBImport --genomicsDBWorkspace genomicsdb --batchSize 50 --sampleNameMap /cromwell_root/broad-jg-dev-storage/freimer_dutch_fin_wgs_v1/v1/sample_map --readerThreads 5 --intervals chr1:1-391754 --interval_padding 500 --genomicsDBSegmentSize 1048576 --genomicsDBVCFBufferSize 16384 --overwriteExistingGenomicsDBWorkspace false --consolidate false --validateSampleNameMap false --interval_set_rule UNION --interval_exclusion_padding 0 --interval_merging_rule ALL --readValidationStringency SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --addOutputVCFCommandLine true --cloudPrefetchBuffer 0 --cloudIndexPrefetchBuffer 0 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --gcs_max_retries 20 --disableToolDefaultReadFilters false; [December 14, 2017 7:41:30 PM UTC] Executing as root@7ca892f01ff3 on Linux 4.9.0-0.bpo.3-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_111-8u111-b14-2~bpo8+1-b14; Version: 4.beta.6; [December 14, ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3979:1550,validat,validateSampleNameMap,1550,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3979,1,['validat'],['validateSampleNameMap']
Security,r the second pass.; 44	GetPileupSummaries	beta; helper tool for CalculateContamination	6/5/2017	https://github.com/broadinstitute/gatk-protected/blob/2bf35790393332da5414b42ec6dca813fcc63202/src/main/java/org/broadinstitute/hellbender/tools/walkers/contamination/GetPileupSummaries.java	scripts/mutect2_wdl/mutect2.wdl	https://github.com/broadinstitute/gatk/pull/3006	yes	; 33	AnnotateVcfWithBamDepth	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/AnnotateVcfWithBamDepth.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 34	AnnotateVcfWithExpectedAlleleFraction	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/AnnotateVcfWithExpectedAlleleFraction.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 37	CalculateMixingFractions	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/CalculateMixingFractions.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 47	RemoveNearbyIndels	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/RemoveNearbyIndels.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes		; ```. This is also at <https://docs.google.com/a/broadinstitute.org/spreadsheets/d/15xviLwYUjU82MtYwxxPINiJAkovmaHpRGhqkghiEATQ/edit?usp=sharing>.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3055:13456,validat,validation,13456,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3055,2,['validat'],['validation']
Security,"r-mixed-ploidy-samples/p1); ----------; I'm attempting to call variants on whole genomes for about 500 illumina paired-end samples with varying ploidy (haploid to tetraploid). I'm running a fairly standard uBam to GVCF pipeline with HaplotypeCaller passed the ploidy information (1,2,3, or 4) in -ERC GVCF mode. I then try to collect the GVCFs using GenomicsDBImport in a batch size of 50 and use GenotypeGVCFs on the combined database. My interval list that is passed to GenomicsDBImport is just each chromosome on a separate line. I'm using GATK v4.1.1.0<br />; <br />; Command:<br />; ```<br />; ${GATK_DIR}/gatk GenomicsDBImport \<br />; --java-options ""-Xmx110g -Xms110g"" \<br />; -R ${REF} \<br />; --variant ${FILE_LIST} \<br />; -L ${SCRIPT_DIR}/GATK_Style_Interval.list \<br />; --genomicsdb-workspace-path ${WORK_DIR}/GenomicsDB_20190912 \<br />; --batch-size 50 \<br />; --tmp-dir=${WORK_DIR}/<br />; ```<br />; <br />; GenomicsDBImport appears to run without error, but only shows progress for the first 6000 bp before moving onto the next batch. When I run select variants on the created database, I only get variants up to position 6716 in the first interval. When I try to run GenotypeGVCF on it, I get a strange error:<br />; htsjdk.tribble.TribbleException: Invalid block size -1570639203<br />; <br />; My first assumption is that one of the gvcf's is malformed from HaplotypeCaller failing after the first 6000 bp, but I've verified that the gvcfs have all completed and have 'validated' them with ValidateVariants using GATK v4.1.3.0. When I grep for the particular position in the sample's gvcfs I don't find anything out of the ordinary. I would use CombineGVCFs, but it fails due to trying to combine mixed ploidies. <br />; <br />; Any ideas on troubleshooting or experience with problems like this?. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/24446/genomicsdbimport-not-completing-for-mixed-ploidy-samples/p1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6275:4509,validat,validated,4509,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6275,2,"['Validat', 'validat']","['ValidateVariants', 'validated']"
Security,"r.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at org.apache.spark.deploy.yarn.ApplicationMaster$$anon$4.run(ApplicationMaster.scala:721) ; ```. When I specify input as: `hdfs:///user/hadoop/gatk/common/human_g1k_v37.20.21.fasta`, the tool tries to access `hdfs://cromwellhadooptest:-1/user/hadoop/gatk/common/human_g1k_v37.20.21.fasta`. **Stack trace for this:**; ```; java.lang.IllegalArgumentException: Wrong FS: hdfs://cromwellhadooptest:-1/user/hadoop/gatk/common/human_g1k_v37.20.21.fasta, expected: hdfs://cromwellhadooptest; at org.apache.hadoop.fs.FileSystem.checkPath(FileSystem.java:776); at org.apache.hadoop.hdfs.DistributedFileSystem.getPathName(DistributedFileSystem.java:247); at org.apache.hadoop.hdfs.DistributedFileSystem$29.doCall(DistributedFileSystem.java:1725); at org.apache.hadoop.hdfs.DistributedFileSystem$29.doCall(DistributedFileSystem.java:1722); at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81); at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:1737); at org.apache.hadoop.fs.FileSystem.exists(FileSystem.java:1729); at hdfs.jsr203.HadoopFileSystem.checkAccess(HadoopFileSystem.java:937); at hdfs.jsr203.HadoopFileSystemProvider.checkAccess(HadoopFileSystemProvider",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6730:4906,access,access,4906,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6730,1,['access'],['access']
Security,"r.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```; The second case included the following `--alleles` input:; ```; 22	16464044	rs571268158	CCAGGTCT	C; 22	16464051	rs569099729	T	C; ```; and it crashed similarly, with:; ```; java.lang.IllegalStateException: Allele in genotype CCAGGTCT* not in the variant context [T*, *, C]; 	at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.makeMergedVariantContext(AssemblyBasedCallerUtils.java:221); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:150); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:599); 	at org.broadinstitute.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5337:2942,validat,validate,2942,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5337,1,['validat'],['validate']
Security,"r.java:617); 	at java.lang.Thread.run(Thread.java:748). I don't understand why if the command is the same:; ```; $GATK_PATH BwaAndMarkDuplicatesPipelineSpark --bam-partition-size 64000000 or 4000000 \; --input hdfs://namenode:8020/$dir_prepro$ubam \; --reference hdfs://namenode:8020/hg19-ucsc/ucsc.hg19.2bit \; --bwa-mem-index-image /reference_image/ucsc.hg19.fasta.img \; --disable-sequence-dictionary-validation true \; --output hdfs://namenode:8020/$dir_prepro$output -- \; --spark-runner SPARK --spark-master spark://$SPARK_MASTER_HOST:7077 \; --driver-memory 20g --executor-cores 4 --executor-memory 8g; ```. Furthermore I have this problem with this version v4.0.4.0-23-g6e1cc8c-SNAPSHOT. > mark duplicate records objects corresponding to read with name, this could be the result of readnames spanning more than one partition; 	at org.broadinstitute.hellbender.tools.spark.transforms.markduplicates.MarkDuplicatesSpark.lambda$null$0(MarkDuplicatesSpark.java:109); 	at java.util.HashMap.merge(HashMap.java:1253); 	at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); 	at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); 	at org.broadinstitute.hellbender.tools.spark.transforms.markduplicates.MarkDuplicatesSpark.lambda$mark$62928560$1(MarkDuplicatesSpark.java:109); 	at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$10$1.apply(JavaRDDLike.scala:319); 	at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$10$1.apply(",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4820:7101,Hash,HashMap,7101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4820,1,['Hash'],['HashMap']
Security,r20_2444518_2637800.RNAseq.IMPROPER_PAIR.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validation,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:60421,Validat,ValidateVariants,60421,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,r: IntelDeflater; 13:19:28.985 INFO PathSeqPipelineSpark - Inflater: IntelInflater; 13:19:28.985 INFO PathSeqPipelineSpark - GCS max retries/reopens: 20; 13:19:28.985 INFO PathSeqPipelineSpark - Requester pays: disabled; 13:19:28.985 INFO PathSeqPipelineSpark - Initializing engine; 13:19:28.985 INFO PathSeqPipelineSpark - Done initializing engine; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 23/05/23 13:19:29 INFO SparkContext: Running Spark version 2.4.5; 23/05/23 13:19:29 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 23/05/23 13:19:29 INFO SparkContext: Submitted application: PathSeqPipelineSpark; 23/05/23 13:19:29 INFO SecurityManager: Changing view acls to: singlecellproject; 23/05/23 13:19:29 INFO SecurityManager: Changing modify acls to: singlecellproject; 23/05/23 13:19:29 INFO SecurityManager: Changing view acls groups to: ; 23/05/23 13:19:29 INFO SecurityManager: Changing modify acls groups to: ; 23/05/23 13:19:29 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(singlecellproject); groups with view permissions: Set(); users with modify permissions: Set(singlecellproject); groups with modify permissions: Set(); 23/05/23 13:19:29 INFO Utils: Successfully started service 'sparkDriver' on port 40471.; 23/05/23 13:19:29 INFO SparkEnv: Registering MapOutputTracker; 23/05/23 13:19:29 INFO SparkEnv: Registering BlockManagerMaster; 23/05/23 13:19:29 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 23/05/23 13:19:29 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 23/05/23 13:19:29 INFO DiskBlockManager: Created local directory at pathseq/tmp/blockmgr-11fec4b1-0808-4f7e-9ab9-a87799853aee; 23/05/23 13:19:29 INFO MemoryStore: MemoryStore started with capacity 399.8 GB; 23/05/23 13:19:29 INFO SparkEnv: Regis,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8339:3771,Secur,SecurityManager,3771,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8339,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"rageRpc.translate(HttpStorageRpc.java:189); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:335); 	at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:191); 	at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:188); 	at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:94); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:54); 	at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:188); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:614); 	... 15 more; Caused by: shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 403 Forbidden; {; ""code"" : 403,; ""errors"" : [ {; ""domain"" : ""global"",; ""message"" : ""443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to fc-50c768b1-a285-4c95-8d8c-8ce209f1fda8/744139c5-3371-4a67-a2c8-e054e46f814f/ReblockGVCF/601ea396-b6cf-4baa-95c7-83e88b92c194/call-GenotypeGVCF/09C97227.c9cd4496-b4ed-4686-babd-177c66168178.vcf.gz.tbi."",; ""reason"" : ""forbidden""; } ],; ""message"" : ""443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to fc-50c768b1-a285-4c95-8d8c-8ce209f1fda8/744139c5-3371-4a67-a2c8-e054e46f814f/ReblockGVCF/601ea396-b6cf-4baa-95c7-83e88b92c194/call-GenotypeGVCF/09C97227.c9cd4496-b4ed-4686-babd-177c66168178.vcf.gz.tbi.""; }; 	at shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:145); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.A",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4592:3802,access,access,3802,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4592,1,['access'],['access']
Security,ranches 15020 15023 +3 ; ================================================; - Hits 116942 98913 -18029 ; - Misses 12825 31555 +18730 ; + Partials 5460 4761 -699; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4962?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...overy/inference/CpxVariantInterpreterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRJbnRlcnByZXRlclVuaXRUZXN0LmphdmE=) | `100% <100%> (ø)` | `10 <2> (+1)` | :arrow_up: |; | [.../sv/discovery/inference/CpxVariantInterpreter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRJbnRlcnByZXRlci5qYXZh) | `74.603% <75%> (-5.236%)` | `26 <0> (ø)` | |; | [.../tools/walkers/validation/FalsePositiveRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRmFsc2VQb3NpdGl2ZVJlY29yZC5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-7%)` | |; | [...metrics/multi/ExampleCollectMultiMetricsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9tZXRyaWNzL211bHRpL0V4YW1wbGVDb2xsZWN0TXVsdGlNZXRyaWNzU3BhcmsuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-7%)` | |; | [...sv/discovery/alignment/AlignedContigGenerator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4962/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0FsaWduZWRDb250aWdHZW5lcmF0b3IuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...alignmentfilter/RealignmentArgumentCollection.java](https://codecov,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4962#issuecomment-401084153:1629,validat,validation,1629,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4962#issuecomment-401084153,1,['validat'],['validation']
Security,"raph; originally. Maybe the use case was variants from UG that we didn't; necessarily believe were aligned properly?. I don't have any objections, but I'd feel better if we had a better guess; at what the original method was trying to do. On Wed, Apr 3, 2019 at 9:56 PM David Benjamin <notifications@github.com>; wrote:. > In Mutect2 and HaplotypeCaller, we force-call alleles by injecting them; > into the ref haplotype, then threading these constructed haplotypes into; > the assembly graph with a large edge weight. There are several drawbacks to; > this approach:; >; > - The strange edge weights interfere with the AdaptiveChainPruner.; > - The large edge weights may not be large enough to avoid pruning when; > depth is extremely high.; > - The alleles may be lost if assembly fails.; > - If the alleles actually exist but are in phase with another variant; > we end up putting an enormous amount of weight on a false haplotype.; >; > We can get around these issue with the following method:; >; > - assemble haplotypes without regard to the force-called alleles.; > - if an allele is present in these haplotypes, do nothing further.; > - otherwise, add a haplotype in which the allele is injected into the; > reference haplotype.; >; > @LeeTL1220 <https://github.com/LeeTL1220> I prototyped this and it seems; > to resolve the missed forced alleles that Ziao found.; >; > @ldgauthier <https://github.com/ldgauthier> Can you think of any; > objections to making this change in HaplotypeCaller?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/issues/5857>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGRhdMcaTJg47gnOkE-d_AeAqXpO8zpxks5vdVvfgaJpZM4cbxVV>; > .; >. -- ; Laura Doyle Gauthier, Ph.D.; Associate Director, Germline Methods; Data Sciences Platform; gauthier@broadinstitute.org; Broad Institute of MIT & Harvard; 320 Charles St.; Cambridge MA 0214",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767:1438,inject,injected,1438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5857#issuecomment-479916767,1,['inject'],['injected']
Security,"raversal; 00:05:57.036 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 00:07:26.967 WARN ReferenceConfidenceVariantContextMerger - Detected invalid annotations: When trying to merge variant contexts at location chr16:10185 the annotation AS_VarDP=59|115|0 was not a numerical value and was ignored; 00:07:26.967 WARN ReferenceConfidenceVariantContextMerger - Reducible annotation 'AS_VarDP' detected, add -G StandardAnnotation -G AS_StandardAnnotation to the command to annotate in the final VC with this annotation.; 00:07:26.991 INFO GenotypeGVCFs - Shutting down engine; GENOMICSDB_TIMER,GenomicsDB iterator next() timer,Wall-clock time(s),0.02938786500000001,Cpu time(s),0.029037034000000003; [August 25, 2021 12:07:27 AM EDT] org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFs done. Elapsed time: 1.55 minutes.; Runtime.totalMemory()=1807745024; java.lang.NullPointerException; at java.util.HashMap.putMapEntries(HashMap.java:500); at java.util.HashMap.putAll(HashMap.java:784); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.combineAnnotations(VariantAnnotatorEngine.java:211); at org.broadinstitute.hellbender.tools.walkers.ReferenceConfidenceVariantContextMerger.mergeAttributes(ReferenceConfidenceVariantContextMerger.java:318); at org.broadinstitute.hellbender.tools.walkers.ReferenceConfidenceVariantContextMerger.merge(ReferenceConfidenceVariantContextMerger.java:142); at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsEngine.callRegion(GenotypeGVCFsEngine.java:130); at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFs.apply(GenotypeGVCFs.java:281); at org.broadinstitute.hellbender.engine.VariantLocusWalker.lambda$traverse$0(VariantLocusWalker.java:135); at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184); at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175);",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7437:8087,Hash,HashMap,8087,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7437,1,['Hash'],['HashMap']
Security,"rd-0:delegated \; broadinstitute/gatk@sha256:18146e79d06787483310e5de666502090a480e10ac0fad06a36a5e7a5c9bb1dc /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/script. # get the return code (working even if the container was detached); rc=$(docker wait cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid). # remove the container after waiting; docker rm cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid. # return exit code; exit $rc; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: job id: 243; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Status change from - to Done; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor Workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 failed (during ExecutingWorkflowState): Job ValidateBamsWf.ValidateBAM:0:1 exited with return code -1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr.; Could not retrieve content: Could not read from /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 is in a terminal state: WorkflowFailedState; [2020-07-14 05:09:51,97] [info] SingleWorkflowRunnerActor workflow fi",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:6710,Validat,ValidateBAM,6710,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,2,['Validat'],"['ValidateBAM', 'ValidateBamsWf']"
Security,reading CRAM on Spark needs a way to relax validation stringency,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1261:43,validat,validation,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1261,1,['validat'],['validation']
Security,"rect.github.com/protocolbuffers/protobuf/issues/18375"">#18375</a>)</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/8a60b6527a976cfd0028153da3ad8e4ed280e0de""><code>8a60b65</code></a> Merge pull request <a href=""https://redirect.github.com/protocolbuffers/protobuf/issues/17704"">#17704</a> from protocolbuffers/cp-segv</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/94a26630e362a4771b5ec80eac49f494988ca408""><code>94a2663</code></a> Fixed a SEGV when deep copying a non-reified sub-message.</li>; <li>Additional commits viewable in <a href=""https://github.com/protocolbuffers/protobuf/compare/v3.23.4...v3.25.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.google.protobuf:protobuf-java&package-manager=gradle&previous-version=3.23.4&new-version=3.25.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9004:2712,secur,security-vulnerabilities,2712,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9004,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,reduced memory consumption: identified by profiling HC. ; - added a bunch of tests while I was there. note: the equals/hashcode changes are just for clean code - no perf improvements. @lbergelson can you have a look?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1892:119,hash,hashcode,119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1892,1,['hash'],['hashcode']
Security,"ref/hg38/Homo_sapiens_assembly38.fasta -V ~/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250_splitmultiallelics.vcf.gz --splitMultiallelics; Using GATK wrapper script /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk; Running:; /Users/shlee/Documents/branches/hellbender/build/install/gatk/bin/gatk LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V /Users/shlee/Downloads/zeta_snippet_shlee/zeta_snippet.vcf.gz --maxIndelSize 250 -O zeta_snippet_leftalign_maxindelsize250_splitmultiallelics.vcf.gz --splitMultiallelics; 17:52:19.004 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/shlee/Documents/branches/hellbender/build/install/gatk/lib/gkl-0.8.5.jar!/com/intel/gkl/native/libgkl_compression.dylib; Sep 05, 2018 5:52:19 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 17:52:19.130 INFO LeftAlignAndTrimVariants - ------------------------------------------------------------; 17:52:19.131 INFO LeftAlignAndTrimVariants - The Genome Analysis Toolkit (GATK) v4.0.8.1-24-gb43bc27-SNAPSHOT; 17:52:19.131 INFO LeftAlignAndTrimVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 17:52:19.131 INFO LeftAlignAndTrimVariants - Executing as shlee@WMCF9-CB5 on Mac OS X v10.13.6 x86_64; 17:52:19.131 INFO LeftAlignAndTrimVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_111-b14; 17:52:19.131 INFO LeftAlignAndTrimVariants - Start Date/Time",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971:1140,authenticat,authenticated,1140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-418893971,1,['authenticat'],['authenticated']
Security,remove BAQ from BQSR (and validate results),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1557:26,validat,validate,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1557,1,['validat'],['validate']
Security,"rencePipeline.java:175); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.traverse(VariantWalkerBase.java:107); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:994); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:135); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:180); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:199); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289). I don't really know how to fix it. ValidateVariants gives no errors, and I am able to perform variant selection, e.g.:. gatk-4.0.5.1/gatk SelectVariants -R data/genome.fasta -V variants/6753_12-15-2015_first_pass_raw.vcf -select 'vc.getGenotype(""6753_12-15-2015"").getAD().1/vc.getGenotype(""6753_12-15-2015"").getDP() > 0.9 ' -output variants/6753_12-15-2015_first_pass_filtered.vcf. with no problems. Insights would be gratefully appreciated.; Thanks!; Gavin. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/12223/java-lang-numberformatexception-when-trying-to-perform-variantfiltration/p1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4921:7443,Validat,ValidateVariants,7443,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4921,1,['Validat'],['ValidateVariants']
Security,resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtriMixedPloidyTest.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioPopPriorsTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/expectedCGP_testFamilyPriors_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/expectedCGP_testFamilyPriors.vcf; src/test/resources/org/broadinstitute,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61737,validat,validation,61737,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['validat'],['validation']
Security,rhaps it would be wise to specify the workflow in which this tool would be used. Something for the second pass.; 44	GetPileupSummaries	beta; helper tool for CalculateContamination	6/5/2017	https://github.com/broadinstitute/gatk-protected/blob/2bf35790393332da5414b42ec6dca813fcc63202/src/main/java/org/broadinstitute/hellbender/tools/walkers/contamination/GetPileupSummaries.java	scripts/mutect2_wdl/mutect2.wdl	https://github.com/broadinstitute/gatk/pull/3006	yes	; 33	AnnotateVcfWithBamDepth	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/AnnotateVcfWithBamDepth.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 34	AnnotateVcfWithExpectedAlleleFraction	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/AnnotateVcfWithExpectedAlleleFraction.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 37	CalculateMixingFractions	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/CalculateMixingFractions.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes	; 47	RemoveNearbyIndels	internal (DB)	5/30	https://github.com/broadinstitute/gatk-protected/blob/e6278def94038d76339d0fd95ce2badb3bc44a22/src/main/java/org/broadinstitute/hellbender/tools/walkers/validation/RemoveNearbyIndels.java	scripts/mutect2_wdl/unsupported/hapmap_sensitivity_truth.wdl	https://github.com/broadinstitute/gatk-protected/pull/1131	yes		; ```. This is also at <https://docs.google.com/a/broad,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3055:13076,validat,validation,13076,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3055,1,['validat'],['validation']
Security,"riant src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf --doNotValidateFilteredRecords false --warnOnErrors false --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --readValidationStringency SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --createOutputVariantIndex true --createOutputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:1979,Validat,ValidateVariants,1979,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"riants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN ValidateVariants - Other possible validations will still be performed; 19:53:35.594 INFO ProgressMeter - Starting traversal; 19:53:35.595 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 19:53:35.660 INFO ValidateVariants - Shutting down engine; [October 25, 2020 7:53:35 PM CDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.02 minutes.; Runtime.totalMemory()=2114453504; java.lang.ArrayIndexOutOfBoundsException: -87; 	at org.broadinstitute.hellbender.utils.BaseUtil",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:2527,Validat,ValidateVariants,2527,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"riationDiscoveryPipelineSpark - BND_INV55: 230; 17:21:06.648 INFO StructuralVariationDiscoveryPipelineSpark - DEL: 4488; 17:21:06.648 INFO StructuralVariationDiscoveryPipelineSpark - DUP: 1355; 17:21:06.648 INFO StructuralVariationDiscoveryPipelineSpark - INS: 1675; 17:21:06.648 INFO StructuralVariationDiscoveryPipelineSpark - INV: 0; 17:21:06.648 INFO StructuralVariationDiscoveryPipelineSpark - DUP_INV: 0; 17:21:06.648 INFO StructuralVariationDiscoveryPipelineSpark - CPX: 0; 18/01/25 17:21:07 WARN org.apache.spark.scheduler.TaskSetManager: Lost task 29.0 in stage 61.0 (TID 60915, cwhelan-hg00514-1-cram-samtools-bam-feature-w-1.c.broad-dsde-methods.internal, executor 48): java.lang.IllegalArgumentException: Unexpected CIGAR format with deletion neighboring clipping; cigar elements are: [1190M, 4D, 53M, 2I, 26M, 2I, 31M, 2D, 1450S]; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:681); 	at org.broadinstitute.hellbender.tools.spark.sv.utils.SvCigarUtils.validateCigar(SvCigarUtils.java:134); 	at org.broadinstitute.hellbender.tools.spark.sv.utils.SvCigarUtils.getUnclippedReadLength(SvCigarUtils.java:161); 	at org.broadinstitute.hellbender.tools.spark.sv.utils.SvCigarUtils.computeAssociatedDistOnRead(SvCigarUtils.java:330); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.alignment.AlignmentInterval.readIntervalAlignedToRefSpan(AlignmentInterval.java:634); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector.extractAltHaplotypeSeq(CpxVariantDetector.java:852); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector.access$300(CpxVariantDetector.java:47); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector$AnnotatedContig.annotate(CpxVariantDetector.java:194); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.CpxVariantDetector$AnnotatedContig.<init>(CpxVariantDetector.java:132); 	at org.broadinstitute.hellbender.tools.spa",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4260:5098,validat,validateCigar,5098,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4260,1,['validat'],['validateCigar']
Security,"ription=""Per-sample component statistics to detect mate bias"">; ##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=""Minimum DP observed within the GVCF block"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=PRI,Number=G,Type=Float,Description=""Phred-scaled prior probabilities for genotypes"">; ##FORMAT=<ID=PS,Number=1,Type=Integer,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group"">; ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=""Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias"">; ##FORMAT=<ID=SPL,Number=.,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for SNPs based on the reference confidence model"">; ##FORMAT=<ID=SQ,Number=A,Type=Float,Description=""Somatic quality"">; ##DRAGENCommandLine=<ID=HashTableBuild,Version=""SW: 01.003.044.3.8.4, HashTableVersion: 8"",CommandLineOptions=""/opt/edico/bin/dragen --build-hash-table true --enable-cnv true --ht-alt-aware-validate true; ##DRAGENCommandLine=<ID=dragen,Version=""SW: 05.021.609.3.9.5, HW: 05.021.609"",Date=""Wed Feb 09 21:30:31 UTC 2022"",CommandLineOptions=""--bam-input s3://cromwell-dragen-us-east-1/samples/validacaoDRAGEN/ba; ```. About chrM, yeah... all of them have this info... like below. ```; grep ""^chrM"" <name>.hard-filtered.gvcf | head ; chrM	1	.	G	<NON_REF>	.	weak_evidence	END=1	GT:AD:DP:SQ:MIN_DP	0/0:112,1579:1691:0:1691; chrM	2	.	A	<NON_REF>	.	PASS	END=72	GT:AD:DP:SQ:MIN_DP	0/0:2504,2:2506:99:1712; chrM	73	.	A	G,<NON_REF>	.	PASS	DP=2017;MQ=208.10;FractionInformativeReads=0.948	GT:SQ:AD:AF:F1R2:F2R1:DP:SB:MB	1/1:98.13,0.00:0,1912,0:1.000,0.000:0,980,0:0,932,0:1912:0,0,756,1156:0,0,932,980; ```. As I replied to you, in another section, I can share some gvcfs from NA samples (Dragen v3.6.3) with you. Just let me know and I'll e-mail the links",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7797#issuecomment-1112612397:2405,Hash,HashTableVersion,2405,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7797#issuecomment-1112612397,3,"['Hash', 'hash', 'validat']","['HashTableVersion', 'hash-table', 'validate']"
Security,rker.DefaultWorkerProcess.waitForStop(DefaultWorkerProcess.java:190); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.process.internal.worker.DefaultWorkerProcessBuilder$MemoryRequestingWorkerProcess.waitForStop(DefaultWorkerProcessBuilder.java:228); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.worker.ForkingTestClassProcessor.stop(ForkingTestClassProcessor.java:122); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.processors.RestartEveryNTestClassProcessor.endBatch(RestartEveryNTestClassProcessor.java:63); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.processors.RestartEveryNTestClassProcessor.stop(RestartEveryNTestClassProcessor.java:57); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.FailureHandlingDispatch.dispatch(FailureHandlingDispatch.java:29); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:132); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:33); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.AsyncDispatch$1.run(AsyncDispatch.java:72); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	... 2 more,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2802:15663,access,access,15663,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2802,1,['access'],['access']
Security,rnal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:58); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:32); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:113); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.initialization.DefaultGradleLauncher$RunTasksAction.execute(DefaultGradleLauncher.java:230); 11:54:40.434 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.initialization.DefaultGradleL,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2802:4980,access,access,4980,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2802,1,['access'],['access']
Security,"roadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); at org.broadinstitute.hellbender.Main.main(Main.java:291); Caused by: htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: Duplicate key 0, for input source: cadd.config; at htsjdk.tribble.TribbleIndexedFeatureReader.readHeader(TribbleIndexedFeatureReader.java:263); at htsjdk.tribble.TribbleIndexedFeatureReader.&lt;init&gt;(TribbleIndexedFeatureReader.java:102); at htsjdk.tribble.TribbleIndexedFeatureReader.&lt;init&gt;(TribbleIndexedFeatureReader.java:127); at htsjdk.tribble.AbstractFeatureReader.getFeatureReader(AbstractFeatureReader.java:120); at org.broadinstitute.hellbender.engine.FeatureDataSource.getTribbleFeatureReader(FeatureDataSource.java:350); ... 14 more; Caused by: java.lang.IllegalStateException: Duplicate key 0; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1254); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.stream.IntPipeline$4$1.accept(IntPipeline.java:250); at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110); at java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566); at org.broadinstitute.hellbender.utils.codecs.xsvLocatableTable.XsvLocatableTableCodec.readActualHeader(XsvLocatableTableCodec.java:341); at org.broadinstitute.hellbender.utils.codecs.xsvLocatableTable.XsvLocatableTableCodec",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6223:2732,Hash,HashMap,2732,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6223,1,['Hash'],['HashMap']
Security,roadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.net.SocketTimeoutException: Read timed out; 	at java.net.SocketInputStream.socketRead0(Native Method); 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116); 	at java.net.SocketInputStream.read(SocketInputStream.java:171); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.read(InputRecord.java:503); 	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973); 	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:930); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1569); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at shaded.cloud_nio.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at shaded.cloud_nio.com.google,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180:6792,secur,security,6792,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300298180,1,['secur'],['security']
Security,roadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtriMixedPloidyTest.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioPopPriorsTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/expectedCGP_testFamilyPriors_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/expectedCGP_testFamilyPriors.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/expectedCGP_testSingleParentFamily_chr1.vcf.idx; src/test/resources/org/broadinstit,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61884,validat,validation,61884,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['validat'],['validation']
Security,"rocessGermlineCNVCalls - Initializing engine; 14:21:35.976 INFO FeatureManager - Using codec BEDCodec to read file file:///bettik/tintest/NTM/bam/1-3-9-17-Y-M/Refseq_GrCh38_1-3-9-17-Y-M.bed; 14:21:36.034 INFO IntervalArgumentCollection - Processing 251589470 bp from intervals; 14:21:38.716 INFO PostprocessGermlineCNVCalls - Done initializing engine; 14:21:38.879 INFO PostprocessGermlineCNVCalls - Shutting down engine; [August 1, 2018 2:21:38 PM CEST] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 0.06 minutes.; Runtime.totalMemory()=2267545600; java.lang.IllegalArgumentException: The specified allosomal contigs must be contained in the SAM sequence dictionary of the call-set (specified allosomal contigs: [Y], all contigs: [chr9, chr7, chr8, chr5, chr6, chr3, chr21, chr4, chr22, chr1, chr2, chr20, chrY, chrX, chr10, chr11, chr12, chr13, chrM, chr18, chr19, chr14, chr15, chr16, chr17]); at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:722); at org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls.onTraversalStart(PostprocessGermlineCNVCalls.java:277); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:992); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:135); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:180); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:199); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. ----. ## Notes. During all the procedures of the gCNV calling pipeline, I provided a target bed interval file with the 1,3,9,17,Y and M chromosomes, except for the DetermineGermlineContigPloidy were I provided a prior_contig_diploidy.tsv with all th",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231:5233,validat,validateArg,5233,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053#issuecomment-409558231,1,['validat'],['validateArg']
Security,ror: scala.collection.Seq.aggregate(Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;; at org.bdgenomics.adam.models.NonoverlappingRegions.mergeRegions(NonoverlappingRegions.scala:75); at org.bdgenomics.adam.models.NonoverlappingRegions.<init>(NonoverlappingRegions.scala:55); at org.bdgenomics.adam.models.NonoverlappingRegions$.apply(NonoverlappingRegions.scala:169); at org.bdgenomics.adam.util.TwoBitRecord$.apply(TwoBitFile.scala:193); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at org.bdgenomics.adam.util.TwoBitFile.<init>(TwoBitFile.scala:70); at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceTwoBitSource.<init>(ReferenceTwoBitSource.java:43); at org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.<init>(ReferenceMultiSource.java:41); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReference(GATKSparkTool.java:353); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:320); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:311); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:108); at org.broadinstitute.h,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2073:1245,Hash,HashMap,1245,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2073,1,['Hash'],['HashMap']
Security,"roxy: Connecting to ResourceManager at tele-1/192.168.1.4:8032; 18/01/09 18:30:57 INFO yarn.Client: Requesting a new application from cluster with 4 NodeManagers; 18/01/09 18:30:58 INFO yarn.Client: Verifying our application has not requested more than the maximum memory capability of the cluster (18432 MB per container); 18/01/09 18:30:58 INFO yarn.Client: Will allocate AM container, with 896 MB memory including 384 MB overhead; 18/01/09 18:30:58 INFO yarn.Client: Setting up container launch context for our AM; 18/01/09 18:30:58 INFO yarn.Client: Setting up the launch environment for our AM container; 18/01/09 18:30:58 INFO yarn.Client: Preparing resources for our AM container; 18/01/09 18:30:59 INFO yarn.Client: Uploading resource file:/tmp/sun/spark-5a3e539e-2e2b-4da2-b218-2bda166bd4c0/__spark_conf__7100950787185363106.zip -> hdfs://tele-1:8020/user/sun/.sparkStaging/application_1515493209401_0001/__spark_conf__.zip; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(sun); groups with view permissions: Set(); users with modify permissions: Set(sun); groups with modify permissions: Set(); 18/01/09 18:31:00 INFO yarn.Client: Submitting application application_1515493209401_0001 to ResourceManager; 18/01/09 18:31:00 INFO impl.YarnClientImpl: Submitted application application_1515493209401_0001; 18/01/09 18:31:00 INFO cluster.SchedulerExtensionServices: Starting Yarn extension services with app application_1515493209401_0001 and attemptId None; 18/01/09 18:31:01 INFO yarn.Client: Application report for application_1515493209401_0001 (state: ACCEPTED); 18/01/09 18:31:01 INFO yarn",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:11797,Secur,SecurityManager,11797,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,1,['Secur'],['SecurityManager']
Security,"rror log looks like below. Exception in thread ""main"" java.lang.NoSuchMethodError: scala.collection.Seq.aggregate(Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;; at org.bdgenomics.adam.models.NonoverlappingRegions.mergeRegions(NonoverlappingRegions.scala:75); at org.bdgenomics.adam.models.NonoverlappingRegions.<init>(NonoverlappingRegions.scala:55); at org.bdgenomics.adam.models.NonoverlappingRegions$.apply(NonoverlappingRegions.scala:169); at org.bdgenomics.adam.util.TwoBitRecord$.apply(TwoBitFile.scala:193); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at org.bdgenomics.adam.util.TwoBitFile$$anonfun$6.apply(TwoBitFile.scala:70); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.HashMap$HashMap1.foreach(HashMap.scala:221); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.immutable.HashMap$HashTrieMap.foreach(HashMap.scala:428); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at org.bdgenomics.adam.util.TwoBitFile.<init>(TwoBitFile.scala:70); at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceTwoBitSource.<init>(ReferenceTwoBitSource.java:43); at org.broadinstitute.hellbender.engine.datasources.ReferenceMultiSource.<init>(ReferenceMultiSource.java:41); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReference(GATKSparkTool.java:353); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:320); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:311); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.Co",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2073:1167,Hash,HashMap,1167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2073,1,['Hash'],['HashMap']
Security,"rsed the test log and found the relevant part (for ID `685190392835`). ```; ""gce"":{. ""instance"":{; ""attributes"":{; ""startup-script"":""#!/usr/bin/env bash\necho poweroff | at now + 130 minutes\ncat > ~travis/.ssh/authorized_keys <<EOF\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDdzVnIEg2ribEvhEvFjR9IFPAkIVtQwZhlgUAHu1BgjBugFRiqg3eaPMOeOuIZBvzwoyotHIVp3XvAfivGyCW4Ke7+2cqlcX1L8kcmoWLm2fdLGlLr/lZnAjQtexMC76uLtR8udqWA0e2sqrSJs4H/blOQmHWPrl/VSG7daoVptzqXihRmXN+/Huo7mTxAjTUEjk4IOBn7sv7G5qLrEPv78AJIZhWHdhUTGLvx+YpzQvX8pE53TMi9W4ovkZTCwhSO3WYyBOY7H1xjeYb9XWTeP563Du1b0JMpQgtFLQUVXio9NzXZE55ovvGDRSLds+VfPsv4G/Whhq76dEZ+wZO3\n\nEOF\n""; },; ""cpuPlatform"":""Intel Haswell"",; ""description"":""Travis CI python test VM"",; ""disks"":[{""deviceName"":""persistent-disk-0"",""index"":0,""mode"":""READ_WRITE"",""type"":""PERSISTENT""}],; ""hostname"":""testing-gce-ec8614d2-40a2-4138-801e-d42d811590a2.c.travis-ci-prod-2.internal"",; ""id"":8221730359445041428,; ""image"":"""",; ""licenses"":[{""id"":""1000010""}],; ""machineType"":""projects/685190392835/machineTypes/n1-standard-2"",; ""maintenanceEvent"":""NONE"",; ""networkInterfaces"":[{""accessConfigs"":[{""externalIp"":""104.198.203.242"",""type"":""ONE_TO_ONE_NAT""}],""forwardedIps"":[],""ip"":""10.128.0.163"",""network"":""projects/685190392835/networks/default""}],; ""scheduling"":{""automaticRestart"":""TRUE"",""onHostMaintenance"":""MIGRATE"",""preemptible"":""FALSE""},; ""serviceAccounts"":{; ""685190392835-compute@developer.gserviceaccount.com"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]; },; ""default"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]}; },; ""tags"":[""testing""],; ""virtualClock"":{""driftToken"":""1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018:1626,access,accessConfigs,1626,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018,1,['access'],['accessConfigs']
Security,running RevertBaseQualityScores from Version:4.alpha-70-g10d9ec1-SNAPSHOT on /seq/picard_aggregation/G77386/NA12878/v1/NA12878.bam. ```; java.lang.IllegalArgumentException: end must be >= start. start:13984870 end:13984869; at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:61); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:33); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:45); at org.broadinstitute.hellbender.engine.ReadWalker.lambda$traverse$18(ReadWalker.java:79); at org.broadinstitute.hellbender.engine.ReadWalker$$Lambda$45/1492875057.accept(Unknown Source); at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183); at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175); at java.util.Iterator.forEachRemaining(Iterator.java:116); at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:512); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:502); at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150); at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); at org.broadinstitute.hellbender.engine.ReadWalker.traverse(ReadWalker.java:78); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:448); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:98); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:146); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:165); ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1473:278,validat,validatePositions,278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1473,1,['validat'],['validatePositions']
Security,"running wgs1 with current code in master, we get the following stack trace:. Caused by: java.lang.IllegalArgumentException: Invalid interval. Contig:chrUn_JTFH01001938v1_decoy start:0 end:0; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:686); 	at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:60); 	at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:36); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.NovelAdjacencyReferenceLocations$BreakpointsInference.getLeftJustifiedBreakpoints(NovelAdjacencyReferenceLocations.java:78); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.NovelAdjacencyReferenceLocations.leftJustifyBreakpoints(NovelAdjacencyReferenceLocations.java:293); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.NovelAdjacencyReferenceLocations.<init>(NovelAdjacencyReferenceLocations.java:42); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.DiscoverVariantsFromContigAlignmentsSAMSpark.lambda$discoverNovelAdjacencyFromChimericAlignments$7(DiscoverVariantsFromContigAlignmentsSAMSpark.java:409); 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); 	at java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1351); 	at java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(StreamSpliterators.java:294); 	at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(StreamSpliterators.java:206); 	at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(StreamSpliterators.java:161); 	at java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300); 	at java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681); 	at scala.collection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at org.apache.spark.shuffle.sor",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3874:237,validat,validateArg,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3874,2,['validat'],"['validateArg', 'validatePositions']"
Security,"runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 19:53:34.606 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.606 INFO ValidateVariants - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN Valida",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:1987,Validat,ValidateVariants,1987,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"rvice-account gatktestjenkins@broad-gatk-test.iam.gserviceaccount.com --key-file /scratch/testservice.json --project broad-gatk-test; ./gatk-launch MarkDuplicatesSpark \; --shardedOutput true \; -O /scratch/tmp.md.bam \; --numReducers 0 \; --apiKey $APIKEY \; -I $bamIn \; -- \; --sparkRunner GCS \; --driver-memory 8G \; --cluster $CLUSTERNAME \; --executor-cores 3 \; --executor-memory 25G \; --conf spark.yarn.executor.memoryOverhead=2500""; ```. Fails with:. ```; Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/spark/Logging; at java.lang.ClassLoader.defineClass1(Native Method); at java.lang.ClassLoader.defineClass(ClassLoader.java:763); at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); at java.net.URLClassLoader.defineClass(URLClassLoader.java:467); at java.net.URLClassLoader.access$100(URLClassLoader.java:73); at java.net.URLClassLoader$1.run(URLClassLoader.java:368); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at org.apache.spark.util.ChildFirstURLClassLoader.loadClass(MutableURLClassLoader.scala:52); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.bdgenomics.adam.serialization.ADAMKryoRegistrator.registerClasses(ADAMKryoRegistrator.scala:85); at org.broadinstitute.hellbender.engine.spark.GATKRegistrator.registerClasses(GATKRegistrator.java:74); at org.apache.spark.serializer.KryoSerializer$$anonfun$newKryo$6.apply(KryoSerializer.scala:125); at org.apache.spark.serializer.KryoSerializer$$anonfun$newKryo$6.apply(KryoSerializer.scala:125); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); at org.apache.spark.serializer.KryoSerializer.newKryo(KryoSerializer.scala:125); at org.apache.spark.serializer.KryoS",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2183:1123,secur,security,1123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2183,1,['secur'],['security']
Security,"s - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN ValidateVariants - Other possible validations will still be performed; 19:53:35.594 INFO ProgressMeter - Starting traversal; 19:53:35.595 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 19:53:35.6",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:2217,Validat,ValidateVariants,2217,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"s users pulling from all docker repos (regardless of the tier for the owner of the repository being pulled from). This might or might not affect us since it looks like travis is pulling from our GCR repo for builds but we should be mindful of workflows that might rely on pulling hundreds of docker images from docker-hub through anonymous web VMs:; ```; On Monday, November 2, 2020 at 9am Pacific Standard Time, Docker will begin enforcing rate limits on container pulls for Anonymous and Free users. Anonymous (unauthenticated) users will be limited to 100 container image pulls every six hours, and Free (authenticated) users will be limited to 200 container image pulls every six hours, when enforcement is fully implemented. Docker Pro and Team subscribers can pull container images from Docker Hub without restriction, as long as the quantities are not excessive or abusive.; In addition, we are pausing enforcement of the changes to our image-retention policies until mid-2021, when we anticipate incorporating them into usage-based pricing. Two months ago, we announced an update to Docker image-retention policies. As originally stated, this change, which was set to take effect on November 1, 2020, would result in the deletion of images for free Docker account users after six months of inactivity. Today's announcement means Docker will not enforce image expiration on November 1, 2020.; ```; This is farther clarified on their FAQ https://www.docker.com/pricing/resource-consumption-updates:; ```; Rate limits for Docker image pulls are based on the account type of the user requesting the image - not the account type of the image’s owner. These are defined on the pricing page.; The highest entitlement a user has, based on their personal account and any orgs they belong to, will be used. Unauthenticated pull requests are “anonymous” and will be rate limited based on IP address rather than user ID. For more information on authenticating image pulls, please see this docs page.; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6922:1998,authenticat,authenticating,1998,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6922,1,['authenticat'],['authenticating']
Security,"s where results changed:. - For the snpeff test, since the behavior on this branch seems more correct to me than master, I tried running the GATK4 test case inputs with GATK3, and it produces exactly the same results as this branch does. So I think that issue was introduced by the original GATK4 port, and is fixed in this branch.; - The rest of the tests with changed results don't seem to hit your breakpoint, though. So I think we need to figure out why they changed, and maybe also compare them with GATK3 (which can be a pain because the output format is slightly different).; - As you mentioned, you changed the reference for testEvalTrackWithoutGenotypesWithSampleFields, which seems to have only affected the number of loci processed. So I'm unclear why that change was necessary. If the test truly should have been failing without this change, will it still fail if the change is reverted ? If not, can we fix it, and either way there should be a negative test for that case. A few other general comments:. - I changed this PR to `draft` mode for now, which just better categorizes it for our internal workflow purposes. When its ready for a detailed code review we can remove the `draft` status.; - The `HashMap<FeatureInput<VariantContext>, HashMap<String, Collection<VariantContext>>>` can be wrapped in a class with just a couple of methods, so we don't have to manifest that long type all over the place.; - I know this PR still in an interim state, but passing the VariantWalker in as an argument to the comp methods doesn't seem like a step forward to me. If we can't solve that problem completely in this PR (which is fine, I'm all for trying to contain this), are those changes necessary ? Perhaps that part should just wait for the next round.; - Any new classes/methods should use `final` for variables and parameters wherever applicable, and public classes and methods should have javadoc.; - Finally, I'm curious if you've tried any perf testing on this branch ? Is it better ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-744689987:1289,Hash,HashMap,1289,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-744689987,2,['Hash'],['HashMap']
Security,"s) or class(es); _Tool/class name(s), special parameters?_. ### Affected version(s); - [x] Latest public release version 4.2.2.0. ### Description . Running apt-get inside docker image fails. #### Steps to reproduce. (base) fleharty@wm3b9-dfa docker % docker run -it broadinstitute/gatk:4.2.2.0; Unable to find image 'broadinstitute/gatk:4.2.2.0' locally; 4.2.2.0: Pulling from broadinstitute/gatk; a7fe112a8303: Already exists ; Digest: sha256:32175c3c7c1fb9f5bd6650183c9c5cf26fb822dddb0cad0123d48c33124b6065; Status: Downloaded newer image for broadinstitute/gatk:4.2.2.0; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# apt-get update; Get:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]; Get:2 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB] ; Get:3 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB] ; Get:4 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [543 kB] ; Get:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease [6786 B] ; Get:6 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1426 kB] ; Err:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease ; The following signatures couldn't be verified because the public key is not available: NO_PUBKEY FEEA9169307EA071 NO_PUBKEY 8B57C5C2836F4BEB; Get:7 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2295 kB] ; Get:8 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] ; Get:9 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] ; Get:10 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB] ; Get:11 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]; Get:12 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB] ; Get:13 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB] ; Get:14 http://archiv",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7447:1008,secur,security,1008,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7447,1,['secur'],['security']
Security,s.java:183) ; at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ; at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ; at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ; at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ; at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ; at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ; at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ; at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ; at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ; at org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations.lambda$getMatchingFilters$2(FilterFuncotations.java:192) ; at java.base/java.util.HashMap$Values.forEach(HashMap.java:976) ; at org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations.getMatchingFilters(FilterFuncotations.java:191) ; at org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations.secondPassApply(FilterFuncotations.java:174) ; at org.broadinstitute.hellbender.engine.TwoPassVariantWalker.nthPassApply(TwoPassVariantWalker.java:19) ; at org.broadinstitute.hellbender.engine.MultiplePassVariantWalker.lambda$traverse$0(MultiplePassVariantWalker.java:40) ; at org.broadinstitute.hellbender.engine.MultiplePassVariantWalker.lambda$traverseVariants$1(MultiplePassVariantWalker.java:77) ; at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ; at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ; at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133) ; at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ; at java.base/java.util.stream.AbstractPipeli,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7504:5843,Hash,HashMap,5843,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7504,1,['Hash'],['HashMap']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.apache.hadoop.ipc.Client.call(Client.java:1475); 	at org.apache.hadoop.ipc.Client.call(Client.java:1412); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:229); 	at com.sun.proxy.$Proxy10.getBlockLocations(Unknown Source); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getBlockLocations(ClientNamenodeProtocolTranslatorPB.java:255); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.apache.hadoop.io.retry.RetryInvocationHandler.invok,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:9695,Access,AccessController,9695,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:237); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:488); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:468); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:458); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:30); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:3537,Access,AccessController,3537,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423); 	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106); 	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:73); 	at org.apache.hadoop.hdfs.DFSClient.callGetBlockLocations(DFSClient.java:1228); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1213); 	at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:6454,Access,AccessController,6454,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:692); 	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:381); 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java); 	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:447); 	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:989); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:850); 	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:793); 	at java.security.AccessController.doPrivileged(Native Method); 	at javax.security.auth.Subject.doAs(Subject.java:422); 	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1840); 	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2489). ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException: Failed to read bam header from /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; Caused by:File does not exist: /home/test/WGS_pipeline/TEST/output/spark_412.bowtie2.bam; 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:72); 	at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:62); 	at org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp.getBlockLocations(FSDirStatAndListingOp.java:152); 	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:1819); 	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294:1874,Access,AccessController,1874,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427537294,1,['Access'],['AccessController']
Security,s/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basic,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:60774,Validat,ValidateVariants,60774,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,s/walkers/vqsr/FilterVariantTranches.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzLmphdmE=) | `92.105% <89.286%> (-0.526%)` | `41 <14> (+9)` | |; | [...itute/hellbender/tools/funcotator/Funcotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0aW9uLmphdmE=) | `33.333% <0%> (-22.222%)` | `3% <0%> (-2%)` | |; | [...Sources/gencode/DataProviderForMuc16IndelData.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2dlbmNvZGUvRGF0YVByb3ZpZGVyRm9yTXVjMTZJbmRlbERhdGEuamF2YQ==) | `80% <0%> (-14.118%)` | `1% <0%> (ø)` | |; | [...ead/markduplicates/sparkrecords/EmptyFragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9FbXB0eUZyYWdtZW50LmphdmE=) | `78.571% <0%> (-6.044%)` | `5% <0%> (ø)` | |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `84.946% <0%> (-4.683%)` | `24% <0%> (-16%)` | |; | [...idation/CompareDuplicatesSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `93.103% <0%> (-3.563%)` | `5% <0%> (-2%)` | |; | ... and [72 more](https://codecov.io/gh/broadinstitute/gatk/pull/5042/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-406734723:3466,validat,validation,3466,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-406734723,1,['validat'],['validation']
Security,sTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73); 	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51); 	at org.gradle.api.internal.tasks.execution.SkipCachedTaskExecuter.execute(SkipCachedTaskExecuter.java:103); 	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:66); 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101); 	at org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44); 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91); 	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62); 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); 	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskE,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:9322,Validat,ValidatingTaskExecuter,9322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445,1,['Validat'],['ValidatingTaskExecuter']
Security,"scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at org.apache.spark.storage.BlockManager.reportAllBlocks(BlockManager.scala:217); at org.apache.spark.storage.BlockManager.reregister(BlockManager.scala:236); at org.apache.spark.executor.Executor.org$apache$spark$executor$Executor$$reportHeartBeat(Executor.scala:522); at org.apache.spark.executor.Executor$$anon$1$$anonfun$run$1.apply$mcV$sp(Executor.scala:547); at org.apache.spark.executor.Executor$$anon$1$$anonfun$run$1.apply(Executor.scala:547); at org.apache.spark.executor.Executor$$anon$1$$anonfun$run$1.apply(Executor.scala:547); at org.apache.spark.util.Utils$.logUncaughtExceptions(Utils.scala:1953); at org.apache.spark.executor.Executor$$anon$1.run(Executor.scala:547); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308); at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180); at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); 18/03/09 09:22:08 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!; 18/03/09 09:22:08 INFO SparkContext: Successfully stopped SparkContext; 09:22:08.389 INFO BaseRecalibratorSpark - Shutting down engine; [March 9, 2018 9:22:08 AM UTC] org.broadinstitute.hellbender.tools.spark.BaseRecalibratorSpark done. Elapsed time: 61.53 minutes.; Runtime.totalMemory()=16815489024; org.apache.spark.SparkException: Job aborted due to stage failure: Task 8 in stage 0.0 failed 1 times, most recent failure: Lost task 8.0 in stage 0.0 (TID 8, localhost): ExecutorLostFailure (executor driver exited caused by one ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4515:2107,access,access,2107,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4515,1,['access'],['access']
Security,"se reference name = *.; at htsjdk.samtools.SAMUtils.processValidationErrors(SAMUtils.java:439); at htsjdk.samtools.BAMFileReader$BAMFileIterator.advance(BAMFileReader.java:643); at htsjdk.samtools.BAMFileReader$BAMFileIterator.next(BAMFileReader.java:628); at htsjdk.samtools.BAMFileReader$BAMFileIterator.next(BAMFileReader.java:598); at htsjdk.samtools.SamReader$AssertingIterator.next(SamReader.java:544); at htsjdk.samtools.SamReader$AssertingIterator.next(SamReader.java:518); at htsjdk.samtools.util.PeekIterator.peek(PeekIterator.java:67); at htsjdk.samtools.SecondaryOrSupplementarySkippingIterator.skipAnyNotprimary(SecondaryOrSupplementarySkippingIterator.java:36); at htsjdk.samtools.SecondaryOrSupplementarySkippingIterator.advance(SecondaryOrSupplementarySkippingIterator.java:31); at org.broadinstitute.hellbender.utils.read.SamComparison.compareCoordinateSortedAlignments(SamComparison.java:111); at org.broadinstitute.hellbender.utils.read.SamComparison.compareAlignments(SamComparison.java:68); at org.broadinstitute.hellbender.utils.read.SamComparison.<init>(SamComparison.java:44); at org.broadinstitute.hellbender.tools.picard.sam.CompareSAMs.doWork(CompareSAMs.java:34); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:94); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:144); at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgram.instanceMain(PicardCommandLineProgram.java:51); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:77); at org.broadinstitute.hellbender.Main.main(Main.java:92); ```. Same command on original picard passes validation (though claims the bam is different from itself: https://github.com/broadinstitute/picard/issues/160). Note to whoever fixes this: once this is fixed, re-enable code in BaseRecalibratorIntegrationTest.java. ```; //IntegrationTestSpec.compareBamFiles(actualHiSeqBam_recalibrated, expectedHiSeqBam_recalibrated);; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/419:2194,validat,validation,2194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/419,1,['validat'],['validation']
Security,"se; 19:53:34.608 INFO ValidateVariants - Deflater: IntelDeflater; 19:53:34.608 INFO ValidateVariants - Inflater: IntelInflater; 19:53:34.608 INFO ValidateVariants - GCS max retries/reopens: 20; 19:53:34.608 INFO ValidateVariants - Requester pays: disabled; 19:53:34.608 INFO ValidateVariants - Initializing engine; 19:53:35.169 INFO FeatureManager - Using codec VCFCodec to read file file://chr1-22.phased.rename.reheader.vcf.gz; 19:53:35.594 INFO ValidateVariants - Done initializing engine; 19:53:35.594 WARN ValidateVariants - IDS validation cannot be done because no DBSNP file was provided; 19:53:35.594 WARN ValidateVariants - Other possible validations will still be performed; 19:53:35.594 INFO ProgressMeter - Starting traversal; 19:53:35.595 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 19:53:35.660 INFO ValidateVariants - Shutting down engine; [October 25, 2020 7:53:35 PM CDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.02 minutes.; Runtime.totalMemory()=2114453504; java.lang.ArrayIndexOutOfBoundsException: -87; 	at org.broadinstitute.hellbender.utils.BaseUtils.convertIUPACtoN(BaseUtils.java:123); 	at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.getSubsequenceAt(CachingIndexedFastaSequenceFile.java:340); 	at org.broadinstitute.hellbender.engine.ReferenceFileSource.queryAndPrefetch(ReferenceFileSource.java:78); 	at org.broadinstitute.hellbender.engine.ReferenceDataSource.queryAndPrefetch(ReferenceDataSource.java:64); 	at org.broadinstitute.hellbender.engine.ReferenceContext.getBases(ReferenceContext.java:197); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants.apply(ValidateVariants.java:236); 	at org.broadinstitute.hellbender.engine.VariantWalker.lambda$traverse$0(VariantWalker.java:104); 	at org.broadinstitute.hellbender.engine.VariantWalker$$Lambda$76/1710491273.accept(Unknown Source); 	at java.util.stream.ForEachOps",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:3370,Validat,ValidateVariants,3370,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"seq-format-validation/validate-bam.inputs.json; [2020-07-14 05:09:22,78] [info] Running with database db.url = jdbc:hsqldb:mem:f10b64bd-d8ca-4428-917b-311fca24c372;shutdown=false;hsqldb.tx=mvcc; [2020-07-14 05:09:29,36] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2020-07-14 05:09:29,37] [info] [RenameWorkflowOptionsInMetadata] 100%; [2020-07-14 05:09:29,47] [info] Running with database db.url = jdbc:hsqldb:mem:e337a356-2f0c-4389-92c5-255465180f24;shutdown=false;hsqldb.tx=mvcc; [2020-07-14 05:09:29,89] [info] Slf4jLogger started; [2020-07-14 05:09:30,10] [info] Workflow heartbeat configuration:; {; ""cromwellId"" : ""cromid-ca5c695"",; ""heartbeatInterval"" : ""2 minutes"",; ""ttl"" : ""10 minutes"",; ""failureShutdownDuration"" : ""5 minutes"",; ""writeBatchSize"" : 10000,; ""writeThreshold"" : 10000; }; [2020-07-14 05:09:30,23] [info] Metadata summary refreshing every 1 second.; [2020-07-14 05:09:30,23] [warn] 'docker.hash-lookup.gcr-api-queries-per-100-seconds' is being deprecated, use 'docker.hash-lookup.gcr.throttle' instead (see reference.conf); [2020-07-14 05:09:30,25] [info] CallCacheWriteActor configured to flush with batch size 100 and process rate 3 seconds.; [2020-07-14 05:09:30,26] [info] KvWriteActor configured to flush with batch size 200 and process rate 5 seconds.; [2020-07-14 05:09:30,26] [info] WriteMetadataActor configured to flush with batch size 200 and process rate 5 seconds.; [2020-07-14 05:09:30,36] [info] JobExecutionTokenDispenser - Distribution rate: 50 per 1 seconds.; [2020-07-14 05:09:30,46] [info] SingleWorkflowRunnerActor: Version 51; [2020-07-14 05:09:30,48] [info] SingleWorkflowRunnerActor: Submitting workflow; [2020-07-14 05:09:30,55] [info] Unspecified type (Unspecified version) workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 submitted; [2020-07-14 05:09:30,66] [info] SingleWorkflowRunnerActor: Workflow submitted 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,67",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:2185,hash,hash-lookup,2185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['hash'],['hash-lookup']
Security,seq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61024,Validat,ValidateVariants,61024,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,skip hashtable lookup in Kryo,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1734:5,hash,hashtable,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1734,1,['hash'],['hashtable']
Security,sks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95); 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73); 	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51); 	at org.gradle.api.internal.tasks.execution.SkipCachedTaskExecuter.execute(SkipCachedTaskExecuter.java:103); 	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:66); 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101); 	at org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44); 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91); 	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62); 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59); 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54); 	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43); 	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445:9291,Validat,ValidatingTaskExecuter,9291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446253445,1,['Validat'],['ValidatingTaskExecuter']
Security,spark validation tests fail,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1922:6,validat,validation,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1922,1,['validat'],['validation']
Security,spark.driver.maxResultSize=0 --conf spark.executor.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 --conf spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 --conf spark.kryoserializer.buffer.max=512m --conf spark.yarn.executor.memoryOverhead=600 --driver-memory 15g --executor-cores 2 --executor-memory 8g /gatk/build/libs/gatk-spark.jar BwaAndMarkDuplicatesPipelineSpark --bam-partition-size 64000000 --input hdfs://namenode:8020/PREPROCESSING/PFC_0028_SW_CGTACG_R_fastqtosam.bam --reference hdfs://namenode:8020/hg19-ucsc/ucsc.hg19.2bit --bwa-mem-index-image /reference_image/ucsc.hg19.fasta.img --disable-sequence-dictionary-validation true --output hdfs://namenode:8020/PREPROCESSING/PFC_0028_SW_CGTACG_R_dedup_reads.bam --spark-master spark://973f3a3a3407:7077; 13:47:29.376 WARN SparkContextFactory - Environment variables HELLBENDER_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY must be set or the GCS hadoop connector will not be configured properly; 13:47:29.548 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/build/libs/gatk-spark.jar!/com/intel/gkl/native/libgkl_compression.so; 13:47:29.831 INFO BwaAndMarkDuplicatesPipelineSpark - ------------------------------------------------------------; 13:47:29.831 INFO BwaAndMarkDuplicatesPipelineSpark - The Genome Analysis Toolkit (GATK) v4.0.4.0-23-g6e1cc8c-SNAPSHOT; 13:47:29.831 INFO BwaAndMarkDuplicatesPipelineSpark - For support and documentation go to https://software.broadinstitute.org/gatk/; 13:47:29.832 INFO BwaAndMarkDuplicatesPipelineSpark - Executing as root@973f3a3a3407 on Linux v4.4.0-124-generic amd64; 13:47:29.832 INFO BwaAndMarkDuplicatesPipe,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4820:18212,validat,validation,18212,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4820,1,['validat'],['validation']
Security,"specops issue #273: https://github.com/broadinstitute/dsp-spec-ops/issues/273. - renamed `ngs_cohort_extract.py` -> `create_cohort_extract_data_table.py`; - run the script in a WDL (GvsPrepareCallset.wdl); - use a custom docker - include script for creating and pushing this docker to gcr.io; - enable running as a SA - this has been tested in Terra and works as expected. if using a dataset that requires SA access and the user does not provide a working SA key, they get this error: `User does not have bigquery.jobs.create permission in project specops-variantstore-sa-tests.`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7200:409,access,access,409,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7200,1,['access'],['access']
Security,"src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --use_jdk_deflater true --use_jdk_inflater true --MODE VERBOSE --MAX_OUTPUT 100 --IGNORE_WARNINGS false --VALIDATE_INDEX true --IS_BISULFITE_SEQUENCED false --MAX_OPEN_TEMP_FILES 8000 --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --help false --version false --verbosity INFO --QUIET false; [March 9, 2017 7:03:42 PM EST] Executing as gspowley@dna on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Version: Version:4.alpha.2-170-g8d06823-SNAPSHOT; 19:03:42.998 INFO ValidateSamFile - Defaults.BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.COMPRESSION_LEVEL : 1; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_INDEX : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CREATE_MD5 : false; 19:03:42.999 INFO ValidateSamFile - Defaults.CUSTOM_READER_FACTORY : ; 19:03:42.999 INFO ValidateSamFile - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 19:03:42.999 INFO ValidateSamFile - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 19:03:42.999 INFO ValidateSamFile - Defaults.REFERENCE_FASTA : null; 19:03:43.000 INFO ValidateSamFile - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:03:43.000 INFO ValidateSamFile - Defaults.USE_CRAM_REF_DOWNLOAD : false; 19:03:43.000 INFO ValidateSamFile - Deflater JdkDeflater; 19:03:43.000 INFO ValidateSamFile - Inflater JdkInflater; 19:03:43.000 INFO ValidateSamFile - Initializing engine; 19:03:43.000 INFO ValidateSamFile - Done initializing engine; ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571:1222,Validat,ValidateSamFile,1222,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285513571,1,['Validat'],['ValidateSamFile']
Security,"ssue mentioned [here](https://broadinstitute.slack.com/archives/CJRLP6ZSA/p1699026273329339)).; 2. Use that list as an input to GvsPrepareRangesCallset to create a cohort of test data in a separate BigQuery dataset (aou-genomics-curation-prod.klydon_pgen_extract_test).; 3. Run GvsExtractCallsetPgen on the newly created cohort. (I would just run GvsExtractCallsetPgenMerged, but I like using Workflow Dashboard to monitor how the job is going and dig into it if there are any failures. Workflow Dashboard doesn't seem to let you dig into individual tasks for workflows with sub-workflows, so it wouldn't allow me to look at individual shards running ExtractTask if I ran GvsExtractCallsetPgenMerged. Job Manager would be an alternative for this, but it seems to be pretty much unusable for even moderately-sized jobs.); 4. Run GvsExtractCallset on the newly created cohort, making sure to use the same parameters, including scatter count. This will generate VCF files that we can use to compare to the PGEN files created during the previous step for validation.; 5. Run GvsExtractCallsetPgenMerged with the same parameters used to run GvsExtractCallsetPgen in Step 3. This will use call-caching for the extract steps and then merge the PGEN files by chromosome. (Running it this way is maybe not the ideal way to do this, but it's what I've been doing for reasons described in the parenthetical in Step 3).; 6. Create list files, by file type, containing the gs:// URIs for the .pgen, .psam, and .pvar.zst files created in Step 3, along with the .vcf.gz files created in Step 4. Upload them to the workspace to use for validation.; 7. Run ComparePgenAndVcfScatter using the file lists as inputs. If there are any differences, it will output files that contain those differences. If there are no diff files generated, the files match. ComparePgenAndVcfScatter is a workflow I wrote that converts a list of .pgen, .psam, and .pvar.zst files generated by GvsExtractCallsetPgen into .vcf.gz files and the",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708:11028,validat,validation,11028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708,1,['validat'],['validation']
Security,st.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlclVuaXRUZXN0LmphdmE=) | `99.415% <0%> (-0.19%)` | `34% <0%> (+14%)` | |; | [...utils/variant/GATKVariantContextUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy92YXJpYW50L0dBVEtWYXJpYW50Q29udGV4dFV0aWxzVW5pdFRlc3QuamF2YQ==) | `87.194% <0%> (-0.088%)` | `316% <0%> (+156%)` | |; | [...ct/CreateSomaticPanelOfNormalsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9DcmVhdGVTb21hdGljUGFuZWxPZk5vcm1hbHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `6% <0%> (+3%)` | :arrow_up: |; | [.../validation/RemoveNearbyIndelsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vUmVtb3ZlTmVhcmJ5SW5kZWxzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `10% <0%> (+4%)` | :arrow_up: |; | [...dation/AnnotateVcfWithBamDepthIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5038/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQW5ub3RhdGVWY2ZXaXRoQmFtRGVwdGhJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `100% <0%> (ø)` | `12% <0%> (+5%)` | :arrow_up: |; | ... and [10 more](https://,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931:3238,validat,validation,3238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406399931,1,['validat'],['validation']
Security,"statistics on local copy ratio posteriors as well in `GermlineCNVCallerIntegrationTest`; - [ ] unit tests for `ComputableGraphStructure`; - [ ] unit tests for `ImmutableComputableGraph`; - [ ] unit tests for ensuring that ICG nodes are treated as immutable and not modified by mistake; - [ ] unit tests for `CoverageModelEMWorkspaceMathUtils`; - [ ] unit tests for `CoverageModelParameters` (reading/writing); - [ ] unit tests for `CoverageModelSparkUtils`; - [ ] the issue with Spark tests and custom serializers (gCNV Spark tests are currently disabled). **Discussion about gCNV ICG unit tests (May 1st, 2017):**; It is possible to automate the test for ComputableNodeFunctions. One initializes the parents to random values, calls the function, and checks whether it has had any side effects on the parents. One must make a random-data-provider-of-some-sort for each parent node because the parent INDArrays have different shapes. For other functions in CoverageModelEMComputeBlock and CoverageModelEMWorkspace that query ICG nodes -- one needs to create a firewall. One can elevate all such functions to classes that essentially behave functionally, (ICGNodeProvider, List<NodeKey>, extra arguments) -> output, as opposed to writing vanilla member functions such as CoverageModelEMComputeBlock.getBiasLatentPosteriorDataUnregularized, etc. Then we can write automated unit tests for these classes. Another approach is to write a thin ImmutableNDArray interface that blocks access to all mutators and returns instances of ImmutableNDArray when a matrix view is extracted (e.g. via INDArray.get(...)). This is also quite non-trivial and requires intimate familiarity with Nd4j codebase. Perhaps one could write an immutable DataBuffer for Nd4j. Finally, there might be a brute-force approach: substitute all in-plane operations such as muli and addi with mul and add, and in-place transformations such as Transforms.log(INDArray, boolean duplicate) with Transforms.log(INDArray, true), run gCNV, and",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2929:1596,firewall,firewall,1596,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2929,1,['firewall'],['firewall']
Security,stitute.hellbender.Main.runCommandLineProgram(Main.java:131); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:152); at org.broadinstitute.hellbender.Main.main(Main.java:233); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at org.apache.spark.deploy.SparkSubmit$.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:736); at org.apache.spark.deploy.SparkSubmit$.doRunMain$1(SparkSubmit.scala:185); at org.apache.spark.deploy.SparkSubmit$.submit(SparkSubmit.scala:210); at org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:124); at org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala); Caused by: java.lang.IllegalArgumentException: observedValue must be non-negative; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:681); at org.broadinstitute.hellbender.tools.spark.utils.IntHistogram.addObservation(IntHistogram.java:50); at org.broadinstitute.hellbender.tools.spark.sv.evidence.ReadMetadata$LibraryRawStatistics.addRead(ReadMetadata.java:367); at org.broadinstitute.hellbender.tools.spark.sv.evidence.ReadMetadata$PartitionStatistics.<init>(ReadMetadata.java:431); at org.broadinstitute.hellbender.tools.spark.sv.evidence.ReadMetadata.lambda$new$1dcab782$1(ReadMetadata.java:57); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:152); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:152); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:785); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:785); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319); at org.apache.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3462:6105,validat,validateArg,6105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3462,1,['validat'],['validateArg']
Security,stop using 32 bit key hash on travis,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5214:22,hash,hash,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5214,1,['hash'],['hash']
Security,stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175); 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.TwoPassReadWalker.traverseReads(TwoPassReadWalker.java:60); 	at org.broadinstitute.hellbender.engine.TwoPassReadWalker.traverse(TwoPassReadWalker.java:42); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:979); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:137); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:182); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:201); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. Command:; ```; ./gatk/gatk \; SplitNCigarReads \; --reference $REF \; --input test3.bam \; --output output.bam \; --verbosity DEBUG \; > split.log 2>&1; ```; Running ValidateSamFile does not reveal anything suspicious and visual inspection of the reads also appears to be fine. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/12801/exception-in-splitncigarreads/p1,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5230:3099,Validat,ValidateSamFile,3099,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5230,1,['Validat'],['ValidateSamFile']
Security,"successful run; https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20cremer/job_history/cb0d2b70-64e8-455c-955e-a960db264804. Look at this beaut!!!; <img width=""1163"" alt=""Screenshot 2023-09-21 at 1 47 06 PM"" src=""https://github.com/broadinstitute/gatk/assets/6863459/c5b39555-e78e-4e54-b91f-3e1702086fb2"">. And we can add an autoscaling policy (currently here with a yaml that I shoved in the workspace bucket ahead of time---in the future we will want this to be a param or at least hashed out with Hail). <img width=""1144"" alt=""Screenshot 2023-09-22 at 1 36 07 PM"" src=""https://github.com/broadinstitute/gatk/assets/6863459/b9bf05ac-1a98-42cc-a117-24f6940bd764"">. And link to said policy (remember the ""="" sign!!!!). <img width=""1389"" alt=""Screenshot 2023-09-25 at 1 42 37 PM"" src=""https://github.com/broadinstitute/gatk/assets/6863459/5ed3e472-e4f8-4ed7-8dac-aeb917575c86"">",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8524:498,hash,hashed,498,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8524,1,['hash'],['hashed']
Security,switch away from calling hashCode directly on enums,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4621:25,hash,hashCode,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4621,1,['hash'],['hashCode']
Security,"t requested more than the maximum memory capability of the cluster (18432 MB per container); 18/01/09 18:30:58 INFO yarn.Client: Will allocate AM container, with 896 MB memory including 384 MB overhead; 18/01/09 18:30:58 INFO yarn.Client: Setting up container launch context for our AM; 18/01/09 18:30:58 INFO yarn.Client: Setting up the launch environment for our AM container; 18/01/09 18:30:58 INFO yarn.Client: Preparing resources for our AM container; 18/01/09 18:30:59 INFO yarn.Client: Uploading resource file:/tmp/sun/spark-5a3e539e-2e2b-4da2-b218-2bda166bd4c0/__spark_conf__7100950787185363106.zip -> hdfs://tele-1:8020/user/sun/.sparkStaging/application_1515493209401_0001/__spark_conf__.zip; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls to: sun; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing view acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: Changing modify acls groups to: ; 18/01/09 18:31:00 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(sun); groups with view permissions: Set(); users with modify permissions: Set(sun); groups with modify permissions: Set(); 18/01/09 18:31:00 INFO yarn.Client: Submitting application application_1515493209401_0001 to ResourceManager; 18/01/09 18:31:00 INFO impl.YarnClientImpl: Submitted application application_1515493209401_0001; 18/01/09 18:31:00 INFO cluster.SchedulerExtensionServices: Starting Yarn extension services with app application_1515493209401_0001 and attemptId None; 18/01/09 18:31:01 INFO yarn.Client: Application report for application_1515493209401_0001 (state: ACCEPTED); 18/01/09 18:31:01 INFO yarn.Client: ; 	 client token: N/A; 	 diagnostics: N/A; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: root.users.sun; 	 start time: 1515493860237; 	 final status: UNDEFINED; 	 tracking URL: http://tele-1:808",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:12025,Secur,SecurityManager,12025,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,1,['Secur'],['SecurityManager']
Security,"t this you'd see. ```; org.apache.spark.SparkException: Job aborted due to stage failure: Task 45 in stage 9.0 failed 8 times, most recent failure: Lost task 45.7 in stage 9.0 (TID 734, shuang-svdps-ceu-w-1.c.broad-dsde-methods.internal, executor 2): java.nio.file.FileSystemNotFoundException: Provider ""gs"" not installed; 	at java.nio.file.Paths.get(Paths.java:147); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceFileSparkSource.getReferencePath(ReferenceFileSparkSource.java:53); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceFileSparkSource.getReferenceBases(ReferenceFileSparkSource.java:60); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceMultiSparkSource.getReferenceBases(ReferenceMultiSparkSource.java:89); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType.getRefBaseString(BreakEndVariantType.java:89); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType.access$200(BreakEndVariantType.java:20); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType$InterChromosomeBreakend.<init>(BreakEndVariantType.java:253); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType$InterChromosomeBreakend.getOrderedMates(BreakEndVariantType.java:261); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyAndAltHaplotype.toSimpleOrBNDTypes(NovelAdjacencyAndAltHaplotype.java:246); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.SimpleNovelAdjacencyInterpreter.inferType(SimpleNovelAdjacencyInterpreter.java:129); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.SimpleNovelAdjacencyInterpreter.lambda$inferTypeFromSingleContigSimpleChimera$24ddc343$1(SimpleNovelAdjacencyInterpreter.java:107); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$pairFunToScalaFun$1.apply(JavaPairRDD.scala:1043); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$pairFunToScalaFun",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6070:1066,access,access,1066,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6070,1,['access'],['access']
Security,t.www.protocol.http.HttpURLConnection$HttpInputStream.close(HttpURLConnection.java:3448); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:77); 	at org.gradle.wrapper.Download.download(Download.java:44); 	at org.gradle.wrapper.Install$1.call(Install.java:61); 	at org.gradle.wrapper.Install$1.call(Install.java:48); 	at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:69); 	at org.gradle.wrapper.Install.createDist(Install.java:48); 	at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:107); 	at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61); Caused by: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:116); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:284); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.MeteredStream.read(MeteredStream.java:134); 	at java.io.FilterInputStream.read(FilterInputStream.java:133); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3375); 	at sun.net.www.protocol.http.HttpURLConnection$HttpInputStream.read(HttpURLConnection.java:3368); 	at org.gradle.wrapper.Download.downloadInternal(Download.java:62); 	... 7 more; Caused by: java.net.SocketException: Connection reset; 	at java.net.SocketInputStream.read(SocketInputStream.java:210); 	at java.net.SocketInputStream.read(SocketInputStream.java:141); 	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465); 	at sun.security.ssl.InputRecord.readV3Record(InputRecord.java:593); 	at sun.s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401:1932,secur,security,1932,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4194#issuecomment-358498401,1,['secur'],['security']
Security,t/resources/org/broadinstitute/hellbender/tools/split_reads.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.sam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.sam; src/test/resources/org/broadinstitute/hellbender/tools/validation/marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/picard.marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/single.read.bai; src/test/resources/org/broadinstitute/hellbender/tools/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/valid.dict; src/test/resources/org/broadinstitute/hellbender/tools/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.indels.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.HACKEDhg38header.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.snps.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allele,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:45792,validat,validation,45792,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['validat'],['validation']
Security,"tator - Built for Spark Version: 3.3.1; 16:36:22.397 INFO Funcotator - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 16:36:22.397 INFO Funcotator - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 16:36:22.398 INFO Funcotator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 16:36:22.398 INFO Funcotator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 16:36:22.398 INFO Funcotator - Deflater: IntelDeflater; 16:36:22.398 INFO Funcotator - Inflater: IntelInflater; 16:36:22.399 INFO Funcotator - GCS max retries/reopens: 20; 16:36:22.399 INFO Funcotator - Requester pays: disabled; 16:36:22.399 INFO Funcotator - Initializing engine; 16:36:22.624 INFO FeatureManager - Using codec VCFCodec to read file file:///home/ppshah/shared/CAS_MOSAIC/mutect/mrn_2507919/WES/KShaw-ROPR0004-DNA-229761-WX01-T_HMCKJDSX2-4-ATTGGCTC/KShaw-ROPR0004-DNA-229761-WX01-T_HMCKJDSX2-4-ATTGGCTC_filtered.vcf.gz; 16:36:22.842 INFO Funcotator - Done initializing engine; 16:36:22.842 INFO Funcotator - Validating sequence dictionaries...; 16:36:22.856 INFO Funcotator - Processing user transcripts/defaults/overrides...; 16:36:22.857 INFO Funcotator - Initializing data sources...; 16:36:22.859 INFO DataSourceUtils - Initializing data sources from directory: /home/ppshah/shared/pipelines/mutect/funcotator_dataSources.v1.7.20200521s; 16:36:22.871 INFO DataSourceUtils - Data sources version: 1.7.2020429s; 16:36:22.871 INFO DataSourceUtils - Data sources source: ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/funcotator/funcotator_dataSources.v1.7.20200429s.tar.gz; 16:36:22.871 INFO DataSourceUtils - Data sources alternate source: gs://broad-public-datasets/funcotator/funcotator_dataSources.v1.7.20200429s.tar.gz; 16:36:22.891 INFO Funcotator - Shutting down engine; [January 10, 2024 at 4:36:22 PM GMT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.01 minutes.; Runtime.totalMemory()=285212672; ***************************************************************",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8647:3780,Validat,Validating,3780,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8647,1,['Validat'],['Validating']
Security,te(DefaultBuildExecuter.java:37); at org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23); at org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43); at org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32); at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37); at org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30); at org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:186); at org.gradle.internal.Factories$1.create(Factories.java:22); at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91); at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:53); at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:183); at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:33); at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:112); at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:106); at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91); at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:63); at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:106); at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:92); at org.gradle.launcher.exec.GradleBuildController.run(GradleBuildController.java:66); at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28); at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:41); at org.gr,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4155:3872,access,access,3872,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4155,2,['access'],['access']
Security,"te.hellbender.Main.runCommandLineProgram(Main.java:162); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); at org.broadinstitute.hellbender.Main.main(Main.java:291); Caused by: htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: Duplicate key 0, for input source: cadd.config; at htsjdk.tribble.TribbleIndexedFeatureReader.readHeader(TribbleIndexedFeatureReader.java:263); at htsjdk.tribble.TribbleIndexedFeatureReader.&lt;init&gt;(TribbleIndexedFeatureReader.java:102); at htsjdk.tribble.TribbleIndexedFeatureReader.&lt;init&gt;(TribbleIndexedFeatureReader.java:127); at htsjdk.tribble.AbstractFeatureReader.getFeatureReader(AbstractFeatureReader.java:120); at org.broadinstitute.hellbender.engine.FeatureDataSource.getTribbleFeatureReader(FeatureDataSource.java:350); ... 14 more; Caused by: java.lang.IllegalStateException: Duplicate key 0; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1254); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.stream.IntPipeline$4$1.accept(IntPipeline.java:250); at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110); at java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566); at org.broadinstitute.hellbender.utils.codecs.xsvLocatableTable.XsvLocatableTableCodec.readActualHeader(XsvLocatableTableCodec.java:341); at org.broadinstitute.hellbender.utils.codecs.xsvLocatableTable.XsvLocatableTableCodec.readActual",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6223:2746,Hash,HashMap,2746,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6223,1,['Hash'],['HashMap']
Security,te/gatk:4.2.2.0' locally; 4.2.2.0: Pulling from broadinstitute/gatk; a7fe112a8303: Already exists ; Digest: sha256:32175c3c7c1fb9f5bd6650183c9c5cf26fb822dddb0cad0123d48c33124b6065; Status: Downloaded newer image for broadinstitute/gatk:4.2.2.0; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# ; (gatk) root@bc90fdaf700c:/gatk# apt-get update; Get:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]; Get:2 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB] ; Get:3 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB] ; Get:4 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [543 kB] ; Get:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease [6786 B] ; Get:6 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1426 kB] ; Err:5 http://packages.cloud.google.com/apt cloud-sdk-bionic InRelease ; The following signatures couldn't be verified because the public key is not available: NO_PUBKEY FEEA9169307EA071 NO_PUBKEY 8B57C5C2836F4BEB; Get:7 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2295 kB] ; Get:8 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] ; Get:9 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] ; Get:10 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB] ; Get:11 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]; Get:12 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB] ; Get:13 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB] ; Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2200 kB]; Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]; Get:16 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [575 kB]; Get:17 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7447:1454,secur,security,1454,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7447,1,['secur'],['security']
Security,"te@developer.gserviceaccount.com does not have storage.objects.get access to fc-50c768b1-a285-4c95-8d8c-8ce209f1fda8/744139c5-3371-4a67-a2c8-e054e46f814f/ReblockGVCF/601ea396-b6cf-4baa-95c7-83e88b92c194/call-GenotypeGVCF/09C97227.c9cd4496-b4ed-4686-babd-177c66168178.vcf.gz.tbi."",; ""reason"" : ""forbidden""; } ],; ""message"" : ""443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to fc-50c768b1-a285-4c95-8d8c-8ce209f1fda8/744139c5-3371-4a67-a2c8-e054e46f814f/ReblockGVCF/601ea396-b6cf-4baa-95c7-83e88b92c194/call-GenotypeGVCF/09C97227.c9cd4496-b4ed-4686-babd-177c66168178.vcf.gz.tbi.""; }; 	at shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:145); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1056); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:333); 	... 21 more; ```; The latter is more verbose than I need, but having that message from the 403 was key (since I needed the service account name to give it access.)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4592:5727,access,access,5727,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4592,1,['access'],['access']
Security,"teBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid). # remove the container after waiting; docker rm cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid. # return exit code; exit $rc; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: job id: 243; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Status change from - to Done; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor Workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 failed (during ExecutingWorkflowState): Job ValidateBamsWf.ValidateBAM:0:1 exited with return code -1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr.; Could not retrieve content: Could not read from /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr: /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/stderr; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 is in a terminal state: WorkflowFailedState; [2020-07-14 05:09:51,97] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2020-07-14 05:09:55,28] [info] Workflow polling stopped; [2020-07-14 05:09:55,30] [info] 0 workflows released by cromid-ca5c695; [2020-07-14 05:09:55,30] [info] Shutting down WorkflowStoreActor - Timeout = 5 seconds; [2020-07-14 05:09:55,30] [info] Shutting down WorkflowLogCopyRouter - Timeout = 5 seconds; [2020-07-14 05:09:55,3",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:7181,Validat,ValidateBamsWf,7181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,2,['Validat'],"['ValidateBAM', 'ValidateBamsWf']"
Security,ter; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Inflater: IntelInflater; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - GCS max retries/reopens: 20; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Initializing engine; 18:30:54.424 INFO BwaAndMarkDuplicatesPipelineSpark - Done initializing engine; 18/01/09 18:30:54 INFO spark.SparkContext: Running Spark version 2.2.0.cloudera1; 18/01/09 18:30:54 INFO spark.SparkContext: Submitted application: BwaAndMarkDuplicatesPipelineSpark; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing view acls to: sun; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing modify acls to: sun; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing view acls groups to: ; 18/01/09 18:30:54 INFO spark.SecurityManager: Changing modify acls groups to: ; 18/01/09 18:30:54 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(sun); groups with view permissions: Set(); users with modify permissions: Set(sun); groups with modify permissions: Set(); 18/01/09 18:30:55 INFO util.Utils: Successfully started service 'sparkDriver' on port 38793.; 18/01/09 18:30:55 INFO spark.SparkEnv: Registering MapOutputTracker; 18/01/09 18:30:55 INFO spark.SparkEnv: Registering BlockManagerMaster; 18/01/09 18:30:55 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 18/01/09 18:30:55 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 18/01/09 18:30:55 INFO storage.DiskBlockManager: Created local directory at /tmp/sun/blockmgr-b03058dc-763a-449c-bd05-18f3304c01ea; 18/01/09 18:30:55 INFO memory.MemoryStore: MemoryStore started with capacity 2004.6 MB; 18/01/09 18:30:55 INFO spark.SparkEnv,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4112:5597,Secur,SecurityManager,5597,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4112,1,['Secur'],['SecurityManager']
Security,"ternal:8020/user/hadoop/.sparkStaging/application_1554748821802_0005/hive-site.xml; 19/04/08 19:01:48 INFO Client: Uploading resource file:/mnt/tmp/spark-ada67a34-2db0-488c-adf5-7e4607fe989f/__spark_conf__2453357125414211656.zip -> hdfs://ip-xx.xx.xx.xx.ec2.internal:8020/user/hadoop/.sparkStaging/application_1554748821802_0005/__spark_conf__.zip; 19/04/08 19:01:48 INFO SecurityManager: Changing view acls to: hadoop; 19/04/08 19:01:48 INFO SecurityManager: Changing modify acls to: hadoop; 19/04/08 19:01:48 INFO SecurityManager: Changing view acls groups to: ; 19/04/08 19:01:48 INFO SecurityManager: Changing modify acls groups to: ; 19/04/08 19:01:48 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(hadoop); groups with view permissions: Set(); users with modify permissions: Set(hadoop); groups with modify permissions: Set(); 19/04/08 19:01:48 INFO Client: Submitting application application_1554748821802_0005 to ResourceManager; 19/04/08 19:01:48 INFO YarnClientImpl: Submitted application application_1554748821802_0005; 19/04/08 19:01:48 INFO SchedulerExtensionServices: Starting Yarn extension services with app application_1554748821802_0005 and attemptId None; 19/04/08 19:01:49 INFO Client: Application report for application_1554748821802_0005 (state: ACCEPTED); 19/04/08 19:01:49 INFO Client: ; 	 client token: N/A; 	 diagnostics: AM container is launched, waiting for AM container to Register with RM; 	 ApplicationMaster host: N/A; 	 ApplicationMaster RPC port: -1; 	 queue: default; 	 start time: 1554750108216; 	 final status: UNDEFINED; 	 tracking URL: http://ip-xx.xx.xx.xx.ec2.internal:20888/proxy/application_1554748821802_0005/; 	 user: hadoop; 19/04/08 19:01:50 INFO Client: Application report for application_1554748821802_0005 (state: ACCEPTED); 19/04/08 19:01:51 INFO YarnClientSchedulerBackend: Add WebUI Filter. org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter, Map(PROXY_HOSTS -> ip-xx.xx.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5869:7925,Secur,SecurityManager,7925,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5869,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"terval_exclusion_padding 0 --bamPartitionSize 0 --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false --showHidden false --QUIET false --use_jdk_deflater false --use_jdk_inflater false; [August 22, 2017 6:54:35 PM UTC] Executing as root@d6d410d4b1c7 on Linux 4.9.0-0.bpo.3-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_131-8u131-b11-0ubuntu1.16.04.2-b11; Version: 4.beta.3-SNAPSHOT; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 17/08/22 18:54:38 INFO SparkContext: Running Spark version 2.0.2; 17/08/22 18:54:39 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 17/08/22 18:54:40 INFO SecurityManager: Changing view acls to: root; 17/08/22 18:54:40 INFO SecurityManager: Changing modify acls to: root; 17/08/22 18:54:40 INFO SecurityManager: Changing view acls groups to: ; 17/08/22 18:54:40 INFO SecurityManager: Changing modify acls groups to: ; 17/08/22 18:54:40 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set(); 17/08/22 18:54:41 INFO Utils: Successfully started service 'sparkDriver' on port 45651.; 17/08/22 18:54:41 INFO SparkEnv: Registering MapOutputTracker; 17/08/22 18:54:41 INFO SparkEnv: Registering BlockManagerMaster; 17/08/22 18:54:41 INFO DiskBlockManager: Created local directory at /cromwell_root/tmp.5EEmH0/root/blockmgr-84cc8cba-fa27-4b62-a6f6-1c10377ddc86; 17/08/22 18:54:41 INFO MemoryStore: MemoryStore started with capacity 4.1 GB; 17/08/22 18:54:41 INFO SparkEnv: Registering OutputCommitCoordinator; 17/08/22 18:54:42 INFO Utils: Successfully started service 'SparkUI' on port 4040.; 17/08/22 18:54:42 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://172.17.0.2:4040; 17/08/22 18:54:42 INFO Executor: Starting executor ID dri",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3492:1525,Secur,SecurityManager,1525,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3492,7,"['Secur', 'authenticat']","['SecurityManager', 'authentication']"
Security,"test BAMs (e.g., src/test/resources/large/cnv_somatic_workflows_test_files/HCC1143-t1-chr20-downsampled.deduplicated.bam), since these BAMs have been used in the past to consistently generate test files for other tools in the ModelSegments and GermlineCNVCaller pipelines. However, these original test files contained insufficient data to activate the changes found in #7649, even had exact-match tests been present. I thus took some old HCC1143T 100% WES data that I had and snippeted it to chr20. I've confirmed that the added tests with these files would've picked up the regression of log10factorial seen in #7649 for all relevant modes (i.e., all those that take in the allele counts as input, since that regression only affected allele-fraction MCMC sampling). Tests take maybe an additional minute to run and there was about ~12MB of additional large resources checked in, but I didn't try too hard to bring either down. I also added some early-fail parameter validation to check that the minimum total allele count in the case sample is zero in matched-normal mode. There are actually some open questions in my mind as to what the best behavior should be here, but given some of the discussion in #6499 and possible plans for using joint segmentation to do filtering of germline events, I think it's best to enforce that all het sites coming out of the genotyping step are the same across all samples. Recall that we added this parameter in #5556 because some users were running matched normals with much lower depth than their cases. This meant that many normal sites fell below the default threshold of 30 counts and were thus not pulled from the case, even though the latter had much higher depth. It's conceivable that there will be some use cases for which we might want to relax this and allow a non-zero case threshold; for example, if the case is low depth and there's significant noise in the allele fractions, which would affect the segmentation. But for now, I just added a suggest",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7652:1516,validat,validation,1516,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7652,1,['validat'],['validation']
Security,test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtriMixedPloidyTest.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioPopPriorsT,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61266,Validat,ValidateVariants,61266,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,"['Validat', 'validat']","['ValidateVariants', 'validationExampleBad']"
Security,tests that write bam/cram files need to validate that the right format is written,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1269:40,validat,validate,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1269,1,['validat'],['validate']
Security,thanks for the review @kcibul. I made some changes accordingly. re: PrepareCallset file of sample names. That would be nice! It would make this workflow simpler and it also simplifies the access requirements for PrepareCallset. re: Dockstore. We actually ruled this out because Terra says that the definition of a method configuration can change automatically if its updated in dockstore. Which can be useful but it adds a security risk since a compromised Dockstore can change the definition of the production AoU extraction WDL which runs with highly elevated permissions. We already have a script that creates method configurations from github so I can probably add something a little hacky to resolve relative imports to the raw github file that it refers to.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7242#issuecomment-846494686:188,access,access,188,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7242#issuecomment-846494686,4,"['access', 'secur']","['access', 'security']"
Security,"the HMM gap open/gap close penalties as well as the necessary changes to the PairHMM loading code in order to adjust the model appropriately.; - Support for using the DragstrParams and flat SNP priors to compute genotype posteriors and the support for using them in the selection of genotypes as well as for computing the QUAL score. ; - Base Quality Dropout (BQD) model which penalizes variants with low average base quality scores among genotyped reads and reads that were otherwise excluded from the genotyper. A number of additional arguments to expose internal behaviors in the readThreadingAssembler and HaplotypeCaller have been made in order to support threading more lowBQ reads through to the genotyper. ; - Foreign Read Detection (FRD) model which uses an adjusted mapping quality score as well as read strandedness information to penalize reads that are likely to have originated from somewhere else on the genome. A number of additional arguments and behaviors have been exposed in order to preserve lower mapping quality reads in the HaplotypeCaller in service.; - Dynamic Read Disqualification, allows for longer/lower base quality reads to be less likely to be rejected by eliminating the hard cap on quality scores and further adjusting the limit based on the average base quality for bases in the read. . Design decisions that I would direct the reviewers attention to as they correspond to potentially dangerous/controversial changes:; - Because FRD/BQD require low quality ends to be included in the models for genotyping, I have added the option to softclipLowQualityEnds (as opposed to their current treatment which involves hardclipping). This has resulted in a lot of code revolving around handling soft reads and making sure that the correct bases get used in the correct places, which often manifests as simply re-clipping the soft-clipped bases where necessary. This might seem expensive but low quality ends are fairly rare and consequently this has a negligible effect on ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6634:1341,expose,exposed,1341,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6634,1,['expose'],['exposed']
Security,"the dev-oriented material such as coding conventions etc should be moved to a separate wiki page.; The main readme should have examples of how to install it, how to validate the installation and how run it locally, on spark cluster and on the cloud. Candidate for alpha",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1049:165,validat,validate,165,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1049,1,['validat'],['validate']
Security,"the first commit is the fix, the second is a deliberate test failure so we can validate that the fix works when the tests fail",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5108:79,validat,validate,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5108,1,['validat'],['validate']
Security,"the hacker attacked our server, and we solved the problem by remove the virus. (T-T)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8520#issuecomment-1720714446:11,attack,attacked,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8520#issuecomment-1720714446,1,['attack'],['attacked']
Security,"the invalid reads strikes back - i got this when running the ReadsPipelineSpark on qurynamesorted file `hdfs:///user/akiezun/data/CEUTrio.HiSeq.WEx.b37.NA12892.readnamesort.bam`:. ```; Job aborted due to stage failure: Task 47 in stage 2.0 failed 4 times, most recent failure: Lost task 47.3 in stage 2.0 (TID 680, dataflow05.broadinstitute.org): java.lang.IllegalArgumentException: ; Invalid interval. Contig:20 start:62720124 end:62720123; at org.broadinstitute.hellbender.utils.SimpleInterval.validatePositions(SimpleInterval.java:59); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:34); at org.broadinstitute.hellbender.utils.SimpleInterval.<init>(SimpleInterval.java:46); at org.broadinstitute.hellbender.engine.spark.BroadcastJoinReadsWithVariants.lambda$join$3d1c3858$1(BroadcastJoinReadsWithVariants.java:27); at org.apache.spark.api.java.JavaPairRDD$$anonfun$pairFunToScalaFun$1.apply(JavaPairRDD.scala:1030); at org.apache.spark.api.java.JavaPairRDD$$anonfun$pairFunToScalaFun$1.apply(JavaPairRDD.scala:1030); at scala.collection.Iterator$$anon$11.next(Iterator.scala:328); at scala.collection.Iterator$$anon$11.next(Iterator.scala:328); at scala.collection.Iterator$$anon$11.next(Iterator.scala:328); at scala.collection.convert.Wrappers$IteratorWrapper.next(Wrappers.scala:30); at org.broadinstitute.hellbender.tools.spark.transforms.BaseRecalibratorSparkFn.lambda$apply$26a6df3e$1(BaseRecalibratorSparkFn.java:28); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:156); at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:156); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$17.apply(RDD.scala:706); at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$17.apply(RDD.scala:706); at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:297); at org.apache.spark.rdd.RDD.iterat",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1560:496,validat,validatePositions,496,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1560,1,['validat'],['validatePositions']
Security,"there is one bug commented out in ValidateSamFileIntegrationTest. The issue is https://github.com/samtools/htsjdk/issues/369, the fix is in https://github.com/samtools/htsjdk/pull/368. SamFileValidator throws NPE on a CRAM file with an invalid sort order. Once that fix is available we can uncomment the test.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1138:34,Validat,ValidateSamFileIntegrationTest,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1138,1,['Validat'],['ValidateSamFileIntegrationTest']
Security,"there was some not nice code in IntervalsSkipList (using Hashtables (sic! we had Hashtables in 2016), declaring things as ArrayList, verbose comparators etc). This is a small cleanup",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1698:57,Hash,Hashtables,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1698,2,['Hash'],['Hashtables']
Security,they seem to have changed the gcloud cli to use --key-file instead of; --key in authentication. this was causing travis to fail on the cloud tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2248:80,authenticat,authentication,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2248,1,['authenticat'],['authentication']
Security,"this for a first workflow to target?. 1) Run ExtractVariantAnnotations on a training set of chromosomes. You can keep training/truth labels as in Best Practices, for now.; 2) Run TrainVariantAnnotationsModel on that. We'll use the truth scores generated here for any sensitivity conversions---i.e., we'll be calibrating scores only to the truth sites that are contained in the training set of chromosomes.; 3) Use the trained model to run a single shard of ScoreVariantAnnotations on a validation set of chromosomes.; 4) Run some variation of the above script on the resulting outputs to determine SNP and INDEL score thresholds for optimizing the corresponding LL scores. We can also add some code to the script to use the truth scores from step 2 to convert these score thresholds into truth-sensitivity thresholds.; 5) Provide these truth-sensitivity thresholds to ScoreVariantAnnotations and use them to hard filter. Evaluate on a test set of chromosomes. If all looks good, we can later move steps 3-4 into the train tool and automate the passing of sensitivities in 5 via outputs in the model directory. This will let us keep the basic interface of ScoreVariantAnnotations the same, but we'll have to add a few basic parameters to TrainVariantAnnotationsModel to control the train/validation split. So I think all this branch is missing is step 5---we'll simply need to add command-line parameters for the SNP/INDEL sensitivity thresholds and then do the hard filtering in the VCF writing method highlighted above. Do you think you can handle implementing that in this branch, and then the rest at the WDL level? I can help with the python script for the LL stuff (or anything else), if needed. Not sure if you got a chance to check out what your collaborators are doing in the methods you're looking to compare against, but it would be good to understand if this basic scheme for train/validation/test splitting can be replicated over there. You'll want to compare apples to apples, after all!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084:1366,validat,validation,1366,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084,4,['validat'],['validation']
Security,this happens on the branch for https://github.com/broadinstitute/gatk/pull/1630 (which uses async IO for tests to mimic non-test usage). This bug is either due to or exposed by asynchronous tribble reading. more logs https://travis-ci.org/broadinstitute/gatk/jobs/118507152. test results; https://storage.googleapis.com/hellbender/test/build_reports/5109.2/tests/classes/org.broadinstitute.hellbender.tools.walkers.filters.VariantFiltrationIntegrationTest.html#testClusteredSnps. ```; java.lang.RuntimeException: htsjdk.tribble.TribbleException: Exception encountered in worker thread.; at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.executeTest(IntegrationTestSpec.java:153); at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.executeTest(IntegrationTestSpec.java:126); at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.executeTest(IntegrationTestSpec.java:108); at org.broadinstitute.hellbender.tools.walkers.filters.VariantFiltrationIntegrationTest.testClusteredSnps(VariantFiltrationIntegrationTest.java:36); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentiall,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:166,expose,exposed,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,1,['expose'],['exposed']
Security,this happens while running the command ; ```; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx15500m\ ; -jar /root/gatk.jar Mutect2 -R gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta\ ; -I gs://cclebams/hg38_wes/CDS-00rz9N.hg38.bam -tumor BC1_HAEMATOPOIETIC_AND_LYMPHOID_TISSUE --germline-resource gs://gcp-public-data--gnomad/release/3.0/vcf/genomes/gnomad.genomes.r3.0.sites.vcf.bgz\ ; -pon gs://gatk-best-practices/somatic-hg38/1000g_pon.hg38.vcf.gz\ ; -L gs://fc-secure-d2a2d895-a7af-4117-bdc7-652d7d268324/7a157f4a-7d93-4a3e-aaf4-c41833463f5a/Mutect2/3be8ce8e-1075-4063-bc43-6f61e386c3f5/call-SplitIntervals/cacheCopy/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list\ ; -O output.vcf.gz --f1r2-tar-gz f1r2.tar.gz --gcs-project-for-requester-pays broad-firecloud-ccle --genotype-germline-sites true --genotype-pon-sites true --emit-ref-confidence GVCF; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7849#issuecomment-1128909634:615,secur,secure-,615,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7849#issuecomment-1128909634,1,['secur'],['secure-']
Security,"this is a script which can be used after running gradle installDist to run spark jobs; it can be used identically to ths build/install/bin/gatk script, but has extra features for dealing with spark. running a spark tool and supplying the option --sparkTarget with LOCAL, CLUSTER, or GCS has special behavior; LOCAL will run the tool in the in memory spark runner; CLUSTER along with an appropriate --sparkMaster will run on an accessible spark cluster using spark-submit; arguments to spark-submit may be specified before the arguments to GATK by separating them with a --; GCS will submit jobs to google dataproc using gcloud; common arguments for spark submit will be adapted to match the gcloud formating; this will fail if gcloud isn't installed. if GATK_GCS_STAGING is specified, the jar will be uploaded and cached in the specified bucket for rapid re-use. input files will not be autouploaded to the cloud. --dry-run may be specified before the --, this will only print the commands that will be run instead of actually running them. Adding DataProcArgumentReplace simple tool to convert spark-submit args into gcloud args.; This conversion is not guarenteed to translate all spark command line options to matching gcloud ones.; If you find options that are not translated or are miss-translated please file an issue.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1211:427,access,accessible,427,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1211,1,['access'],['accessible']
Security,"thub.com/broadinstitute/gatk-protected/issues/149). Plots required to choose some of the parameters use along the pipeline:; To have an idea how they look like and how they would be used you can refer to XHMM tutorial:; https://atgu.mgh.harvard.edu/xhmm/tutorial.shtml. These can be totally in R and you may choose to reuse XHMM original code make reference to the appropriate license; they are quite simple so probably it is not necessary:; - min and max average sample coverage (to filter extreme samples).; - Plot a histogram of the average sample target coverage to choose this cut-offs. ; - min and max std dev. coverage across targets per sample (to filter extreme targets).; - Plot another histogram but in this case of the std .dev target coverage.; - min and max average and std. dev target coverage (to filter extreme targets); - Basically the ""transpose of the two plots above so that we can filter extreme targets:; - Histogram of the mean coverage per target across samples; - Histogram of the std. dev coverage per target across samples.; - Principal components variance explained plot.; - Y is the variance explained by the component (~ eigen value).; - X is the component index where 0 is the first component and i is the ith component.; Consequently this graph is monotonic decreasing.; - Would be nice to get the component vs covariate plot to find out whether we are getting rid ; of known biases like GC content but this one may take a bit more time an might not be necessary for now in practice. . The first few plots could be done by a script that takes in a read counts file.; The principal components one may access the .pon file directly perhaps using a cran package to read hdf5 files. Otherwise you might need to write a simple tool to extract those variances from the .pon. ---. @samuelklee commented on [Wed Aug 17 2016](https://github.com/broadinstitute/gatk-protected/issues/149#issuecomment-240525897). The new germline CNV tool should have some plotting capabilities.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2826:1682,access,access,1682,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2826,1,['access'],['access']
Security,"tig names of chromosomes. This tool supports two of those chromosome code options: `chrM` and `MT`, which correspond to hg38 and hg19 contig naming, respectively. This argument is required. #### write-mode; The PGEN writer defined in PGEN-JNI defines two different write modes. When `WRITE_AND_COPY` is selected, a temporary .pgen file is created and written to during the running of the tool, and then once all records have been written, a new file is created with the index at the top and the contents of the temporary .pgen file appended to it. When `WRITE_SEPARATE_INDEX` is selected, the index is instead written to a separate .pgi file. The default is `WRITE_AND_COPY`. #### max-alt-alleles; The PGEN format can only support up to 254 alt alleles per site. This argument allows you to specify a limit. The default is the max of 254. Any sites with more alt alleles than the specified max will not be written. #### lenient-ploidy-validation; PGEN is a bit quirky in that it requires samples to be diploid but has a special case for sex chromosomes, which are allowed to be haploid. By default, any attempt to write a record with an unsupported ploidy will result in an exception being thrown. If this flag is used, then ploidy failures will instead be logged and the records will be written as missing. #### writer-log-file; The C++ code in the PGEN writer in PGEN-JNI will log sites that exceed max-alt-alleles and with unsupported ploidy (if lenient-ploidy-validation is set) to the specified log file, if this argument is set. #### allow-empty-pgen; Empty PGEN files are not technically valid PGEN files. However, for parallel processing purposes, it is sometimes helpful to allow the creation of empty files when there are no variants to be written. The GvsExtractCallsetPgenMerged workflow relies on this. If this flag is set and no variants are written, an empty .pgen, .psam, and .pvar.zst file will be written in `onShutdown()`. By default (i.e. if this flag is not set), if there are no",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708:4569,validat,validation,4569,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708,1,['validat'],['validation']
Security,til.java:141); 	at org.broadinstitute.hellbender.tools.GatherVcfsCloud.gatherWithBlockCopying(GatherVcfsCloud.java:394); 	at org.broadinstitute.hellbender.tools.GatherVcfsCloud.doWork(GatherVcfsCloud.java:143); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:119); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:176); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:195); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:137); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:158); 	at org.broadinstitute.hellbender.Main.main(Main.java:239); Caused by: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-jg-dev-11k-call-set/JointGenotyping/0cb36821-b8bf-4e6d-a352-07b101f6b7d1/call-ApplyRecalibration/shard-1734/GMKF_Seidman_CHD_WGS_904.filtered.1734.vcf.gz.; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.getBuf(SeekableByteChannelPrefetcher.java:136); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.fetch(SeekableByteChannelPrefetcher.java:255); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher.read(SeekableByteChannelPrefetcher.java:300); 	... 10 more; Caused by: com.google.cloud.storage.StorageException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-jg-dev-11k-call-set/JointGenotyping/0cb36821-b8bf-4e6d-a352-07b101f6b7d1/call-ApplyRecalibration/shard-1734/GMKF_Seidman_CHD_WGS_904.filtered.1734.vcf.gz.; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(H,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3735:2637,access,access,2637,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3735,1,['access'],['access']
Security,"tions/AnnotationFiltration/4e3bd06b-3018-4c94-ac98-feb78b924d1f/call-FilterFuncotations/shard-0/inputs/1333115969/104566-001-001.filtered.vcf.funcotated.vcf.gz \ ; --output 104566-001-001.filtered.vcf.filtered.vcf.gz \ ; --ref-version hg38 \ ; --allele-frequency-data-source gnomad --lenient true; ; ; ; ; . However, the command fails with the error message below:. ; ; ; ; [October 14, 2021 at 12:20:24 PM CEST] org.broadinstitute.hellbender.tools.funcotator.FilterFuncotations done. Elapsed time: 16.57 minutes. ; Runtime.totalMemory()=1134559232 ; java.lang.IllegalStateException: Duplicate key Gencode\_34\_annotationTranscript (attempted merging values ENST00000450305.2 and ENST00000456328.2) ; at java.base/java.util.stream.Collectors.duplicateKeyException(Collectors.java:133) ; at java.base/java.util.stream.Collectors.lambda$uniqKeysMapAccumulator$1(Collectors.java:180) ; at java.base/java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169) ; at java.base/java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1603) ; at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ; at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ; at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ; at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ; at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ; at org.broadinstitute.hellbender.tools.funcotator.filtrationRules.AlleleFrequencyUtils.lambda$buildMaxMafRule$1(AlleleFrequencyUtils.java:30) ; at org.broadinstitute.hellbender.tools.funcotator.filtrationRules.FuncotationFilter.lambda$checkFilter$0(FuncotationFilter.java:48) ; at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ; at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) ; at java.base/java.util.stream.AbstractPipeline.copy",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7504:2398,Hash,HashMap,2398,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7504,1,['Hash'],['HashMap']
Security,titute/gatk/commit/9d9ca1ff31f99d8005c822e55aaccce967427383?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3228 +/- ##; ===============================================; + Coverage 80.419% 80.427% +0.008% ; Complexity 17290 17290 ; ===============================================; Files 1165 1165 ; Lines 62596 62597 +1 ; Branches 9768 9768 ; ===============================================; + Hits 50339 50345 +6 ; + Misses 8352 8347 -5 ; Partials 3905 3905; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <100%> (+0.122%)` | `36 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <100%> (ø)` | `7 <1> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/FalsePositiveRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRmFsc2VQb3NpdGl2ZVJlY29yZC5qYXZh) | `100% <100%> (ø)` | `7 <2> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `73.649% <0%> (+2.027%)` | `34% <0%> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891:1208,validat,validation,1208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891,1,['validat'],['validation']
Security,"to validate inputs. (#7845); - Compute filter scatter [VS-392] (#7852); - remove withdrawn req (#7844); - Improve import error message [VS-437] (#7855); - Fix Input Validation python notebook (#7853); - Add VAT Validation check that aa_change and exon_number are consistently set. (#7850); - Ingest 10K [VS-344] (#7860); - X/Y chromosome reweighting for better extract shard runtime balance [VS-389] (#7868); - VET Ingest Validation / Allow Ingest of non-VQSR'ed data (#7870); - Fix AoU workflow bugs (#7874); - Curate input arrays to skip already ingested sample data [VS-246] (#7862); - KM upload GVS product sheet (#7883); - Default extract scatter width [VS-415] (#7878); - Volatile tasks review [VS-447] (#7880); - Update Quickstart Integration for X/Y scaling changes [VS-464] (#7881); - clean up dockstore; - Rc vs 63 vat sop documentation (#7879); - Fix up FQ and race condition issues with volatile tasks work [VS-478] (#7888); - Use gvs-internal project in integration test (#7901); - Add cost observability BQ table [VS-441] (#7891); - Add preliminary labels to queries [VS-381] (#7902); - Workflow compute costs [VS-472] (#7905); - Fix bug and update images (#7912); - VS 483 Beta user wdl (#7894); - Core storage model cost [VS-473] (#7913); - Update Quickstart & Integration to use re-blocked v2 gVCFs [VS-491] (#7924); - KM GVS documentation (#7903); - Track BigQuery costs of GVS python VS-480 (#7915); - Read cost observability table [VS-475] (#7923); - Fix Race Condition, Add Support for Extract by Array of Sample Names (ie from a Sample Set) (#7917); - Rightsize import batches [VS-486] (#7925); - [AoU DRC] Support uppercase site_ids for reblocking (#7929); - Populate cost metadata for GATK tasks. (#7919); - remove accidentally added input (#7931); - VS_492 - Beta User Jar release (#7934); - Cost WDL should throw on FISS API errors [VS-518] (#7942); - Fix bad check for missing workflow name [VS-520] (#7943); - Remove usage of service account from GvsValidateVAT.wdl (#7937",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:24874,Validat,Validation,24874,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,2,['Validat'],['Validation']
Security,"too long (225) at position chr1:10178; skipping that record. Set --reference_window_stop >= 225 ; INFO 10:49:23,200 LeftAlignAndTrimVariants - Reference allele is too long (221) at position chr1:10213; skipping that record. Set --reference_window_stop >= 221 ; INFO 10:49:23,201 LeftAlignAndTrimVariants - Reference allele is too long (223) at position chr1:10218; skipping that record. Set --reference_window_stop >= 223 ; INFO 10:49:23,203 LeftAlignAndTrimVariants - Reference allele is too long (212) at position chr1:10229; skipping that record. Set --reference_window_stop >= 212 ; INFO 10:49:23,203 LeftAlignAndTrimVariants - Reference allele is too long (216) at position chr1:10231; skipping that record. Set --reference_window_stop >= 216 ; INFO 10:49:23,205 LeftAlignAndTrimVariants - Reference allele is too long (204) at position chr1:10237; skipping that record. Set --reference_window_stop >= 204 ; INFO 10:49:23,205 LeftAlignAndTrimVariants - Reference allele is too long (209) at position chr1:10238; skipping that record. Set --reference_window_stop >= 209 ; INFO 10:49:23,208 LeftAlignAndTrimVariants - Reference allele is too long (204) at position chr1:10254; skipping that record. Set --reference_window_stop >= 204 ; INFO 10:49:23,214 LeftAlignAndTrimVariants - Reference allele is too long (207) at position chr1:10276; skipping that record. Set --reference_window_stop >= 207 ; 0 variants were aligned; INFO 10:49:23,402 ProgressMeter - done 638.0 0.0 s 10.6 m 0.0% 0.0 s 0.0 s ; INFO 10:49:23,402 ProgressMeter - Total runtime 0.41 secs, 0.01 min, 0.00 hours ; ------------------------------------------------------------------------------------------; Done. There were 1 WARN messages, the first 1 are repeated below.; WARN 10:49:22,065 IndexDictionaryUtils - Track variant doesn't have a sequence dictionary built in, skipping dictionary validation ; ------------------------------------------------------------------------------------------; WMCF9-CB5:Mutect2 shlee$ ; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091:4627,validat,validation,4627,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091,1,['validat'],['validation']
Security,tools that expect unaligned reads shouldn't validate the sequence dictionary,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4131:44,validat,validate,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4131,1,['validat'],['validate']
Security,tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVarian,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:60524,Validat,ValidateVariants,60524,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,"tor to shut down; 19/04/08 19:03:28 INFO SchedulerExtensionServices: Stopping SchedulerExtensionServices; (serviceOption=None,; services=List(),; started=false); 19/04/08 19:03:28 INFO YarnClientSchedulerBackend: Stopped; 19/04/08 19:03:28 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!; 19/04/08 19:03:28 INFO MemoryStore: MemoryStore cleared; 19/04/08 19:03:28 INFO BlockManager: BlockManager stopped; 19/04/08 19:03:28 INFO BlockManagerMaster: BlockManagerMaster stopped; 19/04/08 19:03:28 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!; 19/04/08 19:03:28 INFO SparkContext: Successfully stopped SparkContext; 19:03:28.389 INFO HaplotypeCallerSpark - Shutting down engine; [April 8, 2019 7:03:28 PM UTC] org.broadinstitute.hellbender.tools.HaplotypeCallerSpark done. Elapsed time: 1.75 minutes.; Runtime.totalMemory()=941096960; Exception in thread ""main"" java.lang.StackOverflowError; 	at java.util.HashMap.putMapEntries(HashMap.java:501); 	at java.util.HashMap.<init>(HashMap.java:490); 	at com.esotericsoftware.kryo.Generics.<init>(Generics.java:47); 	at com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil.buildGenericsScope(FieldSerializerGenericsUtil.java:116); 	at com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil.newCachedFieldOfGenericType(FieldSerializerGenericsUtil.java:225); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.newCachedField(FieldSerializer.java:368); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.createCachedFields(FieldSerializer.java:331); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.rebuildCachedFields(FieldSerializer.java:261); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.rebuildCachedFields(FieldSerializer.java:182); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.write(FieldSerializer.java:508); 	at com.esotericsoftware.kryo.Kryo.writeObject(Kryo.java:552); 	at com.esotericsoftware.kryo.se",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5869:18446,Hash,HashMap,18446,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5869,1,['Hash'],['HashMap']
Security,"torSparkFn.java:38); 	at org.broadinstitute.hellbender.tools.spark.BaseRecalibratorSpark.runTool(BaseRecalibratorSpark.java:132); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:528); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:30); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:138); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); 	at org.broadinstitute.hellbender.Main.main(Main.java:291)`; **Caused by: java.lang.IllegalArgumentException: Table1 1,3 not equal to 88,3**; 	`at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:724); 	at org.broadinstitute.hellbender.utils.recalibration.RecalUtils.combineTables(RecalUtils.java:560); 	at org.broadinstitute.hellbender.utils.recalibration.RecalibrationTables.combine(RecalibrationTables.java:144); 	at org.broadinstitute.hellbender.utils.recalibration.RecalibrationTables.inPlaceCombine(RecalibrationTables.java:178); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$toScalaFunction2$1.apply(JavaPairRDD.scala:1037); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); 	at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1336); 	at scala.collection.TraversableOnce$class.aggregate(TraversableOnce.scala:214); ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5854:4697,validat,validateArg,4697,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5854,1,['validat'],['validateArg']
Security,totalMemory()=1065353216; java.lang.IllegalArgumentException: Unsupported class file major version 55; 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:166); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:148); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:136); 	at org.apache.xbean.asm6.ClassReader.<init>(ClassReader.java:237); 	at org.apache.spark.util.ClosureCleaner$.getClassReader(ClosureCleaner.scala:49); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:517); 	at org.apache.spark.util.FieldAccessFinder$$anon$3$$anonfun$visitMethodInsn$2.apply(ClosureCleaner.scala:500); 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:134); 	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236); 	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40); 	at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:134); 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732); 	at org.apache.spark.util.FieldAccessFinder$$anon$3.visitMethodInsn(ClosureCleaner.scala:500); 	at org.apache.xbean.asm6.ClassReader.readCode(ClassReader.java:2175); 	at org.apache.xbean.asm6.ClassReader.readMethod(ClassReader.java:1238); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:631); 	at org.apache.xbean.asm6.ClassReader.accept(ClassReader.java:355); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:307); 	at org.apache.spark.util.ClosureCleaner$$anonfun$org$apache$spark$util$ClosureCleaner$$clean$14.apply(ClosureCleaner.scala:306); 	at scala.collection.immutable.List.foreach(List.scala:392); 	at org.apache.spark.util.ClosureCl,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:6929,Hash,HashTable,6929,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,1,['Hash'],['HashTable']
Security,tractPipeline.java:472); at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150); at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485); at org.broadinstitute.hellbender.engine.VariantWalker.traverse(VariantWalker.java:102); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1085); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); Using GATK jar /root/gatk.jar defined in environment variable GATK_LOCAL_JAR; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx3500m -jar /root/gatk.jar Funcotator --data-sources-path /cromwell_root/datasources_dir --ref-version hg38 --output-file-format VCF -R gs://genomics-public-data/resources/broad/hg38/v0/Homo_sapiens_assembly38.fasta -V gs://fc-secure-d2a2d895-a7af-4117-bdc7-652d7d268324/94e769a1-28e1-4bd7-b09f-9e47fb7d8352/omics_mutect2/14fe5685-740c-4e09-9d1a-8c8d14c0ae5b/call-mutect2/Mutect2/2de52f4f-eea0-4ec7-acc1-f47b1a2d1e6c/call-Filter/attempt-2/CDS-2jucw0.hg38-filtered.vcf.gz -O CDS-2jucw0.hg38-filtered.vcf.gz.annotated.vcf.gz -L /cromwell_root/ccleparams/region_file_wgs.list --annotation-default normal_barcode: --annotation-default tumor_barcode:NP5 --annotation-default Center:DEPMAP --annotation-default source:Unknown; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-1182102653:7466,secur,secure-,7466,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-1182102653,1,['secur'],['secure-']
Security,"trandBiasBySample - Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null; 00:10:41.089 WARN DepthPerSampleHC - Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null; 00:10:41.089 WARN StrandBiasBySample - Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null; 00:10:45.460 WARN DepthPerSampleHC - Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null; 00:10:45.460 WARN StrandBiasBySample - Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null; 00:11:09.609 WARN TaskMemoryManager:381 - leak 166.6 MB memory from org.apache.spark.util.collection.ExternalAppendOnlyMap@60a3c432; 00:11:09.611 ERROR Executor:91 - Exception in task 15.0 in stage 1.0 (TID 519); java.lang.IllegalStateException: Duplicate key [B@4e233a3c; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1253); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.buildGapContinuationPenalties(PairHMMLikelihoodCalculat; ionEngine.java:304); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngi; ne.java:253); at org.broadinstitute.hellbe",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3018:1454,Hash,HashMap,1454,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3018,1,['Hash'],['HashMap']
Security,"ts and custom serializers (gCNV Spark tests are currently disabled). **Discussion about gCNV ICG unit tests (May 1st, 2017):**; It is possible to automate the test for ComputableNodeFunctions. One initializes the parents to random values, calls the function, and checks whether it has had any side effects on the parents. One must make a random-data-provider-of-some-sort for each parent node because the parent INDArrays have different shapes. For other functions in CoverageModelEMComputeBlock and CoverageModelEMWorkspace that query ICG nodes -- one needs to create a firewall. One can elevate all such functions to classes that essentially behave functionally, (ICGNodeProvider, List<NodeKey>, extra arguments) -> output, as opposed to writing vanilla member functions such as CoverageModelEMComputeBlock.getBiasLatentPosteriorDataUnregularized, etc. Then we can write automated unit tests for these classes. Another approach is to write a thin ImmutableNDArray interface that blocks access to all mutators and returns instances of ImmutableNDArray when a matrix view is extracted (e.g. via INDArray.get(...)). This is also quite non-trivial and requires intimate familiarity with Nd4j codebase. Perhaps one could write an immutable DataBuffer for Nd4j. Finally, there might be a brute-force approach: substitute all in-plane operations such as muli and addi with mul and add, and in-place transformations such as Transforms.log(INDArray, boolean duplicate) with Transforms.log(INDArray, true), run gCNV, and require identical results. This is the easiest approach. This was my approach during the development. First, I wrote every function without in-place operations, ran the code, optimized the function with in-place ops, ran the code again, assert. If we can automate this sort of thing, it is the easiest way out. For the time being, I annotate all functions that can potentially mutate the ICG with @QueriesICG to finally decide how we'd like to proceed. I also made a TODO for writing suc",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2929:2013,access,access,2013,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2929,1,['access'],['access']
Security,"ts.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.291 WARN IndexUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 17:43:53.302 INFO ValidateVariants - Shu",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:3121,Validat,ValidateVariants,3121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,tute/gatk/commit/c7d5bc188309bba64e57246ad29acbf0528150f2?src=pr&el=desc) will **increase** coverage by `0.06%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #2653 +/- ##; ==============================================; + Coverage 76.122% 76.182% +0.06% ; - Complexity 11152 11195 +43 ; ==============================================; Files 769 769 ; Lines 40753 40911 +158 ; Branches 7112 7144 +32 ; ==============================================; + Hits 31022 31167 +145 ; - Misses 7062 7066 +4 ; - Partials 2669 2678 +9; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.824% <100%> (ø)` | `77 <0> (ø)` | :arrow_down: |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `81.081% <0%> (+0.484%)` | `18% <0%> (ø)` | :arrow_down: |; | [...org/broadinstitute/hellbender/utils/MathUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9NYXRoVXRpbHMuamF2YQ==) | `81.009% <0%> (+1.638%)` | `163% <0%> (+22%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `74.026% <0%> (+1.948%)` | `35% <0%> (ø)` | :arrow_down: |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/pull/2653?src=pr&el=tree#diff-c3JjL21,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2653#issuecomment-299045594:1224,Validat,ValidateVariants,1224,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2653#issuecomment-299045594,1,['Validat'],['ValidateVariants']
Security,tute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtriMixedPloidyTest.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioPopPriorsTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/expectedCGP_testFamilyPriors_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61618,Validat,ValidateVariants,61618,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,"['Validat', 'validat']","['ValidateVariants', 'validationUnusedAllelesBugFix']"
Security,uisshe/work/NGS/wdl/test_workflow_cnv/germline/cromwell-executions/CNVGermlineCohort8/Homo_sapiens_assembly38.bed.preprocessed.filtered.scattered.0154.interval_list:/paedyl01/disk1/louisshe/work/NGS/wdl/test_workflow_cnv/germline/cromwell-executions/CNVGermli947966988/Homo_sapiens_assembly38.bed.preprocessed.filtered.scattered.0154.interval_list:; 21:06:12.640 DEBUG FeatureCache - Cache hit rate was 0.00% (0 out of 0 total queries); 21:06:12.645 INFO IntervalArgumentCollection - Processing 4999155 bp from intervals; 21:06:12.656 INFO GermlineCNVCaller - Reading and validating annotated intervals...; 21:06:18.914 WARN GermlineCNVCaller - Sequence dictionary in annotated-intervals file does not match the master sequence dictionary.; 21:06:19.130 INFO GermlineCNVCaller - GC-content annotations for intervals found; explicit GC-bias correction will be performed...; 21:06:19.200 INFO GermlineCNVCaller - Running the tool in COHORT mode...; 21:06:19.200 INFO GermlineCNVCaller - Validating and aggregating data from input read-count files...; 21:07:11.897 DEBUG ScriptExecutor - Executing:; 21:07:11.897 DEBUG ScriptExecutor - python; 21:07:11.897 DEBUG ScriptExecutor - /paedyl01/disk1/louisshe/tmp/gatk/cohort_denoising_calling.418897092082188314.py; 21:07:11.897 DEBUG ScriptExecutor - --ploidy_calls_path=/paedyl01/disk1/louisshe/work/NGS/wdl/test_workflow_cnv/germline/cromwell-executions/CNVGermlineCohortWorkflow/d53c0a; 21:07:11.897 DEBUG ScriptExecutor - --output_calls_path=/paedyl01/disk1/louisshe/out/NMD/batch1_2023/batch1_all/cnv/cohort_calls/batch1_all-calls; 21:07:11.897 DEBUG ScriptExecutor - --output_tracking_path=/paedyl01/disk1/louisshe/out/NMD/batch1_2023/batch1_all/cnv/cohort_calls/batch1_all-tracking; 21:07:11.897 DEBUG ScriptExecutor - --random_seed=1984; 21:07:11.897 DEBUG ScriptExecutor - --modeling_interval_list=/paedyl01/disk1/louisshe/tmp/gatk/intervals6744296186531223263.tsv; 21:07:11.897 DEBUG ScriptExecutor - --output_model_path=/paedyl01/disk1/louisshe/o,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8952:7028,Validat,Validating,7028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8952,1,['Validat'],['Validating']
Security,ultiple SLF4J bindings.; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark2/jars/slf4j-log4j12-1.7.16.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/usr/hdp/2.6.3.40-13/spark_llap/spark-llap-assembly-1.0.0.2.6.3.40-13.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]; java.lang.NoClassDefFoundError: org/apache/logging/log4j/core/appender/AbstractAppender; at java.lang.ClassLoader.defineClass1(Native Method); at java.lang.ClassLoader.defineClass(ClassLoader.java:763); at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); at java.net.URLClassLoader.defineClass(URLClassLoader.java:467); at java.net.URLClassLoader.access$100(URLClassLoader.java:73); at java.net.URLClassLoader$1.run(URLClassLoader.java:368); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349); at java.lang.ClassLoader.loadClass(ClassLoader.java:411); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.decodeCacheFiles(PluginRegistry.java:181); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.loadFromMainClassLoader(PluginRegistry.java:119); at org.apache.logging.log4j.core.config.plugins.util.PluginManager.collectPlugins(PluginManager.java:132); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:131); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:112); at org.apache.logging.log4j.core.layout.PatternLayout.createPatternParser(PatternLayout.java:220); at org.apache.logging.log4j.core.layou,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5126:2903,secur,security,2903,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126,1,['secur'],['security']
Security,"un(Executor.scala:274); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:748). 00:11:09.634 ERROR TaskSetManager:70 - Task 15 in stage 1.0 failed 1 times; aborting job; 00:11:09.810 WARN TaskSetManager:66 - Lost task 33.0 in stage 1.0 (TID 528, localhost): TaskKilled (killed intentionally); 00:11:24.786 INFO HaplotypeCallerSpark - Shutting down engine; [May 26, 2017 12:11:24 AM UTC] org.broadinstitute.hellbender.tools.HaplotypeCallerSpark done. Elapsed time: 10.58 minutes.; Runtime.totalMemory()=16622026752; org.apache.spark.SparkException: Job aborted due to stage failure: Task 15 in stage 1.0 failed 1 times, most recent failure: Lost task 15.0 in stage 1.0 (TID 519; , localhost): java.lang.IllegalStateException: Duplicate key [B@4e233a3c; at java.util.stream.Collectors.lambda$throwingMerger$0(Collectors.java:133); at java.util.HashMap.merge(HashMap.java:1253); at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1320); at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169); at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.buildGapContinuationPenalties(PairHMMLikelihoodCalculat; ionEngine.java:304); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngi; ne.java:253); at org.broadinsti",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3018:9943,Hash,HashMap,9943,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3018,1,['Hash'],['HashMap']
Security,"unMain$1(SparkSubmit.scala:198); 	at org.apache.spark.deploy.SparkSubmit$.submit(SparkSubmit.scala:228); 	at org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:137); 	at org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala); Caused by: java.nio.file.FileSystemNotFoundException: Provider ""gs"" not installed; 	at java.nio.file.Paths.get(Paths.java:147); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceFileSparkSource.getReferencePath(ReferenceFileSparkSource.java:53); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceFileSparkSource.getReferenceBases(ReferenceFileSparkSource.java:60); 	at org.broadinstitute.hellbender.engine.spark.datasources.ReferenceMultiSparkSource.getReferenceBases(ReferenceMultiSparkSource.java:89); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType.getRefBaseString(BreakEndVariantType.java:89); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType.access$200(BreakEndVariantType.java:20); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType$InterChromosomeBreakend.<init>(BreakEndVariantType.java:253); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.BreakEndVariantType$InterChromosomeBreakend.getOrderedMates(BreakEndVariantType.java:261); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.NovelAdjacencyAndAltHaplotype.toSimpleOrBNDTypes(NovelAdjacencyAndAltHaplotype.java:246); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.SimpleNovelAdjacencyInterpreter.inferType(SimpleNovelAdjacencyInterpreter.java:129); 	at org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.SimpleNovelAdjacencyInterpreter.lambda$inferTypeFromSingleContigSimpleChimera$24ddc343$1(SimpleNovelAdjacencyInterpreter.java:107); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$pairFunToScalaFun$1.apply(JavaPairRDD.scala:1043); 	at org.apache.spark.api.java.JavaPairRDD$$anonfun$pairFunToScalaFun",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6070:8743,access,access,8743,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6070,1,['access'],['access']
Security,"unity/posts/360056339072-Mutect2-Need-one-or-two-reads-to-construct-a-fragment. --. The command I used below is able to generate the .vcf output along with its index and stats file, but my snakemake run fails to complete due to exit status (3 instead of 0). I wonder if below error is caused by trying to split the runs by chromosome and setting improper interval padding. Thank you for your time. ------------------------------------------------------------------------------------------------------------------------------------. a) GATK version used. _The Genome Analysis Toolkit (GATK) v4.1.4.1_. b) Exact GATK commands used. _/usr/bin/time -v gatk --java-options ""-Xmx10G"" Mutect2 -R ../reference/indices\_010920/GRCh38.d1.vd1.fa -L chr4.bed -I chr4.bam --max-mnp-distance 0 --interval-padding 100 -O chr4.vcf.gz_. c) The entire error log if applicable. _java.lang.IllegalArgumentException: Need one or two reads to construct a fragment_ ; _at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:725)_ ; _at org.broadinstitute.hellbender.utils.read.Fragment.create(Fragment.java:43)_ ; _at org.broadinstitute.hellbender.utils.read.Fragment.createAndAvoidFailure(Fragment.java:58)_ ; _at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)_ ; _at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)_ ; _at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)_ ; _at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)_ ; _at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)_ ; _at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)_ ; _at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)_ ; _at org.broadinstitute.hellbender.utils.genotyper.AlleleLikelihoods.groupEvidence(AlleleLikelihoods.java:589)_ ; _at org.broadinstitute.hellbender.tools.walkers.mutect.SomaticGenotypingEngine.callMutations(SomaticGenotypingEngine.java",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6419:1130,validat,validateArg,1130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6419,1,['validat'],['validateArg']
Security,"unter generatd only header in output file. Here I enclosed my command and stderr log. Please help me to check it. Thank you!. If you are seeing an error, please provide(REQUIRED) : ; ; a) GATK version used: 4.1.8.1 ; ; b) Exact command used:. java -Xmx8000m -Djava.io.tmpdir=/broad/hptmp/cbao \\ ; ; \-jar ${path2gatk}/gatk-package-4.1.8.1-local.jar \\ ; ; ASEReadCounter \\ ; ; \-L scattered.interval\_list \\ ; ; \-R Homo\_sapiens\_assembly19.fasta \\ ; ; \-V 1000G\_phase1.snps.high\_confidence.b37.vcf.gz \\ ; ; \-I downsample\_10k.bam \\ ; ; \-O output.txt --verbosity INFO. c) Entire error log:. 19:13:25.991 INFO NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/broad/software/free/Linux/redhat\_7\_x86\_64/pkgs/gatk\_4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl\_compression.so. Jun 14, 2021 7:13:26 PM shaded.cloud\_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials. WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see [https://cloud.google.com/docs/authentication/](https://cloud.google.com/docs/authentication/). 19:13:26.217 INFO ASEReadCounter - ------------------------------------------------------------. 19:13:26.218 INFO ASEReadCounter - The Genome Analysis Toolkit (GATK) v4.1.8.1. 19:13:26.218 INFO ASEReadCounter - For support and documentation go to [https://software.broadinstitute.org/gatk/](https://software.broadinstitute.org/gatk/). 19:13:26.219 INFO ASEReadCounter - Executing as [cbao@uger-c009.broadinstitute.org](mailto:cbao@uger-c009.broadinstitute.org) on Linux v3.10.0-1160.15.2.el7.x86\_64 amd64. 19:13:26.219 INFO ASEReadCounter - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7327:1758,authenticat,authenticated,1758,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7327,1,['authenticat'],['authenticated']
Security,"unter to call allelic read counts on 1000 genome reference. But, I found ASEReadCounter generatd only header in output file. Here I enclosed my command and stderr log. Please help me to check it. Thank you!. If you are seeing an error, please provide(REQUIRED) :; a) GATK version used: 4.1.8.1; b) Exact command used:. java -Xmx8000m -Djava.io.tmpdir=/broad/hptmp/cbao \; -jar ${path2gatk}/gatk-package-4.1.8.1-local.jar \; ASEReadCounter \; -L scattered.interval_list \; -R Homo_sapiens_assembly19.fasta \; -V 1000G_phase1.snps.high_confidence.b37.vcf.gz \; -I downsample_10k.bam \; -O output.txt --verbosity INFO . c) Entire error log:; 19:13:25.991 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/broad/software/free/Linux/redhat_7_x86_64/pkgs/gatk_4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jun 14, 2021 7:13:26 PM shaded.cloud_nio.com.google.auth.oauth2.DefaultCredentialsProvider warnAboutProblematicCredentials; WARNING: Your application has authenticated using end user credentials from Google Cloud SDK. We recommend that most server applications use service accounts instead. If your application continues to use end user credentials from Cloud SDK, you might receive a ""quota exceeded"" or ""API not enabled"" error. For more information about service accounts, see https://cloud.google.com/docs/authentication/.; 19:13:26.217 INFO ASEReadCounter - ------------------------------------------------------------; 19:13:26.218 INFO ASEReadCounter - The Genome Analysis Toolkit (GATK) v4.1.8.1; 19:13:26.218 INFO ASEReadCounter - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:13:26.219 INFO ASEReadCounter - Executing as cbao@uger-c009.broadinstitute.org on Linux v3.10.0-1160.15.2.el7.x86_64 amd64; 19:13:26.219 INFO ASEReadCounter - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_181-b13; 19:13:26.219 INFO ASEReadCounter - Start Date/Time: June 14, 2021 7:13:25 PM UTC; 19:13:26.219 IN",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7314:1034,authenticat,authenticated,1034,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7314,1,['authenticat'],['authenticated']
Security,urces/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtriMixedPloidyTest.vcf; src/test/re,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61155,Validat,ValidateVariants,61155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['Validat'],['ValidateVariants']
Security,"ush with batch size 10000 and process rate 2 minutes.; [2020-07-14 05:09:30,83] [info] MaterializeWorkflowDescriptorActor [968be82c]: Parsing workflow as WDL 1.0; [2020-07-14 05:09:31,60] [info] MaterializeWorkflowDescriptorActor [968be82c]: Call-to-Backend assignments: ValidateBamsWf.ValidateBAM -> Local; [2020-07-14 05:09:31,82] [warn] Local [968be82c]: Key/s [memory, disks] is/are not supported by backend. Unsupported attributes will not be part of job executions.; [2020-07-14 05:09:35,38] [info] Not triggering log of token queue status. Effective log interval = None; [2020-07-14 05:09:37,15] [info] WorkflowExecutionActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 [968be82c]: Starting ValidateBamsWf.ValidateBAM; [2020-07-14 05:09:37,39] [info] Assigned new job execution tokens to the following groups: 968be82c: 1; [2020-07-14 05:09:41,61] [warn] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Unrecognized runtime attribute keys: disks, memory; [2020-07-14 05:09:41,71] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: /gatk/gatk \; ValidateSamFile \; --INPUT /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/inputs/-1942028726/test.bam \; --OUTPUT test.validation_.txt \; --MODE SUMMARY; [2020-07-14 05:09:41,76] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: executing: # make sure there is no preexisting Docker CID file; rm -f /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid; # run as in the original configuration without --rm flag (will remove later); docker run \; --cidfile /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid \; -i \; \; --entrypoint /bin/bash \; -v /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:4598,Validat,ValidateBAM,4598,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['Validat'],['ValidateBAM']
Security,"using full (even sites-only) VCFs for BQSR is heavy, especially in spark, when we broadcast them. They can go > 10GB in size. Really, it's just a few million positions, so we could compress it hugely: say we have 4 million variants to consider (common sites) - that's just 4M*32bits = 16 MB. . This would require creating a special format for this (or finding an existing one that works for this case). note that need to represent indel positions (with start and end, which complicates things) too but they are much less common (1 in 10 compared to snps). Or maybe Using a BloomFilter is the way to go. For a 10^-3 probability of failure and 4 million entries we only need ~7MB of size with 10 hash functions",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1407:694,hash,hash,694,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1407,1,['hash'],['hash']
Security,ute/gatk/pull/4026?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tute/hellbender/tools/BwaMemIndexImageCreator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Cd2FNZW1JbmRleEltYWdlQ3JlYXRvci5qYXZh) | `71.429% <ø> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...der/tools/spark/CreateHadoopBamSplittingIndex.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9DcmVhdGVIYWRvb3BCYW1TcGxpdHRpbmdJbmRleC5qYXZh) | `88.462% <ø> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [...org/broadinstitute/hellbender/tools/ClipReads.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9DbGlwUmVhZHMuamF2YQ==) | `90.385% <100%> (ø)` | `35 <0> (ø)` | :arrow_down: |; | [...tools/spark/validation/CompareDuplicatesSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmsuamF2YQ==) | `82.927% <100%> (ø)` | `24 <0> (ø)` | :arrow_down: |; | [...er/tools/ConvertHeaderlessHadoopBamShardToBam.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Db252ZXJ0SGVhZGVybGVzc0hhZG9vcEJhbVNoYXJkVG9CYW0uamF2YQ==) | `76.923% <100%> (ø)` | `2 <0> (ø)` | :arrow_down: |; | [...institute/hellbender/utils/help/HelpConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4026/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oZWxwL0hlbHBDb25zdGFudHMuamF2YQ==) | `2.381% <0%> (-1.786%)` | `1% <0%> (ø)` | |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/402,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4026#issuecomment-356126957:1829,validat,validation,1829,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4026#issuecomment-356126957,1,['validat'],['validation']
Security,"ute/gsa-unstable/issues/1053#issuecomment-262613997). Agreed. ---. @ronlevine commented on [Thu Nov 24 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-262635204). The change should be a lot simpler than proposed. The code can validate the number of alleles before it checks for the presence of genotypes in [VariantContext#validateChromosomeCounts](https://github.com/samtools/htsjdk/blob/master/src/main/java/htsjdk/variant/variantcontext/VariantContext.java#L1236). . ---. @ldgauthier commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263277972). Sorry, I needed to refresh my memory. I actually don't want to bypass AC validation for variants without genotypes, but I think you already figured that out. My proposal was more general, but you're right -- AC and AF should always have the same count as alt alleles and we don't need to check the header for that. When this came up (a year and a half ago!) we were thinking about validating all the info field annotations. ---. @ronlevine commented on [Mon Nov 28 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-263280085). That's exactly what I did in https://github.com/samtools/htsjdk/pull/759. I can expand this to all INFO field annotations. ---. @ldgauthier commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265221057). Expanding to all INFO annotations would be wonderful, but that can be a separate issue. ---. @ronlevine commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265223581). That's not the only one, @magicDGS requested validating the `AF` values (which can be a separate issue). . ---. @vdauwera commented on [Tue Dec 06 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-265226356). I think this one requires some additional discussion, so let's hold off for now -- it's not essential f",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:6600,validat,validating,6600,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validating']
Security,"uthier/scratch/supportingMultiA.vcf; > Should fail AC/AF validation at; > 1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120; > See results using:; > ; > use VCFtools; > vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > ; > which outputs:; > INFO field at 1:768589 .. INFO tag [AC=1] expected different number of; > values (expected 2, found 1),INFO tag [AF=0.00047] expected different; > number of values (expected 2, found 1); > Notes; > ; > Currently, all the validation modes call out to HTSJDK. Do we want to put; > the new functionality there as well?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1053. ---. @ldgauthier commented on [Fri Jul 17 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122308040). Today I learned that the way we currently build GATK, you can't point to a local htsjdk jar anymore, so this task will be two-fold:; 1) Make a PR to htsjdk with a new function in the VariantContext class for validateInfoFieldCounts(VCFInfoHeaderLine headerLine) or similar; add a test to VariantContextUnitTest.java; 2) After change 1) is merged, update ValidateVariants accordingly to use the new function and add a test to its integration tests. ---. @vdauwera commented on [Fri May 27 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-222213763). @ldgauthier is this still a thing? (in the sense of not having been addressed in htsjdk). ---. @ldgauthier commented on [Fri May 27 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-222214083). Still a thing. No work has been done here AFAIK. ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-260465013). This seems like fairly low-hanging fruit -- @ronlevine . ---. @ronlevine commented on [Wed Nov 23 2016](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:4375,validat,validateInfoFieldCounts,4375,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['validat'],['validateInfoFieldCounts']
Security,"utputStream.java:415); at htsjdk.samtools.util.BlockCompressedOutputStream.write(BlockCompressedOutputStream.java:305); at htsjdk.samtools.util.BinaryCodec.writeBytes(BinaryCodec.java:220); at htsjdk.samtools.util.BinaryCodec.writeBytes(BinaryCodec.java:212); at htsjdk.samtools.BAMRecordCodec.encode(BAMRecordCodec.java:168); at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:134); ... 12 more; Caused by: java.io.IOException: Stale file handle; at java.base/sun.nio.ch.FileDispatcherImpl.write0(Native Method); at java.base/sun.nio.ch.FileDispatcherImpl.write(FileDispatcherImpl.java:62); at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:115); at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:80); at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:280); at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74); at java.base/java.nio.channels.Channels.writeFully(Channels.java:97); at java.base/java.nio.channels.Channels.access$000(Channels.java:62); at java.base/java.nio.channels.Channels$1.write(Channels.java:172); at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81); at java.base/java.io.BufferedOutputStream.write(BufferedOutputStream.java:127); at htsjdk.samtools.util.BinaryCodec.writeBytes(BinaryCodec.java:220). Error type2:. gatk --java-options ""-Xmx32G -XX:ParallelGCThreads=8 -Djava.io.tmpdir=/group/zhougrp2/dguan/tmp"" SplitNCigarReads --spark-runner LOCAL -I 10_mkdup/SAMN05828173_mkdup.bam -R /group/zhougrp2/dguan/00_ref/Gallus_gallus.GRCg6a.dna.toplevel.fa -L /group/zhougrp2/dguan/00_ref/chicken_chr.list -O 11_cigar/SAMN05828173_cigar.bam --create-output-bam-index true --max-reads-in-memory 5000. 00:01:27.003 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/dguan/anaconda3/envs/Chicken_GTEx/share/gatk4-4.1.9.0-0/gatk-package-4.1.9.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 21, 2021 12:01:27 AM shaded.cloud_nio.com.google.auth.o",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7091:61510,access,access,61510,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7091,1,['access'],['access']
Security,"utputVariantMD5 false --lenient false --addOutputSAMProgramRecord true --cloudPrefetchBuffer 40 --cloudIndexPrefetchBuffer -1 --disableBamIndexCaching false --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --disableToolDefaultReadFilters false; [March 21, 2017 5:43:53 PM EDT] Executing as louisb@WMD2A-31E on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_112-b16; Version: Version:4.alpha.2-189-g724fbd0-SNAPSHOT; 17:43:53.162 INFO ValidateVariants - Defaults.BUFFER_SIZE : 131072; 17:43:53.162 INFO ValidateVariants - Defaults.COMPRESSION_LEVEL : 1; 17:43:53.162 INFO ValidateVariants - Defaults.CREATE_INDEX : false; 17:43:53.163 INFO ValidateVariants - Defaults.CREATE_MD5 : false; 17:43:53.163 INFO ValidateVariants - Defaults.CUSTOM_READER_FACTORY :; 17:43:53.163 INFO ValidateVariants - Defaults.EBI_REFERENCE_SERVICE_URL_MASK : http://www.ebi.ac.uk/ena/cram/md5/%s; 17:43:53.163 INFO ValidateVariants - Defaults.NON_ZERO_BUFFER_SIZE : 131072; 17:43:53.163 INFO ValidateVariants - Defaults.REFERENCE_FASTA : null; 17:43:53.163 INFO ValidateVariants - Defaults.SAM_FLAG_FIELD_FORMAT : DECIMAL; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:43:53.163 INFO ValidateVariants - Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 17:43:53.163 INFO ValidateVariants - Defaults.USE_CRAM_REF_DOWNLOAD : false; 17:43:53.163 INFO ValidateVariants - Deflater IntelDeflater; 17:43:53.163 INFO ValidateVariants - Inflater IntelInflater; 17:43:53.163 INFO ValidateVariants - Initializing engine; 17:43:53.270 INFO FeatureManager - Using codec VCFCodec to read file file:///Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf; 17:43:53.287 INFO FeatureManager - Using codec VCFCodec to read file file:/",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:2438,Validat,ValidateVariants,2438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,validatevariants -gvcf fix,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3530:0,validat,validatevariants,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3530,1,['validat'],['validatevariants']
Security,vbGxlY3RSZWFkQ291bnRzLmphdmE=) | `84.746% <83.333%> (-0.439%)` | `11 <3> (+1)` | |; | [...oadinstitute/hellbender/utils/text/XReadLines.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXh0L1hSZWFkTGluZXMuamF2YQ==) | `81.818% <0%> (-3.182%)` | `18% <0%> (+1%)` | |; | [...stitute/hellbender/utils/nio/PathLineIterator.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vUGF0aExpbmVJdGVyYXRvci5qYXZh) | `61.111% <0%> (-3.175%)` | `4% <0%> (ø)` | |; | [...rs/variantutils/SelectVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9TZWxlY3RWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `98% <0%> (-2%)` | `71% <0%> (ø)` | |; | [...llbender/tools/walkers/validation/Concordance.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2UuamF2YQ==) | `87.179% <0%> (-1.417%)` | `41% <0%> (+2%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.601% <0%> (-1.399%)` | `8% <0%> (+2%)` | |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.163% <0%> (-0.426%)` | `101% <0%> (+1%)` | |; | [...lbender/utils/variant/GATKVariantContextUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5715/diff?src=pr&el=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164:2146,validat,validation,2146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5715#issuecomment-467092164,1,['validat'],['validation']
Security,"vol002/COVID/GenomicDB/tmp/tmpint00 --include-non-variant-sites false --merge-input-intervals false --input-is-somatic false --tumor-lod-to-emit 3.5 --allele-fraction-error 0.001 --keep-combined-raw-annotations false --annotate-with-num-discovered-alleles false --heterozygosity 0.001 --indel-heterozygosity 1.25E-4 --heterozygosity-stdev 0.01 --standard-min-confidence-threshold-for-calling 30.0 --max-alternate-alleles 6 --max-genotype-count 1024 --sample-ploidy 2 --num-reference-samples-if-no-call 0 --genomicsdb-use-bcf-codec false --genomicsdb-shared-posixfs-optimizations false --only-output-calls-starting-in-intervals false --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays --disable-tool-default-read-filters false --disable-tool-default-annotations false --enable-all-annotations false --allow-old-rms-mapping-quality-annotation-data false"",Version=""4.1.9.0"",Date=""5 f<E9>vrier 2021 10:42:27 CET""`. Please note the `f<E9>vrier` at the end when the file is read with `less` on an UTF-8 system. #### Steps to reproduce. Run `gatk GenotypeGVCFs` with a french locale when the `date` command produces a line with an accent (in February, August or December). #### Expected behavior; The output file's encoding should be UTF-8. #### Actual behavior; The output file's encoding is ISO-8859-1.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7081:1526,validat,validation,1526,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7081,1,['validat'],['validation']
Security,walkers/bqsr/BaseRecalibratorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Jxc3IvQmFzZVJlY2FsaWJyYXRvckludGVncmF0aW9uVGVzdC5qYXZh) | `1.031% <0%> (-98.969%)` | `1% <0%> (-7%)` | |; | [...ers/vqsr/FilterVariantTranchesIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvRmlsdGVyVmFyaWFudFRyYW5jaGVzSW50ZWdyYXRpb25UZXN0LmphdmE=) | `1.053% <0%> (-98.947%)` | `1% <0%> (-5%)` | |; | [...s/variantutils/VariantsToTableIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYXJpYW50c1RvVGFibGVJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.205% <0%> (-98.795%)` | `1% <0%> (-20%)` | |; | [...walkers/validation/ConcordanceIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ29uY29yZGFuY2VJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.563% <0%> (-98.438%)` | `1% <0%> (-5%)` | |; | [...ientation/ReadOrientationModelIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JlYWRvcmllbnRhdGlvbi9SZWFkT3JpZW50YXRpb25Nb2RlbEludGVncmF0aW9uVGVzdC5qYXZh) | `1.667% <0%> (-98.333%)` | `1% <0%> (-5%)` | |; | [...on/FindBreakpointEvidenceSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5724/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `1.754% <0%> (-98.246%)` | `1% <0%> (-6%)` | |; | [...bender/tools/s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5724#issuecomment-467587055:2912,validat,validation,2912,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5724#issuecomment-467587055,1,['validat'],['validation']
Security,"ward. Not sure how much we can conclude, but that the validation and test F1s are similar and that the validation LL score isn't *too* far off are encouraging. That said, there is a pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot shows the ""orthogonal truth"" positives/negatives used to calculate F1. So we can see that the difficulty in deriving F1 as a function of the score along the horizontal axis to give the third plot lies in collapsing the columns in the top plot into a single condition positive or condition negative status. Again, hard to do so without some arbitrariness; I simply came up with some rules to convert various amounts of red, yellow, green, etc. in each column to a red/white/green status. If you're using a single gold-standard sample, this should definitely be more straightforward. In any case, the optimal validation LL score at ~0.02 does appear to line up quite well visually with where one might manually set a threshold. It corresponds pretty well with the transition from the yellow/red/grey junk to the clean green/white sites in the top plot. Here's the same for the test set:. ![image](https://user-images.gith",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:2142,validat,validation,2142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,2,['validat'],['validation']
Security,"where after clipping an alignment (M -> S, e.g. for yielding sequence from one chimeric alignment to an overlapping one), a whole alignment block is clipped away and exposes a neighboring I/D operation. -------. If one is interested in the detail, the following assembly contig, when the 1st alignment yields 28 overlapping bases to the 2nd alignment, demonstrates the above edge case; ```; asm004994:tig00000	0	chr2	128791173	60	1190M4D53M2I26M2I31M2D28M1422S	*	0	0	GCTGGCCGGCCCTTCAGGCCACTCGTGCTCTCAGCCAGGCAGTTGCTCCAATAAAGTCCAGGGCCAGCCCTGCCAGGGCCTCAGCCCCACACCTCGGGGAGTGCTGCTCCCAGCTCCCACTCTGCCCTGCTCTCTGCCCTGTGCCTCTGCCTCCCGGCAGGGCTCCCCCCACACATGGAATGAATGCTTCTCTGGCATACTCTGATTTCACCGCAGCCACAGCCGCCTTTCTAGAATGGAAGTCTGAGTACATCAGCGACTCTCCTCACTGGGCCTTTGTCAGGCGGCCTTGCCAGTCCACCTCTTGTCGTGACCTGCCTTGCAGCGTCCGAAGCCAAATATGCTGTGCCTCCTCCTTTTGCCAGGATATTCCTGCTGCTGCCTGGAGATCCTCTTCACCCTTCACCTGGTGGAGAAGCCTTCTCAGCCCCACCAGCGGTCTCCAAACCCAGCCAAGGACTCAGAGTGTGGGGCCTGAAGGAGGGGCTCTCAGCAAAGCCTTCCTGGATGAAGGGGCTCATCCTCTGCATTGCATGGTGAGAAAAAGGCCCAGAAAGGTGAGCAGGAGATGCTAAACCCCGTCACCCACGCACCAGTCCCACCCGAACGGGGTGCCGTCCACTCTCTCACCCCTATGACGACATCTGAGATCCCGTGTTGAGTTGGTCGGCTTCCTCAGATTGCCTTCTCCCCTGCCAGCCCCAGACCCTGCGGGTGTGGAGCGGGAGCCCAGGAAGCAAACCTCAGCAGCCCTGTGTGGGGACAGGGAGGCCACTCTGCAGAGGACCGCTGAGCTGTCTCCATTGTGGTTTAGGAACTGCCCAGGTAAGGAGCCCTGGTGGATGCTGAGCAGGGGTTCCAGGCAGGGGAGCGGCATGAACCAAGGCCACAGGTGGACCTGGGGAACTGGAGATGCTCCCTGTGGGGGAAGCAAAAGTGAACAGATCATAATAAAGAAGCAAGAGCTCTGTGCCCAGTCATGCAAGGAGACCACAGGGTCACATCGCAGGAGACAGCAGGGGATGCATAACAGGGGGAACATGACCCCGCGCGTGCACTCACATCCGCACAGTGTCTCACACACACATCCACACACAGTGTCTCACACAAAGACCTCTCACACACACACATCCACACACAGTGTCTCTCACACACACACCTCACACACATGCACAGTGTCACACACATCTCACTCACACACAGTGTCACACACACATGCACACACAGTGTCTCTCACACACACCTCTCTCACACACACGCACACACAGTGTCACACACACATGCACACACAACCCTCACACATCCACAGTGTCTCACACACACATCCACACACAGTGTCTCTCACAAAGACCTCTCACACACACACATCCACACACATGCACAGTGTCACACACATCTCACACACGCACAGTGTCTCACACACACATGCACACACAACACCTCACACATCCACACAGTGTCTCACACACACACATCCACACACAGTCTCACACACATCTCTCACACACACGCACACATGGTGTCACACACACAT",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4262:166,expose,exposes,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4262,1,['expose'],['exposes']
Security,will **increase** coverage by `6.783%`.; > The diff coverage is `80%`. ```diff; @@ Coverage Diff @@; ## master #5984 +/- ##; ===============================================; + Coverage 80.142% 86.924% +6.783% ; - Complexity 31040 32741 +1701 ; ===============================================; Files 2014 2014 ; Lines 151333 151367 +34 ; Branches 16612 16617 +5 ; ===============================================; + Hits 121281 131575 +10294 ; + Misses 24197 13728 -10469 ; - Partials 5855 6064 +209; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5984?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...tools/walkers/ValidateVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL1ZhbGlkYXRlVmFyaWFudHNJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `98.701% <100%> (+97.252%)` | `44 <4> (+42)` | :arrow_up: |; | [...r/tools/walkers/variantutils/ValidateVariants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9WYWxpZGF0ZVZhcmlhbnRzLmphdmE=) | `80.62% <66.667%> (-2.263%)` | `42 <7> (+6)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `67.299% <0%> (-0.474%)` | `33% <0%> (ø)` | |; | [.../walkers/vqsr/CNNScoreVariantsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5984/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3Zxc3IvQ05OU2NvcmVWYXJpYW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `96.629% <0%> (+0.562%)` | `16% <0%> (+1%)` | :arrow_up: |; | [...va/org/broadinstitute/hellbender/GATKBaseTest.java](https://codecov.io/gh,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5984#issuecomment-498803022:1298,Validat,ValidateVariants,1298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5984#issuecomment-498803022,1,['Validat'],['ValidateVariants']
Security,"will still provide the background default (or the built-in ploidy of 2 for humans), but the user input value will supersede these in overlapping regions. Note that the overlap is checked against the active region, meaning variants near the boundary of the `--ploidy-regions` file may end up with GT fields having ploidy slightly differently than expected, for example if your custom region overlaps a given active region but the variant ends up being written to a location outside that interval. In this case the ploidy from the user input would be used rather than any other default. # Implementation Details. The key idea is to allow `HaplotypeCallerEngine` to initialize multiple genotyping engines based on the `--ploidy-regions` input. The intervals are first parsed to check for positive integer ploidy values, and then used to create hashmaps of ploidy -> genotyper. The engine uses two types of genotypers: one for active region determination and one for doing the actual genotyping. Both admit a ploidy paramter passed via `hcArgs`. This PR modifies the `HaplotypeCallerArgumentCollection` class to include a method for creating copies of this object with differing ploidy amounts. These then get fed to the constructors of the appropriate genotyper classes, which are organized into two hashmaps. In every situation where one of these genotypers is used, we instead begin the scope by calling a ""get local genotyper"" method that performs the logic of checking whether the region of interest overlaps any of the user-provided regions, and then selects the appropriate `localEngine` genotyper for the task, ensuring the user-provided ploidy supersedes any other defaults. # A Note on Dependency. The flexibility of using either .bed or .interval_list files to specify this information depends on [this](https://github.com/samtools/htsjdk/pull/1680) PR in htsjdk being made into a full release, and then bumping the dependency of GATK. The code in this PR would not compile until this happens.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8464:1828,hash,hashmaps,1828,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8464,1,['hash'],['hashmaps']
Security,"xUtils - Feature file ""/Users/louisb/Workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf"" appears to contain no sequence dictionary. Attempting to retrieve a sequence dictionary from the associated index file; 17:43:53.293 INFO ValidateVariants - Done initializing engine; 17:43:53.294 INFO ProgressMeter - Starting traversal; 17:43:53.294 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 17:43:53.302 INFO ValidateVariants - Shutting down engine; [March 21, 2017 5:43:53 PM EDT] org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=194510848; java.lang.IllegalArgumentException: Illegal base [] seen in the allele; 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:231); 	at htsjdk.variant.variantcontext.Allele.create(Allele.java:374); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.ValidateVariants.apply(ValidateVariants.java:181); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.lambda$traverse$0(VariantWalkerBase.java:104); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184); 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175); 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.traverse",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2509:4599,Validat,ValidateVariants,4599,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2509,1,['Validat'],['ValidateVariants']
Security,"xisting Docker CID file; rm -f /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid; # run as in the original configuration without --rm flag (will remove later); docker run \; --cidfile /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid \; -i \; \; --entrypoint /bin/bash \; -v /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0:delegated \; broadinstitute/gatk@sha256:18146e79d06787483310e5de666502090a480e10ac0fad06a36a5e7a5c9bb1dc /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/script. # get the return code (working even if the container was detached); rc=$(docker wait cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid). # remove the container after waiting; docker rm cat /gatk/my_data/tools/cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/execution/docker_cid. # return exit code; exit $rc; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: job id: 243; [2020-07-14 05:09:45,29] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Status change from - to Done; [2020-07-14 05:09:46,38] [info] WorkflowManagerActor Workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674 failed (during ExecutingWorkflowState): Job ValidateBamsWf.ValidateBAM:0:1 exited with return code -1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /gatk/my_dat",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:6168,Validat,ValidateBamsWf,6168,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,2,['Validat'],"['ValidateBAM', 'ValidateBamsWf']"
Security,"xtensionServices: Stopping SchedulerExtensionServices; (serviceOption=None,; services=List(),; started=false); 19/04/08 19:03:28 INFO YarnClientSchedulerBackend: Stopped; 19/04/08 19:03:28 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!; 19/04/08 19:03:28 INFO MemoryStore: MemoryStore cleared; 19/04/08 19:03:28 INFO BlockManager: BlockManager stopped; 19/04/08 19:03:28 INFO BlockManagerMaster: BlockManagerMaster stopped; 19/04/08 19:03:28 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!; 19/04/08 19:03:28 INFO SparkContext: Successfully stopped SparkContext; 19:03:28.389 INFO HaplotypeCallerSpark - Shutting down engine; [April 8, 2019 7:03:28 PM UTC] org.broadinstitute.hellbender.tools.HaplotypeCallerSpark done. Elapsed time: 1.75 minutes.; Runtime.totalMemory()=941096960; Exception in thread ""main"" java.lang.StackOverflowError; 	at java.util.HashMap.putMapEntries(HashMap.java:501); 	at java.util.HashMap.<init>(HashMap.java:490); 	at com.esotericsoftware.kryo.Generics.<init>(Generics.java:47); 	at com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil.buildGenericsScope(FieldSerializerGenericsUtil.java:116); 	at com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil.newCachedFieldOfGenericType(FieldSerializerGenericsUtil.java:225); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.newCachedField(FieldSerializer.java:368); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.createCachedFields(FieldSerializer.java:331); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.rebuildCachedFields(FieldSerializer.java:261); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.rebuildCachedFields(FieldSerializer.java:182); 	at com.esotericsoftware.kryo.serializers.FieldSerializer.write(FieldSerializer.java:508); 	at com.esotericsoftware.kryo.Kryo.writeObject(Kryo.java:552); 	at com.esotericsoftware.kryo.serializers.ObjectField.write(ObjectField.java:80); 	a",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5869:18494,Hash,HashMap,18494,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5869,1,['Hash'],['HashMap']
Security,y Δ | |; |---|---|---|---|; | [...umber/utils/MergeAnnotatedRegionsByAnnotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL01lcmdlQW5ub3RhdGVkUmVnaW9uc0J5QW5ub3RhdGlvbi5qYXZh) | `94.737% <ø> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...nder/tools/spark/pipelines/ReadsPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUmVhZHNQaXBlbGluZVNwYXJrLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [.../tools/copynumber/utils/MergeAnnotatedRegions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL01lcmdlQW5ub3RhdGVkUmVnaW9ucy5qYXZh) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...tmutpileup/ValidateBasicSomaticShortMutations.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vYmFzaWNzaG9ydG11dHBpbGV1cC9WYWxpZGF0ZUJhc2ljU29tYXRpY1Nob3J0TXV0YXRpb25zLmphdmE=) | `80.172% <ø> (ø)` | `19 <0> (ø)` | :arrow_down: |; | [...tute/hellbender/tools/AnnotatePairOrientation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9Bbm5vdGF0ZVBhaXJPcmllbnRhdGlvbi5qYXZh) | `96.429% <ø> (ø)` | `8 <0> (ø)` | :arrow_down: |; | [...nder/tools/copynumber/utils/TagGermlineEvents.java](https://codecov.io/gh/broadinstitute/gatk/pull/5551/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL3V0aWxzL1RhZ0dlcm1saW5lRXZlbnRzLmphdmE=) | `100% <ø> (ø)` | `3 <0> (ø)` | :arrow_down: |; | [...t/java/org/broadinstitute/hellbender/MainTest.java](https://co,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-450184780:1882,Validat,ValidateBasicSomaticShortMutations,1882,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-450184780,1,['Validat'],['ValidateBasicSomaticShortMutations']
Security,yHelper.java:54); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:114); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:131); 	at org.broadinstitute.hellbender.utils.nio.SeekableByteChannelPrefetcher$WorkUnit.call(SeekableByteChannelPrefetcher.java:104); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 403 Forbidden; 443301511749-compute@developer.gserviceaccount.com does not have storage.objects.get access to broad-jg-dev-11k-call-set/JointGenotyping/0cb36821-b8bf-4e6d-a352-07b101f6b7d1/call-ApplyRecalibration/shard-1734/GMKF_Seidman_CHD_WGS_904.filtered.1734.vcf.gz.; 	at shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:145); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321); 	at shaded.cloud_nio.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1056); 	at shaded.cloud_nio.com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at shaded.cloud_nio.com.google.api.client.googleapis.ser,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3735:5067,access,access,5067,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3735,1,['access'],['access']
Security,"ync_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/zepengmu/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar ValidateVariants -V ../../data/geno/phased/chr1-22.phased.rename.reheader.vcf.gz -R ../../../../index/hg19.fa.gz; 19:53:34.379 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/zepengmu/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Oct 25, 2020 7:53:34 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 19:53:34.606 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.606 INFO ValidateVariants - The Genome Analysis Toolkit (GATK) v4.1.8.0; 19:53:34.606 INFO ValidateVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:53:34.607 INFO ValidateVariants - Executing as zepengmu@midway2-login1.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 19:53:34.607 INFO ValidateVariants - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 19:53:34.607 INFO ValidateVariants - Start Date/Time: October 25, 2020 7:53:34 PM CDT; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - ------------------------------------------------------------; 19:53:34.607 INFO ValidateVariants - HTSJDK Version: 2.22.0; 19:53:34.607 INFO ValidateVariants - Picard Version: 2.22.8; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 19:53:34.608 INFO ValidateVariants - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 19:53:34.608 INFO ValidateVariants - Deflater: Intel",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6911:1413,Validat,ValidateVariants,1413,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6911,1,['Validat'],['ValidateVariants']
Security,"|0	0|0	0|0	0|0	0|0	0|1	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0; ```; Running `$HOME/gatk-4.0.11.0/gatk --java-options ""-Xmx4g"" HaplotypeCaller -R $HOME/GRCh37files/hs37d5.fa -I /mnt/fast/test.bam -O test.out.vcf.gz -L 22 --genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles test.vcf.gz`, the resulting error is:; ```; java.lang.IllegalStateException: Allele in genotype GGTTTGTTT not in the variant context [GGTTTGTTT*, GGTTTGTTTGTTT, GGTTTGTTTGTTTGTTT, G]; at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.makeMergedVariantContext(AssemblyBasedCallerUtils.java:228); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:157); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.Haplotype",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5355:41186,validat,validateGenotypes,41186,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355,1,['validat'],['validateGenotypes']
Security,"} ValidateVariants -R ${ref} -V ${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list --warn-on-errors 2> ${log}/${name}\_v4.1.6.0\_genotype\_valivar.log. the warning in ValidateVariants and the site look like this:. 14:12:15.126 WARN ValidateVariants - \*\*\*\*\* Input 1st\_v4.1.6.0.vcf.gz fails strict validation of type ALL: one or more of the ALT allele(s) for the record at position chr\_1:1088200 are not observed at all in the sample genotypes \*\*\*\*\* ; ; chr\_1 1088200 . T \*,TAAAAAAAAAAAA 64.39 . AC=8,0;AF=0.667,0.00;AN=12;DP=118;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.4286;MLEAC=7,7;MLEAF=0.583,0.583;MQ=58.73;QD=32.19;SOR=2.303 GT:AD:DP:GQ:PL ./.:9,0,0:9:.:0,0,0,0,0,0 0/0:9,0,0:9:0:0,0,113,0,113,113 ./.:10,0,0:10:.:0,0,0,0,0,0 ./.:5,0,0:5:.:0,0,0,0,0,0 1/1:0,0,1:1:0:225,15,0,15,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:12,0,0:12:.:0,0,0,0,0,0 ./.:8,0,0:8:.:0,0,0,0,0,0 0/0:3,0,0:3:0:0,0,43,0,43,43 ./.:7,0,0:7:.:0,0,0,0,0,0 ./.:1,0,0:1:.:0,0,0,0,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:3,0,0:3:.:0,0,0,0,0,0 ./.:7,0,0:7:.:0,0,0,0,0,0 1/1:0,0,0:0:0:45,3,0,3,0,0 ./.:0,0,0 1/1:0,0,1:1:0:45,3,0,3,0,0 1/1:0,0,0:0:0:267,18,0,18,0,0 ./.:9,0,0:9:.:0,0,0,0,0,0 ; . The exactly the same happens when I run GenotypeGVCFs in --include-non-variant-sites and when I run GenotypeGVCFS and ValidateVariants in v4.1.7.0. In principle, these sites just take up space in the vcf, as the correct behaviour of GenotypeGVCFS should result in the removal of ALT allele 2 and 3, which leads to the site not being called, as the spanning deletion is covered when it's called on the first base. I'm hoping that they disappear when I filter, but if not it's for me still a manageable amount to remove by hand even though that's not ideal. I just want to alert you to the weird behaviour, that I'm experiencing. I hope you can do something with my post and thanks in advance,<br><br><i>(created from <a href='https://broadinstitute.zendesk.com/agent/tickets/5803'>Zendesk ticket #5803</a>)<br>gz#5803</i>",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6630:2958,Validat,ValidateVariants,2958,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6630,1,['Validat'],['ValidateVariants']
Security,"~~The `ALL_TRANSCRIPTS` output from Funcotator is not properly parsed by the built-in parsing methods for the funcotations.~~. ~~This should be fixed so that these parsing methods will work without producing an error.~~. -----------. It turns out that at least for `ClinVar_VCF_CLNVI`, hashes aren't being properly cleaned (i.e. URL encoded) before writing to the VCF fields. This is bad, because hash is our delimiter for `ALL_TRANSCRIPTS` mode.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5671:286,hash,hashes,286,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5671,2,['hash'],"['hash', 'hashes']"
Security,ø> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [.../walkers/contamination/CalculateContamination.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2NvbnRhbWluYXRpb24vQ2FsY3VsYXRlQ29udGFtaW5hdGlvbi5qYXZh) | `96.552% <ø> (ø)` | `10 <0> (ø)` | :arrow_down: |; | [...ender/tools/walkers/annotator/InbreedingCoeff.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9JbmJyZWVkaW5nQ29lZmYuamF2YQ==) | `72.414% <ø> (-13.793%)` | `7 <0> (-3)` | |; | [...der/tools/walkers/CombineGVCFsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL0NvbWJpbmVHVkNGc0ludGVncmF0aW9uVGVzdC5qYXZh) | `1.262% <ø> (-88.675%)` | `2 <0> (-36)` | |; | [...s/walkers/validation/CalculateMixingFractions.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ2FsY3VsYXRlTWl4aW5nRnJhY3Rpb25zLmphdmE=) | `78.431% <ø> (ø)` | `15 <0> (ø)` | :arrow_down: |; | [...s/walkers/validation/MergeMutect2CallsWithMC3.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vTWVyZ2VNdXRlY3QyQ2FsbHNXaXRoTUMzLmphdmE=) | `81.25% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...tools/walkers/mutect/SomaticLikelihoodsEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5688/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9Tb21hdGljTGlrZWxpaG9vZHNFbmdpbmUuamF2YQ==) | `86.667% <ø> (-2.222%)` | `17 <0> (-1)` | |; | ... and [1382 more](https://codecov.io/gh/broadinstitute/gatk/pull/5688/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734:3093,validat,validation,3093,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5688#issuecomment-465024734,1,['validat'],['validation']
Security,"… ""abstract"" keyword to classes that are not instantiated. Classes that can be neither final nor abstract include: UserException, GATKException, GenomeLoc, HashedListExonCollection, LocusIteratorByStateBaseTest, ReadClipper, OverhangFixingManager, BasicInputParser",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/512:156,Hash,HashedListExonCollection,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/512,1,['Hash'],['HashedListExonCollection']
Security,… over the VCF index if its better. Handle sequence interval validation when no sequence length is available. Fixes https://github.com/broadinstitute/gatk/issues/1999 and the downstream genomeLoc parser validation fallout.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2091:61,validat,validation,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2091,2,['validat'],['validation']
Security,"…group for the contig alignments. To do downstream stuff like correlate breakpoints in copy number calls that are in VCF format, and perhaps eventually put a genotype column in our output VCF, it would be helpful to keep track of the sample name. This PR tries to help do that by 1) validating that input read groups contain reads from only one sample, 2) extracting the sample name for future use, and 3) putting a constructed read group in our aligned assemblies output file that contains the sample name, and tagging all of the alignment records in that file with the read group id. . As part of testing this I added an expected aligned contigs file test to `FindBreakpointEvidenceSparkIntegrationTest`.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3726:283,validat,validating,283,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3726,1,['validat'],['validating']
Security,👍 to removing the api key. We're leaking them all over the place... We could optionally go back to accepting a key file as a form of authentication which is much less dangerous.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288551032:133,authenticat,authentication,133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2402#issuecomment-288551032,1,['authenticat'],['authentication']
Testability,"	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|1	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0; ```; Running `$HOME/gatk-4.0.11.0/gatk --java-options ""-Xmx4g"" HaplotypeCaller -R $HOME/GRCh37files/hs37d5.fa -I /mnt/fast/test.bam -O test.out.vcf.gz -L 22 --genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles test.vcf.gz`, the resulting error is:; ```; java.lang.IllegalStateException: Allele in genotype GGTTTGTTT not in the variant context [GGTTTGTTT*, GGTTTGTTTGTTT, GGTTTGTTTGTTTGTTT, G]; at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5355:40881,test,test,40881,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355,1,['test'],['test']
Testability,"	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	NA	NA	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	g.chr15:90631838C>T	ENST00000559482.5_2	-			c.e6+104G>A			IDH2_ENST00000330062.8_3_Missense_Mutation_p.G323S|IDH2_ENST00000540499.2_2_Missense_Mutation_p.G323R			P48735	IDHP_HUMAN	isocitrate dehydrogenase (NADP(+)) 2, mitochondrial	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	2-oxoglutarate metabolic process (GO:0006103)|carbohydrate metabolic process (GO:0005975)|cellular metabolic process (GO:0044237)|glyoxylate cycle (GO:0006097)|isocitrate metabolic process (GO:0006102)|small molecule metabolic process (GO:0044281)|tricarboxylic acid cycle (GO:0006099)	extracellular vesicular exosome (GO:0070062)|mitochondrial inner membrane (GO:0005743)|mitochondrial matrix (GO:0005759)|mitochondrion (GO:0005739)	isocitrate dehydrogenase (NADP+) activity (GO:0004450)|magnesium ion binding (GO:0000287)|NAD binding (GO:0051287)			NS(223)|adrenal_gland(294)|autonomic_ganglia(349)|biliary_tract(876)|bone(893)|breast(1151)|central_nervous_system(11211)|cervix(20)|endometrium(22)|eye(81)|genital_tract(1)|haematopoietic_and_lymphoid_tissue(26199)|kidney(260)|large_intestine(1302)|liver(111)|lung(320)|meninges(57)|oesophagus(176)|ovary(533)|pancreas(585)|perineum(1)|peritoneum(60)|pleura(11)|prostate(172)|salivary_gland(105)|skin(644)|small_intestine(26)|soft_tissue(479)|stomach(547)|testis(11)|thymus(26)|thyroid(239)|upper_aerodigestive_tract(127)|urinary_tract(32)|vulva(66)	47210	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__	__UNKNOWN__		ATGGGCGTGCCTGCCAATGGT	0.5635910224438903	__UNKNOWN__	__UNKNOWN__	M		GBM		__UNKNOWN__			0.424	1024	1385					""socitrate dehydrogenase 2 (NADP+), mitochondrial ""	3418	15	15q26.1	yes			M	Dom					362866	Human_Phenotype_Ontology:HP:0004808,MeSH:D015470,MedGen:C0023467,OMIM:601626,Orphanet:ORPHA519,SNOMED_CT:17788007|Human_Phenotype_Ontology:HP:0010796,MedGen:C0677865|H",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064:1809,test,testis,1809,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064,1,['test'],['testis']
Testability,	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:32); 	at org.broadinstitute.hellbender.utils.test.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:97); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2IntegrationTest.testTumorNormal(Mutect2IntegrationTest.java:237); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:497); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); ```. #### Steps to reproduce; These are the arguments I used (t,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5036:3795,Test,TestMethodWorker,3795,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5036,1,['Test'],['TestMethodWorker']
Testability,"	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); 	at org.broadinstitute.hellbender.Main.main(Main.java:291); Using GATK jar /usr/local/apps/GATK/4.1.2.0/gatk-package-4.1.2.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /usr/local/apps/GATK/4.1.2.0/gatk-package-4.1.2.0-local.jar DetermineGermlineContigPloidy -L /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/9-Ref_Interval/2-Filter_Interval/22.preprocessed.Filtered.interval_list --interval-merging-rule OVERLAPPING_ONLY -I /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/1-Input/3-BAM-ReadCount/22.SC349574.bam.csv -I /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/1-Input/3-BAM-ReadCount/22.SC349575.bam.csv -I /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/1-Input/3-BAM-ReadCount/22.SC349488.bam.csv -I /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/1-Input/3-BAM-ReadCount/22.SC349489.bam.csv --contig-ploidy-priors /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/9-Ref_Interval/3-contig_ploidy_priors/22.contig_ploidy_priors.csv --output /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/2-Output/1-Contig-Ploidy/22.Contig_Ploidy_Dir --output-prefix ploidy --verbosity DEBUG. .............................................................(BUG 002)..........................................................; Stderr: Traceback (most recent call last):; File ""/tmp/segment_gcnv_calls.3402406683372415608.py"", line 9, in <module>; import gcnvkernel; File ""/usr/local/Anaconda/envs_app/gatk/4.1.2.0/lib/python3.6/site-packages/gcnvkernel/__init__.py",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235:8714,Test,Test-gCNV,8714,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235,1,['Test'],['Test-gCNV']
Testability,	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190); 	at org.broadinstitute.hellbender.tools.walkers.vqsr.CNNVariantPipelineTest.testTrainingReadModel(CNNVariantPipelineTest.java:85); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWo,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6307:3083,Test,TestInvoker,3083,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6307,1,['Test'],['TestInvoker']
Testability,	at org.testng.Assert.assertTrue(Assert.java:51); 	at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngineUnitTest.testGenotypeCallForLotsOfAlts(GnarlyGenotyperEngineUnitTest.java:71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1351,Test,TestRunner,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestRunner']
Testability, 	at java.util.Iterator.forEachRemaining(Iterator.java:116); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.VariantWalkerBase.traverse(VariantWalkerBase.java:108); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:893); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:136); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:152); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:195); 	at org.broadinstitute.hellbender.Main.main(Main.java:275); Caused by: org.sqlite.SQLiteException: [SQLITE_IOERR_LOCK] I/O error in the advisory file locking logic (disk I/O error); 	at org.sqlite.core.DB.newSQLException(DB.java:909); 	at org.sqlite.core.DB.newSQLException(DB.java:921); 	at org.sqlite.core.DB.throwex(DB.java:886); 	at org.sqlite.core.NativeDB.prepare_utf8(Native Method); 	at org.sqlite.core.NativeDB.prepare(NativeDB.java:127); 	at org.sqlite.core.DB.prepare(DB.java:227); 	at org.sqlite.jdbc3.JDBC3Statement.executeQuery(JDBC3Statement.java:81); 	at org.broadinstitute.hellbender.tools.funcotator.dataSources.cosmic.CosmicFuncotationFactory.createFuncotations(CosmicFuncotationFactory.java:215); 	... 21 more. ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4413:2347,log,logic,2347,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4413,1,['log'],['logic']
Testability, 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); Caused by: org.testng.TestNGException:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:603); 	at org.testng.SuiteRunner.init(SuiteRunner.java:196); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:127); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1231); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1210); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1058); 	at org.testng.TestNG.runSuites(TestNG.java:997); 	at org.testng.TestNG.run(TestNG.java:965); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:3111,Test,TestRunner,3111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,1,['Test'],['TestRunner']
Testability, 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:148); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:189); 	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); 	at org.broadinstitute.hellbender.tools.spark.pipelines.ReadsPipelineSparkIntegrationTest.testReadsPipelineSpark(ReadsPipelineSparkIntegrationTest.java:125); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tas,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5680:8407,test,testng,8407,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5680,1,['test'],['testng']
Testability, 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:193); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:156); 	at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.readEntireVCFIntoMemory(VariantContextTestUtils.java:67); 	at org.broadinstitute.hellbender.tools.funcotator.vcfOutput.VcfOutputRendererUnitTest.testExclusionListOverridesManualDefaultAnnotations(VcfOutputRendererUnitTest.java:40); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequen,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748:2410,Test,TestInvoker,2410,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748,1,['Test'],['TestInvoker']
Testability, 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4294,test,testng,4294,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability, 	at org.broadinstitute.hellbender.tools.spark.pipelines.ReadsPipelineSparkIntegrationTest.testReadsPipelineSpark(ReadsPipelineSparkIntegrationTest.java:125); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Nati,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5680:8648,Test,TestRunner,8648,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5680,1,['Test'],['TestRunner']
Testability," 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2IntegrationTest.testTumorNormal(Mutect2IntegrationTest.java:237); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:497); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); ```. #### Steps to reproduce; These are the arguments I used (the input bam is on the file system):. ```; final String[] args = {; ""-I"", ""/humgen/gsa-hpprojects/dev/mshand/SpecOps/Mitochondria/Filtering/IGV/198489_vs_811158/sorted.mt.1.bam"",; ""-"" + M2ArgumentCollection.TUMOR_SAMPLE_SHOR",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5036:4015,test,testng,4015,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5036,1,['test'],['testng']
Testability, 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteT,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748:2894,test,testng,2894,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748,2,['test'],['testng']
Testability, 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteT,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4585,test,testng,4585,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability," ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-BenchmarkVCFControlSample/Benchmark/0c99102a-bca1-4426-97c6-5a311ace93c1/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""95.62183055555556"",; ""NIST evalHCsystemhours"": ""0.18361111111111117"",; ""NIST evalHCwallclockhours"": ""64.22846111111112"",; ""NIST evalHCwallclockmax"": ""3.3683277777777776"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-NISTSampleHeadToHead/BenchmarkComparison/a39481f5-0969-4891-a843-f3c3fd7437d1/call-BenchmarkVCFTestSample/Benchmark/a3925c8a-7e0a-4fec-8507-f885061b69c3/call-CombineSummaries/summary.csv"",; ""ROC_Plots_Reported"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CreateHTMLReport/cacheCopy/report.html""; }; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:14288,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,14288,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,7,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability," ""SelectVariants"" command looks like:. ""G1 Refine#78"" os_prio=0 tid=0x00007ff536ea6000 nid=0x1af0e0 runnable . ""G1 Refine#79"" os_prio=0 tid=0x00007ff536ea8000 nid=0x1af0e1 runnable . ""G1 Refine#80"" os_prio=0 tid=0x00007ff536ea9800 nid=0x1af0e2 runnable . ""G1 Refine#81"" os_prio=0 tid=0x00007ff536eab800 nid=0x1af0e3 runnable . ""G1 Refine#82"" os_prio=0 tid=0x00007ff536ead000 nid=0x1af0e4 runnable . ""G1 Young RemSet Sampling"" os_prio=0 tid=0x00007ff536eaf000 nid=0x1af0e5 runnable ; ""VM Periodic Task Thread"" os_prio=0 tid=0x00007ff5310eb000 nid=0x1af101 waiting on condition . JNI global references: 13. Heap; garbage-first heap total 5378048K, used 1388875K [0x0000000082000000, 0x0000000800000000); region size 4096K, 334 young (1368064K), 1 survivors (4096K); Metaspace used 49722K, capacity 50240K, committed 50768K, reserved 1093632K; class space used 6018K, capacity 6219K, committed 6268K, reserved 1048576K. ; This is the screen log for GGVCFs command, although I was hoping by adding the flag ""-DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" I would get more information to share. As it takes 11 hours to get to the point where the error occurs it has been difficult to trouble shoot, I am hoping that I can fix this without rebuilding everything which is why I decided to write. Thanks for any information or suggestions you may have. . Dan; ; Using GATK jar /home/dan_vanderpool/src/gatk-4.2.5.0/gatk-package-4.2.5.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx1600g -DGATK_STACKTRACE_ON_USER_EXCEPTION=true -jar /home/dan_vanderpool/src/gatk-4.2.5.0/gatk-package-4.2.5.0-local.jar GenotypeGVCFs -R /home/dan_vanderpool/Wolf_raw_reads/Wolf_genome/GCA_905319855.2_mCanLor1.2_genomic.fa -V gendb://Wolf_Genome_Variantsdb -O All_Wolf_Samples_Joint_Genotypes_Raw.vcf.gz -L /scratch/dan/Wolf_reads_raw/Wolf_GenCov300_Q20_Merged.interval_list -imr ALL --genom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7639#issuecomment-1049112454:3028,log,log,3028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7639#issuecomment-1049112454,1,['log'],['log']
Testability," ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.st",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:1965,Benchmark,BenchmarkComparison,1965,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability," ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""Benchmark.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""Benchmark.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""Benchmark.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""Benchmark.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""Benchmark.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""Benchmark.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""Benchmark.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""Benchmark.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""Benchmark.referenceVersion"": ""HG38"",; ""Benchmark.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""Benchmark.stratLabels"": [; ""exome"",; ""LCR""; ],; ""Benchmark.truthLabel"": ""HG002_GRCh38_GIAB"",; ""Benchmark.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""Benchmark.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi""; },; ""test_cromwell_job_id"": null,; ""eval_cromwell_job_id"": null,; ""created_at"": ""2022-01-31T15:46:11.708929"",; ""created_by"": null,; ""finished_at"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1025921276:2385,Benchmark,Benchmark,2385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1025921276,7,['Benchmark'],['Benchmark']
Testability," ""console"".; log4j:ERROR A ""org.apache.log4j.FileAppender"" object is not assignable to a ""org.apache.log4j.Appender"" variable.; log4j:ERROR The class ""org.apache.log4j.Appender"" was loaded by ; log4j:ERROR [sun.misc.Launcher$AppClassLoader@7506e922] whereas object of type ; log4j:ERROR ""org.apache.log4j.FileAppender"" was loaded by [org.apache.spark.util.ChildFirstURLClassLoader@28c4711c].; log4j:ERROR Could not instantiate appender named ""file"".; log4j:ERROR A ""org.apache.log4j.ConsoleAppender"" object is not assignable to a ""org.apache.log4j.Appender"" variable.; log4j:ERROR The class ""org.apache.log4j.Appender"" was loaded by ; log4j:ERROR [sun.misc.Launcher$AppClassLoader@7506e922] whereas object of type ; log4j:ERROR ""org.apache.log4j.ConsoleAppender"" was loaded by [org.apache.spark.util.ChildFirstURLClassLoader@28c4711c].; log4j:ERROR Could not instantiate appender named ""console"".; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; log4j:WARN No appenders could be found for logger (org.apache.spark.SparkContext).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; ```. By backtracking, the problem goes away at commit d827adc81266c788482c9cb4f119f2e3c1e152b8. Since spark-submmit was broken after 8af8bcc920ee5f393562e3e632d9ccd4acd9a638, the bug could be anywhere between commit 8af8bcc920ee5f393562e3e632d9ccd4acd9a638 and d25894b3bc80e450210cf8a9124c4171e65f3717. The log4j.property file is below:; ```; # Set everything to be logged to the console; log4j.rootCategory=WARN,console; log4j.appender.console=org.apache.log4j.ConsoleAppender; log4j.appender.console.target=System.out; log4j.appender.console.layout=org.apache.log4j.PatternLayout; log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n. log4j.appender.file=org.apache.log4j.FileAppender; log4j.appender.file.file=/tmp/logs/spark/log4j-block_manager-output.txt; log",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2734:1585,log,logger,1585,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2734,1,['log'],['logger']
Testability," ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-carrot-d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:2271,Benchmark,BenchmarkComparison,2271,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,2,['Benchmark'],['BenchmarkComparison']
Testability," ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""testfailed"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-re",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049165952:1117,test,testing,1117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049165952,1,['test'],['testing']
Testability," ### Description ; In 7% of 8M variants in a 9 sample variant calling there is a discordance at least once between the GT and PGT field of a sample. The discordance between the GT and PGT fields can be found in the GVCF files created by the HaplotypeCaller and in the multi-sample VCF created by GenomicsDBImport. . This issue and pullrequest might be related, but have not been updated since March. ; https://github.com/broadinstitute/gatk/issues/5727; https://github.com/broadinstitute/gatk/pull/5772. I also already created this post on the forum. ; https://gatkforums.broadinstitute.org/gatk/discussion/24465/how-can-a-homozygous-reference-0-0-genotype-gt-have-a-heterozygous-phased-genotype-pgt-of-0-1#latest. Just thought it might help to (also) ask here, for me and other people who encounter this issue. . #### Steps to reproduce. Run the script below on any multi-sample VCF file created by GenomicsDBImport. ; The GT and PGT discordance is already in the GVCF files. But I did not test this script on any GVCF file. . The most important bit of the script is this comparison between the allele sets of the GT and PGT field. ; ```; if gt_allele_set == {0} and pgt_allele_set == {0,1}:; variant_with_phase_homref_to_het_issue = True; if gt_allele_set == {2} and pgt_allele_set == {1}:; variant_with_phase_hom22_to_hom11_issue = True; elif gt_allele_set == {0,2} and pgt_allele_set == {0,1}:; variant_with_phase_het02_to_het01_issue = True; ```. ```; from cyvcf2 import VCF, Writer. path = ""/DA_1458/VSDA_1458-gatk-haplotype-joint-annotated.bcf""; output_path_hom_ref_to_het = ""/DA_1458/hom_gt_het_phase_issue/hom_gt_het_phase_issue_homref_to_het.vcf""; output_path_hom22_to_hom11 = ""/DA_1458/hom_gt_het_phase_issue/hom_gt_het_phase_issue_hom22_to_hom11.vcf""; output_path_het02_to_het01 = ""/DA_1458/hom_gt_het_phase_issue/hom_gt_het_phase_issue_het02_to_het01.vcf""; output_path_other = ""/DA_1458/hom_gt_het_phase_issue/hom_gt_het_phase_issue_other.vcf"". writer_hom_ref_to_het = Writer(output_path_",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6220:1134,test,test,1134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6220,1,['test'],['test']
Testability, (150742 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_KI270752v1 (27745 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_KI270753v1 (62944 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_KI270754v1 (40191 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_KI270755v1 (36723 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_KI270756v1 (79590 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_KI270757v1 (71251 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_GL000214v1 (137718 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_KI270742v1 (186739 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_GL000216v2 (176608 bp); 23:44:43.167 DEBUG GenomeLocParser - chrUn_GL000218v1 (161147 bp); 23:44:43.167 DEBUG GenomeLocParser - chrEBV (171823 bp); 23:44:43.173 INFO GermlineCNVCaller - Aggregating read-count file /gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/counts/V300033254_96.tsv (1 / 3); 23:44:43.345 INFO GermlineCNVCaller - Aggregating read-count file /gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/counts/V300033256_95.tsv (2 / 3); 23:44:43.521 INFO GermlineCNVCaller - Aggregating read-count file /gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/counts/V300033254_97.tsv (3 / 3); 23:44:43.683 DEBUG ScriptExecutor - Executing:; 23:44:43.683 DEBUG ScriptExecutor - python; 23:44:43.683 DEBUG ScriptExecutor - /tmp/cohort_denoising_calling.6786136740079319091.py; 23:44:43.683 DEBUG ScriptExecutor - --ploidy_calls_path=/gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/ploidy/ploidy-calls; 23:44:43.683 DEBUG ScriptExecutor - --output_calls_path=/gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/cohort_all/cohort_30-calls; 23:44:43.683 DEBUG ScriptExecutor - --output_tracking_path=/gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/cohort_all/cohort_30-tracking; 23:44:43.683 DEBUG ScriptExecutor - --random_seed=1984; 23:44:43,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8938:33558,test,test,33558,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8938,1,['test'],['test']
Testability," (build 1.8.0_242-8u242-b08-0ubuntu3~18.04-b08); # Java VM: OpenJDK 64-Bit Server VM (25.242-b08 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [libgkl_smithwaterman5951765478004985534.so+0x132d] smithWatermanBackTrack(dnaSeqPair*, int, int, int, int, int*, int)+0x1bd; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/gatk/hs_err_pid849.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. **RELEVANT FILES**; [hs_err_pid100.log](https://github.com/broadinstitute/gatk/files/6203288/hs_err_pid100.log); [hs_err_pid164.log](https://github.com/broadinstitute/gatk/files/6203289/hs_err_pid164.log); [hs_err_pid274.log](https://github.com/broadinstitute/gatk/files/6203290/hs_err_pid274.log); [hs_err_pid400.log](https://github.com/broadinstitute/gatk/files/6203291/hs_err_pid400.log); [hs_err_pid482.log](https://github.com/broadinstitute/gatk/files/6203292/hs_err_pid482.log); [hs_err_pid711.log](https://github.com/broadinstitute/gatk/files/6203293/hs_err_pid711.log); [hs_err_pid735.log](https://github.com/broadinstitute/gatk/files/6203294/hs_err_pid735.log); [hs_err_pid801.log](https://github.com/broadinstitute/gatk/files/6203295/hs_err_pid801.log); [hs_err_pid825.log](https://github.com/broadinstitute/gatk/files/6203296/hs_err_pid825.log); [hs_err_pid849.log](https://github.com/broadinstitute/gatk/files/6203297/hs_err_pid849.log); [otherFiles.zip](https://github.com/broadinstitute/gatk/files/6203305/otherFiles.zip); [in2510-8.orientationFilter.vcf.txt](https://github.com/broadinstitute/gatk/files/6203356/in2510-8.orientationFilter.vcf.txt); *VCF extension appended with .txt to satisfy GitHub's upload requir",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7162:6668,log,log,6668,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7162,1,['log'],['log']
Testability," (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing). Command:. gatk GermlineCNVCaller \\ ; ; \--run-mode COHORT \\ ; ; \-L Twist\_Exome\_Target\_hg38\_preprocessed\_annotated\_gc-filtered.interval\_list \\ ; ; \-imr OVERLAPPING\_ONLY \\ ; ; \--contig-ploidy-calls ploidy-calls \\ ; ; \--annotated-intervals Twist\_Exome\_Target\_hg38\_preprocessed\_annotated.interval\_list \\ ; ; \-I 13-20.counts.hd5 \\ ; ; \-I 722.counts.hd5 \\ ; ; \-I D19047.counts.hd5 \\ ; ; \-I F24F1.counts.hd5 \\ ; ; \-I NS.counts.hd5 \\ ; ; \-I TBC039.counts.hd5 \\ ; ; \-I VP.counts.hd5 \\ ; ; \-I WES002.counts.hd5 \\ ; ; \-I WES02.counts.hd5 \\ ; ; \-I 17062-T1-.counts.hd5 \\ ; ; \-I 18001-M1-.counts.hd5 \\ ; ; \-I 516.counts.hd5 \\ ; ; \-I 533.counts.hd5 \\ ; ; \-I NBH.counts.hd5 \\ ; ; \-I ADN492.counts.hd5 \\ ; ; \-I WES607.counts.hd5 \\ ; ; \--class-coherence-length 1000.0 \\ ; ; \--cnv-coherence-length 1000.0 \\ ; ; \--enable-bias-factors true \\ ; ; \--interval-psi-scale 1.0E-6 \\ ; ; \--log-mean-bias-standard-deviation 0.01 \\ ; ; \--sample-psi-scale 1.0E-6 \\ ; ; \--output cohort16 \\ ; ; \--output-prefix cohort16 \\ ; ; \--verbosity DEBUG \\ ; ; \--java-options '-DGATK\_STACKTRACE\_ON\_USER\_EXCEPTION=true'. Error:. java.lang.IllegalArgumentException: Prefix string ""NS"" too short: length must be at least 3 ; ; at java.base/java.io.File.createTempFile(File.java:2104) ; ; at org.broadinstitute.hellbender.utils.io.IOUtils.createTempFileInDirectory(IOUtils.java:685) ; ; at org.broadinstitute.hellbender.utils.io.IOUtils.createTempFile(IOUtils.java:666) ; ; at org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller.lambda$writeIntervalSubsetReadCountFiles$1(GermlineCNVCaller.java:430) ; ; at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ; ; at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ; ; at java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180) ; ; at java.base/java.util.stream.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7591:2061,log,log-mean-bias-standard-deviation,2061,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7591,1,['log'],['log-mean-bias-standard-deviation']
Testability," - ------------------------------------------------------------------------------------; INFO 14:49:42,883 HelpFormatter - The Genome Analysis Toolkit (GATK) v3.8-1-0-gf15c1c3ef, Compiled 2018/02/19 05:43:50; INFO 14:49:42,884 HelpFormatter - Copyright (c) 2010-2016 The Broad Institute; INFO 14:49:42,884 HelpFormatter - For support and documentation go to https://software.broadinstitute.org/gatk; INFO 14:49:42,884 HelpFormatter - [Sat Oct 09 14:49:42 CST 2021] Executing on Linux 2.6.32-696.el6.x86_64 amd64; INFO 14:49:42,884 HelpFormatter - Java HotSpot(TM) 64-Bit Server VM 1.8.0_11-b12; INFO 14:49:42,889 HelpFormatter - Program Args: -T HaplotypeCaller -R /share/Onc_Soft_DB/database/capsmart/hg19/hg19_20210805/hg19.rm_CRLF2_P2RY8.fix_PRSS1_MUC16.fasta -I /share/Onc_RD_Pipeline/OncDir/zhuangll/210927-commercial-tissue-zhangaiyuan/germline/Z19W06700-F1WA/2.Realign/Z19W06700-F1WA.bam -L /share/Onc_Soft_DB/database/capsmart/bed/gene102.snpindel.capsmart.bed -U -o /share/Onc_RD_Pipeline/OncDir/yanhs/test/GATK/Z19W06700-F1WA.HaplotypeCaller.raw.vcf -stand_call_conf 50 -A RMSMappingQuality -A BaseCounts; INFO 14:49:42,892 HelpFormatter - Executing as yanhs3941@compute-0-76 on Linux 2.6.32-696.el6.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_11-b12.; INFO 14:49:42,892 HelpFormatter - Date/Time: 2021/10/09 14:49:42; INFO 14:49:42,892 HelpFormatter - ------------------------------------------------------------------------------------; INFO 14:49:42,892 HelpFormatter - ------------------------------------------------------------------------------------; INFO 14:49:42,922 NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/Onc_Soft_DB/software/GATK3.8/GenomeAnalysisTK.jar!/com/intel/gkl/native/libgkl_compression.so; INFO 14:49:42,957 GenomeAnalysisEngine - Deflater: IntelDeflater; INFO 14:49:42,958 GenomeAnalysisEngine - Inflater: IntelInflater; INFO 14:49:42,958 GenomeAnalysisEngine - Strictness is SILENT; INFO 14:49:43,125 GenomeAnalysisEngine - ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7499:1075,test,test,1075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7499,1,['test'],['test']
Testability," - HTSJDK Version: 2.23.0. 16:17:05.844 INFO HaplotypeCaller - Picard Version: 2.22.8. 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2. 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false. 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true. 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false. 16:17:05.844 INFO HaplotypeCaller - Deflater: JdkDeflater. 16:17:05.844 INFO HaplotypeCaller - Inflater: JdkInflater. 16:17:05.844 INFO HaplotypeCaller - GCS max retries/reopens: 20. 16:17:05.844 INFO HaplotypeCaller - Requester pays: disabled. 16:17:05.845 INFO HaplotypeCaller - Initializing engine. 16:17:05.928 WARN IntelDeflaterFactory - IntelInflater is not supported, using Java.util.zip.Inflater. 16:17:05.932 WARN IntelDeflaterFactory - IntelInflater is not supported, using Java.util.zip.Inflater. 16:17:06.503 INFO FeatureManager - Using codec VCFCodec to read file file:///home/robert/test/snps.vcf. 16:17:06.539 INFO IntervalArgumentCollection - Processing 61464 bp from intervals. 16:17:06.551 INFO HaplotypeCaller - Done initializing engine. 16:17:06.573 INFO HaplotypeCallerEngine - Disabling physical phasing, which is supported only for reference-model confidence output. 16:17:06.588 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/robert/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_utils.so. 16:17:06.589 **WARN** NativeLibraryLoader - Unable to load libgkl_utils.so from native/libgkl_utils.so (/tmp/libgkl_utils347167544598047196.so: /tmp/libgkl_utils347167544598047196.so: cannot open shared object file: No such file or directory (Possible cause: can't load AMD 64-bit .so on a Power PC 64 LE-bit platform)). 16:17:06.589 **WARN** IntelPairHmm - Intel GKL Utils not loaded. 16:17:06.589 INFO PairHMM - OpenMP multi-threaded AVX-accelerated native PairHMM implementation is not supported",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6794:3718,test,test,3718,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6794,1,['test'],['test']
Testability," - Picard Version: 2.22.8; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; >; > 16:17:05.844 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; >; > 16:17:05.844 INFO HaplotypeCaller - Deflater: JdkDeflater; >; > 16:17:05.844 INFO HaplotypeCaller - Inflater: JdkInflater; >; > 16:17:05.844 INFO HaplotypeCaller - GCS max retries/reopens: 20; >; > 16:17:05.844 INFO HaplotypeCaller - Requester pays: disabled; >; > 16:17:05.845 INFO HaplotypeCaller - Initializing engine; >; > 16:17:05.928 WARN IntelDeflaterFactory - IntelInflater is not supported, using Java.util.zip.Inflater; >; > 16:17:05.932 WARN IntelDeflaterFactory - IntelInflater is not supported, using Java.util.zip.Inflater; >; > 16:17:06.503 INFO FeatureManager - Using codec VCFCodec to read file file:///home/robert/test/snps.vcf; >; > 16:17:06.539 INFO IntervalArgumentCollection - Processing 61464 bp from intervals; >; > 16:17:06.551 INFO HaplotypeCaller - Done initializing engine; >; > 16:17:06.573 INFO HaplotypeCallerEngine - Disabling physical phasing, which is supported only for reference-model confidence output; >; > 16:17:06.588 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/robert/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_utils.so; >; > 16:17:06.589 **WARN** NativeLibraryLoader - Unable to load libgkl_utils.so from native/libgkl_utils.so (/tmp/libgkl_utils347167544598047196.so: /tmp/libgkl_utils347167544598047196.so: cannot open shared object file: No such file or directory (Possible cause: can't load AMD 64-bit .so on a Power PC 64 LE-bit platform)); >; > 16:17:06.589 **WARN** IntelPairHmm - Intel GKL Utils not loaded; >; > 16:17:06.589 INFO PairHMM - OpenMP multi-threaded AVX-accelerated native Pair",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6794#issuecomment-687344600:4632,test,test,4632,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6794#issuecomment-687344600,1,['test'],['test']
Testability," - [x] Latest master branch as of [2/6/2020]. ### Description ; There are minimal/inconsistent checks that variants added to vcfWriters are correctly ordered (an issue with htsjdk I think). This leads to an insidious bug, where a sorted vcf can be fed through SelectVariants, and depending on the flavor of output vcf, either crash, or succeed but output an incorrectly sorted vcf. The issue is that in some circumstances SelectVariants will trim alleles to their minimal representation, which can change the location of a variant record, and thus reorder them. However, SelectVariants does nothing to account for the potential order change. Since vcfWriter implementations in htsjdk seem to do minimal/inconsistent checks on the order of variants being added to them, this may write out an incorrectly sorted vcf, or throw an exception, depending on the flavor of vcfWriter. . #### Steps to reproduce; With attached (zipped because github) vcf, run ; `gatk SelectVariants -V test.input.vcf -sn SAMPLE_01 -O test.output.vcf`; Tool will succeed, but output vcf will be incorrectly sorted. Somehow, this incorrectly sorted vcf will also be accompanied by an index! Though if you try to run `IndexFeatureFile` on the output vcf separately, it will fail. . run ; `gatk SelectVariants -V test.input.vcf -sn SAMPLE_01 -O test.output.vcf.gz`; tool will throw exception w/ stack trace:; ```; java.lang.IllegalArgumentException: Features added out of order: previous (TabixFeature{referenceIndex=0, start=17148456, end=17148456, featureStartFilePosition=2460, featureEndFilePosition=-1}) > next (TabixFeature{referenceIndex=0, start=17148447, end=17148457, featureStartFilePosition=2509, featureEndFilePosition=-1}); 	at htsjdk.tribble.index.tabix.TabixIndexCreator.addFeature(TabixIndexCreator.java:89); 	at htsjdk.variant.variantcontext.writer.IndexingVariantContextWriter.add(IndexingVariantContextWriter.java:203); 	at htsjdk.variant.variantcontext.writer.VCFWriter.add(VCFWriter.java:242); 	at org.broadi",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6443:1204,test,test,1204,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6443,1,['test'],['test']
Testability," --allosomal-contig chrY --autosomal-ref-copy-number 2 --contig-ploidy-calls DetermineGermlineContigPloidy/DetermineGermlineContigPloidy-calls/ --sample-index 6 --output-genotyped-intervals intervals/genotyped-intervals-SAMPLE_6.vcf.gz --output-genotyped-segments segments/genotyped-segments-SAMPLE_6.vcf.gz --output-denoised-copy-ratios ratios/denoised-copy-ratios-SAMPLE_6.tsv --sequence-dictionary hg19_min_oldM.fa.dict. #PostprocessGermlineCNVCalls_joint. 23:45:30.659 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.3.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 23:45:31.000 INFO PostprocessGermlineCNVCalls - ------------------------------------------------------------; 23:45:31.001 INFO PostprocessGermlineCNVCalls - The Genome Analysis Toolkit (GATK) v4.3.0.0; 23:45:31.001 INFO PostprocessGermlineCNVCalls - For support and documentation go to https://software.broadinstitute.org/gatk/; 23:45:31.002 INFO PostprocessGermlineCNVCalls - Executing as testardqu@chu-lyon.fr@ge95142-vm1 on Linux v5.18.0-0.bpo.1-amd64 amd64; 23:45:31.002 INFO PostprocessGermlineCNVCalls - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_242-8u242-b08-0ubuntu3~18.04-b08; 23:45:31.002 INFO PostprocessGermlineCNVCalls - Start Date/Time: December 5, 2022 11:45:30 PM GMT; 23:45:31.002 INFO PostprocessGermlineCNVCalls - ------------------------------------------------------------; 23:45:31.002 INFO PostprocessGermlineCNVCalls - ------------------------------------------------------------; 23:45:31.003 INFO PostprocessGermlineCNVCalls - HTSJDK Version: 3.0.1; 23:45:31.003 INFO PostprocessGermlineCNVCalls - Picard Version: 2.27.5; 23:45:31.003 INFO PostprocessGermlineCNVCalls - Built for Spark Version: 2.4.5; 23:45:31.003 INFO PostprocessGermlineCNVCalls - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 23:45:31.003 INFO PostprocessGermlineCNVCalls - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 23:45:31.003 INFO PostprocessGermlineCNVCalls - HTS",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8183:7689,test,testardqu,7689,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8183,1,['test'],['testardqu']
Testability," --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false; Jun 22, 2020 5:06:37 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; [Mon Jun 22 17:06:37 CDT 2020] Executing as xxxxxxx@yyyyyy on Linux 3.10.0-693.11.1.el7.x86_64 amd64; OpenJDK 64-Bit Server VM 1.8.0_152-release-1056-b12; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.7.0; [Mon Jun 22 17:06:37 CDT 2020] picard.vcf.MergeVcfs done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=1249378304; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; htsjdk.samtools.SAMException: Cannot read non-existent file: file:///data/infectious/schistosome/tmp/test%20a/data/calling/erc_prod2.SM_V7_1.vcf.gz; at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:498); at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:485); at picard.vcf.MergeVcfs.doWork(MergeVcfs.java:173); at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:25); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292); ```. ## Cases when the error does not occur; * If I rename `test a` folder in `test-a` as previously said.; * If I copy my current `test a` in the `/tmp/` directory (`/tmp/test a/`). This may suggest that the path length plays a role.; * If I renamed the VCF files (first VCF becomes `a.vcf.gz`, second `b.vcf.gz`) (`gatk MergeVcfs -I data/calling/a.vcf.gz -I data/calling/b.vcf.gz -O out.vcf.gz`).; * If I rename the first VCF file with as many `a` character as characters found in the original filename. (aaaaaaa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241:6582,assert,assertFileIsReadable,6582,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241,1,['assert'],['assertFileIsReadable']
Testability," --input snippet.bam \; --output snippet.vcf \; -R hg19/hg19.fa \; --bam-output assembly.bam \; -L chr1:68896800-68896900 \; --ploidy 2 \; --min-pruning 2 \; --min-dangling-branch-length 2 \; --pcr-indel-model CONSERVATIVE ; ```. Then I get only a single variant reported in the region (the 9bp deletion):. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT test-sample; chr1 68896832 . CTTTAGTTTT C 1597.60 . AC=1;AF=0.500;AN=2;BaseQRankSum=0.000;DP=122;ExcessHet=3.0103;FS=0.000;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=14.52;ReadPosRankSum=1.341;SOR=0.350 GT:AD:DP:GQ:PL 0/1:67,43:110:99:1605,0,2683; ```. If i run to generate a gvcf then things get more interesting:. ```; gatk HaplotypeCaller \; --input snippet.bam \; --output snippet.g.vcf \; -R hg19/hg19.fa \; -ERC GVCF \; --bam-output assembly.bam \; -L chr1:68896800-68896900 \; --ploidy 2 \; --min-pruning 2 \; --min-dangling-branch-length 2 \; --pcr-indel-model CONSERVATIVE ; ```. yields:. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT test-sample; chr1 68896800 . G <NON_REF> . . END=68896831 GT:DP:GQ:MIN_DP:PL 0/0:118:99:107:0,120,1800; chr1 68896832 . CTTTAGTTTT C,<NON_REF> 1597.60 . BaseQRankSum... GT:AD:DP:GQ:PL:SB 0/1:67,43,0:110:99:1605,0,2683,1807,2813,4620:67,0,43,0; chr1 68896841 . T *,TCC,<NON_REF> 344.02 . DP=110;Exces... GT:GQ:PL ./.:99:0,0,0,0,0,0,0,0,0,0; chr1 68896842 . G <NON_REF> . . END=68896899 GT:DP:GQ:MIN_DP:PL 0/0:71:99:41:0,99,1485; ```. I.e. a record is emitted for the insertion but the genotype is `./.` with a quality of 99, 0s for all the PLs and the other per-sample annotations we'd expect on a variant record missing. I suspect the problem has something to do with the fact that the deletion and insertion are in cis and the insertion's anchor base is within the deletion. I'm not even sure how one would represent this as a pair of variants. I think ideally this would be emitted as a single variant with `REF=CTTTAGTTTT` and `ALT=CCC`. #### Steps to reproduce; Use the command lines ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6538:2028,test,test-sample,2028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6538,1,['test'],['test-sample']
Testability, -0.006% ; - Complexity 17740 17768 +28 ; ===============================================; Files 1159 1159 ; Lines 63951 64030 +79 ; Branches 9779 9798 +19 ; ===============================================; + Hits 50825 50884 +59 ; - Misses 9214 9233 +19 ; - Partials 3912 3913 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.602% <0%> (-15.176%)` | `32 <0> (ø)` | |; | [...rg/broadinstitute/hellbender/tools/PrintReads.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9QcmludFJlYWRzLmphdmE=) | `87.5% <100%> (ø)` | `4 <1> (ø)` | :arrow_down: |; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `75.281% <100%> (ø)` | `40 <1> (ø)` | :arrow_down: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `59.686% <100%> (+0.212%)` | `49 <1> (+1)` | :arrow_up: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlscy5qYXZh) | `81.592% <77.778%> (-0.112%)` | `191 <7> (+2)` | |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVs,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111:1496,test,test,1496,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111,1,['test'],['test']
Testability," -ls /gatk4; Found 2 items; -rw-r--r-- 3 hdfs supergroup 62934 2017-10-11 13:38 /gatk4/output.bam; drwxr-xr-x - hdfs supergroup 0 2017-10-11 14:19 /gatk4/output_2.bam.parts. **The spark-submit:**. bash-4.2$ spark-submit; Usage: spark-submit [options] <app jar | python file> [app arguments]; Usage: spark-submit --kill [submission ID] --master [spark://...]; Usage: spark-submit --status [submission ID] --master [spark://...]. Options:; --master MASTER_URL spark://host:port, mesos://host:port, yarn, or local.; --deploy-mode DEPLOY_MODE Whether to launch the driver program locally (""client"") or; on one of the worker machines inside the cluster (""cluster""); (Default: client).; --class CLASS_NAME Your application's main class (for Java / Scala apps).; --name NAME A name of your application.; --jars JARS Comma-separated list of local jars to include on the driver; and executor classpaths.; ....... **the spark-shell**; bash-4.2$ spark-shell; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; Failed to created SparkJLineReader: java.io.IOException: Permission denied; Falling back to SimpleReader.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /___/ .__/\_,_/_/ /_/\_\ version 1.6.0; /_/. Using Scala version 2.10.5 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_91); Type in expressions to have them evaluated.; Type :help for more information.; Spark context available as sc (master = yarn-client, app id = application_1507683879816_0007).; Wed Oct 11 14:25:24 CST 2017 Thread[main,5,main] java.io.FileNotFoundException: derby.log (Permission denied); ----------------------------------------------------------------; Wed Oct 11 14:25:24 CST 2017:; Booting Derby version The Apache Software Foundation - Apache Derby - 10.11.1.1 - (1616546): instance a816c00e-015f-0a1b-f1bd-00002ce33928 ; on database directory /tmp/spark-98953d35-8594-4907-b4a5-0870f1d17b3e/metastore with class loader sun.misc.Launcher$AppClassLoader@5c64",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240:1037,log,logging,1037,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240,1,['log'],['logging']
Testability," 0.0 failed 4 times, most recent failure: Lost task 0.3 in stage 0.0 (TID 3, xx.xx.xx.xx, executor 0): java.lang.IllegalStateException: unread block data; at java.io.ObjectInputStream$BlockDataInputStream.setBlockDataMode(ObjectInputStream.java:2740); at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1567); at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245); at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169); at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027); at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535); at java.io.ObjectInputStream.readObject(ObjectInputStream.java:422); at org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:75); at org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:114); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:309); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:748). Driver stacktrace:; 18/04/24 14:34:27 INFO DAGScheduler: Job 0 failed: first at ReadsSparkSource.java:221, took 4.816635 s; ```; Our system is an HPC, where all the nodes share the same file system. I run my SPARK on only one node to test the software. I red elesewhere that this might be aproblem of missing jars, so I tried to inlcude these libraries in the SPARK jar folder and added the option:; `; --conf [--jars=""~/bin/spark-2.2.0-bin-hadoop2.7/jars/hbase-client-1.4.3.jar, ~/bin/spark-2.2.0-bin-hadoop2.7/jars/hbase-common-1.4.3.jar, ~/bin/spark-2.2.0-bin-hadoop2.7/jars/hbase-hadoop2-compat-1.4.3.jar, ~/bin/spark-2.2.0-bin-hadoop2.7/jars/hive-hbase-handler-1.2.1.spark2.jar"" ]`. But I still get the error. Is GATK using hbase? If yes shall some jars be included to a local SPARK system to enable it to run GATK tools? Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4694#issuecomment-383916494:2338,test,test,2338,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4694#issuecomment-383916494,1,['test'],['test']
Testability," 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:1697,Benchmark,BenchmarkComparison,1697,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,2,['Benchmark'],['BenchmarkComparison']
Testability, 145236 144960 -276 ; Branches 16096 16061 -35 ; ===============================================; - Hits 126480 126189 -291 ; - Misses 12903 12928 +25 ; + Partials 5853 5843 -10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3065?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...aplotypecaller/HaplotypeCallerIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXJJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `88.262% <100%> (+0.027%)` | `84 <0> (ø)` | :arrow_down: |; | [...te/hellbender/utils/pileup/ReadPileupUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9waWxldXAvUmVhZFBpbGV1cFVuaXRUZXN0LmphdmE=) | `96.352% <100%> (ø)` | `77 <0> (ø)` | :arrow_down: |; | [...ellbender/testutils/SamAssertionUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90ZXN0dXRpbHMvU2FtQXNzZXJ0aW9uVXRpbHNVbml0VGVzdC5qYXZh) | `89.744% <100%> (+0.855%)` | `12 <1> (+1)` | :arrow_up: |; | [...ender/utils/haplotype/HaplotypeBAMDestination.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvSGFwbG90eXBlQkFNRGVzdGluYXRpb24uamF2YQ==) | `100% <100%> (ø)` | `4 <0> (ø)` | :arrow_down: |; | [...er/utils/haplotype/HaplotypeBAMWriterUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3065/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9oYXBsb3R5cGUvSGFwbG90eXBlQkFNV3JpdGVyVW5pdFRlc3QuamF2YQ==) | `89.076% <100%> (ø)` | `23 <0> (ø)` | :arrow_down: |; | [...ute/hellbender/utils/read/ArtificialReadUtils.java](https://codecov.io/gh/broadinstitut,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3065#issuecomment-328703783:1598,test,testutils,1598,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3065#issuecomment-328703783,1,['test'],['testutils']
Testability," 15:25:31 MarkDuplicates Will retain up to 116589493 data points before spilling to disk.; [Wed Jul 03 15:25:35 CEST 2024] picard.sam.markduplicates.MarkDuplicates done. Elapsed time: 0.07 minutes.; Runtime.totalMemory()=6861881344; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" java.lang.NullPointerException: Cannot invoke ""htsjdk.samtools.SAMReadGroupRecord.getReadGroupId()"" because the return value of ""htsjdk.samtools.SAMRecord.getReadGroup()"" is null; at picard.sam.markduplicates.MarkDuplicates.buildSortedReadEndLists(MarkDuplicates.java:558); at picard.sam.markduplicates.MarkDuplicates.doWork(MarkDuplicates.java:270); at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:281); at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:105); at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:115); ```; or from gatk; ```; gatk MarkDuplicates I=WA02_i5-537_i7-98_S11819_L004.bam O=test.dup.bam M=marked_dup_metrics.txt; Using GATK jar /opt/gatk-4.6.0.0/gatk-package-4.6.0.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /opt/gatk-4.6.0.0/gatk-package-4.6.0.0-local.jar MarkDuplicates I=WA02_i5-537_i7-98_S11819_L004.bam O=test.dup.bam M=marked_dup_metrics.txt; INFO 2024-07-03 15:26:21 MarkDuplicates. ********** NOTE: Picard's command line syntax is changing.; **********; ********** For more information, please see:; **********; https://github.com/broadinstitute/picard/wiki/Command-Line-Syntax-Transition-For-Users-(Pre-Transition); **********; ********** The command line looks like this in the new syntax:; **********; ********** MarkDuplicates -I WA02_i5-537_i7-98_S11819_L004.bam -O test.dup.bam -M marked_dup_metrics.txt; **********. 15:26:21.393 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/opt/gatk-4.6.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8904:5177,test,test,5177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8904,1,['test'],['test']
Testability," 19:59:31.084286796 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""e296eb66-95b2-428a-a31e-3118047b197d"",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:1085,test,testing,1085,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,1,['test'],['testing']
Testability," 2.21.2; 09:54:54.732 INFO HaplotypeCaller - Picard Version: 2.21.9; 09:54:54.732 INFO HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 09:54:54.732 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 09:54:54.732 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 09:54:54.732 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 09:54:54.732 INFO HaplotypeCaller - Deflater: IntelDeflater; 09:54:54.732 INFO HaplotypeCaller - Inflater: IntelInflater; 09:54:54.732 INFO HaplotypeCaller - GCS max retries/reopens: 20; 09:54:54.732 INFO HaplotypeCaller - Requester pays: disabled; 09:54:54.732 INFO HaplotypeCaller - Initializing engine; 09:55:05.747 INFO HaplotypeCaller - Shutting down engine; [September 11, 2020 9:55:05 AM CEST] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: 0.19 minutes.; Runtime.totalMemory()=5152178176; ***********************************************************************. A USER ERROR has occurred: Fasta dict file file:///home/averdier/test/dna-seq-pipeline/Triticum_aestivum_Claire_EIv1.1.dict for reference file:///home/averdier/test/dna-seq-pipeline/Triticum_aestivum_Claire_EIv1.1.fa.gz does not exist.; Please see http://gatkforums.broadinstitute.org/discussion/1601/how-can-i-prepare-a-fasta-file-to-use-as-reference for help creating it. ***********************************************************************; Set the system property GATK_STACKTRACE_ON_USER_EXCEPTION (--java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true') to print the stack trace. Command 'java -Xmx100G -jar /opt/gatk/gatk-package-4.1.7.0-local.jar HaplotypeCaller -R Triticum_aestivum_Claire_EIv1.1.fa.gz --sequence-dictionary Triticum_aestivum_Claire_EIv1.1.fa.gz.dict -I ClaireTest_MD.bam -O ClaireTest_MD_NoInter; vals_Output.vcf --stand-call-conf 10 --native-pair-hmm-threads 30' failed with 512. ```. I'm using the local gatk of version 4.1.7.0",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6808:2720,test,test,2720,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6808,2,['test'],['test']
Testability," 254, AlnModType.NONE);; final AlignmentInterval region3 = new AlignmentInterval(new SimpleInterval(""20"", 1, 413), 613, 1025, TextCigarCodec.decode(""612H413M""), true, 60, 0, 413, AlnModType.NONE);. final AlignedContig alignedContig = new AlignedContig(""asm00001:tig0001"", contigSequence, Arrays.asList(region0, region1, region2, region3), false);. final List<ChimericAlignment> assembledBreakpointsFromAlignmentIntervals = ChimericAlignment.parseOneContig(alignedContig, SVDiscoveryTestDataProvider.seqDict, true, StructuralVariationDiscoveryArgumentCollection.DiscoverVariantsFromContigsAlignmentsSparkArgumentCollection.DEFAULT_MIN_ALIGNMENT_LENGTH, StructuralVariationDiscoveryArgumentCollection.DiscoverVariantsFromContigsAlignmentsSparkArgumentCollection.CHIMERIC_ALIGNMENTS_HIGHMQ_THRESHOLD, true);. Assert.assertEquals(assembledBreakpointsFromAlignmentIntervals.size(), 1);; final ChimericAlignment chimericAlignment = assembledBreakpointsFromAlignmentIntervals.get(0);; Assert.assertEquals(chimericAlignment.sourceContigName, ""asm00001:tig0001"");; final NovelAdjacencyReferenceLocations breakpoints = new NovelAdjacencyReferenceLocations(chimericAlignment, contigSequence, SVDiscoveryTestDataProvider.seqDict);; }; ```. In versions of the code prior to #3752 (I think) this set of alignments was being filtered out by the method `isNotSimpleTranslocation` in the `parseOneContig` method of `ChimericAlignment`. Now that check's logic has changed and `isLikelySimpleTranslocation` returns false instead of true and so this alignment is not being filtered out any more. . When it gets to `NovelAdjacencyReferenceLocations.TanDupBreakpointsInference()` both `upstreamBreakpointRefPos` and `downstreamBreakpointRefPos` are being set to zero. It's not immediately clear to me how to fix this. A few thoughts:. - Are we supposed to be processing this `ChimericAlignment` through the main code path right now? ; - Why do we subtract 1 from the start position of the `rightReferenceInterval.getStart()",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3874#issuecomment-347627504:2811,assert,assertEquals,2811,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3874#issuecomment-347627504,2,['assert'],['assertEquals']
Testability," 29, 2019 12:50:23 AM EDT] org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller done. Elapsed time: 0.72 minutes.; Runtime.totalMemory()=2335703040; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/cohort_denoising_calling.7177495255490777642.py --ploidy_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/1-Contig-Ploidy/14.Contig_Ploidy_Dir/ploidy-calls --output_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:8385,Test,Test-,8385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability," 75500 15742.8; 09:54:04.928 INFO ProgressMeter - 1:23419224 5.0 81370 16387.6; 09:54:15.956 INFO ProgressMeter - 1:23812728 5.1 82750 16070.6; 09:54:31.008 INFO ProgressMeter - 1:24023237 5.4 83470 15457.4; 09:54:33.610 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 58.921665822; 09:54:33.611 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 72.92 sec; 09:54:33.612 INFO Mutect2 - Shutting down engine; [March 7, 2019 9:54:33 AM EST] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 5.51 minutes.; Runtime.totalMemory()=193003520; java.lang.IllegalArgumentException: readMaxLength must be > 0 but got 0; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.utils.pairhmm.PairHMM.initialize(PairHMM.java:152); 	at org.broadinstitute.hellbender.utils.pairhmm.N2MemoryPairHMM.initialize(N2MemoryPairHMM.java:28); 	at org.broadinstitute.hellbender.utils.pairhmm.LoglessPairHMM.initialize(LoglessPairHMM.java:7); 	at org.broadinstitute.hellbender.utils.pairhmm.PairHMM.initialize(PairHMM.java:177); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.initializePairHMM(PairHMMLikelihoodCalculationEngine.java:242); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.PairHMMLikelihoodCalculationEngine.computeReadLikelihoods(PairHMMLikelihoodCalculationEngine.java:177); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.callRegion(Mutect2Engine.java:229); 	at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.apply(Mutect2.java:232); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProg",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5543#issuecomment-470579844:5018,Log,LoglessPairHMM,5018,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5543#issuecomment-470579844,1,['Log'],['LoglessPairHMM']
Testability," </pre>. It seems that GenomicsDBImport crash after finishing 1 batch for large chromosomes. For example, here I simultaneously run for chr1-12 (not finished yet). For chr5-12, file size of 1 batch is less than 40GB and they successfully finished import batch 1 and running for batch 2 or 3. Thus, the file size for chr5-12 are 59GB now. However, for chr1-4, they just crash in batch 1 for very long time without any error. I have check the memory usage and there is still >35GB free memory for the compute node of each chromosome. Please see the followings for detail:. File size for all chromosomes, the GenomicsDB for chr1-4 is smaller:; <pre>[hcaoad@login-0 GenomicsDB]> du -h --max-depth=1; 59G ./chr10; 59G ./chr6; 50G ./chr2; 59G ./chr12; 59G ./chr9; 59G ./chr5; 59G ./chr7; 48G ./chr1; 59G ./chr11; 59G ./chr8; 40G ./chr4; 41G ./chr3; 647G .; </pre>. Files in GenomicsDB of chr1 batch 1. As you can see, no update for the database since Apr 20 13:34, while current time is Apr 21.; <pre>[hcaoad@login-0 .__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611]> pwd; /home/hcaoad/scratch/Han/WGS/HK_WGS_5X/GenomicsDB/chr1/1$1$249250621/.__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611; [hcaoad@login-0 .__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611]> date; Wed Apr 21 11:09:46 HKT 2021; [hcaoad@login-0 .__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611]> ll -h; total 48G; -rwx------ 1 hcaoad boip 260M Apr 20 13:34 AD.tdb; -rwx------ 1 hcaoad boip 203M Apr 20 13:34 AD_var.tdb; -rwx------ 1 hcaoad boip 304M Apr 20 13:34 ALT.tdb; -rwx------ 1 hcaoad boip 146M Apr 20 13:34 ALT_var.tdb; -rwx------ 1 hcaoad boip 353M Apr 20 13:34 BaseQRankSum.tdb; -rwx------ 1 hcaoad boip 7.3G Apr 20 13:34 __coords.tdb; -rwx------ 1 hcaoad boip 132M Apr 20 13:34 DB.tdb; -rwx------ 1 hcaoad boip 3.4G Apr 20 13:34 DP_FORMAT.tdb; -rwx------ 1 hcaoad boip 295M Apr 20 13:34 DP.tdb; -rwx------ 1 hcaoad boip 8.1G Apr 20 13:34 END.tdb; -r",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7218:1493,log,login-,1493,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7218,1,['log'],['login-']
Testability, <0%> (+7%)` | |; | [...s/spark/sv/discovery/SvDiscoveryInputMetaData.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlJbnB1dE1ldGFEYXRhLmphdmE=) | `100% <0%> (ø)` | `9% <0%> (+7%)` | :arrow_up: |; | [.../utils/read/markduplicates/DuplicationMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL0R1cGxpY2F0aW9uTWV0cmljcy5qYXZh) | `85.366% <0%> (ø)` | `13% <0%> (?)` | |; | [...covery/inference/CpxVariantReInterpreterSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL0NweFZhcmlhbnRSZUludGVycHJldGVyU3BhcmsuamF2YQ==) | `100% <0%> (ø)` | `5% <0%> (?)` | |; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQWJzdHJhY3RNYXJrRHVwbGljYXRlc1Rlc3Rlci5qYXZh) | `79.487% <0%> (ø)` | `17% <0%> (?)` | |; | [...nce/SegmentedCpxVariantSimpleVariantExtractor.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1NlZ21lbnRlZENweFZhcmlhbnRTaW1wbGVWYXJpYW50RXh0cmFjdG9yLmphdmE=) | `93.96% <0%> (ø)` | `71% <0%> (?)` | |; | [.../sv/StructuralVariationDiscoveryPipelineSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4801/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9TdHJ1Y3R1cmFsVmFyaWF0aW9uRGlzY292ZXJ5UGlwZWxpbmVTcGFyay5qYXZh) | `88.652% <0%> (+0.081%)` | `13% <0%> (ø)` | :arrow_down: |; | [...iscoverFromLocalAssemblyConti,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393173847:2849,test,test,2849,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393173847,2,['test'],"['test', 'testers']"
Testability," A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068162 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068163 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068164 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3507,test,test,3507,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability," Affected version(s); - [ ] Latest public release version [version?]; 4.6.0.0 GATK and Picard 3.2.0; - [ ] Latest master branch as of [date of test?]; 3 Jul 2023. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._; I'm trying to use gatk for finding snps in exome capture project. I get an error when trying to use MarkDuplicates - I tried using it from picard and from gatk. The screen output is:; ```; picard MarkDuplicates I=WA02_i5-537_i7-98_S11819_L004.bam O=test.dup.bam M=marked_dup_metrics.txt; INFO 2024-07-03 15:25:31 MarkDuplicates. ********** NOTE: Picard's command line syntax is changing.; **********; ********** For more information, please see:; **********; https://github.com/broadinstitute/picard/wiki/Command-Line-Syntax-Transition-For-Users-(Pre-Transition); **********; ********** The command line looks like this in the new syntax:; **********; ********** MarkDuplicates -I WA02_i5-537_i7-98_S11819_L004.bam -O test.dup.bam -M marked_dup_metrics.txt; **********. 15:25:31.262 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/opt/picard/build/libs/picard.jar!/com/intel/gkl/native/libgkl_compression.so; [Wed Jul 03 15:25:31 CEST 2024] MarkDuplicates INPUT=[WA02_i5-537_i7-98_S11819_L004.bam] OUTPUT=test.dup.bam METRICS_FILE=marked_dup_metrics.txt MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP=50000 MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=8000 SORTING_COLLECTION_SIZE_RATIO=0.25 TAG_DUPLICATE_SET_MEMBERS=false REMOVE_SEQUENCING_DUPLICATES=false TAGGING_POLICY=DontTag CLEAR_DT=true DUPLEX_UMI=false FLOW_MODE=false FLOW_DUP_STRATEGY=FLOW_QUALITY_SUM_STRATEGY USE_END_IN_UNPAIRED_READS=false USE_UNPAIRED_CLIPPED_END=false UNPAIRED_END_UNCERTAINTY=0 UNPAIRED_START_UNCERTAINTY=0 FLOW_SKIP_FIRST_N_FLOWS=0 FLOW_Q_IS_KNOWN_END=false FLOW_EFFECTIVE_QUALITY_THRESHOLD=15 ADD_PG_TAG_TO_READS=true REMOVE_DUPLICATES=false ASSUME_SORTED=false DUPLICATE_SCORING_STRATEGY=SUM_OF_BASE_QUALITIES PROGRAM_RECORD_",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8904:2281,test,test,2281,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8904,1,['test'],['test']
Testability," CustomTool`, but also with public tools. Only if `--use_jdk_deflater true` is provided, it works. . The log is the following (there is no other log):. ```; 14:57:19.102 INFO IntelGKLUtils - Trying to load Intel GKL library from:; jar:file:/Users/daniel/workspaces/gatk4test/build/libs/shadowJar-0.0.1-SNAPSHOT-all.jar!/com/intel/gkl/native/libIntelGKL.dylib; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGILL (0x4) at pc=0x0000000128c014d0, pid=31197, tid=5891; #; # JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # C [libIntelGKL8818190486223479934.dylib+0xe4d0] _ZN7ContextIfEC2Ev+0x30; #; # Core dump written. Default location: /cores/core or core.31197; #; # An error report file with more information is saved as:; # /Users/daniel/workspaces/gatk4test/hs_err_pid31197.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; Abort trap: 6 (core dumped); ```. To fix it, I tried by excluding `com.intel.gkl` from GATK and add it as a dependency to my program, but it blows up anyway. In addition, I tried a sample program to load the PairHMM fastest implementation by `PairHMM.Implementation.FASTEST_AVAILABLE.makeNewHMM()`, and it also blows up. If I remove completely the dependency in my shadow jar, the command line blows up because the gkl `IntelDeflaterFactory` is not found. I guess that the error in the library is GKL-related, but in the case of the GATK framework I would like to have a way of using the library without assuming that the final user will have support for the native code or not. Could this be done? I prefer not to remove the faster code by intel because I know that some users will benefit from it.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1985:1170,log,log,1170,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1985,1,['log'],['log']
Testability," Description ; I want to use Funcotator to annotate the VCF file given by Illumina TruSight Oncology 500 pipeline. But when I run the command above, it throws out an error, seems something related with malformat. I check my VCF file and think it should be OK. So I wonder if you can kindly tell me how to fix this bug?; The ERROR is:; `Using GATK jar /home/shiyang/softwares/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/shiyang/softwares/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar Funcotator --variant /home/shiyang/Project/BGB900_101/TSO_result/TSO_somatic_vcf/112-0005-0031-B1_L1.UP12.tmb.tsv.tso.somatic.vcf --reference /storage01/ref_genome/hg19/bwa/ucsc.hg19.fasta --ref-version hg19 --data-sources-path /home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s --output /home/shiyang/Project/BGB900_101/TSO_result/test.maf --output-file-format MAF; 15:41:48.793 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/shiyang/softwares/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Aug 19, 2020 3:41:49 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 15:41:49.028 INFO Funcotator - ------------------------------------------------------------; 15:41:49.028 INFO Funcotator - The Genome Analysis Toolkit (GATK) v4.1.8.1; 15:41:49.028 INFO Funcotator - For support and documentation go to https://software.broadinstitute.org/gatk/; 15:41:49.028 INFO Funcotator - Executing as shiyang@r740 on Linux v3.10.0-957.el7.x86_64 amd64; 15:41:49.028 INFO Funcotator - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_252-b09; 15:41:49.028 INFO Funcotator - Start Date/Time: August 19, 2020 3:41:48 PM CST; 15:41:49.029",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6758:2516,test,test,2516,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6758,1,['test'],['test']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 11 | [2935907552.11](https://github.com/broadinstitute/gatk/runs/8042744893?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.11/tests/test/index.html) |; | cloud | 8 | [2935907552.10](https://github.com/broadinstitute/gatk/runs/8042744743?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.10/tests/test/index.html) |; | unit | 11 | [2935907552.13](https://github.com/broadinstitute/gatk/runs/8042745129?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.13/tests/test/index.html) |; | integration | 11 | [2935907552.12](https://github.com/broadinstitute/gatk/runs/8042744999?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.12/tests/test/index.html) |; | conda | 8 | [2935907552.3](https://github.com/broadinstitute/gatk/runs/8043019512?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.3/tests/test/index.html) |; | unit | 8 | [2935907552.1](https://github.com/broadinstitute/gatk/runs/8043019322?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.1/tests/test/index.html) |; | variantcalling | 8 | [2935907552.2](https://github.com/broadinstitute/gatk/runs/8043019429?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.2/tests/test/index.html) |; | integration | 8 | [2935907552.0](https://github.com/broadinstitute/gatk/runs/8043019196?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_2935907552.0/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1228829876:1169,test,tests,1169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1228829876,18,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 11 | [3002176541.11](https://github.com/broadinstitute/gatk/runs/8212856906?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.11/tests/test/index.html) |; | cloud | 8 | [3002176541.10](https://github.com/broadinstitute/gatk/runs/8212856796?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.10/tests/test/index.html) |; | unit | 11 | [3002176541.13](https://github.com/broadinstitute/gatk/runs/8212857102?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.13/tests/test/index.html) |; | integration | 11 | [3002176541.12](https://github.com/broadinstitute/gatk/runs/8212857016?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.12/tests/test/index.html) |; | unit | 8 | [3002176541.1](https://github.com/broadinstitute/gatk/runs/8213287905?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.1/tests/test/index.html) |; | integration | 8 | [3002176541.0](https://github.com/broadinstitute/gatk/runs/8213287794?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.0/tests/test/index.html) |; | variantcalling | 8 | [3002176541.2](https://github.com/broadinstitute/gatk/runs/8213288012?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.2/tests/test/index.html) |; | conda | 8 | [3002176541.3](https://github.com/broadinstitute/gatk/runs/8213288138?check_suite_focus=true) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3002176541.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1238473387:1169,test,tests,1169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1238473387,18,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3092731818.10](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333411) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.10/tests/test/index.html) |; | cloud | 11 | [3092731818.11](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333541) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.11/tests/test/index.html) |; | unit | 11 | [3092731818.13](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333748) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.13/tests/test/index.html) |; | integration | 11 | [3092731818.12](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004333644) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.12/tests/test/index.html) |; | conda | 8 | [3092731818.3](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627834) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.3/tests/test/index.html) |; | unit | 8 | [3092731818.1](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627636) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.1/tests/test/index.html) |; | integration | 8 | [3092731818.0](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627523) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.0/tests/test/index.html) |; | variantcalling | 8 | [3092731818.2](https://github.com/broadinstitute/gatk/actions/runs/3092731818/jobs/5004627749) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092731818.2/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252803679:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252803679,1,['test'],['test-logs']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3092905417.10](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691605) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.10/tests/test/index.html) |; | cloud | 11 | [3092905417.11](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.11/tests/test/index.html) |; | unit | 11 | [3092905417.13](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691976) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.13/tests/test/index.html) |; | integration | 11 | [3092905417.12](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004691810) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.12/tests/test/index.html) |; | unit | 8 | [3092905417.1](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.1/tests/test/index.html) |; | conda | 8 | [3092905417.3](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926443) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.3/tests/test/index.html) |; | variantcalling | 8 | [3092905417.2](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926310) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.2/tests/test/index.html) |; | integration | 8 | [3092905417.0](https://github.com/broadinstitute/gatk/actions/runs/3092905417/jobs/5004926053) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3092905417.0/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252832367:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252832367,1,['test'],['test-logs']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3291375153.10](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447220) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.10/tests/test/index.html) |; | cloud | 11 | [3291375153.11](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447314) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.11/tests/test/index.html) |; | unit | 11 | [3291375153.13](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447526) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.13/tests/test/index.html) |; | integration | 11 | [3291375153.12](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425447422) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.12/tests/test/index.html) |; | unit | 8 | [3291375153.1](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749385) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.1/tests/test/index.html) |; | conda | 8 | [3291375153.3](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749598) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.3/tests/test/index.html) |; | variantcalling | 8 | [3291375153.2](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749495) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.2/tests/test/index.html) |; | integration | 8 | [3291375153.0](https://github.com/broadinstitute/gatk/actions/runs/3291375153/jobs/5425749244) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3291375153.0/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1285871268:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1285871268,1,['test'],['test-logs']
Testability, Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | 8 | [3300316784.10](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679663) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.10/tests/test/index.html) |; | cloud | 11 | [3300316784.11](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679780) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.11/tests/test/index.html) |; | unit | 11 | [3300316784.13](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679952) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.13/tests/test/index.html) |; | integration | 11 | [3300316784.12](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444679868) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.12/tests/test/index.html) |; | conda | 8 | [3300316784.3](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871971) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.3/tests/test/index.html) |; | unit | 8 | [3300316784.1](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871800) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.1/tests/test/index.html) |; | variantcalling | 8 | [3300316784.2](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.2/tests/test/index.html) |; | integration | 8 | [3300316784.0](https://github.com/broadinstitute/gatk/actions/runs/3300316784/jobs/5444871682) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/8004/merge_3300316784.0/tests/test/index.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1287429116:1124,test,test-logs,1124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1287429116,1,['test'],['test-logs']
Testability," FastaAlternateReferenceMaker tool. . A new parameter `--keep-contig-names` is added. . New optional behavior is to set contig names as ; `>originalcontigname description`. Here is my small local test and its result. **VCF**; ```; ##fileformat=VCFv4.2; ##FILTER=<ID=PASS,Description=""All filters passed"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""GT"">; ##contig=<ID=chr17,length=83257441>; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	Sample; chr17	1	.	N	A	100	PASS	.	GT	1/1; ```; **Original Fasta**; ```; >chr```. **New Fasta with new optional behavior**; ```; >chr17 chr```. **Sequence dictionary created for the new Fasta.**. ```; @HD	VN:1.0	SO:unsorted; @SQ	SN:chr17	LN:83257441	M5:8127f7ddcacb7afb1a6277cdd629fdcd	UR:file:///path/to/chr17_mod2.fasta; ```. Default value is false therefore original behavior is kept. Should not hurt any current tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8865:2077,test,tests,2077,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8865,1,['test'],['tests']
Testability, GenomeLocParser - chrEBV (171823 bp); 23:44:43.173 INFO GermlineCNVCaller - Aggregating read-count file /gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/counts/V300033254_96.tsv (1 / 3); 23:44:43.345 INFO GermlineCNVCaller - Aggregating read-count file /gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/counts/V300033256_95.tsv (2 / 3); 23:44:43.521 INFO GermlineCNVCaller - Aggregating read-count file /gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/counts/V300033254_97.tsv (3 / 3); 23:44:43.683 DEBUG ScriptExecutor - Executing:; 23:44:43.683 DEBUG ScriptExecutor - python; 23:44:43.683 DEBUG ScriptExecutor - /tmp/cohort_denoising_calling.6786136740079319091.py; 23:44:43.683 DEBUG ScriptExecutor - --ploidy_calls_path=/gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/ploidy/ploidy-calls; 23:44:43.683 DEBUG ScriptExecutor - --output_calls_path=/gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/cohort_all/cohort_30-calls; 23:44:43.683 DEBUG ScriptExecutor - --output_tracking_path=/gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/cohort_all/cohort_30-tracking; 23:44:43.683 DEBUG ScriptExecutor - --random_seed=1984; 23:44:43.683 DEBUG ScriptExecutor - --modeling_interval_list=/tmp/intervals15539986661449841065.tsv; 23:44:43.684 DEBUG ScriptExecutor - --output_model_path=/gpfs/hpc/home/lijc/xiangxud/project/test/NGS_WES_test/4_tools_vcf/gatk4/info/cohort_all/cohort_30-model; 23:44:43.684 DEBUG ScriptExecutor - --enable_explicit_gc_bias_modeling=True; 23:44:43.684 DEBUG ScriptExecutor - --read_count_tsv_files; 23:44:43.684 DEBUG ScriptExecutor - /tmp/V300033254_96.rc5147399438960401577.tsv; 23:44:43.684 DEBUG ScriptExecutor - /tmp/V300033256_95.rc16057077786486760637.tsv; 23:44:43.684 DEBUG ScriptExecutor - /tmp/V300033254_97.rc18322117796550461836.tsv; 23:44:43.684 DEBUG ScriptExecutor - --psi_s_scale=1.0000,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8938:34241,test,test,34241,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8938,1,['test'],['test']
Testability," I am able to run this step is by running it through the docker image you provide. That, however, is not ideal for our setup. Any idea as to what I may try to be able to run it directly?. GATK version:. Using GATK jar /home/analyst/anaconda3/envs/snakemake\_env/share/gatk4-4.2.5.0-0/gatk-package-4.2.5.0-local.jar ; ; Running: ; ;     java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -jar /home/analyst/anaconda3/envs/snakemake\_env/share/gatk4-4.2.5.0-0/gatk-package-4.2.5.0-local.jar --version ; ; The Genome Analysis Toolkit (GATK) v4.2.5.0 ; ; HTSJDK Version: 2.24.1 ; ; Picard Version: 2.25.4. Exact command:. gatk CNNScoreVariants -I 73318\_WES\_hg19\_recalibrated.sorted.bam -V 73318\_80\_IDTv1.vcf.gz -R /media/analyst/Data/Reference\_data/hg19.fa -O /media/analyst/Data/73318\_CNNScore\_test.vcf.gz -tensor-type read\_tensor > /media/analyst/Data/CNNScoreVariants.log. Entire console output:. Running: ; ;     java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -jar /home/analyst/anaconda3/envs/snakemake\_env/share/gatk4-4.2.5.0-0/gatk-package-4.2.5.0-local.jar CNNScoreVariants -I 73318\_WES\_hg19\_recalibrated.sorted.bam -V 73318\_80\_IDTv1.vcf.gz -R /media/analyst/Data/Reference\_data/hg19.fa -O /media/analyst/Data/73318\_CNNScore\_test.vcf.gz -tensor-type read\_tensor ; ; 11:17:58.509 INFO  NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/home/analyst/anaconda3/envs/snakemake\_env/share/gatk4-4.2.5.0-0/gatk-package-4.2.5.0-local.jar!/com/intel/gkl/native/libgkl\_compression.so ; ; Apr 25, 2022 11:17:58 AM shaded.cloud\_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine ; ; INFO: Failed to detect whether we are running on Google Compute Engine. ; ; 11:17:58.668 INFO  CNNScoreVariants -",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7811:1850,log,log,1850,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7811,1,['log'],['log']
Testability," I don't know how much you cleaned up the GATK4 version. We refactored all the engine stuff shared with `HaplotypeCaller` to be very distinct from the somatic genotyping logic, so the only complexity would be in local assembly and PairHMM. Which could be significant, of course. > We would also want to make sure that we only implement this optimization if that SNP is the only SNP on the haplotype. . .Although we've seen that the graph traversal frequently breaks phasing. The specific case I had in mind is when you have a bubble or something more complex in the graph, followed by a stretch of reference (i.e. all haplotypes have nothing going on here), followed (or not) by more activity. It seems reasonable in that case to chop each active area into its own haplotype(s), which is equivalent to pinning the ref-only area to be ref-only in PairHMM. I believe but could be wrong that in a case like this our assembly would not respect phasing between the two active areas anyway, so we lose nothing. By the way, I should clarify that the idea is not to truncate the `ActiveRegion`, but rather to break it into a few small haplotypes semi-intelligently *after* building the whole deBruijn graph. It could well be that my optimism is ill-founded. Nonetheless, having a quick-and-dirty mode would be very useful for the following purposes where you need to run M2 a lot and don't need perfection:. * making an M2 panel of normals; * making true positives + false positives training data sets for artifact classifiers; * testing changes. ---. @ldgauthier commented on [Mon Mar 06 2017](https://github.com/broadinstitute/gatk-protected/issues/909#issuecomment-284502170). ""Quick and dirty"" would be useful for testing changes, but the PoN and training sets shouldn't be recreated very often so there's less savings. I hate to leverage the fact that we break phasing to optimize things because I dream of a future where HaplotypeCaller actually calls haplotypes (as you've already added an issue for).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2945:3001,test,testing,3001,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2945,2,['test'],['testing']
Testability," I run GenotypeGVCFs with 222 samples I get the error: A USER ERROR has occurred: Couldn't create GenomicsDBFeatureReader. The GATK version used is gatk-4.4.0.0 and the command used is the following:. python2.7 /home/administrator/tool/gatk-4.4.0.0/gatk --java-options ""-Xmx4g"" GenotypeGVCFs -R /mnt/nas/Stefano/Cashmere/Reference_Genome/GCF_001704415.1_ARS1_genomic.fna -V gendb://my_database -O /mnt/nas2/Stefano/Cashmere/joint_variant_calling/222_goats.vcf.gz. attaches below also the complete program log. and the content of my callset.json file. Any idea about that?. Thank you very much. Stefano. REQUIRED for all errors and issues:; a) GATK version used: gatk-4.4.0.0; b) Exact command used: python2.7 /home/administrator/tool/gatk-4.4.0.0/gatk --java-options ""-Xmx4g"" GenotypeGVCFs -R /mnt/nas/Stefano/Cashmere/Reference_Genome/GCF_001704415.1_ARS1_genomic.fna -V gendb://my_database -O /mnt/nas2/Stefano/Cashmere/joint_variant_calling/222_goats_fatte_con_GenomicsDBImport.vcf.gz. c) Entire program log:. (base) administrator@srv2-napolioni:/mnt/nas2/Stefano/Cashmere/joint_variant_calling$ python2.7 /home/administrator/tool/gatk-4.4.0.0/gatk --java-options ""-Xmx4g"" GenotypeGVCFs -R /mnt/nas/Stefano/Cashmere/Reference_Genome/GCF_001704415.1_ARS1_genomic.fna -V gendb://my_database -O /mnt/nas2/Stefano/Cashmere/joint_variant_calling/222_goats.vcf.gz; Using GATK jar /home/administrator/tool/gatk-4.4.0.0/gatk-package-4.4.0.0-local.jar; Running:;     java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx4g -jar /home/administrator/tool/gatk-4.4.0.0/gatk-package-4.4.0.0-local.jar GenotypeGVCFs -R /mnt/nas/Stefano/Cashmere/Reference_Genome/GCF_001704415.1_ARS1_genomic.fna -V gendb://my_database -O /mnt/nas2/Stefano/Cashmere/joint_variant_calling/222_goats.vcf.gz; 12:01:18.521 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/administrator/tool/ga",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8709:1555,log,log,1555,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8709,1,['log'],['log']
Testability," INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --gcs_max_retries 20 --disableToolDefaultReadFilters false; [October 3, 2017 5:27:51 AM UTC] Executing as centos@master.novalocal on Linux 3.10.0-514.10.2.el7.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_131-b11; Version: 4.beta.5; 05:27:52.642 INFO PrintReadsSpark - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 05:27:52.642 INFO PrintReadsSpark - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 05:27:52.642 INFO PrintReadsSpark - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : false; 05:27:52.642 INFO PrintReadsSpark - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 05:27:52.642 INFO PrintReadsSpark - Deflater: IntelDeflater; 05:27:52.642 INFO PrintReadsSpark - Inflater: IntelInflater; 05:27:52.643 INFO PrintReadsSpark - GCS max retries/reopens: 20; 05:27:52.643 INFO PrintReadsSpark - Using google-cloud-java patch c035098b5e62cb4fe9155eff07ce88449a361f5d from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 05:27:52.643 INFO PrintReadsSpark - Initializing engine; 05:27:52.643 INFO PrintReadsSpark - Done initializing engine; log4j:ERROR A ""org.apache.log4j.ConsoleAppender"" object is not assignable to a ""org.apache.log4j.Appender"" variable.; log4j:ERROR The class ""org.apache.log4j.Appender"" was loaded by; log4j:ERROR [sun.misc.Launcher$AppClassLoader@dcf3e99] whereas object of type; log4j:ERROR ""org.apache.log4j.ConsoleAppender"" was loaded by [org.apache.spark.util.ChildFirstURLClassLoader@61df66b6].; log4j:ERROR Could not instantiate appender named ""console"".; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; log4j:WARN No appenders could be found for logger (org.apache.spark.SparkContext).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; ```; I can run command using the spark-shell but somehow GATK4 fails. Any idea?. thank you very much",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3651:3997,log,logger,3997,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3651,2,['log'],"['logger', 'logging']"
Testability," INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 10:19:39.337 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 10:19:39.337 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 10:19:39.337 INFO GenomicsDBImport - Deflater: IntelDeflater; 10:19:39.337 INFO GenomicsDBImport - Inflater: IntelInflater; 10:19:39.337 INFO GenomicsDBImport - GCS max retries/reopens: 20; 10:19:39.338 INFO GenomicsDBImport - Requester pays: disabled; 10:19:39.338 INFO GenomicsDBImport - Initializing engine; 10:19:39.489 INFO IntervalArgumentCollection - Processing 100 bp from intervals; 10:19:39.490 INFO GenomicsDBImport - Done initializing engine; 10:19:39.948 INFO GenomicsDBLibLoader - GenomicsDB native library version : 1.4.4-ce4e1b9; 10:19:39.951 INFO GenomicsDBImport - Vid Map JSON file will be written to /home/test/Software/gatk-4.4.0.0/test/./02/vidmap.json; 10:19:39.951 INFO GenomicsDBImport - Callset Map JSON file will be written to /home/test/Software/gatk-4.4.0.0/test/./02/callset.json; 10:19:39.951 INFO GenomicsDBImport - Complete VCF Header will be written to /home/test/Software/gatk-4.4.0.0/test/./02/vcfheader.vcf; 10:19:39.951 INFO GenomicsDBImport - Importing to workspace - /home/test/Software/gatk-4.4.0.0/test/./02; 10:19:40.060 INFO GenomicsDBImport - Importing batch 1 with 2 samples; 10:19:40.075 INFO GenomicsDBImport - Shutting down engine; org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 0.01 minutes.; Runtime.totalMemory()=285212672; java.lang.NumberFormatException: For input string: ""G""; 	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67); 	at java.base/java.lang.Integer.parseInt(Integer.java:668); 	at java.base/java.lang.Integer.parseInt(Integer.java:786); 	at htsjdk.tribble.readers.TabixReader.getIntv(TabixReader.java:337); 	at htsjdk.tribble.readers.TabixReader.access$500(TabixReader.java:48); 	at htsjd",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8517:2621,test,test,2621,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8517,1,['test'],['test']
Testability," INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy; 17/10/13 18:11:42 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO storage.BlockManagerMasterEndpoint: Registering block manager 10.131.101.159:44818 with 366.3 MB RAM, BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO storage.BlockManager: external shuffle service port = 7337; 17/10/13 18:11:42 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, 10.131.101.159, 44818, None); 17/10/13 18:11:42 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@544300a6{/metrics/json,null,AVAILABLE,@Spark}; 17/10/13 18:11:42 INFO scheduler.EventLoggingListener: Logging events to hdfs://mg:8020/user/spark/spark2ApplicationHistory/application_1507856833944_0003; 17/10/13 18:11:42 INFO util.Utils: Using initial executors = 0, max of spark.dynamicAllocation.initialExecutors, spark.dynamicAllocation.minExecutors and spark.executor.instances; 17/10/13 18:11:43 INFO cluster.YarnClientSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.8; 17/10/13 18:11:43 INFO memory.MemoryStore: Block broadcast_0 stored as values in memory (estimated size 286.0 KB, free 366.0 MB); 17/10/13 18:11:44 INFO memory.MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 26.0 KB, free 366.0 MB); 17/10/13 18:11:44 INFO storage.BlockManagerInfo: Added broadcast_0_piece0 in memory on 10.131.101.159:44818 (size: 26.0 KB, free: 366.3 MB); 17/10/13 18:11:44 INFO spark.SparkContext: Created broadcast 0 from newAPIHadoopFile at ReadsSparkSource.java:112; 17/10/13 18:11:44 INFO memory.MemoryStore: Block broadcast_1 stored as values in memory (estim",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:14496,Log,Logging,14496,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,1,['Log'],['Logging']
Testability," Instructions. The github issue tracker is for bug reports, feature requests, and API documentation requests. General questions about how to use the GATK, how to interpret the output, etc. should be asked on the [official support forum](http://gatkforums.broadinstitute.org/gatk).; - Search the existing github issues to see if your issue (or something similar) has already been reported. If the issue already exists, you may comment there to inquire about the progress.; - Determine whether your issue is a **bug report**, a **feature request**, or a **documentation request** (for tool/class javadoc only -- for forum docs please post there); - Consider if your ""issue"" is better addressed on the GATK forum: http://gatkforums.broadinstitute.org/gatk Post there if you have questions about expected tool behavior, output format, unexpected results, or generally any question that does not fit into the categories above; - Use a **concise** yet **descriptive** title; - Choose the corresponding template block below and fill it in, replacing or deleting text in italics (surrounded by `_`) as appropriate; - Delete the other template blocks and this header. ----. ## Feature request. ### Tool(s) or class(es) involved. VariantRecalibrator. ### Description. VariantRecalibrator automatically runs the generated Rscript to produce recalibration plots. This is usually good and convenient, but it requires that all *R* dependencies must be installed in the same environment in the current running GATK environment. This is not necessarily the case for sandbox-based package managers e.g. docker or conda. A viable fix on the user's side is to include R dependencies with GATK in e.g. docker or conda. But I think I would prefer if my packages were as independent of each other as possible. It would be great if **VariantRecalibrator had an option to write but not run the Rscript for recalibration plots.** Then, the user can call the Rscript in an appropriate e.g. R conda environment or docker image.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7697:1553,sandbox,sandbox-based,1553,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7697,1,['sandbox'],['sandbox-based']
Testability, Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:773); 	at org.testng.TestRunner.run(TestRunner.java:623); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); 	at org.testng.SuiteRunner.run(SuiteRunner.java:259); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); 	at org.testng.TestNG.run(TestNG.java:1018); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.di,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:4888,test,testng,4888,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['test'],['testng']
Testability," QUAL FILTER INFO FORMAT sample; 13 32911888 . A G 177.64 . AC=1;AF=0.500;AN=2;BaseQRankSum=0.086;DP=21;ExcessHet=3.0103;FS=1.719;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=8.46;ReadPosRankSum=0.475;SOR=0.368 GT:AD:DP:GQ:PL 0/1:13,8:21:99:185,0,339; 13 32913055 . A G 402.06 . AC=2;AF=1.00;AN=2;DP=15;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=26.80;SOR=1.112 GT:AD:DP:GQ:PL 1/1:0,15:15:45:416,45,0; 13 32915005 . G C 378.06 . AC=2;AF=1.00;AN=2;DP=13;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=29.08;SOR=1.179 GT:AD:DP:GQ:PL 1/1:0,13:13:39:392,39,0; 13 32929232 . A G 168.64 . AC=1;AF=0.500;AN=2;BaseQRankSum=1.335;DP=16;ExcessHet=3.0103;FS=0.000;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=15.33;ReadPosRankSum=-1.442;SOR=0.446 GT:AD:DP:GQ:PL 0/1:5,6:11:99:176,0,121; 13 32929387 . T C 209.02 . AC=2;AF=1.00;AN=2;DP=7;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=29.86;SOR=1.609 GT:AD:DP:GQ:PL 1/1:0,7:7:21:223,21,0; ```. Execution log:; ```; Using GATK jar /gatk/gatk-package-4.2.2.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /gatk/gatk-package-4.2.2.0-local.jar HaplotypeCaller --input sample.bam --annotation OrientationBiasReadCounts --intervals b37.chr13.bed --reference hs37d5.fa --output sample.vcf.gz; 03:56:44.380 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.2.2.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jan 06, 2023 3:56:44 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 03:56:44.703 INFO HaplotypeCaller - ------------------------------------------------------------; 03:56:44.704 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.2.2.0; 03:56:44.704 INFO HaplotypeCaller - For support and documentation",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8149:2105,log,log,2105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8149,1,['log'],['log']
Testability," QUALapprox and other features (#7146); - Job Add labels to BQ operations from GATK (Issues-199) (#7115); - parse map to list to avoid brackets and spaces in vcf output (#7168); - #259 Inline schema for importgenomes.wdl (#7171); - Created AvroFileReader and unittest, Update ExtractCohort and ExtractCohortEngine (#7174); - #224 Import WDL: handle 15 TB /table /day import limit (#7167); - #260 filter out AS_QD, SOR, FS from cohort extract VCF (#7173); - Full scientific validation via end to end comparison of filtered results between WARP and BQ (#7179); - Cherry pick of commits to fix GATK tests from master (#7183); - ExtractCohort supports -XL exclusion and follows intervals, other optimizations (#7181); - ExtractFeatures supports -XL exclusion and follows intervals, other optimizations (#7184); - change 0/0 GQ0 sites to nocalls (#7190); - updated (#7195); - Rename ""metadata"" table to ""sample_info"" table, fix vet schema (#7196); - Allow users to specify VQSLOD sensitivity and apply threshold in ExtractCohort (#7194); - Calculate and Store site-level QCs (#7197); - Filter Failing QC Sites from Extract (#7201); - WDLize GvsPrepareCallset (briefly known as CreateCohortTable) (#7200); - default drop_state to 60, but allow NONE as input (#7206); - SA support and consistent naming for all GVS WDLs (#7205); - fix GvsExtractCallset inputs file (#7210); - add clustering to tables (#7207); - add vqsr cutoffs to GvsExtractCallset wdl; clean up dockstore yml (#7209); - Avro test (#7192); - Enable call caching of TSV generation in GvsImportGenomes (#7226); - 266 Clean up ExtractCohort -- remove query mode param (#7227); - 288 Add an excess alleles param (#7221); - take sample name as a param (#7236); - How to run GIAB comparisons (#7237); - Update GvsCreateFilterSet.wdl (#7239); - Use GatherVcfsCloud in GvsCreateFilterSet.wdl (#7241); - parameterize TTL with defaults, reduce memory allocation (#7244); - Addressing OOM in CohortExtract (#7245); - make outputs optional, change case",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:12833,test,tests,12833,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,4,['test'],"['test', 'tests']"
Testability," SNP sites where a deletion was not called, since we still assign the haplotype to ""spanning deletion"" if there was a deletion at that site. . For indels however this can cause some extra false positives at sites like this one (the left variant under the deletion in the gatk track):; <img width=""1616"" alt=""Screen Shot 2020-07-14 at 4 09 47 PM"" src=""https://user-images.githubusercontent.com/16102845/87471543-86a2ee80-c5ec-11ea-9cdd-8acf1beb8c14.png"">; <img width=""178"" alt=""Screen Shot 2020-07-14 at 4 10 45 PM"" src=""https://user-images.githubusercontent.com/16102845/87471596-9de1dc00-c5ec-11ea-9d4c-786e114d57d3.png"">; This is a messy site that is perhaps complicated by representation issues but we can see that GATK emitted an extra insertion underlying the longer event (which was marked as homozygous in the truth set). Following the same logic as above we can see DRAGEN did not make the call because it assigned all of the likelihoods for the longer deletion to the reference when compared against the shorter insertion underlying it which outweighed the event, whereas in GATK the likelihood from that longer event was assigned to the spanning deletion allele. Since there was little evidence for the reference at this site the insertion ended up being called. This particular pattern can also occur because there are differing lengths of deletions at a site that is anchored on the right, causing noise when calling the events independently from eachother (whereas we might not have called them independently if they were anchored from the left and thus started on the same base). Generally this pattern of differing haplotype allele assignments has a particularly pronounced effect in low complexity regions where it is highly likely there are apparent deletions relative to the reference in the data and can result in significant differences in calling. . Right now there is a tradeoff (when running DRAGEN-GATK mode) for running `--disable-spanning-event-genotyping` in GATK. Given th",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6707:2851,log,logic,2851,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6707,1,['log'],['logic']
Testability," T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068168 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068169 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068170 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 1006",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3194,test,test,3194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability," The PCR error model applied pre-pairHMM does not seem to always do the right thing. . This is explained in class TandemRepeatFinder JavaDoc (soon to be merged in). Moreover the code responsible to detect STR repeats seems rather inefficient doing multiple passes on the read bases for each position on the read when it seems that it must be possible to accomplish the same just doing at most one pass per possible STR length. This task is to fix the PCR artifact modeling issues evaluating whether there is at least no a drop in calling accuracy all. Also try to make the code more efficient. ---. @ldgauthier commented on [Tue Jul 21 2015](https://github.com/broadinstitute/gsa-unstable/issues/1064#issuecomment-123431158). @yfarjoun and I just added a Palantir issue for this this morning -- should the analysis wait until you're done updating the code?. ---. @vruano commented on [Tue Jul 21 2015](https://github.com/broadinstitute/gsa-unstable/issues/1064#issuecomment-123431971). Just waiting for test to pass...; So you knew about this issue already?. ---. @ldgauthier commented on [Tue Jul 21 2015](https://github.com/broadinstitute/gsa-unstable/issues/1064#issuecomment-123432816). We were talking about it because the PCR-free option doesn't get used in production (on PCR-free data) and we didn't know how much difference it actually makes. ---. @vruano commented on [Tue Jul 21 2015](https://github.com/broadinstitute/gsa-unstable/issues/1064#issuecomment-123481297). Merged. ; I think that you can go ahead with the analysis and I would borrow your set up to see if the eventual code update improves things for PCR-plus. . ---. @vruano commented on [Tue Jul 21 2015](https://github.com/broadinstitute/gsa-unstable/issues/1064#issuecomment-123481614). Sorry for the confusion, that merge doesn't solve this issue but one one related to the comp. performance of the existing code. . ---. @eitanbanks commented on [Tue Jul 21 2015](https://github.com/broadinstitute/gsa-unstable/issues/1064#",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2915:1205,test,test,1205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2915,1,['test'],['test']
Testability," VCF for the input (since this has both non-AS and AS annotations; EDIT: Scratch that, it only has AS_InbreedingCoeff and AS_QD), 2) the Omni SNP training/truth VCF (yielding ~3.5k training), and 3) the Mills training/truth VCF (yielding ~500 training). Incidentally, VariantRecalibrator SNP and INDEL runs both fail to converge on these small training sets without the #7709 fix, but do converge with it. I still need to check if enough multiallelics are included here; if not, I'll choose a different snippet. EDITEDIT: Now using gs://broad-gotc-test-storage/joint_genotyping/exome/scientific/truth/master/gather_vcfs_high_memory/small_callset_low_threshold.vcf.gz provided by @ldgauthier, which does have AS annotations.; ; We'll use expected outputs here as inputs to downstream steps, but rather than provide the expected outputs directly, we'll create copies of them and provide those as inputs. This will make the tests better encapsulated. However, it should be relatively easy to update the whole chain of test files, should one choose to do so. EDIT: Let's just provide the expected outputs directly. So it'll be even easier to update the whole chain---just set the flags for all three tools to overwrite the expected results.; ; We test the Cartesian product of the following options: 1) non-allele-specific vs. allele-specific, 2) SNP vs. indel vs. both, and 3) positive vs. positive-unlabeled. Downstream, we'll further subset to a subset of these options, since training/scoring functionality shouldn't really change across some of them.; ; I'm currently just using call outs to system commands to diff and h5diff the VCFs and HDF5s, respectively. I think the latter command should be available in the GATK Conda environment. This will be a bit awkward, in the sense that the tests for this tool will require the Conda environment, but the tool itself will not. But I think this is probably preferable to writing test code to compare HDF5s, minimal though that might be, since the schema",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059:1985,test,test,1985,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948059,1,['test'],['test']
Testability, [...titute/hellbender/engine/TwoPassVariantWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvVHdvUGFzc1ZhcmlhbnRXYWxrZXIuamF2YQ==) | `95% <95%> (ø)` | `4 <4> (?)` | |; | [...ery/inference/SimpleNovelAdjacencyInterpreter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1NpbXBsZU5vdmVsQWRqYWNlbmN5SW50ZXJwcmV0ZXIuamF2YQ==) | `80.435% <0%> (-19.565%)` | `15% <0%> (+8%)` | |; | [.../DiscoverVariantsFromContigAlignmentsSAMSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvRGlzY292ZXJWYXJpYW50c0Zyb21Db250aWdBbGlnbm1lbnRzU0FNU3BhcmsuamF2YQ==) | `88.889% <0%> (-4.659%)` | `49% <0%> (+27%)` | |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `91.667% <0%> (-3.571%)` | `11% <0%> (+2%)` | |; | [...r/utils/read/markduplicates/sparkrecords/Pair.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9QYWlyLmphdmE=) | `93.893% <0%> (-1.612%)` | `44% <0%> (+22%)` | |; | [...iscoverFromLocalAssemblyContigAlignmentsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4744/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlckZyb21Mb2NhbEFzc2VtYmx5Q29udGlnQWxpZ25tZW50c1NwYXJrLmphdmE=) | `76.048% <0%> (-0.474%)` | `5% <0%> (ø)` | |; | [...lbender/tools/spark/sv/discovery/SimpleSVType.java](https://c,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4744#issuecomment-387807462:2236,test,test,2236,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4744#issuecomment-387807462,1,['test'],['test']
Testability, [29990.6](https://travis-ci.com/broadinstitute/gatk/jobs/317870153) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.6/tests/test/index.html) |; | integration | oraclejdk8 | [29990.12](https://travis-ci.com/broadinstitute/gatk/jobs/317870159) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.12/tests/test/index.html) |; | python | openjdk8 | [29990.5](https://travis-ci.com/broadinstitute/gatk/jobs/317870152) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.5/tests/test/index.html) |; | cloud | openjdk8 | [29990.1](https://travis-ci.com/broadinstitute/gatk/jobs/317870147) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.1/tests/test/index.html) |; | cloud | openjdk11 | [29990.15](https://travis-ci.com/broadinstitute/gatk/jobs/317870162) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.15/tests/test/index.html) |; | integration | openjdk11 | [29990.13](https://travis-ci.com/broadinstitute/gatk/jobs/317870160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.13/tests/test/index.html) |; | integration | openjdk8 | [29990.2](https://travis-ci.com/broadinstitute/gatk/jobs/317870149) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.2/tests/test/index.html) |; | unit | openjdk11 | [29990.14](https://travis-ci.com/broadinstitute/gatk/jobs/317870161) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29990.4](https://travis-ci.com/broadinstitute/gatk/jobs/317870151) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.4/tests/test/index.html) |; | unit | openjdk8 | [29990.3](https://travis-ci.com/broadinstitute/gatk/jobs/317870150) | [logs](https://storage.googleapis.com/hellben,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629:1225,test,tests,1225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629,2,['test'],"['test', 'tests']"
Testability, [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327040) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.3/tests/test/index.html) |; | unit | openjdk11 | [36015.13](https://app.travis-ci.com/broadinstitute/gatk/jobs/537327050) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36015.13/tests/test/index.html) |; | unit | openjdk8 | [36015.3](https://app.travis-ci.com/broadinstitute/gatk/jo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7467#issuecomment-919216110:1442,test,test-logs,1442,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7467#issuecomment-919216110,1,['test'],['test-logs']
Testability," [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4573,benchmark,benchmarking,4573,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability," [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4573,benchmark,benchmarking,4573,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability," [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.docker_placeholder"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4676,benchmark,benchmarking,4676,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability," [VS-472] (#7905); - Fix bug and update images (#7912); - VS 483 Beta user wdl (#7894); - Core storage model cost [VS-473] (#7913); - Update Quickstart & Integration to use re-blocked v2 gVCFs [VS-491] (#7924); - KM GVS documentation (#7903); - Track BigQuery costs of GVS python VS-480 (#7915); - Read cost observability table [VS-475] (#7923); - Fix Race Condition, Add Support for Extract by Array of Sample Names (ie from a Sample Set) (#7917); - Rightsize import batches [VS-486] (#7925); - [AoU DRC] Support uppercase site_ids for reblocking (#7929); - Populate cost metadata for GATK tasks. (#7919); - remove accidentally added input (#7931); - VS_492 - Beta User Jar release (#7934); - Cost WDL should throw on FISS API errors [VS-518] (#7942); - Fix bad check for missing workflow name [VS-520] (#7943); - Remove usage of service account from GvsValidateVAT.wdl (#7937); - refactoring for testablity (#7946); - More import retries [VS-532] (#7953); - A few last doc changes (#7927); - WDL to extract a single callset cost (BQ only, not Terra) (#7940); - Temporarily swap in Corretto for Temurin as we can't download Temurin. (#7969); - GL-548 - Update CreateVat code to handle samples that do not contain all population groups. (#7965); - Restore Temurin 11 [VS-570] (#7972); - Add table size check to quickstart integration test [VS-501] (#7970); - Consolidate various docs for AoU callset generation into one to rule them all [VS-553] (#7971); - VS-567. Removing usage of ServiceAccount from CreateVat related WDLs (#7974); - WDL to extract Avro files for Hail import [VS-579] (#7981); - Removed usage of service account from WDLs (#7985); - Document steps for GVS cleanup for base use case [VS-586] (#7989); - Change backticks to single quotes in several error messages - causing shell to attempt to execute. (#7995); - VS-598 - Minor update to AoU Documentation. (#7994); - Allow for incremental addition of data to alt_allele [VS-52] (#7993); - Minor AoU Documentation Update (#7999); -",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:26473,test,testablity,26473,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,2,['test'],['testablity']
Testability," [hs_err_pid100.log](https://github.com/broadinstitute/gatk/files/6203288/hs_err_pid100.log); [hs_err_pid164.log](https://github.com/broadinstitute/gatk/files/6203289/hs_err_pid164.log); [hs_err_pid274.log](https://github.com/broadinstitute/gatk/files/6203290/hs_err_pid274.log); [hs_err_pid400.log](https://github.com/broadinstitute/gatk/files/6203291/hs_err_pid400.log); [hs_err_pid482.log](https://github.com/broadinstitute/gatk/files/6203292/hs_err_pid482.log); [hs_err_pid711.log](https://github.com/broadinstitute/gatk/files/6203293/hs_err_pid711.log); [hs_err_pid735.log](https://github.com/broadinstitute/gatk/files/6203294/hs_err_pid735.log); [hs_err_pid801.log](https://github.com/broadinstitute/gatk/files/6203295/hs_err_pid801.log); [hs_err_pid825.log](https://github.com/broadinstitute/gatk/files/6203296/hs_err_pid825.log); [hs_err_pid849.log](https://github.com/broadinstitute/gatk/files/6203297/hs_err_pid849.log); [otherFiles.zip](https://github.com/broadinstitute/gatk/files/6203305/otherFiles.zip); [in2510-8.orientationFilter.vcf.txt](https://github.com/broadinstitute/gatk/files/6203356/in2510-8.orientationFilter.vcf.txt); *VCF extension appended with .txt to satisfy GitHub's upload requirements*. #### Expected behavior; Worked on 7 other files generated with the same pipeline. . #### Actual behavior; Unsure why this last one is causing a segfault. The VCF included is not the whole VCF submitted originally. I went cutting out lines from the original until I could isolate it down to a minimal set required to reproduce the crash (I included all of the crash logs generated in case it can help). I was expecting to find a single line or maybe two that were required to reproduce this issue, but that range appears to be needed. Eliminating either the first or last line from the range will make the program work again. Did not attempt to remove lines from the middle of the range yet to see if they're necessary to cause the fault, but it's 2am and I should probably sleep.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7162:8052,log,logs,8052,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7162,1,['log'],['logs']
Testability, `18% <0%> (+3%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlTXVsdGlTb3VyY2UuamF2YQ==) | `76.471% <0%> (-0.452%)` | `15% <0%> (+4%)` | |; | [...lbender/utils/read/SAMRecordToGATKReadAdapter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1NBTVJlY29yZFRvR0FUS1JlYWRBZGFwdGVyLmphdmE=) | `92.027% <0%> (-0.433%)` | `270% <0%> (+134%)` | |; | [...ute/hellbender/utils/read/ArtificialReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL0FydGlmaWNpYWxSZWFkVXRpbHMuamF2YQ==) | `93.909% <0%> (-0.186%)` | `122% <0%> (+52%)` | |; | [...itute/hellbender/engine/spark/GATKRegistrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1JlZ2lzdHJhdG9yLmphdmE=) | `100% <0%> (ø)` | `4% <0%> (+2%)` | :arrow_up: |; | [...utils/test/ReadsPreprocessingPipelineTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRzUHJlcHJvY2Vzc2luZ1BpcGVsaW5lVGVzdERhdGEuamF2YQ==) | `1.25% <0%> (+0.403%)` | `1% <0%> (ø)` | :arrow_down: |; | [...tructuralVariationDiscoveryArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9TdHJ1Y3R1cmFsVmFyaWF0aW9uRGlzY292ZXJ5QXJndW1lbnRDb2xsZWN0aW9uLmphdmE=) | `97.143% <0%> (+0.476%)` | `0% <0%> (ø)` | :arrow_down: |; | ... and [15 more](https://codecov.io/gh/broadinstitute/gatk/pull/4292/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4292#issuecomment-361359755:3366,test,test,3366,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4292#issuecomment-361359755,1,['test'],['test']
Testability, `43 <0> (+8)` | :arrow_up: |; | [...itute/hellbender/tools/spark/pathseq/PSScorer.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9wYXRoc2VxL1BTU2NvcmVyLmphdmE=) | `89.595% <0%> (+0.578%)` | `54% <0%> (+1%)` | :arrow_up: |; | [.../exome/pulldown/BayesianHetPulldownCalculator.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9wdWxsZG93bi9CYXllc2lhbkhldFB1bGxkb3duQ2FsY3VsYXRvci5qYXZh) | `86.624% <0%> (+0.637%)` | `35% <0%> (+1%)` | :arrow_up: |; | [...er/tools/picard/analysis/CollectGcBiasMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9waWNhcmQvYW5hbHlzaXMvQ29sbGVjdEdjQmlhc01ldHJpY3MuamF2YQ==) | `0.794% <0%> (+0.794%)` | `1% <0%> (+1%)` | :arrow_up: |; | [...utils/test/ReadsPreprocessingPipelineTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRzUHJlcHJvY2Vzc2luZ1BpcGVsaW5lVGVzdERhdGEuamF2YQ==) | `0.847% <0%> (+0.847%)` | `1% <0%> (+1%)` | :arrow_up: |; | [...spark/sv/evidence/FindBreakpointEvidenceSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmsuamF2YQ==) | `67.347% <0%> (+1.02%)` | `34% <0%> (+1%)` | :arrow_up: |; | [...ute/hellbender/utils/test/IntegrationTestSpec.java](https://codecov.io/gh/broadinstitute/gatk/pull/3409?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0ludGVncmF0aW9uVGVzdFNwZWMuamF2YQ==) | `73.118% <0%> (+1.075%)` | `25% <0%> (ø)` | :arrow_down: |; | [...e/conversion/allelicbalancecaller/CNLOHCaller.java](https://codecov.io/g,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3409#issuecomment-320273200:2205,test,test,2205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3409#issuecomment-320273200,1,['test'],['test']
Testability," `AssemblyContigAlignmentsConfigPicker`; ; ----------; ## Consolidate logic, bump test coverage and update how variants are represented. ### consolidate logic; When initially prototyped, there's redundancy in logic for simple variants, now it's time to consolidate. - [x] `AssemblyContigWithFineTunedAlignments`; - [x] `hasIncompletePicture()`. - [x] `AssemblyContigAlignmentSignatureClassifier`; - [x] Don't make so many splits; - [x] Reduce `RawTypes` into fewer cases; ; - [x] `ChimericAlignment`; - [x] update documentation; - [x] implement a `getCoordinateSortedRefSpans()`, and use in `BreakpointsInference`; - [x] `isNeitherSimpleTranslocationNorIncompletePicture()`; - [x] `extractSimpleChimera()`. ### bump test coverage; Once code above is consolidated, bump test coverage, particularly for the classes above and the following poorly-covered classes; - [x] `ChimericAlignment`; - [x] `isForwardStrandRepresentation()`; - [x] `splitPairStrongEnoughEvidenceForCA()` ; - [x] `parseOneContig()` (needs testing because we need it for simple-re-interpretation for CPX variants) Note that `nextAlignmentMayBeInsertion()` is currently broken in the sense that when using this to filter out alignments whose ref span is contained by another, check if the two alignments involved are head/tail. - [x] `BreakpointsInference` & `BreakpointComplications`. - [x] `NovelAdjacencyAndAltHaplotype`; - [x] `toSimpleOrBNDTypes()`. - [x] `SimpleNovelAdjacencyAndChimericAlignmentEvidence`; - [x] serialization test. - [x] `AnnotatedVariantProducer`; - [x] `produceAnnotatedBNDmatesVcFromNovelAdjacency()`. - [x] `BreakEndVariantType`. - [ ] `SvDiscoverFromLocalAssemblyContigAlignmentsSpark` integration test; . ### update how variants are represented ; Implement the following representation changes that should make type-based evaluation easier; - [x] change `INSDUP` to`INS` when the duplicated ref region, denoted with annotation `DUP_REPEAT_UNIT_REF_SPAN`, is shorter than 50 bp.; - [x] change scarred del",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4111#issuecomment-375438021:1217,test,test,1217,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4111#issuecomment-375438021,6,['test'],"['test', 'testing']"
Testability," ```; org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations FAILED; java.lang.AssertionError: Iterators differ at element [9]: FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification""> != FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant.""> expected [FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">] but found [FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant."">]; at org.testng.Assert.fail(Assert.java:93); at org.testng.Assert.failNotEquals(Assert.java:512); at org.testng.Assert.assertEqualsImpl(Assert.java:134); at org.testng.Assert.assertEquals(Assert.java:610); at org.testng.Assert.assertEquals(Assert.java:578); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertHeadersMatch(VariantAnnotatorIntegrationTest.java:66); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.runVariantAnnotatorAndAssertSomething(VariantAnnotatorIntegrationTest.java:92); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:55); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:49); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations(VariantAnnotatorIntegrationTest.java:224); Exception in thread ""Thread-5"" java.nio.file.ClosedFileSystemException; 	at com.google.common.jimfs.FileSystemState.checkOpen(FileSystemState.java:64); 	at com.google.common.jimfs.JimfsFile",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414:1028,assert,assertEquals,1028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414,2,"['Assert', 'assert']","['Assert', 'assertEquals']"
Testability," acls disabled; users with view permissions: Set(hdfs); groups with view permissions: Set(); users with modify permissions: Set(hdfs); groups with modify permissions: Set(); 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'sparkDriver' on port 45754.; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering MapOutputTracker; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering BlockManagerMaster; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 17/10/13 18:11:34 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up; 17/10/13 18:11:34 INFO storage.DiskBlockManager: Created local directory at /tmp/hdfs/blockmgr-ea0e0669-2981-4277-80a0-a67eddf1001d; 17/10/13 18:11:34 INFO memory.MemoryStore: MemoryStore started with capacity 366.3 MB; 17/10/13 18:11:34 INFO spark.SparkEnv: Registering OutputCommitCoordinator; 17/10/13 18:11:34 INFO util.log: Logging initialized @3816ms; 17/10/13 18:11:34 INFO server.Server: jetty-9.3.z-SNAPSHOT; 17/10/13 18:11:34 INFO server.Server: Started @3902ms; 17/10/13 18:11:34 INFO server.AbstractConnector: Started ServerConnector@131ba51c{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 17/10/13 18:11:34 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@710ae6a7{/jobs,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7b211077{/jobs/json,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@62b0bf85{/jobs/job,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6f07d414{/jobs/job/json,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@40faff12{/stages,null,AVAILABLE,@Spark}; 17/10/13 18:11:34 INFO handler.Conte",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775:5295,log,log,5295,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-336412775,3,"['Log', 'log']","['Logging', 'log']"
Testability," addressed on the GATK forum: http://gatkforums.broadinstitute.org/gatk Post there if you have questions about expected tool behavior, output format, unexpected results, or generally any question that does not fit into the categories above; - Use a **concise** yet **descriptive** title; - Choose the corresponding template block below and fill it in, replacing or deleting text in italics (surrounded by `_`) as appropriate; - Delete the other template blocks and this header. ----. ## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_; GenotypeGVCFs, /public2/home/gaoshibin/software/gatk-4.4.0.0/gatk --java-options ""-Xmx160g -Djava.io.tmpdir=./tmp_fat"" GenotypeGVCFs -R /public2/home/gaoshibin/B73_REF/Zea_mays.AGPv4.dna.toplevel.fa -V gendb://./CHR9_gvcf_database -G StandardAnnotation -L 9:1-5000000 -O ./test.vcf.gz --genomicsdb-shared-posixfs-optimizations true; ### Affected version(s); - [ 4.1.9.0-4.4.0.0] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._; The ParaStor file system suffers from low CPU operating efficiency and extremely slow read and write speeds. If I test it on my own mobile hard drive, it's normal. The file format of my mobile hard disk is EXT4; #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_; /public2/home/gaoshibin/software/gatk-4.4.0.0/gatk --java-options ""-Xmx160g -Djava.io.tmpdir=./tmp_fat"" GenotypeGVCFs -R /public2/home/gaoshibin/B73_REF/Zea_mays.AGPv4.dna.toplevel.fa -V gendb://./CHR9_gvcf_database -G StandardAnnotation -L 9:1-5000000 -O ./test.vcf.gz --genomicsdb-shared-posixfs-optimizations true; #### Expected behavior; _Tell us what should happen_; The ParaStor file system suffers from",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8546:1724,test,test,1724,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8546,1,['test'],['test']
Testability," after smoothing iteration: 311; 09:48:33.672 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:48:34.470 INFO GibbsSampler - Starting MCMC sampling.; 09:48:36.720 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:39.070 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:41.417 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - MCMC sampling complete.; 09:48:43.749 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:43.771 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:44.116 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:48:44.116 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:48:44.424 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:48:44.424 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:48:44.714 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:48:44.714 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:48:44.991 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:48:44.991 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:48:45.104 INFO GibbsSampler - Starting MCMC sampling.; 09:48:51.555 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:58.171 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:05.022 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:11.512 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:16612,log,log,16612,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:49:12.363 INFO GibbsSampler - Starting MCMC sampling.; 09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:49:23.323 INFO GibbsSampler - Starting MCMC sampling.; 09:49:29.603 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:36.116 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:42.766 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:49.322 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:18911,log,log,18911,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 315; 09:47:56.025 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:56.852 INFO GibbsSampler - Starting MCMC sampling.; 09:47:59.368 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:01.836 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:04.204 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - MCMC sampling complete.; 09:48:06.589 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:06.609 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:06.967 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.667518...; 09:48:06.967 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.041090, outlierProbability=0.031116}; 09:48:07.271 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.280111...; 09:48:07.271 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.036781, outlierProbability=0.037210}; 09:48:07.582 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.550266...; 09:48:07.582 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149834, biasVariance=0.034708, outlierProbability=0.039514}; 09:48:07.846 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.121676...; 09:48:07.846 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147684, biasVariance=0.033674, outlierProbability=0.039514}; 09:48:07.961 INFO GibbsSampler - Starting MCMC sampling.; 09:48:14.260 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:20.656 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:27.049 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:33.639 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:14313,log,log,14313,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 320; 09:47:17.942 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:18.756 INFO GibbsSampler - Starting MCMC sampling.; 09:47:21.195 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:23.597 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:26.031 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - MCMC sampling complete.; 09:47:28.533 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:47:28.553 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:47:28.883 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599193.821455...; 09:47:28.884 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.041615, outlierProbability=0.031024}; 09:47:29.188 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599181.471228...; 09:47:29.188 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.036547, outlierProbability=0.036766}; 09:47:29.513 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599179.528974...; 09:47:29.514 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149492, biasVariance=0.034434, outlierProbability=0.039341}; 09:47:29.794 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599179.050215...; 09:47:29.794 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147343, biasVariance=0.033400, outlierProbability=0.039341}; 09:47:29.914 INFO GibbsSampler - Starting MCMC sampling.; 09:47:36.149 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:42.958 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:49.518 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:55.984 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:12014,log,log,12014,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 326; 09:46:39.764 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:40.559 INFO GibbsSampler - Starting MCMC sampling.; 09:46:42.928 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:45.335 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:47.720 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - MCMC sampling complete.; 09:46:50.130 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:50.155 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:50.491 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599186.382799...; 09:46:50.491 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.041597, outlierProbability=0.031043}; 09:46:50.793 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599173.973431...; 09:46:50.793 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.036521, outlierProbability=0.036858}; 09:46:51.096 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599172.045766...; 09:46:51.096 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149513, biasVariance=0.034385, outlierProbability=0.039399}; 09:46:51.370 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599171.568776...; 09:46:51.370 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147363, biasVariance=0.033351, outlierProbability=0.039399}; 09:46:51.487 INFO GibbsSampler - Starting MCMC sampling.; 09:46:57.921 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:04.479 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:11.286 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:17.895 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:9715,log,log,9715,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 341; 09:46:01.622 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:02.459 INFO GibbsSampler - Starting MCMC sampling.; 09:46:04.896 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:07.292 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:09.705 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - MCMC sampling complete.; 09:46:12.179 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:12.202 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:12.546 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599161.730531...; 09:46:12.546 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.041338, outlierProbability=0.030947}; 09:46:12.859 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599150.005317...; 09:46:12.859 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.036533, outlierProbability=0.037484}; 09:46:13.165 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599148.402059...; 09:46:13.165 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149236, biasVariance=0.034264, outlierProbability=0.038997}; 09:46:13.451 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599147.957754...; 09:46:13.451 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147087, biasVariance=0.033230, outlierProbability=0.038997}; 09:46:13.573 INFO GibbsSampler - Starting MCMC sampling.; 09:46:19.986 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:26.612 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:33.274 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:39.723 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:7416,log,log,7416,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 398; 09:40:44.924 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:40:45.760 INFO GibbsSampler - Starting MCMC sampling.; 09:40:48.121 INFO GibbsSampler - 25 of 100 samples generated.; 09:40:50.618 INFO GibbsSampler - 50 of 100 samples generated.; 09:40:53.062 INFO GibbsSampler - 75 of 100 samples generated.; 09:40:55.518 INFO GibbsSampler - 100 of 100 samples generated.; 09:40:55.518 INFO GibbsSampler - MCMC sampling complete.; 09:40:55.518 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:40:55.539 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:40:55.871 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599072.084975...; 09:40:55.871 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.150935, biasVariance=0.041480, outlierProbability=0.032502}; 09:40:56.161 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599060.773672...; 09:40:56.161 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.153086, biasVariance=0.035405, outlierProbability=0.036256}; 09:40:56.492 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599057.851664...; 09:40:56.492 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.033414, outlierProbability=0.038948}; 09:40:56.775 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599057.518701...; 09:40:56.775 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.032380, outlierProbability=0.038948}; 09:40:56.888 INFO GibbsSampler - Starting MCMC sampling.; 09:41:03.070 INFO GibbsSampler - 25 of 100 samples generated.; 09:41:09.768 INFO GibbsSampler - 50 of 100 samples generated.; 09:41:16.127 INFO GibbsSampler - 75 of 100 samples generated.; 09:41:22.748 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:2123,log,log,2123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," after smoothing iteration: 398; 09:45:23.663 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:45:24.508 INFO GibbsSampler - Starting MCMC sampling.; 09:45:26.962 INFO GibbsSampler - 25 of 100 samples generated.; 09:45:29.471 INFO GibbsSampler - 50 of 100 samples generated.; 09:45:31.911 INFO GibbsSampler - 75 of 100 samples generated.; 09:45:34.335 INFO GibbsSampler - 100 of 100 samples generated.; 09:45:34.335 INFO GibbsSampler - MCMC sampling complete.; 09:45:34.335 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:45:34.359 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:45:34.724 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599072.084975...; 09:45:34.724 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.150935, biasVariance=0.041480, outlierProbability=0.032502}; 09:45:35.017 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599060.773672...; 09:45:35.018 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.153086, biasVariance=0.035405, outlierProbability=0.036256}; 09:45:35.337 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599057.851664...; 09:45:35.337 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.033414, outlierProbability=0.038948}; 09:45:35.631 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599057.518701...; 09:45:35.631 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147247, biasVariance=0.032380, outlierProbability=0.038948}; 09:45:35.748 INFO GibbsSampler - Starting MCMC sampling.; 09:45:41.926 INFO GibbsSampler - 25 of 100 samples generated.; 09:45:48.545 INFO GibbsSampler - 50 of 100 samples generated.; 09:45:54.915 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:01.577 INFO GibbsSampler - 100 of 100 samples g",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:5117,log,log,5117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," also removes by debugging code and comments. I think it is ready for a review. To some other questions you had above:. 1) The HashMap<FeatureInput<VariantContext>, HashMap<String, Collection<VariantContext>>> can be wrapped in a class with just a couple of methods, so we don't have to manifest that long type all over the place. I realize that's non-optimal, but this isnt anything I introduced here. I would really like to keep this PR as limited as we can, and address some larger refactoring in a different PR, once we've migrated to MultiVariantWalkerGroupedOnStart. 2) I know this PR still in an interim state, but passing the VariantWalker in as an argument to the comp methods doesn't seem like a step forward to me. If we can't solve that problem completely in this PR (which is fine, I'm all for trying to contain this), are those changes necessary ? Perhaps that part should just wait for the next round. As noted above, I'd like to propose this as iterative, with a second PR coming soon. I did this b/c it moved us toward not needing to pass around the walker. It minimizes the code that has access to the walker (as opposed to setting it after creating the instance of the Evaluator, etc. Yes, it exposes it for two methods, but those classes no longer hang on to it. I would like to ultimately remove this entirely. 3) To re-iterate testEvalTrackWithoutGenotypesWithSampleFields: the input file, noGenotypes.vcf, has a header dictionary with the full set of contigs, and a single variant from chr 1. Prior to this PR, the test executed and supplied b37_reference_20_21 as the reference FASTA. The variant in that VCF is from chr 1, not 20/21. The old code should have failed. It didnt, probably since it was preferentially taking the sequence dictionary from the VCF header and basically ignoring the FASTA. It didnt make much practical difference, but I believe my change here is right. I added the test case testEvalTrackWithoutGenotypesWithSampleFieldsWrongRef to cover that error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130:1862,test,testEvalTrackWithoutGenotypesWithSampleFields,1862,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130,4,['test'],"['test', 'testEvalTrackWithoutGenotypesWithSampleFields', 'testEvalTrackWithoutGenotypesWithSampleFieldsWrongRef']"
Testability," also tried latest gatk version4.2.2.0, same result. Java version is ``` OpenJDK Runtime Environment (build 1.8.0_252-b09) ```; ```; /gatk-4.0.11.0/gatk --java-options ""-Xmx4G"" HaplotypeCaller \; -R GRCh38.p2.fa \; -I RT4_STD.bam \; -ERC GVCF \; -L chr16 \; -O RT4_STD.g.vcf \; -new-qual; ```; - Error message is also different; - First one is :; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00002aaad9f1e54a, pid=7818, tid=0x00002aaaabdce700; #; # JRE version: Java(TM) SE Runtime Environment (8.0_111-b14) (build 1.8.0_111-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [libgkl_pairhmm_omp1890484777463615571.so+0x6954a] double compute_full_prob_avxd<double>(testcase*)+0x34a; #; # Core dump written. Default location: core or core.7818; #; # An error report file with more information is saved as:; # hs_err_pid7818.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; ```. -Second one is ; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000035dfe84364, pid=160107, tid=0x00002aaaabdce700; #; # JRE version: Java(TM) SE Runtime Environment (8.0_111-b14) (build 1.8.0_111-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 ); # Problematic frame:; # C [libc.so.6+0x84364]; #; # Core dump written. Default location: core or core.160107; #; # An error report file with more information is saved as:; # hs_err_pid160107.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug. ```. Could this be a bug ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7515:1159,log,log,1159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7515,1,['log'],['log']
Testability," and capturing/resolving these BND's that are not suitable for _THIS PARTICULAR_ logic. I guess in general my personal preference is to put less algorithm-related information in VCF for analysts (less reading for them), and produce add on files for tool developers. What's your thoughts?. > Does this even have to be a spark tool? It looks like you are just reading the variants into a parallel spark context, filtering, and then collecting them to actually process them. Why not just make this a non-spark tool and process it all in memory on one node?. Answer: Agree. It doesn't have to be, at least in theory, and it probably is going to be faster as we don't need to incur the Spark overhead for such a typically small job. But (I'm saying too many buts....) up to this point all SV tools are under the package `hellbender.tools.spark.sv`, so I'm following suit here. Note the two classes's main interface methods mentions nothing about RDDs (that's on purpose). ; On the other hand, this is an engineering question I believe, and it depends on whether we want to put as much of discovery code as possible into `StructuralVariationDiscoveryPipelineSpark` (the last commit actually hooks the two classes into it, so a single invocation of the tool produces more variants), or we go wdl in pipelining the whole process. -------. All in all, I think the comments and critics are generally about the ""filtering""/""classifying"" part, and the most serious concern about it is false negatives. Am I understanding correctly? If so, given that the filtering step is only picking the BND's that are suitable to the linking logic, I can imagine the false negative problem be solved in the future by other logics (e.g. more relaxed requirement on pair matching, or not even requiring matching INV55/INV33 pairs, etc.) In fact, that's what I'm planning on.; Another part of the problem is how much I can accomplish in this single PR, and how large it should be&mdash;the forever existing problem for new tools.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4789#issuecomment-406483929:6856,log,logic,6856,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4789#issuecomment-406483929,4,['log'],"['logic', 'logics']"
Testability," are fairly easy to fix or suppress. The exception is the Javadoc API [com.sun.javadoc](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.javadoc/com/sun/javadoc/package-summary.html), which has been replaced by [jdk.javadoc.doclet](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.javadoc/jdk/javadoc/doclet/package-summary.html). The javadoc tools in `org.broadinstitute.hellbender.utils.help` may need to be re-written (and it's not clear if it's possible to support Java 8 and Java 11 simultaneously).; * Travis build. Getting this to build and test on Java 11 in addition to the current builds may be fairly involved as the matrix is already quite complicated. (The current PR just changes Java 8 to Java 11 for testing purposes - we'd need a way of getting both to run.). The vast majority of tests are passing on Java 11, the following are failing:; * Missing `TwoBitRecord` (from ADAM); * `ReferenceMultiSparkSourceUnitTest`; * `ImpreciseVariantDetectorUnitTest`; * `SVVCFWriterUnitTest`; * `DiscoverVariantsFromContigAlignmentsSAMSparkIntegrationTest`; * `StructuralVariationDiscoveryPipelineSparkIntegrationTest`; * `SvDiscoverFromLocalAssemblyContigAlignmentsSparkIntegrationTest`; * `java.lang.NoSuchMethodError: java.nio.ByteBuffer.clear()Ljava/nio/ByteBuffer;`; * `SeekableByteChannelPrefetcherTest`; * `GatherVcfsCloudIntegrationTest`; * `Could not serialize lambda`; * `ExampleAssemblyRegionWalkerSparkIntegrationTest`; * `PileupSparkIntegrationTest`; * Native HMM library code caused the tests to crash on my Mac:; ```; Running Test: Test method testLikelihoodsFromHaplotypes[0](org.broadinstitute.hellbender.utils.pairhmm.VectorLoglessPairHMM@6282d367, true)(org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest); dyld: lazy symbol binding failed: can't resolve symbol __ZN13shacc_pairhmm9calculateERNS_5BatchE in /private/var/folders/cj/wyp4zgw17vj4m9qdmddvmcc80000gn/T/libgkl_pairhmm13775554937319419112.dylib because dependent dylib #1 could not be loaded",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-527179359:1352,test,tests,1352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-527179359,2,['test'],['tests']
Testability, args to java side; major update to germline WDLs; all optional python args exposed to WDLs as optional args. commit 50cb6fd08de15469a9080cbb27ff30c8b7ee7e21; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:50:45 2017 -0500. missing serialVersionUID. commit 5f0f31eab63b0e6f6105708ded7f86c96c830781; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:35:33 2017 -0500. annotated intervals kebab case; updated germline WDL workflows. commit 29cc6234dbfb8db12559217a650c6ceb170c5797; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 13:15:28 2017 -0500. cleanup test files. commit 08a35bb4e65eceb735adcd41a91132e9a34d2b66; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 02:50:19 2017 -0500. update WDL scripts. commit 12bcfa192ee6fa6da21239ebf5b513633efe974f; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 02:47:33 2017 -0500. significant updates to GermlineCNVCaller; integration tests for GermlineCNVCaller w/ sim data in both run modes. commit 151416a4af735ca721bd75e4b54a780c17ac9397; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 01:42:05 2017 -0500. hybrid ADVI abstract argument collection w/ flexible default values; hybrid ADVI argument collection for contig ploidy model; hybrid ADVI argument collection for germline denoising and calling model. commit 56e21bf955d3dc0c52aceb384f28cf6173959de0; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Wed Dec 6 23:18:39 2017 -0500. rewritten python-side coverage metadata table reader using pandas to fix the issues with comment line; change criterion for cohort/case based on whether a contig-ploidy model is provided or not; simulated test files for ploidy determination tool; proper integration test for ploidy determination tool and all edge cases; updated docs for ploidy determination tool. commit 7fa104b2e9170770cfc5b338835e41215d7fd39c; Author: Mehrtash Babadi <mehrtash@broadinstitut,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:6934,test,tests,6934,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,2,['test'],['tests']
Testability, at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.decodeCacheFiles(PluginRegistry.java:181); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.loadFromMainClassLoader(PluginRegistry.java:119); at org.apache.logging.log4j.core.config.plugins.util.PluginManager.collectPlugins(PluginManager.java:132); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:131); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:112); at org.apache.logging.log4j.core.layout.PatternLayout.createPatternParser(PatternLayout.java:220); at org.apache.logging.log4j.core.layout.PatternLayout.<init>(PatternLayout.java:138); at org.apache.logging.log4j.core.layout.PatternLayout.<init>(PatternLayout.java:57); at org.apache.logging.log4j.core.layout.PatternLayout$Builder.build(PatternLayout.java:446); at org.apache.logging.log4j.core.config.AbstractConfiguration.setToDefault(AbstractConfiguration.java:518); at org.apache.logging.log4j.core.config.DefaultConfiguration.<init>(DefaultConfiguration.java:49); at org.apache.logging.log4j.core.LoggerContext.<init>(LoggerContext.java:75); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.createContext(ClassLoaderContextSelector.java:171); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.locateContext(ClassLoaderContextSelector.java:145); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:70); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:57); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:140); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41); at org.apache.logging.log4j.LogManager.getContext(LogManager.java:182); at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:455); at org.broadinstitute.h,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5126:4256,log,logging,4256,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126,1,['log'],['logging']
Testability," be supported by this environment), it's a difficult task:; > 1. The goal is to update Python from 3.6 to 3.10+, since Terra now requires the latter for officially supported images.; > 2. However, gCNV relies on the PyMC3 package. PyMC3 3.1 is currently used in GATK master. 3.1 was released in 2017, not long before our release of gCNV in 2018, but it's very old now.; > 3. The latest version of Python that is supported by PyMC3 3.1 in conda is Python 3.6.; > 4. @asmirnov239 has a draft PR (#8094) that updates PyMC3 to 3.5 and Python to 3.7, which clearly still falls short of Python 3.10+. This PR also updated some gCNV code to make it compatible with PyMC3 3.5. (It also removed TensorFlow and added PyTorch.); > 5. @asmirnov239 also merged a PR that added tests for numerical reproducibility of GermlineCNVCaller in cohort mode in #7889.; > 6. The earliest version of PyMC that supports Python 3.10+ is PyMC 4, released in 2022.; > 7. However, PyMC 4 introduces API changes, which will also require additional gCNV code changes and numerical testing.; > 8. These API changes are because the underlying computational backend for PyMC was updated from Theano (think of this as an old alternative to TensorFlow) to Aesara.; > 9. Since then, PyMC 5.9 has been released and the underlying backend has been updated again, from Aesara to PyTensor.; > 10. So if we are going to update the environment to support Python 3.10+, it probably makes sense to go all the way to PyMC 5.9. I've made some strides in this PR; as of [6b08f3a](https://github.com/broadinstitute/gatk/pull/8561/commits/6b08f3af205cb9af1f5c63a0786f9a5a52cd78c1), I've made enough updates to accommodate API changes so that cohort-mode inference for both GermlineCNVCaller and DetermineGermlineContigPloidy runs successfully under Python 3.10 and PyMC 5.9.0---although note that 5.9.1 has been released in the interim!. However, our work has just begun. Results now produced in the numerical tests mentioned above are quite far off ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561:1242,test,testing,1242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561,1,['test'],['testing']
Testability, because the virtual machine instance does not have permission scopes specified. It is possible to skip checking for Compute Engine metadata by specifying the environment variable NO_GCE_CHECK=true.; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:227); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:438); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:239); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:236); at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:105); at com.google.cloud.RetryHelper.run(RetryHelper.java:76); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:235); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:687); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:404); at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:206); at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:162); at org.broadinstitute.hellbender.engine.GATKTool.initializeReads(GATKTool.java:391); at org.broadinstitute.hellbender.engine.GATKTool.onStartup(GATKTool.java:640); at org.broadinstitute.hellbender.engine.ReadWalker.onStartup(ReadWalker.java:50); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:136); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); at org.broadinstitute.hellbender.Main.main(Main.java:291); ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5855:1997,assert,assertFileIsReadable,1997,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5855,1,['assert'],['assertFileIsReadable']
Testability," been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007ff7b7dfe32d, pid=849, tid=0x00007ff82e11d700; #; # JRE version: OpenJDK Runtime Environment (8.0_242-b08) (build 1.8.0_242-8u242-b08-0ubuntu3~18.04-b08); # Java VM: OpenJDK 64-Bit Server VM (25.242-b08 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [libgkl_smithwaterman5951765478004985534.so+0x132d] smithWatermanBackTrack(dnaSeqPair*, int, int, int, int, int*, int)+0x1bd; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/gatk/hs_err_pid849.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. **RELEVANT FILES**; [hs_err_pid100.log](https://github.com/broadinstitute/gatk/files/6203288/hs_err_pid100.log); [hs_err_pid164.log](https://github.com/broadinstitute/gatk/files/6203289/hs_err_pid164.log); [hs_err_pid274.log](https://github.com/broadinstitute/gatk/files/6203290/hs_err_pid274.log); [hs_err_pid400.log](https://github.com/broadinstitute/gatk/files/6203291/hs_err_pid400.log); [hs_err_pid482.log](https://github.com/broadinstitute/gatk/files/6203292/hs_err_pid482.log); [hs_err_pid711.log](https://github.com/broadinstitute/gatk/files/6203293/hs_err_pid711.log); [hs_err_pid735.log](https://github.com/broadinstitute/gatk/files/6203294/hs_err_pid735.log); [hs_err_pid801.log](https://github.com/broadinstitute/gatk/files/6203295/hs_err_pid801.log); [hs_err_pid825.log](https://github.com/broadinstitute/gatk/files/6203296/hs_err_pid825.log); [hs_err_pid849.log](https://github.com/broadinstitute/gatk/files/6203297/hs_err_pid849.log); [otherFiles.zip](https://github.com/broadinstitute/gatk/files/6203305/otherFiles.zip); [in2510-",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7162:6482,log,log,6482,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7162,1,['log'],['log']
Testability," bug when variant ref allele doesn't match reference genome. - Fixed test cases for - strand indel cdna strings:; There is a bug in oncotator that was fixed in Funcotator involving cdna; strings for - strand indels. In Oncotator the positions reported are off by 1 (they; should be one less) and the base reported is also wrong.; This is now fixed. - Removed some old code that had been taken out of the main codepath. - Fixed a bug in how the gencode reference contexts are created.; - Fixed a bug in how the end points for the gencode annotations are; created. - Ref context field is now consistent for indels.; The reference context will give WINDOW bases before and after the; logical reference allele for a variant. This is NOT the allele in the; input VCF, but rather the allele that actually has changed. For; insertions, the logical allele is the SPACE BETWEEN TWO BASES (and; therefore the resulting string will always be 2xWINDOW bases long).; For deletions, the logical allele is the given ref allele without the; required preceding base. For MNPs the logical allele is the given ref; allele.; Updated some tests and test data to reflect this change. - Added a small HG38 regression test set. - Fixed a boundary bug with codon strings.; Now codon change strings have an alternate (correct) form for insertions; that involve the start codon on the - strand, and the stop codon on the; + strand. This form eliminates any overrun/out of bounds exceptions. - Fixed an issue involving variants that overrun the end of the coding sequence. - Added in additional required files for regression test gencode data source. - Added a helpful script and modified test data set to be correct. - Updated part of Gencode to prepare for fixing the exon boundary issue. - Updated FuncotatorIntegrationTests to use environment-variable paths; more safely. - Updated `FuncotatorUtils::getCodingSequenceChangeString` to use; base data types rather than those in `SequenceComparison`. - Refactored; `GencodeFunco",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5302:3807,log,logical,3807,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5302,1,['log'],['logical']
Testability, build [29984](https://travis-ci.com/broadinstitute/gatk/builds/159673754); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | R | openjdk8 | [29984.6](https://travis-ci.com/broadinstitute/gatk/jobs/317851324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.6/tests/test/index.html) |; | python | openjdk8 | [29984.5](https://travis-ci.com/broadinstitute/gatk/jobs/317851323) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.5/tests/test/index.html) |; | integration | oraclejdk8 | [29984.12](https://travis-ci.com/broadinstitute/gatk/jobs/317851330) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.12/tests/test/index.html) |; | integration | openjdk11 | [29984.13](https://travis-ci.com/broadinstitute/gatk/jobs/317851331) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.13/tests/test/index.html) |; | cloud | openjdk8 | [29984.1](https://travis-ci.com/broadinstitute/gatk/jobs/317851319) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.1/tests/test/index.html) |; | cloud | openjdk11 | [29984.15](https://travis-ci.com/broadinstitute/gatk/jobs/317851333) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.15/tests/test/index.html) |; | unit | openjdk11 | [29984.14](https://travis-ci.com/broadinstitute/gatk/jobs/317851332) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.14/tests/test/index.html) |; | integration | openjdk8 | [29984.2](https://travis-ci.com/broadinstitute/gatk/jobs/317851320) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29984.4](https://travis-ci.com/broadinstitute/gatk/jobs/317851322) | [logs](https://storage.googleapis.com/hellbender-t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380:1026,test,tests,1026,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380,2,['test'],"['test', 'tests']"
Testability, build [29988](https://travis-ci.com/broadinstitute/gatk/builds/159678058); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | R | openjdk8 | [29988.6](https://travis-ci.com/broadinstitute/gatk/jobs/317861684) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.6/tests/test/index.html) |; | integration | oraclejdk8 | [29988.12](https://travis-ci.com/broadinstitute/gatk/jobs/317861697) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.12/tests/test/index.html) |; | python | openjdk8 | [29988.5](https://travis-ci.com/broadinstitute/gatk/jobs/317861683) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.5/tests/test/index.html) |; | integration | openjdk11 | [29988.13](https://travis-ci.com/broadinstitute/gatk/jobs/317861698) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.13/tests/test/index.html) |; | cloud | openjdk11 | [29988.15](https://travis-ci.com/broadinstitute/gatk/jobs/317861700) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.15/tests/test/index.html) |; | cloud | openjdk8 | [29988.1](https://travis-ci.com/broadinstitute/gatk/jobs/317861676) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.1/tests/test/index.html) |; | unit | openjdk11 | [29988.14](https://travis-ci.com/broadinstitute/gatk/jobs/317861699) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.14/tests/test/index.html) |; | integration | openjdk8 | [29988.2](https://travis-ci.com/broadinstitute/gatk/jobs/317861680) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29988.4](https://travis-ci.com/broadinstitute/gatk/jobs/317861682) | [logs](https://storage.googleapis.com/hellbender-t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351:1026,test,tests,1026,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351,2,['test'],"['test', 'tests']"
Testability, build [29992](https://travis-ci.com/broadinstitute/gatk/builds/159687710); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | R | openjdk8 | [29992.6](https://travis-ci.com/broadinstitute/gatk/jobs/317887706) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.6/tests/test/index.html) |; | python | openjdk8 | [29992.5](https://travis-ci.com/broadinstitute/gatk/jobs/317887705) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.5/tests/test/index.html) |; | integration | oraclejdk8 | [29992.12](https://travis-ci.com/broadinstitute/gatk/jobs/317887712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.12/tests/test/index.html) |; | integration | openjdk11 | [29992.13](https://travis-ci.com/broadinstitute/gatk/jobs/317887713) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.13/tests/test/index.html) |; | cloud | openjdk8 | [29992.1](https://travis-ci.com/broadinstitute/gatk/jobs/317887701) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.1/tests/test/index.html) |; | cloud | openjdk11 | [29992.15](https://travis-ci.com/broadinstitute/gatk/jobs/317887715) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.15/tests/test/index.html) |; | integration | openjdk8 | [29992.2](https://travis-ci.com/broadinstitute/gatk/jobs/317887702) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.2/tests/test/index.html) |; | unit | openjdk11 | [29992.14](https://travis-ci.com/broadinstitute/gatk/jobs/317887714) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29992.4](https://travis-ci.com/broadinstitute/gatk/jobs/317887704) | [logs](https://storage.googleapis.com/hellbender-t,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065:1026,test,tests,1026,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065,2,['test'],"['test', 'tests']"
Testability," calculate 4 log gammas per het, so if you have 25,000 hets all the log gammas in the model likelihood take 1/100 of a second. . To get MLEs for each parameter (minor allele fractions, outlier probability etc) might require 100 evaluations each, so we're probably dealing with 10 seconds of log gammas per iteration to find the posterior mode. Getting a few hundred MCMC samples is probably more expensive but roughly comparable. These numbers are manageable but get expensive when we relearn the model at every iteration of segment merging. In my opinion it makes sense to come back to this issue after we have a new segmentation strategy. We'll see how pressing it is then. ---. @samuelklee commented on [Wed Jun 08 2016](https://github.com/broadinstitute/gatk-protected/issues/542#issuecomment-224786950). To clarify, I think this is primarily an issue for WGS, where we have ~1.5 million hets. From the logs in /dsde/working/lichtens/wgs/out_case_chip_wgs/acnv/*out it looks like finding the MLE takes ~10 minutes (which is roughly consistent with your estimate), but 200 MCMC iterations takes ~1 hr. Naive profiling of the AlleleFractionModeller tests suggests that around ~60% CPU is going toward log gammas, so if we can improve on this I think it might be an easy win. But we should perhaps profile more carefully. However, I agree that changing our segmentation is more pressing! Note that oversegmentation (typically 1000+ segments) hurts us by both by increasing the number of MAF parameters and by increasing the number of similar-segment merge iterations required to smooth things (looks like the WGS samples hit the limit of 25 merge iterations = ~25 hrs). Turning off refitting between iterations helps, perhaps at the cost of smoothness of the final result, but you're still looking at 2+ hours for the initial and final fit. Just to note, other possibilities for cutting down the runtime include trimming down the number of hets for WGS, changing similar-segment merging so that we ca",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2860:1653,log,logs,1653,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2860,1,['log'],['logs']
Testability," cannot vouch that this is the best way to do things) revealed 245Mb of files that are unused in master:. for ff in `find src/test/resources -name ""*""`; do file=`basename $ff`; git grep -l $file >/dev/null; rcode=$?; if [[ $rcode -ne 0 ]]; then echo $ff; fi; done. Note I didn't search in all branches, but I figure we can always recommit those files. Also, any index files, etc. should be retained if necessary. CNV team will delete their files, but I'll leave it up to engine and the other teams about how much we want to remove. src/test/resources/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf.idx; src/test/resources/empty.vcf.idx; src/test/resources/exampleFASTA.fasta.fai; src/test/resources/fastaWithoutDict.fasta.fai; src/test/resources/fastaWithoutFai.dict; src/test/resources/hg19micro.dict; src/test/resources/hg19micro.fasta.fai; src/test/resources/hg19mini.dict; src/test/resources/hg19mini.fasta.fai; src/test/resources/Homo_sapiens_assembly19_chr1_1M.dict; src/test/resources/Homo_sapiens_assembly19_chr1_1M.fasta.fai; src/test/resources/Homo_sapiens_assembly19.dbsnp135.chr1_1M.exome_intervals.vcf.idx; src/test/resources/HSA19.dbsnp135.chr1_1M.exome_intervals.modified.vcf.idx; src/test/resources/human_g1k_v37.chr17_1Mb.dict; src/test/resources/human_g1k_v37.chr17_1Mb.fasta.fai; src/test/resources/iupacFASTA.dict; src/test/resources/iupacFASTA.fasta.fai; src/test/resources/joint_calling.chr1_1M.1kg_samples.10samples.noINFO.vcf.idx; src/test/resources/large/1000G.phase3.broad.withGenotypes.chr20.10100000.vcf.idx; src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.cram.bai; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cn",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:1028,test,test,1028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability," changes for scaling density filter by coverage; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/StructuralVariationDiscoveryArgumentCollection.java; - replace calls to BreakpointDensityFilter with calls to BreakpointFilterFactory; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/FindBreakpointEvidenceSpark.java; - input coverage-scaled thresholds, convert to absolute internally. Allow thresholds to be double instead of int; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilter.java; - getter functions added to calculate properties for XGBoostEvidenceFilter. Also fromStringRep() and helper constructors added for testing; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointEvidence.java; - updates to tests reflecting changes to these interfaces; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilterTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/FindBreakpointEvidenceSparkUnitTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/FindBreakpointEvidenceSparkIntegrationTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/SVIntegrationTestDataProvider.java. 4. Added code; - factory to call appropriate BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointFilterFactory.java; - simple helper class to hold feature vectors for classifier; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/EvidenceFeatures.java; - implement classifier-based BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilter.java; - unit test for classifier filter; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilterUnitTest.java. 5. Added resources; - Genome tracts; src/main/resources/large/hg38_centromeres.txt.gz; src/main/re",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477:1859,test,test,1859,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477,2,['test'],['test']
Testability," changes relevant to gatk -; * Allow changes for allele specific and other annotations to vid file via GenomicsDBImporter without hardcoding them in genomicsdb. See [GenomicsDB Fix 39](https://github.com/GenomicsDB/GenomicsDB/pull/39). Thanks @mlathara.; * [Fix](https://github.com/GenomicsDB/GenomicsDB/pull/54) for ; BUGreportGATK-07-19-19 reported by @bshifaw where a large ploidy + number of genotypes was leading to math overflow. The overflow is now caught and GenomicsDB stops enumerating genotypes for this case. Thanks @kgururaj.; * [Fix](https://github.com/GenomicsDB/GenomicsDB/pull/66) for missing libcurl in the native GenomicsDB library - Issue #6122 ; * [Fix](https://github.com/GenomicsDB/GenomicsDB/pull/67) to avoid crashing when vcfbufferstream from htslib happens to be invalid. This check was put in response to the [Forum Issue 59667](https://gatkforums.broadinstitute.org/gatk/discussion/comment/59667#Comment_59667). Note that the test vcfs [sample2](https://github.com/broadinstitute/gatk/tree/master/src/test/resources/org/broadinstitute/hellbender/tools/mutect/createpon/sample2.vcf), [sample3](https://github.com/broadinstitute/gatk/tree/master/src/test/resources/org/broadinstitute/hellbender/tools/mutect/createpon/sample3.vcf) and [sample4](https://github.com/broadinstitute/gatk/tree/master/src/test/resources/org/broadinstitute/hellbender/tools/mutect/createpon/sample4.vcf) had to be changed to be htslib compliant for importing and to run `org.broadinstitute.hellbender.tools.walkers.mutect.CreateSomaticPanelOfNormalsIntegrationTest` successfully.; * Allow for native GenomicsDBExceptions to be propagated as java IOExceptions to allow gatk to gracefully handle the exception by printing out relevant information. See [GenomicsDB Fix 68](https://github.com/GenomicsDB/GenomicsDB/pull/68).; * [Fix](https://github.com/GenomicsDB/GenomicsDB/pull/70) for issues using vid protobuf interface to pass vid information and there is more than one config. Thanks @mlathara.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6188:1043,test,test,1043,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6188,3,['test'],['test']
Testability," check that; > each alt allele occurs in at least one sample and that the AC adds up.; > However, this can fail on sites-only files because there are no genotypes.; > We should use the definition of the info annotations in the header to check; > how many entries each should have.; > Outline; > - Add a new validation type for info-field counts to enum and to; > switch statement; > - Grab info headers from input VCF with something like; > GATKVCFUtils.getVCFHeadersFromRods(getToolkit(),; > variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; > - In the map() function, for each info header line, call on each; > VCFInfoHeaderLine getCount(vc) to get the expected number of info; > annotation entries; > - Compare the expected number with a count based on; > vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some; > additional parsing because it returns an Object; > - (Bonus points if you use the isFixedCount() and getCount() functions; > on the VCF info header line to simplify annotations that aren't according; > to the number of alt alleles); > ; > Test data; > ; > /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > Should fail AC/AF validation at; > 1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120; > See results using:; > ; > use VCFtools; > vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; > ; > which outputs:; > INFO field at 1:768589 .. INFO tag [AC=1] expected different number of; > values (expected 2, found 1),INFO tag [AF=0.00047] expected different; > number of values (expected 2, found 1); > Notes; > ; > Currently, all the validation modes call out to HTSJDK. Do we want to put; > the new functionality there as well?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1053. ---. @ldgauthier commented on [Fri Jul 17 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122308040). Today I le",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:3276,Test,Test,3276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['Test'],['Test']
Testability," cloud...requests like this need to; go through pipeline-help...sorry. Y. On Fri, Oct 7, 2016 at 9:08 AM, ldgauthier notifications@github.com wrote:. > I don't know what intermediates we save on the cloud but maybe @yfarjoun; > https://github.com/yfarjoun is willing to help.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-252247496,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACnk0lAsJd9NECpPP0JYVp2ziDhga0B9ks5qxkRUgaJpZM4KQT_3; > . ---. @vdauwera commented on [Wed Oct 26 2016](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-256499771). Writing pipeline-help now and cc'ing everyone involved in this thread. Will try to get some kind of protocol set up for debugging things that happen in the cloud pipeline, because I expect this will happen again. But if it gets too complicated we could also mock up some fake records that would reproduce this. It seems to me that shouldn't be too hard. . ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-260498705). I need to ping Daniel on getting access to the files. ---. @ronlevine commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275576931). @vdauwera Can you get the data? I can take a look a this issue. ---. @vdauwera commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275578721). Oh, they gave me access to the files but I never took the next step of figuring out which files are relevant. There are twenty thousand samples... I'm not sure what is the best way to approach this. ---. @ldgauthier commented on [Wed Mar 01 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-283365248). It would be too computationally expensive and just generally pain",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2959:2721,mock,mock,2721,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2959,1,['mock'],['mock']
Testability," code, though I don't know how much you cleaned up the GATK4 version. We would also want to make sure that we only implement this optimization if that SNP is the only SNP on the haplotype. In cases where the haplotype has multiple SNPs and the phasing is poor, this could artificially inflate the likelihoods. Although we've seen that the graph traversal frequently breaks phasing then generating haplotypes anyway, so maybe I overestimate our current likelihood accuracy. Anyway, take my advice with a grain of salt. It's just some musings from a bored and somewhat sleep-deprived mom with a sleeping baby on her lap. ---. @davidbenjamin commented on [Fri Mar 03 2017](https://github.com/broadinstitute/gatk-protected/issues/909#issuecomment-284024760). > I think the main blocker in implementing it would be the complexity of the existing code, though I don't know how much you cleaned up the GATK4 version. We refactored all the engine stuff shared with `HaplotypeCaller` to be very distinct from the somatic genotyping logic, so the only complexity would be in local assembly and PairHMM. Which could be significant, of course. > We would also want to make sure that we only implement this optimization if that SNP is the only SNP on the haplotype. . .Although we've seen that the graph traversal frequently breaks phasing. The specific case I had in mind is when you have a bubble or something more complex in the graph, followed by a stretch of reference (i.e. all haplotypes have nothing going on here), followed (or not) by more activity. It seems reasonable in that case to chop each active area into its own haplotype(s), which is equivalent to pinning the ref-only area to be ref-only in PairHMM. I believe but could be wrong that in a case like this our assembly would not respect phasing between the two active areas anyway, so we lose nothing. By the way, I should clarify that the idea is not to truncate the `ActiveRegion`, but rather to break it into a few small haplotypes semi-intel",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2945:1649,log,logic,1649,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2945,1,['log'],['logic']
Testability," dataset / table names. (#8162); - New WDL to create VAT tsvs from previously generated BigQuery table. (#8165); - Treat withdrawn samples in sub-cohort prepare correctly [VS-772] (#8156); - Remove unused VAT Creation WDL (#8172); - Gg consistently use dataset name as input parameter (#8173); - AoU cleanup docs, round 1 [VS-671] (#8104); - VDS docs remove samples and correct GT [VS-807] (#8178); - [VS-693] Add support for VQSR Lite to GvsCreateFilterSet (#8157); - VAT Documentation Update Round 1 [VS-531]; - VS-530 VDS creation documentation for AoU (#8169); - Update beta docs to tell people not to use free credits (#8184); - VS-816 Keeping ingestion under quota (#8193); - CromwellOnAzure + Azure SQL DB + AAD first steps doc [VS-805] (#8191); - Edit and re-format VDS -> VAT doc [VS-821] (#8187); - VS-820 Incorporate code to stay under Google quotas for new accounts into beta workflow (#8200); - Update docs for Nirvana reference disk [VS-531] [VS-796] (#8170); - VS-694 - Extract Callset for VQSR Lite (#8182); - Updating docker image (#8210); - Document VCF generation [VS-795] (#8202); - Variants GATK Docker image building docs + script [VS-827] (#8207); - Update GATK jar used in GvsJointVariantCalling WDL (#8216); - Hello Azure SQL Database from Cromwell on Azure [VS-812] (#8220); - Remove what appear to be accidentally added files [VS-834] (#8225); - VS-815: Add Support for YNG to VQSR Lite (#8206); - Disentangle non-GVS code from GVS code [VS-834] (#8229); - VS-695. Updates to run Precision and Sensitivity on VQSR Lite (#8230); - Track avro export costs [VS-769] (#8236); - Add note that we deleted a VDS! (#8214); - Vs 822 Add documentation for the work that we did on the latest iteration of Delta (#8205); - Rc vs 822 gq0 documentation (#8240); - Add a test exclusion for gvs scripts; - testing if the exclusion works. [VS-16]: https://broadworkbench.atlassian.net/browse/VS-16?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8251:33367,test,test,33367,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8251,2,['test'],"['test', 'testing']"
Testability," did not modify the javadoc for any class in that package. The integration test runs `com.sun.tools.javadoc.Main.execute` and asserts that the output code is zero, which does not yield a useful error message. In order to produce something more meaningful I hacked the test to output the entire `stdout` and `stderr` as follows:. ```; final StringWriter out = new StringWriter();; final PrintWriter err = new PrintWriter(out);. final int result = com.sun.tools.javadoc.Main.execute(""program"", err, err, err, ""doclet"",docArgList.toArray(new String[] {}));; err.flush(); // probably not needed; String message = out.toString(); // message contains the entire stdout and stderr of the call to execute; Assert.assertEquals(result, 0, message);; ```. The output is about 2000 lines, but a lot of it is clearly innocuous. Removing lines such as; * `2022-08-16T00:09:07.2336106Z [parsing completed 1ms]`; * `2022-08-16T00:09:07.4456202Z [loading ZipFileIndexFileObject[/jars/gatk-package-4.2.6.1-56-gad9a538-SNAPSHOT-test.jar(org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCFIntegrationTest.class)]]`; * `2022-08-16T00:09:07.4459732Z [loading RegularFileObject[src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/OptionalIntervalArgumentCollection.java]]`; * `2022-08-16T00:09:07.4462012Z [parsing started RegularFileObject[src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/OptionalReferenceInputArgumentCollection.java]]`; * 2022-08-16T00:09:07.2322755Z [loading ZipFileObject[/gatk/gatk-package-unspecified-SNAPSHOT-local.jar(htsjdk/samtools/SAMSequenceDictionary.class)]]. brings it down to 353 lines, the majority of which look like . ```2022-08-16T00:09:07.4435974Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:479: error: cannot find symbol; 2022-08-16T00:09:07.4436105Z @VisibleForTesting; ```. Here's that 353-line file:. [log-no-parsing-loading.txt](https://github.com/broadinstitute/gatk/files/9355026/log-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217231488:1169,test,test,1169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217231488,2,['test'],['test']
Testability," existing github issues to see if your issue (or something similar) has already been reported. If the issue already exists, you may comment there to inquire about the progress.; - Determine whether your issue is a **bug report**, a **feature request**, or a **documentation request** (for tool/class javadoc only -- for forum docs please post there); - Consider if your ""issue"" is better addressed on the GATK forum: http://gatkforums.broadinstitute.org/gatk Post there if you have questions about expected tool behavior, output format, unexpected results, or generally any question that does not fit into the categories above; - Use a **concise** yet **descriptive** title; - Choose the corresponding template block below and fill it in, replacing or deleting text in italics (surrounded by `_`) as appropriate; - Delete the other template blocks and this header. ----; Thanks in advance!; ## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_. ### Affected version(s); - [ ] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._. #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_. #### Expected behavior; _Tell us what should happen_. #### Actual behavior; _Tell us what happens instead_. ----. ## Feature request. ### Tool(s) or class(es) involved; _Tool/class name(s), special parameters?_. ### Description; _Specify whether you want a modification of an existing behavior or addition of a new capability._; _Provide **examples**, **screenshots**, where appropriate._. ----. ## Documentation request. ### Tool(s) or class(es) involved; _Tool/class name(s), parameters?_. ### Description ; _Describe what needs to be added or modified._. ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6875:10413,test,test,10413,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6875,2,"['log', 'test']","['logs', 'test']"
Testability," failed with:. ```; org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations FAILED; java.lang.AssertionError: Iterators differ at element [9]: FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification""> != FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant.""> expected [FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">] but found [FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant."">]; at org.testng.Assert.fail(Assert.java:93); at org.testng.Assert.failNotEquals(Assert.java:512); at org.testng.Assert.assertEqualsImpl(Assert.java:134); at org.testng.Assert.assertEquals(Assert.java:610); at org.testng.Assert.assertEquals(Assert.java:578); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertHeadersMatch(VariantAnnotatorIntegrationTest.java:66); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.runVariantAnnotatorAndAssertSomething(VariantAnnotatorIntegrationTest.java:92); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:55); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:49); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations(VariantAnnotatorIntegrationTest.java:224); Exception in thread ""Thread-5"" java.nio.file.ClosedFileSystemException; 	at com.google.common.jimfs.FileSystemState.checkOpen(FileSystemState.java:64); 	at com.google.common.ji",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414:1021,Assert,Assert,1021,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414,1,['Assert'],['Assert']
Testability," folder. The index is there, but I don't know why the tool can't recognize it. Please help, thanks!; kh3@rgcaahauva08091 ~/Resources/genome_b37 $> ls -l genome.*; -rw-rw---- 1 kh3 kh3 784809415 Sep 16 10:16 genome.2bit; -rw-rw---- 1 kh3 kh3 3168829906 Feb 4 2014 genome.fa; -rw-r----- 1 kh3 kh3 106669 Sep 16 11:32 genome.fa.amb; -rw-r----- 1 kh3 kh3 3276 Sep 16 11:32 genome.fa.ann; -rw-r----- 1 kh3 kh3 3137454592 Sep 16 11:31 genome.fa.bwt; -rw-rw---- 1 kh3 kh3 2984 Feb 4 2014 genome.fa.fai; -rw-rw---- 1 kh3 kh3 2984 Sep 16 13:18 genome.fai; -rw-r----- 1 kh3 kh3 784363628 Sep 16 11:32 genome.fa.pac; -rw-r----- 1 kh3 kh3 1568727304 Sep 16 11:44 genome.fa.sa. Using GATK wrapper script /home/kh3/Softwares/gatk/build/install/gatk/bin/gatk; Running:; /home/kh3/Softwares/gatk/build/install/gatk/bin/gatk BwaAndMarkDuplicatesPipelineSpark -I /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark.bam -R /home/kh3/Resources/genome_b37/ge; nome.2bit --disableSequenceDictionaryValidation true -t 16 -O /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark.aligned.bam; 15:47:28.760 INFO IntelGKLUtils - Trying to load Intel GKL library from:; jar:file:/home/kh3/Softwares/gatk/build/install/gatk/lib/gkl-0.1.2.jar!/com/intel/gkl/native/libIntelGKL.so; 15:47:28.809 INFO IntelGKLUtils - Intel GKL library loaded from classpath.; [September 16, 2016 3:47:28 PM EDT] org.broadinstitute.hellbender.tools.spark.pipelines.BwaAndMarkDuplicatesPipelineSpark --threads 16 --output /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark; .aligned.bam --reference /home/kh3/Resources/genome_b37/genome.2bit --input /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark.bam --disableSequenceDictionaryValidation true --fixedChunkSiz; e 100000 --duplicates_scoring_strategy SUM_OF_BASE_QUALITIES --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --shardedO; utput false --numReducers 0 --sparkMaster local[*] --help false --ve",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2171:1081,TEST,TEST,1081,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2171,2,"['TEST', 'test']","['TEST', 'test']"
Testability, from build [36661](https://app.travis-ci.com/broadinstitute/gatk/builds/240874746); Failures in the following jobs:. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:1014,test,test-logs,1014,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,1,['test'],['test-logs']
Testability," from the; GENE features, rather than the TRANSCRIPT features that contain each; variant. As a result, the order in which representative transcripts; were chosen was wrong. The TRANSCRIPT feature is now being used to; determine the Locus/Curation Level. - `TranscriptType` now determined by transcript annotation, not gene annotation; - Start/stop codon overlapping now corrected for preceding indel bases (is now correct for more cases).; - Changed algorithm for how 5'UTRs are determined. - Refactored how frameshift indels have codon change strings created. - Added in helper some scripts for testing funcotator. - Fixed how codon change strings are rendered to be consistent and more; correct. - Fixed Protein Change strings to be consistent and more; correct. - Implemented tests for CreateProteinChangeInfo; - Implemented tests for RenderProteinChangeString; - Implemented tests for IsIndelBetweenCodons; - Implemented tests for GetCodonChangeString. - Added a unit test for; testCreateGencodeFuncotationBuilderWithTrivialFieldsPopulated. - Fixed a bug when variant ref allele doesn't match reference genome. - Fixed test cases for - strand indel cdna strings:; There is a bug in oncotator that was fixed in Funcotator involving cdna; strings for - strand indels. In Oncotator the positions reported are off by 1 (they; should be one less) and the base reported is also wrong.; This is now fixed. - Removed some old code that had been taken out of the main codepath. - Fixed a bug in how the gencode reference contexts are created.; - Fixed a bug in how the end points for the gencode annotations are; created. - Ref context field is now consistent for indels.; The reference context will give WINDOW bases before and after the; logical reference allele for a variant. This is NOT the allele in the; input VCF, but rather the allele that actually has changed. For; insertions, the logical allele is the SPACE BETWEEN TWO BASES (and; therefore the resulting string will always be 2xWINDOW bases ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5302:2752,test,test,2752,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5302,2,['test'],"['test', 'testCreateGencodeFuncotationBuilderWithTrivialFieldsPopulated']"
Testability," inheritance structure). ------------; ### On the problem of having a confusing TODO for ; `boolean SimpleChimera.isCandidateInvertedDuplication()`. The todo message. > TODO: 5/5/18 Note that the use of the following predicate is currently obsoleted by; {@link AssemblyContigWithFineTunedAlignments#hasIncompletePictureFromTwoAlignments()}; because the contigs with this alignment signature is classified as ""incomplete"",; hence will NOT sent here for constructing SimpleChimera's.; But we may want to keep the code (and related code in BreakpointComplications) for future use. Comment by @cwhelan ; > I'm a bit confused by this comment: this method is still being called in several places, so how is it obsolete?. Reply by @SHUANG-Broad (also copied to update the ""TODO"" message; > this predicate is currently used in two places (excluding appearance in comments): `BreakpointComplications.IntraChrStrandSwitchBreakpointComplications`, where it is use to test if the input simple chimera indicates an inverse tandem duplication and trigger the logic for inferring duplicated region; and `BreakpointsInference.IntraChrStrandSwitchBreakpointInference`, where it is used for breakpoint inference. The problem is, the contig will not even be sent here, because `AssemblyContigWithFineTunedAlignments.hasIncompletePictureFromTwoAlignments()` defines a simple chimera that has strand switch and the two alignments overlaps on reference as ""incomplete"", so in practice the two uses are not going to be triggered. But when we come back later and see what can be extracted from such ""incomplete"" contigs, these code could be useful again. So it is kept. ------------; ### On the problem of writing out SAM records of ""Unknown"" contigs efficiently. First round comment by @cwhelan ; > This seems like a very inefficient way to write these three files. You end up calling collect on the RDD three different times and then traversing the local collection three times. Why not make a map of contig name to bam fil",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4663#issuecomment-387899030:2932,test,test,2932,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4663#issuecomment-387899030,4,"['log', 'test']","['logic', 'test']"
Testability," less than 40GB and they successfully finished import batch 1 and running for batch 2 or 3. Thus, the file size for chr5-12 are 59GB now. However, for chr1-4, they just crash in batch 1 for very long time without any error. I have check the memory usage and there is still >35GB free memory for the compute node of each chromosome. Please see the followings for detail:. File size for all chromosomes, the GenomicsDB for chr1-4 is smaller:; <pre>[hcaoad@login-0 GenomicsDB]> du -h --max-depth=1; 59G ./chr10; 59G ./chr6; 50G ./chr2; 59G ./chr12; 59G ./chr9; 59G ./chr5; 59G ./chr7; 48G ./chr1; 59G ./chr11; 59G ./chr8; 40G ./chr4; 41G ./chr3; 647G .; </pre>. Files in GenomicsDB of chr1 batch 1. As you can see, no update for the database since Apr 20 13:34, while current time is Apr 21.; <pre>[hcaoad@login-0 .__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611]> pwd; /home/hcaoad/scratch/Han/WGS/HK_WGS_5X/GenomicsDB/chr1/1$1$249250621/.__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611; [hcaoad@login-0 .__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611]> date; Wed Apr 21 11:09:46 HKT 2021; [hcaoad@login-0 .__6f46d0f3-86b3-4e38-92be-9a912291df0c139544093255424_1618555702611]> ll -h; total 48G; -rwx------ 1 hcaoad boip 260M Apr 20 13:34 AD.tdb; -rwx------ 1 hcaoad boip 203M Apr 20 13:34 AD_var.tdb; -rwx------ 1 hcaoad boip 304M Apr 20 13:34 ALT.tdb; -rwx------ 1 hcaoad boip 146M Apr 20 13:34 ALT_var.tdb; -rwx------ 1 hcaoad boip 353M Apr 20 13:34 BaseQRankSum.tdb; -rwx------ 1 hcaoad boip 7.3G Apr 20 13:34 __coords.tdb; -rwx------ 1 hcaoad boip 132M Apr 20 13:34 DB.tdb; -rwx------ 1 hcaoad boip 3.4G Apr 20 13:34 DP_FORMAT.tdb; -rwx------ 1 hcaoad boip 295M Apr 20 13:34 DP.tdb; -rwx------ 1 hcaoad boip 8.1G Apr 20 13:34 END.tdb; -rwx------ 1 hcaoad boip 223M Apr 20 13:34 ExcessHet.tdb; -rwx------ 1 hcaoad boip 158M Apr 20 13:34 FILTER.tdb; -rwx------ 1 hcaoad boip 0 Apr 20 13:34 FILTER_var.tdb; -rwx------ 1 hcaoad boip 3.7G Apr",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7218:1724,log,login-,1724,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7218,1,['log'],['login-']
Testability," long reads only (90x human wgs, min. read length>10kbp).; However, if the large BAM file contains short reads, it executes normally. #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_. ```shell; sysctl -w vm.max_map_count=2147483642; gatk SortSamSpark \; --input HG002-NA24385-GM24385.bam \; --output HG002-NA24385-GM24385.sorted.bam \; --sort-order coordinate \; --java-options ""-XX:+UnlockDiagnosticVMOptions -XX:GCLockerRetryAllocationCount=96 -XX:+UseNUMA -XX:+UseZGC -Xmx1794G"" \; --tmp-dir . \; -- \; --spark-runner LOCAL --spark-master local[96] --conf spark.local.dir=./tmp --conf spark.port.maxRetries=61495; ```. #### Expected behavior; _Tell us what should happen_. Output a sorted BAM file. #### Actual behavior; _Tell us what happens instead_. `java.lang.OutOfMemoryError: Required array length ? is too large`. The last lines of the log file.; ```; 11:00:42.884 INFO BlockManagerInfo - Removed taskresult_15758 on 172.20.19.130:43279 in memory (size: 10.5 MiB, free: 1076.2 GiB); 11:00:42.888 INFO TaskSchedulerImpl - Removed TaskSet 0.0, whose tasks have all completed, from pool; 11:00:42.902 INFO DAGScheduler - ResultStage 0 (sortByKey at SparkUtils.java:165) finished in 1652.742 s; 11:00:42.915 INFO DAGScheduler - Job 0 is finished. Cancelling potential speculative or zombie tasks for this job; 11:00:42.916 INFO TaskSchedulerImpl - Killing all running tasks in stage 0: Stage finished; 11:00:42.927 INFO DAGScheduler - Job 0 finished: sortByKey at SparkUtils.java:165, took 1653.133440 s; 11:00:49.975 INFO MemoryStore - Block broadcast_3 stored as values in memory (estimated size 2044.7 KiB, free 1076.2 GiB); 11:00:49.999 INFO MemoryStore - Block broadcast_3_piece0 stored as bytes in memory (estimated size 56.6 KiB, free 1076.2 GiB); 11:00:49.999 INFO BlockManagerInfo - Added broadcast_3_piece0 in memory on 172",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8949:1473,log,log,1473,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8949,1,['log'],['log']
Testability," more log output.; > Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 17s; ```; However, I already install git-lfs; ```; git-lfs usr/; git-lfs usr/bin/; git-lfs usr/bin/git-lfs; git-lfs usr/share/; git-lfs usr/share/licenses/; git-lfs usr/share/licenses/git-lfs/; git-lfs usr/share/licenses/git-lfs/LICENSE; git-lfs usr/share/man/; git-lfs usr/share/man/man1/; git-lfs usr/share/man/man1/git-lfs-checkout.1.gz; git-lfs usr/share/man/man1/git-lfs-clean.1.gz; git-lfs usr/share/man/man1/git-lfs-clone.1.gz; git-lfs usr/share/man/man1/git-lfs-dedup.1.gz; git-lfs usr/share/man/man1/git-lfs-env.1.gz; git-lfs usr/share/man/man1/git-lfs-ext.1.gz; git-lfs usr/share/man/man1/git-lfs-fetch.1.gz; git-lfs usr/share/man/man1/git-lfs-filter-process.1.gz; git-lfs usr/share/man/man1/git-lfs-fsck.1.gz; git-lfs usr/share/man/man1/git-lfs-install.1.gz; git-lfs usr/share/man/man1/git-lfs-lock.1.gz; git-lfs usr/share/man/man1/git-lfs-locks.1.gz; git-lfs usr/share/man/man1/git-lfs-logs.1.gz; git-lfs usr/share/man/man1/git-lfs-ls-files.1.gz; git-lfs usr/share/man/man1/git-lfs-merge-driver.1.gz; git-lfs usr/share/man/man1/git-lfs-migrate.1.gz; git-lfs usr/share/man/man1/git-lfs-pointer.1.gz; git-lfs usr/share/man/man1/git-lfs-post-checkout.1.gz; git-lfs usr/share/man/man1/git-lfs-post-commit.1.gz; git-lfs usr/share/man/man1/git-lfs-post-merge.1.gz; git-lfs usr/share/man/man1/git-lfs-pre-push.1.gz; git-lfs usr/share/man/man1/git-lfs-prune.1.gz; git-lfs usr/share/man/man1/git-lfs-pull.1.gz; git-lfs usr/share/man/man1/git-lfs-push.1.gz; git-lfs usr/share/man/man1/git-lfs-smudge.1.gz; git-lfs usr/share/man/man1/git-lfs-standalone-file.1.gz; git-lfs usr/share/man/man1/git-lfs-status.1.gz; git-lfs usr/share/man/man1/git-lfs-track.1.gz; git-lfs usr/share/man/man1/git-lfs-uninstall.1.gz; git-lfs usr/share/man/man1/git-lfs-unlock.1.gz; git-lfs usr/share/man/man1/git-lfs-untrack.1.gz; git-lfs usr/share/man/man1/git-lfs-update.1.gz; git-lfs usr/share/man/man",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8320:2382,log,logs,2382,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8320,1,['log'],['logs']
Testability, name java.net.UnknownHostException: de2c81c88ddc: de2c81c88ddc: Temporary failure in name resolution; at java.net.InetAddress.getLocalHost(InetAddress.java:1506); at org.apache.logging.log4j.core.util.NetUtils.getLocalHostname(NetUtils.java:54); at org.apache.logging.log4j.core.LoggerContext.lambda$setConfiguration$0(LoggerContext.java:620); at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660); at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:620); at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:699); at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:716); at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:270); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:155); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:47); at org.apache.logging.log4j.LogManager.getContext(LogManager.java:196); at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:599); at org.broadinstitute.hellbender.utils.Utils.<clinit>(Utils.java:72); at org.broadinstitute.hellbender.Main.<clinit>(Main.java:45); Caused by: java.net.UnknownHostException: de2c81c88ddc: Temporary failure in name resolution; at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method); at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929); at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324); at java.net.InetAddress.getLocalHost(InetAddress.java:1501); ...13 more. The Genome Analysis Toolkit (GATK) v4.2.6.1; HTSJDK Version: 2.24.1; Picard Version: 2.27.1; Using GATK jar /gatk/gatk-package-4.2.6.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /gatk/gatk-package-4.2.6.1-local.jar -version; ```. This request ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7983:1302,Log,LogManager,1302,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7983,1,['Log'],['LogManager']
Testability," occur.; 15:41:51.201 INFO DataSourceUtils - Resolved data source file path: file:///home/shiyang/softwares/gatk-4.1.8.1/gencode.v34lift37.pc_transcripts.fa -> file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/gencode/hg19/gencode.v34lift37.pc_transcripts.fa; 15:41:54.713 INFO DataSourceUtils - Resolved data source file path: file:///home/shiyang/softwares/gatk-4.1.8.1/simple_uniprot_Dec012014.tsv -> file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/simple_uniprot/hg19/simple_uniprot_Dec012014.tsv; 15:41:54.747 INFO DataSourceUtils - Resolved data source file path: file:///home/shiyang/softwares/gatk-4.1.8.1/gencode_xrefseq_v75_37.tsv -> file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/gencode_xrefseq/hg19/gencode_xrefseq_v75_37.tsv; 15:41:54.798 INFO Funcotator - Initializing Funcotator Engine...; 15:41:54.811 INFO Funcotator - Creating a MAF file for output: file:/home/shiyang/Project/BGB900_101/TSO_result/test.maf; 15:41:54.826 INFO ProgressMeter - Starting traversal; 15:41:54.827 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 15:41:54.853 INFO VcfFuncotationFactory - ClinVar_VCF 20180401 cache hits/total: 0/0; 15:41:54.854 INFO VcfFuncotationFactory - dbSNP 9606_b151 cache hits/total: 0/0; 15:41:54.860 INFO Funcotator - Shutting down engine; [August 19, 2020 3:41:54 PM CST] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.10 minutes.; Runtime.totalMemory()=2588409856; htsjdk.tribble.TribbleException$MalformedFeatureFile: Error parsing LineIteratorImpl(SynchronousLineReader) at the first queried after chr1:2489658, for input source: file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/gencode/hg19/gencode.v34lift37.annotation.REORDERED.gtf; at htsjdk.tribble.TribbleIndexedFeatureReader$QueryIterator.readNextRecord(TribbleIndexedFe",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6758:19944,test,test,19944,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6758,1,['test'],['test']
Testability," on FSx for luster mount on ec2:; ; [root@ip-10-76-63-158 genomicsdb]# dd if=/dev/zero of=/gfb-dev-sv-fsx-results-us-east-2/cromwell-execution/GATKSVPipelineBatch/087bd722-5f51-43eb-a89e-70846a1da89f/call-GATKSVPipelinePhase1/GATKSVPipelinePhase1/38595c13-b874-4753-a554-81c09f6449f8/call-GatherBatchEvidence/GatherBatchEvidence/c8120761-6d9f-4bd3-b450-f528b7be817c/call-BAFFromGVCFs/BAFFromGVCFs/d5032666-9c09-4857-a8d7-41042927cf89/call-ImportGVCFs/shard-389/genomicsdb/test.img bs=1G count=5 oflag=dsync; 5+0 records in; 5+0 records out; 5368709120 bytes (5.4 GB) copied, 23.5143 s, 228 MB/s; [root@ip-10-76-63-158 genomicsdb]#. We also ran the jobs with strace enabled and we found that there are millions of FUTEX_WAIT_PRIVATE processes while we run the jobs for fsx writing as compared to just 26 when we write to EBS. # Local EBS writing strace log (Ran around 3.5 hrs); [root@ip-10-76-62-193 importvcf-job]# egrep ""FUTEX_WAIT_PRIVATE, 0, NULL"" ./local-write-logs/strace_local_writing.log | wc -l; 26. # FSx strace logs; # --reader-threads 5 (Ran around 7 hours); [root@ip-10-76-62-193 importvcf-job]# egrep ""FUTEX_WAIT_PRIVATE, 0, NULL"" ./fsx-write-logs/strace_fsx_writing.log | wc -l; 24378265. # --reader-threads 1; [root@ip-10-76-62-193 importvcf-job]# egrep ""FUTEX_WAIT_PRIVATE, 0, NULL"" ./strace_thread_1_fsx.txt | wc -l; 8745113. #--reader-threads 2; [root@ip-10-76-62-193 importvcf-job]# egrep ""FUTEX_WAIT_PRIVATE, 0, NULL"" ./strace_thread_2_fsx.txt | wc -l; 13946622. #--reader-threads 10; [root@ip-10-76-62-193 importvcf-job]# egrep ""FUTEX_WAIT_PRIVATE, 0, NULL"" ./strace_thread_10_fsx.txt | wc -l; 13535883; [root@ip-10-76-62-193 importvcf-job]#. The last 3 i.e. tests for thread 1, 2 and 10 were only executed for 20 mins and in those 20 minutes it only loaded around 220 MBs to the genomicsdb. Note that the above executions were done on different EC2 instances with 4 CPU and 30 GB memory (each running 1 job only at a given time). FSx executions were done one after the other. P",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7646:3632,log,log,3632,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7646,1,['log'],['log']
Testability," opened a bugreport to add a feature to ValidateVariants: https://github.com/broadinstitute/gatk/issues/6553. However, it would be nice if you could actually investigate the formatting error. Unfortunately my formatting error isn't the same as reported in the other post. I have 105 error in which the 1st alternative allele is a spanning deletion and the 2nd (and 3rd) is either an indel or snp. It's true that the 2nd and 3rd allele is actually not found in my samples. I even have 7 occurances in which the 1st allele (spanning deletion) has allele frequency 1.00. my code is the following for GenotypeGVCFs:. java -Xms32G -Xmx32G -jar ${gatk4} GenotypeGVCFs -R ${ref} -V ${pipeline}/${name}\_v4.1.6.0.g.vcf.gz -O ${vcf}/${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list 2> ${log}/${name}\_v4.1.6.0\_genotype.log. for ValidateVariants:. java -Xms10G -Xmx10G -jar ${gatk4} ValidateVariants -R ${ref} -V ${name}\_v4.1.6.0.vcf.gz -L ${pipeline}/${name}\_intervals.list --warn-on-errors 2> ${log}/${name}\_v4.1.6.0\_genotype\_valivar.log. the warning in ValidateVariants and the site look like this:. 14:12:15.126 WARN ValidateVariants - \*\*\*\*\* Input 1st\_v4.1.6.0.vcf.gz fails strict validation of type ALL: one or more of the ALT allele(s) for the record at position chr\_1:1088200 are not observed at all in the sample genotypes \*\*\*\*\* ; ; chr\_1 1088200 . T \*,TAAAAAAAAAAAA 64.39 . AC=8,0;AF=0.667,0.00;AN=12;DP=118;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.4286;MLEAC=7,7;MLEAF=0.583,0.583;MQ=58.73;QD=32.19;SOR=2.303 GT:AD:DP:GQ:PL ./.:9,0,0:9:.:0,0,0,0,0,0 0/0:9,0,0:9:0:0,0,113,0,113,113 ./.:10,0,0:10:.:0,0,0,0,0,0 ./.:5,0,0:5:.:0,0,0,0,0,0 1/1:0,0,1:1:0:225,15,0,15,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:12,0,0:12:.:0,0,0,0,0,0 ./.:8,0,0:8:.:0,0,0,0,0,0 0/0:3,0,0:3:0:0,0,43,0,43,43 ./.:7,0,0:7:.:0,0,0,0,0,0 ./.:1,0,0:1:.:0,0,0,0,0,0 ./.:0,0,0:0:.:0,0,0,0,0,0 ./.:3,0,0:3:.:0,0,0,0,0,0 ./.:7,0,0:7:.:0,0,0,0,0,0 1/1:0,0,0:0:0:45,3,0,3,0,0 ./.:0,0,0 1/1:0,0,1:1:0:45,3,0",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6630:1778,log,log,1778,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6630,1,['log'],['log']
Testability, org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.inter,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4422,Test,TestMethodWorker,4422,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestMethodWorker']
Testability, org.broadinstitute.hellbender.tools.walkers.vqsr.CNNVariantPipelineTest.testTrainingReadModel(CNNVariantPipelineTest.java:85); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClass,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6307:3516,test,testng,3516,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6307,1,['test'],['testng']
Testability, org.broadinstitute.hellbender.utils.runtime.AsynchronousStreamWriterServiceUnitTest.testAsyncWriteInBatches(AsynchronousStreamWriterServiceUnitTest.java:35); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Nati,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4024:1474,Test,TestRunner,1474,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4024,1,['Test'],['TestRunner']
Testability, org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:120); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Caused by: org.gradle.process.internal.ExecException: Process 'Gradle Test Executor 1' finished with non-zero exit value 134; 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:369); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.process.internal.worker.DefaultWorkerProcess.waitForStop(DefaultWorkerProcess.java:190); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.process.internal.worker.DefaultWorkerProcessBuilder$MemoryRequestingWorkerProcess.waitForStop(DefaultWorkerProcessBuilder.java:228); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.worker.ForkingTestClassProcessor.stop(ForkingTestClassProcessor.java:122); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.processors.RestartEveryNTestClassProcessor.e,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2802:13580,Test,Test,13580,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2802,1,['Test'],['Test']
Testability, org.testng.Assert.assertEquals(Assert.java:372); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:211); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:190); 	at org.broadinstitute.hellbender.tools.examples.ExampleAssemblyRegionWalkerSparkIntegrationTest.testExampleAssemblyRegionWalker(ExampleAssemblyRegionWalkerSparkIntegrationTest.java:29); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:773); 	at org.testng.TestRunner.run(TestRunner.java:623); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); 	at org.testng.SuiteRunner.run(SuiteRunner.java:259); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); 	at org.testng.TestNG.run(TestNG.java:1018); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.grad,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:4362,test,testng,4362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['test'],['testng']
Testability, org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at or,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748:3507,Test,TestNG,3507,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748,2,['Test'],['TestNG']
Testability, org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at or,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:5198,Test,TestNG,5198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestNG']
Testability, org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: java.lang.RuntimeException: java.lang.NoSuchMethodError: com.google.common.base.Stopwatch.createStarted()Lcom/google/common/base/Stopwatch;; at com.google.cloud.dataflow.sdk.Pipeline.run(Pipeline.java:166); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.runPipeline(DataflowCommandLineProgram.java:145); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.doWork(DataflowCommandLineProgram.java:107); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:98); at org.broadinsti,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/866:2421,test,testng,2421,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/866,1,['test'],['testng']
Testability, org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy5.stop(Unknown Source); 	at org.grad,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6745:3332,test,testng,3332,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6745,2,['test'],['testng']
Testability, org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy5.stop(Unknown Source); 	at org.grad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:3353,test,testng,3353,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testng']
Testability, package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2841948Z src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/IntervalArgumentCollection.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2856913Z src/main/java/org/broadinstitute/hellbender/engine/ProgressMeter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2860245Z src/main/java/org/broadinstitute/hellbender/engine/filters/ReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2861934Z src/main/java/org/broadinstitute/hellbender/engine/filters/CountingReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3012792Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCF.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3151812Z src/main/java/org/broadinstitute/hellbender/utils/logging/OneShotLogger.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3156616Z src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerGenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3263061Z src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3605617Z src/main/java/org/broadinstitute/hellbender/utils/genotyper/AlleleLikelihoods.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3694118Z src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/InfoFieldAnnotation.java:3: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.3740413Z src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/VariantAnnotation.java:3: error: package com.goog,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480:2704,log,logging,2704,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480,1,['log'],['logging']
Testability, package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6638787Z src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/IntervalArgumentCollection.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6653787Z src/main/java/org/broadinstitute/hellbender/engine/ProgressMeter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6657039Z src/main/java/org/broadinstitute/hellbender/engine/filters/ReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6658760Z src/main/java/org/broadinstitute/hellbender/engine/filters/CountingReadFilter.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6739776Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCF.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6889124Z src/main/java/org/broadinstitute/hellbender/utils/logging/OneShotLogger.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6895571Z src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/HaplotypeCallerGenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6965286Z src/main/java/org/broadinstitute/hellbender/utils/dragstr/DragstrReferenceAnalyzer.java:87: error: unmappable character for encoding ASCII; 2022-08-16T22:45:53.6965863Z * Returns the STR period at a given position.??; 2022-08-16T22:45:53.6972650Z src/main/java/org/broadinstitute/hellbender/utils/dragstr/DragstrReferenceAnalyzer.java:87: error: unmappable character for encoding ASCII; 2022-08-16T22:45:53.6973221Z * Returns the STR period at a given position.??; 2022-08-16T22:45:53.6981573Z src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypingEngine.java:3: error: package com.google.common.annotations does not exist; 2022-08-16,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:4357,log,logging,4357,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,1,['log'],['logging']
Testability," pid=849, tid=0x00007ff82e11d700; #; # JRE version: OpenJDK Runtime Environment (8.0_242-b08) (build 1.8.0_242-8u242-b08-0ubuntu3~18.04-b08); # Java VM: OpenJDK 64-Bit Server VM (25.242-b08 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [libgkl_smithwaterman5951765478004985534.so+0x132d] smithWatermanBackTrack(dnaSeqPair*, int, int, int, int, int*, int)+0x1bd; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/gatk/hs_err_pid849.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. **RELEVANT FILES**; [hs_err_pid100.log](https://github.com/broadinstitute/gatk/files/6203288/hs_err_pid100.log); [hs_err_pid164.log](https://github.com/broadinstitute/gatk/files/6203289/hs_err_pid164.log); [hs_err_pid274.log](https://github.com/broadinstitute/gatk/files/6203290/hs_err_pid274.log); [hs_err_pid400.log](https://github.com/broadinstitute/gatk/files/6203291/hs_err_pid400.log); [hs_err_pid482.log](https://github.com/broadinstitute/gatk/files/6203292/hs_err_pid482.log); [hs_err_pid711.log](https://github.com/broadinstitute/gatk/files/6203293/hs_err_pid711.log); [hs_err_pid735.log](https://github.com/broadinstitute/gatk/files/6203294/hs_err_pid735.log); [hs_err_pid801.log](https://github.com/broadinstitute/gatk/files/6203295/hs_err_pid801.log); [hs_err_pid825.log](https://github.com/broadinstitute/gatk/files/6203296/hs_err_pid825.log); [hs_err_pid849.log](https://github.com/broadinstitute/gatk/files/6203297/hs_err_pid849.log); [otherFiles.zip](https://github.com/broadinstitute/gatk/files/6203305/otherFiles.zip); [in2510-8.orientationFilter.vcf.txt](https://github.com/broadinstitute/gatk/files/6203356/in2510-8.or",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7162:6575,log,log,6575,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7162,1,['log'],['log']
Testability," pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian consistency, white = reference. The second plot shows the training/truth positives used to train the model and to calculate the LL score in the validation shard. The third plot shows the ""orthogonal truth"" positives/negatives used to calculate F1. So we can see that the difficulty in deriving F1 as a function of the score along the horizontal axis to give the third plot lies in collapsing the columns in the top plot into a single condition positive or condition negative status. Again, hard to do so without some arbitrariness; I simply came up with some rules to convert various amounts of red, yellow, green, etc. in each column to a red/white/green status. If you're using a single gold-standard sample, this should definitely be more straightforward. In any case, the optimal validation LL score at ~0.02 does appear to line up quite well visually with where one might manually set a threshold. It corresponds pretty well with the transition from the yellow/red/grey junk to the clean green/white sites in the top plot. Here's the same for the test set:. ![image](https://user-images.githubusercontent.com/11076296/158385662-6693a6c9-709c-482f-9a7e-5bb7030b3383.png). Happy to chat more about how you might implement this in your WDL---should be pretty straightforward!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:3050,test,test,3050,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,2,['test'],['test']
Testability," publish another artifact so we can move our projects forward. The crux of what I'm trying to achieve with these changes is for our VariantQC tool; however, I'm bumping into several situations where MultiVariantWalkers need to be able to determine the FeatureInput source of the variants. I recognize that this and my original PR #6973 has taken a non-trivial amount of @cmnbroad time, but we have basically been stalled with an otherwise approved PR since Feb 8. The PRs blocking that PR are this one and the related #7021. They both involve creating a way to connect VariantContext to FeatureInput - a capability that would benefit the GATK engine and I have been told by @cmnbroad you're interested in having. It seems like the primary problem associated with these changes is ensuring tests and VariantContext comparison code still works, since VariantContexts are going to tend to report a source. I dont know your internal conversations, so I'm guessing based on what's written in github. As I've said, I'd like to do whatever I can to get these changes into a form that takes as little of your effort as possible. . While this particular PR seems close, there is clearly some cleanup needed from what's there now, including code review from @lbergelson that no one ever fixed. Would it help if I put together #4571 and #7021 into a new branch where I also work through associated test changes and try to get this into one concise piece of code to review? Basically try to put everything together to be the minimal amount of work needed on your side? I havent heard anything one way or the other from GATK staff as to whether this would actually be helpful or not. Are there higher order design decisions that need to be considered that I'm not seeing? . I completely understand your time constraints - I'm just trying to figure out some solution that let's this go forward. Again, if we cant unblock this soon I'm going to probably fork GATK and need to start working off that project. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-822691252:1575,test,test,1575,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-822691252,2,['test'],['test']
Testability," read). You can find the failure below, but I also dug out the location of the failure with a proposed fix. ./gatk/src/main/java/org/broadinstitute/hellbender/utils/recalibration/covariates/ContextCovariate.java line 191 -->. ```; while (bases[currentNPenalty] != 'N') {; final int baseIndex = BaseUtils.simpleBaseToBaseIndex(bases[currentNPenalty]);; currentKey |= (baseIndex << offset);; offset -= 2;; currentNPenalty--;; }; ```. The current while loop allows the array index to become negative and walk right off the edge of the read. So a proposed fix is as follows (assuming it does not break the covariate logic) -->. ```; while (currentNPenalty > 0 && bases[currentNPenalty] != 'N') {; final int baseIndex = BaseUtils.simpleBaseToBaseIndex(bases[currentNPenalty]);; currentKey |= (baseIndex << offset);; offset -= 2;; currentNPenalty--;; }; ```. Minimal Command (test.bam attached - added txt extension just so site would let me attach it) -->. ```; gatk-launch BaseRecalibrator -I test.bam -O test.table -R GATK_Bundle_Build38/Homo_sapiens_assembly38.fasta --knownSites GATK_Bundle_Build38/dbsnp_146.hg38.vcf.gz; ```. Error message --> . ```; java.lang.ArrayIndexOutOfBoundsException: -1; 	at org.broadinstitute.hellbender.utils.recalibration.covariates.ContextCovariate.contextWith(ContextCovariate.java:191); 	at org.broadinstitute.hellbender.utils.recalibration.covariates.ContextCovariate.recordValues(ContextCovariate.java:68); 	at org.broadinstitute.hellbender.utils.recalibration.covariates.StandardCovariateList.recordAllValuesInStorage(StandardCovariateList.java:133); 	at org.broadinstitute.hellbender.utils.recalibration.RecalUtils.computeCovariates(RecalUtils.java:546); 	at org.broadinstitute.hellbender.utils.recalibration.RecalUtils.computeCovariates(RecalUtils.java:527); 	at org.broadinstitute.hellbender.utils.recalibration.BaseRecalibrationEngine.processRead(BaseRecalibrationEngine.java:136); 	at org.broadinstitute.hellbender.tools.walkers.bqsr.BaseRecalibrator.apply(Bas",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4005:1548,test,test,1548,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4005,1,['test'],['test']
Testability," report file with more information is saved as:; # /home/gatk/hs_err_pid849.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. **RELEVANT FILES**; [hs_err_pid100.log](https://github.com/broadinstitute/gatk/files/6203288/hs_err_pid100.log); [hs_err_pid164.log](https://github.com/broadinstitute/gatk/files/6203289/hs_err_pid164.log); [hs_err_pid274.log](https://github.com/broadinstitute/gatk/files/6203290/hs_err_pid274.log); [hs_err_pid400.log](https://github.com/broadinstitute/gatk/files/6203291/hs_err_pid400.log); [hs_err_pid482.log](https://github.com/broadinstitute/gatk/files/6203292/hs_err_pid482.log); [hs_err_pid711.log](https://github.com/broadinstitute/gatk/files/6203293/hs_err_pid711.log); [hs_err_pid735.log](https://github.com/broadinstitute/gatk/files/6203294/hs_err_pid735.log); [hs_err_pid801.log](https://github.com/broadinstitute/gatk/files/6203295/hs_err_pid801.log); [hs_err_pid825.log](https://github.com/broadinstitute/gatk/files/6203296/hs_err_pid825.log); [hs_err_pid849.log](https://github.com/broadinstitute/gatk/files/6203297/hs_err_pid849.log); [otherFiles.zip](https://github.com/broadinstitute/gatk/files/6203305/otherFiles.zip); [in2510-8.orientationFilter.vcf.txt](https://github.com/broadinstitute/gatk/files/6203356/in2510-8.orientationFilter.vcf.txt); *VCF extension appended with .txt to satisfy GitHub's upload requirements*. #### Expected behavior; Worked on 7 other files generated with the same pipeline. . #### Actual behavior; Unsure why this last one is causing a segfault. The VCF included is not the whole VCF submitted originally. I went cutting out lines from the original until I could isolate it down to a minimal set required to reproduce the crash (I included all of the crash logs generated in case it can help). I was expecting to find a single l",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7162:7112,log,log,7112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7162,1,['log'],['log']
Testability," same result. Java version is ``` OpenJDK Runtime Environment (build 1.8.0_252-b09) ```; ```; /gatk-4.0.11.0/gatk --java-options ""-Xmx4G"" HaplotypeCaller \; -R GRCh38.p2.fa \; -I RT4_STD.bam \; -ERC GVCF \; -L chr16 \; -O RT4_STD.g.vcf \; -new-qual; ```; - Error message is also different; - First one is :; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00002aaad9f1e54a, pid=7818, tid=0x00002aaaabdce700; #; # JRE version: Java(TM) SE Runtime Environment (8.0_111-b14) (build 1.8.0_111-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [libgkl_pairhmm_omp1890484777463615571.so+0x6954a] double compute_full_prob_avxd<double>(testcase*)+0x34a; #; # Core dump written. Default location: core or core.7818; #; # An error report file with more information is saved as:; # hs_err_pid7818.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; ```. -Second one is ; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000035dfe84364, pid=160107, tid=0x00002aaaabdce700; #; # JRE version: Java(TM) SE Runtime Environment (8.0_111-b14) (build 1.8.0_111-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 ); # Problematic frame:; # C [libc.so.6+0x84364]; #; # Core dump written. Default location: core or core.160107; #; # An error report file with more information is saved as:; # hs_err_pid160107.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug. ```. Could this be a bug of problem with my data?. Thanks, ; Wen",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7515:1937,log,log,1937,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7515,1,['log'],['log']
Testability," samples x 1000 intervals, I have verified determinism/reproducibility for DetermineGermlineContigPloidy COHORT/CASE modes, GermlineCNVCaller COHORT/CASE modes, and PostprocessGermlineCNVCalls. Numerical results are also relatively close to those from 4.4.0.0 for all identifiable call and model quantities (albeit far outside any reasonable exact-match thresholds, most likely due to differences in RNG, sampling, and the aforementioned priors). Some remaining TODOs:. - [x] Rebuild and push the base Docker. EDIT: Mostly covered by #8610, but this also includes an addition of `libblas-dev`.; - [x] Update expected results for integration tests, perhaps add any that might be missing. EDIT: These were generated on WSL Ubuntu 20.04.2, we'll see if things pass on 22.04. Note that changing the ARD priors does change the *names* of the expected files, since the transform is appended to the corresponding variable name. DetermineGermlineContigPloidy and PostprocessGermlineCNVCalls are missing exact-match tests and should probably have some, but I'll leave that to someone else.; - [x] Update other python integration tests.; - [x] Clean up some of the changes to the priors.; - [x] Clean up some TODO comments that I left to track code changes that might result in changed numerics. I'll try to go through and convert these to PR comments in an initial review pass.; - [x] Test over multiple shards on WGS and WES. Probably some scientific tests on ~100 samples in both cohort and case mode would do the trick. We should also double check runtime/memory performance (I noted ~1.5x speedups, but didn't measure carefully; I also want to make sure the changes to posterior sampling didn't introduce any memory issues). @mwalker174 will ping you when a Docker is ready! Might be good to loop in Isaac and/or Jack as well.; - [x] Perhaps add back the fix for 2-interval shards in https://github.com/broadinstitute/gatk/pull/8180, which I removed since the required functionality wasn't immediately ava",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1847549285:2333,test,tests,2333,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-1847549285,1,['test'],['tests']
Testability," sampling complete.; 09:46:01.621 INFO MultidimensionalModeller - Smoothing iteration: 2; 09:46:01.621 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 398; 09:46:01.621 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 341; 09:46:01.622 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:02.459 INFO GibbsSampler - Starting MCMC sampling.; 09:46:04.896 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:07.292 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:09.705 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - MCMC sampling complete.; 09:46:12.179 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:12.202 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:12.546 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599161.730531...; 09:46:12.546 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.041338, outlierProbability=0.030947}; 09:46:12.859 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599150.005317...; 09:46:12.859 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.036533, outlierProbability=0.037484}; 09:46:13.165 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599148.402059...; 09:46:13.165 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149236, biasVariance=0.034264, outlierProbability=0.038997}; 09:46:13.451 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599147.957754...; 09:46:13.451 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147087, biasVariance=0.033230, outlierProbability=0.038997}; 09:46:13.573 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:7166,log,log,7166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:46:39.763 INFO MultidimensionalModeller - Smoothing iteration: 3; 09:46:39.763 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 341; 09:46:39.764 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 326; 09:46:39.764 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:40.559 INFO GibbsSampler - Starting MCMC sampling.; 09:46:42.928 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:45.335 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:47.720 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - MCMC sampling complete.; 09:46:50.130 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:50.155 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:50.491 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599186.382799...; 09:46:50.491 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.041597, outlierProbability=0.031043}; 09:46:50.793 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599173.973431...; 09:46:50.793 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.036521, outlierProbability=0.036858}; 09:46:51.096 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599172.045766...; 09:46:51.096 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149513, biasVariance=0.034385, outlierProbability=0.039399}; 09:46:51.370 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599171.568776...; 09:46:51.370 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147363, biasVariance=0.033351, outlierProbability=0.039399}; 09:46:51.487 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:9465,log,log,9465,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:47:17.941 INFO MultidimensionalModeller - Smoothing iteration: 4; 09:47:17.942 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 326; 09:47:17.942 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 320; 09:47:17.942 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:18.756 INFO GibbsSampler - Starting MCMC sampling.; 09:47:21.195 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:23.597 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:26.031 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - MCMC sampling complete.; 09:47:28.533 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:47:28.553 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:47:28.883 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599193.821455...; 09:47:28.884 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.041615, outlierProbability=0.031024}; 09:47:29.188 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599181.471228...; 09:47:29.188 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.036547, outlierProbability=0.036766}; 09:47:29.513 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599179.528974...; 09:47:29.514 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149492, biasVariance=0.034434, outlierProbability=0.039341}; 09:47:29.794 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599179.050215...; 09:47:29.794 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147343, biasVariance=0.033400, outlierProbability=0.039341}; 09:47:29.914 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:11764,log,log,11764,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:47:56.024 INFO MultidimensionalModeller - Smoothing iteration: 5; 09:47:56.025 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 320; 09:47:56.025 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 315; 09:47:56.025 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:56.852 INFO GibbsSampler - Starting MCMC sampling.; 09:47:59.368 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:01.836 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:04.204 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - MCMC sampling complete.; 09:48:06.589 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:06.609 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:06.967 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.667518...; 09:48:06.967 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.041090, outlierProbability=0.031116}; 09:48:07.271 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.280111...; 09:48:07.271 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.036781, outlierProbability=0.037210}; 09:48:07.582 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.550266...; 09:48:07.582 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149834, biasVariance=0.034708, outlierProbability=0.039514}; 09:48:07.846 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.121676...; 09:48:07.846 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147684, biasVariance=0.033674, outlierProbability=0.039514}; 09:48:07.961 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:14063,log,log,14063,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:48:33.671 INFO MultidimensionalModeller - Smoothing iteration: 6; 09:48:33.671 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 315; 09:48:33.672 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:48:33.672 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:48:34.470 INFO GibbsSampler - Starting MCMC sampling.; 09:48:36.720 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:39.070 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:41.417 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - MCMC sampling complete.; 09:48:43.749 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:43.771 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:44.116 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:48:44.116 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:48:44.424 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:48:44.424 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:48:44.714 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:48:44.714 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:48:44.991 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:48:44.991 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:48:45.104 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:16362,log,log,16362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," sampling complete.; 09:49:11.543 INFO MultidimensionalModeller - Smoothing iteration: 7; 09:49:11.543 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:49:12.363 INFO GibbsSampler - Starting MCMC sampling.; 09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:49:23.323 INFO GibbsSampler - Starting MCMC sam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:18661,log,log,18661,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability," size (119 KB). The maximum recommended task size is 100 KB.; > Test: Test method testAllTargetsHDF5PoNCreationSpark[0](null, src/test/resources/org/broadinstitute/hellbender/tools/exome/create-pon-control-full.pcov)(org.broadinstitute.hellbender.tools.exome.CreatePanelOfNormalsIntegrationTest) produced standard out/err: 18:03:07.612 WARN TaskSetManager:70 - Stage 182 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB.; > ; > ```; > 18:03:07.612 WARN TaskSetManager:70 - Stage 182 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB.; > ```; > ; > #; > ; > # A fatal error has been detected by the Java Runtime Environment:; > ; > #; > ; > # SIGSEGV (0xb) at pc=0x000000010a5a9401, pid=2425, tid=8963; > ; > #; > ; > # JRE version: Java(TM) SE Runtime Environment (8.0_91-b14) (build 1.8.0_91-b14); > ; > # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.91-b14 mixed mode bsd-amd64 compressed oops); > ; > # Problematic frame:; > ; > # V [libjvm.dylib+0x1a9401]; > ; > #; > ; > # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; > ; > #; > ; > # An error report file with more information is saved as:; > ; > # /Users/louisb/Workspace/gatk-protected/hs_err_pid2425.log; > ; > #; > ; > # If you would like to submit a bug report, please visit:; > ; > # http://bugreport.java.com/bugreport/crash.jsp; > ; > #; > ; > hs_err_pid2425.log.txt; > https://github.com/broadinstitute/gatk-protected/files/448383/hs_err_pid2425.log.txt; > ; > @yfarjoun https://github.com/yfarjoun Is this similar to the crash you; > saw a while back?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/broadinstitute/gatk-protected/issues/659, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/ACnk0h0xGA8ntZ_9wd53IUeIqTIfWye0ks5qlf_YgaJpZM4JyIZS; > .",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2883:3592,log,log,3592,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2883,3,['log'],['log']
Testability," spanned allele (`*`), and a genotype that references the spanned allele, but fail to emit the upstream spanning variant. This seems like a bug to me - either the spanning variant should be emitted _or_ the spanned allele should revert to a reference call. FWIW I have a sneaking suspicion that this is related to setting a non-zero value for `-stand-call-conf` (see #5793). My guess is that in one part of the code it determines the upstream variant _will_ be emitted so retains the allele as spanned, but then somewhere later the upstream variant is filtered out. ### Affected tool(s) or class(es); GenotypeGVCFs. ### Affected version(s); - [x] Latest public release version [4.1.2.0]; - [ ] Latest master branch as of [not tested]. ### Description ; Here's the example from the VCF in the attached zip file:. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT test_sample; chr17 46806234 . TC T 148.64 . ... GT:AD:DP:F1R2:F2R1:GQ:PL 0/1:208,25:239:116,16:90,8:99:156,0,6824; chr17 46806237 . TTCTCTCTCTCTC TTCTC,* 1528.04 . ... GT:AD:DP:F1R2:F2R1:GQ:PL 1/2:3,60,33:174:1,29,20:1,21,11:99:3633,1088,2142,1538,0,3285; ```. You can see from this that a) the first variant does not have a spanned allele, implying that there cannot be a spanning event further upstream and b) the second variant has a spanned allele that is present in the `1/2` genotype. #### Steps to reproduce. The attached zip file contains a reduced test case with a 3-record gVCF and a 2-record VCF that exhibits the problem. To reproduce:. 1. Unzip the attached zip file; 2. Edit `command.sh` to put in the path to HG19; 3. Run `. command.sh` in the directory with the extracted files. #### Expected behavior; Either the spanning variant should be emitted, or the spanned allele should not be. #### Actual behavior; A spanned allele is emitted when there is no spanning variant!. ZIP file with test case: [spanned_allele_not_spanned.zip](https://github.com/broadinstitute/gatk/files/3374898/spanned_allele_not_spanned.zip). ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6031:1518,test,test,1518,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6031,2,['test'],['test']
Testability, src/test/resources/large/Homo_sapiens_assembly38.20.21.dict; src/test/resources/large/Homo_sapiens_assembly38.20.21.fasta.fai; src/test/resources/large/human_g1k_v37.20.21.fasta.amb; src/test/resources/large/human_g1k_v37.20.21.fasta.ann; src/test/resources/large/human_g1k_v37.20.21.fasta.bwt; src/test/resources/large/human_g1k_v37.20.21.fasta.pac; src/test/resources/large/human_g1k_v37.20.21.fasta.sa; src/test/resources/large/K-562.duplicateMarked.chr20.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor.bam.bai; src/test/resources/large/NA12878.RNAseq.bai; src/test/resources/large/SVIntegrationTest.bam.bai; src/test/resources/large/very-small-gnomad.vcf.idx; src/test/resources/large/VQSR/ALL.wgs.indels_mills_devine_hg19_leftAligned_collapsed_double_hit.sites.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/combined.phase1.chr20.raw.indels.filtered.sites.1M-10M.vcf.idx; src/test/resources/large/VQSR/dbsnp_132_b37.leftAligned.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/expected/snpRecal.scattered.vcf.idx; src/test/resources/large/VQSR/expected/snpSampledRecal.vcf.idx; src/test/resources/large/VQSR/indelRecal.vcf.idx; src/test/resources/large/VQSR/Omni25_sites_1525_samples.b37.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf.idx; src/test/resources/large/VQSR/sites_r27_nr.b37_fwd.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/snpRecal.vcf.idx; src/test/resources/NA12878.chr17_69k_70k.dictFix.bam.bai; src/test/resources/NA12878.chr17_69k_70k.dictFix.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/ambiguityCodes.dict; src/test/resources/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:7010,test,test,7010,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P35.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_covariate_bias_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_unexplained_variance_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv/realistic-targets.tab; src/test/resources/large/cnv_somatic_workflows_test_files/ice_targets_sample-chr20.interval_list; src/test/resources/large/cnv_somatic_workflows_test_files/wes-do-gc.pon.hdf5; src/test/resources/large/cnv_somatic_workflows_test_files/wes-no-gc.pon.hdf5; src/test/resources/large/cnv/truncated-realistic-targets.tab; src/test/resources/large/dbsnp_138.b37.1.1-65M.vcf.idx; src/test/resources/large/dbsnp_138.b37.20.21.vcf.blockgz.gz.tbi; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.doNotFixOverhangs.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxBasesInOverhang5.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxMismatchesInOverhang0.bai; src/test/resources/large/gencode.v19.LargeFile.gtf.idx; src/test/resources/large/gencode.v26.primary_assembly.annotation.XYZ.gtf.idx; src/test/resources/large/gvcfs/CEUTrio.20.21.gatk3.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:4622,test,test,4622,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_unexplained_variance_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv/realistic-targets.tab; src/test/resources/large/cnv_somatic_workflows_test_files/ice_targets_sample-chr20.interval_list; src/test/resources/large/cnv_somatic_workflows_test_files/wes-do-gc.pon.hdf5; src/test/resources/large/cnv_somatic_workflows_test_files/wes-no-gc.pon.hdf5; src/test/resources/large/cnv/truncated-realistic-targets.tab; src/test/resources/large/dbsnp_138.b37.1.1-65M.vcf.idx; src/test/resources/large/dbsnp_138.b37.20.21.vcf.blockgz.gz.tbi; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.doNotFixOverhangs.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxBasesInOverhang5.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxMismatchesInOverhang0.bai; src/test/resources/large/gencode.v19.LargeFile.gtf.idx; src/test/resources/large/gencode.v26.primary_assembly.annotation.XYZ.gtf.idx; src/test/resources/large/gvcfs/CEUTrio.20.21.gatk3.4.g.vcf.idx; src/test/resources/large/gvcfs/combined.gatk3.7_30_ga4f720357.g.vcf.gz.tbi; src/test/resources/large/gvcfs/combined.gatk3.7.g.vcf.gz.tbi; src/test/resources/large/gvcfs/gatk3.7_30_ga4f720357.24_sample.21.g.vcf.idx; src/test/r,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:4850,test,test,4850,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/large/cnv_somatic_workflows_test_files/ice_targets_sample-chr20.interval_list; src/test/resources/large/cnv_somatic_workflows_test_files/wes-do-gc.pon.hdf5; src/test/resources/large/cnv_somatic_workflows_test_files/wes-no-gc.pon.hdf5; src/test/resources/large/cnv/truncated-realistic-targets.tab; src/test/resources/large/dbsnp_138.b37.1.1-65M.vcf.idx; src/test/resources/large/dbsnp_138.b37.20.21.vcf.blockgz.gz.tbi; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.doNotFixOverhangs.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxBasesInOverhang5.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxMismatchesInOverhang0.bai; src/test/resources/large/gencode.v19.LargeFile.gtf.idx; src/test/resources/large/gencode.v26.primary_assembly.annotation.XYZ.gtf.idx; src/test/resources/large/gvcfs/CEUTrio.20.21.gatk3.4.g.vcf.idx; src/test/resources/large/gvcfs/combined.gatk3.7_30_ga4f720357.g.vcf.gz.tbi; src/test/resources/large/gvcfs/combined.gatk3.7.g.vcf.gz.tbi; src/test/resources/large/gvcfs/gatk3.7_30_ga4f720357.24_sample.21.g.vcf.idx; src/test/resources/large/gvcfs/HG00096.g.vcf.gz.tbi; src/test/resources/large/gvcfs/HG00268.g.vcf.gz.tbi; src/test/resources/large/gvcfs/NA19625.g.vcf.gz.tbi; src/test/resources/large/Homo_sapiens_assembly38.20.21.dict; src/test/resources/large/Homo_sapiens_assembly38.20.21.fasta.fai; src/test/resources/large/human_g1k_v37.20.21.fasta.amb; src/test/resources/large/human_g1k_v37.20.21.fasta.ann; src/test/resources/large/human_g1k_v37.20.21.fasta.bwt; src/test/resources/large/human_g1k_v37.20.21.fasta.pac; src/test/resources/large/human_g1k_v37.20.21.fasta.sa; src/test/resources/large/K-562.duplicateMarked.chr20.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_4.bam.bai; src/test/resources/large/mutect/dream_,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:5656,test,test,5656,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.2inputs.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.indels_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.low_quality_tail_5.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.mismatches_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.quantizing_levels_6.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq-1.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq6.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate_allaligned.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.sharded.bam/part-r-00001.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.dict; src/test/resources/org/broadinstitute/hellbender/too,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:20843,test,test,20843,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10_CR_WRITE_Q0S.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10_CT_15_X_CCCCC_XF.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10_CT_15_X_CCCCC_XF.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_20.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_20.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_2.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_2.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.X_CCCCC.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.X_CCCCC.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.XF.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.XF.tmp; src/test/resources/org/broadinstitute/hellbender/tools/copynumber/allelic/collect-allelic-counts-normal.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/copynumber/allelic/collect-allelic-counts-tumor.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/copynumber/collectfragmentcounts/collect-fragment-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.dict; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.fasta,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:25539,test,test,25539,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/org/broadinstitute/hellbender/tools/exome/dupReadsMini.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/eval-calls.vcf; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/eval-calls.vcf.gz; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/eval-calls.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/eval-targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/eval-truth.vcf.gz; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/eval-truth.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/gs-calls.vcf.gz; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-average-depth.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-average-fragment-depth.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-fragment-counts.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-base-calls.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-intervals_dups.bed; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-max-of-9.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-min-MQ-30.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12778.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12872.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-no-intervals.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-sampl,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:32246,test,test,32246,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/pretendTobeTetraPloidTetraAllelicSite.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.empty.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.noSG.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg1.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg2.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg3.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg4.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg5.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.dict; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/dream3-chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_4.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/na12878-chr20-consumes-zero-reference-bases.bai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/repeated_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/validation/nearby_indels.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/NA12878.rg_subset.chr1.recal_data.ta,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:38560,test,test,38560,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes_casava.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.dict; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.baq.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.IMPROPER_PAIR.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/Val,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:59600,test,test,59600,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability, src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/expected/testSelectVariants_DiscordanceNoSampleSpecified.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/expected/testSelectVariants_FileWithoutInfoLineInHeaderWithOverride.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/expected/testSelectVariants_SelectMultiAllelicExcludeNonVar.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/filteringDepthInFormat.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/haploid-multisample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/selectVariantsInfoField.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/test.dup.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/tetra-diploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/tetraploid-multisample-sac.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/tetraploid-multisample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/vcfexample2DiscordanceConcordance.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/vcfexample2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/UpdateVCFSequenceDictionary/exampleBAM.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/UpdateVCFSequenceDictionary/exampleFASTA.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/VariantsToTable/expected.soap_gatk_annotated.AMD.table; src/test/resources/org/broadinstitute/hellbender/tools/wal,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:64880,test,test,64880,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability," strategies, while looking at the files I noticed that for a WGS run I obtained a stats file with a negative number:; [egrassi@occam biodiversa]>cat mutect/CRC1307LMO.vcf.gz.stats; statistic value; callable -1.538687311E9. Looking around about the meaning of the number I found https://gatkforums.broadinstitute.org/gatk/discussion/24496/regenerating-mutect2-stats-file, so I'm wondering if I should be worried by having a negative number of callable sites :/; What's more puzzling is that FilterMutectCalls after ran without any error. Before running mutect I used the usual best practices pipeline, then:; ; gatk Mutect2 -tumor CRC1307LMO -R /archive/home/egrassi/bit/task/annotations/dataset/gnomad/GRCh38.d1.vd1.fa -I align/realigned_CRC1307LMO.bam -O mutect/CRC1307LMO.vcf.gz --germline-resource /archive/home/egrassi/bit/task/annotations/dataset/gnomad/af-only-gnomad.hg38.vcf.gz --f1r2-tar-gz mutect/CRC1307LMO_f1r2.tar.gz --independent-mates 2> mutect/CRC1307LMO.vcf.gz.log; ; gatk CalculateContamination -I mutect/CRC1307LMO.pileup.table -O mutect/CRC1307LMO.contamination.table --tumor-segmentation mutect/CRC1307LMO.tum.seg 2> mutect/CRC1307LMO.contamination.table.log; ; gatk LearnReadOrientationModel -I mutect/CRC1307LMO_f1r2.tar.gz -O mutect/CRC1307LMO_read-orientation-model.tar.gz 2> mutect/CRC1307LMO_read-orientation-model.tar.gz.log; ; gatk FilterMutectCalls -V mutect/CRC1307LMO.vcf.gz -O mutect/CRC1307LMO.filtered.vcf.gz -R /archive/home/egrassi/bit/task/annotations/dataset/gnomad/GRCh38.d1.vd1.fa --stats mutect/CRC1307LMO.vcf.gz.stats --contamination-table mutect/CRC1307LMO.contamination.table --tumor-segmentation=mutect/CRC1307LMO.tum.seg --filtering-stats mutect/CRC1307LMO_filtering_stats.tsv --ob-priors mutect/CRC1307LMO_read-orientation-model.tar.gz 2> mutect/CRC1307LMO_filtering_stats.tsv.log; . This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/24633/mutect2-4-1-4-0-stats-file-with-a-negative-number/p1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6302:1201,log,log,1201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6302,4,['log'],['log']
Testability," strings to be consistent and more; correct. - Implemented tests for CreateProteinChangeInfo; - Implemented tests for RenderProteinChangeString; - Implemented tests for IsIndelBetweenCodons; - Implemented tests for GetCodonChangeString. - Added a unit test for; testCreateGencodeFuncotationBuilderWithTrivialFieldsPopulated. - Fixed a bug when variant ref allele doesn't match reference genome. - Fixed test cases for - strand indel cdna strings:; There is a bug in oncotator that was fixed in Funcotator involving cdna; strings for - strand indels. In Oncotator the positions reported are off by 1 (they; should be one less) and the base reported is also wrong.; This is now fixed. - Removed some old code that had been taken out of the main codepath. - Fixed a bug in how the gencode reference contexts are created.; - Fixed a bug in how the end points for the gencode annotations are; created. - Ref context field is now consistent for indels.; The reference context will give WINDOW bases before and after the; logical reference allele for a variant. This is NOT the allele in the; input VCF, but rather the allele that actually has changed. For; insertions, the logical allele is the SPACE BETWEEN TWO BASES (and; therefore the resulting string will always be 2xWINDOW bases long).; For deletions, the logical allele is the given ref allele without the; required preceding base. For MNPs the logical allele is the given ref; allele.; Updated some tests and test data to reflect this change. - Added a small HG38 regression test set. - Fixed a boundary bug with codon strings.; Now codon change strings have an alternate (correct) form for insertions; that involve the start codon on the - strand, and the stop codon on the; + strand. This form eliminates any overrun/out of bounds exceptions. - Fixed an issue involving variants that overrun the end of the coding sequence. - Added in additional required files for regression test gencode data source. - Added a helpful script and modified test ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5302:3515,log,logical,3515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5302,1,['log'],['logical']
Testability," table creation and data loading in LoadData (#7056); - WIP; - tieout scripts; - notes files; - updated diff scripts; - fixed bug...; - add wdl and inputs file for warp pipeline; - reverting logging; - included top level WDL; - use gnarly with BQ extract cohort; - remove unused file; - cleaning up; - tidy; - tidy up before PR; - tidy up before PR; - PR comments; - merge conflict misfires; - added example SQL to create alt allele table from VET; - option to remove PLs; - fixed and enhanced unit test; - removing unused config, causing travis to fail; - add CreateVariantIngestFiles integration test (#7071); - add sampleName (instead of NULL) to error message (#7074); - Update To handle if no data error (#7084); - Memory improvement when writing missing positions to pet (#7098); - added support for loading QUALapprox into VET (#7101); - Add -m flag to gsutil step; add dockstore branch filters to facilitate development (#7104); - updates to ImportGenomes and LoadBigQueryData (#7112); - Add ngs to cohort extract Dockerfile; remove exception catching in extract python script (#7113); - remove problematic storage_location imports (#7119); - Reduce memory and CPU for CreateImportTsvs task, check for files before attempting load (#7121); - add -m flag to gsutil mv step (#7129); - ah_var_store : Add sample file argument to cohort extract (#7117); - Perform full WGS cohort extract scientific tieout for 35 ACMG59 samples (#7106); - Enable Read/Execution Project for BQ Queries (#7136); - ah - optional service account (#7140); - Add load lock file to prevent accidental re-loading of data to BQ (#7138); - #251 Address gvcf no-calls missing QUALapprox and other features (#7146); - Job Add labels to BQ operations from GATK (Issues-199) (#7115); - parse map to list to avoid brackets and spaces in vcf output (#7168); - #259 Inline schema for importgenomes.wdl (#7171); - Created AvroFileReader and unittest, Update ExtractCohort and ExtractCohortEngine (#7174); - #224 Import WDL: handle ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:10777,log,logging,10777,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,6,"['log', 'test']","['logging', 'test']"
Testability," the case that there???s a cycle skip, the read and reference flow signals will not be aligned, and therefore the score will be inaccurate.</li>; ^; ```. This test is skipped without any apparent reason:; ```; Running Test: Test method loadIndex(org.broadinstitute.hellbender.BwaMemIntegrationTest). Gradle suite > Gradle test > org.broadinstitute.hellbender.BwaMemIntegrationTest > loadIndex FAILED; java.lang.UnsatisfiedLinkError: 'boolean org.broadinstitute.hellbender.utils.bwa.BwaMemIndex.createReferenceIndex(java.lang.String, java.lang.String, java.lang.String)'; at org.broadinstitute.hellbender.utils.bwa.BwaMemIndex.createReferenceIndex(Native Method); at org.broadinstitute.hellbender.utils.bwa.BwaMemIndex.createIndexImageFromFastaFile(BwaMemIndex.java:227); at org.broadinstitute.hellbender.utils.bwa.BwaMemIndex.createIndexImageFromFastaFile(BwaMemIndex.java:196); at org.broadinstitute.hellbender.BwaMemIntegrationTest.loadIndex(BwaMemIntegrationTest.java:49); Running Test: Test method testChimericUnpairedMapping(org.broadinstitute.hellbender.BwaMemIntegrationTest). Gradle suite > Gradle test > org.broadinstitute.hellbender.BwaMemIntegrationTest > testChimericUnpairedMapping SKIPPED; Running Test: Test method testPerfectUnpairedMapping(org.broadinstitute.hellbender.BwaMemIntegrationTest). Gradle suite > Gradle test > org.broadinstitute.hellbender.BwaMemIntegrationTest > testPerfectUnpairedMapping SKIPPED; ```. This test fails because some JAR wasn't built:; ```; Running Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest); Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: No local jar was found, please build one by running. Gradle suite > Gradle test > org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest > testPipeForPicardTools STANDARD_ERROR; No local jar was found, please build one by running; Test: Test m",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8940:2738,Test,Test,2738,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8940,3,"['Test', 'test']","['Test', 'testChimericUnpairedMapping']"
Testability, the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field QD - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field QD - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field SOR - the field will NOT be part of INFO fields in the generated VCF records; 15:02:24.449 INFO FeatureManager - Using codec BEDCodec to read file file:///scratch/jsalt-test/ABBA-BABA/vcf/cv-genome-uce-coords-newchrom-500flank.bed; 15:02:24.508 INFO IntervalArgumentCollection - Processing 9612471 bp from intervals; 15:02:24.531 INFO GenotypeGVCFs - Done initializing engine; 15:02:24.609 INFO ProgressMeter - Starting traversal; 15:02:24.609 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; WARNING: No valid combination operation found for INFO field AC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field AF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field AN - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field FS - the fiel,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6357#issuecomment-581619640:6009,test,test,6009,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6357#issuecomment-581619640,2,['test'],['test']
Testability," the issue describing this (https://github.com/broadinstitute/gatk/issues/7005) you had mentioned something about how GenomicsDBFeatureReader required a reference and wasn't sure if you were implying GenomicsDB would get that info from the reference. My understanding of `--force-output-intervals` is that it would cause the resulting output to have homref info if there is evidence in the gvcfs (maybe @droazen can clarify/confirm). As such, the fact that you are getting `N` as the REF would suggest that there is no call made for that particular site. In fact, you can see this in the test case you have here. While it doesn't reproduce the issue, if you examine the output vcf file generated by the test:; - Output contains `N` for `20:10-20` but that is expected because the input gvcf says as much for the first 9999901 bases; ```; 20 1 . N <NON_REF> . . END=9999901 GT:DP:GQ:MIN_DP:PL 0/0:0:0:0:0,0,0; ```; - If you instead change `--force-output-intervals` to `20:9999902-9999910` you will notice that the output file now contains those sites with the right bases and corresponding homref calls:; ```; 20 9999902 . T . . . DP=1 GT:DP:RGQ 0/0:1:3; 20 9999903 . G . . . DP=3 GT:DP:RGQ 0/0:3:9; 20 9999904 . T . . . DP=3 GT:DP:RGQ 0/0:3:9; 20 9999905 . T . . . DP=6 GT:DP:RGQ 0/0:6:18; 20 9999906 . A . . . DP=6 GT:DP:RGQ 0/0:6:18; 20 9999907 . A . . . DP=7 GT:DP:RGQ 0/0:7:21; 20 9999908 . A . . . DP=7 GT:DP:RGQ 0/0:7:21; 20 9999909 . A . . . DP=9 GT:DP:RGQ 0/0:9:27; 20 9999910 . T . . . DP=11 GT:DP:RGQ 0/0:11:33; ```. Since you replied saying the test isn't reproducing the case you expect, maybe you already know all this - but just wanted to clarify that is the case. Having said all that, if you're still seeing a case where REF is `N` and you know the input should result in something else, can you share a small snippet of an input gvcf that illustrates the case? Since you were looking at specific intervals in the earlier issue, hopefully you can go back to the input gvcfs for that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-755517894:1818,test,test,1818,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-755517894,1,['test'],['test']
Testability," the log file: ```*** Error in `java’: munmap_chunk(): invalid pointer: 0x00007f685d06c840 ***```. The respective backtraces: . ```; *** Error in `java': double free or corruption (out): 0x00007f6364699340 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f636ba307e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x8037a)[0x7f636ba3937a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f636ba3d53c]; /cromwell_root/tmp.7626fbcf/libgkl_smithwaterman1454827346682980108.so(_Z19runSWOnePairBT_avx2iiiiPhS_iiaPcPs+0x338)[0x7f63123c8fa8]; /cromwell_root/tmp.7626fbcf/libgkl_smithwaterman1454827346682980108.so(Java_com_intel_gkl_smithwaterman_IntelSmithWaterman_alignNative+0xd8)[0x7f63123c8bf8]; [0x7f6355bff192]; ```. ```; *** Error in `java': munmap_chunk(): invalid pointer: 0x00007f685d06c840 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f68634c37e5]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x1a8)[0x7f68634d0698]; /cromwell_root/tmp.4eeeda3c/libgkl_smithwaterman7538158038428947321.so(_Z19runSWOnePairBT_avx2iiiiPhS_iiaPcPs+0x338)[0x7f6830cf2fa8]; /cromwell_root/tmp.4eeeda3c/libgkl_smithwaterman7538158038428947321.so(Java_com_intel_gkl_smithwaterman_IntelSmithWaterman_alignNative+0xd8)[0x7f6830cf2bf8]; [0x7f684dc31f92]; ```. In each of these occurrences, the filtered vcf file was produced, but the vcf.idx file was missing. Although the java errors occur, the last line of the log denotes the step as a success: (This might be true, but only when the option --create-output-variant-index is set to false.; `SetOperationStatus(copied 0 file(s) to <destinations_folder> succeeded""`. I also performed a test based on machine type. (outside of the full workflow, starting the steps on my own on a separate instance & replicating the steps of the workflow); - Using an instance with 2 vCPU's, 7.5 GB of ram, just ran out of memory.; - Using an instance with 8 vCPU's, 30 GB of ram finished successfully, producing both the filtered vcf & vcf.idx",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-652696262:2270,log,log,2270,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-652696262,2,"['log', 'test']","['log', 'test']"
Testability," the tool, we generated the image index for whole genome by using the fasta file from GATK official ftp site, and uploaded the reference file to Hadoop HDFS. ``` bash; gatk-4.0.11.0/gatk BwaMemIndexImageCreator -I Homo_sapiens_assembly38.fasta -O Homo_sapiens_assembly38.fasta.img; ```. and then, we preprocess our pair end fastq files into unaligned ubam file as, ; ``` bash; java -jar picard.jar FastqToSam \; F1=R1.fastq.gz; F2=R2.fastq.gz; O=unaligned_reads.bam \; SM=sample001 \; PL=illumina \; RG=rg001; ```. For BwaSpark, we used,; ``` {bash}; ../gatk-4.0.11.0/gatk --java-options ""-Dgatk.spark.debug=true -XX:+PrintGCDetails"" BwaSpark -I hdfs://ns/user/root/test/unaligned_reads.bam -O hdfs://ns/user/root/test/test3.bam -R hdfs://ns/user/root/Homo_sapiens_assembly38.fasta --spark-runner SPARK --spark-master spark://master:7077 -- --num-executors 4 --driver-memory 4g --executor-cores 10 --executor-memory 20g; ```. For ReadsPipelineSpark, we used, ; ``` {bash}; time_gatk ""ReadsPipelineSpark --tmp-dir /tmp --align true -I hdfs://ns/user/root/test/unaligned_reads.bam -O hdfs://ns/user/root/test/test10.vcf -R hdfs://ns/user/root/Homo_sapiens_assembly38.fasta --known-sites hdfs://ns/user/root/Homo_sapiens_assembly38.dbsnp138.vcf -pairHMM AVX_LOGLESS_CACHING --max-reads-per-alignment-start 50"" 4 44 88g 12g; ```. #### Expected behavior; Both tool should end successfully without the specified error, and generated consistent result. #### Actual behavior; Both tool ends throwing out the same error, but the alignment ratio of the bam file from bwaspark is the same as the original bwa, and seems to be ok. The vcf variant number changes between each runs, and different from the result of stable non-spark official GATK 4 version. ``` bash; 2018-12-03 13:19:45 ERROR CoarseGrainedExecutorBackend:43 - RECEIVED SIGNAL TERM; ```. The vcf line number for several runs of the ReadsPipelineSpark,; ``` bash; 94488 test2.vcf.gz; 97426 test3.vcf.gz; 82279 test4.hg19.vcf.gz; 99403 test4.vcf.gz;",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5481:1694,test,test,1694,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5481,1,['test'],['test']
Testability," the user class path in order to get around the fact that our classes aren't in the system class loader. Here's an example program I wrote that can do it on the driver. . ``` java; package org.broadinstitute.hellbender.tools;. import org.apache.spark.api.java.JavaSparkContext;; import org.broadinstitute.barclay.argparser.CommandLineProgramProperties;; import org.broadinstitute.hellbender.cmdline.programgroups.SparkProgramGroup;; import org.broadinstitute.hellbender.engine.spark.GATKSparkTool;. import java.io.IOException;; import java.lang.reflect.Field;; import java.net.URI;; import java.net.URISyntaxException;; import java.nio.file.Files;; import java.nio.file.Path;; import java.nio.file.Paths;; import java.nio.file.spi.FileSystemProvider;; import java.util.ArrayList;; import java.util.List;; import java.util.ServiceLoader;. @CommandLineProgramProperties(summary = ""test"", oneLineSummary = ""testthing"", programGroup = SparkProgramGroup.class); public class TestGCS extends GATKSparkTool {; private static final long serialVersionUID = 1L;. @Override; protected void runTool(JavaSparkContext ctx) {; try {; modifyProviders();; } catch (IllegalAccessException | NoSuchFieldException e) {; throw new RuntimeException(""Couldn't reset FilesystemProviders"");; }; try {; final Path index = Paths.get(new URI(""gs://hellbender/test/build_reports/1626.1/tests/index.html""));; System.out.println(""Count:"" + Files.lines(index).count());; } catch (URISyntaxException | IOException e) {; throw new RuntimeException(""Couldn't read file"");; }; }; }. private void modifyProviders() throws IllegalAccessException, NoSuchFieldException {; final Field installedProviders = FileSystemProvider.class.getDeclaredField(""installedProviders"");; installedProviders.setAccessible(true);; installedProviders.set(null, loadInstalledProviders());; installedProviders.setAccessible(false);; }. //copied from FileSystemProvider, modified to use TestGCS.classLoader() instead of systemClassloader; private static List<File",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2312:1138,Test,TestGCS,1138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2312,1,['Test'],['TestGCS']
Testability," to me that shouldn't be too hard. . ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-260498705). I need to ping Daniel on getting access to the files. ---. @ronlevine commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275576931). @vdauwera Can you get the data? I can take a look a this issue. ---. @vdauwera commented on [Thu Jan 26 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-275578721). Oh, they gave me access to the files but I never took the next step of figuring out which files are relevant. There are twenty thousand samples... I'm not sure what is the best way to approach this. ---. @ldgauthier commented on [Wed Mar 01 2017](https://github.com/broadinstitute/gsa-unstable/issues/1489#issuecomment-283365248). It would be too computationally expensive and just generally painful to get; that dropped allele. I'd suggest making a unit test with some fake data.; You'll need two positions: one upstream with a deletion to generate the *; and one for the SNP. I think the dropped allele was a 1bp deletion at the; same position that generated the representation with the extra base at the; end. Give that one a really low quality in its gvcf so it gets dropped.; PLs don't really matter as long as they jive with the quals and aren't hom; ref. You can just grab numbers from any other valid vcf. I think you can do; it with three samples: one with the upstream deletion and *, one with the; AC SNP and one with the low quality deletion. Other combinations will; probably also produce the same bug. There may be an even simpler way to reproduce the bug without the low; quality deletion but I suspect this will work. On Jan 26, 2017 10:02 PM, ""Geraldine Van der Auwera"" <; notifications@github.com> wrote:. Oh, they gave me access to the files but I never took the next step of; figuring out which files are relevant. There are twenty th",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2959:3783,test,test,3783,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2959,1,['test'],['test']
Testability, unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](ht,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679:1203,test,test-logs,1203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679,1,['test'],['test-logs']
Testability, use the static setDefaultURLTypes(final List<UrlType> urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.; at org.reflections.vfs.Vfs.fromURL(Vfs.java:109); at org.reflections.vfs.Vfs.fromURL(Vfs.java:91); at org.reflections.Reflections.scan(Reflections.java:237); at org.reflections.Reflections.scan(Reflections.java:204); at org.reflections.Reflections.<init>(Reflections.java:129); at com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds.registerGenomicsCoders(DataflowWorkarounds.java:90); at org.broadinstitute.hellbender.tools.dataflow.transforms.InsertSizeMetricsTransformUnitTest.testInsertSizeMetricsTransform(InsertSizeMetricsTransformUnitTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.ru,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/609:1720,test,testng,1720,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/609,1,['test'],['testng']
Testability," we'd just want to let the user be able to specify the theano directory (rather than dump things in `~/.theano` unexpectedly). We should think about whether this should be opt-in, i.e., should we preserve the original behavior of using `~/.theano` by default?; > ; > @mwalker174 opinions? @droazen or engine team, thoughts on what the policy should be for python/R scripts doing this sort of thing? Is it generally true that the GATK leaves no trace, other than producing the expected output?. Dear samuelklee,. Thank you very much for you reply. I also found this problem last night. It seems that the problem is originally from Theano and Pymc3, rather than GATK 4.0. Some similar problems have been reported just like (1) https://github.com/pymc-devs/pymc3/issues/1463 (2) https://stackoverflow.com/questions/52270853/how-to-get-rid-of-theano-gof-compilelock and (3) https://groups.google.com/forum/#!topic/theano-users/eJ2vl2PUTk4. Last night, I have already tried to reset base_compiledir for theano, through two ways: (1) creating a ~/.theanorc file just like you suggested (2) modifying the file ~/.bashrc for my login node, by adding a line: export THEANO_FLAGS=""base_compiledir=/scratch/gatk-user1/z-Temp/z-Temp-Theano-$chr"". However, the truth is that, in our cluster, when I submit the 25 jobs (for each chromosomes), they are assigned to different computer nodes randomly. It means that I have to set THEANO environment variable for each corresponding random computer nodes respectively, which is quite difficult for me, as the nodes are random assigned. So, now I'm going to add lines like below to the ~/.theanorc in my login node, to see what will happen. Maybe It will work.; #######; [global]; config.compile.timeout = 100000 ; ######. However, I'm really appreciate it if some one in your team can help to add a function to specify a temporary directory for the theano directory, which can be bound to the corresponding node shared by other GATK threads. Thank you and Best regards.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-548557073:2210,log,login,2210,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-548557073,2,['log'],['login']
Testability," will be optimized separately for SNPs and INDELs. How about this for a first workflow to target?. 1) Run ExtractVariantAnnotations on a training set of chromosomes. You can keep training/truth labels as in Best Practices, for now.; 2) Run TrainVariantAnnotationsModel on that. We'll use the truth scores generated here for any sensitivity conversions---i.e., we'll be calibrating scores only to the truth sites that are contained in the training set of chromosomes.; 3) Use the trained model to run a single shard of ScoreVariantAnnotations on a validation set of chromosomes.; 4) Run some variation of the above script on the resulting outputs to determine SNP and INDEL score thresholds for optimizing the corresponding LL scores. We can also add some code to the script to use the truth scores from step 2 to convert these score thresholds into truth-sensitivity thresholds.; 5) Provide these truth-sensitivity thresholds to ScoreVariantAnnotations and use them to hard filter. Evaluate on a test set of chromosomes. If all looks good, we can later move steps 3-4 into the train tool and automate the passing of sensitivities in 5 via outputs in the model directory. This will let us keep the basic interface of ScoreVariantAnnotations the same, but we'll have to add a few basic parameters to TrainVariantAnnotationsModel to control the train/validation split. So I think all this branch is missing is step 5---we'll simply need to add command-line parameters for the SNP/INDEL sensitivity thresholds and then do the hard filtering in the VCF writing method highlighted above. Do you think you can handle implementing that in this branch, and then the rest at the WDL level? I can help with the python script for the LL stuff (or anything else), if needed. Not sure if you got a chance to check out what your collaborators are doing in the methods you're looking to compare against, but it would be good to understand if this basic scheme for train/validation/test splitting can be replicated ove",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084:1014,test,test,1014,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1068345084,2,['test'],['test']
Testability," writing happens during the `close()` command. This is necessary since it cannot actually render its output until all segments have been seen. This output renderer also relies heavily on specific funcotation fields being in the input `FuncotationMap`. Internally, the gene list output renderer uses the `SimpleTsvOutputRenderer` (see below) to do the actual writing.; - Introduces the `SimpleTsvOutputRenderer`. This output renderer is very flexible and renders a tab-separated text file based on several output rules. Formats are driven through config files. And developers can limit the output columns to ignore extraneous funcotation fields. Note that excluded fields are honored, regardless. If a configuration + parameter combination would result in this class producing an empty file, an exception is thrown. More notes are in the javadocs of the class.; - Currently, only the `GencodeFuncotationFactory` can actually funcotate segments. ; - Code base currently enforces only small mutations when running `Funcotator` (segs are funcotated as CANNOT_DETERMINE) and only segments when running `FuncotateSegments` (small mutations produce exception). This is enforced with flags in the code. The backend does not disallow a mixture for future use. This may prove important when funcotating CNVs from VCFs produced by tools other than `ModelSegments`.; - Added copy creation method for FuncotationMap based on Kryo. Also, added the necessary Kryo registrations. This induced a new unit test to enforce any concrete implementations of `Funcotation` to be Kryo serializable. The unit test does a recursive search of the funcotator package. For all concrete implementations, it tracks whether this unit test tests the serialization. If not, it fails. Instructions for developers is present as comments in the code. This is a bit fragile, especially for developers that are using GATK as a library; - See #5921 for tracking `FuncotateSegments` WDL development. Closes #4609 . Output formats may change.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5941:3141,test,test,3141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5941,4,['test'],"['test', 'tests']"
Testability," yes, I know is still in beta but I’ve found these problems when I compared the outputs from Haplotypecaller in spark and in not Spark versions. For comparing these results I've used this tool [https://drive.google.com/file/d/1r2WHyiz5WqOIyY_EZ1VZt92wGlL19SE4/view?usp=sharing](url) and I've obtained these plots for sensitivity and specificity( The sensitivity is defined as the number of sites inwhich both sequencing and microarrays detected a deviation from the reference sequencedivided by the number of sites where a variant was detected by using the microarrays). **Spark**; Sensitivity; ![spark_sensitivity_hg19](https://user-images.githubusercontent.com/10074137/47148261-86b77280-d2d0-11e8-8b5a-9ecfef16d889.png); Specificity; ![sparkspecificityhg19](https://user-images.githubusercontent.com/10074137/47148277-933bcb00-d2d0-11e8-97eb-1adceb4e5ee2.png). **Local non Spark tool with GATK 2.7**; ![hg19local](https://user-images.githubusercontent.com/10074137/47148427-fcbbd980-d2d0-11e8-87d8-04ec20c1005d.png); furthermore I've executed the pipeline until BQSR in Spark version and after, I am focused just on Haplotypecaller because I've used this ""backwards"" approach and I've discovered that the pipeline is deterministic from the phase Variant Discovery, but don't in the phase of Preprocessing because when I've executed this phase more times, I've obtained results completely, this is the test with one single sample:; ![comparisons_pfc32](https://user-images.githubusercontent.com/10074137/47148552-49071980-d2d1-11e8-8b1c-aec468285699.png); furthermore when I've used the output from BQSR (executed in Spark) for execute of Haplotypecaller in local(not in Spark) and adapting this output for Haplotypecaller, I had to use the tool Samtools for sort the outputs and after this step the outputs are passed from average of 19 gigabytes to 13 gigabytes average for the all samples. I've opened this Issue because I would to help you with my experiments to improvement your tool.; thanks.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5323:1643,test,test,1643,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5323,1,['test'],['test']
Testability, | ---- |; | R | openjdk8 | [29988.6](https://travis-ci.com/broadinstitute/gatk/jobs/317861684) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.6/tests/test/index.html) |; | integration | oraclejdk8 | [29988.12](https://travis-ci.com/broadinstitute/gatk/jobs/317861697) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.12/tests/test/index.html) |; | python | openjdk8 | [29988.5](https://travis-ci.com/broadinstitute/gatk/jobs/317861683) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.5/tests/test/index.html) |; | integration | openjdk11 | [29988.13](https://travis-ci.com/broadinstitute/gatk/jobs/317861698) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.13/tests/test/index.html) |; | cloud | openjdk11 | [29988.15](https://travis-ci.com/broadinstitute/gatk/jobs/317861700) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.15/tests/test/index.html) |; | cloud | openjdk8 | [29988.1](https://travis-ci.com/broadinstitute/gatk/jobs/317861676) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.1/tests/test/index.html) |; | unit | openjdk11 | [29988.14](https://travis-ci.com/broadinstitute/gatk/jobs/317861699) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.14/tests/test/index.html) |; | integration | openjdk8 | [29988.2](https://travis-ci.com/broadinstitute/gatk/jobs/317861680) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29988.4](https://travis-ci.com/broadinstitute/gatk/jobs/317861682) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.4/tests/test/index.html) |; | unit | openjdk8 | [29988.3](https://travis-ci.com/broadinstitute/gatk/jobs/317861681) | [logs](https://sto,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351:1194,test,test-logs,1194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351,1,['test'],['test-logs']
Testability, | ------ | ---- |; | R | openjdk8 | [29990.6](https://travis-ci.com/broadinstitute/gatk/jobs/317870153) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.6/tests/test/index.html) |; | integration | oraclejdk8 | [29990.12](https://travis-ci.com/broadinstitute/gatk/jobs/317870159) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.12/tests/test/index.html) |; | python | openjdk8 | [29990.5](https://travis-ci.com/broadinstitute/gatk/jobs/317870152) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.5/tests/test/index.html) |; | cloud | openjdk8 | [29990.1](https://travis-ci.com/broadinstitute/gatk/jobs/317870147) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.1/tests/test/index.html) |; | cloud | openjdk11 | [29990.15](https://travis-ci.com/broadinstitute/gatk/jobs/317870162) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.15/tests/test/index.html) |; | integration | openjdk11 | [29990.13](https://travis-ci.com/broadinstitute/gatk/jobs/317870160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.13/tests/test/index.html) |; | integration | openjdk8 | [29990.2](https://travis-ci.com/broadinstitute/gatk/jobs/317870149) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.2/tests/test/index.html) |; | unit | openjdk11 | [29990.14](https://travis-ci.com/broadinstitute/gatk/jobs/317870161) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29990.4](https://travis-ci.com/broadinstitute/gatk/jobs/317870151) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.4/tests/test/index.html) |; | unit | openjdk8 | [29990.3](https://travis-ci.com/broadinstitute/gatk/jobs/317870150) | [logs](ht,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629:1185,test,test-logs,1185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629,1,['test'],['test-logs']
Testability, | ------ | ---- |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.14/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk8 | [31916.1](https://travis-ci.com/broadinstitute/gatk/jobs/405794420) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_31916.1/tests/test/index.html) |; | cloud | openjdk11 | [31916.14](https://travis-ci.com/broadinstitute/gatk/jobs/405794433) | [logs](https://storage.googlea,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6909#issuecomment-715580832:1185,test,test-logs,1185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6909#issuecomment-715580832,1,['test'],['test-logs']
Testability, | Complexity Δ | |; |---|---|---|---|; | [...ngine/spark/datasources/ReferenceTwoBitSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVmZXJlbmNlVHdvQml0U291cmNlLmphdmE=) | `90.909% <75%> (-9.091%)` | `6 <2> (-1)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-60.294%)` | `8% <0%> (-25%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-24.516%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4044/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356143221:1885,test,test,1885,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356143221,1,['test'],['test']
Testability, | Complexity Δ | |; |---|---|---|---|; | [...ngine/spark/datasources/ReferenceTwoBitSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVmZXJlbmNlVHdvQml0U291cmNlLmphdmE=) | `90.909% <75%> (-9.091%)` | `6 <2> (-1)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4584/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4584#issuecomment-376279904:1881,test,test,1881,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4584#issuecomment-376279904,1,['test'],['test']
Testability, | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ender/tools/spark/sv/utils/GATKSVVCFConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9HQVRLU1ZWQ0ZDb25zdGFudHMuamF2YQ==) | `0% <0%> (-75%)` | `0% <0%> (-1%)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-74.257%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NtaXRoV2F0ZXJtYW5JbnRlbEFsaWduZXIuamF2YQ==) | `50% <0%> (-30%)` | `1% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/5056/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675:1879,test,test,1879,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408053675,1,['test'],['test']
Testability, | [...ions/OptionalReferenceInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvT3B0aW9uYWxSZWZlcmVuY2VJbnB1dEFyZ3VtZW50Q29sbGVjdGlvbi5qYXZh) | `100% <0%> (ø)` | `6% <0%> (+1%)` | :arrow_up: |; | [...tcollections/ReferenceInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvUmVmZXJlbmNlSW5wdXRBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...stitute/hellbender/engine/ReferenceDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVmZXJlbmNlRGF0YVNvdXJjZS5qYXZh) | `80% <0%> (ø)` | `8% <0%> (+4%)` | :arrow_up: |; | [...titute/hellbender/utils/test/ArgumentsBuilder.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0FyZ3VtZW50c0J1aWxkZXIuamF2YQ==) | `100% <0%> (ø)` | `23% <0%> (+4%)` | :arrow_up: |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `91.064% <0%> (+0.426%)` | `66% <0%> (+1%)` | :arrow_up: |; | [...ions/RequiredReferenceInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/4047/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvUmVxdWlyZWRSZWZlcmVuY2VJbnB1dEFyZ3VtZW50Q29sbGVjdGlvbi5qYXZh) | `87.5% <0%> (+1.786%)` | `5% <0%> (+1%)` | :arrow_up: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](ht,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4047#issuecomment-355479773:2505,test,test,2505,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4047#issuecomment-355479773,1,['test'],['test']
Testability, | `0% <0%> (-100%)` | `0% <0%> (-2%)` | |; | [...otypecaller/RandomLikelihoodCalculationEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SYW5kb21MaWtlbGlob29kQ2FsY3VsYXRpb25FbmdpbmUuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-6%)` | |; | [...sformers/MisencodedBaseQualityReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvTWlzZW5jb2RlZEJhc2VRdWFsaXR5UmVhZFRyYW5zZm9ybWVyLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...er/utils/smithwaterman/SWNativeAlignerWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NXTmF0aXZlQWxpZ25lcldyYXBwZXIuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-6%)` | |; | [...ne/programgroups/CoverageAnalysisProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL3Byb2dyYW1ncm91cHMvQ292ZXJhZ2VBbmFseXNpc1Byb2dyYW1Hcm91cC5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...institute/hellbender/cmdline/TestProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1Rlc3RQcm9ncmFtR3JvdXAuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...ls/walkers/genotyper/HeterogeneousPloidyModel.java](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2dlbm90eXBlci9IZXRlcm9nZW5lb3VzUGxvaWR5TW9kZWwuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-14%)` | |; | ... and [1364 more](https://codecov.io/gh/broadinstitute/gatk/pull/5990/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5990#issuecomment-500382987:3457,Test,TestProgramGroup,3457,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5990#issuecomment-500382987,1,['Test'],['TestProgramGroup']
Testability, | `77.966% <0%> (+0.847%)` | `43% <0%> (+1%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `80% <0%> (+1.29%)` | `39% <0%> (ø)` | :arrow_down: |; | [...nder/tools/examples/ExampleVariantWalkerSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leGFtcGxlcy9FeGFtcGxlVmFyaWFudFdhbGtlclNwYXJrLmphdmE=) | `76.316% <0%> (+2.242%)` | `9% <0%> (+4%)` | :arrow_up: |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `79.752% <0%> (+3.696%)` | `66% <0%> (+22%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `78.261% <0%> (+4.348%)` | `9% <0%> (+1%)` | :arrow_up: |; | [...kers/variantutils/CalculateGenotypePosteriors.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9DYWxjdWxhdGVHZW5vdHlwZVBvc3RlcmlvcnMuamF2YQ==) | `91.398% <0%> (+5.482%)` | `25% <0%> (+12%)` | :arrow_up: |; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4429/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `89.053% <0%> (+6.621%)` | `83% <0%> (+23%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/bro,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4429#issuecomment-367407823:2822,test,test,2822,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4429#issuecomment-367407823,1,['test'],['test']
Testability, | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](h,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679:1414,test,test-logs,1414,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679,1,['test'],['test-logs']
Testability, | |; | [...Plugin/GATKAnnotationPluginDescriptorUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vR0FUS0Fubm90YXRpb25QbHVnaW5EZXNjcmlwdG9yVW5pdFRlc3QuamF2YQ==) | `88.235% <0%> (-1.43%)` | `58% <0%> (+1%)` | |; | [.../tools/walkers/haplotypecaller/RefVsAnyResult.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SZWZWc0FueVJlc3VsdC5qYXZh) | `100% <0%> (ø)` | `3% <0%> (+1%)` | :arrow_up: |; | [...ools/walkers/annotator/VariantAnnotatorEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9WYXJpYW50QW5ub3RhdG9yRW5naW5lLmphdmE=) | `91.304% <0%> (ø)` | `70% <0%> (ø)` | :arrow_down: |; | [...line/GATKPlugin/testpluggables/TestAnnotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdEFubm90YXRpb24uamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...line/GATKPlugin/testpluggables/TestReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdFJlYWRGaWx0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...nder/tools/funcotator/FuncotatorTestConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JUZXN0Q29uc3RhbnRzLmphdmE=) | `98.333% <0%> (+0.028%)` | `1% <0%> (ø)` | :arrow_down: |; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310:2843,test,testpluggables,2843,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310,2,"['Test', 'test']","['TestAnnotation', 'testpluggables']"
Testability,"!!!!!!!!!!!!!!!![0m. 20:12:42.725 INFO FilterAlignmentArtifacts - Initializing engine; 20:12:48.403 INFO FeatureManager - Using codec VCFCodec to read file gs://fc-secure-024a1aae-a4f9-4025-aa93-f759f93a8203/50383670-4607-4e59-9bfc-4db970980f0e/Mutect2/773a91ea-25be-4d49-b97c-16527076250c/call-Filter/cacheCopy/TN-20-36-filtered.vcf; 20:12:50.117 INFO FilterAlignmentArtifacts - Done initializing engine; 20:12:51.042 INFO NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; 20:12:51.099 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; 20:12:51.100 INFO IntelPairHmm - Available threads: 14; 20:12:51.100 INFO IntelPairHmm - Requested threads: 4; 20:12:51.100 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation; 20:12:51.100 INFO ProgressMeter - Starting traversal; 20:12:51.100 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 20:20:25.766 INFO ProgressMeter - chr3:104142090 7.6 1000 132.0; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007efc9818177e, pid=24, tid=0x00007f13b3c76700; #; # JRE version: OpenJDK Runtime Environment (8.0_242-b08) (build 1.8.0_242-8u242-b08-0ubuntu3~18.04-b08); # Java VM: OpenJDK 64-Bit Server VM (25.242-b08 mixed mode linux-amd64 ); # Problematic frame:; # C [libgkl_smithwaterman1809483713436863458.so+0x177e] smithWatermanBackTrack(dnaSeqPair*, int, int, int, int, int*, int)+0x60e; #; # Core dump written. Default location: /cromwell_root/core or core.24; #; # An error report file with more information is saved as:; # /cromwell_root/hs_err_pid24.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-781673098:2270,log,log,2270,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-781673098,1,['log'],['log']
Testability,"""""""""; gatk]# ./gradlew; Downloading https://services.gradle.org/distributions/gradle-3.1-bin.zip; ............................................; Download https://repo1.maven.org/maven2/commons-codec/commons-codec/1.6/commons-codec-1.6.jar; Executing: git lfs pull --include src/main/resources/large. FAILURE: Build failed with an exception. * Where:; Build file '/data/md1/zhouyajun/biotools/gatk/gatk/build.gradle' line: 102. * What went wrong:; A problem occurred evaluating root project 'gatk'.; > Execution of ""git lfs pull --include src/main/resources/large"" failed with exit code: 1. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED; """"""; what should I do ?; How can I install GATK4 successful?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4669:696,log,log,696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4669,1,['log'],['log']
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110:7792,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,7792,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110,8,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""167cbd3e-0835-47b5-8325-a853bd98ec9a"",; ""eval_cromwell_job_id"": ""43bcefb2-f38b-413d-9b65-06b489e64af1"",; ""created_at"": ""2023-06-02T17:26:47.097005"",; ""created_by"": null,; ""finished_at"": ""2023-06-03T03:48:32.144"",; ""results"": {; ""CHM controlHCprocesshours"": ""86.02092777777776"",; ""CHM controlHCsystemhours"": ""0.19513888888888892"",; ""CHM controlHCwallclockhours"": ""62.28637777777777"",; ""CHM controlHCwallclockmax"": ""3.304836111111111"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-CHMSampleHeadToHead/BenchmarkComparison/258eacc8-3768-44a8-86dc-1b2b0516a553/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/call-CHMSampleHeadToHead/BenchmarkComparison/258eacc8-3768-44a8-86dc-1b2b0516a553/call-BenchmarkVCFControlSample/Benchmark/b89e3e0d-4f93-4b2d-9008-041545f2764c/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""87.0306027777778"",; ""CHM evalHCsystemhours"": ""0.19828888888888896"",; ""CHM evalHCwallclockhours"": ""62.522422222222225"",; ""CHM evalHCwallclockmax"": ""3.293238888888889"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/43bcefb2-f38b-413d-9b65-06b489e64af1/c",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:17164,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""78cbc728-aca2-47d0-9a7a-554dba9f19f5"",; ""eval_cromwell_job_id"": ""f61c0caa-70a3-4ee5-8542-e78ba8364985"",; ""created_at"": ""2023-05-04T18:26:42.379437"",; ""created_by"": null,; ""finished_at"": ""2023-05-05T03:56:11.686"",; ""results"": {; ""CHM controlHCprocesshours"": ""81.1621222222222"",; ""CHM controlHCsystemhours"": ""0.16283611111111113"",; ""CHM controlHCwallclockhours"": ""57.139766666666674"",; ""CHM controlHCwallclockmax"": ""3.1312416666666665"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/call-CHMSampleHeadToHead/BenchmarkComparison/394f0e4c-4f60-420b-8477-3199ef269728/call-BenchmarkVCFControlSample/Benchmark/2aec499d-c11f-4a23-912b-8a61f9982437/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""86.06659722222223"",; ""CHM evalHCsystemhours"": ""0.19141388888888877"",; ""CHM evalHCwallclockhours"": ""60.83952500000001"",; ""CHM evalHCwallclockmax"": ""3.1510444444444445"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/f61c0caa-70a3-4ee5-8542-e78ba8364985/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:17206,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,""",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""c18d0f5f-52c9-4e60-92ed-e4b33c6553c7"",; ""eval_cromwell_job_id"": ""9c49383b-01a9-4bc0-90fa-cde7e1090a47"",; ""created_at"": ""2023-05-15T22:38:43.733338"",; ""created_by"": null,; ""finished_at"": ""2023-05-16T08:30:08.614"",; ""results"": {; ""CHM controlHCprocesshours"": ""78.81892777777776"",; ""CHM controlHCsystemhours"": ""0.15627777777777782"",; ""CHM controlHCwallclockhours"": ""55.94185833333335"",; ""CHM controlHCwallclockmax"": ""3.053286111111111"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-BenchmarkVCFControlSample/Benchmark/c0877490-fd2d-4f42-bb92-f06210e94d95/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.33091111111112"",; ""CHM evalHCsystemhours"": ""0.18621944444444444"",; ""CHM evalHCwallclockhours"": ""61.43"",; ""CHM evalHCwallclockmax"": ""3.073069444444444"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampl",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:17204,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17204,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,""",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 10,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801:1711,Benchmark,BenchmarkComparison,1711,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801,2,['Benchmark'],['BenchmarkComparison']
Testability,""",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049221485:1711,Benchmark,BenchmarkComparison,1711,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049221485,2,['Benchmark'],['BenchmarkComparison']
Testability,""",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691:1711,Benchmark,BenchmarkComparison,1711,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691,4,['Benchmark'],['BenchmarkComparison']
Testability,""",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_evaluation_regions.v1.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi""; },; ""eval_option",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:2623,Benchmark,BenchmarkComparison,2623,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability,""": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDragenConcordanceEvaluation.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""GatkDragenConcordanceEvaluation.include_in_fe_analysis"": ""test_output:FunctionalEquivalenceTest.out_include_in_fe_analysis"",; ""GatkDragenConcordanceEvaluation.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""GatkDragenConcordanceEvaluation.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""GatkDragenConcordanceEvaluation.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""GatkDragenConcordanceEvaluation.referenceVersion"": ""hg38"",; ""GatkDragenConcordanceEvaluation.replicate_no"": ""test_output:FunctionalEquivalenceTest.out_replicate_no"",; ""GatkDragenConcordanceEvaluation.sample_id"": ""test_output:FunctionalEquivalenceTest.out_sample_id"",; ""GatkDragenConcordanceEvaluation.stratIntervals"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/stratifiers/LCR_Hg38.interval_list"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/stratifiers/HCR_hg38.bed""; ],; ""GatkDragenConcordanceEvaluation.stratLabels"": [; ""LCR"",; ""HCR""; ],; ""GatkDragenConcordanceEvaluation.truth_vcf"": ""test_output:FunctionalEquivalenceTest.out_truth_vcf"",; ""GatkDragenConcordanceEvaluation.truth_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_truth_vcf_index""; },; ""test_cromwell_job_id"": null,; ""eval_cromwell_job_id"": null,; ""created_at"": ""2021-01-14T19:14:37.025719"",; ""created_by"": null,; ""finished_at"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:6835,benchmark,benchmarking,6835,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,""": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDragenConcordanceEvaluation.hapMap"": ""gs:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4745,benchmark,benchmarking,4745,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,""": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDragenConcordanceEvaluation.hapMap"": ""gs:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4745,benchmark,benchmarking,4745,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,""": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation.docker_placeholder"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcfs"",; ""GatkDragenConcordanceEvaluation.dragen_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_dragen_vcf_indices"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcfs"",; ""GatkDragenConcordanceEvaluation.gatk_output_vcf_index"": ""test_output:FunctionalEquivalenceTest.out_gatk_vcf_indices"",; ""GatkDra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4848,benchmark,benchmarking,4848,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,""":3101046070; },; {; ""name"":""GL000192.1"",; ""length"":547496,; ""tiledb_column_offset"":3101257243; },; {; ""name"":""NC_007605"",; ""length"":171823,; ""tiledb_column_offset"":3101804739; },; {; ""name"":""hs37d5"",; ""length"":35477943,; ""tiledb_column_offset"":3101976562; }; ]; }. And the header generated with GenomicsDBImport is:. ##fileformat=VCFv4.2; ##ALT=<ID=NON_REF,Description=""Represents any possible alternative allele at this location"">; ##FILTER=<ID=LowQual,Description=""Low quality"">; ##FILTER=<ID=PASS,Description=""All filters passed"">; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths for the ref and alt alleles in the order listed"">; ##FORMAT=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth (reads with MQ=255 or with bad mates are filtered)"">; ##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=""Genotype Quality"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; ##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=""Minimum DP observed within the GVCF block"">; ##FORMAT=<ID=PGT,Number=1,Type=String,Description=""Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another"">; ##FORMAT=<ID=PID,Number=1,Type=String,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=SB,Number=4,Type=Integer,Description=""Per-sample component statistics which comprise the Fisher's Exact Test to detect strand bias."">; ##GVCFBlock0-1=minGQ=0(inclusive),maxGQ=1(exclusive); ##GVCFBlock1-2=minGQ=1(inclusive),maxGQ=2(exclusive); ##GVCFBlock10-11=minGQ=10(inclusive),maxGQ=11(exclusive); ##GVCFBlock11-12=minGQ=11(inclusive),maxGQ=12(exclusive); ##GVCFBlock12-13=minGQ=12(inclusive),maxGQ=13(exclusive); ##GVCFBlock13-14=minGQ=13(inclusive),maxGQ=14(exclu",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582:11802,Test,Test,11802,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582,1,['Test'],['Test']
Testability,"""; Failed to evaluate input 'extreme_sample_median_percentile' (reason 1 of 1): For input string: ""Float? (optional)""; 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$materialization$MaterializeWorkflowDescriptorActor$$workflowInitializationFailed(MaterializeWorkflowDescriptorActor.scala:235); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:205); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor$$anonfun$2.applyOrElse(MaterializeWorkflowDescriptorActor.scala:200); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38); 	at akka.actor.FSM.processEvent(FSM.scala:707); 	at akka.actor.FSM.processEvent$(FSM.scala:704); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:156); 	at akka.actor.LoggingFSM.processEvent(FSM.scala:847); 	at akka.actor.LoggingFSM.processEvent$(FSM.scala:829); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:156); 	at akka.actor.FSM.akka$actor$FSM$$processMsg(FSM.scala:701); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:695); 	at akka.actor.Actor.aroundReceive(Actor.scala:539); 	at akka.actor.Actor.aroundReceive$(Actor.scala:537); 	at cromwell.engine.workflow.lifecycle.materialization.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:156); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:612); 	at akka.actor.ActorCell.invoke(ActorCell.scala:581); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:268); 	at akka.dispatch.Mailbox.run(Mailbox.scala:229); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:241); 	at akka.dispatch.forkjoi",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6189:7593,Log,LoggingFSM,7593,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6189,1,['Log'],['LoggingFSM']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthLabel"": ""CHM_GRCh38_SYNDIPv20180222"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_contr",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:5244,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5244,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""050d2d6e-4a50-4145-a9da-8a39731ebdd2"",; ""eval_cromwell_job_id"": ""0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8"",; ""created_at"": ""2023-05-04T15:40:52.834692"",; ""created_by"": null,; ""finished_at"": ""2023-05-04T17:03:53.525"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202:15994,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15994,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""07271d7b-729d-4db9-862d-5f992a60a598"",; ""eval_cromwell_job_id"": ""89508d5f-29f1-4534-9fe1-220a80de17c4"",; ""created_at"": ""2022-07-22T17:23:11.546971"",; ""created_by"": null,; ""finished_at"": ""2022-07-23T02:09:23.327"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:15298,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""410a88f6-62ca-4745-89fd-df6e30aac65b"",; ""eval_cromwell_job_id"": ""bf86d5b6-04bd-4344-b4fc-8a1df66bb5d9"",; ""created_at"": ""2022-03-16T19:53:45.833854"",; ""created_by"": null,; ""finished_at"": ""2022-03-17T00:11:38.702"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069765064,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""54997ade-421d-439f-acc9-abf50b3f9cb5"",; ""eval_cromwell_job_id"": ""6ea2705f-a3fa-41fc-8d17-a2c55d875eab"",; ""created_at"": ""2022-03-16T19:52:46.276978"",; ""created_by"": null,; ""finished_at"": ""2022-03-17T00:13:17.198"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""5e9a598e-1e80-4622-b153-78e97491a478"",; ""eval_cromwell_job_id"": ""f7eac327-c59c-43f7-a850-21bc3e0ccf52"",; ""created_at"": ""2022-07-12T17:28:58.385152"",; ""created_by"": null,; ""finished_at"": ""2022-07-13T02:47:47.016"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:15310,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""5f0f8f34-cdc7-46ff-a59d-2368edcdf007"",; ""eval_cromwell_job_id"": ""e6f57e40-2025-46fd-9aa0-d591a3799007"",; ""created_at"": ""2022-03-16T14:20:46.087600"",; ""created_by"": null,; ""finished_at"": ""2022-03-16T17:21:08.639"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069378815,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""9886a710-334a-41eb-a495-6968d322730a"",; ""eval_cromwell_job_id"": ""9bc521dc-3c4c-4274-972c-9d1e4be850d5"",; ""created_at"": ""2023-05-03T15:51:41.295461"",; ""created_by"": null,; ""finished_at"": ""2023-05-04T01:24:02.606"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:15970,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""a8ee297d-9fd6-433f-ac22-14488a09b832"",; ""eval_cromwell_job_id"": ""2a8ce326-baa5-4052-bff9-bd684393ff6c"",; ""created_at"": ""2022-07-25T15:10:00.795227"",; ""created_by"": null,; ""finished_at"": ""2022-07-26T00:11:26.646"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:15310,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": null,; ""test_cromwell_job_id"": ""d6f96a63-9657-4ff6-9934-fe1ab3cea617"",; ""eval_cromwell_job_id"": ""e372bd14-cd1f-4563-8d8a-abf6b6ca7883"",; ""created_at"": ""2022-03-16T14:19:54.192086"",; ""created_by"": null,; ""finished_at"": ""2022-03-16T17:26:08.529"",; ""results"": {; ""CHM controlHCprocesshours"": ""75.88741944444445"",; ""CHM controlHCsystemhours"": ""0",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:9075,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,9075,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""167cbd3e-0835-47b5-8325-a853bd98ec9a"",; ""eval_cromwell_job_id"": ""43bcefb2-f38b-413d-9b65-06b489e64af1"",; ""created_at"": ""2023-06-02T17:26:47.097005"",; ""created_by"": null,; ""finished_at"": ""2023-06-03T03:48:32.144"",; ""results"": {; ""CHM controlHCprocesshours"": ""86.02092777777776"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:15929,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15929,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""36c1f67a-93a8-45b4-857a-ae22db7ac9e7"",; ""eval_cromwell_job_id"": ""81dbf637-d90c-4111-93b9-9cec426c5a39"",; ""created_at"": ""2023-08-18T19:32:11.841274"",; ""created_by"": null,; ""finished_at"": ""2023-08-19T05:42:56.447"",; ""results"": {; ""CHM controlHCprocesshours"": ""89.85896666666667"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:15940,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15940,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""78cbc728-aca2-47d0-9a7a-554dba9f19f5"",; ""eval_cromwell_job_id"": ""f61c0caa-70a3-4ee5-8542-e78ba8364985"",; ""created_at"": ""2023-05-04T18:26:42.379437"",; ""created_by"": null,; ""finished_at"": ""2023-05-05T03:56:11.686"",; ""results"": {; ""CHM controlHCprocesshours"": ""81.1621222222222"",; ""CHM ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:15970,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""7b1f3c2d-059a-4391-92d7-b2f88045d8d5"",; ""eval_cromwell_job_id"": ""ba9f32d5-7b46-462c-8d1f-5692eee05534"",; ""created_at"": ""2023-08-21T22:38:12.285936"",; ""created_by"": null,; ""finished_at"": ""2023-08-22T09:23:01.973"",; ""results"": {; ""CHM controlHCprocesshours"": ""90.613975"",; ""CHM control",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:15933,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15933,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""b7d06271-38b7-47d2-9d7c-af5543460de9"",; ""eval_cromwell_job_id"": ""beb77715-227e-4dbd-803f-4458c83607c8"",; ""created_at"": ""2023-05-12T15:09:42.984289"",; ""created_by"": null,; ""finished_at"": ""2023-05-13T01:07:11.594"",; ""results"": {; ""CHM controlHCprocesshours"": ""79.42513333333335"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988:15964,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15964,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""b9fadac2-4e94-424f-a397-004684d1e51e"",; ""eval_cromwell_job_id"": ""acc9e2ac-b10a-4d6a-b586-cd3e47f04e41"",; ""created_at"": ""2023-05-16T17:15:43.799702"",; ""created_by"": null,; ""finished_at"": ""2023-05-17T02:34:53.616"",; ""results"": {; ""CHM controlHCprocesshours"": ""84.8981027777778"",; ""CHM ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:15937,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15937,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""c18d0f5f-52c9-4e60-92ed-e4b33c6553c7"",; ""eval_cromwell_job_id"": ""9c49383b-01a9-4bc0-90fa-cde7e1090a47"",; ""created_at"": ""2023-05-15T22:38:43.733338"",; ""created_by"": null,; ""finished_at"": ""2023-05-16T08:30:08.614"",; ""results"": {; ""CHM controlHCprocesshours"": ""78.81892777777776"",; ""CHM",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:15969,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,15969,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,1,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"""SNP"" issue and not-exactly-reproducible test results (see #1805) still under investigation. Changed API to input. Thanks for taking a look, @cwhelan!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1704:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1704,1,['test'],['test']
Testability,"""cloud"" and ""bucket"" tests now run by default, in order to make progress for issue #751. Moved all existing tests to ""cloud_todo"" and ""bucket_todo"". The plan is to then move back the tests that work (but in a separate PR, to keep this clean and simple).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/819:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/819,3,['test'],['tests']
Testability,"""cloud"" and ""bucket"" tests now run by default, in order to make progress for issue #751. Moved all existing tests to ""cloud_todo"" and ""bucket_todo"". The plan is to then move back the tests that work (but in a separate PR, to keep this clean and simple). This is a rebased and fixed version of #819.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/822:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/822,3,['test'],['tests']
Testability,"""eval_cromwell_job_id"": ""ba9f32d5-7b46-462c-8d1f-5692eee05534"",; ""created_at"": ""2023-08-21T22:38:12.285936"",; ""created_by"": null,; ""finished_at"": ""2023-08-22T09:23:01.973"",; ""results"": {; ""CHM controlHCprocesshours"": ""90.613975"",; ""CHM controlHCsystemhours"": ""0.19898611111111109"",; ""CHM controlHCwallclockhours"": ""63.943677777777786"",; ""CHM controlHCwallclockmax"": ""3.1089944444444444"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-BenchmarkVCFControlSample/Benchmark/10080eab-b0ad-4752-80cb-fc6d34bd9ad9/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""93.63756388888888"",; ""CHM evalHCsystemhours"": ""0.6379805555555556"",; ""CHM evalHCwallclockhours"": ""70.50882222222222"",; ""CHM evalHCwallclockmax"": ""3.5186027777777777"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163-33ad637fb5bd/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-CHMSampleHeadToHead/BenchmarkComparison/b7ddd5f2-fded-4076-b163",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:17608,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17608,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"""testthing"", programGroup = SparkProgramGroup.class); public class TestGCS extends GATKSparkTool {; private static final long serialVersionUID = 1L;. @Override; protected void runTool(JavaSparkContext ctx) {; try {; modifyProviders();; } catch (IllegalAccessException | NoSuchFieldException e) {; throw new RuntimeException(""Couldn't reset FilesystemProviders"");; }; try {; final Path index = Paths.get(new URI(""gs://hellbender/test/build_reports/1626.1/tests/index.html""));; System.out.println(""Count:"" + Files.lines(index).count());; } catch (URISyntaxException | IOException e) {; throw new RuntimeException(""Couldn't read file"");; }; }; }. private void modifyProviders() throws IllegalAccessException, NoSuchFieldException {; final Field installedProviders = FileSystemProvider.class.getDeclaredField(""installedProviders"");; installedProviders.setAccessible(true);; installedProviders.set(null, loadInstalledProviders());; installedProviders.setAccessible(false);; }. //copied from FileSystemProvider, modified to use TestGCS.classLoader() instead of systemClassloader; private static List<FileSystemProvider> loadInstalledProviders() {; List<FileSystemProvider> list = new ArrayList<FileSystemProvider>();. ServiceLoader<FileSystemProvider> sl = ServiceLoader; .load(FileSystemProvider.class, TestGCS.class.getClassLoader());. // ServiceConfigurationError may be throw here; for (FileSystemProvider provider: sl) {; String scheme = provider.getScheme();. // add to list if the provider is not ""file"" and isn't a duplicate; if (!scheme.equalsIgnoreCase(""file"")) {; boolean found = false;; for (FileSystemProvider p: list) {; if (p.getScheme().equalsIgnoreCase(scheme)) {; found = true;; break;; }; }; if (!found) {; list.add(provider);; }; }; }; return list;; }; }; ```. We'd have to add an initial action to GATKSparkTool that would run `modifyProviders` once on each executor which may be a bit of a trick on it's own. . If we decided to do this it would make sense to make `modifyProviders` use",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2312:2093,Test,TestGCS,2093,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2312,1,['Test'],['TestGCS']
Testability,"# Bug Report. ## Affected tool(s) or class(es); gatk `GenomicsDBImport ` `GenotypeGVCFs`; ## Affected version(s); The Genome Analysis Toolkit (GATK) v4.5.0.0; ## Description; Hi,; Here is my situation, I'm testing the feasibility of incremental GenomicsDB，I have total 400 samples to joint calling, I have no problem directly using `GenomicsDBImport `and `GenotypeGVCFs `for joint calling of all 400 samples. The configuration used is 4c32g for `GenomicsDBImport `and 2c16g for `GenotypeGVCFs`. But when I first built a GenomicsDB of 200 samples using `GenomicsDBImport `successfully, and then use GenomicsDB `--genomicsdb-update-workspace-path` increment 200 samples into the GenomicsDB , use this incremental imported GenomicsDB to `GenotypeGVCFs`. The error happend and report GENOMICSDB_TIMER,Exception in thread ""main"" java.lang.OutOfMemoryError: Java heap space; Here are my code; ```; gatk --java-options ""-Xms8000m -Xmx~{max_mem}m"" \; GenomicsDBImport \; --tmp-dir $PWD \; --genomicsdb-workspace-path ~{workspace_dir_name}~{prefix}.~{index} \; --batch-size 50 \; -L ~{intervals} \; --reader-threads 5 \; --merge-input-intervals \; --consolidate \; -V ~{sep = "" -V "" single_sample_gvcfs}. gatk --java-options ""-Xms8000m -Xmx~{max_mem}m"" \; GenomicsDBImport \; --tmp-dir $PWD \; --genomicsdb-update-workspace-path ~{workspace_dir_name} \; --batch-size 50 \; --reader-threads 5 \; --merge-input-intervals \; --consolidate \; -V ~{sep = "" -V "" single_sample_gvcfs}. gatk --java-options ""-Xms8000m -Xmx~{max_mem}m"" \; GenotypeGVCFs \; --tmp-dir $PWD \; -R ~{ref} \; -O ~{workspace_dir_name}.vcf.gz \; -G StandardAnnotation \; --only-output-calls-starting-in-intervals \; -V gendb://~{workspace_dir_name} \; -L ~{intervals} \; --merge-input-intervals \; -all-sites; ```; And I found that before report error the number of threads used by GATK increased, but the memory usage did not exceed the maximum limit of the server.; I also cheched `--max-alternate-alleles` and `--genomicsdb-max-alternate-al",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8777:206,test,testing,206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8777,1,['test'],['testing']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2396?src=pr&el=h1) Report; > Merging [#2396](https://codecov.io/gh/broadinstitute/gatk/pull/2396?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/3c10554709a4f254300a3d38f24216c42da5913c?src=pr&el=desc) will **increase** coverage by `0.028%`. ```diff; @@ Coverage Diff @@; ## master #2396 +/- ##; ==============================================; + Coverage 76.14% 76.168% +0.028% ; - Complexity 10824 10829 +5 ; ==============================================; Files 748 748 ; Lines 39372 39372 ; Branches 6856 6856 ; ==============================================; + Hits 29978 29989 +11 ; + Misses 6802 6791 -11 ; Partials 2592 2592; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2396?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/compare/3c10554709a4f254300a3d38f24216c42da5913c...efe544dd515af5f5f25f6c73e8d54726fceca914?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `87.2% <ø> (ø)` | `37 <ø> (ø)` | :x: |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/compare/3c10554709a4f254300a3d38f24216c42da5913c...efe544dd515af5f5f25f6c73e8d54726fceca914?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `77.477% <ø> (+0.901%)` | `38% <ø> (+1%)` | :white_check_mark: |; | [...ender/utils/nio/SeekableByteChannelPrefetcher.java](https://codecov.io/gh/broadinstitute/gatk/compare/3c10554709a4f254300a3d38f24216c42da5913c...efe544dd515af5f5f25f6c73e8d54726fceca914?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9uaW8vU2Vla2FibGVCeXRlQ2hhbm5lbFByZWZldGNoZXIuamF2YQ==) | `79.747% <ø> (+6.329%)` | `22% <ø> (+4%)` | :white_check_mark: |. --,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2396#issuecomment-278174747:905,test,test,905,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2396#issuecomment-278174747,2,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=h1) Report; > Merging [#2540](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/5ccfd0097c39b44464692fab1566d850f73aa5c7?src=pr&el=desc) will **increase** coverage by `0.523%`.; > The diff coverage is `82.075%`. ```diff; @@ Coverage Diff @@; ## master #2540 +/- ##; ===============================================; + Coverage 75.865% 76.388% +0.523% ; - Complexity 10839 10918 +79 ; ===============================================; Files 754 755 +1 ; Lines 39552 39653 +101 ; Branches 6907 6925 +18 ; ===============================================; + Hits 30006 30290 +284 ; + Misses 6936 6741 -195 ; - Partials 2610 2622 +12; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `89.474% <100%> (+1.974%)` | `7 <3> (+2)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `71.318% <100%> (+22.481%)` | `34 <1> (+7)` | :arrow_up: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `80.612% <80.612%> (ø)` | `19 <19> (?)` | |; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2540?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2540#issuecomment-290122549:957,test,test,957,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2540#issuecomment-290122549,2,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=h1) Report; > Merging [#2558](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/a1c1663a07e767e4c6eb4dd5a977215407d5f28d?src=pr&el=desc) will **decrease** coverage by `0.006%`.; > The diff coverage is `34.146%`. ```diff; @@ Coverage Diff @@; ## master #2558 +/- ##; ===============================================; - Coverage 79.475% 79.469% -0.006% ; - Complexity 17740 17768 +28 ; ===============================================; Files 1159 1159 ; Lines 63951 64030 +79 ; Branches 9779 9798 +19 ; ===============================================; + Hits 50825 50884 +59 ; - Misses 9214 9233 +19 ; - Partials 3912 3913 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.602% <0%> (-15.176%)` | `32 <0> (ø)` | |; | [...rg/broadinstitute/hellbender/tools/PrintReads.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9QcmludFJlYWRzLmphdmE=) | `87.5% <100%> (ø)` | `4 <1> (ø)` | :arrow_down: |; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `75.281% <100%> (ø)` | `40 <1> (ø)` | :arrow_down: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2558?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `59.686% <100%> (+0.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111:960,test,test,960,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332013111,1,['test'],['test']
Testability,"# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=h1) Report; > Merging [#2566](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/6859a1202a79c1b123eac73a3f70162c6a90783c?src=pr&el=desc) will **decrease** coverage by `0.015%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #2566 +/- ##; ==============================================; - Coverage 76.386% 76.37% -0.015% ; + Complexity 10898 10895 -3 ; ==============================================; Files 754 754 ; Lines 39552 39552 ; Branches 6907 6907 ; ==============================================; - Hits 30212 30206 -6 ; - Misses 6727 6732 +5 ; - Partials 2613 2614 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `85.714% <0%> (-4.762%)` | `7% <0%> (-1%)` | |; | [...oadinstitute/hellbender/utils/GenomeLocParser.java](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9HZW5vbWVMb2NQYXJzZXIuamF2YQ==) | `85.95% <0%> (-4.132%)` | `55% <0%> (-2%)` | |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=footer). Last update [6859a12...1df1909](https://codecov.io/gh/broadinstitute/gatk/pull/2566?src=pr&el=lastupdated). Read the [comment docs](https://doc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2566#issuecomment-291909459:923,test,test,923,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2566#issuecomment-291909459,2,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=h1) Report; > Merging [#2595](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/bf993d8c6f6925ce6bdb67f50c0e33c6e5bc3336?src=pr&el=desc) will **increase** coverage by `1.133%`.; > The diff coverage is `61.842%`. ```diff; @@ Coverage Diff @@; ## master #2595 +/- ##; ===============================================; + Coverage 75.992% 77.126% +1.133% ; - Complexity 11033 11147 +114 ; ===============================================; Files 769 771 +2 ; Lines 40058 40115 +57 ; Branches 6979 6982 +3 ; ===============================================; + Hits 30441 30939 +498 ; + Misses 6978 6513 -465 ; - Partials 2639 2663 +24; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `89.474% <ø> (ø)` | `7 <0> (ø)` | :arrow_down: |; | [...sv/DiscoverVariantsFromAlignedSGAContigsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUFsaWduZWRTR0FDb250aWdzU3BhcmsuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [.../sv/DiscoverVariantsFromContigAlignmentsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTcGFyay5qYXZh) | `100% <100%> (ø)` | `7 <1> (?)` | |; | [...stitute/hellbender/tools/spark/sv/SVVCFWriter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2595?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-293918558:956,test,test,956,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-293918558,2,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=h1) Report; > Merging [#2610](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/c7e73af684b2a1a080de0b748d60b361ba79ba1d?src=pr&el=desc) will **decrease** coverage by `0.029%`.; > The diff coverage is `21.739%`. ```diff; @@ Coverage Diff @@; ## master #2610 +/- ##; ==============================================; - Coverage 75.95% 75.921% -0.029% ; - Complexity 11045 11046 +1 ; ==============================================; Files 769 769 ; Lines 40125 40143 +18 ; Branches 6990 6993 +3 ; ==============================================; + Hits 30475 30477 +2 ; - Misses 7007 7019 +12 ; - Partials 2643 2647 +4; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `66.102% <21.739%> (-6.898%)` | `18 <2> (+2)` | |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `66.667% <0%> (-3.333%)` | `10% <0%> (ø)` | |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2610?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2610#issuecomment-295846251:936,test,test,936,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2610#issuecomment-295846251,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=h1) Report; > Merging [#2656](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/fd355c5a825f8d95c5d3d62e2c614cb96b056e94?src=pr&el=desc) will **decrease** coverage by `0.002%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #2656 +/- ##; ==============================================; - Coverage 76.13% 76.128% -0.002% ; + Complexity 11155 11154 -1 ; ==============================================; Files 769 769 ; Lines 40766 40767 +1 ; Branches 7113 7113 ; ==============================================; Hits 31035 31035 ; Misses 7064 7064 ; - Partials 2667 2668 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <100%> (+0.122%)` | `37 <0> (ø)` | :arrow_down: |; | [...roadinstitute/hellbender/engine/ProgressMeter.java](https://codecov.io/gh/broadinstitute/gatk/pull/2656?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `93.75% <0%> (-1.563%)` | `21% <0%> (-1%)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2656#issuecomment-299089508:933,test,test,933,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2656#issuecomment-299089508,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=h1) Report; > Merging [#2879](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/04dbeb205eb42854400291c3827fab18fd2db5b6?src=pr&el=desc) will **increase** coverage by `0.035%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #2879 +/- ##; ===============================================; + Coverage 79.971% 80.006% +0.035% ; - Complexity 16726 16754 +28 ; ===============================================; Files 1139 1139 ; Lines 60898 61014 +116 ; Branches 9436 9460 +24 ; ===============================================; + Hits 48701 48815 +114 ; + Misses 8401 8393 -8 ; - Partials 3796 3806 +10; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `84.444% <100%> (+0.741%)` | `39 <1> (+1)` | :arrow_up: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `70% <0%> (+3.333%)` | `10% <0%> (ø)` | :arrow_down: |; | [.../hellbender/tools/genomicsdb/GenomicsDBImport.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnQuamF2YQ==) | `77.5% <0%> (+4.461%)` | `72% <0%> (+24%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2879?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dG,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2879#issuecomment-306261746:959,test,test,959,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2879#issuecomment-306261746,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=h1) Report; > Merging [#3058](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/33d316f0e8e35572bb60c83a144297c8557bb37d?src=pr&el=desc) will **increase** coverage by `<.001%`.; > The diff coverage is `81.818%`. ```diff; @@ Coverage Diff @@; ## master #3058 +/- ##; ===============================================; + Coverage 80.131% 80.132% +<.001% ; - Complexity 16971 16977 +6 ; ===============================================; Files 1143 1143 ; Lines 61569 61590 +21 ; Branches 9592 9597 +5 ; ===============================================; + Hits 49336 49353 +17 ; - Misses 8417 8419 +2 ; - Partials 3816 3818 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1N0YW5kYXJkQXJndW1lbnREZWZpbml0aW9ucy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.582% <100%> (+0.376%)` | `36 <0> (ø)` | :arrow_down: |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/3058?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `91.282% <78.947%> (-1.373%)` | `89 <8> (+6)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3058#issuecomment-306895297:1248,test,test,1248,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3058#issuecomment-306895297,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=h1) Report; > Merging [#3176](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/2f2eb73be34e822ebea84b9f116c506768c625a1?src=pr&el=desc) will **decrease** coverage by `0.471%`.; > The diff coverage is `93.182%`. ```diff; @@ Coverage Diff @@; ## master #3176 +/- ##; ===============================================; - Coverage 80.128% 79.657% -0.471% ; + Complexity 16995 16924 -71 ; ===============================================; Files 1145 1146 +1 ; Lines 61650 61659 +9 ; Branches 9609 9609 ; ===============================================; - Hits 49399 49116 -283 ; - Misses 8422 8723 +301 ; + Partials 3829 3820 -9; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `70.707% <ø> (-12.875%)` | `27 <0> (-9)` | |; | [...institute/hellbender/utils/test/TestResources.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1Rlc3RSZXNvdXJjZXMuamF2YQ==) | `93.182% <93.182%> (ø)` | `8 <8> (?)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3176?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvb,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3176#issuecomment-311650630:960,test,test,960,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3176#issuecomment-311650630,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=h1) Report; > Merging [#3228](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/9d9ca1ff31f99d8005c822e55aaccce967427383?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3228 +/- ##; ===============================================; + Coverage 80.419% 80.427% +0.008% ; Complexity 17290 17290 ; ===============================================; Files 1165 1165 ; Lines 62596 62597 +1 ; Branches 9768 9768 ; ===============================================; + Hits 50339 50345 +6 ; + Misses 8352 8347 -5 ; Partials 3905 3905; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <100%> (+0.122%)` | `36 <0> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/CountFalsePositives.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vQ291bnRGYWxzZVBvc2l0aXZlcy5qYXZh) | `93.548% <100%> (ø)` | `7 <1> (ø)` | :arrow_down: |; | [.../tools/walkers/validation/FalsePositiveRecord.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhbGlkYXRpb24vRmFsc2VQb3NpdGl2ZVJlY29yZC5qYXZh) | `100% <100%> (ø)` | `7 <2> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3228?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlsc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891:939,test,test,939,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-314209891,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=h1) Report; > Merging [#3421](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/0565ee66812e9d0dc09ce704bc06f5da4b56b95c?src=pr&el=desc) will **increase** coverage by `0.082%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3421 +/- ##; ==============================================; + Coverage 80.51% 80.591% +0.082% ; - Complexity 17555 17654 +99 ; ==============================================; Files 1175 1175 ; Lines 63499 63776 +277 ; Branches 9896 9956 +60 ; ==============================================; + Hits 51123 51398 +275 ; - Misses 8425 8426 +1 ; - Partials 3951 3952 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQWJzdHJhY3RNYXJrRHVwbGljYXRlc1Rlc3Rlci5qYXZh) | `79.487% <100%> (ø)` | `17 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `71.233% <0%> (-2.74%)` | `11% <0%> (ø)` | |; | [...tionbiasvariantfilter/OrientationBiasFilterer.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9leG9tZS9vcmllbnRhdGlvbmJpYXN2YXJpYW50ZmlsdGVyL09yaWVudGF0aW9uQmlhc0ZpbHRlcmVyLmphdmE=) | `95.492% <0%> (-0.064%)` | `80% <0%> (+24%)` | |; | [...bender/tools/walkers/annotator/FragmentLength.java](https://codecov.io/gh/broadinstitute/gatk/pull/3421?src=pr&el=tree#diff-c3JjL21haW4vamF,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321356740:926,test,test,926,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321356740,2,['test'],"['test', 'testers']"
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3447?src=pr&el=h1) Report; > Merging [#3447](https://codecov.io/gh/broadinstitute/gatk/pull/3447?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/054f7481b5fff4b781de7aa74433f7fd685ea2eb?src=pr&el=desc) will **increase** coverage by `0.265%`.; > The diff coverage is `75.275%`. ```diff; @@ Coverage Diff @@; ## master #3447 +/- ##; ===============================================; + Coverage 79.183% 79.448% +0.265% ; - Complexity 16844 18136 +1292 ; ===============================================; Files 1119 1189 +70 ; Lines 60168 65580 +5412 ; Branches 9498 9959 +461 ; ===============================================; + Hits 47643 52102 +4459 ; - Misses 8822 9487 +665 ; - Partials 3703 3991 +288; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3447?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../broadinstitute/hellbender/utils/LoggingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9Mb2dnaW5nVXRpbHMuamF2YQ==) | `82.222% <ø> (ø)` | `11 <0> (ø)` | :arrow_down: |; | [...ellbender/cmdline/StandardArgumentDefinitions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1N0YW5kYXJkQXJndW1lbnREZWZpbml0aW9ucy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `65.926% <ø> (ø)` | `35 <0> (ø)` | :arrow_down: |; | [...ellbender/utils/config/CustomBooleanConverter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3447/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3447#issuecomment-323474032:975,Log,LoggingUtils,975,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3447#issuecomment-323474032,1,['Log'],['LoggingUtils']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=h1) Report; > Merging [#3475](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/c798c8489d4f04687396ec3e1405b854e5360ce1?src=pr&el=desc) will **decrease** coverage by `0.54%`.; > The diff coverage is `85.714%`. ```diff; @@ Coverage Diff @@; ## master #3475 +/- ##; ==============================================; - Coverage 79.554% 79.014% -0.54% ; + Complexity 17738 17588 -150 ; ==============================================; Files 1154 1151 -3 ; Lines 64092 63666 -426 ; Branches 9757 9748 -9 ; ==============================================; - Hits 50988 50305 -683 ; - Misses 9214 9486 +272 ; + Partials 3890 3875 -15; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `70.707% <ø> (-13.116%)` | `27 <0> (-9)` | |; | [...e/hellbender/utils/test/testers/SamFileTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `90.217% <ø> (ø)` | `30 <0> (ø)` | :arrow_down: |; | [.../hellbender/utils/test/testers/CleanSamTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQ2xlYW5TYW1UZXN0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700:962,test,test,962,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=h1) Report; > Merging [#3616](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/59f1498b3bbb40be02b220eca868c14df2fc1901?src=pr&el=desc) will **increase** coverage by `0.003%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3616 +/- ##; ===============================================; + Coverage 79.721% 79.724% +0.003% ; Complexity 18189 18189 ; ===============================================; Files 1223 1223 ; Lines 66735 66735 ; Branches 10426 10426 ; ===============================================; + Hits 53202 53204 +2 ; + Misses 9317 9315 -2 ; Partials 4216 4216; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `79.602% <100%> (ø)` | `49 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3616?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `79.87% <0%> (+1.299%)` | `39% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3616#issuecomment-332307937:923,test,test,923,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3616#issuecomment-332307937,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=h1) Report; > Merging [#3665](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/4bf75cd3d981d8005a2fa90fc1f8f14ebb20554b?src=pr&el=desc) will **increase** coverage by `0.003%`.; > The diff coverage is `85.714%`. ```diff; @@ Coverage Diff @@; ## master #3665 +/- ##; ===============================================; + Coverage 79.266% 79.268% +0.003% ; Complexity 17395 17395 ; ===============================================; Files 1144 1144 ; Lines 62930 62938 +8 ; Branches 9551 9552 +1 ; ===============================================; + Hits 49882 49890 +8 ; + Misses 9241 9240 -1 ; - Partials 3807 3808 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...itute/hellbender/utils/test/SamAssertionUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NhbUFzc2VydGlvblV0aWxzLmphdmE=) | `75.281% <85.714%> (-0.013%)` | `40 <0> (ø)` | |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.517% <0%> (ø)` | `63% <0%> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3665?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `73.973% <0%> (+2.74%)` | `11% <0%> (ø)` | :arrow_down: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334470972:941,test,test,941,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334470972,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=h1) Report; > Merging [#3667](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/daa0cd17cc97f63eb219f16d5103759133cf44ce?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3667 +/- ##; ===============================================; + Coverage 79.264% 79.273% +0.008% ; - Complexity 17394 17397 +3 ; ===============================================; Files 1144 1144 ; Lines 62930 62931 +1 ; Branches 9551 9551 ; ===============================================; + Hits 49881 49887 +6 ; + Misses 9241 9239 -2 ; + Partials 3808 3805 -3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/ArgumentsBuilder.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0FyZ3VtZW50c0J1aWxkZXIuamF2YQ==) | `100% <100%> (ø)` | `19 <1> (+1)` | :arrow_up: |; | [.../hellbender/tools/genomicsdb/GenomicsDBImport.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnQuamF2YQ==) | `74.329% <100%> (+0.383%)` | `54 <7> (+1)` | :arrow_up: |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.948% <0%> (+0.862%)` | `63% <0%> (+1%)` | :arrow_up: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3667?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsb,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3667#issuecomment-334531567:941,test,test,941,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3667#issuecomment-334531567,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=h1) Report; > Merging [#3681](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/ac7be03100e63749699fd023061deaff291709e7?src=pr&el=desc) will **decrease** coverage by `0.004%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3681 +/- ##; ===============================================; - Coverage 79.399% 79.394% -0.004% ; + Complexity 17357 17355 -2 ; ===============================================; Files 1138 1138 ; Lines 62637 62638 +1 ; Branches 9521 9521 ; ===============================================; - Hits 49733 49731 -2 ; - Misses 9108 9110 +2 ; - Partials 3796 3797 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.824% <100%> (+0.12%)` | `36 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `78.571% <0%> (-1.299%)` | `39% <0%> (ø)` | |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3681?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.517% <0%> (-0.431%)` | `62% <0%> (-2%)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3681#issuecomment-335492487:949,test,test,949,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3681#issuecomment-335492487,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=h1) Report; > Merging [#3683](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/01617bc8c8effb9b516345f8feabebffdcdda272?src=pr&el=desc) will **increase** coverage by `0.007%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #3683 +/- ##; ===============================================; + Coverage 79.402% 79.408% +0.007% ; - Complexity 17369 17370 +1 ; ===============================================; Files 1139 1139 ; Lines 62690 62681 -9 ; Branches 9527 9526 -1 ; ===============================================; - Hits 49777 49774 -3 ; + Misses 9112 9109 -3 ; + Partials 3801 3798 -3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `83.704% <0%> (-0.12%)` | `36% <0%> (ø)` | |; | [...te/hellbender/engine/filters/SampleReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9TYW1wbGVSZWFkRmlsdGVyLmphdmE=) | `85.714% <0%> (ø)` | `3% <0%> (ø)` | :arrow_down: |; | [...ender/engine/filters/MappingQualityReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9NYXBwaW5nUXVhbGl0eVJlYWRGaWx0ZXIuamF2YQ==) | `100% <0%> (ø)` | `5% <0%> (ø)` | :arrow_down: |; | [.../hellbender/engine/filters/ReadNameReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/3683?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9SZWFkTmF,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3683#issuecomment-335588748:951,test,test,951,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3683#issuecomment-335588748,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=h1) Report; > Merging [#3767](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/81c0cd8d893468f835d68311121f3b309e65345d?src=pr&el=desc) will **increase** coverage by `0.008%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #3767 +/- ##; ===============================================; + Coverage 79.436% 79.445% +0.008% ; - Complexity 17839 17842 +3 ; ===============================================; Files 1170 1170 ; Lines 64419 64431 +12 ; Branches 9832 9832 ; ===============================================; + Hits 51172 51187 +15 ; + Misses 9329 9328 -1 ; + Partials 3918 3916 -2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `65.926% <100%> (+3.324%)` | `35 <3> (+3)` | :arrow_up: |; | [...er/tools/spark/sv/discovery/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvQWxpZ25tZW50SW50ZXJ2YWwuamF2YQ==) | `90.517% <0%> (ø)` | `63% <0%> (ø)` | :arrow_down: |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `92.424% <0%> (+1.515%)` | `63% <0%> (ø)` | :arrow_down: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](https://codecov.io/gh/broadinstitute/gatk/pull/3767?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3767#issuecomment-344759317:951,test,test,951,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3767#issuecomment-344759317,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4000?src=pr&el=h1) Report; > Merging [#4000](https://codecov.io/gh/broadinstitute/gatk/pull/4000?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/a9efb666c8bbecb9545c957af6f38b0fb1ef8bee?src=pr&el=desc) will **increase** coverage by `0.393%`.; > The diff coverage is `100%`. ```diff; @@ Coverage Diff @@; ## master #4000 +/- ##; ===============================================; + Coverage 78.974% 79.367% +0.393% ; - Complexity 16534 17420 +886 ; ===============================================; Files 1059 1075 +16 ; Lines 59160 61634 +2474 ; Branches 9616 10242 +626 ; ===============================================; + Hits 46721 48917 +2196 ; - Misses 8703 8888 +185 ; - Partials 3736 3829 +93; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4000?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...hellbender/utils/test/VariantContextTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1ZhcmlhbnRDb250ZXh0VGVzdFV0aWxzLmphdmE=) | `79.73% <100%> (+0.758%)` | `57 <3> (+4)` | :arrow_up: |; | [...e/hellbender/tools/funcotator/FuncotatorUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JVdGlscy5qYXZh) | `74.161% <0%> (-2.351%)` | `141% <0%> (+6%)` | |; | [...llbender/transformers/NDNCigarReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvTkROQ2lnYXJSZWFkVHJhbnNmb3JtZXIuamF2YQ==) | `94.118% <0%> (-1.535%)` | `14% <0%> (+4%)` | |; | [...itute/hellbender/tools/walkers/bqsr/ApplyBQSR.java](https://codecov.io/gh/broadinstitute/gatk/pull/4000/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcv,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4000#issuecomment-355687116:955,test,test,955,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4000#issuecomment-355687116,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4210?src=pr&el=h1) Report; > Merging [#4210](https://codecov.io/gh/broadinstitute/gatk/pull/4210?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/9c35a3dcede3670208eb1a4c898cb4c33fb4c4db?src=pr&el=desc) will **decrease** coverage by `0.007%`.; > The diff coverage is `33.333%`. ```diff; @@ Coverage Diff @@; ## master #4210 +/- ##; ==============================================; - Coverage 78.477% 78.47% -0.007% ; + Complexity 16424 16423 -1 ; ==============================================; Files 1041 1041 ; Lines 59099 59099 ; Branches 9673 9673 ; ==============================================; - Hits 46379 46375 -4 ; - Misses 8978 8981 +3 ; - Partials 3742 3743 +1; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4210?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnkuamF2YQ==) | `86.957% <100%> (ø)` | `14 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/spark/SparkContextFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb250ZXh0RmFjdG9yeS5qYXZh) | `71.233% <0%> (-2.74%)` | `11% <0%> (ø)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4210/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRp,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4210#issuecomment-359081841:928,test,test,928,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4210#issuecomment-359081841,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4423?src=pr&el=h1) Report; > Merging [#4423](https://codecov.io/gh/broadinstitute/gatk/pull/4423?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/6e7a9bec69184aca7a8884896e86af0ad21ed9fd?src=pr&el=desc) will **increase** coverage by `0.362%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #4423 +/- ##; ==============================================; + Coverage 79.04% 79.402% +0.362% ; - Complexity 16447 17620 +1173 ; ==============================================; Files 1047 1055 +8 ; Lines 59189 63340 +4151 ; Branches 9672 10754 +1082 ; ==============================================; + Hits 46783 50293 +3510 ; - Misses 8645 9125 +480 ; - Partials 3761 3922 +161; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4423?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/logging/OneShotLogger.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9sb2dnaW5nL09uZVNob3RMb2dnZXIuamF2YQ==) | `78.571% <0%> (-21.429%)` | `3% <0%> (ø)` | |; | [...ools/spark/sv/evidence/IntervalCoverageFinder.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9JbnRlcnZhbENvdmVyYWdlRmluZGVyLmphdmE=) | `82.222% <0%> (-6.239%)` | `19% <0%> (+11%)` | |; | [...er/tools/walkers/annotator/ReadPosRankSumTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWFkUG9zUmFua1N1bVRlc3QuamF2YQ==) | `94.231% <0%> (-5.769%)` | `25% <0%> (+15%)` | |; | [.../DiscoverVariantsFromContigAlignmentsSAMSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4423/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2Y,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-366379307:959,log,logging,959,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-366379307,1,['log'],['logging']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4563?src=pr&el=h1) Report; > Merging [#4563](https://codecov.io/gh/broadinstitute/gatk/pull/4563?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/3806e15c5626e6bc5379b2b1dad705617057a7fd?src=pr&el=desc) will **increase** coverage by `0.075%`.; > The diff coverage is `43.802%`. ```diff; @@ Coverage Diff @@; ## master #4563 +/- ##; ===============================================; + Coverage 79.857% 79.932% +0.075% ; - Complexity 17054 17347 +293 ; ===============================================; Files 1067 1067 ; Lines 62031 63140 +1109 ; Branches 10039 10311 +272 ; ===============================================; + Hits 49536 50469 +933 ; - Misses 8582 8696 +114 ; - Partials 3913 3975 +62; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4563?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `64.444% <0%> (-0.481%)` | `33 <0> (ø)` | |; | [...r/dataSources/cosmic/CosmicFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL2Nvc21pYy9Db3NtaWNGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `76.238% <0%> (-4.815%)` | `21 <0> (ø)` | |; | [...ncotator/mafOutput/MafOutputRendererConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL21hZk91dHB1dC9NYWZPdXRwdXRSZW5kZXJlckNvbnN0YW50cy5qYXZh) | `98.98% <100%> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...tools/funcotator/DataSourceFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4563/diff?src=pr&el=tree#diff-,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4563#issuecomment-375688881:969,test,test,969,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4563#issuecomment-375688881,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4916?src=pr&el=h1) Report; > Merging [#4916](https://codecov.io/gh/broadinstitute/gatk/pull/4916?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/b225d665f92fad1ab5ffb9d0030be02f29f2bb77?src=pr&el=desc) will **increase** coverage by `0.001%`.; > The diff coverage is `88.889%`. ```diff; @@ Coverage Diff @@; ## master #4916 +/- ##; ===============================================; + Coverage 86.478% 86.479% +0.001% ; - Complexity 29152 29165 +13 ; ===============================================; Files 1813 1814 +1 ; Lines 135227 135305 +78 ; Branches 15020 15023 +3 ; ===============================================; + Hits 116942 117011 +69 ; - Misses 12825 12831 +6 ; - Partials 5460 5463 +3; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4916?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...titute/hellbender/utils/test/ArgumentsBuilder.java](https://codecov.io/gh/broadinstitute/gatk/pull/4916/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0FyZ3VtZW50c0J1aWxkZXIuamF2YQ==) | `90.909% <ø> (ø)` | `20 <0> (ø)` | :arrow_down: |; | [...e/hellbender/engine/ArgumentsBuilderWithJIMFS.java](https://codecov.io/gh/broadinstitute/gatk/pull/4916/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQXJndW1lbnRzQnVpbGRlcldpdGhKSU1GUy5qYXZh) | `82.5% <82.5%> (ø)` | `8 <8> (?)` | |; | [.../hellbender/engine/CRAMSupportIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4916/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQ1JBTVN1cHBvcnRJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `92.969% <95.122%> (+0.747%)` | `24 <5> (+5)` | :arrow_up: |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4916#issuecomment-398593023:961,test,test,961,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4916#issuecomment-398593023,1,['test'],['test']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4955?src=pr&el=h1) Report; > Merging [#4955](https://codecov.io/gh/broadinstitute/gatk/pull/4955?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/4521d32e6aca6f2e98dc4ce3b7807057cd407998?src=pr&el=desc) will **decrease** coverage by `20.624%`.; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #4955 +/- ##; ================================================; - Coverage 80.797% 60.173% -20.624% ; + Complexity 17952 12779 -5173 ; ================================================; Files 1095 1095 ; Lines 64609 64609 ; Branches 10394 10394 ; ================================================; - Hits 52202 38877 -13325 ; - Misses 8379 21497 +13118 ; - Partials 4028 4235 +207; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4955?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/cmdline/TestProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL1Rlc3RQcm9ncmFtR3JvdXAuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...er/utils/smithwaterman/SWNativeAlignerWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9zbWl0aHdhdGVybWFuL1NXTmF0aXZlQWxpZ25lcldyYXBwZXIuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-6%)` | |; | [...llbender/engine/filters/CountingVariantFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZmlsdGVycy9Db3VudGluZ1ZhcmlhbnRGaWx0ZXIuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-18%)` | |; | [...ne/programgroups/CoverageAnalysisProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/4955/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4955#issuecomment-400789881:963,Test,TestProgramGroup,963,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4955#issuecomment-400789881,1,['Test'],['TestProgramGroup']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/4971?src=pr&el=h1) Report; > Merging [#4971](https://codecov.io/gh/broadinstitute/gatk/pull/4971?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/e4668126a05727e8b8dac63aa5e223a6fd1b904a?src=pr&el=desc) will **decrease** coverage by `0.157%`.; > The diff coverage is `97.222%`. ```diff; @@ Coverage Diff @@; ## master #4971 +/- ##; ===============================================; - Coverage 86.352% 86.194% -0.157% ; - Complexity 28592 29040 +448 ; ===============================================; Files 1782 1782 ; Lines 132367 133721 +1354 ; Branches 14746 15130 +384 ; ===============================================; + Hits 114301 115260 +959 ; - Misses 12753 13065 +312 ; - Partials 5313 5396 +83; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/4971?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/4971/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <100%> (+10.448%)` | `13 <0> (+1)` | :arrow_up: |; | [...covery/inference/TestUtilsCpxVariantInference.java](https://codecov.io/gh/broadinstitute/gatk/pull/4971/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvaW5mZXJlbmNlL1Rlc3RVdGlsc0NweFZhcmlhbnRJbmZlcmVuY2UuamF2YQ==) | `99.512% <100%> (-0.021%)` | `7 <1> (ø)` | |; | [...lignment/AssemblyContigAlignmentsConfigPicker.java](https://codecov.io/gh/broadinstitute/gatk/pull/4971/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0Fzc2VtYmx5Q29udGlnQWxpZ25tZW50c0NvbmZpZ1BpY2tlci5qYXZh) | `93.515% <91.667%> (+0.526%)` | `95 <27> (+8)` | :arrow_up: |; | [.../AssemblyCon,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4971#issuecomment-401503759:952,Test,TestUtilsForAssemblyBasedSVDiscovery,952,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4971#issuecomment-401503759,1,['Test'],['TestUtilsForAssemblyBasedSVDiscovery']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@43750e9`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `93.478%`. ```diff; @@ Coverage Diff @@; ## master #5116 +/- ##; ==========================================; Coverage ? 86.707% ; Complexity ? 29097 ; ==========================================; Files ? 1810 ; Lines ? 134816 ; Branches ? 14939 ; ==========================================; Hits ? 116895 ; Misses ? 12521 ; Partials ? 5400; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5116?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (?)` | |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (ø)` | `4 <0> (?)` | |; | [...tsFromContigAlignmentsSAMSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9pbnRlZ3JhdGlvbi9EaXNjb3ZlclZhcmlhbnRzRnJvbUNvbnRpZ0FsaWdubWVudHNTQU1TcGFya0ludGVncmF0aW9uVGVzdC5qYXZh) | `97.561% <ø> (ø)` | `6 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5116/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvU3ZEaXNjb3ZlcnlVdGlscy5,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793:801,Test,TestUtilsForAssemblyBasedSVDiscovery,801,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5116#issuecomment-413255793,1,['Test'],['TestUtilsForAssemblyBasedSVDiscovery']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=h1) Report; > Merging [#5117](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/df3fb9d2715ba1db4877f4f77286573569c3314a?src=pr&el=desc) will **decrease** coverage by `0.171%`.; > The diff coverage is `32.061%`. ```diff; @@ Coverage Diff @@; ## master #5117 +/- ##; ===============================================; - Coverage 86.506% 86.335% -0.171% ; - Complexity 29259 29293 +34 ; ===============================================; Files 1814 1817 +3 ; Lines 135623 136028 +405 ; Branches 15063 15122 +59 ; ===============================================; + Hits 117322 117440 +118 ; - Misses 12833 13132 +299 ; + Partials 5468 5456 -12; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5117?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...iscovery/TestUtilsForAssemblyBasedSVDiscovery.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvVGVzdFV0aWxzRm9yQXNzZW1ibHlCYXNlZFNWRGlzY292ZXJ5LmphdmE=) | `95.522% <ø> (ø)` | `13 <0> (ø)` | :arrow_down: |; | [...e/hellbender/tools/spark/sv/utils/SVFileUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi91dGlscy9TVkZpbGVVdGlscy5qYXZh) | `24.691% <ø> (+1.235%)` | `4 <0> (ø)` | :arrow_down: |; | [...ne/AbstractIntervalTreeBasedConcordanceWalker.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQWJzdHJhY3RJbnRlcnZhbFRyZWVCYXNlZENvbmNvcmRhbmNlV2Fsa2VyLmphdmE=) | `0% <0%> (ø)` | `0 <0> (?)` | |; | [...der/tools/spark/sv/discovery/SvDiscoveryUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5117/diff?src=,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5117#issuecomment-413279333:952,Test,TestUtilsForAssemblyBasedSVDiscovery,952,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5117#issuecomment-413279333,1,['Test'],['TestUtilsForAssemblyBasedSVDiscovery']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5607?src=pr&el=h1) Report; > Merging [#5607](https://codecov.io/gh/broadinstitute/gatk/pull/5607?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/b7f90f45458a0c2064f16ede629a356b2737e17f?src=pr&el=desc) will **increase** coverage by `0.015%`.; > The diff coverage is `98.636%`. ```diff; @@ Coverage Diff @@; ## master #5607 +/- ##; ===============================================; + Coverage 87.041% 87.056% +0.015% ; - Complexity 32076 32097 +21 ; ===============================================; Files 1977 1977 ; Lines 147082 147263 +181 ; Branches 16171 16185 +14 ; ===============================================; + Hits 128021 128201 +180 ; + Misses 13157 13156 -1 ; - Partials 5904 5906 +2; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5607?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...dinstitute/hellbender/testutils/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90ZXN0dXRpbHMvUmVhZFRlc3RVdGlscy5qYXZh) | `95.455% <ø> (ø)` | `5 <0> (ø)` | :arrow_down: |; | [...dinstitute/hellbender/utils/pileup/ReadPileup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9waWxldXAvUmVhZFBpbGV1cC5qYXZh) | `92.258% <100%> (+0.05%)` | `69 <0> (ø)` | :arrow_down: |; | [...lotypecaller/ReferenceConfidenceModelUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SZWZlcmVuY2VDb25maWRlbmNlTW9kZWxVbml0VGVzdC5qYXZh) | `95.701% <100%> (+2.014%)` | `50 <0> (+3)` | :arrow_up: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5607/diff?src=pr&el=tree#diff-c3JjL21haW,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457738122:959,test,testutils,959,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457738122,1,['test'],['testutils']
Testability,# [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/5665?src=pr&el=h1) Report; > Merging [#5665](https://codecov.io/gh/broadinstitute/gatk/pull/5665?src=pr&el=desc) into [master](https://codecov.io/gh/broadinstitute/gatk/commit/9c22c343832d1cfc114a2efd68af1ae877adad5f?src=pr&el=desc) will **decrease** coverage by `17.044%`.; > The diff coverage is `99.535%`. ```diff; @@ Coverage Diff @@; ## master #5665 +/- ##; ===============================================; - Coverage 87.05% 70.006% -17.044% ; + Complexity 31700 25058 -6642 ; ===============================================; Files 1938 1938 ; Lines 146097 146393 +296 ; Branches 16128 16174 +46 ; ===============================================; - Hits 127178 102484 -24694 ; - Misses 13033 38882 +25849 ; + Partials 5886 5027 -859; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/5665?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...dinstitute/hellbender/testutils/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90ZXN0dXRpbHMvUmVhZFRlc3RVdGlscy5qYXZh) | `0% <ø> (-95.455%)` | `0 <0> (-5)` | |; | [...dinstitute/hellbender/utils/pileup/ReadPileup.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9waWxldXAvUmVhZFBpbGV1cC5qYXZh) | `89.032% <100%> (-3.176%)` | `62 <0> (-7)` | |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlscy5qYXZh) | `77.752% <100%> (-2.295%)` | `202 <1> (-3)` | |; | [...lotypecaller/ReferenceConfidenceModelUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5665/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdH,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5665#issuecomment-462897263:970,test,testutils,970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5665#issuecomment-462897263,1,['test'],['testutils']
Testability,"## Affected tool(s) or class(es); SoftClippedReadFilter. ### Affected version(s); 4.5.0.0. ### Description ; According to the filter's description, setting the `--soft-clipped-leading-trailing-ratio` to 0.9 should mean that reads will be filtered out if over 90% of their bases are soft-clipped at either the beginning or end. Therefore, a higher value indicates a more lenient filter, resulting in fewer reads being excluded. However, it seems that the current implementation retains reads with a ratio of 0.9 to 1.0 instead of excluding them, which is the opposite of what the description suggests. In practice, increasing the threshold from 0.3 to 0.6 and then to 0.9 results in more reads being filtered out, which is contrary to the expected behavior. #### Steps to reproduce; 1. Increase the threshold of `--soft-clipped-leading-trailing-ratio` from 0.3 to 0.6, and then to 0.9.; 2. Observe that more reads are being filtered out with higher thresholds. Refer to the attached log for detailed observations: [SoftClippedReadFilter_test.log](https://github.com/user-attachments/files/15935665/SoftClippedReadFilter_test.log). #### Expected behavior; Filter out reads where the ratio of soft-clipped bases to total bases exceeds the given threshold. For example, set the threshold to 0.9 and filter out reads with a ratio > 0.9. #### Actual behavior; Filter out reads where the ratio of soft-clipped bases to total bases is less than the given threshold. For example, set the threshold to 0.9 and filter out reads with a ratio < 0.9. #### Simple Solution Proposal; I believe the issue might be resolved by inverting the comparison operators in the relevant sections of the code. Specifically:. - Change the `>` to `<` in line 66 and line 95 of ; **`src/main/java/org/broadinstitute/hellbender/engine/filters/SoftClippedReadFilter.java`**. This change should make the `test()` function of the `ReadFilter` class return `false` when the ratio exceeds the threshold, aligning with the intended functi",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8887:998,log,log,998,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8887,1,['log'],['log']
Testability,"## Affected version(s); - [ ] Latest public release version [version?]; - [x] Latest master branch as of [2/6/2020]. ### Description ; There are minimal/inconsistent checks that variants added to vcfWriters are correctly ordered (an issue with htsjdk I think). This leads to an insidious bug, where a sorted vcf can be fed through SelectVariants, and depending on the flavor of output vcf, either crash, or succeed but output an incorrectly sorted vcf. The issue is that in some circumstances SelectVariants will trim alleles to their minimal representation, which can change the location of a variant record, and thus reorder them. However, SelectVariants does nothing to account for the potential order change. Since vcfWriter implementations in htsjdk seem to do minimal/inconsistent checks on the order of variants being added to them, this may write out an incorrectly sorted vcf, or throw an exception, depending on the flavor of vcfWriter. . #### Steps to reproduce; With attached (zipped because github) vcf, run ; `gatk SelectVariants -V test.input.vcf -sn SAMPLE_01 -O test.output.vcf`; Tool will succeed, but output vcf will be incorrectly sorted. Somehow, this incorrectly sorted vcf will also be accompanied by an index! Though if you try to run `IndexFeatureFile` on the output vcf separately, it will fail. . run ; `gatk SelectVariants -V test.input.vcf -sn SAMPLE_01 -O test.output.vcf.gz`; tool will throw exception w/ stack trace:; ```; java.lang.IllegalArgumentException: Features added out of order: previous (TabixFeature{referenceIndex=0, start=17148456, end=17148456, featureStartFilePosition=2460, featureEndFilePosition=-1}) > next (TabixFeature{referenceIndex=0, start=17148447, end=17148457, featureStartFilePosition=2509, featureEndFilePosition=-1}); 	at htsjdk.tribble.index.tabix.TabixIndexCreator.addFeature(TabixIndexCreator.java:89); 	at htsjdk.variant.variantcontext.writer.IndexingVariantContextWriter.add(IndexingVariantContextWriter.java:203); 	at htsjdk.variant.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6443:1172,test,test,1172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6443,1,['test'],['test']
Testability,"## Bug Report. ### Affected class; AssemblyBasedCallerUtils. ### Affected version(s); - [x] Latest public release version 4.1.9.0; - [x] Latest master branch as of 10/10/2020. ### Description ; When adjusting the base quality of overlapping read pairs, the modifications are made in place. If the modified reads are later used in another active region, the results from the later active region will be changed by the earlier modification. We had previously fixed this issue in #4926. But it looks like the refactoring in https://github.com/broadinstitute/gatk/commit/1353e3201bb11e29039efd89359b0a4cfc11e5c0 reverted to the earlier behavior. `AssemblyBasedCallerUtilsUnitTest.testfinalizeRegion()` will fail due to this behavior if [line 67](https://github.com/broadinstitute/gatk/blob/master/src/test/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/AssemblyBasedCallerUtilsUnitTest.java#L67) is changed from:; ```; AssemblyBasedCallerUtils.finalizeRegion(activeRegion, false, false, minbq, header, sampleList, false);; ```; to:; ```; AssemblyBasedCallerUtils.finalizeRegion(activeRegion, false, false, minbq, header, sampleList, true);; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6882:676,test,testfinalizeRegion,676,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6882,2,['test'],"['test', 'testfinalizeRegion']"
Testability,"## Bug Report. ### Affected tool(s) or class(es). All Spark tools that takes parameter `-L`. ### Affected version(s); - [x] Latest public release version [4.0.4.0]; - [x] Latest master branch as of [2018-06-30]. ### Description . When running a Spark tool and passing in interval arguments via the standard `-L` argument, if the interval file (only BED file is tested) is stored in HDFS, we see errors like below. ```; org.broadinstitute.hellbender.exceptions.UserException$MalformedGenomeLoc: Badly formed genome unclippedLoc: Query interval ""hdfs://shuang-g94794-chmi-chmi3-wgs1-cram-bam-feature-m:8020/data/merged_commonFPDel.bed"" is not valid for this input.; 	at org.broadinstitute.hellbender.utils.GenomeLocParser.getUnambiguousInterval(GenomeLocParser.java:350); 	at org.broadinstitute.hellbender.utils.GenomeLocParser.parseGenomeLoc(GenomeLocParser.java:309); 	at org.broadinstitute.hellbender.utils.IntervalUtils.parseIntervalArguments(IntervalUtils.java:300); 	at org.broadinstitute.hellbender.utils.IntervalUtils.loadIntervals(IntervalUtils.java:226); 	at org.broadinstitute.hellbender.cmdline.argumentcollections.IntervalArgumentCollection.parseIntervals(IntervalArgumentCollection.java:174); 	at org.broadinstitute.hellbender.cmdline.argumentcollections.IntervalArgumentCollection.getTraversalParameters(IntervalArgumentCollection.java:155); 	at org.broadinstitute.hellbender.cmdline.argumentcollections.IntervalArgumentCollection.getIntervals(IntervalArgumentCollection.java:111); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeIntervals(GATKSparkTool.java:514); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:451); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:439); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:30); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLinePro",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4852:361,test,tested,361,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4852,1,['test'],['tested']
Testability,"## Bug Report. ### Affected tool(s) or class(es). FastaAlternateReferenceMaker. ### Affected version(s); - [x] Latest public release version 4.1.4.1; - [ ] Latest master branch as of [date of test?]. ### Description . A null pointer exception in . #### Steps to reproduce. We called variants with HaplotypeCaller & use resulting VCF with FastaAlternateReferenceMaker. See command below, but only reference fasta & HC vcf are given as input (no snp masking or interval list, though error also occurs when using interval list with multiple -L calls). #### Expected behavior. Alternate-adjusted reference file or at least a helpful error message. #### Actual behavior. ```; + latest-gatk/gatk-4.1.4.1/gatk FastaAlternateReferenceMaker -R /g/data/xe2/references/eucalyptus/emel_scott/Emelliodora_CSIROg1_SISH00000000.1.fasta -O consensus_sequences_gatk//CCA0704.fasta.tmp -V pergene_gatk/CCA0704/CCA0704.vcf.gz; Using GATK jar /g/data/xe2/users/stephen-rodgers/latest-gatk/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /g/data/xe2/users/stephen-rodgers/latest-gatk/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar FastaAlternateReferenceMaker -R /g/data/xe2/references/eucalyptus/emel_scott/Emelliodora_CSIROg1_SISH00000000.1.fasta -O consensus_sequences_gatk//CCA0704.fasta.tmp -V pergene_gatk/CCA0704/CCA0704.vcf.gz; 15:43:14.276 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/g/data/xe2/users/stephen-rodgers/latest-gatk/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 03, 2020 3:43:15 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 15:43:15.230 INFO FastaAlternateReferenceMaker - ------------------------------------------------------------; 1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6434:192,test,test,192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6434,1,['test'],['test']
Testability,## Bug Report. ### Affected tool(s) or class(es). GermlineCNVCaller. ### Affected version(s). - [x] Latest public release version gatk 4.2.0.0; - [ ] Latest master branch as of [date of test?]. ### Description . The same set of hdf5 works fine with another annotated_intervals.tsv . the stack trace:; ```; 11:52:33.788 INFO GermlineCNVCaller - Aggregating read-count file /SCRATCH-BIRD/users/lindenbaum-p/work/NEXTFLOW/; 20210411.GRCh37.gatkcnv.brs/work/92/579e5a48aa9e52cd0e1df603266809/B00HOTD.counts.hdf5 (229 / 347); HDF5-DIAG: Error detected in HDF5 (1.8.14) thread 0:; #000: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Dio.c line 173 in H5Dread(): can'; t read data; major: Dataset; minor: Read failed; #001: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Dio.c line 550 in H5D__read(): ca; n't read data; major: Dataset; minor: Read failed; #002: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Dcontig.c line 543 in H5D__contig; _read(): contiguous read failed; major: Dataset; minor: Read failed; #003: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Dscatgath.c line 517 in H5D__scat; gath_read(): file gather failed; major: Low-level I/O; minor: Read failed; #004: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Dscatgath.c line 253 in H5D__gath; er_file(): read error; major: Dataspace; minor: Read failed; #005: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Dcontig.c line 873 in H5D__contig; _readvv(): can't perform vectorized sieve buffer read; major: Dataset; minor: Can't operate on object; #006: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5VM.c line 1457 in H5VM_opvv(): ca; n't perform operation; major: Internal error (too specific to document in detail); minor: Can't operate on object; #007: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Dcontig.c line 696 in H5D_,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7202:186,test,test,186,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7202,1,['test'],['test']
Testability,## Bug Report. ### Affected tool(s) or class(es). HC java.lang.IllegalStateException: Padded span must contain active span. ### Affected version(s); - [X] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description. ```; Runtime.totalMemory()=2494038016; java.lang.IllegalStateException: Padded span must contain active span.; at org.broadinstitute.hellbender.utils.Utils.validate(Utils.java:814); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:104); at org.broadinstitute.hellbender.engine.AssemblyRegion.<init>(AssemblyRegion.java:80); at org.broadinstitute.hellbender.utils.activityprofile.ActivityProfile.popNextReadyAssemblyRegion(ActivityProfile.java:332); at org.broadinstitute.hellbender.utils.activityprofile.ActivityProfile.popReadyAssemblyRegions(ActivityProfile.java:277); at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.loadNextAssemblyRegion(AssemblyRegionIterator.java:159); at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.next(AssemblyRegionIterator.java:112); at org.broadinstitute.hellbender.engine.AssemblyRegionIterator.next(AssemblyRegionIterator.java:35); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:192); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:173); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1058); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7289:239,test,test,239,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7289,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es). HaplotypeCaller. ### Affected version(s); - [x] Latest public release version (4.4.0.0, also 4.1.4.1); - [ ] Latest master branch as of [date of test?]. ### Description . I am using the HaplotypeCaller (GATK 4.4.0.0). When I look at the input BAM file in IGV, I expect the variant `NC_000015.9:g.48760182_48760185delinsGGGT`. However, HaplotypeCaller reports `NC_000015.9:g.48760182_48760185del` as well as an insertion `NC_000015.9:g.48760184_48760185insGGGT` (i.e. two distinct variants instead of a single indel). In the `bamout`, one can clearly see that the local realignment suggests the deletion + insertion and not the indel. ![image](https://user-images.githubusercontent.com/58295931/226553360-bff887ea-3823-44b7-bddb-46f70705c0b3.png). I understand that the local realignment is expected to improve variant calling and that his approach is battle-tested. I am thus not convinced this is a bug. However, the realignment/variant call is not obvious to the human eye - one would expect the indel instead. The variant seems like a clear heterozygous indel. I checked this [blog post](https://gatk.broadinstitute.org/hc/en-us/articles/360035891111-Expected-variant-at-a-specific-site-was-not-called): The bamout is as outlined above, the mapping + base quality seems fine (judging by IGV) and `--max-alternate-alleles` doesn't seem useful here (and indeed doesn't do anything to the result). I didn't got into kmer fiddling as suggested by the blog post. This is not a homopoly region. I also tested with 4.1.4.1 which only reports the deletion. The screenshot from above is from the 4.4.0.0 invocation. Here is the same situation for 4.1.4.1 (realignment is similar, `out.vcf` does not contain the insertion):. ![image](https://user-images.githubusercontent.com/58295931/226554045-0d9dd7e3-65ec-40ce-a6bd-74d73d4a2507.png). FYI, the variant lies on FBN1 / NM_000138.5 (rev strand). cDNA notation would be `NM_000138.5:c.4698_4701del` or `NM_000",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8253:195,test,test,195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8253,2,['test'],"['test', 'tested']"
Testability,"## Bug Report. ### Affected tool(s) or class(es). MuTect2 for the test case, but any caller using the Reference Bases annotation and calling bases near the end of chromosomes. ### Affected version(s). This occurs with the latest release (4.0.8.1) and not with the previous (4.0.7.0). It appears to be related to the addition of the Orientation Bias filter (#4895) and assessing sequence context:. https://github.com/broadinstitute/gatk/pull/4895/files#diff-07e3c8c33f865c5b32b362afe50cfd86R48. ### Description . When identifying variants near the end of chromosome boundaries, MuTect2 fails with:; ```; java.lang.StringIndexOutOfBoundsException: String index out of range: 369; at java.lang.String.substring(String.java:1963); at org.broadinstitute.hellbender.tools.walkers.annotator.ReferenceBases.annotate(ReferenceBases.java:48); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.annotateContext(VariantAnnotatorEngine.java:270); at org.broadinstitute.hellbender.tools.walkers.mutect.SomaticGenotypingEngine.callMutations(SomaticGenotypingEngine.java:176); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.callRegion(Mutect2Engine.java:211); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.apply(Mutect2.java:212); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:979); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:137); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:182); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:201); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.m",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5130:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5130,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es). Mutect2; `; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx130g -jar /gatk/gatk-package-4.1.8.1-local.jar Mutect2 -R /ucsc.hg19.fasta -I my.bam -L /test.bed --f1r2-tar-gz DD.f1r2.tar.gz --force-active --genotype-germline-sites --kmer-size 10 --kmer-size 20 --recover-all-dangling-branches --max-reads-per-alignment-start 0 --native-pair-hmm-threads 33 -O DD.vcf.gz; `. ### Affected version(s); Using GATK jar /gatk/gatk-package-4.1.8.1-local.jar. ### Description ; When bed is created with a reference genome that is not the same as the bam file, an null pointer can occurs. The error is not catched by GATK, and the error is difficult to understand. Here a discussion about it.; https://gatk.broadinstitute.org/hc/en-us/community/posts/360077477391-Haplotype-caller-fails-to-run-GATK-4-1-8-0-and-GATK-4-2-0-0-. The case below occurs when provided bed has been made with the wrong genome reference.; `; 14:25:55.254 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Oct 07, 2021 2:25:55 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 14:25:55.525 INFO Mutect2 - ------------------------------------------------------------; 14:25:55.525 INFO Mutect2 - The Genome Analysis Toolkit (GATK) v4.1.8.1; 14:25:55.525 INFO Mutect2 - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:25:55.525 INFO Mutect2 - Executing as toto on Linux v5.4.123-1.el7.elrepo.x86_64 amd64; 14:25:55.525 INFO Mutect2 - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_242-8u242-b08-0ubuntu3~18.04-b08; 14:25:55.526 INFO Mutect2 - Start Date/Time: October 7, 2021 2:25:55 PM GMT; 14:25:55.526 INFO Mutect2 - -----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7496:315,test,test,315,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7496,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es). The Genome Analysis Toolkit (GATK) v4.0.7.0. ### Description . I ran the command line below and get an oom error. I've got the same error when i set the heap memory larger using the param ""--java-option Xmx24g"" . This procedure only crashed when I tried to select INDEL. I've uploaded the vcf file for you to test. command line:; ```shell; disk/juntong/software/gatk-4.0.7.0/gatk SelectVariants -V /disk/juntong/huada/V300029595_results/mutect_outputs/V300029595.merged.vcf.gatk.somatic.vcf.gz -O /disk/juntong/huada/V300029595_results/mutect_outputs/V300029595.merged.vcf.gatk.somatic.vcf.gatk.somatic.indel.vcf.gz -select-type INDEL; ```. log:; ```; Using GATK jar /disk/juntong/software/gatk-4.0.7.0/gatk-package-4.0.7.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /disk/juntong/software/gatk-4.0.7.0/gatk-package-4.0.7.0-local.jar SelectVariants -V /disk/juntong/huada/V300029595_results/mutect_outputs/V300029595.merged.vcf.gatk.somatic.vcf.gz -O /disk/juntong/huada/V300029595_results/mutect_outputs/V300029595.merged.vcf.gatk.somatic.vcf.gatk.somatic.indel.vcf.gz -select-type INDEL; 05:06:54.800 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/disk/juntong/software/gatk-4.0.7.0/gatk-package-4.0.7.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 05:06:55.409 INFO SelectVariants - ------------------------------------------------------------; 05:06:55.409 INFO SelectVariants - The Genome Analysis Toolkit (GATK) v4.0.7.0; 05:06:55.409 INFO SelectVariants - For support and documentation go to https://software.broadinstitute.org/gatk/; 05:06:55.410 INFO SelectVariants - Executing as juntong@train1 on Linux v3.10.0-1062.1.1.el7.x86_64 amd64; 05:06:55.410 INFO SelectVariants - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_222-b10; 05:06:55.410 INFO SelectVariants -",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6254:359,test,test,359,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6254,2,"['log', 'test']","['log', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es). ValidateVariants: `--fail-gvcf-on-overlap` / `-no-overlaps`. ### Affected version(s); - [x] Latest public release version: 4.2.6.1; - [ ] ~Latest master branch as of~ [did not test, but affected file hasn't changed since August 2021]. ### Description . If there are overlapping reference blocks when running ValidateVariants with the `-no-overlaps` option, a USER ERROR is outputted after the entire tool finishes running, as shown below:. ```; ***********************************************************************. A USER ERROR has occurred: This GVCF contained overlapping reference blocks. The first overlapping interval is [genomic coordinates here]. ***********************************************************************; ```. This error should be generally helpful, but it appears that the interval that is reported in the error message is the _last_ overlapping interval, not the _first_. I'm not super familiar with java, but I'm guessing that `firstOverlap` might be continuously replaced by `refInterval` if there are multiple overlaps, which is inconsistent with expected behavior. . Potentially relevant lines of code: ; - `-no-overlaps` argument description ([lines 192-201](; https://github.com/broadinstitute/gatk/blob/ca33bc953abfa7050b791f049285f5262675cf84/src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ValidateVariants.java#L192-L201)); - `firstOverlap = refInterval` ([line 275](https://github.com/broadinstitute/gatk/blob/ca33bc953abfa7050b791f049285f5262675cf84/src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ValidateVariants.java#L275)). #### Steps to reproduce. Running ValidateVariants with the `-no-overlaps` flag on a .g.vcf with overlapping intervals will cause this error. More specifically, we're running this within WARP's Exome Germline Single Sample v.3.1.7 WDL release. Our command is as follows:. ```; gatk --java-options ""-Xms6000m -Xmx6500m"" \; ValidateVariants ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8103:226,test,test,226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8103,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es). VariantAnnotator ... but this is due to an old syntax update perhaps other docs in other tools are also affected. ### Affected version(s); - [X] Latest public release version [version?]; - [Presumptive] Latest master branch as of [date of test?]. ### Description . The argument ```--resource``` example(s) show a wrong syntax in regards to the location of the ""provider"" name ; ; #### Steps to reproduce; Google 'GATK VariantAnnotator'; the first or one of the first hits points to the current GATK doc on the tool. . #### Expected behavior. The example should read ```--resource:foo resource-file.vcf.gz```. #### Actual behavior. The example reads ```--resource foo:resource-file.vcf.gz```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8143:289,test,test,289,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8143,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es). `VariantFiltration` not working on `HaplotypeCaller` VCF. ### Affected version(s). > Using GATK jar /work/mtgraovac_lab/tools/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar. ### Description . Where a line of the VCF file looks like:. ```; ##source=HaplotypeCaller; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT MTG324; I 1355499 . A G 127.14 . AC=2;AF=1.00;AN=2;DP=4;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=30.51;QD=31.79;SOR=1.609 GT:AD:DP:GQ:PL 1/1:0,4:4:12:141,12,0; ```; The following filter is applied:. ```; $ gatk VariantFiltration -R refs/c_elegans.PRJNA13758.WS265.genomic.fa -V VCFS/haplotypecaller.vcf -O test.vcf.gz --filter-expression ""MQ > 90.0"" --filter-name ""my_filters"". Using GATK jar /work/mtgraovac_lab/tools/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /work/mtgraovac_lab/tools/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar VariantFiltration -R refs/c_elegans.PRJNA13758.WS265.genomic.fa -V VCFS/haplotypecaller.vcf -O sanic.vcf.gz --filter-expression MQ > 90.0 --filter-name my_filters; 12:01:06.183 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/work/mtgraovac_lab/tools/gatk-4.1.8.1/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Nov 15, 2020 12:01:06 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 12:01:06.398 INFO VariantFiltration - ------------------------------------------------------------; 12:01:06.398 INFO VariantFiltration - The Genome Analysis Toolkit (GATK) v4.1.8.1; 12:01:06.398 INFO VariantFiltration - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:01:06.398 INFO VariantFiltration - Executing as moldach@arc on Linux v3.10",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6960:671,test,test,671,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6960,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es): Mutect2. ### Affected version(s); gatk 4.2.5. ### Description ; Like most use cases, I acquired a high-confidence, ""consensus"" VCF from a large batch of samples, and I run force-calling on each individual sample again to:; (1) rescue rare variants.; (2) for variants that are not called in a sample, get the REF/ALT counts for them for downstream analysis. However, compared to the first pass (where Mutect2 is in simple germline calling mode), the second pass (force-calling) is extremely slow. Sorry I have not done any precise measurement, but the difference is quite significant. Given my use case, do you still recommend using force-calling? Or is there any alternative, more efficient method? I tried using bcftools call, but that tool has several issues as well such as omitting indels, not supporting multiallelic force-calling etc. #### Steps to reproduce. My command for force-calling is:; ```; ""gatk Mutect2 ""; ""-alleles {input.q_vcf} ""; ""-L {input.q_vcf} ""; ""--genotype-filtered-alleles ""; ""--max-reads-per-alignment-start {params.mrpas} ""; ""-R {params.REF} ""; ""-I {input.sc_bam} ""; ""-O {output.sc_vcf}; ""; ```. I can upload some BAMs for testing if needed. Thanks in advance!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7825:1201,test,testing,1201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7825,1,['test'],['testing']
Testability,"## Bug Report. ### Affected tool(s) or class(es); - `HaplotypeCaller` with the arguments `--max-mnp-distance 5`. ### Affected version(s); - gatk version 4.0.12.0. ### Description . For a genomes in a bottle reference sample, I have observed a genotype discordance as follows:. ref: `CA`; alleles: `CG` and `TG`. | Callset | Genotype |; | --- | --- |; | GIAB | `1/2` |; | Test | `0/2` |. As you can see, the test dataset improperly calls a reference allele (`CA`) when it should have called the first alternate instead. The GIAB callset has two phased records:; <details>; <summary> GIAB callset </summary>. ```; chr2 241815307 . C T 50 PASS platforms=3;platformnames=Illumina,CG,10X;datasets=4;datasetnames=HiSeqPE100x,CGnormal,10XChromium,HiSeqMatePair;callsets=6;callsetnames=HiSeqPE100xSentieon,CGnormal,HiSeqPE100xfreebayes,10XSentieonhaplo,HiSeqMatePairSentieon,HiSeqMatePairfreebayes;callable=CS_HiSeqPE100xSentieon_callable,CS_CGnormal_callable,CS_HiSeqPE100xfreebayes_callable,CS_10XSentieonhaplo_callable;filt=CS_CGnormal_filt GT:PS:DP:ADALL:AD:GQ 0|1:241815307_C_T:286:53,44:47,41:1082; chr2 241815308 . A G 50 PASS platforms=3;platformnames=Illumina,CG,10X;datasets=4;datasetnames=HiSeqPE100x,CGnormal,10XChromium,HiSeqMatePair;callsets=6;callsetnames=HiSeqPE100xSentieon,CGnormal,HiSeqPE100xfreebayes,10XSentieonhaplo,HiSeqMatePairSentieon,HiSeqMatePairfreebayes;callable=CS_HiSeqPE100xSentieon_callable,CS_CGnormal_callable,CS_HiSeqPE100xfreebayes_callable,CS_10XSentieonhaplo_callable;filt=CS_CGnormal_filt GT:PS:DP:ADALL:AD:GQ 1|1:241815307_C_T:287:0,98:0,89:1; ```; </details>. while the test callset has the following single record:. <details>; <summary> Test callset </summary>. ```; chr2 241815307 . CA TG 1756.77 PASS AC=1;AF=0.5;AN=2;BaseQRankSum=-0.802;ClippingRankSum=0.521;DP=85;ExcessHet=3.0103;FS=2.902;MLEAC=1;MLEAF=0.5;MQ=60.0;MQRankSum=0.0;QD=20.67;ReadPosRankSum=-1.858;SOR=0.571 GT:AD:DP:F1R2:F2R1:GQ:PL 0/1:37,48:85:16,25,0:21,23,0:99:1785,0,1406; ```; </details>. Next",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5696:371,Test,Test,371,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5696,2,"['Test', 'test']","['Test', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); - gatk/scripts/cnv_wdl/germline/cnv_germline_case_workflow.wdl; - gatk/scripts/cnv_wdl/germline/cnv_getmline_cohort_workflow.wdl. ### Affected version(s); - **WDL** file from GATK latest release (4.2.5.0); - **GATK Docker** - latest (4.2.5.0). ### Description ; Accoridng to [GATK Germline CNV WDL instructions](https://github.com/broadinstitute/gatk/blob/master/scripts/cnv_wdl/germline/README.md), I ran cnv_getmline_cohort_workflow.wdl and got data to run cnv_germline_case_workflow.wdl. (contig_ploidy_model_tar file and 40 gcnv_model_tars files). Then I tried to run cnv_germline_case_workflow.wdl with one sample and got an error: ; ```; java.lang.IllegalArgumentException: The number of input call shards must match the number of input model shards.; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:798); 	at org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls.validateArgum; ```. PostprocessGermlineCNVCalls only completes correctly if I use only one of the gcnv_model_tars files, but it only produces results for the iterval_list file that is included in the used gcnv_model_tars. #### Case mode files; [case.log](https://github.com/broadinstitute/gatk/files/8186658/case.log); [case-inputs.json.txt](https://github.com/broadinstitute/gatk/files/8186662/case-inputs.json.txt). #### Cohort mode files; [cohort.log](https://github.com/broadinstitute/gatk/files/8186665/cohort.log); [cohort-inputs.json.txt](https://github.com/broadinstitute/gatk/files/8186667/cohort-inputs.json.txt)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7706:1212,log,log,1212,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7706,4,['log'],['log']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Any tool that uses log4j2 and is compiled in java11. ### Affected version(s); - [ X ] Latest master branch as of 20210707. ### Description ; Runing almost everything (anything that makes use of log4j2) I get an UnsuportedOperationException. For example:. ```; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx120g -XX:ParallelGCThreads=20 -jar /opt/gatk-4.2.0.0-42-g2fc3b65-SNAPSHOT/gatk-package-4.2.0.0-42-g2fc3b65-SNAPSHOT-local.jar HaplotypeCaller -R Reference/Cork_oak_ref.fasta -I 03-Mapping/05-Deduped-Sorted/S_B_10-deduped-sorted.bam -O 04-SNPcalling/01-HaplotypeCaller/S_B_10.raw.g.vcf --emit-ref-confidence GVCF; WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.; Exception in thread ""main"" java.lang.ExceptionInInitializerError; at org.broadinstitute.hellbender.Main.extractCommandLineProgram(Main.java:304); at org.broadinstitute.hellbender.Main.setupConfigAndExtractProgram(Main.java:180); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:202); at org.broadinstitute.hellbender.Main.main(Main.java:289); Caused by: java.lang.UnsupportedOperationException: No class provided, and an appropriate one cannot be found.; at org.apache.logging.log4j.LogManager.callerClass(LogManager.java:576); at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:601); at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:588); at org.broadinstitute.barclay.argparser.ClassFinder.<clinit>(ClassFinder.java:29); ... 4 more; ```. #### Steps to reproduce; Compile master with java11 and run ; `gatk CheckIlluminaDirectory --help`. #### Expected behavior; Normal execution. #### Actual behavior; UnsupportedOperationException",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7338:1361,log,logging,1361,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7338,9,"['Log', 'log']","['LogManager', 'logging']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); BaseRecalibrator, `BaseRecalibrationEngine.calculateKnownSites`. ### Affected version(s); - public release version [tested on >=4.1? no idea how to check]. ### Description ; When running BaseRecalibrator, if a read begins with an insertion and the KnownSites file contains an interval that begins at that position, the bases will not be skipped as GetReadCoordinateForReferenceCoordinate returns the read coordinate after the insertion. To properly handle this case, in the line https://github.com/broadinstitute/gatk/blob/9bca5119e996886ee85ef6c890eba79ec5d6cfb1/src/main/java/org/broadinstitute/hellbender/utils/recalibration/BaseRecalibrationEngine.java#L340 ReadUtils.ClippingTail.LEFT_TAIL should be changed to ReadUtils.ClippingTail.RIGHT_TAIL. Making this substitution would ensure that the coordinate returned is always the leftmost coordinate when the read begins with an insertion, the desired effect for the start of the interval. #### Steps to reproduce; Use an alignment with a read that begins with an insertion and a BED that specifies an interval that begins at that position. For example, alignment file:; ```; @HD VN:1.6 SO:coordinate; @SQ SN:ref LN:10; @RG ID:foo SM:bar PU:baz PL:ILLUMINA; r001 0 ref 2 40 6I4M * 0 0 AAAAAAAAAA IIIIIIIIII RG:Z:foo; ```; and ref:; ```; >ref; AAAAAAAAAA; ```. and BED file; ```; ref 0 1; ref 1 2; ref 2 3; ref 3 4; ref 4 5; ref 5 6; ref 6 7; ref 7 8; ref 8 9; ref 9 10; ```; Then run BaseRecalibrator and look at the output:; `gatk BaseRecalibrator -I aln.bam -R ref.fa --known-sites sites.bed.gz -O recal.txt`. #### Expected behavior; The output tables should be empty, since every site in our reference (bases 1-10 inclusive) should be skipped. #### Actual behavior; The output tables include the 6 inserted bases, and the cycle covariate values confirm they are the 6 leading inserted bases:; ```; ReadGroup QualityScore CovariateValue CovariateName EventType EmpiricalQuality Observations Errors",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6385:166,test,tested,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6385,1,['test'],['tested']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Build. ### Affected version(s); - [X] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; ```; =======================<phase: build >============================; ===> Building for gatk-4.2.6.1_1. Welcome to Gradle 7.5.1!. Here are the highlights of this release:; - Support for Java 18; - Support for building with Groovy 4; - Much more responsive continuous builds; - Improved diagnostics for dependency resolution. For more details see https://docs.gradle.org/7.5.1/release-notes.html. Starting a Gradle Daemon (subsequent builds will be faster). FAILURE: Build failed with an exception. * Where:; Build file '/wrkdirs/usr/ports/biology/gatk/work/gatk-4.2.6.1/build.gradle' line: 15. * What went wrong:; Plugin [id: 'de.undercouch.download', version: '4.1.2'] was not found in any of the following sources:. - Gradle Core Plugins (plugin is not in 'org.gradle' namespace); - Plugin Repositories (could not resolve plugin artifact 'de.undercouch.download:de.undercouch.download.gradle.plugin:4.1.2'); Searched in the following repositories:; Gradle Central Plugin Repository; ```. #### Steps to reproduce; regular build. Version: 4.2.6.1; Java-17; FreeBSD 13.1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7984:172,test,test,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7984,1,['test'],['test']
Testability,## Bug Report. ### Affected tool(s) or class(es); CalibrateDragstrModel. ### Affected version(s); Custom build: us.gcr.io/broad-dsde-methods/broad-gatk-snapshots/dragen_final_test_v2. ### Description ; An exception occurs on some AoU crams when running CalibrateDragstrModel; We have tried reindexing the cram.; This data is not public but @ahaessly can be a resource to help with debugging and testing. htsjdk.samtools.cram.CRAMException: Attempt to unmapped with non zero alignment start (0) or span (-2147483647); 	at htsjdk.samtools.cram.BAIEntry.<init>(BAIEntry.java:60); 	at htsjdk.samtools.cram.BAIEntry.<init>(BAIEntry.java:83); 	at htsjdk.samtools.cram.CRAIIndex.openCraiFileAsBaiStream(CRAIIndex.java:89); 	at htsjdk.samtools.SamIndexes.asBaiSeekableStreamOrNull(SamIndexes.java:91); 	at htsjdk.samtools.CRAMFileReader.initWithStreams(CRAMFileReader.java:202); 	at htsjdk.samtools.CRAMFileReader.<init>(CRAMFileReader.java:193); 	at htsjdk.samtools.SamReaderFactory$SamReaderFactoryImpl.open(SamReaderFactory.java:422); 	at htsjdk.samtools.SamReaderFactory.open(SamReaderFactory.java:105); 	at org.broadinstitute.hellbender.engine.ReadsPathDataSource.<init>(ReadsPathDataSource.java:245); 	at org.broadinstitute.hellbender.engine.ReadsPathDataSource.<init>(ReadsPathDataSource.java:181); 	at org.broadinstitute.hellbender.engine.GATKTool.initializeReads(GATKTool.java:459); 	at org.broadinstitute.hellbender.engine.GATKTool.onStartup(GATKTool.java:708); 	at org.broadinstitute.hellbender.tools.dragstr.CalibrateDragstrModel.onStartup(CalibrateDragstrModel.java:108); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:138); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hell,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7152:395,test,testing,395,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7152,1,['test'],['testing']
Testability,"## Bug Report. ### Affected tool(s) or class(es); CombineGVCFs. ### Affected version(s); - [X] Latest public release version [4.2.5.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; The auto-generated wdl for CombineGVCFs on dockstore won't work because it doesn't have any inputs for the indices of the input vcfs. This means GATK cannot access the vcf indices because they never get localized, so the workflow fails. . #### Steps to reproduce; Take any vcfs and run them through the workflow to get an error about missing indices. . #### Expected behavior; Including the indices in the task inputs will allow them to get localized along with the vcfs so GATK can operate normally. . #### Actual behavior; You get an error saying it requires index files to proceed.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7681:178,test,test,178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7681,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Funcotator. ### Affected version(s); - [ ] v.4.1.3.0 using us.gcr.io/broad-gatk/gatk:4.1.3.0; - [ ] 11/22 failed in Terra. ### Description ; There is a bug in the logic with how Funcotator is handling this variant. It is a variant after ; chr14:24655355 ; **Stacktrace**; <img width=""1248"" alt=""Screen Shot 2019-11-27 at 4 37 31 PM"" src=""https://user-images.githubusercontent.com/13475639/69761316-026f2a00-1135-11ea-9b50-491f5b22971c.png"">. Jonn has the input files, log file, and WDL. #### Steps to reproduce; To reproduce this issue, all the inputs and full pipeline are listed in this[ Zendesk ticket 3847](https://broadinstitute.zendesk.com/agent/tickets/3847). Contact Tiffany for access. #### Expected behavior; The tool should handle this situation more gracefully?. #### Actual behavior; It fails with a java.lang.StringIndexOutOfBoundsException: String index out of range: 776. ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6289:213,log,logic,213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6289,2,['log'],"['log', 'logic']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); Funcotator. ### Affected version(s); - [x] Latest public release version [4.2.1.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; When processing a VCF with tumor and matched normal into a MAF, the `Match_Norm_Seq_Allele1` and `Match_Norm_Seq_Allele2` fields are not populated. #### Steps to reproduce. `gatk --java-options -Xmx2048m Funcotator --data-sources-path /cromwell_root/datasources_dir --ref-version hg38 --output-file-format MAF -R /cromwell_root/getzlab-workflows-reference_files-oa/hg38/gdc/GRCh38.d1.vd1.fa -V` [`C3N-02729.vcf.gz`](https://github.com/broadinstitute/gatk/files/6977700/C3N-02729.vcf.gz) `-O C3N-02729.maf --annotation-default normal_barcode:C3N-02729_N --annotation-default tumor_barcode:C3N-02729_T --annotation-default Center:broadinstitute.org --annotation-default source:Unknown --transcript-selection-mode BEST_EFFECT`. (NOTE: reference files available at `gs://getzlab-workflows-reference_files-oa/hg38/gdc`). #### Expected behavior; `Match_Norm_Seq_Allele1` and `Match_Norm_Seq_Allele2` fields should be populated as appropriate based on the `GT` field for the matched normal in the VCF. #### Actual behavior; `Match_Norm_Seq_Allele1` and `Match_Norm_Seq_Allele2` are populated with `__UNKNOWN__`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7408:176,test,test,176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7408,1,['test'],['test']
Testability,## Bug Report. ### Affected tool(s) or class(es); Funcotator. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description ; Funcotator appears to output an unnecessary extra tab at the end of each line. The change appears to have happened between gatk 4.1.4.0 and 4.1.6.0. #### Expected behavior; Output correct number of tabs corresponding to the number of column headers. #### Actual behavior; Outputs an extra tab.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6693:177,test,test,177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6693,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Funcotator. ### Affected version(s); GATK 4.1.0.0. ### Description ; Funcotator does not perform any annotation on a minimal VCF with canonical cancer variants and returns the following error:. ```; 23:28:30.519 INFO Funcotator - Initializing Funcotator Engine...; 23:28:30.523 INFO Funcotator - Creating a VCF file for output: file:xxx/sandbox/idh.funcotated.vcf; 23:28:30.541 INFO ProgressMeter - Starting traversal; 23:28:30.541 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 23:28:30.652 INFO ProgressMeter - unmapped 0.0 15 8108.1; 23:28:30.652 INFO ProgressMeter - Traversal complete. Processed 15 total variants in 0.0 minutes.; 23:28:30.652 WARN Funcotator - ================================================================================; 23:28:30.652 WARN Funcotator - _ _ _ __ __ _ _ _ _; 23:28:30.652 WARN Funcotator - | || || | \ \ / /_ _ _ __ _ __ (_)_ __ __ _ | || || |; 23:28:30.652 WARN Funcotator - | || || | \ \ /\ / / _` | '__| '_ \| | '_ \ / _` | | || || |; 23:28:30.653 WARN Funcotator - |_||_||_| \ \V V / (_| | | | | | | | | | | (_| | |_||_||_|; 23:28:30.653 WARN Funcotator - (_)(_)(_) \_/\_/ \__,_|_| |_| |_|_|_| |_|\__, | (_)(_)(_); 23:28:30.653 WARN Funcotator - |___/; 23:28:30.653 WARN Funcotator - --------------------------------------------------------------------------------; 23:28:30.653 WARN Funcotator - Only IGRs were produced for this dataset. This STRONGLY indicates that this; 23:28:30.653 WARN Funcotator - run was misconfigured.; 23:28:30.653 WARN Funcotator - You MUST check your data sources to make sure they are correct for these data.; 23:28:30.653 WARN Funcotator - ================================================================================; ```. There is no reason to assume that there is any issue with the data sources or run parameters. They have worked fine using a different VCF that had completed INFO tags. #### Steps to reproduce; Run Funcotator",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5777:387,sandbox,sandbox,387,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5777,1,['sandbox'],['sandbox']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Funcotator. ### Affected version(s); `master`. ### Description ; For example, the following two snippets are equivalent, but due to random ordering, the last two are switched and automated tests are failing, even though the code is untouched.; ```; .../MRPL55_ENST00000430433.1_SPLICE_SITE/C1orf35_ENST00000272139.4_FIVE_PRIME_FLANK/MRPL55_ENST00000465397.1_SPLICE_SITE/C1orf35_ENST00000472617.1_FIVE_PRIME_FLANK....; .../MRPL55_ENST00000430433.1_SPLICE_SITE/C1orf35_ENST00000272139.4_FIVE_PRIME_FLANK/C1orf35_ENST00000472617.1_FIVE_PRIME_FLANK/MRPL55_ENST00000465397.1_SPLICE_SITE...; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5927:239,test,tests,239,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5927,1,['test'],['tests']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Funcotator. ### Affected version(s); gatk-4.1.8.0; funcotator_dataSources.v1.7.20200521s. ### Description . I am trying to use Funcotator to annotate the variants that I have already detected. Unfortunatelly, after a few seconds Funcotator stops with the error:. > java.lang.IllegalArgumentException: Unexpected value: lncRNA. I have no idea what is wrong and I did not find this error in the internet. Can it be a problem with JRE?. Full log below. #### Steps to reproduce. `~/programs/gatk-4.1.8.0/gatk Funcotator --variant filtered_variants/P1.vcf.gz --reference ~/resources/hg38_for_bwa/hs38DH.fa --ref-version hg38 --data-sources-path ~/resources/gatk/funcotator2/funcotator_dataSources.v1.7.20200521s --output filtered_variants/P1.avcf.gz --output-file-format VCF`. #### Expected behavior. Foncotator annotates my variants. #### Actual behavior. > (base) [pkus@master1 mutect_test]$ ~/programs/gatk-4.1.8.0/gatk Funcotator --variant filtered_variants/P1.vcf.gz --reference ~/resources/hg38_for_bwa/hs38DH.fa --ref-version hg38 --data-sources-path ~/resources/gatk/funcotator2/funcotator_dataSources.v1.7.20200521s --output filtered_variants/P1.avcf.gz --output-file-format VCF; > Using GATK jar /home/pkus/programs/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar; > Running:; > java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/pkus/programs/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar Funcotator --variant filtered_variants/P1.vcf.gz --reference /home/pkus/resources/hg38_for_bwa/hs38DH.fa --ref-version hg38 --data-sources-path /home/pkus/resources/gatk/funcotator2/funcotator_dataSources.v1.7.20200521s --output filtered_variants/P1.avcf.gz --output-file-format VCF; > 15:16:39.460 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/pkus/programs/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar!/com/int",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6708:489,log,log,489,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6708,1,['log'],['log']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GATK 4.1.0.0 AnalyzeCovariates. ### Affected version(s); - [x] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; The csv produced by AnalyzeCovariates is invalid. It doesn't escape commas in fields, resulting in an error in the R script. #### Steps to reproduce; If you have a comma in the readgroup in a BAM, this will happen. #### Expected behavior; It should produce valid csv files, and then be able to properly produce the plots. #### Actual behavior; Commas in read group names result in malformed (unescaped) csv where it's impossible to parse fields properly. This results in the following R script error:; ```; Error in read.table(file = file, header = header, sep = sep, quote = quote, :; more columns than column names; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5739:197,test,test,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5739,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GATK GenotypeGVCFs. ### Affected version(s); GATK 4.2.2.0. ### Description . When running GenotypeGVCFs,; 1. multiple warnings of **No valid combination operation found for INFO field** ; 2. AS_VarDP warnings:; ```; WARN ReferenceConfidenceVariantContextMerger - Detected invalid annotations: When trying to merge variant contexts at location chr16:10185 the annotation AS_VarDP=59|115|0 was not a numerical value and was ignored; WARN ReferenceConfidenceVariantContextMerger - Reducible annotation 'AS_VarDP' detected, add -G StandardAnnotation -G AS_StandardAnnotation to the command to annotate in the final VC with this annotation.; ```. 3. java.lang.NullPointerException occurs. ; 4. No variants output into VCF. This is the log:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx60g -jar /share/pkg.7/gatk/4.2.0.0/install/bin/gatk-package-4.2.0.0-local.jar GenotypeGVCFs -R /restricted/projectnb/casa/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa -G StandardAnnotation -G AS_StandardAnnotation -V gendb:///restricted/projectnb/kageproj/gatk/genomicsdb/genomicsDB.chr16 -L chr16:1-105581 --use-new-qual-calculator --only-output-calls-starting-in-intervals TRUE --genomicsdb-shared-posixfs-optimizations TRUE --tmp-dir tmp -O chr16-1-105581.vcf.gz; 00:05:54.259 WARN GATKAnnotationPluginDescriptor - Redundant enabled annotation group (StandardAnnotation) is enabled for this tool by default; 00:05:54.319 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/pkg.7/gatk/4.2.0.0/install/bin/gatk-package-4.2.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Aug 25, 2021 12:05:54 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 00:05:54.582 INFO GenotypeGVCFs - -------------------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7437:780,log,log,780,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7437,1,['log'],['log']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GATK Haplotype caller. ### Affected version(s); - [x] Latest public release version [4.1.0.0]; - [ ] Latest master branch as of [date of test?]. The Genome Analysis Toolkit (GATK) v4.1.0.0; HTSJDK Version: 2.18.2; Picard Version: 2.18.25. ### Description ; HaplotypeCaller is outputting variants which have a no-call as the ALT, which breaks a bunch of downstream tools, this is new behavior in 4.1, AFAICT. ```; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	s1564	s1741	s1851	s1852	s1862	s1901	s1912	s1971	s2017	s2021	s2026	s2056	s2100	s2102	s2104	s2122	s2124	s2151	s2157; 1	937796	.	T	.	179.65	.	AN=38;DP=31;MMQ=60;MQ=60.00	GT:AD:DP	0/0:0:0	0/0:0:0	0/0:4:4	0/0:0:0	0/0:1:1	0/0:1:1	0/0:0:0	0/0:0:0	0/0:2:2	0/0:0:0	0/0:1:1	0/0:3:3	0/0:1:1	0/0:8:8	0/0:1:1	0/0:0:0	0/0:2:2	0/0:7:7	0/0:0:0; ```. #### Steps to reproduce; I'm not doing anything special, so I suspect these variants should exist in other projects as well. I'm doing batch calling on several samples simultaneously; an example:. ```; unset JAVA_HOME && export PATH=/home/rdk4/local/share/bcbio/anaconda/bin:$PATH && gatk --java-options '-Xms4g -Xmx5000m -XX:+UseSerialGC -Djava.io.tmpdir=/n/data1/cores/bcbio/PIs/rudy_tanzi/tau-exome/tau-variants/work/bcbiotx/tmpTSg0hJ' HaplotypeCaller -R /n/app/bcbio/dev/genomes/Hsapiens/GRCh37/seq/GRCh37.fa --annotation MappingQualityRankSumTest --annotation MappingQualityZero --annotation QualByDepth --annotation ReadPosRankSumTest --annotation RMSMappingQuality --annotation BaseQualityRankSumTest --annotation FisherStrand --annotation MappingQuality --annotation DepthPerAlleleBySample --annotation Coverage -I /n/data1/cores/bcbio/PIs/rudy_tanzi/tau-exome/tau-variants/work/align/s2017/s2017-sort.bam -I /n/data1/cores/bcbio/PIs/rudy_tanzi/tau-exome/tau-variants/work/align/s2056/s2056-sort.bam -I /n/data1/cores/bcbio/PIs/rudy_tanzi/tau-exome/tau-variants/work/align/s2122/s2122-sort.bam -I /n/data1/cores/bcbio/PIs/rudy_tanzi/tau-exome/tau-var",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5650:187,test,test,187,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5650,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GATK v4.1.4.0 using FilterMutectCalls. ### Affected version(s); - [x] Latest public release version `4.1.4.0` installed from conda release `gatk4-4.1.4.0-1`; - [ ] Latest master branch as of [date of test?]. ### Description ; This issue reports the same error that is reported in #6237, but on the latest release, and in a mitochondrial calling setting. My command is:; ```bash; gatk FilterMutectCalls -V MT.vcf.gz\; -R human_g1k_v37.main.fasta\; -O MT.filtered.vcf.gz\; --stats MT.vcf.gz.stats\; --mitochondria-mode; ```. I get the following output to STDERR:; ```; 11:15:57.152 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/warkre/miniconda3/envs/gatk4.1.4.0/share/gatk4-4.1.4.0-1/gatk-package-4.1.4.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Nov 07, 2019 11:15:57 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 11:15:57.328 INFO FilterMutectCalls - ------------------------------------------------------------; 11:15:57.328 INFO FilterMutectCalls - The Genome Analysis Toolkit (GATK) v4.1.4.0; 11:15:57.328 INFO FilterMutectCalls - For support and documentation go to https://software.broadinstitute.org/gatk/; 11:15:57.328 INFO FilterMutectCalls - Executing as warkre@fuji on Linux v4.9.0-9-amd64 amd64; 11:15:57.328 INFO FilterMutectCalls - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_192-b01; 11:15:57.329 INFO FilterMutectCalls - Start Date/Time: November 7, 2019 11:15:57 AM CET; 11:15:57.329 INFO FilterMutectCalls - ------------------------------------------------------------; 11:15:57.329 INFO FilterMutectCalls - ------------------------------------------------------------; 11:15:57.329 INFO FilterMutectCalls - HTSJDK Version: 2.20.3; 11:15:57.329 INFO FilterMutectCalls - Picard Version: 2.21.1; 11:15:57.329 INFO FilterMutectCalls - HTSJDK Defaults.COMPRESSION_LEVEL : ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6255:250,test,test,250,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6255,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GATK version: 4.1.1.0-VariantRecalibrator-ApplyVQSR. ### Affected version(s); - [ ] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; I am doing VQSR with gatk-VariantRecalibrator-ApplyVQSR, and i got some mistakes in the log file， and i dont konw what was wrong with my script,. #### Steps to reproduce; Below are my complete scripts:; java -Xmx3990m -Djava.io.tmpdir=/gss1/home/ldl20190322/a_haoxiaoshuai/JavaTmpDir -jar /gss1/home/ldl20190322/a_haoxiaoshuai/z_software/gatk/gatk-4.1.1.0/gatk-package-4.1.1.0-local.jar VariantRecalibrator -R Gmax_275_v2.0.fa --variant Ztem.gatk.vcf.gz --resource:hapmap,known=false,training=true,truth=true,prior=10.0 final.intersected.snp.vcf.gz -an QD -an MQ -an MQRankSum -an ReadPosRankSum -an FS -an SOR -an DP -mode SNP -O Ztem.gatk.snp.recal --tranches-file Ztem.gatk.snp.tranches --rscript-file Ztem.gatk.snp.plots.R -tranche 90.0 -tranche 92.0 -tranche 94.0 -tranche 96.0 -tranche 97.0 -tranche 98.0 -tranche 99.0 -tranche 99.9; java -Xmx3990m -Djava.io.tmpdir=/gss1/home/ldl20190322/a_haoxiaoshuai/JavaTmpDir -jar /gss1/home/ldl20190322/a_haoxiaoshuai/z_software/gatk/gatk-4.1.1.0/gatk-package-4.1.1.0-local.jar ApplyVQSR -R Gmax_275_v2.0.fa -V Ztem.gatk.vcf.gz --truth-sensitivity-filter-level 99.0 --tranches-file Ztem.gatk.snp.tranches --recal-file Ztem.gatk.snp.recal -mode SNP -O Ztem.gatk.snp.vcf.gz. #### Expected behavior; _Tell us what should happen_. #### Actual behavior; Below is the message of the mistakes and i just omitted some no use information in the log file:; .; .; .; 15:51:14.040 INFO VariantRecalibratorEngine - Evaluating full set of 3660 variants...; 15:51:15.156 INFO VariantRecalibratorEngine - Evaluating full set of 3660 variants...; 15:51:15.373 INFO VariantRecalibrator - Building FS x ReadPosRankSum plot...; 15:51:15.374 INFO VariantRecalibratorEngine - Evaluating full set of 3660 variants...; 15:51:16.493 INF",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6948:218,test,test,218,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6948,2,"['log', 'test']","['log', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); GATKProtectedVariantContextUtils.chooseAlleleForRead(...). ### Affected version(s); Latest master branch as of [July 27, 2018]. ### Description ; This method has no facility for recognizing equivalent alleles in a read. For example:. Let's say we have a pileup with a single base insertion (of 'T') after an 'A' in a poly-T.; In IGV, the reads will all show the insertion right after the A.; However, if the caller said ref alt was AT --> ATT, then `chooseAlleleForRead` will miss the supporting alts in the validation normal, since it needed A --> AT. However, AT-->ATT and A --> AT are equivalent. See ValidateBasicSomaticShortMutationsIntegrationTest line ~151 for the corresponding TODO and a test case. #### Steps to reproduce; Leverage the existing test (`ValidateBasicSomaticShortMutationsIntegrationTest`) and change the gtNumAltReadsInValidationNormal to 1, instead of zero. #### Expected behavior; The test should pass. #### Actual behavior; The test will fail expecting zero.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5061:747,test,test,747,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5061,4,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GenomicsDBImport . ### Affected version(s); - [ ] Latest public release version [version?]; - [x] Latest master branch as of Apr 4, 2022. ### Description ; [E::faidx_adjust_position] The sequence ""chrX"" was not found; [E::faidx_adjust_position] The sequence ""chrX"" was not found; [E::faidx_adjust_position] The sequence ""chrX"" was not found; [E::faidx_adjust_position] The sequence ""chrX"" was not found. #### Steps to reproduce; Run the first test case for GnarlyGenotyperIntergrationTest::testUsingGenomicsDB() on the branch https://github.com/broadinstitute/gatk/pull/7750. The test contains the argument `--intervals chrX:1000000-5000000`, but I'm not sure why that would be an issue. The tool runs fine and the output is valid. #### Expected behavior; An informative warning or a single output of the existing warning. #### Actual behavior; Excessive logging",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7751:493,test,test,493,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7751,4,"['log', 'test']","['logging', 'test', 'testUsingGenomicsDB']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); GenomicsDBImport. ### Affected version(s); - [ ] Latest public release version [4.2.5.0]. ### Description ; My gVCF files are block compressed and indexed, but the files have the file extension "".gvcf.gz"" rather than "".vcf.gz"". When I run `GenomicsDBImport` with `--bypass-feature-reader`, the "".gvcf.gz"" file cannot be recognized as a block compressed vcf file. The code of `GenomicsDBImport` validates if input is block compressed by checking if the file extension is "".vcf.gz"". ```; private static void assertVariantFileIsCompressedAndIndexed(final Path path) {; if (!path.toString().toLowerCase().endsWith(FileExtensions.COMPRESSED_VCF)) {; throw new UserException(""Input variant files must be block compressed vcfs when using "" +; BYPASS_FEATURE_READER + "", but "" + path.toString() + "" does not appear to be"");; }; Path indexPath = path.resolveSibling(path.getFileName() + FileExtensions.COMPRESSED_VCF_INDEX);; IOUtils.assertFileIsReadable(indexPath);; }; ```. I understand that this is an issue on my side because I did not name my gVCF files with the standard extension "".vcf.gz"". Is it possible to make this check less stringent in a future release? Maybe make any "".gz""/"".bgz"" file acceptable, or check the "".tbi"" index file to identify block compression (existing index typically means the file is block compressed and indexed). . Thank you. . ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7691:556,assert,assertVariantFileIsCompressedAndIndexed,556,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7691,2,['assert'],"['assertFileIsReadable', 'assertVariantFileIsCompressedAndIndexed']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); GenomicsDBImport. ### Affected version(s); - [ ] Public release version 4.1.4.1 . ### Description ; Running GenomicsDBImport on an HPC cluster using SLURM, admin mentioned that the jobs are writing inefficiently to shared storage (@spikebike will follow up with HPC specifics and logs). . #### Steps to reproduce; ```; Using GATK jar /share/apps/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx60g -Xms60g -jar /share/apps/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar GenomicsDBImport --genomicsdb-workspace-path data/interim/combined_database_bpres/0004 --batch-size 50 --reader-threads 6 --sample-name-map data/processed/sample_map --intervals data/processed/scattered_intervals/0004-scattered.intervals --tmp-dir /scratch/sdturner/genomicsdbimport/0004; ```. #### Expected behavior; My understanding is that it may be more efficient to use a small buffer and write the final database in full. . #### Actual behavior; Again my (limited) understanding is that the tool is writing output multiple times and throwing out all but the last write. Here is an example of a log for a 2.6 Mb region and 295 samples: ; ; ```; 07:24:39.198 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/apps/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 28, 2020 7:24:39 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 07:24:39.616 INFO GenomicsDBImport - ------------------------------------------------------------; 07:24:39.617 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.1.4.1; 07:24:39.617 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/ga",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6487:330,log,logs,330,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6487,1,['log'],['logs']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GenotypeGVCFs 4.0.0.12. ### Affected version(s); - [ ] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; I've run into a weird case where GenotypeGVCFs is doing something unexpected. I have a gVCF with the following entry in it:. ```; chr11 6637739 . ATTTTT A,AT,ATT,ATTT,ATTTT,ATTTTTT,<NON_REF> 565.73 . BaseQRankSum=-0.014;ClippingRankSum=0.508;DP=94;ExcessHet=3.0103;MLEAC=0,0,0,1,0,0,0;MLEAF=0,0,0,0.5,0,0,0;MQRankSum=0;RAW_MQandDP=338400,94;REF_BASES=GCCGGCCTGGATTTTTTTTTT;ReadPosRankSum=-0.812 GT:AD:DP:F1R2:F2R1:GQ:PL:SB 0/4:9,3,3,11,15,8,3,0:52:8,2,2,8,12,6,3,0:1,1,1,3,3,2,0,0:56:603,504,1526,335,1171,1118,56,661,640,608,0,362,313,183,335,336,500,389,187,171,527,655,864,622,277,169,466,1026,597,1101,953,645,465,625,861,1133:8,1,33,10; ```. It's a messy site for sure, an indel in a long homopolymer-T, but I think that's a separate issue. If I run the following on that gVCF:. ```; gatk GenotypeGVCFs \; -R hg19.fa -V test.g.vcf -O test.vcf \; -A ClippingRankSumTest -A Coverage -A ExcessHet -A FisherStrand \; -A MappingQualityRankSumTest -A OxoGReadCounts -A QualByDepth -A ReadPosRankSumTest \; -A ReferenceBases -A RMSMappingQuality -A StrandOddsRatio -A TandemRepeat \; -L chr11:6637730-6637750 \; -stand-call-conf 18.0 \; ```. then I get the following output to the VCF just like I'd expect:. ```; chr11 6637739 . ATT A 565.73 . AC=1;AF=0.500;AN=2;BaseQRankSum=-1.400e-02;ClippingRankSum=0.508;DP=94;ExcessHet=3.0103;FS=1.779;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.00;QD=23.57;REF_BASES=GCCGGCCTGGATTTTTTTTTT;RPA=15,13;RU=T;ReadPosRankSum=-8.120e-01;SOR=0.386;STR GT:AD:DP:F1R2:F2R1:GQ:PL 0/1:9,15:52:8,2,2,8,12,6,3,0:1,1,1,3,3,2,0,0:99:603,0,335; ```. QUAL is unchanged since I'm genotyping a single-sample gVCF. However, if I raise my `-stand-call-conf` threshold to 19.0, GenotypeGVCFs no longer outputs any variants. 565.73 >> 19.0, so I'm confused as to why that var",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5793:189,test,test,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5793,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GenotypeGVCFs with --keep-combined-raw-annotations. ### Affected version(s); - [x] Latest public release version [version?]; - [ ] Latest master branch as of (not tested). ### Description ; @ldgauthier was kind enough to introduce the `--keep-combined-raw-annotations` option for us after the discussion in issue #5698, and we've been using it extensively. We recently noticed a problem that affects a small fraction of variants though. We're noticing this with `AS_SB_TABLE` but it probably applies to all annotations that are per-allele or per-alt allele. The problem is that when GenotypeGVCFs runs it may chose to output only a subset of the alleles present in the gVCF. When it does this it does not appear to update the annotations to remove the values for the removed alleles. This results in annotations with more values than there are alleles, and no safe/predictable way to interpret those annotations since you don't know the original ordering of alleles and which ones were removed when looking at the resulting VCF. This is happening, in my case, primarily at homopolymer sites and occasionally at STRs with larger repeat units. I've attached a zip file - [AS_SB_TABLE_bug.zip](https://github.com/broadinstitute/gatk/files/3357101/AS_SB_TABLE_bug.zip) - which contains a one-record gVCF, the command to generate the VCF and the resulting VCF, which should be sufficient to demonstrate the problem and reproduce it. Here's what an offending variant looks like:. ```; chr1 100366446 . GTT G 562.64 . AC=1;AF=0.500;AN=2;AS_SB_TABLE=19,6|16,6|4,0|2,2|1,1;...;REF_BASES=ATGTTTTTTTGTTTTTTTTTT;RPA=13,11;RU=T;ReadPosRankSum=-1.296e+00;SOR=0.534;STR GT:AD:DP:F1R2:F2R1:GQ:PL 0/1:25,22:57:19,16:4,4:99:570,0,819; ```. #### Steps to reproduce; See attached zip file. #### Expected behavior; All per-allele and per-alt-allele annotations should be subsetted to only the values for the alleles that are output in the resulting VCF. #### Actual behavi",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6029:213,test,tested,213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6029,1,['test'],['tested']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GenotypeGVCFs. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description ; GenotypeGVCFs won't joint call DRAGEN mitochondrial data because of the DRAGEN somatic output format. We should be able to use the DRAGEN SQ in place of Mutect2's TLOD (see line 279 in GenotypeGVCFsEngine); Note that DRAGEN SQ is a Phred-scaled double. #### Steps to reproduce; DRAGEN somatic GVCF entries from version 3.8.4 look like:; chrM 1 . G <NON_REF> . weak_evidence END=1 GT:AD:DP:SQ:MIN_DP 0/0:112,1579:1691:0:1691. Run GenotypeGVCFs with -V to a file like that (reference GenotypeGVCFsIntegrationTest::testGenotypingForSomaticGVCFs() for more details); Must include `--input-is-somatic` as of now. #### Expected behavior; The task should run to completion, calculating a site quality store using the DRAGEN SQ value. #### Actual behavior; Error from AlleleFrequencyCalculator about not having PLs or GQ.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7840:180,test,test,180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7840,2,['test'],"['test', 'testGenotypingForSomaticGVCFs']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); GenotypeGVCFs. ### Affected version(s); GATK4.1.4.0. ### Description ; QUAL is 0 for hom_ref sites. We need detailed information for specific sites, whether or not those sites are mutated. But now these normal hom ref sites look like low qual sites. #### Steps to reproduce; gatk GenotypeGVCFs -R hg38.fa -V test.g.vcf.gz -O out.vcf -stand-call-conf 0 -all-sites -L chr1:14619-14643. #### Expected behavior; gatk-4.0.12.0; ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT AMCUGVCJTB; chr1 14619 . G . 70.23 . DP=15 GT:AD:DP:RGQ 0/0:15,0:15:42; chr1 14620 . C . 70.23 . DP=15 GT:AD:DP:RGQ 0/0:15,0:15:42; chr1 14621 . A . 76.23 . DP=16 GT:AD:DP:RGQ 0/0:16,0:16:48; chr1 14622 . G . 76.23 . DP=16 GT:AD:DP:RGQ 0/0:16,0:16:48; chr1 14623 . C . 76.23 . DP=16 GT:AD:DP:RGQ 0/0:16,0:16:48; chr1 14624 . T . 76.23 . DP=16 GT:AD:DP:RGQ 0/0:16,0:16:48; chr1 14625 . T . 76.23 . DP=16 GT:AD:DP:RGQ 0/0:16,0:16:48; chr1 14626 . G . 76.23 . DP=16 GT:AD:DP:RGQ 0/0:16,0:16:48; chr1 14627 . T . 76.23 . DP=16 GT:AD:DP:RGQ 0/0:16,0:16:48; chr1 14628 . C . 85.23 . DP=19 GT:AD:DP:RGQ 0/0:19,0:19:57; chr1 14629 . C . 85.23 . DP=19 GT:AD:DP:RGQ 0/0:19,0:19:57; chr1 14630 . T . 88.23 . DP=20 GT:AD:DP:RGQ 0/0:20,0:20:60; chr1 14631 . G . 88.23 . DP=20 GT:AD:DP:RGQ 0/0:20,0:20:60; chr1 14632 . G . 88.23 . DP=20 GT:AD:DP:RGQ 0/0:20,0:20:60; chr1 14633 . C . 85.23 . DP=20 GT:AD:DP:RGQ 0/0:20,0:20:57; chr1 14634 . T . 85.23 . DP=20 GT:AD:DP:RGQ 0/0:20,0:20:57; chr1 14635 . G . 85.23 . DP=20 GT:AD:DP:RGQ 0/0:20,0:20:57; chr1 14636 . T . 88.23 . DP=21 GT:AD:DP:RGQ 0/0:21,0:21:60; chr1 14637 . G . 88.23 . DP=21 GT:AD:DP:RGQ 0/0:21,0:21:60; chr1 14638 . T . 88.23 . DP=21 GT:AD:DP:RGQ 0/0:21,0:21:60; chr1 14639 . C . 88.23 . DP=21 GT:AD:DP:RGQ 0/0:21,0:21:60; chr1 14640 . C . 88.23 . DP=21 GT:AD:DP:RGQ 0/0:21,0:21:60; chr1 14641 . A . 88.23 . DP=21 GT:AD:DP:RGQ 0/0:21,0:21:60; chr1 14642 . T . 88.23 . DP=21 GT:AD:DP:RGQ 0/0:21,0:21:60; chr1 14643 . G . 100.23 .",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6309:358,test,test,358,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6309,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GermlineCNVCaller . ### Affected version(s); v4.0.4.0 and v4.0.11.0 tested with same result. ### Description ; ![screenshot 2018-11-02 14 50 17](https://user-images.githubusercontent.com/11543866/47934764-a8a71c80-deae-11e8-9f8f-c8a8b563d77a.png). ```; java.lang.IllegalArgumentException: Intervals for read-count file /home/shlee/gcnv/cvg/HG00096_chr20XY.hdf5 do not contain all specified intervals.; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:724); at org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller.writeIntervalSubsetReadCountFiles(GermlineCNVCaller.java:390); at org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller.doWork(GermlineCNVCaller.java:285); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. Command runs fine sans `-XL` parameter. The contents of `-XL` are simply:. ![screenshot 2018-11-02 14 51 58](https://user-images.githubusercontent.com/11543866/47934827-e0ae5f80-deae-11e8-891e-473ec8420433.png). #### Expected behavior; It would be great to be able to iterate GermlineCNVCaller on coverage data while excluding various regions, e.g. centromeric regions, to test the impact of such regions on the denoising. Currently, the hypothetical workaround would be to collect coverage while excluding regions or to manually remove such intervals from the coverage data. Having to collect coverage once over all of the data is preferable to collecting coverage again and again over slightly variable regions.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5388:118,test,tested,118,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388,2,['test'],"['test', 'tested']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); GermlineCNVCaller. ### Affected version(s); - [x] Latest public release version [4.5.0.0]; - [x] Latest master branch as of [14.12.2023]. ### Description ; Very different results after update from 4.4.0.0 to 4.5.0.0. We updated test results after https://github.com/broadinstitute/gatk/issues/8619, but now we see big changes (especially in `segments` file). #### Steps to reproduce; Command list:; ```; /soft/gatk-4.5.0.0/gatk PreprocessIntervals -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa --padding 0 -L chr1:10000-35000 -L chr22:198477-20003000 -imr OVERLAPPING_ONLY -O /outputs/gatk_intervals.interval_list. /soft/gatk-4.5.0.0/gatk AnnotateIntervals -L /outputs/gatk_intervals.interval_list -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa -imr OVERLAPPING_ONLY -O /outputs/gatk_intervals.interval_list.annotated.tsv. /soft/gatk-4.5.0.0/gatk CollectReadCounts -I /inputs/E07002_normal_alignment.bam -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY -O /outputs/E07002_normal_alignment.bam.counts.hdf5; /soft/gatk-4.5.0.0/gatk CollectReadCounts -I /inputs/E07002_tumor_alignment.bam -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY -O /outputs/E07002_tumor_alignment.bam.counts.hdf5. /soft/gatk-4.5.0.0/gatk DetermineGermlineContigPloidy -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY --contig-ploidy-priors /outputs/a_valid_ploidy_priors_table.tsv.copy.tsv --output /outputs/COHORT_runDir --output-prefix COHORT --input /outputs/E07002_normal_alignment.bam.counts.hdf5 --input /outputs/E07002_tumor_alignment.bam.counts.hdf5. /soft/gatk-4.5.0.0/gatk GermlineCNVCaller --run-mode COHORT -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY --annotated-intervals /outputs/gatk_intervals.interval_list.annotated.tsv --contig-ploidy-calls /outputs/COHORT_run",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8628:278,test,test,278,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8628,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); GnarlyGenotyper. ### Affected version(s); - [ ] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]; - [x] 4.2.3 - snapshot -> https://console.cloud.google.com/gcr/images/broad-dsde-methods/US/gatk_subset_dragen_allele_frac@sha256:f5e93bda2278f1c999bd9def027c6851eeb098736b47a93469c524863b46c21f/details. ### Description ; WDL joint genotyping using GnarlyGenotyper after ReblockGVCF (fixed on the snapshot above). #### Steps to reproduce; Joint Genotyper wdl pipeline with ""GatkJointGenotyping.useGnarlyGenotyper"": true , **samples from DRAGEN 3.8+**. #### Expected behavior; Complete the pipeline. #### Actual behavior; Failing with diploid error on Sexual Chromosomes. Hello again everyone.; First of all, thank you @ldgauthier to send us that snapshot docker. It kind of solved reblock problem. As feedback here, I tried with the newest GATK version (4.2.5) as it modified ReblockGVCF, but it didn`t work.; Anyway, I have another issue here...; While I was using only one or few chromosomes, the pipeline with reblock + gnarly was working fine. Once I added all chromosomes I started to get this type of error (GnarlyGenotyper):. ```; A USER ERROR has occurred: Bad input: This tool assumes diploid genotypes, but sample NA18668 has ploidy 1 at position chrY:2789135. or. A USER ERROR has occurred: Bad input: This tool assumes diploid genotypes, but sample NA14734 has ploidy 1 at position chrX:36667858. ```; I checked every failed log, and it's all related to the sexual chromosomes. Any thought/tip about that? ; ps.: From chr1 to chr22 it worked fine!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7690:182,test,test,182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7690,2,"['log', 'test']","['log', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller --output-mode EMIT_ALL_SITES. ### Affected version(s); - [x] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; I'm trying to generate a VCF (not a gVCF) that contains calls spanning all the sites in my regions. Each region is small, and is more or less equivalent to a single variant. Ideally I'd use `GENOTYPE_GIVEN_ALLELES`, but I don't know the alleles, and in some cases the variant location is approximate (e.g. somewhere in _this_ 10bp window). I've been trying to use HaplotypeCaller to produce a VCF that contains calls covering my entire set of regions, but nothing seems to work. I started with just `--output-mode` and eventually ended up with:. ```; gatk HaplotypeCaller \; -R ref.fasta \; -L regions.interval_list \; --disable-optimizations \; --force-active \; --output-mode EMIT_ALL_SITES \; -I my.bam \; -O my.vcf.gz; ```. This does output considerably more records, including a lot of hom-ref records, but still nowhere near to the full set of bases within my regions. E.g. in one test this emits variants spanning 3,468bp which is way better than the ~120bp I get without those options, but nowhere near the 293,570bp with the regions I'm supplying. It would be great if `--output-mode EMIT_ALL_SITES` did as the documentation described, but if that's not possible, then perhaps that mode should simply be removed?. #### Steps to reproduce; Try calling a BAM file with HaplotypeCaller with a 100-1000bp region with `--output-mode EMIT_ALL_SITES`. #### Expected behavior; VCF should contain records spanning the entire input region. #### Actual behavior; VCF contains a minority of sites from the region.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6059:211,test,test,211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6059,2,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller . ### Affected version(s); - [x] Latest public release version [4.1.6.0]; - [ ] Latest master branch (not tested). ### Description ; I have a sample that has a slightly complicated event in it that is getting miscalled. The easiest way to see it is probably with an IGV screenshot:. ![variant](https://user-images.githubusercontent.com/1609210/78403555-c6077b00-75b9-11ea-96f3-8f9ca6c25e86.png). BWA aligns the reads with a 7bp deletion followed by 2 mismatches, though am inclined to think of it as a 9bp deletion coupled with a 2bp insertion (or a swap of 9bp of reference for 2bp of novel sequence). The original alignments are in the top half of the IGV view. The bottom is the assembly BAM from running the HaplotypeCaller. From what I see the assembly is getting it right. . But the problem is that the event extraction/genotyping goes wrong. I've run it two ways. If I run to generate a called VCF directly using:. ```; gatk HaplotypeCaller \; --input snippet.bam \; --output snippet.vcf \; -R hg19/hg19.fa \; --bam-output assembly.bam \; -L chr1:68896800-68896900 \; --ploidy 2 \; --min-pruning 2 \; --min-dangling-branch-length 2 \; --pcr-indel-model CONSERVATIVE ; ```. Then I get only a single variant reported in the region (the 9bp deletion):. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT test-sample; chr1 68896832 . CTTTAGTTTT C 1597.60 . AC=1;AF=0.500;AN=2;BaseQRankSum=0.000;DP=122;ExcessHet=3.0103;FS=0.000;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=14.52;ReadPosRankSum=1.341;SOR=0.350 GT:AD:DP:GQ:PL 0/1:67,43:110:99:1605,0,2683; ```. If i run to generate a gvcf then things get more interesting:. ```; gatk HaplotypeCaller \; --input snippet.bam \; --output snippet.g.vcf \; -R hg19/hg19.fa \; -ERC GVCF \; --bam-output assembly.bam \; -L chr1:68896800-68896900 \; --ploidy 2 \; --min-pruning 2 \; --min-dangling-branch-length 2 \; --pcr-indel-model CONSERVATIVE ; ```. yields:. ```; #CHROM POS ID REF A",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6538:172,test,tested,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6538,1,['test'],['tested']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller 4.1 with -ERC GVCF. ### Affected version(s); - [x] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; It would appear that variants covered by a spanning deletion are not output with phasing information even when surrounded by phased variants on either side. Since one of the alleles is covered by an upstream deletion phase is known, but the genotype itself is not phased and no phase set is attached. The following is a cut-down example from a gVCF:. ```; chr6 51618169 . GT G,<NON_REF> 948.60 . DP=94 GT:AD:DP:F1R2:F2R1:GQ:PGT:PID:PL:PS:SB 0|1:32,39,0:71:3,4,0:29,35,0:99:0|1:51618169_GT_G:956,0,808,1054,926,1980:51618169:3,29,4,35; chr6 51618170 . T *,G,<NON_REF> 776.01 . DP=92 GT:AD:DP:F1R2:F2R1:GQ:PL:SB 1/2:2,39,30,0:71:1,4,2,0:1,35,28,0:99:3533,786,723,1141,0,956,2837,916,1206,2757:1,1,6,63; chr6 51618171 . G <NON_REF> . . END=51618173 GT:DP:GQ:MIN_DP:PL 0/0:90:99:90:0,120,1800; chr6 51618174 . A G,<NON_REF> 1001.60 . DP=89 GT:AD:DP:F1R2:F2R1:GQ:PGT:PID:PL:PS:SB 0|1:33,41,0:74:3,4,0:30,37,0:99:0|1:51618169_GT_G:1009,0,803,1108,926,2034:51618169:3,30,4,37; ```. You can see that the SNP at 51618170 is flanked by phased variants at 51618169 and 51618174, but is output with unphased genotype and no `PS` (or `PID/PGT`). I'm not entirely sure if this is on purpose for some reason I don't understand, or simply an edge case in the phasing code that's handled incorrectly. #### Steps to reproduce; Run HC on reads with three variants, starting with a deletion, a variant spanned by the deletion and a variant just beyond the deletion. FWIW I've requested permission to share an example case from real data and am awaiting an answer. #### Expected behavior; I think the spanned variant should be output with phasing information, e.g. in the above case I would expect (abbreviated):. ```; chr6 51618169 . GT G,<NON_REF> ... GT:DP:PS 0|1:71:51618169; chr6 51618170 .",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5651:201,test,test,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5651,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller 4.1.1.0. ### Affected version(s); - [x] Latest public release version; - [x] Latest master branch as of 3/31/2019. ### Description ; It looks like PR #5840 did a lot of refactoring to the way F1R2/F2R1 annotations are computed. Along the way it looks like `OxoGReadCounts` was renamed to `OrientationBiasReadCounts`. This is, unfortunately for some, a non-backwards compatible change as any pipeline that uses `-A OxoGReadCounts` will now fail. I'm not sure if there's a deprecation mechanism for annotations that would inform users of this, and I'm not sure there's a whole lot to be done at this point. I'm logging this issue mainly so anyone else who runs into this will find the answer quickly. Might be nice to add a line to the 4.1.1.0 release notes though noting this change.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5848:675,log,logging,675,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5848,1,['log'],['logging']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller GVCF mode. ### Affected version(s); GATK 4.1.8.0 . ### Description ; Discussed on the GATK forum: https://gatk.broadinstitute.org/hc/en-us/community/posts/360072760032-HaplotypeCaller-NullPointerException-Error. Command: ; `gatk --java-options ""-Xmx4g"" HaplotypeCaller -R hg19.fa.gz -I test.bam -O test.g.vcf.gz -ERC GVCF`. #### Stack Trace. ```; 17:08:11.229 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/zepengmu/tools/gatk-4.1.8.0/gatk-package-4.1.8.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Aug 27, 2020 5:08:12 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 17:08:12.021 INFO HaplotypeCaller - ------------------------------------------------------------; 17:08:12.028 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.1.8.0; 17:08:12.028 INFO HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/; 17:08:12.038 INFO HaplotypeCaller - Executing as zepengmu@midway2-0243.rcc.local on Linux v3.10.0-1127.8.2.el7.x86_64 amd64; 17:08:12.038 INFO HaplotypeCaller - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14; 17:08:12.039 INFO HaplotypeCaller - Start Date/Time: August 27, 2020 5:08:11 PM CDT; 17:08:12.039 INFO HaplotypeCaller - ------------------------------------------------------------; 17:08:12.039 INFO HaplotypeCaller - ------------------------------------------------------------; 17:08:12.039 INFO HaplotypeCaller - HTSJDK Version: 2.22.0; 17:08:12.039 INFO HaplotypeCaller - Picard Version: 2.22.8; 17:08:12.039 INFO HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 17:08:12.040 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 17:08:12.040 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 17:08:12.040 INFO HaplotypeCal",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6783:352,test,test,352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6783,2,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller `--annotation OrientationBiasReadCounts`. ### Affected version(s); - [ ] Latest public release version [4.3.0.0]; - [ ] 4.2.2.0. ### Description; When specifying OrientationBiasReadCounts, HaplotypeCaller adds the description of F1R2 and F2R1 to the header, but does not calculate them. This was observed in GATK 4.2.2.0 and also in a test with 4.3.0.0 (the latest at the moment of this issue).; ```; ##fileformat=VCFv4.2; ##FILTER=<ID=LowQual,Description=""Low quality"">; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths for the ref and alt alleles in the order listed"">; ##FORMAT=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth (reads with MQ=255 or with bad mates are filtered)"">; ##FORMAT=<ID=F1R2,Number=R,Type=Integer,Description=""Count of reads in F1R2 pair orientation supporting each allele"">; ##FORMAT=<ID=F2R1,Number=R,Type=Integer,Description=""Count of reads in F2R1 pair orientation supporting each allele"">; ##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=""Genotype Quality"">; ```. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT sample; 13 32911888 . A G 177.64 . AC=1;AF=0.500;AN=2;BaseQRankSum=0.086;DP=21;ExcessHet=3.0103;FS=1.719;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=8.46;ReadPosRankSum=0.475;SOR=0.368 GT:AD:DP:GQ:PL 0/1:13,8:21:99:185,0,339; 13 32913055 . A G 402.06 . AC=2;AF=1.00;AN=2;DP=15;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=26.80;SOR=1.112 GT:AD:DP:GQ:PL 1/1:0,15:15:45:416,45,0; 13 32915005 . G C 378.06 . AC=2;AF=1.00;AN=2;DP=13;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=29.08;SOR=1.179 GT:AD:DP:GQ:PL 1/1:0,13:13:39:392,39,0; 13 32929232 . A G 168.64 . AC=1;AF=0.500;AN=2;BaseQRankSum=1.335;DP=16;ExcessHet=3.0103;FS=0.000;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=15.33;ReadPosRankSum=-1.442;SOR=0.446 GT:AD:DP:GQ:PL 0/1:5,6:11:99:176,0,121; 13 32929387 . T C 209.02 . AC=2;AF=1.00;AN=2;DP=7;ExcessHet=3.0103;FS=0.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8149:401,test,test,401,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8149,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller when emitting physical phasing. ### Affected version(s); - [x] Latest public release version [4.1.4.1]; - [ ] Latest master branch as of [n/a]. ### Description ; When there are three SNPs in close proximity with the first having a homozygous-alt genotype and the other two being hets that are in trans, the GATK incorrectly outputs genotypes and phasing indicating they are in cis. I haven't tested more broadly (e.g. with > 3 variants or with indels etc.) but my suspicion is that it is to do with the first variant in the phase set being homozygous. This was seen happening on real data from a real sample, but I have also been able to reproduce this with synthetic test data that I can attach here. #### Steps to reproduce; I've attached [phasing.zip](https://github.com/broadinstitute/gatk/files/4237216/phasing.zip) to this issue. It contains a BAM file of synthetic data where I've introduced two variant haplotypes at 50 locations each separated by about 1000 bases. My goal in doing this was just to have a number of different sequence contexts and variant alleles in case that affected anything. It also contains the resulting VCF from running this GATK command using 4.1.4.1:. ```; gatk HaplotypeCaller -I phasing.bam -O phasing.g.vcf -ERC GVCF \; -R hg19.fasta -L chr2:179390700-179672150; ```. While the BAM clearly shows the two hets as in trans with one another:; ![hom_with_in_trans_hets](https://user-images.githubusercontent.com/1609210/75055826-edcfd300-5492-11ea-8bb7-b3c492140797.png). The resulting variant calls are given as in-cis:. ```; chr2 179393825 . C A,<NON_REF> 2686.03 . DP=60;ExcessHet=3.0103;MLEAC=2,0;MLEAF=1.00,0.00;RAW_MQandDP=216000,60 GT:AD:DP:GQ:PGT:PID:PL:PS:SB 1|1:0,60,0:60:99:0|1:179393825_C_A:2700,181,0,2700,181,2700:179393825:0,0,60,0; chr2 179393826 . T <NON_REF> . . END=179393826 GT:DP:GQ:MIN_DP:PL 0/0:60:99:60:0,120,1800; chr2 179393827 . T G,<NON_REF> 1386.60 . BaseQRankSum=0.000;DP",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6463:458,test,tested,458,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6463,2,['test'],"['test', 'tested']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller with `--max-mnp-distance` filter. ### Affected version(s); - [x] Latest public release version [4.1.0.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; I think there's a problem with the StrandOddsRatio (SOR) annotation and the `--map-mnp-distance` flag. I'm looking at a small region of NA24143 (one of the GIAB samples). There's a pair of SNPs in very close proximity. When called without the MNP output I get a pair of variants as follows (some info removed for clarity), coordinates are HG19:. ```; chr4 5743509 . C T 5903.03 . FS=0.000;QD=25.36;SOR=9.825 GT:AD:DP:GQ:PL 1/1:0,135:135:99:5917,406,0; chr4 5743512 . T C 2766.60 . FS=0.000;QD=21.12;SOR=0.983 GT:AD:DP:GQ:PL 0/1:57,74:131:99:2774,0,2060; ```. I'm trying to get permission to share the BAM over this region, but the key information is that every single read that spans or is in proximity to these variants is on the R strand. There is zero F strand coverage. This seems reasonable. It's a bit odd to me that the first SNP which is hom-var has a SOR value of 9.825, but it's homozygous so it's more or less irrelevant. Looking at the code, I think the problem here is that the code avoids divide-by-zero errors by adding pseudo-counts of `1.0` to the table, which for homozygous variants with no coverage on one strand creates a weird situation. I think it would be better to just detect if _all_ coverage is on one strand and short-circuit the calculation, but I digress. The real problem comes when running with `--max-mnp-distance 5`. Then I get this single variant:. ```; chr4 5743509 . CTAT TTAC,TTAT 5506.10 . FS=0.000;QD=25.36;SOR=9.750 GT:AD:DP:GQ:PL 1/2:0,74,56:130:99:5523,2213,2060,3016,0,2774; ```. Now I have a het variant with an SOR of 9.75. This seems really wrong to me - note how FS is 0.0. Again all coverage of all alleles is on one strand. And the het SNP that forms part of this MNP had an SOR of 0.983 when called independen",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5698:214,test,test,214,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5698,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller. ### Affected version(s); - [?] Latest public release version [version?]; - [x] Latest master branch as of Sept 10, 2019. ### Description ; Contamination estimate doesn't appear to be taken into account for reference blocks in GVCFs. #### Steps to reproduce; I'm looking at expected integration test results with uncontaminated (src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.CEUTrio.HiSeq.WGS.b37.NA12878.calls.20.10100000-10150000.vcf) vs. 15% contaminated (src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.CEUTrio.HiSeq.WGS.b37.NA12878.CONTAMINATED.WITH.HCC1143.NORMALS.15PCT.20.10100000-10150000.postIndelRefConfUpdate.g.vcf). #### Expected behavior; Contaminated calls should have lower depth because the reads are being downsampled (in a biased way) by the contamination fraction. #### Actual behavior; In the expected HC integration test results I'm seeing for 0 contamination; 20 10132770 . A <NON_REF> . . END=10132770 GT:DP:GQ:MIN_DP:PL 0/0:57:99:57:0,120,1800. For 15% contamination:; 20 10132770 . A <NON_REF> . . END=10132770 GT:DP:GQ:MIN_DP:PL 0/0:56:99:56:0,120,1800. The pileup has 55 (I'm not going down the rabbit hole of the bonus reads), so I would expect the contaminated GVCF to have < 55 DP. The variants look good in some places and less good in others. Looking through the code, I don't see anywhere the contamination estimate would be used for reference confidence. I suspect @davidbenjamin has been harboring a desire to update the contamination model anyway.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6152:361,test,test,361,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6152,4,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller. ### Affected version(s); - [x] Latest public release version [4.1.8.1]; - [ ] Latest master branch as of [date of test?]. ### Description ; I have a sample with a complex variant that could be modeled either as a 1bp deletion followed by a 2bp MNP, or more likely as a 3bp deletion followed by a 2bp insertion (or, if you will, the replacement of three reference bases with two other bases). The changes are clearly visible in the following screenshot. The top track is the aligned/deduped BAM, and the bottom track is the assembly BAM generated by HaplotypeCaller:. ![missing-insertion igv-screenshot](https://user-images.githubusercontent.com/1609210/93133361-516e5780-f694-11ea-9b7d-7aa71f5623cc.png). When I call this region to generate a gVCF I get some fairly strange output despite HC clearly reconstructing the haplotype correctly (some annotations removed for readability):. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT test-sample; chr13 32953865 . T <NON_REF> . . END=32953884 GT:DP:GQ:MIN_DP:PL 0/0:204:99:196:0,120,1800; chr13 32953885 . AGTT A,<NON_REF> 3110.60 . DP=213;MLEAC=1,0;MLEAF=0.500,0.00 GT:AD:DP:GQ:PL:SB 0/1:108,82,0:1; chr13 32953888 . T *,TAA,<NON_REF> 585.02 . DP=205;MLEAC=0,0,2;MLEAF=NaN,NaN,1.00;RAW_MQandDP=738000,205 GT:GQ:PL ./.:99:0,0,0,0,0,0,0,0,0,0; chr13 32953889 . A <NON_REF> . . END=32953905 GT:DP:GQ:MIN_DP:PL 0/0:211:99:205:0,120,1800; ```. When this is genotyped by `GenotypeGVCFs` the only resulting variant is the 3bp deletion:. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT test-sample; chr13 32953885 . AGTT A 3110.60 . AC=1;AF=0.500;AN=2;BaseQRankSum=0.00;DP=213;ExcessHet=3.0103;FS=2.544;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.00;QD=16.37;ReadPosRankSum=-4.360e-01;SOR=0.506 GT:AD:DP:GQ:PL 0/1:108,82:190:99:3118,0,4288; ```. I've tried this with GATK 4.1.4.1, and also 4.1.7.0 and 4.1.8.1 and they all have the same issue (output above is from 4.1.8.1). I've also tried",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6817:181,test,test,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6817,2,['test'],"['test', 'test-sample']"
Testability,## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller. ### Affected version(s); - [x] Latest public release version [4.2.0.0]. ### Description ; HaplotypeCaller fails with the following java error:. ```*** Error in `java': munmap_chunk(): invalid pointer: 0x00007f1da5980f00 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x7f3e4)[0x7f1daaec73e4]; /var/tmp/rwilton/libgkl_smithwaterman14257239252565866950.so(_Z21runSWOnePairBT_avx512iiiiPhS_iiaPcPs+0x338)[0x7f05b3b50f48]; /var/tmp/rwilton/libgkl_smithwaterman14257239252565866950.so(Java_com_intel_gkl_smithwaterman_IntelSmithWaterman_alignNative+0xd8)```. #### Steps to reproduce; Using properly-aligned paired-end reads from GIAB reference sample HG002 (NA24385) with GRCh38.p12. Please see the attached log file for parameterization and stderr log:; [vcall.swbug.log](https://github.com/broadinstitute/gatk/files/6275740/vcall.swbug.log). #### Expected behavior; No error. #### Actual behavior; See above and attached log file. Thank you in advance for having a look at this!. Richard Wilton; Johns Hopkins University,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7187:776,log,log,776,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7187,5,['log'],['log']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller. ### Affected version(s); gatk-package-4.1.9.0-33-g31df35b-SNAPSHOT-local.jar. ### Description . When run on the 30x 1000 genomes samples, I am getting this error. Not an issue on other crams we have. ```; /restricted/projectnb/genpro/github/gatk/gatk HaplotypeCaller -L chr22 -R /restricted/projectnb/casa/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa -I cram/HG00096.final.cram -O test.g.vcf.gz; Using GATK jar /rprojectnb2/genpro/github/gatk/build/libs/gatk-package-4.1.9.0-33-g31df35b-SNAPSHOT-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /rprojectnb2/genpro/github/gatk/build/libs/gatk-package-4.1.9.0-33-g31df35b-SNAPSHOT-local.jar HaplotypeCaller -L chr22 -R /restricted/projectnb/casa/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa -I cram/HG00096.final.cram -O test.g.vcf.gz; 14:39:56.283 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/rprojectnb2/genpro/github/gatk/build/libs/gatk-package-4.1.9.0-33-g31df35b-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 10, 2021 2:39:56 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 14:39:56.484 INFO HaplotypeCaller - ------------------------------------------------------------; 14:39:56.484 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.1.9.0-33-g31df35b-SNAPSHOT; 14:39:56.484 INFO HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:39:56.485 INFO HaplotypeCaller - Executing as farrell@scc-hadoop.bu.edu on Linux v3.10.0-1160.6.1.el7.x86_64 amd64; 14:39:56.485 INFO HaplotypeCaller - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_121-b13; 14:39:56.485 INFO HaplotypeCaller - Start Date/Time: February 10",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7076:450,test,test,450,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7076,2,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller/ActiveProfile. ### Affected version(s); - [ ] Latest public release version [4.3.0.0]. ### Description ; In function findEndOfRegion (line 355 in src/main/java/org/broadinstitute/hellbender/utils/activityprofile/ActivityProfile.java), it tries to determine the end of an active region. . The problem happens here, (at line 356); ![activeregion](https://user-images.githubusercontent.com/34263164/205565469-84900a73-1180-48e1-ba9f-f96c23d91e11.PNG); There could be an edge case where stateList.size() = maxRegionSize + getMaxProbPropagationDistance(), the function processes forward for further calculation. Hence the end of active region is determined immediately. However, the end of region is determined earlier than we expected. If by coincidence location at maxRegionSize is determined as minimum, region end is determined here. IBut wait a sec... If location at maxRegionSize+50 (which is NOT involved in current code in the ""if"" judgement at line 356) has an active score larger than 0, it rises the probability value at location maxRegionSize. . Now you should understand what I said. The state of location at maxRegionSize+50 is not updated when you accessed it. Let's assume ; maxRegionSize = 300 and point at location 350 has active value > 0. We trasverse the region to find the minimum point where we could cut the region and we found location at 300 in current logic. However, location 350 can acturally increase the probability at point 300 but this is not considered (or not updated) when making region end decision. #### Expected behavior; Simply use less or equal to at line 356 in the above image would fix this problem.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8118:1440,log,logic,1440,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8118,1,['log'],['logic']
Testability,"## Bug Report. ### Affected tool(s) or class(es); JointGermlineCNVSegmentation. ### Affected version(s); - [x] Latest public release version [v4.3.0.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; I get the following exception when running JointGermlineCNVSegmentation on an exome trio dataset:. ```; [January 19, 2023 at 6:59:29 AM CET] org.broadinstitute.hellbender.tools.walkers.sv.JointGermlineCNVSegmentation done. Elapsed time: 0.82 minutes.; Runtime.totalMemory()=300941312; java.lang.IllegalStateException: Encountered genotype with ploidy 0 but 1 alleles.; at org.broadinstitute.hellbender.utils.Utils.validate(Utils.java:814); at org.broadinstitute.hellbender.tools.walkers.sv.JointGermlineCNVSegmentation.correctGenotypePloidy(JointGermlineCNVSegmentation.java:701); at org.broadinstitute.hellbender.tools.walkers.sv.JointGermlineCNVSegmentation.prepareGenotype(JointGermlineCNVSegmentation.java:682); at org.broadinstitute.hellbender.tools.walkers.sv.JointGermlineCNVSegmentation.lambda$createDepthOnlyFromGCNVWithOriginalGenotypes$4(JointGermlineCNVSegmentation.java:666); at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195); at java.base/java.util.ArrayList$Itr.forEachRemaining(ArrayList.java:1033); at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484); at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474); at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913); at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578); at org.broadinstitute.hellbender.tools.walkers.sv.JointGermlineCNVSegmentation.createDepthOnlyFromGCNVWithOriginalGenotypes(JointGermlineCNVSegmentation.java:667); at org.broadinstitute.hellbender",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8164:195,test,test,195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8164,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); LeftAlignAndTrimVariants --split-multi-allelics. ### Affected version(s); Tested on versions 4.1.8.0, 4.1.9.0 and 4.2.0.0. ### Description ; GATK LeftAlignAndTrimVariants with option --split-multi-allelics crashes on multiallelic records on the versions tested. This does not occur with version 4.1.4.1 where the program manages to process and output the entire VCF. Upon further testing, it seems that the FORMAT field AF causes the problem as removing it from the following test record solves the problem:. ```; chr1	10027	.	A	C,G	.	PASS	.	GT:AD:AF:DP	1/2:0,5,5:0.500,0.500:10; ```. vs. ```; chr1	10027	.	A	C,G	.	PASS	.	GT:AD:DP	1/2:0,5,5:10; ```. The output for GATK 4.1.4.1 or when the AF field is removed looks like this:; ```; chr1	10027	.	A	C	.	PASS	.	GT:AD:DP	./.:0,5:10; chr1	10027	.	A	G	.	PASS	.	GT:AD:DP	./.:0,5:10; ```. #### Steps to reproduce; ```; $gatk/gatk LeftAlignAndTrimVariants -R $reference --split-multi-allelics -V test.input.vcf -O test.output.vcf; ```. #### Expected behavior; LeftAlignAndTrimVariants should be able to split multiallelic records in a VCF to two separate records as in GATK version 4.1.4.1. The AF field is removed from the 4.1.4.1 output, however. #### Actual behavior; GATK fails at a multiallelic record with the following error (GATK 4.2.0.0):; ```; java.lang.IllegalArgumentException: the range size cannot be negative; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:798); 	at org.broadinstitute.hellbender.utils.IndexRange.validate(IndexRange.java:107); 	at org.broadinstitute.hellbender.utils.IndexRange.<init>(IndexRange.java:67); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.splitASSBTable(GATKVariantContextUtils.java:1533); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.splitSomaticVariantContextToBiallelics(GATKVariantContextUtils.java:1501); 	at org.broadinstitute.hellbender.tools.walkers.variantutils.LeftAlignAndTrimV",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7211:124,Test,Tested,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7211,5,"['Test', 'test']","['Tested', 'test', 'tested', 'testing']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); LeftAlignAndTrimVariants. ### Affected version(s); I've only tested with v4.2.2.0. ### Description ; When running LeftAlignAndTrimVariants the program exited with a message that said:; ""A USER ERROR has occurred: Input files reference and features have incompatible contigs: No overlapping contigs found.; reference contigs = [chr1, chr2, chr3, chr4, chr5, chr6, chr7, chr8, chr9, chr10, chr11, chr12, chr13, chr14, chr15, chr16, chr17, chr18, chr19, chr20, chr21, chr22, chrX, chrY, chrM, chr1_KI270706v1_random, chr1_KI270707v1_random, chr1_KI270708v1_random, chr1_KI270709v1_random, chr1_KI270710v1_random, chr1_KI270711v1_random, chr1_KI270712v1_random, chr1_KI270713v1_random, chr1_KI270714v1_random, chr2_KI270715v1_random, chr2_KI270716v1_random, chr3_GL000221v1_random, chr4_GL000008v2_random, chr5_GL000208v1_random, chr9_KI270717v1_random, chr9_KI270718v1_random, chr9_KI270719v1_random, chr9_KI270720v1_random, chr11_KI270721v1_random, chr14_GL000009v2_random, chr14_GL000225v1_random, chr14_KI270722v1_random, chr14_GL000194v1_random, chr14_KI270723v1_random, chr14_KI270724v1_random, chr14_KI270725v1_random, chr14_KI270726v1_random, chr15_KI270727v1_random, chr16_KI270728v1_random, chr17_GL000205v2_random, chr17_KI270729v1_random, chr17_KI270730v1_random, chr22_KI270731v1_random, chr22_KI270732v1_random, chr22_KI270733v1_random, chr22_KI270734v1_random, chr22_KI270735v1_random, chr22_KI270736v1_random, chr22_KI270737v1_random, chr22_KI270738v1_random, chr22_KI270739v1_random, chrY_KI270740v1_random, chrUn_KI270302v1, chrUn_KI270304v1, chrUn_KI270303v1, chrUn_KI270305v1, chrUn_KI270322v1, chrUn_KI270320v1, chrUn_KI270310v1, chrUn_KI270316v1, chrUn_KI270315v1, chrUn_KI270312v1, chrUn_KI270311v1, chrUn_KI270317v1, chrUn_KI270412v1, chrUn_KI270411v1, chrUn_KI270414v1, chrUn_KI270419v1, chrUn_KI270418v1, chrUn_KI270420v1, chrUn_KI270424v1, chrUn_KI270417v1, chrUn_KI270422v1, chrUn_KI270423v1, chrUn_KI270425v1, chrUn_KI270429v1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7538:111,test,tested,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7538,1,['test'],['tested']
Testability,"## Bug Report. ### Affected tool(s) or class(es); MarkDuplicatesSpark . ### Affected version(s); - Latest public release version [4.4.0.0]. ### Description . I am working on 40X human WGS data, running MarkDuplicatesSpark on the computation node of a cluster with 40 cores and 192GB RAM. MarkDuplicatesSpark usually hangs and never finish (even after few days) with log as below:. ```; 11:26:29.511 INFO FileOutputCommitter - File Output Committer Algorithm version is 1; 11:26:29.511 INFO FileOutputCommitter - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false; 11:26:29.512 INFO FileOutputCommitter - File Output Committer Algorithm version is 1; 11:26:29.512 INFO FileOutputCommitter - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false; 11:26:30.738 INFO FileOutputCommitter - File Output Committer Algorithm version is 1; 11:26:30.738 INFO FileOutputCommitter - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false; 11:26:30.738 INFO FileOutputCommitter - File Output Committer Algorithm version is 1; 11:26:30.738 INFO FileOutputCommitter - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false; 11:26:45.830 INFO FileOutputCommitter - File Output Committer Algorithm version is 1; 11:26:45.830 INFO FileOutputCommitter - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false; 11:26:45.831 INFO FileOutputCommitter - File Output Committer Algorithm version is 1; 11:26:45.831 INFO FileOutputCommitter - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false; 11:26:55.475 INFO FileOutputCommitter - File Output Committer Algorithm version is 1; 11:26:55.475 INFO FileOutputCommitter - FileOutputCommitter skip cleanup _temporary folde",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8555:366,log,log,366,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8555,1,['log'],['log']
Testability,"## Bug Report. ### Affected tool(s) or class(es); MarkDuplicatesSpark. ### Affected version(s); - [ ] Latest public release version [version?]; 4.0.8.1; - [ ] Latest master branch as of [date of test?]; Sep 10, 2018. ### Description ; 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 0.0 in stage 6.0 (TID 515, localhost, executor 1, partition 0, NODE_LOCAL, 5270 bytes); 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 1.0 in stage 6.0 (TID 516, localhost, executor 2, partition 1, NODE_LOCAL, 5598 bytes); 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 2.0 in stage 6.0 (TID 517, localhost, executor 1, partition 2, NODE_LOCAL, 5315 bytes); 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 3.0 in stage 6.0 (TID 518, localhost, executor 2, partition 3, NODE_LOCAL, 5594 bytes); 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 4.0 in stage 6.0 (TID 519, localhost, executor 1, partition 4, NODE_LOCAL, 5317 bytes); 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 5.0 in stage 6.0 (TID 520, localhost, executor 2, partition 5, NODE_LOCAL, 5598 bytes); 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 6.0 in stage 6.0 (TID 521, localhost, executor 1, partition 6, NODE_LOCAL, 5315 bytes); 18/09/08 10:32:49 INFO scheduler.TaskSetManager: Starting task 7.0 in stage 6.0 (TID 522, localhost, executor 2, partition 7, NODE_LOCAL, 5316 bytes); 18/09/08 10:32:49 INFO storage.BlockManagerInfo: Added broadcast_7_piece0 in memory on localhost:37617 (size: 59.2 KB, free: 2004.5 MB); 18/09/08 10:32:49 INFO storage.BlockManagerInfo: Added broadcast_7_piece0 in memory on localhost:45786 (size: 59.2 KB, free: 2004.5 MB); 18/09/08 10:32:50 INFO storage.BlockManagerInfo: Added broadcast_6_piece0 in memory on localhost:37617 (size: 9.0 B, free: 2004.5 MB); 18/09/08 10:32:50 INFO scheduler.TaskSetManager: Starting task 8.0 in stage 6.0 (TID 523, localhost, executor 1, partition 8, NODE_LOCAL, 5604 bytes)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5169:195,test,test,195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5169,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); MergeVcfs (and potentially other Picard related tools). ### Affected version(s); - Latest public release version [4.1.7.0]. Here is my java version in case:; ```bash; $ java -version; openjdk version ""1.8.0_152-release""; OpenJDK Runtime Environment (build 1.8.0_152-release-1056-b12); OpenJDK 64-Bit Server VM (build 25.152-b12, mixed mode); ```. ### Description ; When the upstream path of the current directory contains a whitespace **and** the VCFs are stored in a directory 2 level deeper, the VCF is not found. The bug does not happen if:; * VCFs are located in current directory or in a subdirectory (level 1) from the current working directory (see reproducible steps below).; * VCFs have themselves whitespace in their filenames (see reproducible steps below). Here is a GATK stacktrace example:; ```java; Using GATK jar $HOME/local/pckg/python/miniconda3/envs/test/share/gatk4-4.1.7.0-0/gatk-package-4.1.7.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar $HOME/local/pckg/python/miniconda3/envs/test/share/gatk4-4.1.7.0-0/gatk-package-4.1.7.0-local.jar MergeVcfs -I data/calling/a.vcf.gz -I data/calling/b.vcf.gz -O c.vcf.gz; 23:25:05.033 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:$HOME/local/pckg/python/miniconda3/envs/test/share/gatk4-4.1.7.0-0/gatk-package-4.1.7.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; [Tue Jun 16 23:25:05 CDT 2020] MergeVcfs --INPUT data/calling/a.vcf.gz --INPUT data/calling/b.vcf.gz --OUTPUT c.vcf.gz --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX true --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false; Jun 16, 2020 11:25:05 PM shaded.c",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6664:919,test,test,919,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6664,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mitochondria WDL. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description ; Mitochondria WDL still has `--genotyping-mode` argument: https://github.com/broadinstitute/gatk/blob/master/scripts/mitochondria_m2_wdl/AlignAndCall.wdl#L420. This argument doesn't exist in GATK version 4.1.1.0 (which is the one that is currently being used in the mitochondria WDL), so this argument should be changed to the new force-call argument which was added in #6090",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6286:183,test,test,183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6286,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mutect2, HaplotypeCaller; ./gatk Mutect2 -I scripts/microbial/mtb/samples/D1CLVACXX.1.Solexa-125092.aligned.bam -R scripts/microbial/mtb/Mycobacterium_tuberculosis_H37Rv.fasta -O test.vcf --num-matching-bases-in-dangling-end-to-recover 1 --max-reads-per-alignment-start 75. ### Affected version(s); Latest master branch as of 2/18/21. ### Description ; java.lang.ArrayIndexOutOfBoundsException: Index 25 out of bounds for length 25; 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.AbstractReadThreadingGraph.extendDanglingPathAgainstReference(AbstractReadThreadingGraph.java:913); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.AbstractReadThreadingGraph.mergeDanglingHead(AbstractReadThreadingGraph.java:646); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.AbstractReadThreadingGraph.recoverDanglingHead(AbstractReadThreadingGraph.java:542); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.AbstractReadThreadingGraph.recoverDanglingHeads(AbstractReadThreadingGraph.java:447); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.ReadThreadingAssembler.getAssemblyResult(ReadThreadingAssembler.java:685); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.ReadThreadingAssembler.createGraph(ReadThreadingAssembler.java:664); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.ReadThreadingAssembler.assemble(ReadThreadingAssembler.java:549); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.ReadThreadingAssembler.assembleKmerGraphsAndHaplotypeCall(ReadThreadingAssembler.java:195); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.readthreading.ReadThreadingAssembler.runLocalAssembly(ReadThreadingAssembler.java:160); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUti",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7085:229,test,test,229,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7085,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mutect2, multi-sample (2 samples) in Tumor-only mode. ### Affected version(s); - version 4.1.5.0, works fine on 4.1.4.1 and 4.1.4.0. ### Description ; Among my cohort of ~100 samples, mutect2 calling using reference genome hg38+alt+decoy (e.g. as provided in the gatk bundle) fails for one sample at a very specific location (chrUn_KI270748v1:61595-61748), returning an index out of range error. Slightly reducing the range removes the issue (e.g., calling on chrUn_KI270748v1:61596-61748), so it looks like an issue with the estimation of the number of repeats. This is not the most important location, but the error could affect more important calls for other people. The log is the following: ; ```gatk Mutect2 --java-options ""-Xmx15G"" -R /data/references/Homo_sapiens/GATK/hg38/Homo_sapiens_assembly38.fasta -I test1.bam -I test2.bam -O tests.vcf -L test_err.bed ; Using GATK jar /home/alcalan/.conda/mutect2-cd161e2f51ff2240ce6390abc942bbdd/share/gatk4-4.1.5.0-1/gatk-package-4.1.5.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx15G -jar /home/alcalan/.conda/mutect2-cd161e2f51ff2240ce6390abc942bbdd/share/gatk4-4.1.5.0-1/gatk-package-4.1.5.0-local.jar Mutect2 -R /data/references/Homo_sapiens/GATK/hg38/Homo_sapiens_assembly38.fasta -I test1.bam -I test2.bam -O tests.vcf -L test_err.bed; 10:34:24.578 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/alcalan/.conda/mutect2-cd161e2f51ff2240ce6390abc942bbdd/share/gatk4-4.1.5.0-1/gatk-package-4.1.5.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Mar 23, 2020 10:34:24 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 10:34:24.819 INFO Mutect2 - ---------------------------------------------------------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6516:724,log,log,724,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6516,2,"['log', 'test']","['log', 'tests']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mutect2. ### Affected version(s); - GATK v4.1.8.1. ### Description ; Hi, ; I am new to GATK so I hope this is not something trivial I overlooked. I called somatic variants using `Mutect2` (GATK v4.1.8.1) and wished to filter the results using `FilterMutectCalls`. I am running GATK via a docker container as described here: https://gatk.broadinstitute.org/hc/en-us/articles/360035889991--How-to-Run-GATK-in-a-Docker-container. ``` bash; ./gatk Mutect2 -I:tumor 1st.chr1.bam -I:normal 2nd.chr1.bam -O variants.vcf.gz --min-pruning 8 -R reference.chr1.fa; ```; I repeated this three times, the last time to make sure whether the .vcf.stats is being generated or not. This was a test run using the input filtered for chr1 using `samtools view -b`. I though this was the reason for getting the error message about Contig 2 not being present. ```bash; ...; 18:39:03.207 INFO ProgressMeter - 1:282722440 448.7 1529870 3409.8; 18:39:06.592 INFO VectorLoglessPairHMM - Time spent in setup for JNI call : 19.218222963000002; 18:39:06.592 INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 5376.604473962; 18:39:06.593 INFO SmithWatermanAligner - Total compute time in java Smith-Waterman : 12201.77 sec; 18:39:06.594 INFO Mutect2 - Shutting down engine; [August 25, 2020 6:39:06 PM GMT] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 448.75 minutes.; Runtime.totalMemory()=12349079552; ***********************************************************************. A USER ERROR has occurred: Contig 2 not present in the sequence dictionary [1]. ***********************************************************************; Set the system property GATK_STACKTRACE_ON_USER_EXCEPTION (--java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true') to print the stack trace.; ```; Is there any way of getting around this and generating .vcf.stats without repeating a lengthy variant calling `Mutect2`? Is this a problem introdu",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6768:726,test,test,726,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6768,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mutect2. ### Affected version(s); - [x] Latest public release version [4.1.4.1]; - [ ] Latest master branch as of [date of test?]. ### Description ; Mutect2 occasionally writes lines including INFO tag `MPOS=-2147483648`. This doesn't look sensible for ""median distance from end of read"", and the specific value is disallowed in [section 1.3 of the VCF specification](https://samtools.github.io/hts-specs/VCFv4.3.pdf). I've had a quick look at the code, and think the dubious value may be generated in [ReadPosition::getValueForRead](https://github.com/broadinstitute/gatk/blob/946f39/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/ReadPosition.java#L57) when the result from [ReadPosRankSumTest.getReadPosition](https://github.com/broadinstitute/gatk/blob/946f39/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/ReadPosRankSumTest.java#L53) is cast to an `int`. Looking at that function, it can [return `INVALID_ELEMENT_FROM_READ`](https://github.com/broadinstitute/gatk/blob/946f39/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/ReadPosRankSumTest.java#L62) which is [defined as `Double.NEGATIVE_INFINITY`](https://github.com/broadinstitute/gatk/blob/946f39/src/main/java/org/broadinstitute/hellbender/tools/walkers/annotator/RankSumTest.java#L23). According to the [java documentation](https://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.1.3), casting NEGATIVE_INFINITY to int will result in a value of `INT_MIN`. (Disclaimer: I haven't tested this, so it may be completely wrong...). #### Steps to reproduce; See attached .zip file which includes a smallish bam file that shows the problem. I ran mutect2 on it in the Docker container for the latest GATK release:; ```sh; unzip mpos_issue.zip; cd mpos_issue; ../gatk Mutect2 --input input/small.bam --reference input/small.fa --output small.vcf; grep MPOS=- small.vcf; ```. #### Expected behavior; `MPOS` should have a se",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6342:173,test,test,173,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6342,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mutect2. ### Affected version(s); - [x] Latest public release version: 4.0.11.0; - [ ] Latest master branch as of [date of test?]. ### Description ; The output vcf for a few samples looks like this:. ```; chrM 151 . CT TC . PASS DP=3420;ECNT=23;POP_AF=4.000e-03;P_CONTAM=0.00;TLOD=14304.21 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_POST_PROB:SB 0/1:27,3242:0.992:3269:13,1545:14,1697:30,30:317,335:60:26:0:0.990,0.990,0.992:0.045,0.015,0.940:9,18,1541,1701; chrM 152 . T C . chimeric_original_alignment DP=3358;ECNT=23;POP_AF=4.000e-03;P_CONTAM=0.00;TLOD=46.40 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:PGT:PID:POTENTIAL_POLYMORPHIC_NUMT:SA_MAP_AF:SA_POST_PROB:SB 0/1:250,25:0.099:275:119,13:131,12:30,30:336,317:60:29:25:0|1:8660_C_T:true:0.091,0.061,0.091:2.722e-03,0.035,0.962:112,138,7,18; ```. ```; chrM 151 . CT TC . PASS DP=1867;ECNT=20;POP_AF=4.000e-03;P_CONTAM=0.00;TLOD=6145.34 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_POST_PROB:SB 0/1:13,1792:0.993:1805:7,879:6,913:30,30:441,442:60:39:0:0.990,0.990,0.993:0.026,0.024,0.950:5,8,745,1047; chrM 152 . T C . PASS DP=1847;ECNT=20;POP_AF=4.000e-03;P_CONTAM=0.00;TLOD=12.96 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_POST_PROB:SB 0/1:0,1755:0.999:1755:0,862:0,893:0,30:0,442:60:39:6:0.990,0.990,1.00:0.027,0.027,0.946:0,0,726,1029; ```. Note that site 152 is a T->C that is also captured in the MNP at site 151 CT->TC. In one case site 152 is filtered, but in the other it passes, but in both cases the MNP passes. . #### Steps to reproduce; @klaricch Could you please post the input BAMs into the Mutect task as well as the output VCFs from that task? Could you also post the ""script"" generated by Cromwell that will show what command Cromwell actually ran at this point? Thanks!. #### Expected behavior; I'm not sure what should happen in this case, but the two o",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5513:173,test,test,173,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5513,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mutect2. ### Affected version(s); I test this problem in two versions, V4.1.4.1 and V4.3.0.0.They all have this problem. ### Description ; Following the recommendations of the 'Best Practice Workflows', I run mutect2 in the following command. java -jar -Djava.io.tmpdir=${tmpDir} -Xms2g -Xmx16g ; /mnt/bin/gatk-4.1.4.1/gatk-package-4.1.4.1-SNAPSHOT-local.jar Mutect2 ; --native-pair-hmm-threads 32 ; -R ${Fasta} ; -I ${cancer_bam} ; -I ${normal_bam}; --tumor-sample cancer --normal-sample normal ; -L ${all_chrome_bed}; --bam-output ${bam_output} ; -O ${vcf_output}. To improve parallelism, I try to split my all chrome bed to 25 files.Parallel running the flowing command brings me signficient performance improvement. java -jar -Djava.io.tmpdir=${tmpDir} -Xms2g -Xmx16g ; /mnt/bin/gatk-4.1.4.1/gatk-package-4.1.4.1-SNAPSHOT-local.jar Mutect2 ; --native-pair-hmm-threads 32 ; -R ${Fasta} ; -I ${cancer_bam} ; -I ${normal_bam}; --tumor-sample cancer --normal-sample normal ; -L ${chr1_bed}; --bam-output ${chr1_bam_output} ; -O ${chr1_vcf_output}. java -jar -Djava.io.tmpdir=${tmpDir} -Xms2g -Xmx16g ; /mnt/bin/gatk-4.1.4.1/gatk-package-4.1.4.1-SNAPSHOT-local.jar Mutect2 ; --native-pair-hmm-threads 32 ; -R ${Fasta} ; -I ${cancer_bam} ; -I ${normal_bam}; --tumor-sample cancer --normal-sample normal ; -L ${chr2_bed}; --bam-output ${chr2_bam_output} ; -O ${chr2_vcf_output}. But when I examined the vcf results produced by both modes of operation, I found consistency issues. #### Expected behavior; Let's focus on chromosome 2.I expect 100% consistency between the following two runs.; 1. The vcf file is obtained using a bed file containing only chromosome 2.; 2. Use bed file with all chromosomes to get all calling results, then filter to get chromesome 2 calling result. #### Actual behavior; 1. The first method above gives one more result than the second.; 2. There are 168 vcf results inconsistent, out of 1247 total.One of the inconsistencie",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8152:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8152,1,['test'],['test']
Testability,## Bug Report. ### Affected tool(s) or class(es); Mutect2. ### Affected version(s); Tested in 4.1.2 up to and including 4.1.5. ### Description ; Here's an IGV screenshot of a variant I found. One of the bases in the MNP is already a variant in the normal. ; https://drive.google.com/file/d/1YwfXH4LQQmhZ3wdi9HD1n6m3Up684DV5/view?usp=sharing. #### Steps to reproduce; My Mutect2 command was:. `gatk Mutect2; --reference genome.fa; -I normal.bam; -I tumor.bam; -normal normal; -tumor tumor; -L chr3:4300000-4400000; --annotation FisherStrand; --output output.vcf ; --bam-output output.bamout.bam ; --germline-resource af-only-gnomad.hg38.vcf.gz; --af-of-alleles-not-in-resource 0.0000025; --disable-read-filter MateOnSameContigOrNoMappedMateReadFilter; --panel-of-normals pon.vcf; --f1r2-tar-gz output.f1r2.tar.gz; --f1r2-max-depth 600; --dont-use-soft-clipped-bases true`. #### Expected behavior; This variant should just be called as a SNV at the first position. . #### Actual behavior; An MNP is called,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6476:84,Test,Tested,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6476,1,['Test'],['Tested']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Mutect2. ### Affected version(s); gatk:4.1.4.1; ### Description ; Hello, I have an issue when i run Mutect2. Indeed it's seems to be a RAM issue (you will find 2 different log behind). To be aware of the context, I am using Mutect2 in production and in the new version which I use, approximately 1% of my Mutect2 failed. I first try to understand the log and it seems to me that the issue is due to memory management. Then I realized several test, by increasing both Java machine memory and docker job memory (10G) wich seems enough for mutect2 and my job was still failling. I also try to change CPU parameters but nothing change.; We did more test and try to run the same command with 2 others version of gatk (4.1.9.0 and 4.1.0.0). The job failed in 4.1.9.0 with the same log than 4.1.4.0 but the version 4.1.0.0 ran successfully. #### Steps to reproduce; you will find the command below. I'am not aware of the confidentiality about my input. If i can i will send it to you if needed.; `java -Xmx4000m -Xms4000m -XX:ParallelGCThreads=1 -XX:+AggressiveHeap -jar /usr/share/java/gatk-package-4.1.4.1-local.jar Mutect2 --smith-waterman FASTEST_AVAILABLE -I WES-T_S7_chr_1_bqsr.bam -I WGS-C_S12_chr_1_bqsr.bam -normal WGS-C -L 1 -O OUTPUT -R GRCh38.92.fa`; #### Expected behavior; _Tell us what should happen_. ### Description. > 10:29:22.302 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/usr/share/java/gatk-package-4.1.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jan 06, 2021 10:29:22 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 10:29:22.407 INFO Mutect2 - ------------------------------------------------------------; 10:29:22.408 INFO Mutect2 - The Genome Analysis Toolkit (GATK) v4.1.4.1; 10:29:22.408 INFO Mutect2 - For support and documentation go to https://software.broadinstitute.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7032:222,log,log,222,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7032,5,"['log', 'test']","['log', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); N/A. ### Affected version(s); - [ x] Latest public release version [4.5.0.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; Dockerfile does not create unprivileged user account. #### Steps to reproduce; * git clone https://github.com/broadinstitute/gatk.git; * cd gatk; * git checkout 4.5.0.0; * docker build -t gatk .; * docker run ... #### Expected behavior; I'd expect the user to be in an unprivileged account in `/home/gatk` when the container is started. If there is a use case for enabling root (say for allowing system installs) this should be an option (config or a separate Dockerfile). #### Actual behavior; On `docker run` the user is root under `/gatk`. A container should not put the user in a root account upon startup. This is especially so in shared computing environments. I attempted to create a ""gatk"" account with `RUN useradd -d /home/gatk -ms /bin/bash gatk` (etc) in the Dockerfile but I get `Permission denied: '/root/.config/conda/.condarc'.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8856:170,test,test,170,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8856,1,['test'],['test']
Testability,## Bug Report. ### Affected tool(s) or class(es); ReadsPipelineSpark. ### Affected version(s); - [x] Latest public release version 4.1.0.0; - [ ] Latest master branch as of [date of test?]. ### Description . ```; java.lang.IllegalArgumentException: Interval NC_007605:1-171823 not within the bounds of a contig in the provided dictionary; 	at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:730); 	at org.broadinstitute.hellbender.engine.Shard.divideIntervalIntoShards(Shard.java:87); 	at org.broadinstitute.hellbender.engine.Shard.divideIntervalIntoShards(Shard.java:66); 	at org.broadinstitute.hellbender.tools.spark.pipelines.ReadsPipelineSpark.lambda$runTool$0(ReadsPipelineSpark.java:221); 	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:267); 	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499); 	at org.broadinstitute.hellbender.tools.spark.pipelines.ReadsPipelineSpark.runTool(ReadsPipelineSpark.java:222); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:528); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:30); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:138); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); 	at org.broadinsti,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5644:182,test,test,182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5644,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); Reblock | JointGenotype. ### Affected version(s); - [x] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description ; We found a bug while running the latest JointGenotype pipeline (2.0.2). We are working with Dragen data (version 3.6.3); The error:. <details><summary>OPEN ERROR HERE</summary>; <p>. + gatk --java-options -Xms8g GenomicsDBImport --genomicsdb-workspace-path genomicsdb --batch-size 50 -L /tmp/scratch/cromwell-dragen-us-west-2/cromwell-execution/GatkJointGenotyping/7dd18ebe-29ca-47b1-b71a-56b99c362789/call-SplitIntervalList/glob-d928cd0f5fb17b6bd5e635f48c18ccfb/0073-scattered.interval_list --sample-name-map sample_name_map --reader-threads 5 --merge-input-intervals --consolidate; --; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/tmp/scratch/cromwell-dragen-us-west-2/cromwell-execution/GatkJointGenotyping/7dd18ebe-29ca-47b1-b71a-56b99c362789/call-ImportGVCFs/shard-73/tmp.9a65c1fc; 18:46:55.750 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.2.3.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Dec 01, 2021 6:46:55 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 18:46:55.894 INFO GenomicsDBImport - ------------------------------------------------------------; 18:46:55.894 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.2.3.0; 18:46:55.895 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/gatk/; 18:46:55.895 INFO GenomicsDBImport - Executing as root@ip-10-10-156-13.us-west-2.compute.internal on Linux v4.14.243-185.433.amzn2.x86_64 amd64; 18:46:55.895 INFO GenomicsDBImport - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_242-8u242-b08-0ubuntu3~18.04-b08; 18:46:55.895 INFO GenomicsDBImport - Start Date/Time: December 1, 2021 6:46:55 PM GMT; 18",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7589:190,test,test,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7589,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); ReblockGVCF. ### Affected version(s); - [x ] Latest public release version [version?] _**GATK 4.2.6.1**_; - [ ] Latest master branch as of [date of test?]. ### Description ; We ran ReblockGVCF in 549 samples with the newest GATK (4.2.6.1). 8 of them returned the error similar to the message below . `org.broadinstitute.hellbender.exceptions.GATKException: Exception thrown at chrM:1 [VC /tmp/scratch/prs-sabe-files/GRAR/2031812880_AJ.hard-filtered.gvcf.gz @ chrM:1 Q. of type=SYMBOLIC alleles=[G*, <NON_REF>] attr={END=1} GT=[[2031812880_AJ G*/G* DP 1691 AD 112,1579 {MIN_DP=1691, SQ=0}]] filters=weak_evidence`. and right below, we could find in all of them; `Caused by: org.broadinstitute.hellbender.exceptions.UserException$BadInput: Bad input: Homozygous reference genotypes must contain GQ or PL. Both are missing for hom ref genotype at chrM:1`. All the ""failed samples"" produced a broken output, in this case, missing the chrM (and the alt chr, such as HLA, chr1_alt etc)... It was weird because on WDL it returned as **_Success_** job... We need all the samples with a proper output to run the JointGenotype pipeline with the Reblocked Dragen samples output. #### Steps to reproduce; I'll share with you the chrM:1 from GVCF from a sample with no error; `chrM	1	.	G	<NON_REF>	.	PASS	END=72	GT:AD:DP:GQ:MIN_DP:PL:SPL:ICNT	0/0:2441,2:2443:99:1613:0,120,1800:0,255,255:40,13`. And now, the chrM:1 from a sample with the error; `chrM	1	.	G	<NON_REF>	.	weak_evidence	END=1	GT:AD:DP:SQ:MIN_DP	0/0:112,1579:1691:0:1691`. #### Expected behavior; No broken output. #### Actual behavior; Failing in a few samples, breaking the expected output.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7797:198,test,test,198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7797,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); SAMSequenceDictionary function in IndexUtils.java: https://github.com/broadinstitute/gatk/blob/master/src/main/java/org/broadinstitute/hellbender/utils/IndexUtils.java. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description ; The SAMSequenceDictionary function always logs a warning when a file is passed in. Needs an if statement that validates whether or not the file is actually a sequence dictionary before logging the warning. #### Steps to reproduce; Run GATK's HaplotypeCaller with a --dbsnp option set, or just pass a sequence dictionary into the SAMSequenceDictionary function directly. #### Expected behavior; Should use the --dbsnp file that I pass in if valid, rather than log a warning and creating a separate sequence dictionary. #### Actual behavior; Logs a warning and instead tries to create a new sequence dictionary based on the index file it finds",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5692:334,test,test,334,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5692,5,"['Log', 'log', 'test']","['Logs', 'log', 'logging', 'logs', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); SplitIntervals using `-MODE BALANCING_WITHOUT_INTERVAL_SUBDIVISION`. ### Affected version(s); Tested on: ; ```; The Genome Analysis Toolkit (GATK) v4.4.0.0; HTSJDK Version: 3.0.5; Picard Version: 3.0.0; ```. ### Description ; SplitIntervals does not produce the requested number of interval lists as specified by `--scatter-count`, even if it possible based on the input. It seems that SplitIntervals prioritizes equal interval list basepair size. See below for example. #### Steps to reproduce; Toy example:; genome.fa:; ```; >test; AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTCTCTGACAGCAGCTTCTGAACTG; GTTACCTGCCGTGAGTAAATTAAAATTTTATTGACTTAGGTCACTAAATACTTTAACCAATATAGGCATAGCGCACAGAC; AGATAAAAATTACAGAGTACACAACATCCATGAAACGCATTAGCACCACCATTACCACCACCATCACCACCACCATCACC; ```; intervals.list:; ```; test:1-5; test:7-10; test:15-20; test:25-30; test:30-35; test:40-45; test:50-55; test:60-65; test:70-75; test:76-80; test:82-88; test:90-96; test:98-102; test:105-130; test:136-139; test:145-159; test:160-220; ```; Command:; ```; gatk SplitIntervals -R genome.fa -L toy_intervals.list -O ./ --scatter-count 17 -mode BALANCING_WITHOUT_INTERVAL_SUBDIVISION --sequence-dictionary genome.dict --interval-merging-rule OVERLAPPING_ONLY; ```; This only produces 3 interval list files. If this is expected behavior, its not entirely clear from the documentation. #### Expected behavior; I have a list of 500 non-overlapping intervals (from ScatterIntervalsByNs) that I would like SplitIntervals to organize into 250 interval lists. I would expect that the tool would produce 250 list files. . #### Actual behavior; The tool only produces 12 interval list files. . ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8315:144,Test,Tested,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8315,19,"['Test', 'test']","['Tested', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); VariantAnnotator -A ReferenceBases -A TandemRepeat. ### Affected version(s); - [x] Latest public release version [4.1.3]; - [ ] Latest master branch as of [date of test?]. ### Description ; VariantAnnotator doesn't seem to correctly generate annotations that are based off the reference. I've tried on a few different VCFs and with different genome builds, and get the same result every time. For `ReferenceBases` it seems to generate a string for each variant that is the ref allele, followed by `20-len(ref) * N`. E.g.:. ```; 1 118617 rs372912307 T C 50 PASS REF_BASES=TNNNNNNNNNNNNNNNNNNNN; 1 567239 rs78150957 CG C 50 PASS REF_BASES=CGNNNNNNNNNNNNNNNNNNN; ```. The STR annotations get their header lines added to the header, but not a single variant is flagged as an STR. I've tried processing the GIAB VCFs for NA12878 and NA24385 with the same results - even obvious STR variants are not flagged. I suspect this is related to the fact that REF_BASES isn't compute properly. #### Steps to reproduce; Take any decent size VCF without the above annotations (e.g. GIAB VCFs) and run something like:. gatk VariantAnnotator -V NA12878.vcf.gz -O NA12878.ann.vcf.gz -A TandemRepeat -A ReferenceBases -R hg38.fa",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6095:214,test,test,214,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6095,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); VariantAnnotator. ### Affected version(s); - [x] Latest public release version 4.5.0.0; - [ ] Latest master branch as of [date of test?]. ### Description ; ```; Using GATK jar /directory_masked/programs/gatk-4.5.0.0/gatk-package-4.5.0.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true -jar /directory_masked/gatk-4.5.0.0/gatk-package-4.5.0.0-local.jar VariantAnnotator -I ../test.bam -V test.vcf -O test_2.vcf --reference /directory_masked/refs/hg19/ucsc.hg19.fasta --enable-all-annotations true -jdk-deflater true -jdk-inflater true; 14:02:45.344 INFO VariantAnnotator - ------------------------------------------------------------; 14:02:45.346 INFO VariantAnnotator - The Genome Analysis Toolkit (GATK) v4.5.0.0; 14:02:45.346 INFO VariantAnnotator - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:02:45.346 INFO VariantAnnotator - Executing as username@hostname.local on Mac OS X v14.2 aarch64; 14:02:45.346 INFO VariantAnnotator - Java runtime: OpenJDK 64-Bit Server VM v17.0.10+0; 14:02:45.346 INFO VariantAnnotator - Start Date/Time: April 30, 2024 at 2:02:45 PM HKT; 14:02:45.346 INFO VariantAnnotator - ------------------------------------------------------------; 14:02:45.346 INFO VariantAnnotator - ------------------------------------------------------------; 14:02:45.347 INFO VariantAnnotator - HTSJDK Version: 4.1.0; 14:02:45.347 INFO VariantAnnotator - Picard Version: 3.1.1; 14:02:45.347 INFO VariantAnnotator - Built for Spark Version: 3.5.0; 14:02:45.348 INFO VariantAnnotator - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 14:02:45.348 INFO VariantAnnotator - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 14:02:45.348 INFO VariantAnnotator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 14:02:45.348 INFO V",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8800:180,test,test,180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8800,3,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); VariantAnnotator. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description . Throws an exception on a legal variant. java.lang.IllegalStateException: Allele in genotype G not in the variant context [G*, G, GT]; 	at htsjdk.variant.variantcontext.VariantContext$Validation.validateGenotypes(VariantContext.java:382); 	at htsjdk.variant.variantcontext.VariantContext$Validation.access$200(VariantContext.java:323); 	at htsjdk.variant.variantcontext.VariantContext$Validation$2.validate(VariantContext.java:331); 	at htsjdk.variant.variantcontext.VariantContext.lambda$validate$0(VariantContext.java:1384); 	at java.lang.Iterable.forEach(Iterable.java:75); 	at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1384); 	at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:489); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:647); 	at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:638); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1329); 	at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.trimAlleles(GATKVariantContextUtils.java:1285); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.getMinRepresentationBiallelics(VariantAnnotatorEngine.java:499); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.annotateExpressions(VariantAnnotatorEngine.java:440); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorEngine.annotateContext(VariantAnnotatorEngine.java:285); 	at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotator.apply(VariantAnnotator.java:230); 	at org.broadinstitute.hellbender.engine.VariantWalker.lambda$traverse$0(VariantWalker.java:104); 	a",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6689:183,test,test,183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6689,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); VariantRecalibrator. ### Affected version(s); - [X] Latest public release version [4.5.0.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; As of v1.3.0 the `scales` R package turns the use of deprecated values for the `space` parameter into a hard error, resulting in the VariantRecalibrator R-script terminating with the following message:. > The `space` argument of `pal_gradient_n()` only supports be ""Lab"" as of scales 0.3.0. This parameter is used repeatedly in the generated R-script via. ```R; scale_fill_gradient(high=""green"", low=""red"", space=""rgb""); ```. #### Steps to reproduce. ```shell; $ R --version; R version 4.1.2 (2021-11-01) -- ""Bird Hippie""; $ rm -rf ~/R; $ R; > install.packages(""ggplot2"", repos=""https://cloud.r-project.org/""); > packageVersion(""scales""); [1] ‘1.3.0’; > quit(); $ gatk --version; The Genome Analysis Toolkit (GATK) v4.5.0.0; HTSJDK Version: 4.1.0; Picard Version: 3.1.1; $ gatk VariantRecalibrator [arguments omitted for brevity]; org.broadinstitute.hellbender.utils.R.RScriptExecutorException: ; Rscript exited with 1; Command Line: Rscript -e tempLibDir = '/tmp/Rlib.9339186078473502558';source('/path/to/rscript.r');; Stdout: ; Stderr: Error:; ! The `space` argument of `pal_gradient_n()` only supports be ""Lab"" as; of scales 0.3.0.; Backtrace:; ▆; 1. ├─base::source(""/path/to/rscript.r""); 2. │ ├─base::withVisible(eval(ei, envir)); 3. │ └─base::eval(ei, envir); 4. │ └─base::eval(ei, envir); 5. └─ggplot2::scale_fill_gradient(high = ""green"", low = ""red"", space = ""rgb""); 6. ├─ggplot2::continuous_scale(...); 7. │ └─ggplot2::ggproto(...); 8. │ └─rlang::list2(...); 9. └─scales::seq_gradient_pal(low, high, space); 10. └─scales::pal_gradient_n(c(low, high), space = space); 11. └─lifecycle::deprecate_stop(""0.3.0"", ""pal_gradient_n(space = 'only supports be \""Lab\""')""); 12. └─lifecycle:::deprecate_stop0(msg); 13. └─rlang::cnd_signal(...); Execution halted; $ R; > install.packages(""remot",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8664:185,test,test,185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8664,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); VcfFuncotationFactoryUnitTest; SimpleKeyXsvFuncotationFactoryUnitTest; SimpleTsvOutputRendererUnitTest; VcfOutputRendererUnitTest; VariantOverlapAnnotaterUnitTest. ### Affected version(s). - [x] Latest master branch as of August 12, 2020. ### Description ; When running the entire unit test suite using; ```; ./gradlew test; ```; where the environment variable TEST_TYPE=unit. The same 371 tests will fail. The following stack trace gives an example of one of the failing tests:; ```; org.broadinstitute.hellbender.exceptions.GATKException: Unable to automatically instantiate codec org.broadinstitute.hellbender.utils.codecs.AnnotatedIntervalCodec; 	at org.broadinstitute.hellbender.engine.FeatureManager.getCandidateCodecsForFile(FeatureManager.java:508); 	at org.broadinstitute.hellbender.engine.FeatureManager.getCodecForFile(FeatureManager.java:455); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.getCodecForFeatureInput(FeatureDataSource.java:354); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.getFeatureReader(FeatureDataSource.java:334); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:282); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:238); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:206); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:193); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSource.java:156); 	at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.readEntireVCFIntoMemory(VariantContextTestUtils.java:67); 	at org.broadinstitute.hellbender.tools.funcotator.vcfOutput.VcfOutputRendererUnitTest.testExclusionListOverridesManualDefaultAnnotations(VcfOutputRendererUnitTest.java:40); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorIm",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748:336,test,test,336,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748,4,['test'],"['test', 'tests']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); _FilterAlignmentArtifacts_. ### Affected version(s); - [x] Latest public release version [4.1.4.1]. ### Description ; FilterAlignmentArtifacts consistently errors out with segmentation faults or IllegalArgumentExceptions. I've attached the log files for each of these errors below.; [invalid_interval.log](https://github.com/broadinstitute/gatk/files/4017907/invalid_interval.log); [seg_fault.log](https://github.com/broadinstitute/gatk/files/4017908/seg_fault.log). #### Steps to reproduce; The command to reproduce both errors is the same, and I have attached it below.; [realignment_filter.txt](https://github.com/broadinstitute/gatk/files/4017918/realignment_filter.txt); The BWA mem index I'm using is hg38, however the BAM that I am realigning from is hg19; thus, the reference argument is the hg19 fasta. I am happy to transfer zip files containing the other files need to reproduce this. Just let me know where to send them. #### Expected behavior; _FilterAlignmentArtifacts_. #### Actual behavior; _Errors_",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6344:290,log,log,290,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6344,5,['log'],['log']
Testability,## Bug Report. ### Affected tool(s) or class(es); _Funcotator_ _LocatableXsvFuncotationFactory_. ### Affected version(s); - [x] Latest master branch as of [date of test?]. ### Description ; The datasources (clinvar_hgmd in particular) contain multiple/overlapping entries for the same location. This causes too many funcotations to be added to a single variant for a single LocatableXsv data source. #### Expected behavior; For now Funcotator should just pick the first entry. Will need to discuss for what the correct behavior is.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4929:164,test,test,164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4929,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Funcotator_, _GencodeFuncotationFactory_. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description ; The transcript position in Funcotator is always being populated as a single integer value. While this is correct for SNPs, it should be populated as a range - `<START_POS>_<END_POS>` for events spanning more than 1 base.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5375:208,test,test,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5375,1,['test'],['test']
Testability,## Bug Report. ### Affected tool(s) or class(es); _Funcotator_. ### Affected version(s); - [X] Latest master branch as of [20181001]. ### Description ; There appears to be an extra folder in the funcotator test datasources in `large`:. `large/funcotator/funcotator_dataSources/cancer_gene_census/hg19/hg38`; `large/funcotator/funcotator_dataSources/cancer_gene_census/hg38/hg38`. This should be removed.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5243:206,test,test,206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5243,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Funcotator_. ### Affected version(s); - [x] Latest public release version [version v4.1.4.1]; - [ ] Latest master branch as of [date of test?]. ### Description . Hi @jonn-smith , I saw you often address Funcotator related issues, so I thought this might be of interest to you. I ran funcotator on a vcf created by mutect2 from RNA-seq data. The vcf includes a large deletion in the GABARAP gene, and when Funcotator processes this annotation, it dies with an error about a query that extends past the end of a contig:. > htsjdk.samtools.SAMException: Query asks for data past end of contig. Query contig ENST00000571253.1|ENS; G00000170296.9|OTTHUMG00000102156.3|OTTHUMT00000440082.2|AC120057.8-003|GABARAP|837|UTR5:1-753|CDS:754-8; 37| start:1 stop:895 contigLength:837; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.getSubsequenceAt(Ca; chingIndexedFastaSequenceFile.java:316); at org.broadinstitute.hellbender.engine.ReferenceFileSource.queryAndPrefetch(ReferenceFileSource; .java:78); at org.broadinstitute.hellbender.engine.ReferenceDataSource.queryAndPrefetch(ReferenceDataSource; .java:64); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.; getFivePrimeUtrSequenceFromTranscriptFasta(GencodeFuncotationFactory.java:744); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createUtrFuncotation(GencodeFuncotationFactory.java:1568); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createGencodeFuncotationOnSingleTranscript(GencodeFuncotationFactory.java:983); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsHelper(GencodeFuncotationFactory.java:805); at org.broadinstitute.hellbender.tools.funcotator.dataSources.gencode.GencodeFuncotationFactory.createFuncotationsHelper(GencodeFuncotationFactory.java:78",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6345:187,test,test,187,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6345,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Funcotator_. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description ; When annotating a VCF, if the VCF already contains funcotations Funcotator will add a new funcotator line to the header. This will cause the parser to fail because it will not be able to get the correct line from the header. This is a bit of a pathological case (I can't currently see a good reason to funcotate a VCF twice), but since this behavior is valid it should be accounted for. The primary issue is how to resolve the two funcotation sets. Ideally we would leave them both in and somehow version them (to preserve all the information). Alternatively we can append to the existing funcotation list. This second method will likely involve a lot of work and probably isn't worth it.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5368:179,test,test,179,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5368,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _GencodeFuncotationFactory_. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description ; When a trouble transcript comes up for an allele pairl, `GencodeFuncotationFactory::createFuncotationsHelper` does not create a default annotation for the allele pair. This will cause the parsing of funcotations to fail because not all the alleles are represented in the funcotation list. See the `todo` in `GencodeFuncotationFactory::createFuncotationsHelper`.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5366:194,test,test,194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5366,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _MarkDuplicatesSpark_. ### Affected version(s); - [ ] GATK version 4.1.9.0. ### Description ; Headers with another `@` character fail to create a valid bam using MarkDuplicatesSpark. The bam file is empty. But the header will work when using samtools markdup instead. The following example was found in one of many samples we found in ICGC datasets. Example header:; `@HWI-ST700660_163:1:1101:1243:1870#1@0/1`. Log:<br> (removed some content since it was too long); ```; 00:05 DEBUG: [kryo] Read: Object[]; 00:05 DEBUG: [kryo] Read: Object[]; 00:05 DEBUG: [kryo] Read: Object[]; 00:05 DEBUG: [kryo] Read: Object[]; 00:05 DEBUG: [kryo] Write: Object[]; 00:05 DEBUG: [kryo] Write: Object[]; 00:05 DEBUG: [kryo] Write: Object[]; ...; 01:22 DEBUG: [kryo] Read: CompressedMapStatus; 01:22 DEBUG: [kryo] Write: CompressedMapStatus; ...; 02:25 DEBUG: [kryo] Read: WrappedArray([]); 02:25 DEBUG: [kryo] Write: WrappedArray([]); 02:25 DEBUG: [kryo] Read: scala.Tuple3[]; 02:25 DEBUG: [kryo] Read: scala.Tuple3[]; 02:25 DEBUG: [kryo] Read: WrappedArray([]); 02:25 DEBUG: [kryo] Read: WrappedArray([]); 02:25 DEBUG: [kryo] Write: scala.Tuple3[]; ...; 02:42 DEBUG: [kryo] Write object reference 1941: HLA-A*24:152; 02:42 DEBUG: [kryo] Write object reference 1945: chrUn_JTFH01001224v1_decoy; 02:42 DEBUG: [kryo] Write object reference 1949: HLA-B*14:01:01; 02:42 DEBUG: [kryo] Write object reference 1953: chr5_GL949742v1_alt; ...; 02:42 DEBUG: [kryo] Write object reference 1942: SAMSequenceRecord(name=HLA-A*24:152,length=3176,dict_index=2919,assembly=null,alternate_names=[]); 02:42 DEBUG: [kryo] Write object reference 1946: SAMSequenceRecord(name=chrUn_JTFH01001224v1_decoy,length=1051,dict_index=2066,assembly=null,alternate_names=[]); 02:42 DEBUG: [kryo] Write object reference 1950: SAMSequenceRecord(name=HLA-B*14:01:01,length=3312,dict_index=2999,assembly=null,alternate_names=[]); 02:42 DEBUG: [kryo] Write object reference 1954: SAMSequenceRecord(name",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8134:461,Log,Log,461,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8134,1,['Log'],['Log']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Mutect2_. ### Affected version(s); - GATK 4.1.4.1. ### Description ; When running Mutect2 (from GATK v4.1.4.1) using the following command:. `gatk Mutect2 -R [path to grch37-1kg.fa] -I testcase.bam -O pon.vcf`. to create a PoN on NovaSeq WGS-data processed through the best practice pipeline (with the BQSR-steps run through the Spark-enabled tools, and bwa mem with -Y flag) I get the following error in multiple regions:. [Stacktrace](https://www.dropbox.com/s/d2n5zflj9u11oj8/stacktrace.png?dl=0). AFAIK this is related to the new code path introduced in #6240 and seem to be triggered when there are more than 2 reads supporting a fragment but all of them are either duplicate reads or supplemntary/secondary alignments. Any input is greatly appreciated. I guess a temporary fix is to use the --independent-mates flag (although haven't tried it yet -- how much worse mutation calling performance do one incur when using that flag?). #### Steps to reproduce; Use the following small test case .bam-file as input to the command specified above:. [Testcase](https://www.dropbox.com/s/hilcj3aj0jnjdmh/testcase.bam?dl=0). #### Expected behavior; Completion of mutect2 without Exception. #### Actual behavior; Early termination of the mutect2 run due to raising an exception when trying to create a fragment with no read data to back it up. ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6310:236,test,testcase,236,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6310,4,"['Test', 'test']","['Testcase', 'test', 'testcase']"
Testability,## Bug Report. ### Affected tool(s) or class(es); _Somatic CNV caller_. ### Affected version(s); - [ ] https://hub.docker.com/r/broadinstitute/gatk/. ### Description ; _I am following the steps outlined here: https://gatkforums.broadinstitute.org/gatk/discussion/11682 to generate copy number variation plots. When I execute the steps using the example data I am able to generate plots similar to example plots noted on the page. But the plots I generate using my own datafiles do not look as expected. . Main differences between example data and experimental data processing : ; 1. Reference genome : GRCh37 (instead of GRCh38 in example)_. #### Steps to reproduce; _1. Reference genome : GRCh37 (instead of GRCh38 in example); 2. WES sample_. #### Expected behavior; _Expected plot :; ![test denoisedLimit4](https://user-images.githubusercontent.com/17917521/67444546-66df1c80-f5be-11e9-8887-26f7b07717b8.png); _. #### Actual behavior; _; ![experimental_datafile_plot denoisedLimit4](https://user-images.githubusercontent.com/17917521/67444584-9726bb00-f5be-11e9-9a0f-4a68717a0fd5.png); _. ----,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6225:789,test,test,789,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6225,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_. FilterAlignmentArtifacts. ### Affected version(s); - [x] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. 4.3.0.0. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._. ```; Using GATK jar /gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -XX:+UseNUMA -jar /gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar FilterAlignmentArtifacts -R /raid/bundle/hg38/Homo_sapiens_assembly38.fasta.gz -O WGS-NA12878.FilterAlignmentArtifacts.vcf --tmp-dir . -V WGS-NA12878.filtered.vcf -I WGS-NA12878.sorted.dedup.recal.bam --bwa-mem-index-image /raid/bundle/hg38/Homo_sapiens_assembly38.fasta.img; 11:24:09.761 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 11:24:09.942 INFO FilterAlignmentArtifacts - ------------------------------------------------------------; 11:24:09.942 INFO FilterAlignmentArtifacts - The Genome Analysis Toolkit (GATK) v4.3.0.0; 11:24:09.943 INFO FilterAlignmentArtifacts - For support and documentation go to https://software.broadinstitute.org/gatk/; 11:24:09.943 INFO FilterAlignmentArtifacts - Executing as root@D52BV-2U on Linux v4.15.0-202-generic amd64; 11:24:09.943 INFO FilterAlignmentArtifacts - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_352-8u352-ga-1~18.04-b08; 11:24:09.943 INFO FilterAlignmentArtifacts - Start Date/Time: February 24, 2023 11:24:09 AM CST; 11:24:09.943 INFO FilterAlignmentArtifacts - ------------------------------------------------------------; 11:24:09.943 INFO FilterAlignmentArtifacts - ------------------------------------------------------------; 11:24:09.943 INFO Filter",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8221:234,test,test,234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8221,2,"['log', 'test']","['logs', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_. `SortSamSpark --sort-order coordinate`. ### Affected version(s); - [ ] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. `4.4.0.0`. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._. An error occurs when using SortSamSpark to sort the large BAM file that contain long reads only (90x human wgs, min. read length>10kbp).; However, if the large BAM file contains short reads, it executes normally. #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_. ```shell; sysctl -w vm.max_map_count=2147483642; gatk SortSamSpark \; --input HG002-NA24385-GM24385.bam \; --output HG002-NA24385-GM24385.sorted.bam \; --sort-order coordinate \; --java-options ""-XX:+UnlockDiagnosticVMOptions -XX:GCLockerRetryAllocationCount=96 -XX:+UseNUMA -XX:+UseZGC -Xmx1794G"" \; --tmp-dir . \; -- \; --spark-runner LOCAL --spark-master local[96] --conf spark.local.dir=./tmp --conf spark.port.maxRetries=61495; ```. #### Expected behavior; _Tell us what should happen_. Output a sorted BAM file. #### Actual behavior; _Tell us what happens instead_. `java.lang.OutOfMemoryError: Required array length ? is too large`. The last lines of the log file.; ```; 11:00:42.884 INFO BlockManagerInfo - Removed taskresult_15758 on 172.20.19.130:43279 in memory (size: 10.5 MiB, free: 1076.2 GiB); 11:00:42.888 INFO TaskSchedulerImpl - Removed TaskSet 0.0, whose tasks have all completed, from pool; 11:00:42.902 INFO DAGScheduler - ResultStage 0 (sortByKey at SparkUtils.java:165) finished in 1652.742 s; 11:00:42.915 INFO DAGScheduler - Job 0 is finished. Cancelling potential speculative or zombie tasks for this job; 11:00:42.916 INFO TaskSchedulerImpl - Killing all running ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8949:248,test,test,248,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8949,2,"['log', 'test']","['logs', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_; Mutect2; ### Affected version(s); - [ ] 4.1.1.0. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._; We have run mutect2 on the same sample using the same input crams, references, and intervals. The only discernible difference is the docker image used that we built. The difference between the first and second one is that the first one was built without samtools, the second one with samtools. The third is exactly the same as the second except it was re-built about a year or more later. Looking at a count of the `PASS` results based on each:. |Run type |var count|; |---------------------------|---------|; |docker no samtools | 8265 |; |docker yes samtools | 8283 |; |docker yes samtools rebuilt | 8273 |; |docker no samtools recently built | 8271 |. Out of curiosity, we tried building the docker again without samtools, so in theory, the only possible change is that when each docker is built, apt update is run. The differences are small, but is that expected? That with and without samtools, and if `apt` packages change, mutect2 could be influenced?. #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_; I can't replicate scenario 1 in the table because it was built in 2019, so apt packages were different then.; Scenario 2 dockerPull: `docker pull kfdrc/gatk:4.1.1.0`; Scenario 3 dockerPull: `docker pull pgc-images.sbgenomics.com/d3b-bixu/gatk:4.1.1.0`; Scenario 4 dockerPull: `docker pull migbro/gatk:4.1.1.0L`. No samtools Dockerfile:; ```; FROM ubuntu:18.04; LABEL maintainer=""Miguel Brown (brownm28@email.chop.edu)"". ENV GATK4_VERSION 4.1.1.0. RUN apt update && apt install -y openjdk-8-jdk python wget unzip libgomp1; \; wget -q https://github.com/broadinstitute/g",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7269:234,log,logs,234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7269,1,['log'],['logs']
Testability,"## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_; Picard IlluminaBasecallsToSam and IlluminaBasecallsToFastq. ### Affected version(s); - [X] Latest public release version [4.2.0.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._; ""This bug has been fixed in Picard release https://github.com/broadinstitute/picard/releases/tag/2.25.4 - The version of gatk that you are using (4.2.0.0) was packaged with Picard https://github.com/broadinstitute/picard/releases/tag/2.25.0 in it (which has the bug)."" See [IlluminaBasecallsToSam and IlluminaBasecallsToFastq do not demultiplex NovaSeq barcoded reads](https://github.com/broadinstitute/picard/issues/1679) for details. The GATK release needs to be updated to contain Picard 2.25.4 or better. #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_; Run tools with NovaSeq run directory as input and many dual index barcodes. #### Expected behavior; _Tell us what should happen_; Reads having each of the dual index barcodes should be demultiplexed to separate files. #### Actual behavior; _Tell us what happens instead_; Reads having each of the dual index barcodes are all in the UNKNOWN files. ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7254:267,test,test,267,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7254,2,"['log', 'test']","['logs', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); _VariantEval, -O, --output_. ### Affected version(s); - [X] Latest public release version [4.1.0.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; Program starts then terminates with error:; `***********************************************************************`; `A USER ERROR has occurred: Couldn't read file file:///[.....]/X034.eval.grp. Error was: It doesn't exist.`; `***********************************************************************`. Note: The error is not thrown, and VariantEval completes successfully, if a zero-byte file with the name passed with the `-o` or `--output` arguments is created before executing VariantEval; For this example: `touch X034.eval.grp`. #### Steps to reproduce; Command line:; `gatk VariantEval -R $ref -L autosomes.list --eval W034.raw.annotated.vcf.gz --dbsnp dbsnp.vcf.gz -O X034.eval.grp`. #### Expected behavior; Expect the program to create its own output file (as other GATK tools do). #### Actual behavior; Terminates with error (above). ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5674:193,test,test,193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5674,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); `Funcotator`. ### Affected version(s); GATK 4.1.0.0 release. ### Description ; Funcotator returns a `NullPointerException` when trying to output compressed VCF:. ```; 15:35:26.085 INFO Funcotator - Creating a VCF file for output: XXXX; 15:35:26.125 INFO ProgressMeter - Starting traversal; 15:35:26.125 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; log4j:WARN No appenders could be found for logger (org.broadinstitute.hellbender.tools.funcotator.dataSources.vcf.VcfFuncotationFactory).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 15:35:26.328 INFO Funcotator - Shutting down engine; [February 15, 2019 3:35:26 PM EST] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.18 minutes.; Runtime.totalMemory()=3391094784; java.lang.NullPointerException; at htsjdk.tribble.index.tabix.TabixIndexCreator.finalizeFeature(TabixIndexCreator.java:106); at htsjdk.tribble.index.tabix.TabixIndexCreator.finalizeIndex(TabixIndexCreator.java:129); at htsjdk.variant.variantcontext.writer.IndexingVariantContextWriter.close(IndexingVariantContextWriter.java:177); at htsjdk.variant.variantcontext.writer.VCFWriter.close(VCFWriter.java:231); at org.broadinstitute.hellbender.tools.funcotator.vcfOutput.VcfOutputRenderer.close(VcfOutputRenderer.java:137); at org.broadinstitute.hellbender.tools.funcotator.Funcotator.closeTool(Funcotator.java:883); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:970); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:138); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgra",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5683:483,log,logger,483,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5683,2,['log'],"['logger', 'logging']"
Testability,## Bug Report. ### Affected tool(s) or class(es); `GermlineCNVCaller`. ### Affected version(s); - [x] Latest public release version [`4.3.0.0` and `4.4.0.0`]. ### Description ; `GermlineCNVCaller` pipeline provide different results with same GATK version (`4.3.0.0`) on different base Ubuntu images (`18.04` and `22.04`). Test results of GATK version `4.3.0.0` and `4.4.0.0` are same on Ubuntu 22.04 - I assume there are no changes in `GermlineCNVCaller` between `4.3.0.0` and `4.4.0.0`. #### Steps to reproduce; Command list:; ```sh; /soft/gatk-4.3.0.0/gatk PreprocessIntervals -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa --padding 0 -L chr1:10000-35000 -L chr22:198477-20003000 -imr OVERLAPPING_ONLY -O /outputs/gatk_intervals.interval_list. /soft/gatk-4.3.0.0/gatk AnnotateIntervals -L /outputs/gatk_intervals.interval_list -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa -imr OVERLAPPING_ONLY -O /outputs/gatk_intervals.interval_list.annotated.tsv. /soft/gatk-4.3.0.0/gatk CollectReadCounts -I /inputs/E07002_normal_alignment.bam -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY -O /outputs/E07002_normal_alignment.bam.counts.hdf5; /soft/gatk-4.3.0.0/gatk CollectReadCounts -I /inputs/E07002_tumor_alignment.bam -R /ref/GRCh38.d1.vd1/GRCh38.d1.vd1.fa -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY -O /outputs/E07002_tumor_alignment.bam.counts.hdf5. /soft/gatk-4.3.0.0/gatk DetermineGermlineContigPloidy -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY --contig-ploidy-priors /outputs/a_valid_ploidy_priors_table.tsv.copy.tsv --output /outputs/COHORT_runDir --output-prefix COHORT --input /outputs/E07002_normal_alignment.bam.counts.hdf5 --input /outputs/E07002_tumor_alignment.bam.counts.hdf5. /soft/gatk-4.3.0.0/gatk GermlineCNVCaller --run-mode COHORT -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY --annotated-intervals /outputs/gat,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8619:322,Test,Test,322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8619,1,['Test'],['Test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); `Mutect2` and `FilterMutectCalls`. ### Affected version(s); GATK 4.1.0.0 release (though I suspect this was also in 4.0.x). ### Description ; M2 force-calling multi-allelic sites using GGA mode results in automatic `mappinq_quality` filter if one allele does not have any reads mapped, even if the other variant allele has good mapping quality. In my testing this happened when I force-called the following IDH1 mutations:. ```; #CHROM POS ID REF ALT QUAL FILTER INFO; 2 209113112 . C A . . .; 2 209113112 . C T . . .; ```. The first listed is the common IDH1 R132H variant and the second listed is the less common but equally pathogenic R132L variant. The purpose for force-calling both variants is that one wants to absolutely exclude the possibility of either variant at this site. In most my tests, variants would fail `FilterMutectCalls` because only one of the multi-allelic alleles would be present, eg. *(representative except of `Mutect2` + `FilterMutectCalls` output)*. ```; VAR 	2	209113112	.	C	A,T; FILTER	mapping_quality;read_position; INFO	MMQ=60,0,60; FORMAT	GT:AD 0/1/2:56,0,47; ```. Only in rare cases would the variant site `PASS`, and that's when there would be at least one variant read in the second allele, eg:. ```; VAR 	2	209113112	.	C	A,T; FILTER	PASS; INFO	MMQ=60,60,60; FORMAT	GT:AD 0/1/2:28,1,16; ```. #### Steps to reproduce; To reproduce this specific example you will need a BAM file with a C>T mutation at `2:209113112`, and no reads with an `A` at this position. You will then need to run M2 and `FilterMutectCalls` with `--genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles ...` set to a VCF with both lines as shown in the description. #### Expected behavior; `FilterMutectCalls` should not apply a `mapping_quality` filter if one of the alleles would pass. Perhaps the mapping quality filter could ignore alleles with zero mapped reads, rather than assigning a MMQ of zero by default? *Note that this issue would also",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5695:401,test,testing,401,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5695,2,['test'],"['testing', 'tests']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); `ParallelCopyGCSDirectoryIntoHDFSSpark`. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [2019-05-13]. ### Description . `ParallelCopyGCSDirectoryIntoHDFSSpark` behaves in the following strange way:. * under __master/latest__ release, it __fails__ to copy a GCS ""directory"" containing __BAMs__; * under __master/latest__ release, it __successfully__ copies a GCS ""directory"" containing __reference__; * changing the nio lib version from 81 to 66 in `build.gradle`, it __successfully__ copies GCS ""directories"" containing __reference__ or __BAMs__; * see attached logs. #### Steps to reproduce. Both scripts referred to below need to be updated accordingly, but trivially. * from the master branch, run the attached `test.nio.ver.81.sh`. * branch out from master, change the literal `81` to `66` on line 69 in `build.gradle`, run the attached `test.nio.ver.66.sh`. #### Expected behavior. Files in the ""directories"" given in the gs path copied successfully. #### Actual behavior; Fail. See logs attached. -------------; [test.nio.paraCopyHDFSSpark.zip](https://github.com/broadinstitute/gatk/files/3174143/test.nio.paraCopyHDFSSpark.zip). UPDATE:; reuploaded attachment",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5935:671,log,logs,671,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5935,6,"['log', 'test']","['logs', 'test']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); `PrintReadsSpark`. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description . I first encountered this type of error in a prototype tool I'm writing, so to dig further about what's happening, I run our simplest Spark tool&mdash;`PrintReadsSpark`. `PrintReadsSpark` reports errors when intervals are specified in a BED file (see command given in the stack trace). * Scenario 1: run with a WGS bam and give intervals via `-L PATH_TO_BED_FILE`, error is reported; * Scenario 2: run with the WGS bam and give intervals via `-L chrX:[0-9]+-[0-9]+`, no error; * Scenario 3: run with bam that is shrunk from the WGS bam by including reads only in the union of intervals, then with `-L PATH_TO_BED_FILE`, no error; * Scenario 4: run with bam that is shrunk from the WGS bam by including reads only in the union of intervals, then with `-L chrX:[0-9]+-[0-9]+`, no error; * Scenario 5: download the shrunken bam to local machine and run `PrintReadsSpark` with `-L PATH_TO_BED_FILE`, no error. Stack trace from scenario 1:; ```; ./gatk PrintReadsSpark \; -I hdfs://shuang-small-m:8020/data/HG00512.cram.samtools1_9.bam \; -O hdfs://shuang-small-m:8020/results/temp.bam \; -L hdfs://shuang-small-m:8020/data/intervals.bed \; -- \; --spark-runner GCS \; --cluster shuang-small \; --project broad-dsde-methods. Using GATK jar /Users/shuang/GATK/gatk/build/libs/gatk-spark.jar; found cached jar: gs://broad-dsde-methods/shuang/tmp/gatk-jars/gatk-spark_5710525a8758807e46bbb660ac998e63.jar. Replacing spark-submit style args with dataproc style args. --cluster shuang-small --project broad-dsde-methods -> --cluster shuang-small --project broad-dsde-methods --properties spark.kryoserializer.buffer.max=512m,spark.driver.maxResultSize=0,spark.driver.userClassPathFirst=false,spark.io.compression.codec=lzf,spark.yarn.executor.memoryOverhead=600,spark.driver.extraJavaOptions=-DGATK_STA",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5051:184,test,test,184,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5051,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); `SAMRecord` from `GATKRead`. ### Affected version(s); - [x] Latest master branch as of January 30, 2024. ### Description ; When I run a tool with a bam file as input, the following code will give me a null:; ```java; @Override; public void apply(GATKRead read, ReferenceContext referenceContext, FeatureContext featureContext) {. // Build sets of read IDs for each file.; final SAMRecord samRecord = read.convertToSAMRecord(getHeaderForReads());; final SAMFileSource fileSource = samRecord.getFileSource();; System.out.println(fileSource);; ```. Output:; (a long list of `null`). #### Steps to reproduce; Create a ReadWalker that takes in a bam file. Here is an integration test that will replicate the issue:. ```java; public class ReadConcordanceIntegrationTest extends CommandLineProgramTest {. @Test; public void testTwoCrams() throws IOException {; final File output = createTempFile(""testReadConcordanceOutputFile"", "".txt"");; final File input = new File(GATKBaseTest.largeFileTestDir, ""expected.K-562.splitNCigarReads.chr20.bam"");. final ArgumentsBuilder args = new ArgumentsBuilder();. args.addInput(input);; this.runCommandLine(args.getArgsArray());; }; }; ```. #### Expected behavior; Output should be the file used in the read data source (bam file) for each read. #### Actual behavior; I get nulls instead",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8671:724,test,test,724,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8671,4,"['Test', 'test']","['Test', 'test', 'testReadConcordanceOutputFile', 'testTwoCrams']"
Testability,"## Bug Report. ### Affected tool(s) or class(es); `org.broadinstitute.hellbender.tools.spark.sv.discovery.inference.BreakpointsInference`, hence affecting the location of breakpoint output by the SV discovery pipeline. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description . Micro-homology around breakpoints affects where we place breakpoints in the SV.; Take the simplest example of deletion; where (10A10G10A); ```; ......AAAAAAAAAAGGGGGGGGGGAAAAAAAAAA......; ```; becomes (10A); ```; ......AAAAAAAAAA......; ```; Here we have a homology of exactly 10A's.; When we detect the deletion by studying the alignment signature, the alt haplotype would have two alignments mapped to the reference, one ends just before the G-block, one starts just after the G-block, with the A-block on the alt haplotype mapped to two places.; We follow the left-align/left-justify convention, and place the POS 1-bp before the left most A (hence saying `10A10G` was deleted, as opposed to right-justify which would say `10G10A` deleted, in fact without the convention any contiguous substring of 20 bp long of `10A10G10A` would be correct). However, it can be imagined the homologous sequences flanking the G's are not exactly the same, or may not be the same length (small indels), and the alignments would contain small gaps in their CIGARs. By assuming the homologous sequence are of the same length, which is what we are doing now, we could get the breakpoint location wrong. This is generally not a serious problem, but when the accumulated gap sizes are large enough, we can end up too-far off. A similar issue is when inferring SVLEN for small tandem duplications, where we are assuming the extra copies have the same length. This is not always true and when the `DUP_SEQ_CIGARS` annotation is available, it should be easily fixable. When it is not available, one could use the difference between `SEQ_ALT_HAPLOTYPE` and END-POS",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4883:334,test,test,334,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4883,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s) or class(es); gatk GenotypeGVCFs. ### Affected version(s); - [X] Latest public release version [GATK 4.1.9.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; Files generated by 'gatk GenotypeGVCFs' with french locale in February (Février in french) August (Août) or December (Décembre) have ISO-8859-1 encoding instead of UTF-8 encoding. Indeed, the output files have this line:. `##GATKCommandLine=<ID=GenotypeGVCFs,CommandLine=""GenotypeGVCFs --output /volumes/vol002/COVID/GenomicDB/vcf/COVID.05022021.int00.vcf.gz --variant gendb://dbtot/int00 --reference /volumes/vol002/reference/human_g1k_v37.fasta --tmp-dir /volumes/vol002/COVID/GenomicDB/tmp/tmpint00 --include-non-variant-sites false --merge-input-intervals false --input-is-somatic false --tumor-lod-to-emit 3.5 --allele-fraction-error 0.001 --keep-combined-raw-annotations false --annotate-with-num-discovered-alleles false --heterozygosity 0.001 --indel-heterozygosity 1.25E-4 --heterozygosity-stdev 0.01 --standard-min-confidence-threshold-for-calling 30.0 --max-alternate-alleles 6 --max-genotype-count 1024 --sample-ploidy 2 --num-reference-samples-if-no-call 0 --genomicsdb-use-bcf-codec false --genomicsdb-shared-posixfs-optimizations false --only-output-calls-starting-in-intervals false --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-index true --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --sites-only-vcf-output false --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-in",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7081:189,test,test,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7081,1,['test'],['test']
Testability,"## Bug Report. ### Affected tool(s); Mutect2. ### Affected version(s); 3.6. ### Description ; The AF field of MuTect2 is unpredictable depending on the input interval. For example, if I run with `-L chr7:140452736-140453536`, I get this at one site:; `chr7	140453136	.	A	T	.	PASS	ECNT=1;HCNT=27;MAX_ED=.;MIN_ED=.;NLOD=239.30;TLOD=243.81	GT:AD:AF:ALT_F1R2:ALT_F2R1:FOXOG:QSS:REF_F1R2:REF_F2R1	0/1:1489,145:0.049:69:76:0.524:45565,4764:771:718	0/0:1094,0:0.00:0:0:.:34322,0:549:545`; But, if I run with `-L chr7:140452836-140453436`, I get this at the same site:; `chr7	140453136	.	A	T	.	PASS	ECNT=1;HCNT=15;MAX_ED=.;MIN_ED=.;NLOD=239.98;TLOD=245.96	GT:AD:AF:ALT_F1R2:ALT_F2R1:FOXOG:QSS:REF_F1R2:REF_F2R1	0/1:1489,144:0.092:69:75:0.521:45567,4730:770:719	0/0:1097,0:0.00:0:0:.:34389,0:551:546`; Notice the major difference in AF between the two runs. Side note, the AF does not equal the alt count / (alt count + ref count)?. #### Steps to reproduce; Test files here:; `/humgen/gsa-scr1/schandra/micknudsen_MuTect2AF/bugreport_AF`. Command for interval size of 600:; `java -jar /humgen/gsa-hpprojects/GATK/bin/current/GenomeAnalysisTK.jar -T MuTect2 -R /humgen/gsa-hpprojects/GATK/bundle/2.8/hg19/ucsc.hg19.fasta -I:normal /humgen/gsa-scr1/schandra/micknudsen_MuTect2AF/bugreport_AF/normal_chr7.12.bam -I:tumor /humgen/gsa-scr1/schandra/micknudsen_MuTect2AF/bugreport_AF/tumor_chr7.12.bam -o Sheila.MuTect2.vcf -L chr7:140452836-140453436. Command for interval size of 800:; `java -jar /humgen/gsa-hpprojects/GATK/bin/current/GenomeAnalysisTK.jar -T MuTect2 -R /humgen/gsa-hpprojects/GATK/bundle/2.8/hg19/ucsc.hg19.fasta -I:normal /humgen/gsa-scr1/schandra/micknudsen_MuTect2AF/bugreport_AF/normal_chr7.12.bam -I:tumor /humgen/gsa-scr1/schandra/micknudsen_MuTect2AF/bugreport_AF/tumor_chr7.12.bam -o Sheila.MuTect2.400.vcf -L chr7:140452736-140453536`. ----. This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/33762#Comment_33762",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2295:949,Test,Test,949,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2295,1,['Test'],['Test']
Testability,"## Bug Report. ### Affected tool; CreateSomaticPanelOfNormals. ### Affected version; Tested on version 4.1.8.0 (likely commit 3e921c6, GenomicsDB 1.3.0 #6654). ### Description ; Panel of normals generated from version 4.1.8.0 has some ~28% less records (~52% less ALT alleles) than one created with 4.1.7.0 (tested at commit 9cc92e3) with all input data and arguments unchanged. The GenomicsDB version does not seem to matter as PoN created running CreateSomaticPanelOfNormals on 4.1.8.0 has the result is about the same regardless of whether GenomicsDBImport was run on 4.1.7.0 or 4.1.8.0. CreateSomaticPanelOfNormals on 4.1.7.0 fails to run on the new GenomicsDBs. |Mutect2|GenomicsDB|CreateSomaticPanelOfNormals|Output|; |---|---|---|---|; |4.1.7.0|4.1.7.0|4.1.7.0|100% alleles (reference)|; |4.1.8.0|4.1.8.0|4.1.7.0|expected error|; |4.1.7.0|4.1.7.0|4.1.8.0|48% alleles|; |4.1.8.0|4.1.8.0|4.1.8.0|48% alleles|. #### Steps to reproduce; The PoN was created with GRCh38, scattered over chromosomes. Mutect command:; ```; $gatk/gatk --java-options ""-Xmx4G"" Mutect2 \; 	-R $reference -L $chr \; 	-I $bam --max-mnp-distance 0 \; 	-O @out1@; ```. GenomicsDBImport command:; ```; $gatk/gatk --java-options ""-Xms8G -Xmx8G"" GenomicsDBImport \; 	-R $reference -L $chr \; 	--sample-name-map ${inputGenomicsDB.out1} \; 	--genomicsdb-workspace-path @folder1@; ```. CreateSomaticPanelOfNormals:; ```; $gatk/gatk --java-options ""-Xms8G"" CreateSomaticPanelOfNormals \; 	-R $reference -V gendb://@folder1@ -O @out1@ \; 	--germline-resource $gnomad \; 	--max-germline-probability 0.5; ```. #### Expected behavior; Based on description of the GenomicsDB 1.3.0 update, CreateSomaticPanelOfNormals is expected to behave similarly in 4.1.8.0 as before with the output PoN containing a similar number of variants. #### Actual behavior; 28% of PoN records (52% alleles) are missing in 4.1.8.0 compared to 4.1.7.0. Although all spanning deletions are dropped in the new version, they account for only a small portion of th",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6744:85,Test,Tested,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6744,2,"['Test', 'test']","['Tested', 'tested']"
Testability,"## Bug Report. ### Affected version(s); - Latest master branch as of 1/12/2022. ### Description ; When I tried to build from the github repo, I received the following error:. FAILURE: Build failed with an exception. * Where:; Build file '/gatk/build.gradle' line: 688. * What went wrong:; A problem occurred evaluating root project 'gatk'.; > Could not resolve all files for configuration ':runtimeClasspath'.; > Could not find biz.k11i:xgboost-predictor:0.3.0.; Searched in the following locations:; - https://repo.maven.apache.org/maven2/biz/k11i/xgboost-predictor/0.3.0/xgboost-predictor-0.3.0.pom; - https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot/biz/k11i/xgboost-predictor/0.3.0/xgboost-predictor-0.3.0.pom; - https://oss.sonatype.org/content/repositories/snapshots/biz/k11i/xgboost-predictor/0.3.0/xgboost-predictor-0.3.0.pom; - file:/root/.m2/repository/biz/k11i/xgboost-predictor/0.3.0/xgboost-predictor-0.3.0.pom; Required by:; project :. * Try:; > Run with --stacktrace option to get the stack trace.; > Run with --info or --debug option to get more log output.; > Run with --scan to get full insights. * Get more help at https://help.gradle.org. #### Steps to reproduce; `git clone https://github.com/broadinstitute/gatk.git`; `cd gatk/`; `./gradlew bundle`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7636:1074,log,log,1074,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7636,1,['log'],['log']
Testability,"## Bug Report. ### GermlineCNVCaller. ### Affected version(s); - [ ] (GATK) v4.2.1.0. ### Description ; Java exception raised when aggregating counts for samples with a name shorter than 3 characters. For example, in the pasted logs, it errors out when processing sample with interval read counts in `94.mkdup.sort.rg.tsv`. And I found removing the sample from the list of files would avoid the error. . ### Logs:. `; 06:49:05.526 INFO GermlineCNVCaller - Aggregating read-count file output/gCNV/bulkDNAseq_BGI/F20FTSAPHT0350_MUSyfqR/count_tsv/713.mkdup.sort.rg.tsv (40 / 323); 06:49:07.999 INFO GermlineCNVCaller - Aggregating read-count file output/gCNV/bulkDNAseq_BGI/F20FTSAPHT0350_MUSyfqR/count_tsv/252.mkdup.sort.rg.tsv (41 / 323); 06:49:10.433 INFO GermlineCNVCaller - Aggregating read-count file output/gCNV/bulkDNAseq_BGI/F20FTSAPHT0350_MUSyfqR/count_tsv/547.mkdup.sort.rg.tsv (42 / 323); 06:49:13.341 INFO GermlineCNVCaller - Aggregating read-count file output/gCNV/bulkDNAseq_BGI/F20FTSAPHT0350_MUSyfqR/count_tsv/154.mkdup.sort.rg.tsv (43 / 323); 06:49:15.782 INFO GermlineCNVCaller - Aggregating read-count file output/gCNV/bulkDNAseq_BGI/F20FTSAPHT0350_MUSyfqR/count_tsv/651.mkdup.sort.rg.tsv (44 / 323); 06:49:18.251 INFO GermlineCNVCaller - Aggregating read-count file output/gCNV/bulkDNAseq_BGI/F20FTSAPHT0350_MUSyfqR/count_tsv/94.mkdup.sort.rg.tsv (45 / 323); 06:49:20.605 INFO GermlineCNVCaller - Shutting down engine; [August 13, 2021 6:49:20 AM GMT] org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller done. Elapsed time: 2.27 minutes.; Runtime.totalMemory()=2076049408; java.lang.IllegalArgumentException: Prefix string too short; at java.io.File.createTempFile(File.java:2001); at org.broadinstitute.hellbender.utils.io.IOUtils.createTempFileInDirectory(IOUtils.java:685); at org.broadinstitute.hellbender.utils.io.IOUtils.createTempFile(IOUtils.java:666); at org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller.lambda$writeIntervalSubsetReadCountFiles$",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7410:228,log,logs,228,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7410,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"## Bug Report. ### Tool; FilterAlignmentArtifacts. ### Affected version(s); 4.2.0.0 and 4.1.9.0, run from local jar or docker. ### Description ; FilterAlignmentArtifacts crushes repetitively in the same position of the input mutect2 vcf `m2.vcf.gz` (chrX:63457865). But, it finishes task successfully when only the last variant from the output file is present in the input vcf file. ; I cut the input vcf around the troublesome variant to reproduce the error on a smaller input and: ; 1. Error did not occur when the input was very small ; 2. FilterAlignmentArtifacts finished run at different variant (chrX:73769127) when analyzing the smaller input (`test.vcf.gz`) . The log issue looks very similar to that described here [#7162)](https://github.com/broadinstitute/gatk/issues/7162), but the *Problematic frame* information is different. ; As suggested in this issue [#5690](https://github.com/broadinstitute/gatk/issues/5690), the problem disappears when using gatk 4.1.3.0 on the same inputs. . log:; ```bash; 17:37:20.674 INFO ProgressMeter - chr20:43968267 10.6 44000 4132.2; 17:37:38.646 INFO ProgressMeter - chr22:22736335 10.9 45000 4110.5; 17:37:52.672 INFO ProgressMeter - chrX:7000139 11.2 46000 4113.9; 17:38:05.421 INFO ProgressMeter - chrX:26360893 11.4 47000 4125.0; 17:38:17.207 INFO ProgressMeter - chrX:44917184 11.6 48000 4141.4; 17:38:29.312 INFO ProgressMeter - chrX:77681733 11.8 49000 4155.3; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fc0ccec5cdb, pid=15987, tid=15988; #; # JRE version: OpenJDK Runtime Environment (11.0.11+9) (build 11.0.11+9-Ubuntu-0ubuntu2.18.04); # Java VM: OpenJDK 64-Bit Server VM (11.0.11+9-Ubuntu-0ubuntu2.18.04, mixed mode, sharing, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # C [libc.so.6+0x97cdb] cfree+0x31b; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/share/apport/apport %p %s %c %d %P %E"" (or dumping to /home/k",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7247:653,test,test,653,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7247,2,"['log', 'test']","['log', 'test']"
Testability,"## Bug Report. Hi @jamesemery and @sooheelee ,. Thanks very much for looking into: https://github.com/broadinstitute/gatk/issues/5230. I am running into one additional error. Reads that contain an insert spanning the full length of the read are causing an exception in SplitNCigarReads. ### Affected tool(s) or class(es); SplitNCigarReads. ### Affected version(s); - Tested on 4.0.3.0 and also branch: je_splitNCigarReadsSplitError (gatk-4.0.10.0-4-gb0f0ab3). ### Description ; SplitNCigarReads gives an Exception when a read that is entirely an insertion is encountered. By contrast, HaplotypeCaller does not seem to have a problem with these reads. Example read:; ```; seq.1028598	163	chr20	3146413	60	100I	=	3146307	-106	CCAATAATTCGACCCTATAAATGATGACCTCCGTTATCGGAAGGGCACAGAACCGTCAGCCGCAACACCAGCAGCTGTAGGCCCTGCTGGGCGCGCTGGG	8;72442435768::8443224764768:84:7534457962;99:787;628:7557;::7:72878:7;:7;:8754;9:::87:8799:7:7:87::	YA:Z:chr20:3145675:600M138N208I599M	MC:Z:100M	PG:Z:MarkDuplicates	RG:Z:1	NH:i:1	HI:i:1	YM:i:0	nM:i:100	YO:Z:chr20:3146278:+:56S44M	MQ:i:60	AS:i:140	YX:i:49	mc:i:3146406	ms:i:2300; ```. #### Steps to reproduce; Command line:; ```; gatk \; --java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true' \; SplitNCigarReads \; --reference $REF \; --input 100I_rna.bam \; --output gatk.split.bam \; > split.log 2>&1; ```. A tiny BAM file illustrating the problem is attached (it is gzipped to allow Github upload).; [100I_rna.bam.gz](https://github.com/broadinstitute/gatk/files/2456955/100I_rna.bam.gz). #### Actual behavior; Here is the stacktrace:; ```; ***********************************************************************. A USER ERROR has occurred: Badly formed genome unclippedLoc: Parameters to GenomeLocParser are incorrect:The stop position 3146412 is less than start 3146413 in contig chr20. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$MalformedGenomeLoc: Badly formed genome unclippedLo",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5293:367,Test,Tested,367,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5293,1,['Test'],['Tested']
Testability,## Bug Report. In commit afc0e4. line 457:; return FastMath.log(x) - 0.5 / x - inv * ((1.0 / 12) + inv * (1.0 / 120 - inv / 252));. Is it should be:; return FastMath.log(x) - 0.5 / x - inv * ((1.0 / 12) - inv * (1.0 / 120 - inv / 252));,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6133:60,log,log,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6133,2,['log'],['log']
Testability,"## Bug Report. We're finding that in rare instances that `GenotypeGVCFs` can emit a variant with a spanned allele (`*`), and a genotype that references the spanned allele, but fail to emit the upstream spanning variant. This seems like a bug to me - either the spanning variant should be emitted _or_ the spanned allele should revert to a reference call. FWIW I have a sneaking suspicion that this is related to setting a non-zero value for `-stand-call-conf` (see #5793). My guess is that in one part of the code it determines the upstream variant _will_ be emitted so retains the allele as spanned, but then somewhere later the upstream variant is filtered out. ### Affected tool(s) or class(es); GenotypeGVCFs. ### Affected version(s); - [x] Latest public release version [4.1.2.0]; - [ ] Latest master branch as of [not tested]. ### Description ; Here's the example from the VCF in the attached zip file:. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT test_sample; chr17 46806234 . TC T 148.64 . ... GT:AD:DP:F1R2:F2R1:GQ:PL 0/1:208,25:239:116,16:90,8:99:156,0,6824; chr17 46806237 . TTCTCTCTCTCTC TTCTC,* 1528.04 . ... GT:AD:DP:F1R2:F2R1:GQ:PL 1/2:3,60,33:174:1,29,20:1,21,11:99:3633,1088,2142,1538,0,3285; ```. You can see from this that a) the first variant does not have a spanned allele, implying that there cannot be a spanning event further upstream and b) the second variant has a spanned allele that is present in the `1/2` genotype. #### Steps to reproduce. The attached zip file contains a reduced test case with a 3-record gVCF and a 2-record VCF that exhibits the problem. To reproduce:. 1. Unzip the attached zip file; 2. Edit `command.sh` to put in the path to HG19; 3. Run `. command.sh` in the directory with the extracted files. #### Expected behavior; Either the spanning variant should be emitted, or the spanned allele should not be. #### Actual behavior; A spanned allele is emitted when there is no spanning variant!. ZIP file with test case: [spanned_allele_not_spanne",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6031:824,test,tested,824,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6031,1,['test'],['tested']
Testability,"## Bug Report. getBasesAndBaseQualitiesAlignedOneToOne behaves differently, in respect to the existence of SOFT_CLIP, on reads that contains and do not contain INDELS (due to optimised code path). When no INDELS present, it returns arrays of clipped length; When INDELS present, it returns arrays of unclipped length (with NUL bytes past actual unclipped content). ### Affected tool(s) or class(es); AlignmentUtils.getBasesAndBaseQualitiesAlignedOneToOne . ### Affected version(s); Latest. ### Description ; When adding a test case (see steps to reproduce):. expected [CGATCG] but found [ATCGAT\0\0",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8040:522,test,test,522,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8040,5,['test'],"['test', 'tests']"
Testability,"## Bug Report; 18:47:11.757 INFO Funcotator - Shutting down engine; [September 19, 2021 6:47:11 PM CST] org.broadinstitute.hellbender.tools; .funcotator.Funcotator done. Elapsed time: 0.13 minutes.; Runtime.totalMemory()=1885339648; **org.broadinstitute.hellbender.exceptions.GATKException: Unable to query; the database for geneName: WASH7P**; ....; at org.broadinstitute.hellbender.cmdline.CommandLineProgram.ins; tanceMainPostParseArgs(CommandLineProgram.java:192); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.ins; tanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Mai; n.java:160); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); at org.broadinstitute.hellbender.Main.main(Main.java:289); **Caused by: org.sqlite.SQLiteException: [SQLITE_IOERR_LOCK] I/O error i; n the advisory file locking logic (disk I/O error)**; at org.sqlite.core.DB.newSQLException(DB.java:909); ### Affected version(s); GATK 4.1.9.0. ### Description ; GATK Funcotator [SQLITE_IOERR_LOCK] I/O error in the advisory file locking logic (disk I/O error). I downloaded the data-sources by ""gsutil cp gs://broad-public-datasets/funcotator/funcotator_dataSources.v1.7.20200521s.tar.gz ."". I can't find useful information for this error. Thank you. #### Steps to reproduce; Using GATK jar /lustre1/ruibinxi_pkuhpc/ljx/software/gatk-4.1.9.0/gatk-; package-4.1.9.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_i; o_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjd; k.compression_level=2 -jar /lustre1/ruibinxi_pkuhpc/ljx/software/gatk-4; .1.9.0/gatk-package-4.1.9.0-local.jar Funcotator -R /home/ruibinxi_pkuh; pc/lustre1/ljx/reference_genomes/hg38_bwa/hg38.fa -V /home/ruibinxi_pku; hpc/lustre1/ljx/data/raodn/WES/GATK/P14P_filtered.vcf.gz -O /home/ruibi; nxi_pkuhpc/lustre1/ljx/data/raodn/WES/GATK/P14P_filtered_funcotator.maf; --output-file-format MAF --data-sources-path /home/ruibinx",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7474:877,log,logic,877,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7474,1,['log'],['logic']
Testability,"## Bug Report; GenotypeGVCFs stuck indefinitely at ""Initializing engine"" step. ### Affected tool(s) or class(es); gatk GenotypeGVCFs; ### Affected version(s); GATK v4.1.4.1 (installed in a `conda` convironment from the bioconda channel), on a RHEL server 7.6 (Maipo). ### Description ; Following the recommended pipeline of HaplotypeCaller, GenomicsDBImport and then GenotypeGVCFs, the last command hangs indefinitely and from the log file, it seems like it doesn't get past the ""Initialize engine"" step. This is an example of the standard error stream (after the `GenotypeGVCFs` job reached 20 hours wall time and was killed) :; ```; 22:28:44.293 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/export/user/home/miniconda3/envs/aDNA/share/gatk4-4.1.4.1-1/gatk-package-4.1.4.1-local.; jar!/com/intel/gkl/native/libgkl_compression.so; Dec 17, 2020 10:28:44 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 22:28:44.639 INFO GenotypeGVCFs - ------------------------------------------------------------; 22:28:44.640 INFO GenotypeGVCFs - The Genome Analysis Toolkit (GATK) v4.1.4.1; 22:28:44.640 INFO GenotypeGVCFs - For support and documentation go to https://software.broadinstitute.org/gatk/; 22:28:44.640 INFO GenotypeGVCFs - Executing as user@gc-prd-hpcn002 on Linux v3.10.0-957.27.2.el7.x86_64 amd64; 22:28:44.640 INFO GenotypeGVCFs - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_192-b01; 22:28:44.640 INFO GenotypeGVCFs - Start Date/Time: December 17, 2020 10:28:44 PM AEST; 22:28:44.640 INFO GenotypeGVCFs - ------------------------------------------------------------; 22:28:44.640 INFO GenotypeGVCFs - ------------------------------------------------------------; 22:28:44.640 INFO GenotypeGVCFs - HTSJDK Version: 2.21.0; 22:28:44.640 INFO GenotypeGVCFs - Picard Version: 2.21.2; 22:28:44.640 INFO GenotypeGVCFs - HTSJDK Defaults.COMPRESSION_LEVEL : 2; ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7007:431,log,log,431,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7007,1,['log'],['log']
Testability,"## Bug Report; JDK8 is no longer available for the current stable Debian release (buster). Trying to run gatk with an OpenJDK11 install fails. I anticipate a WONTFIX since this is dependency related, but I figured it would be good to let people know. ### Affected tool(s) or class(es); GATKRead, probably others too. ### Affected version(s); - [x] Latest public release version [4.1.2.0]; - [ ] Latest master branch as of [didn't test]. ### Description ; ```; Exception in thread ""main"" java.lang.IncompatibleClassChangeError: Inconsistent constant pool data in classfile for class org/broadinstitute/hellbender/transformers/ReadTransformer. Method 'org.broadinstitute.hellbender.utils.read.GATKRead lambda$identity$d67512bf$1(org.broadinstitute.hellbender.utils.read.GATKRead)' at index 65 is CONSTANT_MethodRef and should be CONSTANT_InterfaceMethodRef; 	at org.broadinstitute.hellbender.transformers.ReadTransformer.identity(ReadTransformer.java:30); 	at org.broadinstitute.hellbender.engine.GATKTool.makePreReadFilterTransformer(GATKTool.java:345); 	at org.broadinstitute.hellbender.engine.GATKTool.getTransformedReadStream(GATKTool.java:374); 	at org.broadinstitute.hellbender.engine.ReadWalker.traverse(ReadWalker.java:93); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1039); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); 	at org.broadinstitute.hellbender.Main.main(Main.java:291); ```. This error seems related to the JRE version. You can still install JDK8 manually but that's not ideal for many users. #### Steps to reproduce; Run GATK on OpenJDK11. ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6053:430,test,test,430,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6053,1,['test'],['test']
Testability,"## Bug Report; when I run the MarkDuplicatesSpark, it throws me an error: basically it shows the spark engine stopped when run this function. ; the part of the error log is here:; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/rnaseq_pipeline_app/Apps/GATK/gatk-4.1.9.0/gatk-package-4.1.9.0-local.jar) to method java.nio.Bits.unaligned(); WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; 21/01/12 15:50:31 INFO SparkContext: Running Spark version 2.4.5; 21/01/12 15:50:31 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 21/01/12 15:50:31 INFO SparkContext: Submitted application: MarkDuplicatesSpark; 21/01/12 15:50:31 INFO SecurityManager: Changing view acls to: root; 21/01/12 15:50:31 INFO SecurityManager: Changing modify acls to: root; 21/01/12 15:50:31 INFO SecurityManager: Changing view acls groups to: ; 21/01/12 15:50:31 INFO SecurityManager: Changing modify acls groups to: ; 21/01/12 15:50:31 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(root); groups with view permissions: Set(); users with modify permissions: Set(root); groups with modify permissions: Set(); 21/01/12 15:50:31 INFO Utils: Successfully started service 'sparkDriver' on port 36657.; 21/01/12 15:50:31 INFO SparkEnv: Registering MapOutputTracker; 21/01/12 15:50:31 INFO SparkEnv: Registering BlockManagerMaster; 21/01/12 15:50:31 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information; 21/01/12 15:50:31 INFO B",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7035:166,log,log,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7035,1,['log'],['log']
Testability,"## Description; A user wants to run Funcotator with a mouse sample but has an issue running IndexFeatureFile. The GencodeGTF parser is specific to human data. Funcotator could be useful for users with non-human data if there is a workaround for these errors. ### GATK Information; GATK 4.1.9.0; gatk IndexFeatureFile -I gencode.vM25.annotation.gtf; This request was created from a contribution made by T. Li on January 25, 2021 04:37 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/360076815852-Error-Running-IndexFeatureFile-on-Ensembl-Mouse-GTF-file-](https://gatk.broadinstitute.org/hc/en-us/community/posts/360076815852-Error-Running-IndexFeatureFile-on-Ensembl-Mouse-GTF-file-). #### Error Log. ```; Using GATK jar /gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar ; ; Running: ; ; java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -jar /gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar IndexFeatureFile -I gencode/mm10/gencode.vM25.annotation.gtf ; ; 04:33:13.081 INFO NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl\_compression.so ; ; Jan 25, 2021 4:33:13 AM shaded.cloud\_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine ; ; INFO: Failed to detect whether we are running on Google Compute Engine. ; ; 04:33:13.195 INFO IndexFeatureFile - ------------------------------------------------------------ ; ; 04:33:13.195 INFO IndexFeatureFile - The Genome Analysis Toolkit (GATK) v4.1.9.0-SNAPSHOT ; ; 04:33:13.195 INFO IndexFeatureFile - For support and documentation go to [https://software.broadinstitute.org/gatk/](https://software.broadinstitute.org/gatk/) ; ; 04:33:13.195 INFO IndexFeatureFile - Executing as root@b4c480938d0d on Linux v5.4.0-1029-aws amd64 ; ; 04:33:13.195 INFO IndexFeatureFile - Java runtime: OpenJDK 64-Bit Server",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7054:716,Log,Log,716,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7054,1,['Log'],['Log']
Testability,"## Documentation request. ### Description ; I propose that installation of gcc be added to the instructions on the GATK Github README.md. If gcc is not installed, HaplotypeCaller complains that the AVX instruction set is not available, even when it is. It falls back to slower LOGLESS_CACHING PairHMM. The fault is missing libgomp1, which is a required dependency of gcc. Since this documentation request is related to a ""bug"" that comes about from not installing necessary libraries, I'll include the bug report format below, in case someone else searches for solutions to this problem, as suggested by @lbergelson. ### Affected tool(s) or class(es); _HaplotypeCaller_, or any other tool that uses _PairHMM_. ### Affected version(s); -I think all as of _2019-06-20_. I tested on release version _4.1.2.0_. #### Steps to reproduce; Run HaplotypeCaller from a released jar on an Ubuntu VM that supports the AVX instruction set. Critically, do *NOT* install gcc on the VM. Installing gcc fixes this problem. #### Expected behavior; If you install gcc, that results in the installation of libgomp1, which allows the Intel library to load and use AVX acceleration. You could probably install libgomp1 on its own, but I did not test that.; > 14:51:01.013 INFO NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/ubuntu/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_utils.so; > 14:51:01.015 INFO NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/home/ubuntu/gatk-4.1.2.0/gatk-package-4.1.2.0-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so; > 14:51:01.053 INFO IntelPairHmm - Using CPU-supported AVX-512 instructions; > 14:51:01.053 INFO IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM; > 14:51:01.054 INFO IntelPairHmm - Available threads: 16; > 14:51:01.054 INFO IntelPairHmm - Requested threads: 8; > 14:51:01.054 INFO PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation. #### Actual b",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6012:770,test,tested,770,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6012,1,['test'],['tested']
Testability,"## Documentation request. ### Description ; I was unable to successfully follow the R setup instructions required to run integration tests locally. I don't know whether this is a general concern regarding initial setup on Mac OS X High Sierra 10.13.6, or the problem is specific to my system. . #### R installation itself; Expected: `brew install R` would install R with all necessary core functionality.; Actual: `brew install R` installed a version of R without X11 support. The binary I downloaded from [CRAN](https://cran.r-project.org/bin/macosx/) had the proper support. #### R package installation; Expected `sudo Rscript scripts/docker/gatkbase/install_R_packages.R` would install the necessary packages for R scripts needed.; Actual: Failure to compile source packages, with an error like `clang: error: unsupported option '-fopenmp'`. I made some attempts to update my local `clang` but was unsuccessful. Instead, I installed the packages at the R prompt:; ```; $ R; > install.packages('ggplot2'); > install.packages('reshape'); > install.packages('gplots'); > install.packages('gridExtra'); > install.packages('gsalib'); > install.packages('data.table'); > quit(); ```. After doing so, my test run `TEST_TYPE=integration ./gradlew shadowJar test` succeeded.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5389:133,test,tests,133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5389,3,['test'],"['test', 'tests']"
Testability,"## Documentation request. Incorrect statistical definition in the article [Calculation of PL and GQ by HaplotypeCaller and GenotypeGVCFs](https://gatk.broadinstitute.org/hc/en-us/articles/360035890451). The conditional probability in the definition of PL is backwards. ### Description . The article contains the following (between the lines):. ----. The basic formula for calculating PL is:. $$ PL = -10 * \log{P(Genotype | Data)} $$. where P(Genotype | Data) is the conditional probability of the Genotype given the sequence Data that we have observed. The process by which we determine the value of P(Genotype | Data) is described here. ----. The genotype likelihood _and, thus, PL values_ are actually P(Data|Genotype). ; P(Genotype|Data) is the _posterior_.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7577:407,log,log,407,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7577,1,['log'],['log']
Testability,"## Documentation request; Filing issue at the request of @samuelklee stemming from the discussion in https://github.com/broadinstitute/gatk/pull/5829. ### Tool(s) or class(es) involved; GermlineCNVCaller and related tools. . ### Description ; In particular, I am currently needing information for the gCNV tutorial writeup for the following parameters. What direction increases sensitivity?. - `--depth-correction-tau` has a default of 10000.0 (10K) and defines the precision of read-depth concordance with the global depth value.; - `--p-active` has a default of 1e-2 (0.01) and defines the expected probability of CNV events.; - `p-alt` has a default of 1e-6 (0.000001) and defines the prior probability of CNV states. . Here are some other parameters of particular interest and descriptions I worked on with help from @mwalker174 and @samuelklee:; - Decreasing `--class-coherence-length` from its default of 10,000bp to 1000bp decreases the expected length of contiguous segments. Factor for bin size when tuning. ; - Decreasing `--cnv-coherence-length` from its default 10,000bp to 1000bp decreases the expected length of CNV events. Factor for bin size when tuning. ; - Turning off `--enable-bias-factors` from the default `true` state to `false` turns off active discovery of learnable bias factors. This should always be on for targeted exome data and in general can be turned off for WGS data. ; - Decreasing `--interval-psi-scale` from its default of 0.001 to 1.0E-6 reduces the scale the tool considers normal in per-interval noise.; - Decreasing `--log-mean-bias-standard-deviation` from its default of 0.1 to 0.01 reduces what is considered normal noise in bias factors.; - Decreasing `--sample-psi-scale` from its default of 0.0001 to 1.0E-6 reduces the scale that is considered normal in sample-to-sample variance. . In general, all of the parameter descriptions could be friendlier. ----",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5850:1560,log,log-mean-bias-standard-deviation,1560,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5850,1,['log'],['log-mean-bias-standard-deviation']
Testability,"## Feature request / documentation request. ### Tool(s) or class(es) involved; Reading files from non-public GCS paths. ### Description; I did not have Application Default Credentials set up when I tried to read from a private bucket. This failed, as expected. Could we add a comment explaining that running `gcloud auth application-default login` is the necessary step to making this work? I didn't see anything on the forum about how to solve this. The solution was in the comments to #2394. ### Observed; GATK errored out with a stack trace:; ```; code: 401; message: Anonymous caller does not have storage.objects.get access to joel-cram/SAM24339124.cram.; reason: required; location: Authorization; retryable: false; com.google.cloud.storage.StorageException: Anonymous caller does not have storage.objects.get access to joel-cram/SAM24339124.cram.; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:220); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:415); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:198); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:195); at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:89); at com.google.cloud.RetryHelper.run(RetryHelper.java:74); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:51); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:195); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:673); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:429); at org.broadinstitute.hellbender.engine.ReadsDataSource.<init>(ReadsDataSource.java:206); ```. ```; Caused by: shaded.cloud_nio.com.google.api.client.googleapis.json.GoogleJsonResponseException: 401 Unauthorized; {; ""code"" : 401,; ""errors"" : [ {; ""domain"" : ""global"",; ""location"" : ""Authoriza",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5468:341,log,login,341,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5468,1,['log'],['login']
Testability,"## Feature request. ### Description; I am using Splitintervals in a couple of spots in my somatic variant calling workflow to set up scatter parallelization. My problem is that some of my other tools require BEDs to operate correctly, and because GATK tools can use BED files as the interval (-L) parameter, I just default to using BED files. To do this, I run SplitIntervals and then IntervalListToBed, which works fine, but add a little (in my opinion) unneeded code, runtime, and logging. . To circumvent this, I was wondering if it would be possible to add a parameter to the SplitInterval tool for outputting BED files (or other formats, if other folks so desire that) instead of just interval_lists. I imagine it would make this tool all the more valuable in any bioinformaticist's toolbox, since it would allow convenient splitting of a number of common bioinformatics file formats.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6555:483,log,logging,483,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6555,1,['log'],['logging']
Testability,"## Feature request. ### Tool involved - GATK cnv_somatic_pair_workflow version 4.2.0.0; Link to main wdl - https://dockstore.org/workflows/github.com/broadinstitute/gatk/cnv_somatic_pair_workflow:4.2.0.0?tab=files. ### Description; Requesting for addition of a new feature called the `IndexFeatureFile` to be added as initial step in the `Funcotate_Segment` task of the `cnv_somatic_pair_workflow` wdl . **Detailed description:** ; An error was encountered while running the CNVSomaticPairWorkflow: `“A USER ERROR has occurred: Input /cromwell_root/fc-a21facc8-da03-4987-bb5b-dfadbfda2747/a923baec-ddd9-429a-b046-1f03c5ebda64/CNVSomaticPairWorkflow/42ba0311-ba93-4fdd-9b5e-bd7348c0ad42/call-CallCopyRatioSegmentsTumor/AMP-18-003-TIS.called.seg must support random access to enable traversal by intervals. If it's a file, please index it using the bundled tool IndexFeatureFile”`. - The FuncotateSegments task is asking an index file for the seg file, which is unusual to create an index for seg; - The same command from the cnv wdl was tested on-prem (Broad server using ish) by transferring all required files on-prem, this was done to replicate the error and find a solution without wasting compute money or resources on Terra; - To fix the issue, we initially ran Indexfilefeature tool (on-prem) for creating index file for the seg file, using the following command. ; `gatk IndexFeatureFile -I seg file`; - And then ran the main command `./gatk --java-options -Xmx2000m FuncotateSegments --data-sources-path data_sources_directory --ref-version hg19 --output-file-format SEG -R fasta_file_path --segments seg_file_path -O output_file_path/{basename}.seg.funcotated.tsv -L interval_list_path --transcript-selection-mode CANONICAL`. After this was complete, annotated file was generated correctly. In conclusion - the error identified is that `Indexfilefeature` tool had to be run as the first step. Requesting this change to be incorporated into `cnv_somatic_funcotate_seg_workflow.wdl`.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7294:1036,test,tested,1036,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7294,1,['test'],['tested']
Testability,"## Feature request. ### Tool(s) involved; VariantFiltration. ### Description; The tool throws a bunch of WARN messages when an annotation is missing a value. For example, when the RankSum annotations are not present in homozygous sites, the tool prints out a bunch of WARN messages that fill up the user's log file. Can this problematic WARN message be moved to be OneShotLogger?. This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/comment/42636#Comment_42636",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3828:306,log,log,306,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3828,1,['log'],['log']
Testability,"## Feature request. ### Tool(s) or class(es) involved. SV pipeline, Funcotator, etc. ### Description. In trying to build test data for SV, time and time again we face the problem of not being able to find actual desired events on the two chromosomes 20 and 21, hence end up having to painfully perform all kinds of coordinate hacks in order to have enough test coverage. It seems that the Funcotator team is also facing a similar issue. Therefore it will be great if the whole reference genome for HG38, and maybe HG19 as well, can be included in the tests, so that tool developers spend less time worrying about hassles in moving real events to chr20 and chr21. One of the potential downside is obvious: it increases the repo size and time for running tests (downloading a bigger file) on Travis.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5111:121,test,test,121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111,4,['test'],"['test', 'tests']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; All WDL testing. ### Description; Currently, our WDL tests are not instrumented to look inside the outputs of a cromwell run. This stifles some WDL testing of differing parameters, since (for example) we cannot easily see if a file was created, such as a bamout.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6013:63,test,testing,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6013,3,['test'],"['testing', 'tests']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; All WDL tests (Mutect2, CNV, Mitochondria pipeline, etc). ### Description; I'd like to be able to include tasks in GATK WDLs that use NIO (tasks with `String input_file` rather than `File input_file`). When I tried this with local git lfs files I got an error saying that the file could not be found (even though the file was being downloaded correctly). I then tried putting the file in `gs://hellbender/test/resources/large`, but when the tool tried to run on travis I got a permission error (see below). It would be great if the WDL tests all ran in the cloud since that's the main way we expect to run these WDLs. It would also be great it the local tests could account for NIO tasks (especially as we want to make more tasks use NIO in the future). ```; com.google.cloud.storage.StorageException: Error code 404 trying to get security access token from Compute Engine metadata for the default service account. This may be because the virtual machine instance does not have permission scopes specified. It is possible to skip checking for Compute Engine metadata by specifying the environment variable NO_GCE_CHECK=true.; at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:227); at com.google.cloud.storage.spi.v1.HttpStorageRpc.get(HttpStorageRpc.java:438); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:239); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:236); at shaded.cloud_nio.com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:105); at com.google.cloud.RetryHelper.run(RetryHelper.java:76); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:235); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:687); at java.nio.file.Files.exists(Files.java:2385); at htsjdk.samtools.util.IOUtil.asse",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5855:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5855,4,['test'],"['test', 'tests']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; Docker container environment for FireCloud / GATK. ### Description. I started a FireCloud instance with a GATK example. It looks like although conda does seem to be correctly pulling TensorFlow from the Anaconda repository, TensorFlow is still not being enabled with Intel MKL-DNN (which would make TensorFlow much faster on CPU). To test this, you can start a notebook or python session and do:. `import tensorflow; print(tensorflow.pywrap_tensorflow.IsMklEnabled())`. If True, then MKL-DNN is enabled in TensorFlow. Currently, this is showing up as false. I'm wondering whether I could work with someone (possibly Sam @lucidtronix) to update the conda environment. Also, the compute instances on FireCloud are using older CPU hardware (AVX-2). Is there any way to update this to a Skylake or Cascade Lake instance (AVX-512/VNNI)?. Thanks.; -Tony",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6020:389,test,test,389,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6020,1,['test'],['test']
Testability,"## Feature request. ### Tool(s) or class(es) involved; HaplotypeCaller of GATK v4.2.0.0. ### Description; Hi, I'm using GATK to call variants in Aedes Aegypti samples.; My output is spammed with WARNINGs (see below). I wondered:; 1. If this was an issue, i.e. my samples have bad QC/Coverage? Or is it something expected? In particular, there is one sample that seems to generates much more warnings than the others, so that's why I thought it could be a coverage issue?; 2. Is there a way to deactivate these warnings, or print them only once?. ### Log example (only the first lines, the log is several gigs filled with these warnings); ```; 16:16:40.556 WARN DepthPerSampleHC - Annotation will not be calculated at position 1:18938 and possibly subsequent; genotype for sample TOTO is not called; 16:16:40.556 WARN StrandBiasBySample - Annotation will not be calculated at position 1:18938 and possibly subsequent; genotype for sample TOTO is not called; 16:16:40.568 WARN DepthPerSampleHC - Annotation will not be calculated at position 1:18946 and possibly subsequent; genotype for sample TOTO is not called; 16:16:40.568 WARN StrandBiasBySample - Annotation will not be calculated at position 1:18946 and possibly subsequent; genotype for sample TOTO is not called; 16:16:40.726 WARN DepthPerSampleHC - Annotation will not be calculated at position 1:19264 and possibly subsequent; genotype for sample TOTO is not called; 16:16:40.726 WARN StrandBiasBySample - Annotation will not be calculated at position 1:19264 and possibly subsequent; genotype for sample TOTO is not called; 16:16:42.644 WARN DepthPerSampleHC - Annotation will not be calculated at position 1:20675 and possibly subsequent; genotype for sample TOTO is not called; 16:16:42.644 WARN StrandBiasBySample - Annotation will not be calculated at position 1:20675 and possibly subsequent; genotype for sample TOTO is not called; 16:16:42.646 WARN DepthPerSampleHC - Annotation will not be calculated at position 1:20685 and possibl",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7344:550,Log,Log,550,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7344,2,"['Log', 'log']","['Log', 'log']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; Mutect/HaplotypeCaller. ### Description. **(Background)**; I've spent a lot of time working with Mutect2 in the past year (I've built a whole workflow centered around this tool). But, while I recognize that the internal reassembly feature leads to ""best-in-class"" results in terms of calling variants, for my purposes it generally just creates headaches since it makes interpreting (certain) calls and verifying (certain) base-level behaviors/expectations very difficult (even when looking at the bamout and assembly logs). Moreover, while we know our alignment process isn't perfect, we think it's appropriate for our purposes, and we would gladly accept the loss of a few calls to be able to have more control over the expected behaviors. With that, I purpose a ""--skip-assembly"" flag that would cause the Mutect2/HaplotypeCaller engine to use the original alignment information to determine the haplotypes. . All that said, I imagine this could be a niche feature request, so I've spent some time digging through the source code trying to see if there could be a quick fix that could be made available to whatever group of developers would want this. It seemed like there could be another conditional branched added here (https://github.com/broadinstitute/gatk/blob/9ff3f8b180c063a3fa67dae129b0cbd04012448e/src/main/java/org/broadinstitute/hellbender/tools/walkers/haplotypecaller/readthreading/ReadThreadingAssembler.java#L159) to build a `resultSet` based on a non-assembly based approach. However, I'm not certain how using the original alignment information would affect the statistics employed for genotyping the candidate haplotypes, so I'm starting to back off implementing a custom fix and hoping the experts can help (or at least explain to me why this feature is not currently possible OR if there is a way that I can access this behavior that I'm missing). Thank you for the consideration. **(TL;DR)**; Introduce a `--skip-assembly`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7064:572,log,logs,572,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7064,1,['log'],['logs']
Testability,"## Feature request. ### Tool(s) or class(es) involved; SelectVariants (all versions -- tested most recently with 4.0.9.0). ### Description; SelectVariants has an option for excluding specific sites by rsID, `--exclude-ids`. Currently the matching is done by exact string matching. The limitation is that if I have a site with two rsIDs (as appears in the 1000 Genomes dataset), I can't filter against just one of them. For example, if I want to exclude this site from 1000G participant HG00096 (because it makes my synthetic data generator choke, if you must know):. 3523879:16	68401338	rs554836707;rs56090907	CGTGCGCTGCT	CTGCT,C	100	PASS <snip>. I have to specify `--exclude-ids 'rs554836707;rs56090907'` in my SelectVariants command. I would like to be able to specify just `--exclude-ids rs554836707` or `--exclude-ids rs56090907` with the same result (the site is excluded). Right now if I do use just one like that, the site is not excluded because the pattern fails to match. The reason I want to be able to do that is because there are several other similar sites that I need to exclude, so I make an array of rsIDs to exclude, e.g. provide . ````; Array[String] = [; ""rs575450111"",; ""rs151266607"",; ""rs557010312"",; ""rs564559134"",; ""rs560466806"",; ""rs140802196"",; ""rs554836707"",; ""rs56090907""; ]; ````. as an input to my WDL, which handles it in the command block as . --exclude-ids ${sep=' --exclude-ids ' exclusionList}. Right now I have to use . ````; [; ""'rs575450111;rs151266607'"",; ""'rs557010312;rs564559134'"",; ""'rs560466806;rs140802196'"",; ""'rs554836707;rs56090907'""; ]; ````. which is stylistically ugly and would not cover cases where only one rsID is annotated for whatever reason.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5260:87,test,tested,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5260,1,['test'],['tested']
Testability,"## Feature request. ### Tool(s) or class(es) involved; _FindBreakpointEvidenceSpark_, _StructuralVariationDiscoveryPipelineSpark_, when using _XGBoostEvidenceFilter.java_. ### Description; The SV pipeline filters BreakpointEvidence based on BreakpointDensityFilter, or optionally XGBoostEvidenceFilter. The XGBoostEvidenceFilter uses a saved classifier model trained with Python code external to the GATK. This poses two main problems:; 1) The external Python code was designed for proof-of-principle and method development, not maintainability or ease of use. Additionally, GATK users and developers are assumed to be familiar with Java, not necessarily Python.; 2) The external Python code must share heterogeneous data with Java for unit/integration tests (supplying test BreakpointEvidence, expected classifier features, and expected classifier probabilities). Currently this is done via JSON files organized to (invertibly) store Pandas or Numpy objects. The resulting code to load these JSON files in on the Java side is complex.; These problems can be resolved by; 1) Replacing external python code by porting to an **experimental** tool in the GATK.; 2) Replacing JSON files with a serialization strategy currently supported by the GATK (e.g. Kryo). Additional benefits can be obtained by ensuring that the classifier-training subroutines are sufficiently general to speed development for other projects that may want to use boosted decision trees for classification.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4922:753,test,tests,753,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4922,2,['test'],"['test', 'tests']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; _Funcotator tests_. ### Description; Now that the test data sources have been refactored, we need to go through and remove any extraneous data sources that are no longer necessary.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5350:105,test,test,105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5350,1,['test'],['test']
Testability,## Feature request. ### Tool(s) or class(es) involved; _FuncotatorUtilsUnitTest::provideDataForTestGetAlignedRefAllele_. ### Description; Need to add test cases for the following: ; - tests with Strand.NEGATIVE!!!!; - tests with alt allele longer/shorter than ref allele!,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5351:150,test,test,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5351,3,['test'],"['test', 'tests']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; _Funcotator_, _GencodeFuncotationFactoryUnitTest::testCreateFuncotations_. ### Description; The tests all assume `chr` is in contig names right now. This is wrong for the universal b37 reference that was put into the test baseline. However, our datasources are all hg19, so there is an evil mismatch. The horror of b37 vs hg19 raises it's ugly head once more. We need to instrument `GencodeFuncotationFactoryUnitTest::testCreateFuncotations` to allow for the mismatch.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5356:151,test,tests,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5356,3,['test'],"['test', 'testCreateFuncotations', 'tests']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; _Funcotator_. ### Description. Need to add more indel test cases for HG38 for completeness. The set of test cases should be: . {3' and 5' UTRs, exons, introns, intronic and exonic splice sites, 3' and 5' flanks}; x; lengths in bases of {1,2,3,5} (maybe a subset of these, TBD); x; {PIK3CA, MUC16 transcripts, HLA/alternate contig targets}; X; {insertion, deletion}; x; {hg38}",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5223:109,test,test,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5223,2,['test'],['test']
Testability,"## Feature request. ### Tool(s) or class(es) involved; _org.broadinstitute.hellbender.engine.ProgressMeter_. ### Description; `ProgressMeter` does not currently let the user know how much longer to expect a tool to run on its data. . This can be computed by keeping a tally of the number of entries complete, how long they take, and how many there are in total. . The expected remaining time should then be logged with each log statement.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5179:407,log,logged,407,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5179,2,['log'],"['log', 'logged']"
Testability,"## Feature request. ### Tool(s) or class(es) involved; combine_tracks.wdl. ### Description; In order for outputs from GATK CNV to be usable by GISTIC2, we need to have a conversion step. Here is mostly un-tested WDL that should work:. ```; #UNSUPPORTED -- simple conversion of a merged & pruned seg file (from the CNV postprocessing workflow) to the GISTIC2 format.; # No column headers printed. Each column is:; #; #(1) Sample (sample name); #(2) Chromosome (chromosome number); #(3) Start Position (segment start position, in bases); #(4) End Position (segment end position, in bases); #(5) Num markers (number of markers in segment); #(6) Seg.CN (log2() -1 of copy number); #; # This has barely been tested; #; workflow ConvertMergedPrunedSegsToGistic2 {; File cnv_postprocessing_tumor_with_tracks_pruned_merged_seg; String docker; call Gistic2Convert {; input:; input_file = cnv_postprocessing_tumor_with_tracks_pruned_merged_seg,; docker = docker; }. output {; File cnv_postprocessing_tumor_with_tracks_pruned_merged_seg_gistic2 = Gistic2Convert.output_file_gistic2; }; }. task Gistic2Convert {; File input_file; String docker; String output_file = basename(input_file) + "".gistic2.seg"". command <<<; set -e; python <<EOF; import csv; input_file = ""${input_file}""; output_file = ""${output_file}"". """"""; The column headers are:. (1) Sample (sample name); (2) Chromosome (chromosome number); (3) Start Position (segment start position, in bases); (4) End Position (segment end position, in bases); (5) Num markers (number of markers in segment); (6) Seg.CN (log2() -1 of copy number); """""". if __name__ == ""__main__"":; with open(input_file, 'rb') as tsvinfp, open(output_file, 'wb') as tsvoutfp:; tsvin = csv.DictReader(tsvinfp, delimiter='\t'); tsvout = csv.writer(tsvoutfp, delimiter=""\t""); for r in tsvin:; int_ify_num_points = r[""NUM_POINTS_COPY_RATIO""].replace("".0"", """"); outrow = [r[""SAMPLE""], r[""Chromosome""], r[""Start""], r[""End""], int_ify_num_points, r[""MEAN_LOG2_COPY_RATIO""]]; print(outrow)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5283:205,test,tested,205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5283,2,['test'],['tested']
Testability,"## Feature request. Since CombineVariants will not be ported, we need equivalent functionality to its ability to annotate ""set"", ie which callset(s) a site is present in. Here is an excerpt from a tutorial that describes this functionality in action:. ----. To find out which set each variant belongs to, we can use CombineVariants. CombineVariants has a way to annotate each site with which set the site belongs to. For example, if a site is in GIAB and failed hard filtering but passed VQSR, CombineVariants will annotate the site with set=G-filterInH-V. The ""filterIn"" flag before the filtering method tells us the site failed the filtering method, hence it was ""filtered"" in the set. java -jar GenomeAnalysisTK.jar \; 	-T CombineVariants \; 	-R ref/human_g1k_b37_20.fasta \; 	-V:G truth_dataset/NA12878.GIAB.vcf \; 	-V:H vcfs/NA12878.hard.filtered.vcf \; 	-V:V vcfs/NA12878.VQSR.filtered.vcf \; 	-o sandbox/NA12878.Combined.vcf . The set-annotated VCF looks like this:. ````; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT INTEGRATION NA12878; 20 61795 rs4814683 G T 2034.16 PASS AC=2;AF=0.500;AN=4;(...);set=Intersection​ ​ GT:AD:ADALL:DP :GQ:PL 0/1:218,205:172,169:769:99 0/1:30,30:.:60:99:1003,0,1027; ````. In this record, ""set=Intersection​"" indicates this record was present and unfiltered in all callsets considered. Here is a key of all the possible combinations for this 3-way venn:. | Meaning | Annotation |; |:-|:-|; | In GIAB only | G |; | In GIAB and failed VQSR only | G-H-filterInV |; | In GIAB and failed both hard filtering and VQSR | G-filterInH-filterInV |; | In GIAB and failed hard filtering only | G-filterInH-V |; | In GIAB and passed both hard filtering and VQSR | Intersection |; | Not in GIAB and failed VQSR only | H-filterInV |; | Not in GIAB and failed both hard filtering and VQSR | FilteredInAll |; | Not in GIAB and failed hard filtering only | filterInH-V |; | Not in GIAB and passed both hard filtering and VQSR | H-V |",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2489:903,sandbox,sandbox,903,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2489,1,['sandbox'],['sandbox']
Testability,"## System. * GATK4 a1eee32e84c21c2f265d248c5f47789ae0ba2b37; * Mac OS X 10.11.6 x86_64; * machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 CX16 TPR PDCM SSE4.1 SSE4.2 POPCNT; * machdep.cpu.extfeatures: SYSCALL XD EM64T LAHF RDTSCP TSCI; * java version ""1.8.0_60""; * Java(TM) SE Runtime Environment (build 1.8.0_60-b27); * Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode). ## Error. When updating a downstream project with the latest master and running the integration/unit tests with gradle, it generates the following error. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGILL (0x4) at pc=0x00000001236427f4, pid=4010, tid=20739; #; # JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # C [libgkl_compression7227189416687158431.dylib+0x17f4] Java_com_intel_gkl_compression_IntelDeflater_resetNative+0x164; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/daniel/workspaces/ReadTools/hs_err_pid4010.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. Error report file: [hs_err_pid4010.log.txt](https://github.com/broadinstitute/gatk/files/1259963/hs_err_pid4010.log.txt). ## Forcing other GKL versions. * 0.5.2 (working); * 0.5.3 (failing); * 0.5.5 (failing); * 0.5.6 (failing); * 0.5.7 (failing); * 0.5.8 (failing)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3532:623,test,tests,623,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3532,4,"['log', 'test']","['log', 'tests']"
Testability,"## System; * Mac OS X 10.11.6 x86_64; * Java HotSpot(TM) 64-Bit Server VM 1.8.0_60-b27. ## Problem; I'm trying to update my project ([ReadTools](https://github.com/magicDGS/ReadTools)) to the latest version of GATK and this dependency throws the following error with some of my gradle tests and while running an uber-jar (using `--use_jdk_deflater false`):. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGILL (0x4) at pc=0x000000011d925644, pid=7088, tid=20739; #; # JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # C [libgkl_compression8215566221555962564.dylib+0x1644] Java_com_intel_gkl_compression_IntelDeflater_resetNative+0x164; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/daniel/workspaces/ReadTools/hs_err_pid7088.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. Find attached the log: [hs_err_pid7088.log.txt](https://github.com/broadinstitute/gatk/files/652421/hs_err_pid7088.log.txt)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2315:285,test,tests,285,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2315,5,"['log', 'test']","['log', 'tests']"
Testability,"## Test data. I've created a snippet of my `zeta` and also generated the output of the following command. The data are derived from gnomAD and so it can be used for a test case. Again, zeta is the output of a Picard LiftoverVcf command and requires GRCh38 as the reference. [zeta_snippet_shlee.zip](https://github.com/broadinstitute/gatk/files/1245839/zeta_snippet_shlee.zip). ```; WMCF9-CB5:Mutect2 shlee$ java -jar $GATK -T LeftAlignAndTrimVariants -R ~/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V zeta_snippet.vcf.gz -o zeta_snippet_leftalign.vcf.gz; INFO 10:49:20,809 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,810 HelpFormatter - The Genome Analysis Toolkit (GATK) v3.7-0-gcfedb67, Compiled 2016/12/12 11:21:18 ; INFO 10:49:20,810 HelpFormatter - Copyright (c) 2010-2016 The Broad Institute ; INFO 10:49:20,811 HelpFormatter - For support and documentation go to https://software.broadinstitute.org/gatk ; INFO 10:49:20,811 HelpFormatter - [Wed Aug 23 10:49:20 EDT 2017] Executing on Mac OS X 10.11.6 x86_64 ; INFO 10:49:20,811 HelpFormatter - Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14 ; INFO 10:49:20,813 HelpFormatter - Program Args: -T LeftAlignAndTrimVariants -R /Users/shlee/Documents/ref/hg38/Homo_sapiens_assembly38.fasta -V zeta_snippet.vcf.gz -o zeta_snippet_leftalign.vcf.gz ; INFO 10:49:20,819 HelpFormatter - Executing as shlee@WMCF9-CB5 on Mac OS X 10.11.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14. ; INFO 10:49:20,819 HelpFormatter - Date/Time: 2017/08/23 10:49:20 ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,819 HelpFormatter - -------------------------------------------------------------------------------- ; INFO 10:49:20,830 GenomeAnalysisEngine - Strictness is SILENT ; INFO 10:49:21,846 GenomeAnalysisEngine - Downsampling Settings: Method: BY_SAMPLE, Target Coverage: 1000 ; WARN 10:49:",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091:3,Test,Test,3,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3487#issuecomment-324361091,2,"['Test', 'test']","['Test', 'test']"
Testability,"## Update:. ### A [broad institute forum post](https://gatk.broadinstitute.org/hc/en-us/community/posts/360061666671/comments/360010377231) gave the solution:. #### If you paste this text into the `gatkcondaenv.yaml` file:. ```; # Conda environment for GATK Python Tools; #; # Only update this environment if there is a *VERY* good reason to do so!; # If the build is broken but could be fixed by doing something else, then do that thing instead.; # Ensuring the correct environment for canonical (or otherwise reasonable) usage of our standard Docker takes precedence over edge cases.; # If you break the environment, you are responsible for fixing it and also owe the last developer who left this in a reasonable state a beverage of their choice.; # (This may be yourself, and you'll appreciate that beverage while you tinker with dependencies!); #; # When changing dependencies or versions in this file, check to see if the ""supportedPythonPackages"" DataProvider; # used by the testGATKPythonEnvironmentPackagePresent test in PythonEnvironmentIntegrationTest needs to be updated; # to reflect the changes.; #; name: gatk; channels:; # if channels other than conda-forge are added and the channel order is changed (note that conda channel_priority is currently set to flexible),; # verify that key dependencies are installed from the correct channel and compiled against MKL; - conda-forge; - defaults; dependencies:. # core python dependencies; - conda-forge::python=3.6.10 # do not update; - pip=20.0.2 # specifying channel may cause a warning to be emitted by conda; - conda-forge::mkl=2019.5 # MKL typically provides dramatic performance increases for theano, tensorflow, and other key dependencies; - conda-forge::mkl-service=2.3.0; - conda-forge::numpy=1.17.5 # do not update, this will break scipy=0.19.1; # verify that numpy is compiled against MKL (e.g., by checking *_mkl_info using numpy.show_config()); # and that it is used in tensorflow, theano, and other key dependencies; - conda-for",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6656#issuecomment-643526868:981,test,testGATKPythonEnvironmentPackagePresent,981,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6656#issuecomment-643526868,4,['test'],"['test', 'testGATKPythonEnvironmentPackagePresent']"
Testability,## [Current coverage](https://codecov.io/gh/broadinstitute/gatk/pull/2271?src=pr) is 76.024% (diff: 75.000%). > Merging [#2271](https://codecov.io/gh/broadinstitute/gatk/pull/2271?src=pr) into [master](https://codecov.io/gh/broadinstitute/gatk/branch/master?src=pr) will increase coverage by **0.028%**. ``` diff; @@ master #2271 diff @@; ==========================================; Files 731 731 ; Lines 38948 39102 +154 ; Methods 0 0 ; Messages 0 0 ; Branches 8146 8177 +31 ; ==========================================; + Hits 29599 29727 +128 ; - Misses 6840 6865 +25 ; - Partials 2509 2510 +1 ; ```. ![Sunburst](https://codecov.io/gh/broadinstitute/gatk/pull/2271/graphs/sunburst.svg?src=pr&size=150). | Diff Coverage | File Path |; | --- | --- |; | ••••••• 75% | [...rg/broadinstitute/hellbender/utils/LoggingUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2271/compare#diff-7372632F6D61696E2F6A6176612F6F72672F62726F6164696E737469747574652F68656C6C62656E6465722F7574696C732F4C6F6767696E675574696C732E6A617661) |. > Powered by [Codecov](https://codecov.io?src=pr). Last update [a9e304f...e0bd30d](https://codecov.io/gh/broadinstitute/gatk/compare/a9e304fd7dd2ad854c2115f23eb507eb6c502324...e0bd30d79bf2b0831e731bc74c35c7796708c5bb?src=pr),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2271#issuecomment-261380512:807,Log,LoggingUtils,807,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2271#issuecomment-261380512,1,['Log'],['LoggingUtils']
Testability,### **Addresses** ; https://github.com/broadinstitute/dsp-spec-ops/issues/192. ### **Commit Summary**; - Updated StorageAPIAvroReader.java; > - To handle the use case if no data is returned from BQ. ### **Tested**; - Updated BigQueryUtilsUnitTest.java; > - testQueryWithEmptyDatasetStorageAPI() function to test code changes,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7082:205,Test,Tested,205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7082,9,"['Test', 'test']","['Tested', 'test', 'testQueryWithEmptyDatasetStorageAPI']"
Testability,"### **Addresses** ; https://github.com/broadinstitute/dsp-spec-ops/issues/199. ### **Commit Summary**. -Add labels to Sample list, Extract Cohort, and Extract features; - Edit Bigquery Utils Testing ; - Add labels as an input to a Bigquery functions ; - Created UID class for a unique identifier . ### **Output**; For Sample list, Extract Cohort and Extract features; ```; ""query"", ""Run_SampleTable_<UID>""; ""query"", ""extract_cohort_<UID>""; ""query"", ""extract_features_<UID>""; ```; Testing:; ```; ""test_query"", ""get_all_records_<UID>""; ""test_query"", ""test_where_clause_<UID>""; ""test_query"", ""test_batch_mode_<UID>""; ""test_query"", ""test_specified_execute_query_<UID>""; ""test_query"", ""test_storage_api_<UID>""; ""test_query"", ""test_storage_api_with_empty_dataset_<UID>"". ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7115:191,Test,Testing,191,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7115,2,['Test'],['Testing']
Testability,### **Addresses** ; https://github.com/broadinstitute/dsp-spec-ops/issues/246. ### **Commit Summary**; - Created AvroFileReader ; - Created a sampleAvroFile; - Update ExtractCohort and ExtractCohortEngine to accept a AvroFile. Testing:; Created a test for AvroFileReader,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7174:227,Test,Testing,227,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7174,2,"['Test', 'test']","['Testing', 'test']"
Testability,### **Addresses** ; https://github.com/broadinstitute/gatk/pull/7115. ### **Commit Summary**; -Created AvroFileReader; - Update ExtractCohort and ExtractCohortEngine to accept a AvroFile. Testing:; Created a test for AvroFileReader,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7127:188,Test,Testing,188,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7127,2,"['Test', 'test']","['Testing', 'test']"
Testability,"### Affected class(es); All test classes in GATK (and downstream projects) extending `BaseTest`. ### Affected version(s); - [x] Latest public release version; - [x] Latest master branch. ### Description ; The GATK toolkit assumes `US` locale (set in a `Main` static method), which in turn produces all the test files using the `US` locale; if the test suite is run in a different locale, it might fail unexpectedly. For example, if the locale has a comma-separated decimals instead of dot-separated, comparing the expected file output with `US` locale against the generated by the tests fail. . #### Expected behavior; `BaseTest` should set the locale in a `@BeforeSuite` method (or static method) to set the assumptions of the toolkit to all tests (also for downstream toolkits). #### Actual behavior; `BaseTest` picks default locale.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5012:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5012,5,['test'],"['test', 'tests']"
Testability,"### Affected tool(s) or class(es); Funcotator. ### Affected version(s); - [ ] Latest master branch as of June 7, 2018. ### Description ; Currently, the metadata for `GencodeFuncotation` will always be default, unknown for all fields. However, we know what each field is, so we could populate . This cannot be seen anywhere by a user, yet. However, future requirements will probably cause the metadata to be rendered into a VCF header or a MAF comment, so this should be populated. #### Expected behavior; The Gencode funcotations should not have unknown types and descriptions. This can be validated with an automated test. #### Actual behavior; The Gencode funcotations have unknown types and descriptions.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4857:618,test,test,618,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4857,1,['test'],['test']
Testability,"### Affected tool(s) or class(es); PostprocessGermlineCNVCalls . ### Affected version(s); - [X ] Latest public release version [4.3.0.0]. ### Description ; Hello, I am a regular user of the gCNV pipeline of GATK4. Since version GATK 4.2.0.0, you have introduced the germline CNV calling joint which I wanted to try and I encountered several problems. So I used, in order, the DetermineGermlineContigPloidy and GermlineCNVCaller tools (cutting my target into 8 bins) version 4.3.0.0 on a cohort of 540 patients. Then I used the PostProcessGermlineCaller tool to produce the VCF files for these patients. Next, I used the JointGermlineCNVSegmentation beta tool to produce a multisample VCF which I reused with PostProcessGermlineCaller to produce joined VCFs. The problem is that the time needed to produce each VCF file has been multiplied by 20 (on average 120 minutes compared to 6), which makes it difficult to use on large cohorts. Here is an extract of the logs, from a sample without, then with the --clustered-breakpoints option: ; #PostprocessGermlineCNVCalls. 14:23:53.500 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.3.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 14:23:54.242 INFO PostprocessGermlineCNVCalls - ------------------------------------------------------------; 14:23:54.242 INFO PostprocessGermlineCNVCalls - The Genome Analysis Toolkit (GATK) v4.3.0.0; 14:23:54.242 INFO PostprocessGermlineCNVCalls - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:23:54.262 INFO PostprocessGermlineCNVCalls - Executing as [tintest@dahu132.u-ga.fr](mailto:tintest@dahu132.u-ga.fr) on Linux v5.10.0-18-amd64 amd64; 14:23:54.262 INFO PostprocessGermlineCNVCalls - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_242-8u242-b08-0ubuntu3~18.04-b08; 14:23:54.263 INFO PostprocessGermlineCNVCalls - Start Date/Time: December 2, 2022 2:23:53 PM GMT; 14:23:54.263 INFO PostprocessGermlineCNVCalls - -----------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8183:976,log,logs,976,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8183,1,['log'],['logs']
Testability,"### Bug Report. Hi, after installing the conda environment and running `conda activate gatk` without errors, I seem to still have a problem importing the gcnvkernel module. Is there a way I can install it through pip or what is something I may have done wrong? I already went over the README and standard documentation, and don't think I missed a step. ### Affected tool(s) or class(es); gvnvkernel, other expected modules. #### Expected behavior; Generate output file from my VCF. #### Actual behavior; ```; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -DGATK_STACKTRACE_ON_USER_EXCEPTION=true -jar /home/gamer456148/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar GermlineCNVCaller --input var.vcf --run-mode CASE --contig-ploidy-calls X/prefix-calls --output-prefix regular.vcf --output testfile.vcf; 21:21:12.277 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/gamer456148/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 23, 2020 9:21:12 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 21:21:12.543 INFO GermlineCNVCaller - ------------------------------------------------------------; 21:21:12.544 INFO GermlineCNVCaller - The Genome Analysis Toolkit (GATK) v4.1.4.1; 21:21:12.544 INFO GermlineCNVCaller - For support and documentation go to https://software.broadinstitute.org/gatk/; 21:21:12.544 INFO GermlineCNVCaller - Executing as gamer456148@gamer456148-Inspiron-15-7579 on Linux v4.15.0-88-generic amd64; 21:21:12.544 INFO GermlineCNVCaller - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_191-b12; 21:21:12.544 INFO GermlineCNVCaller - Start Date/Time: February 23, 2020 9:21:12 PM EST; 21:21:12.544 INFO GermlineCNVCaller - -------------------------------------------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6467:911,test,testfile,911,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6467,1,['test'],['testfile']
Testability,"### Instructions. ## Bug Report. ### Affected tool(s) or class(es); MarkDuplicatesSpark. ### Affected version(s); - [v ] Latest public release version [4.4.0.0]. ### Description ; Since switching to 4.4.0.0 we are experiencing an increased memory consumption of MarkDuplicatesSpark. We see it on large BAM/CRAM files, not tested on small files. #### Steps to reproduce; This command: ; ```; java -Xmx190g -jar /usr/gitc/GATK_ultima.jar MarkDuplicatesSpark \; --spark-master local[24] \; --input 019242_old.ua.aln.bam \; --output 019242_old.aligned.sorted.duplicates_marked.bam \; --create-output-bam-index true \; --spark-verbosity WARN \; --verbosity WARNING \; --flowbased; ```; required 90GB memory on 4.3.0.0. The input BAM is large: 270GB; However on the 4.4.0.0 it requires >160GB RAM. #### Expected behavior; The memory requirement is not expected to change ; #### Actual behavior; Significantly increased memory requirement",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8307:322,test,tested,322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8307,1,['test'],['tested']
Testability,"### Instructions. ## Bug Report. Hi GATK team , I'm afraid I found an exception in gatk HC related to https://github.com/broadinstitute/gatk/issues/6516. ### Affected tool(s) or class(es). GATK HC v4.3.0.0 . ### Affected version(s); - [X] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. ### Description . ```; + gatk --java-options '-Xmx5g -Djava.io.tmpdir=TMP' HaplotypeCaller -R /LAB-DATA/BiRD/resources/species/human/cng.fr/hs38me/hs38me_all_chr.fasta --minimum-mapping-quality 10 --sample-ploidy 2 --do-not-run-physical-phasing --alleles TMP/jeter.vcf.gz -L TMP/jeter.vcf.gz -I /SCRATCH-BIRD/users/lindenbaum-p/work/NEXTFLOW/20221123.hs38me.NTS299.ultrares/work/87/5fa0df303dc4f06212547353be621c/BAMS/cluster.aaaaaaacx.bam.list -O TMP/jeter2.vcf.gz Using GATK jar /LAB-DATA/BiRD/users/lindenbaum-p/packages/gatk/gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar; Running: ; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx5g -Dj; ava.io.tmpdir=TMP -jar /LAB-DATA/BiRD/users/lindenbaum-p/packages/gatk/gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar HaplotypeCaller -R /LAB-DATA/BiRD/resources/species/human/cng.fr/hs38me/hs38me_all_chr.fasta --minimum-mapping-quality 10 --sample-ploidy 2 --do-not-run-physical-phasing --alleles TMP/jeter.vcf.gz -L TMP/jeter.vcf.gz -I /SCRATCH-BIRD/users/lindenbaum-p/work/NEXTFLOW/20221123.hs38me.NTS299.ultrares/work/87/5fa0df303dc4f06212547353be621c/BAMS/cluster.aaaaaaacx.bam.list -O TMP/jeter2.vcf.gz; 18:15:19.107 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/LAB-DATA/BiRD/users/lindenbaum-p/packages/gatk/gatk-4.3.0.0/gatk-package-4.3.0.0-local.j; ar!/com/intel/gkl/native/libgkl_compression.so ; 18:15:21.727 INFO HaplotypeCaller - ------------------------------------------------------------ ; 18:15:21.728 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.3.0.0 ; 1",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8106:323,test,test,323,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8106,1,['test'],['test']
Testability,"### Instructions. ## Bug Report; ### Affected tool(s) or class(es); - tools: HaplotypeCaller perhaps Mutec. ; - classes: AlleleLikelihoods. ### Affected version(s); - [ X] Latest public release version [version?]; - [ X] Latest master branch as of [date of test?]. ### Description ; Right before calling annotators HC engine adds filtered reads as additional evidence in the AlleleLikelihoods instance that is passed down to the annotators. The code requests the new evidence to have 0.0 likelihoods so label them as uninformative. However due to an error in how the lk arrays are ""extended"" inside the AlleleLikelihoods these reads inherit past reads (removed) zombie likelihoods instead. Fix is easy. as simple as remove this enclosing ```if``` in AlleleLikelihoods, and simply executed its body; always:. ```; line 793:; if (initialLikelihood != 0.0) // the default array new value.; {; for (int a = 0; a < alleleCount; a++) {; Arrays.fill(sampleValues[a], sampleEvidenceCount, newSampleEvidenceCount, initialLikelihood);; }; }; ```. #### Steps to reproduce. Debug and active region with filtered reads. . #### Expected behavior. Those reads won't contribute to AD or DP. #### Actual behavior. They do contribute, at random, to those count annotations.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7153:257,test,test,257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7153,1,['test'],['test']
Testability,"### Instructions. In one of the six samples that the DSP pipelines team ('lantern') uses for scientific testing, found bug in GATK 4.1.7.0's HaplotypeCaller. 'java.lang.IllegalArgumentException: evidence provided is not in sample'. Full stack trace below. This is found for Sample NA17-308, Shard 49.; https://cromwell.gotc-dev.broadinstitute.org/api/workflows/1/83938362-b9b5-49f3-a65d-715065d6eabd/metadata; Execution bucket is:; broad-gotc-dev-cromwell-execution (results will stay there for 30 days before being automatically cleaned up). ----. ## Bug Report. ### Affected tool(s) or class(es); HaplotypeCaller. ### Affected version(s); - 4.1.7.0. ### Description ; Stack trace:; java.lang.IllegalArgumentException: evidence provided is not in sample; 	at org.broadinstitute.hellbender.utils.genotyper.AlleleLikelihoods.lambda$removeEvidence$9(AlleleLikelihoods.java:1124); 	at java.util.stream.ReferencePipeline$4$1.accept(ReferencePipeline.java:210); 	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:546); 	at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260); 	at java.util.stream.IntPipeline.toArray(IntPipeline.java:504); 	at org.broadinstitute.hellbender.utils.genotyper.AlleleLikelihoods.removeEvidence(AlleleLikelihoods.java:1128); 	at org.broadinstitute.hellbender.utils.genotyper.AlleleLikelihoods.contaminationDownsampling(AlleleLikelihoods.java:315); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerGenotypingEngine.assignGenotypeLikelihoods(HaplotypeCallerGenotypingEngine.java:173); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:608); 	at org.broadinstitute.hellbender.tools.walkers",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6586:104,test,testing,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6586,1,['test'],['testing']
Testability,"### Instructions. The github issue tracker is for bug reports, feature requests, and API documentation requests. General questions about how to use the GATK, how to interpret the output, etc. should be asked on the [official support forum](http://gatkforums.broadinstitute.org/gatk).; - Search the existing github issues to see if your issue (or something similar) has already been reported. If the issue already exists, you may comment there to inquire about the progress.; - Determine whether your issue is a **bug report**, a **feature request**, or a **documentation request** (for tool/class javadoc only -- for forum docs please post there); - Consider if your ""issue"" is better addressed on the GATK forum: http://gatkforums.broadinstitute.org/gatk Post there if you have questions about expected tool behavior, output format, unexpected results, or generally any question that does not fit into the categories above; - Use a **concise** yet **descriptive** title; - Choose the corresponding template block below and fill it in, replacing or deleting text in italics (surrounded by `_`) as appropriate; - Delete the other template blocks and this header. ----. ## Bug Report. ### Affected tool(s) or class(es). FilterMutectCalls. ### Affected version(s); - [x] Latest public release version [version?]; - [x] Latest master branch as of [date of test?]. ### Description . If there is germline variant within one read length of a somatic variant, the clustered_events filter can filter out the somatic variant. Clustered events, intention is to filter out noisy sites that are likely artifactual, but should ignore contributions from neighboring germline sites.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6532:1352,test,test,1352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6532,1,['test'],['test']
Testability,"### Instructions; I use PathSeqPipelineSpark to analyze 10x Visium spatial transcribed data.; I did not download the data from the database on the GATK official website. But I prepared the database according to the tutorial [https://gatk.broadinstitute.org/hc/en-us/articles/360035889911--How-to-Run-the-Pathseq-pipeline] by myself.; The analysis has no results, and I don't know the reason for the lack of results. ## software / environment / log file informations; Using GATK jar /mnt/icfs/work/singlecelldevelopment/software/gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx750g -jar /mnt/icfs/work/singlecelldevelopment/software/gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar PathSeqPipelineSpark --input CRC_16/outs/possorted_genome_bam.bam --filter-bwa-image hsa_GRCh38/genome.fa.img --kmer-file hsa_GRCh38/genome.hss --min-clipped-read-length 60 --microbe-dict 16SrRNA/bacteria.16SrRNA.dict --microbe-bwa-image 16SrRNA/bacteria.16SrRNA.fa.img --taxonomy-file 16SrRNA/16SrRNA.db --output pathseq/CRC_16.pathseq.complete.bam --scores-output pathseq/CRC_16.pathseq.complete.csv --is-host-aligned false --filter-duplicates false --min-score-identity .7 --tmp-dir pathseq/tmp; 13:19:23.776 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/mnt/icfs/work/singlecelldevelopment/software/gatk-4.3.0.0/gatk-package-4.3.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 13:19:28.982 INFO PathSeqPipelineSpark - ------------------------------------------------------------; 13:19:28.982 INFO PathSeqPipelineSpark - The Genome Analysis Toolkit (GATK) v4.3.0.0; 13:19:28.982 INFO PathSeqPipelineSpark - For support and documentation go to https://software.broadinstitute.org/gatk/; 13:19:28.983 INFO PathSeqPipelineSpark - Executing as singlecellproject@d01.capitalbiotech.local on Linux v3.10.0-514.16.1.el7.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8339:444,log,log,444,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8339,1,['log'],['log']
Testability,"### Instructions; gatk --java-options ""-Xmx12G -Djava.io.tmpdir=/data/nws/WES/1align_out/200919_A00682_0446_AHCVMJDSXY/tmp -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" BaseRecalibrator -R /data/nws/WES/reference/Homo_sapiens_assembly38.fasta -I /data/nws/WES/1align_out/200919_A00682_0446_AHCVMJDSXY/Set12-3_L1_361361.sorted.marked.bam -O recal_data.table --known-sites /data/nws/WES/reference/dbsnp_146.hg38.vcf --known-sites /data/nws/WES/reference/1000G_phase1.snps.high_confidence.hg38.vcf --known-sites /data/nws/WES/reference/Mills_and_1000G_gold_standard.indels.hg38.vcf 1>/data/nws/WES/1align_out/200919_A00682_0446_AHCVMJDSXY/Set12-3_L1_361361.BaseRecalibrator.log 2>&1. Using GATK jar /usr/local/gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx12G -Djava.io.tmpdir=/data/nws/WES/1align_out/200919_A00682_0446_AHCVMJDSXY/tmp -DGATK_STACKTRACE_ON_USER_EXCEPTION=true -jar /usr/local/gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar BaseRecalibrator -R /data/nws/WES/reference/Homo_sapiens_assembly38.fasta -I /data/nws/WES/1align_out/200919_A00682_0446_AHCVMJDSXY/Set12-3_L1_361361.sorted.marked.bam -O recal_data.table --known-sites /data/nws/WES/reference/dbsnp_146.hg38.vcf --known-sites /data/nws/WES/reference/1000G_phase1.snps.high_confidence.hg38.vcf --known-sites /data/nws/WES/reference/Mills_and_1000G_gold_standard.indels.hg38.vcf; 15:45:57.013 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/usr/local/gatk-4.1.3.0/gatk-package-4.1.3.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 15:46:12.281 INFO BaseRecalibrator - ------------------------------------------------------------; 15:46:12.282 INFO BaseRecalibrator - The Genome Analysis Toolkit (GATK) v4.1.3.0; 15:46:12.282 INFO BaseRecalibrator - For support and documentation go to https://software.broadinstitute.org/gatk/; 15:46:",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7031:667,log,log,667,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7031,1,['log'],['log']
Testability,### Instructions; it‘s my first time to run the pipline for RNA-seq data. ; the log of SplitNCigarReads makes me confused which said '00:39:03.278 WARN IntelInflater - Zero Bytes Written : 0' at below.; i don't know weather this step works will or just return the files same as last step？; maybe someone know what's happened，I'm very grateful for someone to help me answer this question！. 00:35:09.127 INFO ProgressMeter - 23:27354557 12.4 29918000 2404017.7; 00:35:19.176 INFO ProgressMeter - 23:39821286 12.6 30308000 2403016.1; 00:35:29.182 INFO ProgressMeter - unmapped 12.8 30712000 2403270.9; 00:35:39.184 INFO ProgressMeter - 25:18185455 12.9 31112000 2403222.6; 00:35:49.196 INFO ProgressMeter - 25:35485074 13.1 31463000 2399411.3; 00:35:59.205 INFO ProgressMeter - 26:15194951 13.3 31932000 2404584.5; 00:36:09.210 INFO ProgressMeter - 26:39796753 13.4 32325000 2403995.1; 00:36:19.234 INFO ProgressMeter - 27:19938980 13.6 33035000 2426647.2; 00:36:29.429 INFO ProgressMeter - 28:32806413 13.8 33417000 2424444.0; 00:36:39.586 INFO ProgressMeter - unmapped 14.0 33821000 2423984.0; 00:36:49.602 INFO ProgressMeter - 29:43615735 14.1 34294000 2428825.2; 00:36:59.630 INFO ProgressMeter - X:20297509 14.3 34746000 2432052.2; 00:37:09.635 INFO ProgressMeter - X:79368355 14.5 35002000 2421702.8; 00:37:19.744 INFO ProgressMeter - unmapped 14.6 35364000 2418555.7; 00:37:29.986 INFO ProgressMeter - MT:4752 14.8 36632000 2476365.0; 00:37:39.989 INFO ProgressMeter - MT:6105 15.0 37831000 2528917.2; 00:37:50.172 INFO ProgressMeter - MT:6537 15.1 38943000 2574051.7; 00:38:00.172 INFO ProgressMeter - MT:7097 15.3 40049000 2618311.9; 00:38:10.174 INFO ProgressMeter - MT:8432 15.5 41100000 2658052.2; 00:38:20.250 INFO ProgressMeter - MT:9258 15.6 42088000 2692704.3; 00:38:30.365 INFO ProgressMeter - MT:11181 15.8 43055000 2725181.1; 00:38:40.367 INFO ProgressMeter - MT:13120 16.0 44100000 2762177.2; 00:38:50.424 INFO ProgressMeter - MT:14886 16.1 45149000 2798500.4; 00:39:00.640 INFO Progr,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8126:80,log,log,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8126,1,['log'],['log']
Testability,"### SelectVariants could expand on their types (INDEL, SNP, MIXED, MNP, SYMBOLIC, NO_VARIATION) to include more types as follows:. - whether insertion or deletion as requested by user shis [here](http://gatkforums.broadinstitute.org/gatk/discussion/8988/how-to-select-insertion-or-deletion-from-a-indels-vcf-file#latest); - by star `*` allele as requested by user nkobmoo [here](http://gatkforums.broadinstitute.org/gatk/discussion/8977/how-to-filter-out-the-snps-with-deletion-allel#latest); - by AD values as requested by numerous users over the year I've been here and most recently by CanH [here](http://gatkforums.broadinstitute.org/gatk/discussion/9032/selectvariants-according-to-ad-values#latest). Also beware of something buggy described by user zzq [here](http://gatkforums.broadinstitute.org/gatk/discussion/8966/select-snp-and-reference-monomorphic-sites-from-a-large-callset#latest). I've asked them to reproduce the results using the latest version of GATK. It appears that the SYMBOLIC type, which I think must refer to the star allele, is not being recognized with v3.5-0-g36282e4. I don't have any such data to test this out with, otherwise, I'd report more on this issue. #### Current workarounds; Users are currently using AWK or JEXL to select their variants. JEXL documentation is [here](http://gatkforums.broadinstitute.org/gatk/discussion/1255/using-jexl-to-apply-hard-filters-or-select-variants-based-on-annotation-values).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2412:1128,test,test,1128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2412,1,['test'],['test']
Testability,"### Summary ; A user wrote in to the forum regarding running FilterSamReads through GATK and the output bam file has formatting issues. After they sent in a bug report, I found that the exit code is getting written to the bam file, causing this issue. . This request was created from a contribution made by rcorbett on February 03, 2021 23:47 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/360076905711-filterSamReads-stdout-format-error](https://gatk.broadinstitute.org/hc/en-us/community/posts/360076905711-filterSamReads-stdout-format-error). #### GATK Info; FilterSamReads 4.1.9.0 and 4.0.10.0; Command to stdout:; `gatk FilterSamReads -I subsampled.bam -O /dev/stdout --READ_LIST_FILE read_names.txt --FILTER excludeReadList --VALIDATION_STRINGENCY SILENT --QUIET > test_stdout.bam`; Log:; ```; Using GATK jar /gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar FilterSamReads -I subsampled.bam -O /dev/stdout --READ_LIST_FILE read_names.txt --FILTER excludeReadList --VALIDATION_STRINGENCY SILENT --QUIET; 20:54:45.405 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.1.9.0-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.so; INFO	2021-02-12 20:54:45	FilterSamReads	Filtering [presorted=true] subsampled.bam -> OUTPUT=stdout [sortorder=coordinate]; INFO	2021-02-12 20:54:45	SAMFileWriterFactory	Unknown file extension, assuming BAM format when writing file: file:///dev/stdout; INFO	2021-02-12 20:54:45	FilterSamReads	6 SAMRecords written to stdout. ```; Check file:; `gunzip -c -d -f test_stdout.bam | head -n 5`; ```; Tool returned:; 0. ?[[lW?m?$?^?q???k????zg?x}?s???mE?ޖ?r#U???ԑ/Qm'܄dkUM???????zCBB?!*?V*?#; <Q!QU?; ```; Bam file using -0; `gunzip -c -d -f test_outbam.bam | head -n 5`; ```; BAM?2@",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7080:811,Log,Log,811,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7080,1,['Log'],['Log']
Testability,"### Too many PoNs, halp; Here are the options to test for PoN creation for the workshop tutorial. ![img_6819](https://user-images.githubusercontent.com/11543866/27512867-c1f82d26-591e-11e7-8bb3-f1290d6a76fa.JPG). I conjecture that the per-cohort various PoNs are _not_ equivalent, given the role of QC is to toss bad/outlier data points. If someone can tell me what is the best course of action, pictured or not (wait for PR to merge?), then I would be grateful. In the meanwhile, I will trudge ahead in my writing of the CNV tutorial, spending compute and moolah on the cloud.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3163#issuecomment-310874918:49,test,test,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3163#issuecomment-310874918,1,['test'],['test']
Testability,"### Updates; A record with SVTYPE=CTX and CPX_TYPE=CTX_INV was added to a recent GATK-SV VCF after manual curation. The following changes were made to be able to properly annotate this type of event.; * CPX_TYPE will be checked for CTX records, and if it is CTX_INV, the INV interval from CPX_INTERVALS will be added to the annotation segments.; * Additionally, instead of annotating two breakpoint intervals CHROM:POS-END and CHR2:END2-END2+1 for CTX events, we will now annotate 4 individual breakpoints to cover the case where END != POS+1. Those 4 breakpoints are CHROM:POS-POS, CHROM:END-END, CHR2:END2-END2, and CHR2:END2+1-END2+1.; * In the future, to be able to represent intervals on CHR2, POS2 may be added. SVAnnotate will need to be updated accordingly at that time. ### Testing; * Unit tests for CTX_INV added; * Unit tests for other CTX updated; * A one-line VCF was created to test the real-life example CTX_INV event that was curated, and it was annotated correctly",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8693:783,Test,Testing,783,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8693,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,### Updates; Some GATK-SV VCFs contain MEI deletions with ALT in the format <DEL:ME:ALU> or <DEL:ME>. This change will allow SVAnnotate to recognize and annotate those records as deletions. ### Testing; * Added unit test with MEI DEL; * Ran all unit and integration tests for SVAnnotate,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8125:194,Test,Testing,194,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8125,3,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 00d212a9-8eac-4575-9cde-b0a911b3c2f2); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fd8469fa4-2084-4adb-9e6a-682ab7022c34%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F95c8261e-a3cd-4aed-a6a5-feb65b65dbcf%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F95c8261e-a3cd-4aed-a6a5-feb65b65dbcf%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F68bf8ed6-bc62-46b4-895e-d7b8bc4c54f1%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550605494:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550605494,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 1097e2ec-85ce-4fa8-b59e-fc82a8ea8bed); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fe8aa9814-5328-4635-bc70-c4f2d1730fb8%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F4a0df43f-ff49-4ff3-959c-16edc58fdfdd%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F4a0df43f-ff49-4ff3-959c-16edc58fdfdd%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F14927bc9-1228-4fab-8f63-6713df24a8ed%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574624205:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574624205,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 121a726a-b813-46be-a21e-d744cf8e1212); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fd9f4e9d1-d784-468d-a7c5-3db11d300a39%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9928b50d-32e8-4948-81d2-66acf09074e1%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9928b50d-32e8-4948-81d2-66acf09074e1%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F796264b0-ebc0-40a4-bf49-b7960c990594%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533951689:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533951689,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 1bf5817a-d896-41de-b193-4a53a1264470); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Ff77fd74c-fa5f-4ffc-acaa-3d066136bf7c%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F58808511-7060-4e3c-923b-14803c83f331%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F58808511-7060-4e3c-923b-14803c83f331%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F3d77e016-88a6-4585-89f6-1e3351069af6%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549242878:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549242878,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 1f011d1a-af0f-4eb7-9554-92bf741f9fa3); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Fbe82ef78-26e0-4679-84da-55c305740482%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fbbb2d7ee-ca1e-41f6-b68c-d5af92daa038%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fbbb2d7ee-ca1e-41f6-b68c-d5af92daa038%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Fb6731cbb-002b-42b0-9df1-3c98808d48c6%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535123068:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535123068,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 2891f1b5-e415-4d62-ab4e-49fba755b096); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2F21ffd97f-ff74-46ec-8229-5815987f8750%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe5d8baa4-ff99-4beb-a3c3-9719d8ec588b%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe5d8baa4-ff99-4beb-a3c3-9719d8ec588b%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F1e67251d-9e55-42b1-a30a-a7db1d263314%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546480957:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546480957,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 83db9528-9aa0-4963-a382-95c0dc24102d); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2F8235863e-ffff-4c10-9349-55b3818a1863%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9023c818-2f0f-4b7b-99b4-3a2e58a8c21a%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2F9023c818-2f0f-4b7b-99b4-3a2e58a8c21a%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Ffb1e6440-4475-4f69-9f3b-8099d6ff1583%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687824388:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687824388,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: 8d6ce799-75e0-42e2-b527-f823f5ff55e6); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2Ff3af0e8c-89ef-46c9-a6b5-d3b3110f2d23%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff1d998b3-4424-4df6-aa70-fc98a1525ad1%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff1d998b3-4424-4df6-aa70-fc98a1525ad1%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F15e767d5-e609-425f-9eb0-aa567acfce77%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535669333:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535669333,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,### 🥕CARROT🥕 report map stub finished; for test HaplotypeCaller CARROT Regression Tests (run: fca2c322-83ec-454a-a917-deb026411e19); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Fstub%2F854bfc85-552f-42eb-a141-2749a314f09b%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff7e549f7-e007-4e80-92c6-9986a5e1ef4a%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Ff7e549f7-e007-4e80-92c6-9986a5e1ef4a%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Fa661640c-0fdb-46f3-ada2-fc2685dd0cfe%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684841396:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684841396,3,"['Test', 'stub', 'test']","['Tests', 'stub', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""35a5dad7-0921-4cbd-ab53-279506a2b613"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457285:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457285,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""85b43c98-aca0-4f9c-b56b-f4d3c29b84da"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457293:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154457293,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""f41c307f-57fd-4cd5-8c35-38b1fab53118"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155423814:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155423814,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""b8d92142-d006-4cd0-a703-94baa0cd8e2c"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155478613:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155478613,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""a46a9c3b-1b08-4d26-9e21-afe768a7ae99"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180788391:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180788391,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: build_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2e29a7f1-42a0-4b2d-8868-45f2d683cdb8"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC"",; ""status"": ""buildfailed"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192782831:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192782831,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""7564e667-ae57-44ff-806d-3689dcd5d394"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848358163:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848358163,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2383faf2-a2c4-4fc0-8ff9-d77571847ad5"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848842917:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848842917,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""71f08bec-32b8-457e-aac0-d7ce906b1d13"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1861195546:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1861195546,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""06f8115b-3543-4c05-a877-7dbe35d345ab"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1861281417:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1861281417,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""195729e7-44f5-484b-9a03-947bb596d741"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874712401:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874712401,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""e6d27810-1f6f-4d43-b1f7-c5820bb65d88"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1884149795:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1884149795,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""118bc5b3-e588-4d0a-b455-3cbfcc4ecb63"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1897233160:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1897233160,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""ab3a1b26-50da-4123-9f21-77b7ffd9aacf"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1899487218:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1899487218,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""4ae67551-5ddd-4b7a-9521-acc21eaf0d66"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1901431899:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1901431899,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: eval_failed; Run: HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""c9ffb306-e25b-4843-bb68-0b6e5ca70b15"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC"",; ""status"": ""evalfailed"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2151006823:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2151006823,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fcd28fe49-1672-4321-a836-47f76419c1c8%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fcd28fe49-1672-4321-a836-47f76419c1c8%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fd5df8455-36cf-4ecb-8dc2-ec35b974c0b7%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.23616944444446|; |CHM evalHCsystemhours|0.16188333333333332|; |CHM evalHCwallclockhours|55.167422222222214|; |CHM evalHCwallclockmax|2.887522222222222|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fcd28fe49-1672-4321-a836-47f76419c1c8%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|;,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa2a2515a-b32a-44a6-a6d1-9a6d0d2199bb%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa2a2515a-b32a-44a6-a6d1-9a6d0d2199bb%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F2c4ad666-e885-4e23-bd5c-d54ca521ffbf%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.99195555555558|; |CHM evalHCsystemhours|0.16168333333333337|; |CHM evalHCwallclockhours|55.43875833333334|; |CHM evalHCwallclockmax|2.913311111111111|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F89508d5f-29f1-4534-9fe1-220a80de17c4%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa2a2515a-b32a-44a6-a6d1-9a6d0d2199bb%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193038382,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F7195c554-534f-43ef-80c2-77bdafa1827f%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.10181666666668|; |CHM evalHCsystemhours|0.16157500000000005|; |CHM evalHCwallclockhours|55.006172222222226|; |CHM evalHCwallclockmax|2.8554194444444443|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F2a8ce326-baa5-4052-bff9-bd684393ff6c%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa1db35b8-cc7b-4019-bdd0-9f423762542e%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F6ab078fb-b668-452c-bbaa-8fb1fd8e25ba%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.26158888888888|; |CHM evalHCsystemhours|0.19243055555555555|; |CHM evalHCwallclockhours|60.242008333333345|; |CHM evalHCwallclockmax|3.176513888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F092bfb4f-d978-4964-a8ae-e5a7f7362f7c%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|;,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 15:40:52.834627961 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|75.88741944444445|; |CHM controlHCsystemhours|0.1663777777777778|; |CHM controlHCwallclockhours|52.24009722222222|; |CHM controlHCwallclockmax|2.852152777777778|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-CONTROLRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F06cbfab4-17a7-4415-9118-d0ebbe156bfd%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.26158888888888|; |CHM evalHCsystemhours|0.19243055555555555|; |CHM evalHCwallclockhours|60.242008333333345|; |CHM evalHCwallclockmax|3.176513888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fa332776f-175a-4595-bdeb-ab62e7f89921%2Fcall-EVALRuntimeTask%2FcacheCopy%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecis,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 18:26:42.379399427 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|81.1621222222222|; |CHM controlHCsystemhours|0.16283611111111113|; |CHM controlHCwallclockhours|57.139766666666674|; |CHM controlHCwallclockmax|3.1312416666666665|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F2aec499d-c11f-4a23-912b-8a61f9982437%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|86.06659722222223|; |CHM evalHCsystemhours|0.19141388888888877|; |CHM evalHCwallclockhours|60.83952500000001|; |CHM evalHCwallclockmax|3.1510444444444445|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff61c0caa-70a3-4ee5-8542-e78ba8364985%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F394f0e4c-4f60-420b-8477-3199ef269728%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM eval,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535665125,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-12 15:09:42.984220519 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|79.42513333333335|; |CHM controlHCsystemhours|0.15543611111111108|; |CHM controlHCwallclockhours|56.046666666666674|; |CHM controlHCwallclockmax|3.0881333333333334|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fbeb77715-227e-4dbd-803f-4458c83607c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Ff1b0b4cf-1a3f-47b3-84fa-529f118419ce%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fbeb77715-227e-4dbd-803f-4458c83607c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Ff1b0b4cf-1a3f-47b3-84fa-529f118419ce%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Ffb68536c-eb99-4d0d-a5c3-4f5accf94546%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.94748611111112|; |CHM evalHCsystemhours|0.19002777777777768|; |CHM evalHCwallclockhours|61.06326111111111|; |CHM evalHCwallclockmax|3.2047833333333333|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fbeb77715-227e-4dbd-803f-4458c83607c8%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Ff1b0b4cf-1a3f-47b3-84fa-529f118419ce%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM eva,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|78.81892777777776|; |CHM controlHCsystemhours|0.15627777777777782|; |CHM controlHCwallclockhours|55.94185833333335|; |CHM controlHCwallclockmax|3.053286111111111|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fdeb85607-d693-4232-a4da-0fb88dd29cad%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fdeb85607-d693-4232-a4da-0fb88dd29cad%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fc0877490-fd2d-4f42-bb92-f06210e94d95%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|84.33091111111112|; |CHM evalHCsystemhours|0.18621944444444444|; |CHM evalHCwallclockhours|61.43|; |CHM evalHCwallclockmax|3.073069444444444|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fdeb85607-d693-4232-a4da-0fb88dd29cad%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Score|0.9,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|84.8981027777778|; |CHM controlHCsystemhours|0.19177500000000003|; |CHM controlHCwallclockhours|60.16600277777776|; |CHM controlHCwallclockmax|3.0439777777777777|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F1731c546-7466-4adf-9790-3f99d07df05b%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F1731c546-7466-4adf-9790-3f99d07df05b%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F669edf6c-76a1-4d82-8cf7-5cd104df2496%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|83.2423166666667|; |CHM evalHCsystemhours|0.18843333333333337|; |CHM evalHCwallclockhours|61.06540555555557|; |CHM evalHCwallclockmax|3.1854916666666666|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F1731c546-7466-4adf-9790-3f99d07df05b%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsn,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|86.02092777777776|; |CHM controlHCsystemhours|0.19513888888888892|; |CHM controlHCwallclockhours|62.28637777777777|; |CHM controlHCwallclockmax|3.304836111111111|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F258eacc8-3768-44a8-86dc-1b2b0516a553%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F258eacc8-3768-44a8-86dc-1b2b0516a553%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2Fb89e3e0d-4f93-4b2d-9008-041545f2764c%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|87.0306027777778|; |CHM evalHCsystemhours|0.19828888888888896|; |CHM evalHCwallclockhours|62.522422222222225|; |CHM evalHCwallclockmax|3.293238888888889|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F258eacc8-3768-44a8-86dc-1b2b0516a553%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsn,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|89.85896666666667|; |CHM controlHCsystemhours|0.20056666666666664|; |CHM controlHCwallclockhours|63.561513888888875|; |CHM controlHCwallclockmax|3.142697222222222|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F96b872e8-26c0-4406-a7d0-addf04f4ad0e%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|78.10857222222224|; |CHM evalHCsystemhours|0.28728055555555554|; |CHM evalHCwallclockhours|52.84132777777778|; |CHM evalHCwallclockmax|2.9151722222222225|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2F3609bc35-c943-4006-8b6f-9d71e6c68ef5%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM eval,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run finished. ### Test: HaplotypeCaller CARROT Regression Tests | Status: succeeded; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC; <details><summary><b>Results</b></summary>; ; |**Results** | |; | --- | --- |; |CHM controlHCprocesshours|90.613975|; |CHM controlHCsystemhours|0.19898611111111109|; |CHM controlHCwallclockhours|63.943677777777786|; |CHM controlHCwallclockmax|3.1089944444444444|; |CHM controlMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-CONTROLRuntimeTask%2Fmonitoring.pdf)|; |CHM controlindelF1Score|0.8724|; |CHM controlindelPrecision|0.8814|; |CHM controlsnpF1Score|0.9784|; |CHM controlsnpPrecision|0.9706|; |CHM controlsnpRecall|0.9863|; |CHM controlsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-BenchmarkVCFControlSample%2FBenchmark%2F10080eab-b0ad-4752-80cb-fc6d34bd9ad9%2Fcall-CombineSummaries%2Fsummary.csv)|; |CHM evalHCprocesshours|93.63756388888888|; |CHM evalHCsystemhours|0.6379805555555556|; |CHM evalHCwallclockhours|70.50882222222222|; |CHM evalHCwallclockmax|3.5186027777777777|; |CHM evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CHMSampleHeadToHead%2FBenchmarkComparison%2Fb7ddd5f2-fded-4076-b163-33ad637fb5bd%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |CHM evalindelF1Score|0.8724|; |CHM evalindelPrecision|0.8814|; |CHM evalsnpF1Sco,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:31,Test,Test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,3,"['Benchmark', 'Test']","['BenchmarkVCFsHeadToHeadOrchestrated', 'Test', 'Tests']"
Testability,### 🥕CARROT🥕 run report stub finished; for run HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC (16c4f291-72ad-4c1c-9d59-497e046b8c39); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2FHaplotypeCaller%20CARROT%20Regression%20Tests_run_2022-07-12%2017%3A28%3A58.385003733%20UTC%2Fstub%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fdb056573-9fa5-4d27-ae3e-fc8772115b73%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fdb056573-9fa5-4d27-ae3e-fc8772115b73%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2Fca269da4-f5aa-46eb-8d7d-3a49df158ac5%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182706519:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182706519,1,['stub'],['stub']
Testability,### 🥕CARROT🥕 run report stub finished; for run HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC (3d572c63-96eb-4429-98da-e698e4540893); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2FHaplotypeCaller%20CARROT%20Regression%20Tests_run_2022-07-22%2017%3A23%3A11.546909540%20UTC%2Fstub%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe8aedeed-fcda-404e-bf9e-f289ac512b84%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fe8aedeed-fcda-404e-bf9e-f289ac512b84%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F72efeea8-da0d-4193-a64b-02ffcdaae6de%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193040190:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1193040190,1,['stub'],['stub']
Testability,### 🥕CARROT🥕 run report stub finished; for run HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC (e8a17046-7dac-497d-9a1c-217251f75d96); | File | URI |; | --- | --- |; | empty_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2FHaplotypeCaller%20CARROT%20Regression%20Tests_run_2022-07-25%2015%3A10%3A00.795026401%20UTC%2Fstub%2Freport_template.ipynb) |; | html_report | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fc4c8e871-32e3-4593-997d-4bc7ca5dd739%2Fcall-generate_report_file%2Freport.html) |; | populated_notebook | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/generate_report_file_workflow%2Fc4c8e871-32e3-4593-997d-4bc7ca5dd739%2Fcall-generate_report_file%2Freport.ipynb) |; | run_csv_zip | [View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsp-methods-carrot-data/reports%2Fmethods-prod%2Frun_data%2F655e6d77-e891-46ab-8cec-27761a7d077e%2Frun_csvs.zip) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194806991:24,stub,stub,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194806991,1,['stub'],['stub']
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""35a5dad7-0921-4cbd-ab53-279506a2b613"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:49:22.040601374 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154425516:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154425516,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""85b43c98-aca0-4f9c-b56b-f4d3c29b84da"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-13 20:50:21.938874311 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154426341:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1154426341,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""f41c307f-57fd-4cd5-8c35-38b1fab53118"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 15:54:21.685287323 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155389940:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1155389940,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""b8d92142-d006-4cd0-a703-94baa0cd8e2c"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-06-14 16:42:21.893638546 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155442844:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1155442844,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""a46a9c3b-1b08-4d26-9e21-afe768a7ae99"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-11 19:00:58.009470950 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180757767:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1180757767,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""16c4f291-72ad-4c1c-9d59-497e046b8c39"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182064624:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182064624,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2e29a7f1-42a0-4b2d-8868-45f2d683cdb8"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:02:00.286469813 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192770664:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192770664,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""3d572c63-96eb-4429-98da-e698e4540893"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-22 17:23:11.546909540 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192786663:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1192786663,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""e8a17046-7dac-497d-9a1c-217251f75d96"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-25 15:10:00.795026401 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.NIST_contamination"": 0.0383312,; ""VariantCallingCarrotOrchestrated.NIST_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrotOrchestrated.NIST_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.agg_preemptible_tries"": 3,; ""VariantCallingCarrotOrchestrated.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrotOrchestrated.contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.exome1_base_file_name"": ""NA12878Exome1"",; ""VariantCallingCarrotOrchestrated.exom",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194178233:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194178233,2,['Test'],"['Test', 'Tests']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""121a726a-b813-46be-a21e-d744cf8e1212"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 15:40:52.834627961 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1f011d1a-af0f-4eb7-9554-92bf741f9fa3"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-04 15:40:52.834627961 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535003366:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535003366,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-04 18:26:42.379399427 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""8d6ce799-75e0-42e2-b527-f823f5ff55e6"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-04 18:26:42.379399427 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-12 15:09:42.984220519 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2891f1b5-e415-4d62-ab4e-49fba755b096"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-12 15:09:42.984220519 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1bf5817a-d896-41de-b193-4a53a1264470"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""00d212a9-8eac-4575-9cde-b0a911b3c2f2"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550066071:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550066071,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1097e2ec-85ce-4fa8-b59e-fc82a8ea8bed"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574076227:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574076227,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""fca2c322-83ec-454a-a917-deb026411e19"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684352689:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684352689,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""83db9528-9aa0-4963-a382-95c0dc24102d"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687151782:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687151782,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""7564e667-ae57-44ff-806d-3689dcd5d394"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 01:13:16.103236135 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848056937:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848056937,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""2383faf2-a2c4-4fc0-8ff9-d77571847ad5"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-09 19:10:16.577655639 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848617792:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1848617792,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""71f08bec-32b8-457e-aac0-d7ce906b1d13"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:56:16.652443526 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1860567595:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1860567595,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""06f8115b-3543-4c05-a877-7dbe35d345ab"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-12-18 13:57:17.644566034 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/939c8a20-8299-4f22-9735-2fd6b6a8f0d7/eval.wdl"",; ""eval_wdl_hash"": ""48f843a519f65bc9bf17938586ea7b37dc1b81959e200f21cbf98ae3daea13abf2c28daadd3e795e85c49c17b5718d87ccb9bf3921601bebcc7626d1253141a4"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1860569901:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1860569901,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""195729e7-44f5-484b-9a03-947bb596d741"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-02 16:15:20.291548156 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874234666:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1874234666,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""e6d27810-1f6f-4d43-b1f7-c5820bb65d88"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-09 19:30:21.598551444 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1883655550:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1883655550,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""118bc5b3-e588-4d0a-b455-3cbfcc4ecb63"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-17 15:15:22.880396515 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1896021617:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1896021617,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""ab3a1b26-50da-4123-9f21-77b7ffd9aacf"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-18 17:19:23.444981770 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1898900961:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1898900961,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""4ae67551-5ddd-4b7a-9521-acc21eaf0d66"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-01-19 16:18:28.029442655 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1900708597:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1900708597,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"### 🥕CARROT🥕 run started; ### Test: HaplotypeCaller CARROT Regression Tests | Status: building; Run: HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""c9ffb306-e25b-4843-bb68-0b6e5ca70b15"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2024-06-05 12:54:29.044258506 UTC"",; ""status"": ""building"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""test_wdl_dependencies"": null,; ""test_wdl_dependencies_hash"": null,; ""eval_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/7e3704ce-f26c-4465-a6ab-f64faca619f4/eval.wdl"",; ""eval_wdl_hash"": ""8cecc1e6a3ade904ed3bfaae834df6aeac9b50fbc08966557f9e0c1628058b2c64d080f78d0cad222b4b02400db47d540d3a1bcdb8275c475b49a027bf330605"",; ""eval_wdl_dependencies"": null,; ""eval_wdl_dependencies_hash"": null,; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestrated.CHM_contamination"": 0.0,; ""VariantCallingCarrotOrchestrated.CHM_input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm1_chm13_hiseqx_sm_hf3mo.bam"",; ""VariantCallingCarrotOrchestrated.CHM_input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrotOrchestrated.NIST_base_file_name"": ""NA24385"",; ""VariantCallingCarrotOrchestrated.NIST_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrotOrchestra",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2149793367:30,Test,Test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2149793367,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"###### | 100%; termcolor-1.1.0 | 8 KB | ########## | 100%; protobuf-3.11.2 | 635 KB | ########## | 100%; keras-applications-1 | 33 KB | ########## | 100%; readline-6.2 | 606 KB | ########## | 100%; libgfortran-ng-7.3.0 | 1006 KB | ########## | 100%; numpy-1.13.3 | 3.1 MB | ########## | 100%; ```. numpy-1.13.3 is corectly installed . but then . ```; Collecting numpy (from biopython==1.70->-r /root/gatk-4.1.4.0/condaenv.g1uyq0ce.requirements.txt (line 1)); Downloading https://files.pythonhosted.org/packages/62/20/4d43e141b5bc426ba38274933ef8e76e85c7adea2c321ecf9ebf7421cedf/numpy-1.18.1-cp36-cp36m-manylinux1_x86_64.whl (20.1MB); ```. that does . ```; Found existing installation: numpy 1.13.3; Uninstalling numpy-1.13.3:; Successfully uninstalled numpy-1.13.3; ```. this causes ```gatk DetermineGermlineContigPloidy ```; to exit with an error related to numpy.testing.decorators which is deprecated since numpy 1.15.0 see https://docs.scipy.org/doc/numpy-1.15.0/release.html. ```; Deprecations. Aliases of builtin pickle functions are deprecated, in favor of their unaliased pickle.<func> names:; numpy.loads; numpy.core.numeric.load; numpy.core.numeric.loads; numpy.ma.loads, numpy.ma.dumps; numpy.ma.load, numpy.ma.dump - these functions already failed on python 3 when called with a string.; Multidimensional indexing with anything but a tuple is deprecated. This means that the index list in ind = [slice(None), 0]; arr[ind] should be changed to a tuple, e.g., ind = [slice(None), 0]; arr[tuple(ind)] or arr[(slice(None), 0)]. That change is necessary to avoid ambiguity in expressions such as arr[[[0, 1], [0, 1]]], currently interpreted as arr[array([0, 1]), array([0, 1])], that will be interpreted as arr[array([[0, 1], [0, 1]])] in the future.; Imports from the following sub-modules are deprecated, they will be removed at some future date.; numpy.testing.utils; numpy.testing.decorators; numpy.testing.nosetester; numpy.testing.noseclasses; numpy.core.umath_tests; ````. regards. Eric",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6396:2573,test,testing,2573,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6396,4,['test'],['testing']
Testability,"#1629 @akiezun @droazen @lbergelson. Added a substring search to `SWPairwiseAlignment.align`to avoid running the full Smith-Waterman when the query is found in the reference without any indels. The performance benefit of this code will be data dependent. In the current HaplotypeCaller test, >80% of the Smith-Waterman calls are filtered by the substring search. Added tests to cover all of the overhang strategies. **Note:** The substring search only works for the `SOFTCLIP`and `IGNORE`overhang strategies. The `INDEL`and `LEADING_INDEL`can result in more complicated CIGAR strings. See the `SWPairwiseAlignmentUnitTest.testSubstringMatchIndelLong` and `SWPairwiseAlignmentUnitTest.testSubstringMatchLeadingIndelLong` tests for examples.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1677:286,test,test,286,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1677,5,['test'],"['test', 'testSubstringMatchIndelLong', 'testSubstringMatchLeadingIndelLong', 'tests']"
Testability,#2689 - Example code to mark fields that do not have a combination operation to avoid warnings such as 'No valid combination operation found for INFO field AN - the field will NOT be part of INFO fields in the generated VCF record'. We also have [GenomicsDB PR#85](https://github.com/GenomicsDB/GenomicsDB/pull/85) in the works that will log these types of messages only once per field.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6514:338,log,log,338,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6514,1,['log'],['log']
Testability,"#4801 addressed the spanning deletion issue with new qual, so I'm ready to go ahead and do this once a green light is given. @droazen you wanted to wait for your HC tests branch to go in, right?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393211539:165,test,tests,165,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393211539,1,['test'],['tests']
Testability,#5222 added `ExampleLocusWalkerSparkIntegrationTest.java`; #5289 adds more tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5276#issuecomment-427788213:75,test,tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5276#issuecomment-427788213,1,['test'],['tests']
Testability,"#7359); - don't mix contigs, rightsize memory (#7361); - Add custom annotations as ac an af (#7351); - Add task for VAT validation #8 & 9 (#7364); - added bcftools, upgraded gcloud version (#7369); - fix wdl (#7378); - Update .dockstore.yml; - Add VAT validation rule #5 [VS-16] (#7365); - Add VAT validation rule #7 [VS-14] and validation rule #6 [VS-15] (#7379); - Batching of samples for create import TSVs (#7382); - Add VAT validation rule #2 [VS-19] (#7374); - Create VAT scripts directory (#7386); - fixing SA change from file to string (#7371); - add extract_subpop script (#7387); - Add is_loaded column to sample_info and logic to populate after ingest [VS-158] (#7389); - Add Gnomad subpopulation info into the VAT (#7381); - implement GVS ID assignment (#7355); - no longer loading sample info table in this wdl (#7407); - divide up creation/population of temp pet table [VS-48] (#7395); - Sample QC metrics (#7396); - update import for is_loaded (#7416); - fix partition end, add 1 (#7420); - Fixes to CreateFilterSet and ExtractCallset from 30K run (#7423); - Also changed file size from Int to Float in SumBytes task python (#7429); - Adding the subpopulation calculations to the VAT creation WDL (#7399); - 154 De obfuscate (#7435); - filter on gvs_ids for workflow (#7428); - update for assign ids and changes in import (#7439); - need to loop through sets when moving to done (#7440); - add option for create filter set to use sample_info with is_loaded (#7434); - remove dead branch (#7443); - Scaling the VAT -- switch the input to take in a file of vcf shard file names (#7446); - dockstore testing: move validate vat inputs (#7449); - Update GVS sample QC to support multiple callsets per datasset [VS-177] (#7451); - Update GvsImportGenomes.wdl (#7462); - Add extraction uuid BQ label to GvsPrepareCallstep from GvsExtractCohortFromSampleNames (#7458); - Add manifest summary file to GvsExtractCallset (#7457); - Create workflow to create and populate alt_allele table [VS-51] (",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8248:16795,log,logic,16795,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8248,4,"['log', 'test']","['logic', 'testing']"
Testability,"#7649, and because we are still awaiting coverage from pipeline-level/CARROT testing, I decided to go ahead and add these exact-match tests. This essentially freezes current ModelSegments behavior, which has been exactly stable since https://github.com/broadinstitute/gatk/pull/5814; that is, from sometime between 4.1.0.0/4.1.1.0 almost 3 years ago up to 4.2.4.1 today. Note that the original test files were generated from the test BAMs (e.g., src/test/resources/large/cnv_somatic_workflows_test_files/HCC1143-t1-chr20-downsampled.deduplicated.bam), since these BAMs have been used in the past to consistently generate test files for other tools in the ModelSegments and GermlineCNVCaller pipelines. However, these original test files contained insufficient data to activate the changes found in #7649, even had exact-match tests been present. I thus took some old HCC1143T 100% WES data that I had and snippeted it to chr20. I've confirmed that the added tests with these files would've picked up the regression of log10factorial seen in #7649 for all relevant modes (i.e., all those that take in the allele counts as input, since that regression only affected allele-fraction MCMC sampling). Tests take maybe an additional minute to run and there was about ~12MB of additional large resources checked in, but I didn't try too hard to bring either down. I also added some early-fail parameter validation to check that the minimum total allele count in the case sample is zero in matched-normal mode. There are actually some open questions in my mind as to what the best behavior should be here, but given some of the discussion in #6499 and possible plans for using joint segmentation to do filtering of germline events, I think it's best to enforce that all het sites coming out of the genotyping step are the same across all samples. Recall that we added this parameter in #5556 because some users were running matched normals with much lower depth than their cases. This meant that many normal ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7652:1078,test,tests,1078,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7652,1,['test'],['tests']
Testability,"#carrot(FE Test CHM v2.1, FunctionalEquivalenceTest.gatk_docker, GatkDragenConcordanceEvaluation.docker_placeholder)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410295:11,Test,Test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410295,1,['Test'],['Test']
Testability,"#carrot(FE Test CHM v2.1, gatk_docker, docker_placeholder)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760277646:11,Test,Test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760277646,2,['Test'],['Test']
Testability,"#carrot(GATK HaplotypeCaller Test, VariantCallingCarrot.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1023543826:29,Test,Test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1023543826,2,['Test'],['Test']
Testability,"#carrot(GATK HaplotypeCaller vs Nightly Test, VariantCallingCarrot.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191489:40,Test,Test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191489,8,['Test'],['Test']
Testability,"#carrot(HaplotypeCaller CARROT Regression Tests, VariantCallingCarrot.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067504879:42,Test,Tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067504879,1,['Test'],['Tests']
Testability,"#carrot(HaplotypeCaller CARROT Regression Tests, VariantCallingCarrotOrchestrated.gatk_docker, )",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533285362:42,Test,Tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533285362,40,['Test'],['Tests']
Testability,"#carrot(HaplotypeCaller DRAGEN WGS1, TestWrapper.gatk_docker_override, placeholder)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738146601:37,Test,TestWrapper,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738146601,2,['Test'],['TestWrapper']
Testability,$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:369); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.process.internal.worker.DefaultWorkerProcess.waitForStop(DefaultWorkerProcess.java:190); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.process.internal.worker.DefaultWorkerProcessBuilder$MemoryRequestingWorkerProcess.waitForStop(DefaultWorkerProcessBuilder.java:228); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.worker.ForkingTestClassProcessor.stop(ForkingTestClassProcessor.java:122); 11:54:40.436 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.processors.RestartEveryNTestClassProcessor.endBatch(RestartEveryNTestClassProcessor.java:63); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.api.internal.tasks.testing.processors.RestartEveryNTestClassProcessor.stop(RestartEveryNTestClassProcessor.java:57); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.FailureHandlingDispatch.dispatch(FailureHandlingDispatch.java:29); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.AsyncDispatch.dispatchMessages(AsyncDispatch.java:132); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.internal.dispatch.AsyncDispatch.access$000(AsyncDispatch.java:33); 11:54:40.437 [ERROR] [org.gradle.internal.buildevents.BuildExcept,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2802:14759,test,testing,14759,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2802,1,['test'],['testing']
Testability,${GATK4_JAR} MarkDuplicatesSpark -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam -O tmp.junk.bam --METRICS_FILE=tmp.metrics -parallelism 1. samtools view tmp.junk.bam | less; and you'll see 1001995 ahead of 1001645; Offending records are at [20:1001995] and [20:1001645],MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1249:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1249,1,['test'],['test']
Testability,% <ø> (ø)` | `93 <0> (ø)` | :arrow_down: |; | [...ils/recalibration/covariates/ContextCovariate.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWNhbGlicmF0aW9uL2NvdmFyaWF0ZXMvQ29udGV4dENvdmFyaWF0ZS5qYXZh) | `92.727% <ø> (ø)` | `34 <0> (ø)` | :arrow_down: |; | [...oadinstitute/hellbender/engine/AssemblyRegion.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvQXNzZW1ibHlSZWdpb24uamF2YQ==) | `85.475% <0%> (ø)` | `62 <0> (ø)` | :arrow_down: |; | [...er/tools/walkers/rnaseq/OverhangFixingManager.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3JuYXNlcS9PdmVyaGFuZ0ZpeGluZ01hbmFnZXIuamF2YQ==) | `94.079% <100%> (+1.268%)` | `67 <0> (+1)` | :arrow_up: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: |; | [...park/sv/discovery/alignment/AlignmentInterval.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9kaXNjb3ZlcnkvYWxpZ25tZW50L0FsaWdubWVudEludGVydmFsLmphdmE=) | `89.655% <0%> (ø)` | `74% <0%> (ø)` | :arrow_down: |; | [...kers/variantutils/UpdateVCFSequenceDictionary.java](https://codecov.io/gh/broadinstitute/gatk/pull/4212/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL3ZhcmlhbnR1dGlscy9VcGRhdGVWQ0ZTZXF1ZW5jZURpY3Rpb25hcnkuamF2YQ==) | `93.846% <0%> (+6.89%)` | `15% <0%> (+1%)` | :arrow_up: |; | [...utils/smithwaterman/SmithWatermanIntelAligner.java](h,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-359098274:2443,test,test,2443,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-359098274,1,['test'],['test']
Testability,%)` | `33% <0%> (+4%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `100% <0%> (ø)` | `20% <0%> (+9%)` | :arrow_up: |; | [...itute/hellbender/engine/spark/GATKRegistrator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvR0FUS1JlZ2lzdHJhdG9yLmphdmE=) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...walkers/haplotypecaller/HaplotypeCallerEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXJFbmdpbmUuamF2YQ==) | `79.62% <0%> (+0.653%)` | `83% <0%> (+16%)` | :arrow_up: |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `91.667% <0%> (+0.758%)` | `11% <0%> (+2%)` | :arrow_up: |; | [...org/broadinstitute/hellbender/engine/GATKTool.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvR0FUS1Rvb2wuamF2YQ==) | `92.33% <0%> (+0.902%)` | `164% <0%> (+71%)` | :arrow_up: |; | [...tools/walkers/haplotypecaller/HaplotypeCaller.java](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9IYXBsb3R5cGVDYWxsZXIuamF2YQ==) | `95.918% <0%> (+2.37%)` | `26% <0%> (+10%)` | :arrow_up: |; | ... and [2 more](https://codecov.io/gh/broadinstitute/gatk/pull/4785/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4785#issuecomment-390343864:3178,test,test,3178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4785#issuecomment-390343864,1,['test'],['test']
Testability,%> (ø)` | `7 <7> (?)` | |; | [...pynumber/CallCopyRatioSegmentsIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL0NhbGxDb3B5UmF0aW9TZWdtZW50c0ludGVncmF0aW9uVGVzdC5qYXZh) | `94.737% <80%> (-5.263%)` | `4 <0> (ø)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `92% <0%> (-1.75%)` | `14% <0%> (+7%)` | |; | [...r/utils/read/markduplicates/sparkrecords/Pair.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9QYWlyLmphdmE=) | `98.276% <0%> (-1.724%)` | `49% <0%> (+22%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-1.115%)` | `5% <0%> (ø)` | |; | [...idation/CompareDuplicatesSparkIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay92YWxpZGF0aW9uL0NvbXBhcmVEdXBsaWNhdGVzU3BhcmtJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `96.296% <0%> (-0.37%)` | `10% <0%> (+3%)` | |; | [...stitute/hellbender/tools/spark/ApplyBQSRSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9BcHBseUJRU1JTcGFyay5qYXZh) | `100% <0%> (ø)` | `5% <0%> (+2%)` | :arrow_up: |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5115/diff?src=pr,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5115#issuecomment-413221307:2871,test,test,2871,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5115#issuecomment-413221307,1,['test'],['test']
Testability,"'t seem to be a resource issue. The only difference appears to be the number of input gvcfs, which is still quite small (345 vs 80).  The number of reader threads for GenomicsDBImport has been hard-coded to 1 because these are exome sequences; scatter count = 10, batch size = 50, gather\_vcfs = false. GenomicsDBImport appears to succeed on all 10 shards but workflow execution fails with exactly the same c++ error, see below. REQUIRED for all errors and issues: ; ; a) GATK version used: v4.2.6.1. b) Exact command used:. java -Dconfig.file=/scratch.global/lee04110/config/sing-cache.conf -jar /home/pankrat2/public/bin/gatk4/cromwell-81.jar run -i /scratch.global/lee04110/config/jg.ca\_defects.json /home/pankrat2/public/bin/gatk4/warp/pipelines/broad/dna\_seq/germline/joint\_genotyping/JointGenotyping.wdl -o  <(echo '{""final\_workflow\_outputs\_dir"" : ""/scratch.global/lee04110/tmp\_jg"", ""use\_relative\_output\_paths"" : true, ""workflow-log-temporary"" : true}'). c) Entire program log: (too big to include the whole thing). (From main process stderr, picking from SplitInterval setting status to Done). \[2022-10-18 15:38:20,88\] \[info\] BackgroundConfigAsyncJobExecutionActor \[9743b28aJointGenotyping.SplitIntervalList:NA:1\]: Status change from WaitingForReturnCode to Done. \[2022-10-18 15:38:25,47\] \[info\] WorkflowExecutionActor-9743b28a-3819-49a7-8598-b0c5267647ee \[9743b28a\]: Starting JointGenotyping.ImportGVCFs (10 shards). \[2022-10-18 15:38:33,03\] \[info\] Assigned new job execution tokens to the following groups: 9743b28a: 10. \[2022-10-18 15:38:33,14\] \[warn\] BackgroundConfigAsyncJobExecutionActor \[9743b28aJointGenotyping.ImportGVCFs:3:1\]: Unrecognized runtime attribute keys: preemptible, bootDiskSizeGb, disks, cpu, memory. \[2022-10-18 15:38:33,14\] \[warn\] BackgroundConfigAsyncJobExecutionActor \[9743b28aJointGenotyping.ImportGVCFs:2:1\]: Unrecognized runtime attribute keys: preemptible, bootDiskSizeGb, disks, cpu, memory. \[2022-10-18 15:38:33,15\] \[warn",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8076:1970,log,log,1970,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8076,1,['log'],['log']
Testability,"(/gatkCloneMountPoint/src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf, src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/AS_Annotations.keepRawCombined.expected.vcf, [-A, ClippingRankSumTest, -G, AS_StandardAnnotation, -G, StandardAnnotation, -keep-combined], /gatkCloneMountPoint/src/test/resources/large/human_g1k_v37.20.21.fasta) [31mFAILED[39m[0K. java.lang.AssertionError: AS_QUAL present in one but not in the other expected [null] but found [-2950][0K. at org.testng.Assert.fail(Assert.java:93). at org.testng.Assert.failNotSame(Assert.java:508). at org.testng.Assert.assertNull(Assert.java:444). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertAttributesEquals(VariantContextTestUtils.java:354). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:427). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqualAlleleOrderIndependent(VariantContextTestUtils.java:549). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.lambda$assertVariantContextsMatch$1(GenotypeGVCFsIntegrationTest.java:297). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.assertForEachElementInLists(GenotypeGVCFsIntegrationTest.java:68). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.runGenotypeGVCFSAndAssertSomething(GenotypeGVCFsIntegrationTest.java:355). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.runGenotypeGVCFSAndAssertSomething(GenotypeGVCFsIntegrationTest.java:335). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.assertVariantContextsMatch(GenotypeGVCFsIntegrationTest.java:297). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.testEntireVariantContext(GenotypeGVCFsIntegrationTest.java:291); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973:4766,test,testutils,4766,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973,6,"['assert', 'test']","['assertForEachElementInLists', 'assertVariantContextsAreEqualAlleleOrderIndependent', 'assertVariantContextsMatch', 'testEntireVariantContext', 'testutils']"
Testability,(50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:3591,test,test,3591,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,(But please don't merge until we fix the issue related to assigning logical names to read inputs in the GATK engine),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2067#issuecomment-248988480:68,log,logical,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2067#issuecomment-248988480,1,['log'],['logical']
Testability,(DO NOT MERGE) Sl debug vector pair hmm test 2,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6658:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6658,1,['test'],['test']
Testability,"(HaplotypeCallerEngine.java:599); 	at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller.apply(HaplotypeCaller.java:236); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.processReadShard(AssemblyRegionWalker.java:291); 	at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:267); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:966); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. Based on the discussion around #4963 and the [test VCF](https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/testGenotypeGivenAllelesMode_givenAlleles.vcf), I gather that this is intended to work without error. I was trying to figure out how these cases differed from the spanning deletion in the aforementioned test VCF. One thing I noticed was that these two problematic cases have the SNP at the very last base of the spanning deletion. I'm just speculating here, but maybe it is related to an off-by-one bug of some sort? . I am testing with v. 4.0.9.0.; I also tried with v. 4.0.5.1 which does not crash, but rather prints the warnings discussed in #4963:; `00:02:10.995 WARN HaplotypeCallerEngine - Multiple valid VCF records detected in the alleles input file at site 22:16137302-16137302, only considering the first record`; `00:03:08.220 WARN HaplotypeCallerEngine - Multiple valid VCF records detected in the alleles input file at site 22:16464051-16464051",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5336:4864,test,test,4864,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5336,1,['test'],['test']
Testability,(If this is not already possible -- we should test this),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4348:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4348,1,['test'],['test']
Testability,"(Linked to #7988); Feature additions (and integration tests) for CompareReferences tool, including:; * ability to run base-level comparison modes on specified sequences (not just detected mismatching sequences) using ""sequences-to-align"" option ; * changed wording for missing MD5 compatibility status ('COMPATIBLE' to 'MAYBE_COMPATIBLE,' or something similar) in compatibility tool ; * option to ignore case level differences in base level comparison modes . NOTE: integration test on using an equivalent sequences input file with more than one line (ie. specifying more than one sequences) not yet tested, and can probably do some refactoring to clean up the code for the equivalent sequence comparisons",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8163:54,test,tests,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8163,3,['test'],"['test', 'tested', 'tests']"
Testability,(Note that the failure in the cloud tests is expected due to an ongoing GCS bucket region migration -- it should clear up next week),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8318#issuecomment-1546280764:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8318#issuecomment-1546280764,2,['test'],['tests']
Testability,(PairRDDFunctions.scala:1203); 	at org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1211); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1190); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745). **This is the stack I get when the test completes but fails (note that the expected line count appears to not match the line count of the expected output file in the repo): **. java.lang.AssertionError: line counts expected [2629] but found [507]; 	at org.testng.Assert.fail(Assert.java:94); 	at org.testng.Assert.failNotEquals(Assert.java:496); 	at org.testng.Assert.assertEquals(Assert.java:125); 	at org.testng.Assert.assertEquals(Assert.java:372); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:211); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:190); 	at org.broadinstitute.hellbender.tools.examples.ExampleAssemblyRegionWalkerSparkIntegrationTest.testExampleAssemblyRegionWalker(ExampleAssemblyRegionWalkerSparkIntegrationTest.java:29); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMet,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:3150,Assert,AssertionError,3150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['Assert'],['AssertionError']
Testability,(SV) Add tests for AssemblyContigWithFineTunedAlignments,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4961:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4961,1,['test'],['tests']
Testability,"(SV) consolidate logic in simple chimera inference, update how variants are represented in VCF emitted by new code path",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4663:17,log,logic,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4663,2,['log'],['logic']
Testability,(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6745:3141,Test,TestNG,3141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6745,2,['Test'],['TestNG']
Testability,(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:3162,Test,TestNG,3162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['Test'],['TestNG']
Testability,([0-9]+):([0-9]+).* OPTICAL_DUPLICATE_PIXEL_DISTANCE=100 VERBOSITY=INFO QUIET=false VALIDATION_STRINGENCY=STRICT COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=500000 CREATE_INDEX=false CREATE_MD5_FILE=false GA4GH_CLIENT_SECRETS=client_secrets.json; ## htsjdk.samtools.metrics.StringHeader; # Started on: Thu Oct 22 16:45:11 EDT 2015. ## METRICS CLASS picard.sam.DuplicationMetrics; LIBRARY UNPAIRED_READS_EXAMINED READ_PAIRS_EXAMINED UNMAPPED_READS UNPAIRED_READ_DUPLICATES READ_PAIR_DUPLICATES READ_PAIR_OPTICAL_DUPLICATES PERCENT_DUPLICATION ESTIMATED_LIBRARY_SIZE; Solexa-16399 0 0 0 0 0 0 ?; Solexa-16421 0 0 0 0 0 0 ?; Solexa-16410 0 0 0 0 0 0 ?; Solexa-16398 0 0 0 0 0 0 ?; Solexa-16420 0 0 0 0 0 0 ?; Solexa-16419 4 4 4 0 0 0 0; Solexa-16408 0 0 0 0 0 0 ?; Solexa-16416 2 2 2 0 0 0 0; Solexa-16426 0 0 0 0 0 0 ?; Solexa-16415 0 0 0 0 0 0 ?; Solexa-16404 3 9 3 0 2 0 0.190476 17; Solexa-16418 0 0 0 0 0 0 ?; Solexa-16407 0 0 0 0 0 0 ?; Solexa-16406 1 10 1 0 0 0 0; Solexa-16412 3 6 3 0 1 0 0.133333 15; Solexa-16423 0 0 0 0 0 0 ?; Solexa-16411 0 0 0 0 0 0 ?; Solexa-16422 0 0 0 0 0 0 ?; Solexa-16400 0 0 0 0 0 0 ?; Solexa-16425 0 0 0 0 0 0 ?; Solexa-16403 0 0 0 0 0 0 ?; Solexa-16414 0 0 0 0 0 0 ?; Solexa-16424 0 0 0 0 0 0 ?; Solexa-16402 0 0 0 0 0 0 ?; ```. The equivalent hellbender command . ```; hellbender MarkDuplicatesSpark --input src/test/resources/org/broadinstitute/hellbender/tools/picard/sam/MarkDuplicates/example.chr1.1-1K.unmarkedDups.bam --METRICS_FILE expected_duplicate_metrics.txt.spark --output out.bam.spark; ```. produces. ```; ## METRICS CLASS org.broadinstitute.hellbender.utils.read.markduplicates.DuplicationMetrics; LIBRARY UNPAIRED_READS_EXAMINED READ_PAIRS_EXAMINED UNMAPPED_READS UNPAIRED_READ_DUPLICATES READ_PAIR_DUPLICATES READ_PAIR_OPTICAL_DUPLICATES PERCENT_DUPLICATION ESTIMATED_LIBRARY_SIZE; Solexa-16416 2 2 2 0 0 0 0 0; Solexa-16404 3 9 3 0 2 0 0.190476 17; Solexa-16419 4 4 4 0 0 0 0 0; Solexa-16412 3 6 3 0 1 0 0.133333 15; Solexa-16406 1 10 1 0 0 0 0 0; ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1045:2299,test,test,2299,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1045,1,['test'],['test']
Testability,(also fixed a broken link in [Removing Samples from a VDS.md](https://github.com/broadinstitute/gatk/compare/ah_var_store...rsa_vs_749#diff-74ddd9f71eec0cc8080c093e76fbecdb3fa8b9d443e7071591b635e3d47afca5)). test run here: https://app.terra.bio/#workspaces/gvs-dev/RSA%20-%20GVS%20Quickstart%20V2%20/job_history/d2957947-0249-4197-9531-0b4203f2ea1c,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8110:208,test,test,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8110,1,['test'],['test']
Testability,(includes classes that are not supposed to be reviewed and added here only to compile and make tests pass. Those classes are being reviewed in other pull requests. I'll mark them on github),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/841:95,test,tests,95,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/841,1,['test'],['tests']
Testability,"(inclusive),maxGQ=55(exclusive); ##GVCFBlock55-56=minGQ=55(inclusive),maxGQ=56(exclusive); ##GVCFBlock56-57=minGQ=56(inclusive),maxGQ=57(exclusive); ##GVCFBlock57-58=minGQ=57(inclusive),maxGQ=58(exclusive); ##GVCFBlock58-59=minGQ=58(inclusive),maxGQ=59(exclusive); ##GVCFBlock59-60=minGQ=59(inclusive),maxGQ=60(exclusive); ##GVCFBlock6-7=minGQ=6(inclusive),maxGQ=7(exclusive); ##GVCFBlock60-70=minGQ=60(inclusive),maxGQ=70(exclusive); ##GVCFBlock7-8=minGQ=7(inclusive),maxGQ=8(exclusive); ##GVCFBlock70-80=minGQ=70(inclusive),maxGQ=80(exclusive); ##GVCFBlock8-9=minGQ=8(inclusive),maxGQ=9(exclusive); ##GVCFBlock80-90=minGQ=80(inclusive),maxGQ=90(exclusive); ##GVCFBlock9-10=minGQ=9(inclusive),maxGQ=10(exclusive); ##GVCFBlock90-99=minGQ=90(inclusive),maxGQ=99(exclusive); ##GVCFBlock99-100=minGQ=99(inclusive),maxGQ=100(exclusive); ##INFO=<ID=BaseQRankSum,Number=1,Type=Float,Description=""Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities"">; ##INFO=<ID=ClippingRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref number of hard clipped bases"">; ##INFO=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth; some reads may have been filtered"">; ##INFO=<ID=DS,Number=0,Type=Flag,Description=""Were any of the samples downsampled?"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##INFO=<ID=ExcessHet,Number=1,Type=Float,Description=""Phred-scaled p-value for exact test of excess heterozygosity"">; ##INFO=<ID=InbreedingCoeff,Number=1,Type=Float,Description=""Inbreeding coefficient as estimated from the genotype likelihoods per-sample when compared against the Hardy-Weinberg expectation"">; ##INFO=<ID=MLEAC,Number=A,Type=Integer,Description=""Maximum likelihood expectation (MLE) for the allele counts (not necessarily the same as the AC), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MLEAF,Number=A,Type=Float,Description=""Maximum likelihood expectation (MLE) for the allele freque",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582:15784,test,test,15784,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582,1,['test'],['test']
Testability,"(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Fetch from VCF,Wall-clock time(s),0.052394,Cpu time(s),0.0522175,Critical path wall-clock time(s),0.050241,Cpu time(s),0.0500711,#critical path,55; GENOMICSDB_TIMER,Combining cells,Wall-clock time(s),0.008567,Cpu time(s),0.00855882,Critical path wall-clock time(s),0.004002,Cpu time(s),0.00399618,#critical path,29; GENOMICSDB_TIMER,Flush output,Wall-clock time(s),0,Cpu time(s),0,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Sections time,Wall-clock time(s),0.061053,Cpu time(s),0.0609081,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Time in single thread phase(),Wall-clock time(s),0.000112,Cpu time(s),0.00010141,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Time in read_all(),Wall-clock time(s),0.061276,Cpu time(s),0.0611596,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; [E::bcf_hdr_add_sample] Duplicated sample name 'HG00096'. Results: SUCCESS (0 tests, 0 successes, 0 failures, 0 skipped); :test FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':test'.; > Process 'Gradle Test Executor 1' finished with non-zero exit value 134; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693:8050,test,tests,8050,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"(this is mainly relevant for Picard tools, which often have lots of log.info() calls). CommandLineProgram's VERBOSITY is set to INFO by default, which is reasonable when you're actually interacting with a tool, but quickly gets spammy when running unit tests. I propose injecting VERBOSITY=ERROR (the strictest setting) into CommandLineProgramTest to avoid this. This would fix https://github.com/broadinstitute/hellbender/issues/134",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/147:68,log,log,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/147,2,"['log', 'test']","['log', 'tests']"
Testability,"(you should see it in the travis logs where the tests are all being executed, a bunch of download statements)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789:33,log,logs,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5155#issuecomment-418509789,2,"['log', 'test']","['logs', 'tests']"
Testability,(ø)` | `12 <0> (+1)` | :arrow_up: |; | [...rg/broadinstitute/hellbender/utils/io/IOUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9pby9JT1V0aWxzLmphdmE=) | `69.948% <71.429%> (+0.056%)` | `51 <1> (+1)` | :arrow_up: |; | [...ats/collections/SimpleCountCollectionUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9jb3B5bnVtYmVyL2Zvcm1hdHMvY29sbGVjdGlvbnMvU2ltcGxlQ291bnRDb2xsZWN0aW9uVW5pdFRlc3QuamF2YQ==) | `86.667% <83.333%> (-2.222%)` | `4 <1> (+1)` | |; | [...bender/tools/walkers/annotator/ReferenceBases.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9SZWZlcmVuY2VCYXNlcy5qYXZh) | `87.5% <0%> (-12.5%)` | `9% <0%> (+4%)` | |; | [...institute/hellbender/utils/test/ReadTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRUZXN0VXRpbHMuamF2YQ==) | `94.34% <0%> (-2.803%)` | `5% <0%> (+2%)` | |; | [...itute/hellbender/tools/walkers/mutect/Mutect2.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL211dGVjdC9NdXRlY3QyLmphdmE=) | `87.273% <0%> (-2.013%)` | `35% <0%> (+17%)` | |; | [...ils/read/markduplicates/sparkrecords/Fragment.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL3NwYXJrcmVjb3Jkcy9GcmFnbWVudC5qYXZh) | `92% <0%> (-1.75%)` | `14% <0%> (+7%)` | |; | [...r/tools/spark/sv/utils/GATKSVVCFUtilsUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5082/diff?src=pr&el=tree#diff-c3Jj,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867:2542,test,test,2542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5082#issuecomment-410074867,1,['test'],['test']
Testability,(ø)` | `24 <5> (ø)` | :arrow_down: |; | [...ls/read/markduplicates/GATKDuplicationMetrics.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL0dBVEtEdXBsaWNhdGlvbk1ldHJpY3MuamF2YQ==) | `100% <100%> (ø)` | `13 <13> (?)` | |; | [...forms/markduplicates/MarkDuplicatesSparkUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay90cmFuc2Zvcm1zL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzU3BhcmtVdGlscy5qYXZh) | `89.498% <100%> (-0.29%)` | `62 <4> (-8)` | |; | [...roadinstitute/hellbender/utils/read/ReadUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL1JlYWRVdGlscy5qYXZh) | `81.87% <100%> (+2.652%)` | `341 <9> (+152)` | :arrow_up: |; | [.../utils/read/markduplicates/LibraryIdGenerator.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9yZWFkL21hcmtkdXBsaWNhdGVzL0xpYnJhcnlJZEdlbmVyYXRvci5qYXZh) | `89.474% <100%> (-4.971%)` | `14 <3> (ø)` | |; | [...ols/walkers/markduplicates/MarkDuplicatesGATK.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL21hcmtkdXBsaWNhdGVzL01hcmtEdXBsaWNhdGVzR0FUSy5qYXZh) | `87.917% <69.231%> (-2.003%)` | `69 <0> (-7)` | |; | [...e/hellbender/utils/test/testers/SamFileTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `85.271% <79.167%> (-5.45%)` | `35 <8> (+3)` | |; | ... and [21 more](https://codecov.io/gh/broadinstitute/gatk/pull/4779/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4779#issuecomment-390350686:3865,test,test,3865,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4779#issuecomment-390350686,2,['test'],"['test', 'testers']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.6/tests/test/index.html) |; | python | openjdk8 | [29984.5](https://travis-ci.com/broadinstitute/gatk/jobs/317851323) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.5/tests/test/index.html) |; | integration | oraclejdk8 | [29984.12](https://travis-ci.com/broadinstitute/gatk/jobs/317851330) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.12/tests/test/index.html) |; | integration | openjdk11 | [29984.13](https://travis-ci.com/broadinstitute/gatk/jobs/317851331) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.13/tests/test/index.html) |; | cloud | openjdk8 | [29984.1](https://travis-ci.com/broadinstitute/gatk/jobs/317851319) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.1/tests/test/index.html) |; | cloud | openjdk11 | [29984.15](https://travis-ci.com/broadinstitute/gatk/jobs/317851333) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.15/tests/test/index.html) |; | unit | openjdk11 | [29984.14](https://travis-ci.com/broadinstitute/gatk/jobs/317851332) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.14/tests/test/index.html) |; | integration | openjdk8 | [29984.2](https://travis-ci.com/broadinstitute/gatk/jobs/317851320) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29984.4](https://travis-ci.com/broadinstitute/gatk/jobs/317851322) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.4/tests/test/index.html) |; | unit | openjdk8 | [29984.3](https://travis-ci.com/broadinstitute/gatk/jobs/317851321) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380:1351,log,logs,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.6/tests/test/index.html) |; | integration | oraclejdk8 | [29988.12](https://travis-ci.com/broadinstitute/gatk/jobs/317861697) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.12/tests/test/index.html) |; | python | openjdk8 | [29988.5](https://travis-ci.com/broadinstitute/gatk/jobs/317861683) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.5/tests/test/index.html) |; | integration | openjdk11 | [29988.13](https://travis-ci.com/broadinstitute/gatk/jobs/317861698) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.13/tests/test/index.html) |; | cloud | openjdk11 | [29988.15](https://travis-ci.com/broadinstitute/gatk/jobs/317861700) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.15/tests/test/index.html) |; | cloud | openjdk8 | [29988.1](https://travis-ci.com/broadinstitute/gatk/jobs/317861676) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.1/tests/test/index.html) |; | unit | openjdk11 | [29988.14](https://travis-ci.com/broadinstitute/gatk/jobs/317861699) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.14/tests/test/index.html) |; | integration | openjdk8 | [29988.2](https://travis-ci.com/broadinstitute/gatk/jobs/317861680) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29988.4](https://travis-ci.com/broadinstitute/gatk/jobs/317861682) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.4/tests/test/index.html) |; | unit | openjdk8 | [29988.3](https://travis-ci.com/broadinstitute/gatk/jobs/317861681) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29988.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351:1352,log,logs,1352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611710351,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.6/tests/test/index.html) |; | integration | oraclejdk8 | [29990.12](https://travis-ci.com/broadinstitute/gatk/jobs/317870159) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.12/tests/test/index.html) |; | python | openjdk8 | [29990.5](https://travis-ci.com/broadinstitute/gatk/jobs/317870152) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.5/tests/test/index.html) |; | cloud | openjdk8 | [29990.1](https://travis-ci.com/broadinstitute/gatk/jobs/317870147) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.1/tests/test/index.html) |; | cloud | openjdk11 | [29990.15](https://travis-ci.com/broadinstitute/gatk/jobs/317870162) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.15/tests/test/index.html) |; | integration | openjdk11 | [29990.13](https://travis-ci.com/broadinstitute/gatk/jobs/317870160) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.13/tests/test/index.html) |; | integration | openjdk8 | [29990.2](https://travis-ci.com/broadinstitute/gatk/jobs/317870149) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.2/tests/test/index.html) |; | unit | openjdk11 | [29990.14](https://travis-ci.com/broadinstitute/gatk/jobs/317870161) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29990.4](https://travis-ci.com/broadinstitute/gatk/jobs/317870151) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.4/tests/test/index.html) |; | unit | openjdk8 | [29990.3](https://travis-ci.com/broadinstitute/gatk/jobs/317870150) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29990.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629:1351,log,logs,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611720629,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.6/tests/test/index.html) |; | python | openjdk8 | [29992.5](https://travis-ci.com/broadinstitute/gatk/jobs/317887705) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.5/tests/test/index.html) |; | integration | oraclejdk8 | [29992.12](https://travis-ci.com/broadinstitute/gatk/jobs/317887712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.12/tests/test/index.html) |; | integration | openjdk11 | [29992.13](https://travis-ci.com/broadinstitute/gatk/jobs/317887713) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.13/tests/test/index.html) |; | cloud | openjdk8 | [29992.1](https://travis-ci.com/broadinstitute/gatk/jobs/317887701) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.1/tests/test/index.html) |; | cloud | openjdk11 | [29992.15](https://travis-ci.com/broadinstitute/gatk/jobs/317887715) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.15/tests/test/index.html) |; | integration | openjdk8 | [29992.2](https://travis-ci.com/broadinstitute/gatk/jobs/317887702) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.2/tests/test/index.html) |; | unit | openjdk11 | [29992.14](https://travis-ci.com/broadinstitute/gatk/jobs/317887714) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29992.4](https://travis-ci.com/broadinstitute/gatk/jobs/317887704) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.4/tests/test/index.html) |; | unit | openjdk8 | [29992.3](https://travis-ci.com/broadinstitute/gatk/jobs/317887703) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.3/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065:1351,log,logs,1351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,"). at org.broadinstitute.hellbender.tools.walkers.annotator.allelespecific.AS_QualByDepth.finalizeRawData(AS_QualByDepth.java:143). at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngine.finalizeGenotype(GnarlyGenotyperEngine.java:121). ... 26 more; ```. ```; Gradle suite > Gradle test > org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest > testEntireVariantContext[21](/gatkCloneMountPoint/src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf, src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/AS_Annotations.keepRawCombined.expected.vcf, [-A, ClippingRankSumTest, -G, AS_StandardAnnotation, -G, StandardAnnotation, -keep-combined], /gatkCloneMountPoint/src/test/resources/large/human_g1k_v37.20.21.fasta) [31mFAILED[39m[0K. java.lang.AssertionError: AS_QUAL present in one but not in the other expected [null] but found [-2950][0K. at org.testng.Assert.fail(Assert.java:93). at org.testng.Assert.failNotSame(Assert.java:508). at org.testng.Assert.assertNull(Assert.java:444). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertAttributesEquals(VariantContextTestUtils.java:354). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:427). at org.broadinstitute.hellbender.testutils.VariantContextTestUtils.assertVariantContextsAreEqualAlleleOrderIndependent(VariantContextTestUtils.java:549). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.lambda$assertVariantContextsMatch$1(GenotypeGVCFsIntegrationTest.java:297). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.assertForEachElementInLists(GenotypeGVCFsIntegrationTest.java:68). at org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest.runGenotypeGVCFSAndAssertSomething(GenotypeGVCFsIntegrationTest.java:355). at org.broadinsti",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973:4346,Assert,Assert,4346,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973,1,['Assert'],['Assert']
Testability,"); 	at org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibratorEngine.generateModel(VariantRecalibratorEngine.java:43); 	at org.broadinstitute.hellbender.tools.walkers.vqsr.VariantRecalibrator.onTraversalSuccess(VariantRecalibrator.java:625); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:895); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:134); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203); 	at org.broadinstitute.hellbender.Main.main(Main.java:289); ```. I believe this is derived from an error earlier in the log, since the `stderr` gives the same Java heap space error: ; ```; [2019-09-16 19:05:59,50] [error] WorkflowManagerActor Workflow 9f7a01a4-0632-4817-8622-aa51e520abf1 failed (during ExecutingWorkflowState): Job JointGenotyping.SNPsVariantRecalibratorClassic:NA:1 exited with return code 1 which has not been declared as a valid return code. See 'continueOnReturnCode' runtime attribute for more details.; Check the content of stderr for potential additional information: /path/to/stderr.; ```. I have read past issues (https://gatkforums.broadinstitute.org/gatk/discussion/23880/java-heap-space) regarding this that may suggest it is a bug. It has pointed me to increasing the available heap memory through the primary command of -Xmx. Is this the way to do it? ; ```; java -Xmx600G -Dconfig.file=' + re.sub('input.json', 'overrides.conf', input_json) + ' -jar ' + args.cromwell_path + ' run ' + re.sub('input.json', 'joint-discovery-gatk4.wdl', input_json) + ' -i ' + input_json; ```; where I substitute in the corresponding config, json, and wdl files. . Is 600G enough? Each vcf is ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6165:1781,log,log,1781,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6165,1,['log'],['log']
Testability,); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.fa (4); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.fa (4); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.fa (46); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup.fa (20); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.fq (0); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenoty,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:5395,test,test,5395,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.fa (4); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.fa (46); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup.fa (20); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.fq (0); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark/inversions.vcf (25); > Patch Links:; > ; > https://github.com/broadinstitute/gatk/pull/2189.patch; > https://github.com/broadinstitute/gatk/pull/2189.diff; > —; > You are receiving this because you were mentioned.; > Reply to this ema,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:5638,test,test,5638,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:65); at org.broadinstitute.hellbender.utils.test.testers.SamFileTester.runTest(SamFileTester.java:263); at org.broadinstitute.hellbender.utils.test.testers.AbstractMarkDuplicatesCommandLineProgramTest.testBulkFragmentsNoDuplicates(AbstractMarkDuplicatesCommandLineProgramTest.java:460); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:133); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:83); at ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1768:3034,Test,TestMethodWorker,3034,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1768,1,['Test'],['TestMethodWorker']
Testability,"); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:166); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:185); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:76); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:83); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:76); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:80); at org.broadinstitute.hellbender.tools.genome.SparkGenomeReadCountsIntegrationTest.testSparkGenomeReadCounts(SparkGenomeReadCountsIntegrationTest.java:28). Caused by:; java.io.NotSerializableException: org.broadinstitute.hellbender.engine.TaggedInputFileArgument; Serialization stack:; - object not serializable (class: org.broadinstitute.hellbender.engine.TaggedInputFileArgument, value: /home/travis/build/broadinstitute/gatk-protected/src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr3_1K_11K.tiny.bam); - writeObject data (class: java.util.ArrayList); - object (class java.util.ArrayList, [/home/travis/build/broadinstitute/gatk-protected/src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr3_1K_11K.tiny.bam]); - field (class: org.broadinstitute.hellbender.cmdline.argumentcollections.OptionalReadInputArgumentCollection, name: readInputs, type: interface java.util.List); - object (class org.broadinstitute.hellbender.cmdline.argumentcollections.OptionalReadInputArgumentCollection, org.broadinstitute.hellbender.cmdline.argumentcollections.OptionalReadInputArgumentCollection@21d212c8); - field (class: org.broadinstitute.hellbender.engine.spark.GATKSparkTool, name: readArguments, type: class org.broadinstitute.hellbender.cmdline.argumentcollections.ReadInputArgumentCollection); - object (class org.broadinstitute.hellbender.tools.genome.SparkGenomeReadCounts, org.broadinstitute.hell",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2003:2679,test,test,2679,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2003,1,['test'],['test']
Testability,); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:83); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); at com.sun.proxy.$Proxy2.stop(Unknown Source); at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:120); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360); at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54); at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:3546,test,testing,3546,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,2,['test'],['testing']
Testability,); at org.reflections.Reflections.scan(Reflections.java:204); at org.reflections.Reflections.<init>(Reflections.java:129); at com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds.registerGenomicsCoders(DataflowWorkarounds.java:90); at org.broadinstitute.hellbender.tools.dataflow.transforms.InsertSizeMetricsTransformUnitTest.testInsertSizeMetricsTransform(InsertSizeMetricsTransformUnitTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.Remot,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/609:2011,test,testng,2011,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/609,1,['test'],['testng']
Testability,* A log message in SortSamSpark was using the wrong placeholder for inserting text so the message was printing; the literal characters %d instead inserting the correct value. Now it puts in a number.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6636:4,log,log,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6636,1,['log'],['log']
Testability,* Add new parameter to set filtered genotypes to no-calls to ExtractCohort; * Modified ExtractCohortEngine to optionally set genotypes that are filtered (FT flag set - at the genotype leve) to no-calls.; * Renamed VQSR Classic to 'VQSR'; * Renamed VQSR Lite to 'VETS'; * Updated VCF and pgen tests for code changes,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8797:292,test,tests,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8797,2,['test'],['tests']
Testability,"* Added liftover chain file creation script.; * Added WDLs and some arguments to lift over gnomAD; * Added chain file for b37->hg38 and arguments for liftover.; * Limited to 1000 records in memory.; * Added stack trace option to all wdls and sub tasks.; * Fixed output to be consistent with local files for indexing.; * Added timing information on wdls.; * Added a wdl/json to create a TSV from gnomAD allele freq data.; * Updated indexFeatureFile wdl, added params for run to index gnomAD.; * Added json file for indexing a large gnomad file.; * Fixed critical issues with NIO data sources.; * Updates to the test script to save output and point to full cloud data.; * Added some logging hooks to SeekableByteChannelPrefetcher. I haven't reviewed this since I made the changes to it to see what should stay, so it may need a fair bit of work.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5514:610,test,test,610,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5514,2,"['log', 'test']","['logging', 'test']"
Testability,"* Added new option --unfilteredBreakpointEvidenceDir; When set, this option dumps all evidence (even evidence that is; ultimately rejected) in an easy to parse text format. Some additional; info (cigarString, mappingQuality) is stored in ReadEvidence to output; information related to read quality.; * Updated option --readMetadata; When set, will additionaly output the map from contig number to contig; name. Added non-null ParitionBounds to readMetadata in; ReadMetadataTest::testEverything to prevent crash.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3691:479,test,testEverything,479,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3691,1,['test'],['testEverything']
Testability,"* Added support for annotating 5'/3' flanks via new FIVE_PRIME_FLANK and THREE_PRIME_FLANK funcotations. * Added --five-prime-flank-size and --three-prime-flank-size arguments to control the size of each flanking region. * Refactored datasource classes to allow for padded/custom queries to make this feature possible. * We now emit IGR funcotations in more cases (in particular, when a gene has no basic transcripts, and when the basic transcripts do not fully span a gene and the flank size is small). * Added comprehensive unit tests, and updated integration test data. Resolves #4771",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5403:531,test,tests,531,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403,2,['test'],"['test', 'tests']"
Testability,"* Adding a new GATKTool level argument `--variant-output-interval-filtering-mode` which allows filtering output variants according to the input interval list. This replaces `--only-output-calls-starting-in-intervals` which was available in GenotypeGvcfs and GnarlyGenotyper. It works by adding a filtering decorator to the vcf writers created through `GATKTool.createVCFWriter`. ; There are several different filtering modes:; `STARTS_IN`, `ENDS_IN`, `OVERLAPS`, `CONTAINED`, and `ANYWHERE`. The default for tools is not to apply the decorator, but they may optionally change that behavior by overriding the new `getDefaultVariantOutputFilterMode`. `--variant-output-interval-filtering-mode STARTS_IN` is equivalent to the previous behavior of `--only-output-calls-starting-in-intervals true`. MockVcfWriter is now a testUtils class. The naming is a bit awkward so improvements would be helpful. This doesn't fix the weird behavior in HaplotypeCaller but does allow subsetting unique shards with SelectVariants and other variant outputting tools. We could adapt this to apply to bam outputs as well if that seems useful.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6388:794,Mock,MockVcfWriter,794,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6388,2,"['Mock', 'test']","['MockVcfWriter', 'testUtils']"
Testability,* Adding forkEvery 5 to cause the test jvm to be restarted every few test classes.; * This might fix a theoretical memory leak causing our builds to fail often. This might help?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6093:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6093,2,['test'],['test']
Testability,"* Bump GKL version to 0.4.3 which addresses some GC and memory leak issues.; * Remove DEBUG verbosity setting in `IntelInflaterDeflaterIntegrationTest`, which caused subsequent tests to generate huge amounts of debug info and run out of memory on some systems. Resolves #2490 and resolves #2535.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2566:177,test,tests,177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2566,1,['test'],['tests']
Testability,* Centralizes Docker image versioning to top-level WDLs; * Does away with GATK override jar in all cases except integration tests (override jar can still be specified during feature development and/or for emergencies); * Docker image versions can be captured as the inputs to tasks; * Freshens Variants Docker image. Integration run [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/815ef8ea-8cfe-47b6-be80-54250d1f180b),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8457:124,test,tests,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8457,1,['test'],['tests']
Testability,* Change extract so that when we filter at the genotype level (with FT) the VCF header has the FT filter definition in the comment/unspecified field.; * Also minor renaming of ExtractCohort argument.; * Point to updated truth.; ; [Here's](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/94129da8-6faf-419b-ab75-a46c228b1bbe) an integration test run. Passing everything except ValidateVDS because `reference_data` not being written due to issues beyond my control.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8850:364,test,test,364,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8850,1,['test'],['test']
Testability,* Changing test results directory for the docker tests to match the test results directory from the non docker test.; * Awkward handling of this seems to have been resulting in different test output paths and causing the reporting bot to sometimes fail to report the correct file location,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8718:11,test,test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8718,5,['test'],"['test', 'tests']"
Testability,"* Currently things are in a weird state, picard style interval lists are handled either as tribble files if they are named correctly as .interval_list; If they are named .intervals, .picard, or .list they are loaded with a different code path.; This unifies it so that picard files are only loaded as .interval_list and .intervals is always considered a Gatk style list. * This removes the work around for broken 0 length intervals that was put in place a long time ago. However, the workaround was effectively removed; for all .interval_list files in 4.1.3.0 when we started reading those through the tribble plugin. Either the broken files no longer are used or they; are misnamed as .intervals. * fix tests to deal correctly with .inverval_list vs .intervals",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6465:704,test,tests,704,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6465,1,['test'],['tests']
Testability,* Disabling SortSamSparkIntegrationTest.testSortBAMsSharded(); * This test is failing in master because of a disq bug.; * This should be re-enabled when https://github.com/broadinstitute/gatk/issues/5881 is fixed.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6635:40,test,testSortBAMsSharded,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6635,2,['test'],"['test', 'testSortBAMsSharded']"
Testability,* Have GvsCreateVATfromVDS.wdl take sites-only-vcf as an optional input.; * Added logic to allow/disallow CopyFile to overwrite. [Here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/bb8906d4-7111-4fd1-a723-b5616b354c23) is a passing run using an existing sites-only VCF.; [Here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/9c8be4d5-f707-4c54-bde5-18d9d23cde66) is a run where it tried to generate the sites-only VCF. Failing because of Echo issues with creating VDS.; [Here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/8f8cc493-b0ff-4d8c-8813-6c463dbf17c0) is an integration test. It's failing in ValidateVDS on two paths (the ones that create VDSes) since this is based off of EchoCallset branch - this is expected,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8866:82,log,logic,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8866,2,"['log', 'test']","['logic', 'test']"
Testability,* It turned out we weren't logging in to dockerhub on the wdl test cases in travis because I misunderstood how the DOCKER_TEST flag was used.; * Now we unconditionally authenticate to dockerhub in all test shards instead of trying to pick only the relevant ones.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7256:27,log,logging,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7256,3,"['log', 'test']","['logging', 'test']"
Testability,* Remove repo-specific files from `BaseTest` in favor of `TestResources` constants; * Remove `GenomeLocParser`initialization in `BaseTest` in favor of on-demand initialization in `TestResources` and getters for related objects. Closes #3029 ; Closes #2125,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3176:58,Test,TestResources,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3176,2,['Test'],['TestResources']
Testability,"* Should be runnable on-demand using a convenient mechanism (eg., reviewer types a command on a github PR). * Should be robust enough to provide confidence that a substantial change to a stable variant-calling tool is safe to merge. * Should cover performance as well as correctness. * Output may be a report that a human has to read (do not need automated pass/fail). * Implement for `HaplotypeCaller` and CNV tools first (with help of @LeeTL1220), then work with other teams to get test coverage for their tools.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4630:484,test,test,484,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4630,1,['test'],['test']
Testability,* SparkContextFactory no longer always emits a warning about the GCS connector environment variables.; This should now only occur when running tests and missing the necessary environment variables. I should have fixed this one a long time ago...,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5987:143,test,tests,143,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5987,1,['test'],['tests']
Testability,* This fixes an issue while installing gcloud on travis due to permissions in the root directories. @ldgauthier This should fix the issue you were seeing where test files weren't being uploaded.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7525:160,test,test,160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7525,1,['test'],['test']
Testability,"* Updating htsjdk 2.18.1 -> 2.18.2; * Remove deprecated method use; * Changing IntervalUtilsUnitTest due to changes in IntervalList; * IntervalList now rejects certain invalid intervals that it previously didn't and throw IllegalArgumentException.; * This ends up changing which exceptions are thrown in some cases, updated some tests to accept both MalformedFile and MalforedGenomeLoc.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5585:329,test,tests,329,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5585,1,['test'],['tests']
Testability,"* VariantContexts from an assembled haplotype's EventMap, or found from pileups, that are really containers for a single alt allele, are explicitly marked as such. This way we don't have to keep tracing back the source of a biallelic variant context and putting in little comments about why it's safe to assume it has only one alt allele.; * Some methods that remove or add haplotypes based on alleles found in pileups have been made void methods of AssemblyResultSet, which to mind mind is the appropriate way to encapsulate transformations acting on that class.; * other random simplification of code surrounding pileup haplotypes. @jamesemery This is a warmup PR for DRAGEN stuff, a bit of housekeeping of code at the margins of partially determined haplotype logic.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332:763,log,logic,763,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332,1,['log'],['logic']
Testability,* When running recursive deletion file hooks we now catch all exceptions and log them at DEBUG level instead of letting them propagate.; * This should reduce confusion when test have deletion failures.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6125:77,log,log,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6125,2,"['log', 'test']","['log', 'test']"
Testability,"* _Large number of open file handles_: this was an issue in TileDB which got fixed as part of the restructuring that @nalinigans did for supporting HDFS/S3/GCS (#5017). I was too lazy to fix this again. If it's going to take some time for PR #5017 to be merged, I can submit a separate fix for this. This would fix any crashes/termination issues.; * _Performance of a single import process with a large number of intervals_; * Restating the obvious, but this is a single process (and by default, a single thread) with many intervals to import. As you increase the number of samples, this will become a performance pain point.; * More important than the number of intervals is the amount of data imported per interval. Each interval import involves opening the VCF files (loading index structures while creating FeatureReader objects), writing to TileDB/GenomicsDB. and closing the VCF file handles (destroying FeatureReader objects). If the amount of data written for each interval is sufficiently large, the cost of opening/closing the VCF files (creating/destroying FeatureReaders) is small relative to the total time taken.; * In the test cases I and Chris were trying, the amount of data written per interval was small (or 0 in many cases). The time taken in opening/closing the VCF files (and loading/destroying the index) dominates the total time.; * For a single import process (single thread), creating a large interval is better (or no worse) than passing several small intervals. TileDB/GenomicsDB has 0 overhead for regions with no data (for example, WES gVCFs). Having larger intervals will likely avoid issues described above. Hence, an advisory message will be beneficial.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757:1137,test,test,1137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-410576757,1,['test'],['test']
Testability,* `JointVariantCalling` [does set](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/f3f98f0e-2a7f-460b-886f-3442551140a8) `tighter_gcp_quotas`.; * Integration tests [do not set](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/51213d40-7583-49f1-a101-1842180a6470) `tighter_gcp_quotas`.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8540:182,test,tests,182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8540,1,['test'],['tests']
Testability,"* added a reference parameter to FeatureData source and FeatureManager methods; * genomicsDB requires a reference, previously this was being passed; through by hardcoding it in the required json files; * json files are now autogenerated by the importer tool, but the; reference wasn't being handled correctly. * updated the various walkers to pass the reference through if available. * gendb:// paths now point to the workspace directory instead of a; directory of jsons. * removed the ability to specify array, vidmap.json, and; callset.json paths in the importer tool since we now rely on the; structure and naming of the files when loading; moved some constants to GenomicsDBConstants. * updated GenomicsDBIntegration tests to use the new importer instead of a; prepackaged and very brittle set of json files. fixed a bug in GenomicsDBImporterIntegrationTests that made both tests; write to the same workspace",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2626:721,test,tests,721,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2626,2,['test'],['tests']
Testability,* adding back GenomicDBImportIntegrationTest.testYouCantWriteIntoAnExistingDirectory that was accidentally deleted; * fixing spacing issues introduced in the same pr; * removing unused parameter from internal method,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4175:45,test,testYouCantWriteIntoAnExistingDirectory,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4175,1,['test'],['testYouCantWriteIntoAnExistingDirectory']
Testability,"* changes to GenotypingEngine.calculateGenotypes in #2528 introduced a regression that caused IndexOutOfBoundsException; * fixes #2530 by preventing the exception and adding tests. @davidbenjamin Note that I also changed the condition from ""first alt allele is NON_REF"" to ""any alt allele is NON_REF"". This more accurately matches what the comment says, but let me know if you think it's not the right thing.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2531:174,test,tests,174,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2531,1,['test'],['tests']
Testability,"* changing GenotypeCounts to be doubles instead of ints, this is weird but it's how gatk3 is; * adding an additional boolean parameter to computeDiploidGenotypeCounts that controls rounding behavior; ExcessHet needs rounding on; InbreedingCoeff needs it off; * adding a new GenotypeUtilsUnitTest class; these tests are not exhaustive and leave most conditions untested; * updating InbreedingCoeffUnitTest with a test that checks that we match gatk3 output for a previously divergent case",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2546:309,test,tests,309,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2546,2,['test'],"['test', 'tests']"
Testability,* com.intel.gkl:gkl:0.8.8 -> 0.8.10. @droazen @kachulis Maybe we should update to the newest version and rerun the tests?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8181:115,test,tests,115,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8181,1,['test'],['tests']
Testability,* creating utils to spin up a Dataproc cluster which will shut itself down after a brief interval of inactivity (10 minutes idle or 30 minutes total); * adding tests which spin up a cluster and run PrintReadsSpark on them; * updating gatk-launch to be aware of new GCLOUD_HOME environment variable. first round of #2298,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3767:160,test,tests,160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3767,1,['test'],['tests']
Testability,* disables tests that use the now defunct google genomics reference API; * update BaseRecalibratorSparkIntegrationTest.testBQSRFailWithIncompatibleReference to not use the reference API; * fixes #4163; * these tests should be revisted and removed or replaced in #4166,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4178:11,test,tests,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4178,3,['test'],"['testBQSRFailWithIncompatibleReference', 'tests']"
Testability,* moved a log message about creating the python bundle during build so it only triggers when the python bundle is actually being built; * previously it was emitted on every build,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4147:10,log,log,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4147,1,['log'],['log']
Testability,* previously the docker build would unnecessarily pull the test files,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7727:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7727,1,['test'],['test']
Testability,"* this is currently broken, see https://github.com/broadinstitute/gatk/issues/4274; * add a check to HaplotypeCallerSpark and VariantSparkSink and throw a clear exception in this case; * added test for GVCF writing in VariantSparkSink which previously didn't exist; * added new UserException.UnimplementedFeature class; * closes https://github.com/broadinstitute/gatk/issues/4275",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4277:193,test,test,193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4277,1,['test'],['test']
Testability,* updating Intel-GKL from 8.5 -> 8.6; * this is a very minor update that only changes a log message; * fixes https://github.com/broadinstitute/gatk/issues/5393,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5463:88,log,log,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5463,1,['log'],['log']
Testability,* updating htsjdk 2.16.1 -> 2.18.0; * the most noticable change is that we will now produce bam 1.6 instead; of 1.5; * some test files updated to have the new version since they were being; compared with exact match tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5424:124,test,test,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5424,2,['test'],"['test', 'tests']"
Testability,* updating tests because a toString changed in htsjdk and it's value is written directly into the outputs of some tools; * fix two trivial mistakes in ExampleVariantWalkerSpark that I noticed,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4401:11,test,tests,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4401,1,['test'],['tests']
Testability,"**;BQHIST=5,1,0,0,1,11,2,0,0,0,14,2,0,0,1,15,1,0,0,0,16,1,0,0,0,17,0,2,0,0,18,2,0,0,1,19,6,0,1,0,20,25,0,2,2,21,13,0,1,2,22,20,0,3,3,23,2,1,2,1,24,6,0,2,0,25,21,1,4,7,26,33,0,5,6,27,18,0,0,7,28,29,0,0,4,29,26,2,4,8,30,161,4,5,51,31,263,2,3,51,32,129,2,3,22,33,41,0,0,0,34,15,0,0,0,35,20,0,0,0,36,19,0,0,0,37,12,0,0,0,38,1,0,0,0,39,9,0,0,0,41,18,0,0,0,44,26,0,0,0;BaseQRankSum=-6.431;ClippingRankSum=-7.714;DP=1323;ECNT=1;FS=0.000;LikelihoodRankSum=-7.886;MBQ=31,30,26,30;MFRL=6590,6585,4819,6586;MMQ=60,60,60,60;MPOS=16,15,7;MQ=59.98;MQ0=0;MQRankSum=0.000;NALOD=0.569,1.49,1.49;NCC=0;NCount=0;NLOD=27.80,30.51,30.97;OCM=0;POPAF=6.00,6.00,6.00;REF\_BASES=GAACTTGCTTCTTTTTTTTGC;RPA=8,9,10,11;RU=T;ReadPosRankSum=5.751;SOR=1.152;STR;Samples=TCGA-NJ-A55R-01A-11R-A262-07;TLOD=284.47,51.82,3.50 GT:AD:AF:DP:F1R2:F2R1:SB 0/1/2/3:819,166,35,14:0.161,0.034,0.014:1034:365,76,17,4:440,87,17,8:16,803,6,209 0/0:103,1,0,0:0.017,8.250e-03,8.221e-03:104:50,1,0,0:52,0,0,0:26,77,0,1. The error log that FilterMutectCalls emited was listed below:. Using GATK jar /home/lqh/software/GATK-4.2.0.0/gatk-package-4.2.0.0-local.jar ; ; Running: ; ; java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -jar /home/lqh/software/GATK-4.2.0.0/gatk-package-4.2.0.0-local.jar FilterMutectCalls -R /public1/data/resources/ref\_genome/GRCh38/GRCh38.d1.vd1.fa -V somatic\_mutation/Mutect2/test.vcf.gz -O somatic\_mutation/FilterMutectCalls/test.vcf.gz ; ; 11:03:39.517 INFO NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/home/lqh/software/GATK-4.2.0.0/gatk-package-4.2.0.0-local.jar!/com/intel/gkl/native/libgkl\_compression.so ; ; Jun 04, 2021 11:03:49 AM shaded.cloud\_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine ; ; INFO: Failed to detect whether we are running on Google Compute Engine. ; ; 11:03:49.968 INFO FilterMutectCalls - --------------------------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7298:2369,log,log,2369,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7298,1,['log'],['log']
Testability,"**Brief issue description:** ; When following the tutorial https://gatk.broadinstitute.org/hc/en-us/articles/360035531092--How-to-part-I-Sensitively-detect-copy-ratio-alterations-and-allelic-segments, the #4 Plot standardized and denoised copy ratios with PlotDenoisedCopyRatios have different results than the tutorial. Through the control vectors test, it seems that the samples that are used in step #2 to generate CNV PON used in the tutorial are different from the files stored in the tutorial.; **Results:**; Following steps 1 to 4, the resulting plots; ![hcc1143_T_clean denoised](https://github.com/broadinstitute/gatk/assets/89409924/3bce4382-5109-4c6e-b34d-1c6e365dcf62); ![hcc1143_T_clean denoisedLimit4](https://github.com/broadinstitute/gatk/assets/89409924/9d23987c-2747-43af-b72c-4e3754015531); The results have values However, the values in the tutorial are 0.134 and 0.125.; **Tests**; Using the files provided in the tutorial and script generated `cnvponC.pon.hdf5`, which seems to lead to this inconsistency result.; Using:; gatk --java-options ""-Xmx6500m"" CreateReadCountPanelOfNormals \; -I HG00133.alt_bwamem_GRCh38DH.20150826.GBR.exome.counts.hdf5 \; -I HG00733.alt_bwamem_GRCh38DH.20150826.PUR.exome.counts.hdf5 \; -I NA19654.alt_bwamem_GRCh38DH.20150826.MXL.exome.counts.hdf5 \; --minimum-interval-median-percentile 5.0 \; -O sandbox/cnvponC.pon.hdf5; **Files**; The script used to generate this result are attached. ; [gatk_tutorial11682_issue.zip](https://github.com/user-attachments/files/15930567/gatk_tutorial11682_issue.zip). Please help me understand this difference in reproducing the tutorial result. It will be extremely helpful for me to use the pipelines on our lab-generated data. Thank you very much!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8884:349,test,test,349,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8884,3,"['Test', 'sandbox', 'test']","['Tests', 'sandbox', 'test']"
Testability,**DO NOT MERGE** assembly changes to test carrot,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723:37,test,test,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723,1,['test'],['test']
Testability,**DO NOT MERGE*** Test ForkPRs with Github actions,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7785:18,Test,Test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7785,1,['Test'],['Test']
Testability,"**Initial integration of GKL**; - Removed native build related items from `build.gradle`; - Removed native code from src tree; - Refactored `PairHMM.java` and `VectorLoglessPairHMM.java` to use GKL; - Updated `VectorPairHMMUnitTest.java` to use GKL; - Added integration tests to `IntelDeflaterIntegrationTest.java`. **Notes**; - PairHMM has been tested in HaplotypeCaller and GVCF output is md5sum equivalent to the PairHMM currently in GATK; - PairHMM in GKL is still single threaded, but about **_1.4x faster**_ than existing PairHMM, due to fixing a performance issue in the native code; - Next steps are captured in #1903 #1946",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1935:270,test,tests,270,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1935,2,['test'],"['tested', 'tests']"
Testability,"**Summary**: ; A user reported `java.io.IOException: Stream closed` error with ApplyBQSRSpark. GATK 4.0.9.0 runs fine but when the user upgraded to gatk 4.1.1.0 version, they see his error. **User Report**:; I am getting the below error when running gatk-variant pipeline of bcbio. Bcbio using gatk 4.1.1.0 version. ; When I run ApplyBQSRSpark using GATK 4.0.9.0, it runs fine without any issues. Here is the command; **; gatk ApplyBQSRSpark --input test-sort.bam --output test-sort-recal.bam --bqsr-recal-file test-sort-recal.grp --static-quantized-quals 10 --static-quantized-quals 20 --static-quantized-quals 30 --spark-master local[8] --conf spark.local.dir=scratch/ --conf spark.driver.host=localhost --conf spark.network.timeout=800 --jdk-deflater --jdk-inflater**. Here is the error. [April 28, 2019 10:11:25 AM AST] org.broadinstitute.hellbender.tools.spark.ApplyBQSRSpark done. Elapsed time: 0.15 minutes.; Runtime.totalMemory()=874512384; **htsjdk.samtools.util.RuntimeIOException: java.io.IOException: Stream closed**; at htsjdk.samtools.IndexStreamBuffer.readFully(IndexStreamBuffer.java:23); at htsjdk.samtools.IndexStreamBuffer.readLong(IndexStreamBuffer.java:62); at htsjdk.samtools.AbstractBAMFileIndex.readLong(AbstractBAMFileIndex.java:436); at htsjdk.samtools.AbstractBAMFileIndex.query(AbstractBAMFileIndex.java:311); at htsjdk.samtools.CachingBAMFileIndex.getQueryResults(CachingBAMFileIndex.java:159); at htsjdk.samtools.BAMIndexMerger.processIndex(BAMIndexMerger.java:43); at htsjdk.samtools.BAMIndexMerger.processIndex(BAMIndexMerger.java:16); at org.disq_bio.disq.impl.file.IndexFileMerger.mergeParts(IndexFileMerger.java:90); at org.disq_bio.disq.impl.formats.bam.BamSink.save(BamSink.java:132); at org.disq_bio.disq.HtsjdkReadsRddStorage.write(HtsjdkReadsRddStorage.java:225); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSink.writeReads(ReadsSparkSink.java:155); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSink.writeReads(Rea",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5919:450,test,test-sort,450,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5919,3,['test'],"['test-sort', 'test-sort-recal']"
Testability,"**The input file :** ; bash-4.2$ hdfs dfs -ls /gatk4; Found 2 items; -rw-r--r-- 3 hdfs supergroup 62934 2017-10-11 13:38 /gatk4/output.bam; drwxr-xr-x - hdfs supergroup 0 2017-10-11 14:19 /gatk4/output_2.bam.parts. **The spark-submit:**. bash-4.2$ spark-submit; Usage: spark-submit [options] <app jar | python file> [app arguments]; Usage: spark-submit --kill [submission ID] --master [spark://...]; Usage: spark-submit --status [submission ID] --master [spark://...]. Options:; --master MASTER_URL spark://host:port, mesos://host:port, yarn, or local.; --deploy-mode DEPLOY_MODE Whether to launch the driver program locally (""client"") or; on one of the worker machines inside the cluster (""cluster""); (Default: client).; --class CLASS_NAME Your application's main class (for Java / Scala apps).; --name NAME A name of your application.; --jars JARS Comma-separated list of local jars to include on the driver; and executor classpaths.; ....... **the spark-shell**; bash-4.2$ spark-shell; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; Failed to created SparkJLineReader: java.io.IOException: Permission denied; Falling back to SimpleReader.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /___/ .__/\_,_/_/ /_/\_\ version 1.6.0; /_/. Using Scala version 2.10.5 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_91); Type in expressions to have them evaluated.; Type :help for more information.; Spark context available as sc (master = yarn-client, app id = application_1507683879816_0007).; Wed Oct 11 14:25:24 CST 2017 Thread[main,5,main] java.io.FileNotFoundException: derby.log (Permission denied); ----------------------------------------------------------------; Wed Oct 11 14:25:24 CST 2017:; Booting Derby version The Apache Software Foundation - Apache Derby - 10.11.1.1 - (1616546): instance a816c00e-015f-0a1b-f1bd-00002ce33928 ; on database directory /tmp/spark-98953d35-8594-4907-b4a5-0870f1d17b3e/metastore with class loa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240:1005,log,log,1005,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240,1,['log'],['log']
Testability,"**changes in this PR:**; - resolves specops issue #247 - ImportGenomes.wdl takes Array[File] from data table as vcf input; - refactor LoadBigQueryData.wdl back into ImportGenomes; - returns an error if the `bq load` step fails (workflow was silently succeeding when this step failed); - checks existence of tables using `bq show` rather than the csv file - this should still be safe against a race condition because of @ericsong 's refactoring to prevent the `CreateTables` step from being scattered; - run CreateTables at the start (don't wait for CreateImportTsvs); - does NOT use a preemptible VM for the LoadTables step, to minimize (though not eliminate) the possibility of loading a duplicate set of data (see specops issue #248 for further discussion). **testing:**; - these changes were tested in Terra, BQ outputs checked and verified",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7112:762,test,testing,762,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7112,2,['test'],"['tested', 'testing']"
Testability,"**feature request**, or a **documentation request** (for tool/class javadoc only -- for forum docs please post there); - Consider if your ""issue"" is better addressed on the GATK forum: http://gatkforums.broadinstitute.org/gatk Post there if you have questions about expected tool behavior, output format, unexpected results, or generally any question that does not fit into the categories above; - Use a **concise** yet **descriptive** title; - Choose the corresponding template block below and fill it in, replacing or deleting text in italics (surrounded by `_`) as appropriate; - Delete the other template blocks and this header. ----. ## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_. After sourcing the tab-completion script, some tools shown cannot be run. Maybe they exist somewhere in an experimental dev version but are not bundled for public release?. ### Affected version(s); - [x ] Latest public release version [4.1.7.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._. After trying to tab complete the DepthOfCoverage, I saw a few tools not listed in the documentation. I tried running them and sure enough, there were errors:. `A USER ERROR has occurred: '*' is not a valid command.`; (* is one of the tools listed below). #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_. ```; cd gatk-4.1.7.0; source gatk-completion.sh; ./gatk Depth<tab>; #>DepthOfCoverage DepthPerAlleleBySample DepthPerSampleHC; ./gatk DepthPerSampleHC -h; ...; ***********************************************************************; A USER ERROR has occurred: 'DepthPerSampleHC' is not a valid command.; ***********************************************************************; ./gatk Dep",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6615:1549,test,test,1549,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6615,1,['test'],['test']
Testability,"*, a **feature request**, or a **documentation request** (for tool/class javadoc only -- for forum docs please post there); - Consider if your ""issue"" is better addressed on the GATK forum: http://gatkforums.broadinstitute.org/gatk Post there if you have questions about expected tool behavior, output format, unexpected results, or generally any question that does not fit into the categories above; - Use a **concise** yet **descriptive** title; - Choose the corresponding template block below and fill it in, replacing or deleting text in italics (surrounded by `_`) as appropriate; - Delete the other template blocks and this header. ----. ## Bug Report. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_; MarkDuplicates. ### Affected version(s); - [ ] Latest public release version [version?]; 4.6.0.0 GATK and Picard 3.2.0; - [ ] Latest master branch as of [date of test?]; 3 Jul 2023. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._; I'm trying to use gatk for finding snps in exome capture project. I get an error when trying to use MarkDuplicates - I tried using it from picard and from gatk. The screen output is:; ```; picard MarkDuplicates I=WA02_i5-537_i7-98_S11819_L004.bam O=test.dup.bam M=marked_dup_metrics.txt; INFO 2024-07-03 15:25:31 MarkDuplicates. ********** NOTE: Picard's command line syntax is changing.; **********; ********** For more information, please see:; **********; https://github.com/broadinstitute/picard/wiki/Command-Line-Syntax-Transition-For-Users-(Pre-Transition); **********; ********** The command line looks like this in the new syntax:; **********; ********** MarkDuplicates -I WA02_i5-537_i7-98_S11819_L004.bam -O test.dup.bam -M marked_dup_metrics.txt; **********. 15:25:31.262 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/opt/picard/build/libs/picard.jar!/com/intel/gkl/native/libgkl_compression.so; [Wed Jul 03 15:25:31 CEST 202",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8904:1535,log,logs,1535,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8904,1,['log'],['logs']
Testability,"+ blaunch -no-wait -z hpcgenomicn24 /spark-1.6.2-bin-hadoop2.6//bin/spark-class org.apache.spark.deploy.worker.Worker spark://hpcgenomicn24:6311 -c 16; + echo --conf spark.executor.memory=2g --conf spark.driver.memory=2g --conf spark.local.dir=/gpfs/ngsdata/sparkcache --class org.broadinstitute.hellbender.Main /gpfs/software/spark/gatk4onspark.jar PrintReadsSpark -I /gpfs/home/tpathare/gatk/src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O /gpfs/home/tpathare/test/; --conf spark.executor.memory=2g --conf spark.driver.memory=2g --conf spark.local.dir=/gpfs/ngsdata/sparkcache --class org.broadinstitute.hellbender.Main /gpfs/software/spark/gatk4onspark.jar PrintReadsSpark -I /gpfs/home/tpathare/gatk/src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O /gpfs/home/tpathare/test/; + /spark-1.6.2-bin-hadoop2.6//bin/spark-submit --master spark://hpcgenomicn24:6311 --conf spark.executor.memory=2g --conf spark.driver.memory=2g --conf spark.local.dir=/gpfs/ngsdata/sparkcache --class org.broadinstitute.hellbender.Main /gpfs/software/spark/gatk4onspark.jar PrintReadsSpark -I /gpfs/home/tpathare/gatk/src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O /gpfs/home/tpathare/test/; 23:25:07.475 INFO IntelGKLUtils - Trying to load Intel GKL library from:; 	jar:file:/gpfs/software/spark/gatk4onspark.jar!/com/intel/gkl/native/libIntelGKL.so; 23:25:07.552 INFO IntelGKLUtils - Intel GKL library loaded from classpath.; [November 16, 2016 11:25:07 PM AST] org.broadinstitute.hellbender.tools.spark.pipelines.PrintReadsSpark --output /gpfs/home/tpathare/test/ --input /gpfs/home/tpathare/gatk/src/test/resources/NA12878.chr17_69k_70k.dictFix.bam --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false --verbosity INFO --QUIET false --use_jdk_deflater false --disableAllReadFilte",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2268:398,test,test,398,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2268,4,['test'],['test']
Testability,+1 fixes the issue for the test I was running. Thanks @cmnbroad,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334471333:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3665#issuecomment-334471333,1,['test'],['test']
Testability,"+1MOn Sat, Feb 28, 2015 at 1:14 PM, ldgauthier notifications@github.com wrote: It would be wonderful to be able to use SelectVariants with a query like -select ""AF > 0.1"" on a VCF containing multiallelics and have it filter multiallelics by the allele with the highest AF. (Possibly conversely for ""AF < X""queries. Right now it crashes unless you use a crazy JEXL or pull out the multiallelics. Maybe we could make a maxAF/minAF in htsjdk/JEXLmap.java which equals AF for biallelics?. Internally, it might be nice to have a Map with the AF (or AC) for each allele for the SelectVariants issue and to simplify some of the crazy logic already in VariantAnnotator to deal with different allele ordering. As part of this task, we should also make 100% sure that allele ordering is preserved so that AF/AC array ordering is preserved during VC reading/writing/manipulation. —Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/241#issuecomment-76543438:627,log,logic,627,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/241#issuecomment-76543438,1,['log'],['logic']
Testability,", in __init__; self.refresh(); File ""/usr/local/Anaconda/envs_app/gatk/4.1.2.0/lib/python3.6/site-packages/theano/gof/cmodule.py"", line 794, in refresh; files = os.listdir(root); FileNotFoundError: [Errno 2] No such file or directory: '/spin1/home/linux/gatk_users1/.theano/compiledir_Linux-3.10-el7.x86_64-x86_64-with-centos-7.5.1804-Core-x86_64-3.6.2-64/tmpmy0w17z3'; 00:34:39.396 DEBUG ScriptExecutor - Result: 1; 00:34:39.397 INFO DetermineGermlineContigPloidy - Shutting down engine; [October 27, 2019 12:34:39 AM EDT] org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy done. Elapsed time: 0.66 minutes.; Runtime.totalMemory()=2151677952; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /tmp/cohort_determine_ploidy_and_depth.3351404099122294482.py --sample_coverage_metadata=/tmp/samples-by-coverage-per-contig8898090777596224038.tsv --output_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/2-Output/1-Contig-Ploidy/22.Contig_Ploidy_Dir/ploidy-calls --mapping_error_rate=1.000000e-02 --psi_s_scale=1.000000e-04 --mean_bias_sd=1.000000e-02 --psi_j_scale=1.000000e-03 --learning_rate=5.000000e-02 --adamax_beta1=9.000000e-01 --adamax_beta2=9.990000e-01 --log_emission_samples_per_round=2000 --log_emission_sampling_rounds=100 --log_emission_sampling_median_rel_error=5.000000e-04 --max_advi_iter_first_epoch=1000 --max_advi_iter_subsequent_epochs=1000 --min_training_epochs=20 --max_training_epochs=100 --initial_temperature=2.000000e+00 --num_thermal_advi_iters=5000 --convergence_snr_averaging_window=5000 --convergence_snr_trigger_threshold=1.000000e-01 --convergence_snr_countdown_window=10 --max_calling_iters=1 --caller_update_convergence_threshold=1.000000e-03 --caller_internal_admixing_rate=7.500000e-01 --caller_external_admixing_rate=7.500000e-01 --disable_caller=false --disable_sampler=false --disable_annealing=false --interval_list=/tmp/in",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235:5284,Test,Test-gCNV,5284,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235,1,['Test'],['Test-gCNV']
Testability,",0.300,1|-2.000,1|;AS_RAW_MQ=14731200.000|828000.000|3600.000|0.000;AS_RAW_MQRankSum=|0.000,2|0.000,1|;AS_RAW_ReadPosRankSum=|0.300,1,1.900,1|0.100,1|;AS_SB_TABLE=1874,2218|112,118|0,1|0,0;BaseQRankSum=0.388;DP=39331;MQRankSum=0;RAW_MQandDP=16254000,4515;ReadPosRankSum=2.007 GT:AD:GQ:MIN_DP:SB:DP ./././././././././././././././././././.:.:9:1445:.:1628 ./././././././././././././././././././.:2150,118,1,0:99:.:979,1171,59,60:2269 ./././././././././././././././././././.:.:9:1867:.:2079 ./././././././././././././././././././.:.:9:1927:.:2216 ./././././././././././././././././././.:.:9:2056:.:2328 ./././././././././././././././././././.:.:9:2611:.:2992 ./././././././././././././././././././.:.:9:2547:.:2857 ./././././././././././././././././././.:.:9:1836:.:2175 ./././././././././././././././././././.:.:9:2334:.:2681 ./././././././././././././././././././.:.:9:1723:.:1966 ./././././././././././././././././././.:.:9:1790:.:2010 ./././././././././././././././././././.:1942,112,0,0:99:.:895,1047,53,59:2054 ./././././././././././././././././././.:.:9:1743:.:2058 ./././././././././././././././././././.:.:9:1937:.:2283 ./././././././././././././././././././.:.:9:1918:.:2244 ./././././././././././././././././././.:.:9:1743:.:1964 ./././././././././././././././././././.:.:9:2032:.:2290 ./././././././././././././././././././.:.:9:1748:.:1953 ./././././././././././././././././././.:.:9:1748:.:2037 ./././././././././././././././././././.:.:9:1811:.:2017; `. CombineGVCFs version of the site. `chr13 32339012 . A G,T,<NON_REF> . . BaseQRankSum=0.388;DP=39331;MQRankSum=0.00;RAW_MQandDP=16254000,4515;ReadPosRankSum=2.01 GT:AD:DP:GQ:MIN_DP:PL:SB ./././././././././././././././././././.:.:1628:9:1445:0,9,18,28,39,50,62,7..... (redacted..); `. GenomicsDB dump is lacking the PL field therefore final genotyped VCF is missing this variant. CombineGVCFs on the other hand has the proper PL field. ; Ploidy is 20 in these samples. . I asked user to send us snippets of those GVCF files for testing.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/9024:2370,test,testing,2370,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/9024,1,['test'],['testing']
Testability,",472:0,0,2,4; 20 10068167 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068168 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068169 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068170 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; ```. GenomicsDBImport run like this:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. Returns the following output:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068162 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 100681",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5160:3264,test,test,3264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5160,1,['test'],['test']
Testability,",4; 20 10068168 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068169 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068170 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068162 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,47",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3254,test,test,3254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability,",67] [info] 1 new workflows fetched by cromid-ca5c695: 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,68] [info] WorkflowManagerActor Starting workflow 968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] WorkflowManagerActor Successfully started WorkflowActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674; [2020-07-14 05:09:30,69] [info] Retrieved 1 workflows from the WorkflowStoreActor; [2020-07-14 05:09:30,72] [info] WorkflowStoreHeartbeatWriteActor configured to flush with batch size 10000 and process rate 2 minutes.; [2020-07-14 05:09:30,83] [info] MaterializeWorkflowDescriptorActor [968be82c]: Parsing workflow as WDL 1.0; [2020-07-14 05:09:31,60] [info] MaterializeWorkflowDescriptorActor [968be82c]: Call-to-Backend assignments: ValidateBamsWf.ValidateBAM -> Local; [2020-07-14 05:09:31,82] [warn] Local [968be82c]: Key/s [memory, disks] is/are not supported by backend. Unsupported attributes will not be part of job executions.; [2020-07-14 05:09:35,38] [info] Not triggering log of token queue status. Effective log interval = None; [2020-07-14 05:09:37,15] [info] WorkflowExecutionActor-968be82c-eef3-4bdb-a1ab-3d4e2ca70674 [968be82c]: Starting ValidateBamsWf.ValidateBAM; [2020-07-14 05:09:37,39] [info] Assigned new job execution tokens to the following groups: 968be82c: 1; [2020-07-14 05:09:41,61] [warn] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: Unrecognized runtime attribute keys: disks, memory; [2020-07-14 05:09:41,71] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: /gatk/gatk \; ValidateSamFile \; --INPUT /cromwell-executions/ValidateBamsWf/968be82c-eef3-4bdb-a1ab-3d4e2ca70674/call-ValidateBAM/shard-0/inputs/-1942028726/test.bam \; --OUTPUT test.validation_.txt \; --MODE SUMMARY; [2020-07-14 05:09:41,76] [info] BackgroundConfigAsyncJobExecutionActor [968be82cValidateBamsWf.ValidateBAM:0:1]: executing: # make sure there is no preexisting Docker CID file; rm -f /gatk/",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6710:4200,log,log,4200,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6710,1,['log'],['log']
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthLabel"": ""NA12878_GRCh38_TWISTExome"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz"",; ""Benchm",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:6560,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,6560,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:8553,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8553,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,68,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""36c1f67a-93a8-45b4-857a-ae22db7ac9e7"",; ""eval_cromwell_job_id"": ""81dbf637-d90c-4111-93b9-9cec426c5a39"",; ""created_at"": ""2023-08-18T19:32:11.841274"",; ""created_by"": null,; ""finished_at"": ""2023-08-19T05:42:56.447"",; ""results"": {; ""CHM controlHCprocesshours"": ""89.85896666666667"",; ""CHM controlHCsystemhours"": ""0.20056666666666664"",; ""CHM controlHCwallclockhours"": ""63.561513888888875"",; ""CHM controlHCwallclockmax"": ""3.142697222222222"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-CHMSampleHeadToHead/BenchmarkComparison/3609bc35-c943-4006-8b6f-9d71e6c68ef5/call-BenchmarkVCFControlSample/Benchmark/96b872e8-26c0-4406-a7d0-addf04f4ad0e/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.10857222222224"",; ""CHM evalHCsystemhours"": ""0.28728055555555554"",; ""CHM evalHCwallclockhours"": ""52.84132777777778"",; ""CHM evalHCwallclockmax"": ""2.9151722222222225"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:17176,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,",; ""BenchmarkVCFsHeadToHeadOrchestrated.referenceVersion"": ""HG38"",; ""BenchmarkVCFsHeadToHeadOrchestrated.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HCR_hg38.bed"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/LCR_Hg38.interval_list""; ],; ""BenchmarkVCFsHeadToHeadOrchestrated.stratLabels"": [; ""HCR"",; ""LCR""; ]; },; ""eval_options"": {; ""read_from_cache"": false; },; ""test_cromwell_job_id"": ""b7d06271-38b7-47d2-9d7c-af5543460de9"",; ""eval_cromwell_job_id"": ""beb77715-227e-4dbd-803f-4458c83607c8"",; ""created_at"": ""2023-05-12T15:09:42.984289"",; ""created_by"": null,; ""finished_at"": ""2023-05-13T01:07:11.594"",; ""results"": {; ""CHM controlHCprocesshours"": ""79.42513333333335"",; ""CHM controlHCsystemhours"": ""0.15543611111111108"",; ""CHM controlHCwallclockhours"": ""56.046666666666674"",; ""CHM controlHCwallclockmax"": ""3.0881333333333334"",; ""CHM controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-CHMSampleHeadToHead/BenchmarkComparison/f1b0b4cf-1a3f-47b3-84fa-529f118419ce/call-CONTROLRuntimeTask/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/call-CHMSampleHeadToHead/BenchmarkComparison/f1b0b4cf-1a3f-47b3-84fa-529f118419ce/call-BenchmarkVCFControlSample/Benchmark/fb68536c-eb99-4d0d-a5c3-4f5accf94546/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.94748611111112"",; ""CHM evalHCsystemhours"": ""0.19002777777777768"",; ""CHM evalHCwallclockhours"": ""61.06326111111111"",; ""CHM evalHCwallclockmax"": ""3.2047833333333333"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/beb77715-227e-4dbd-803f-4458c83607c8/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988:17201,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1546478988,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,",; ""VariantCallingCarrotOrchestrated.gatk_control_docker"": ""broadinstitute/gatk-nightly:2022-03-04-4.2.5.0-9-gb097f75c5-NIGHTLY-SNAPSHOT"",; ""VariantCallingCarrotOrchestrated.gatk_docker"": ""image_build:gatk|223599bf204b1ffaf4a6f9756fd2dc665875efb7"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": {; ""read_from_cache"": false; },; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790:4123,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535220790,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""VariantCallingCarrotOrchestrated.gatk_control_docker"": ""broadinstitute/gatk-nightly:2022-03-04-4.2.5.0-9-gb097f75c5-NIGHTLY-SNAPSHOT"",; ""VariantCallingCarrotOrchestrated.gatk_docker"": ""image_build:gatk|d791874a0490fec31b2587c06ad6c2f2ad397000"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": {; ""read_from_cache"": false; },; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607:4123,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1545896607,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""VariantCallingCarrotOrchestrated.gatk_control_docker"": ""broadinstitute/gatk-nightly:2022-03-04-4.2.5.0-9-gb097f75c5-NIGHTLY-SNAPSHOT"",; ""VariantCallingCarrotOrchestrated.gatk_docker"": ""image_build:gatk|fde1064710b236c7cdab83248817093046494660"",; ""VariantCallingCarrotOrchestrated.haplotype_scatter_count"": 50,; ""VariantCallingCarrotOrchestrated.monitoring_script"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/cromwell_monitoring_script.sh"",; ""VariantCallingCarrotOrchestrated.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrotOrchestrated.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrotOrchestrated.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrotOrchestrated.use_gatk3_haplotype_caller"": true; },; ""test_options"": {; ""read_from_cache"": false; },; ""eval_input"": {; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalMonitoringExample"": ""test_output:VariantCallingCarrot",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498:4123,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,4123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1548708498,2,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,",; ""test_id"": ""15973a95-055a-4540-9590-ce40f34411f5"",; ""name"": ""GATK HaplotypeCaller vs Nightly Test_run_2022-02-23 19:59:31.084286796 UTC"",; ""status"": ""building"",; ""test_input"": {; ""VariantCallingCarrot.agg_preemptible_tries"": 3,; ""VariantCallingCarrot.base_file_name"": ""NA24385"",; ""VariantCallingCarrot.break_bands_at_multiples_of"": 100000,; ""VariantCallingCarrot.calling_interval_list"": ""gs://emeryj-testing/CarrotData/wgs_calling_regions.hg38.interval_list"",; ""VariantCallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://emeryj-testing/CarrotData/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://emeryj-testing/CarrotData/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-re",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705:1193,test,testing,1193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049160705,1,['test'],['testing']
Testability,",MedGen:C3463824,OMIM:614286,Orphanet:ORPHA52688|MeSH:D015179,MedGen:CN236642|MedGen:C2239176,OMIM:114550,Orphanet:ORPHA88673,SNOMED_CT:187769009,SNOMED_CT:25370001		Acute_myeloid_leukemia|Brainstem_glioma|Neoplasm_of_brain|Myelodysplastic_syndrome|Colorectal_Neoplasms|Hepatocellular_carcinoma		NC_000015.9:g.90631838C>T	no_assertion_criteria_provided	Pathogenic/Likely_pathogenic			single_nucleotide_variant	SO:0001483			IDH2:3418	SO:0001583|missense_variant	2	121913503		375987								HGNC:5383	Approved	gene with protein product	protein-coding gene		""isocitrate dehydrogenase 2 (NADP+), mitochondrial""			15q26.1	2017-03-24		2016-04-28		1.1.1.42	ENSG00000182054					CCDS10359, CCDS76792	OTTHUMG00000149815	147650	NM_001289910	P48735	ENSG00000182054	uc002box.4		B2R6L6|B4DFL2|Q96GT3	true	false		false	false		false	false	false	IDH2:3418	falsfalse	false	false	false	true	false	false	false	false	false	true	false	false	false	true	true	false	false	true	true	true	3	false	0	false		false	false	false	SNV	0x050268000a05000002100120	1	false	133	rs121913503																						3418	90631838	false	SITE	[745, 640|576, 448]			2483	1	93	[35, 32]	[139, 140]	[60, 60]	19						7.30	93				2809.17 ; ```. It seems that it does not matter if I choose hg19 oder 38. I used `funcotator_dataSources.v1.7.20200521s` as reference.; The call for hg38 was (I slightly shortened it for readability - usually it runs in nextflow - the hg19 call was more or less the same - the -L file is usually not only for IDH2 and has a interval_list format instead of .bed):. ```; gatk Funcotator -R reference/resources_broad_hg38_v0_Homo_sapiens_assembly38.fasta -V mutect2_out.vcf -O funcotator_out.maf --output-file-format MAF --data-sources-path reference/funcotator_dataSources.v1.7.20200521s/ --ref-version hg38 -L reference/idh2_r172.bed; ```. I will create an example test set as soon as I can, have reproducible errors for you. If you already have a hint for me to try, I would be happy to hear from you. Best regards,; Daniel",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064:4260,test,test,4260,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5777#issuecomment-724975064,1,['test'],['test']
Testability,- Added `--min-num-bases-for-segment-funcotation` parameter to Funcotator.; This will allow for segments of length less than 150 bases to be; annotated if given at run time (defaults to 150 bases to preserve; previous behavior).; - Added miles of piping to support new parameter.; - Added test to ensure that the logic for this is adhered to in the; output renderer where the UserError was being thrown before; (GeneListOutputRenderer). Fixes #6575,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6577:289,test,test,289,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6577,2,"['log', 'test']","['logic', 'test']"
Testability,"- Added a ReadMe for the CNN workflow; - Added a input JSON for the Mutect2 workflow files located in gs:// buckets. The reason for this is to have any workflow listed in the Dockstore site have an accompanying JSON for users to test the workflow. Also, have a ReadMe with a description of the workflow.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6542:229,test,test,229,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6542,1,['test'],['test']
Testability,- Added code to populate `Match_Norm_Seq_Allele1` and 2.; - Added two samples to `regressionTestVariantSetHG38.vcf` file.; - Regenerated and validated expected outputs for large tests. Fixes #7408,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7422:178,test,tests,178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7422,1,['test'],['tests']
Testability,"- Added the ability to have IUPAC bases in either the ref/alt alleles OR; in the reference when calculating the amino acid sequence. In this case, the code will no longer throw a user exception, but will log a warning and will produce `?` amino acids in the case that they cannot be decoded from the amino acid table. Currently this will happen any time an `N` or IUPAC base is in the region to be coded into amino acids.; - Added AminoAcid.UNDECODABLE as a placeholder for any unknown /; undecodable amino acid (such as in the case of an ambiguous IUPAC base). Fixes #6774",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6778:204,log,log,204,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6778,1,['log'],['log']
Testability,- Added the optional flag to run oncotator in the CNV WDL. This is not tested automatically in github.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3408:71,test,tested,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3408,1,['test'],['tested']
Testability,"- Adds size similarity criterion to SVConcordance and SVCluster tools. This is particularly useful for accurately matching smaller SVs that have a high degree of breakpoint uncertainty, in which case reciprocal overlap does not work well. PESR/mixed variant types must have size similarity, reciprocal overlap, and breakend window criteria met. Depth-only variants may have either size similarity + reciprocal overlap OR breakend window criteria met (or both).; - Rewrites some of the linkage logic to be simpler to read.; - Fixes a rare bug with `SortedMultiset` in `SVClusterEngine` that sometimes caused records with identical start positions to get lost.; - Removes null record attributes to avoid `.` INFO/FORMAT fields, which cause a parsing error with Integer types.; - Add check that the vcf header contigs are sorted in the same order.; - Retain FILTER and QUAL fields in output.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8257:493,log,logic,493,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8257,1,['log'],['logic']
Testability,"- Adds the “gatk” conda environment, with dependencies defined by the file scripts/gatkcondaenv.yml.; - Updates the docker image to include the activated conda environment.; - Adds a new entry to the travis test matrix for running tests that depend on Python and the conda environment.; - Adds a “python” test group. Any tests for tools or functionality that are dependent on Python should be put into this group. Tests in this group will be executed in a docker container on travis in the python build matrix entry only.; - The existing WDL tests are unchanged; so although they execute in the context of the docker container and conda environment, there are no tests (yet) that are actually dependent on the conda environment and run through cromwell.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912:207,test,test,207,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912,7,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,- ApplyBQSR adapted to fit into the Skeleton pipeline; - command-line version still works and passes tests (including cloud); - BaseRecalibrator's testPlottingWorkflow now passes,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/815:101,test,tests,101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/815,2,['test'],"['testPlottingWorkflow', 'tests']"
Testability,- Attempts testing of docker,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2726:11,test,testing,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2726,1,['test'],['testing']
Testability,- CEUTrio.HiSeq.WGS.b37.ch20.4379150-4379157.bam is a very small input that triggers the bug.; - TestMath is a small demonstration of the underlying problem (order of operations changes the answer); - RecalDatum.java is updated to fix the problem; - BaseRecalibratorDataflowIntegrationTest runs the new code and confirms it's OK.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/878:97,Test,TestMath,97,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/878,1,['Test'],['TestMath']
Testability,"- Clarify tool documentation:; - Update `joint posteriors (JL)` to `joint posteriors (JP)`; - Remove statistical notes and provide link to GATK Article#11074 for background and math; - Consolidate Notes and Caveats sections; - Clarify at top the three different sources of priors and tool behavior regarding these; - Clarify for family priors the tool only considers trio groups; - Add Laura's comment that recent updates allow the tool to appropriately apply priors to indels; - Change logger.info to logger.warn for situation where trio pedigree file is incomplete; - Note that in this situation, in the absence of other refinement, the results are identical to the input",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5601:487,log,logger,487,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5601,2,['log'],['logger']
Testability,"- Complex (CPX) SV records no longer use `END2`/`CHR2` INFO fields and instead are defined by `CPX_INTERVALS` in addition to normal coordinates.; - Adds new class `SVCallRecord.ComplexEventInterval` for storing complex event intervals, which are associated with a particular SV type.; - SV clustering now takes into account CPX subtype and intervals, requiring intervals to match on type and interval similarity as defined by the clustering parameters (e.g. minimum reciprocal overlap).; - Improved reciprocal translocation (CTX) record handling. In particular, these records are now treated similarly to BNDs for clustering purposes.; - Added unit tests for new CPX cases.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8521:649,test,tests,649,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8521,1,['test'],['tests']
Testability,- Create a GATK4 Dockerfile; - Added a script to create the docker image for the GATK4 Dockerfile. This will create a staging directory if desired.; - Created a GATK Base Dockerfile that other GATK4 Dockerfiles can use in ``FROM``; - Added a script to create the GATK Base image; - Documentation; - Fixed unit tests that fail in the docker image.; - docker images based on OpenJDK 8. Closes #2457 ; Closes #2708 ; Closes #2700,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2709:310,test,tests,310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2709,1,['test'],['tests']
Testability,"- Created FuncotationFactory as new base class for DataSourceFuncotationFactory; - Created ComputedFuncotationFactory class, inheriting from FuncotationFactory and acting as a base class for GCContentFuncotationFactory and ReferenceContextFuncotationFactory; - Extracted GC content calculation and reference context annotations from previous classes; - Created two new arguments for reference window size and gc content window size; - Created unit tests for GCContent- and ReferenceContextFuncotationFactories; - Regenerated validation files",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6033:448,test,tests,448,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6033,1,['test'],['tests']
Testability,"- DF_BaseRecalibrator tool, can be called from the command line. Same syntax as BaseRecalibrator.; - BaseRecalibrator's integration tests ported to this Dataflow version.; - Small changes to make types serializable.; - Note that this pull request is an intermediate step as it only works for local computations. (this depends on [PR#522](https://github.com/broadinstitute/hellbender/pull/522))",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/523:132,test,tests,132,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/523,1,['test'],['tests']
Testability,- Disable default read filter with arguments does not longer blows up but log a warning (fixes #2357); - Improved help message for read filter (fixes #2358 and #2398); - `--disableAllReadFilters` changed to `--disableToolDefaultReadFilters` and `isDisabledFilter()` honor this behavior (fixes #2361 and #2363); - Add test for exercise the path of logging a warning when disabling a not enabled filter (as proposed in #2377); - Disabling a non-existent read filter throws a `CommandLineException` (fixes #2397),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2401:74,log,log,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2401,3,"['log', 'test']","['log', 'logging', 'test']"
Testability,"- Done initializing engine; 17/02/06 21:42:46 INFO org.spark_project.jetty.util.log: Logging initialized @2790ms; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.Server: jetty-9.2.z-SNAPSHOT; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.ServerConnector: Started ServerConnector@5148cf20{HTTP/1.1}{0.0.0.0:4040}; 17/02/06 21:42:46 INFO org.spark_project.jetty.server.Server: Started @2906ms; 17/02/06 21:42:47 INFO com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase: GHFS version: 1.6.0-hadoop2; 17/02/06 21:42:48 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at mw-test-m/10.128.0.7:8032; 17/02/06 21:42:48 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_1486412429336_0010; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.utils.GCSOptions: Creating storgae client for PrintReadsSpark; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: Creating SeekableGCSStream: gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam.bai; 17/02/06 21:42:53 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: uriToStorageObject mw-pathseq-test/hs37d5cs.reads.sorted.bam.bai=mw-pathseq-test:hs37d5cs.reads.sorted.bam.bai; 17/02/06 21:42:54 INFO com.google.cloud.genomics.dataflow.readers.bam.BAMIO: No index for gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam.bai; 17/02/06 21:42:54 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: Creating SeekableGCSStream: gs://mw-pathseq-test/hs37d5cs.reads.sorted.bam; 17/02/06 21:42:54 INFO com.google.cloud.genomics.dataflow.readers.bam.SeekableGCSStream: uriToStorageObject mw-pathseq-test/hs37d5cs.reads.sorted.bam=mw-pathseq-test:hs37d5cs.reads.sorted.bam; 17/02/06 21:42:54 INFO org.spark_project.jetty.server.ServerConnector: Stopped ServerConnector@5148cf20{HTTP/1.1}{0.0.0.0:4040}; 21:42:54.861 INFO PrintReadsSpark - Shutting down engine; [February 6, 2017 9:42:54 PM UTC] org.broadinstitute",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929:5617,test,test,5617,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2394#issuecomment-277823929,1,['test'],['test']
Testability,- Error that was missed in testing.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4045:27,test,testing,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4045,1,['test'],['testing']
Testability,- Extracted the order validation for GVCF files into a separate method and included; a check to reset the counter when a new contig is found. Contigs have to; occur in continuous blocks; validation for files in which contigs occur; alternatingly is not supported.; - Added a set of integration tests for GVCF files with two and three contigs. Fixes #6023,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6028:294,test,tests,294,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6028,1,['test'],['tests']
Testability,"- Fixed a NPE in the `problem` variant case, which is now resolved.; This was due to not filling out the dataSourceName field.; - Tested with b37 gnomAD matching against b37 variants with hg19 data; sources.; - Fixed some issues with the default problem variant annotations.; - Adding in per-data source cache settings.; - Fixing logger in DataSourceUtils. Fixes #5456",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5491:130,Test,Tested,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5491,2,"['Test', 'log']","['Tested', 'logger']"
Testability,"- Fixed automated test for that was being skipped. When re-enabled, it passed without code changes.; - Added automated test. Passed without any other code changes.; - Added documentation for blacklisting when running the PoN and case sample/pair workflows (as opposed to using the postprocessing combine_tracks.wdl).; - Added hard num het filter. This helps guard against oversegmentation skewing MAF estimates. For WGS, `10` is a reasonable value.; - Changed default maf threshold for calling balanced segments. The previous value was too sensitive.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5384:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5384,2,['test'],['test']
Testability,- Fixes #4880 ; - Adds test to catch this if it happens again. Offline I ran it against a large hg38 file and it succeeded.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4881:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4881,1,['test'],['test']
Testability,"- HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 02:55:32.063 INFO Funcotator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 02:55:32.063 INFO Funcotator - Deflater: IntelDeflater; 02:55:32.063 INFO Funcotator - Inflater: IntelInflater; 02:55:32.063 INFO Funcotator - GCS max retries/reopens: 20; 02:55:32.063 INFO Funcotator - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 02:55:32.063 WARN Funcotator - . [1m[31m !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: Funcotator is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!![0m. 02:55:32.063 INFO Funcotator - Initializing engine; 02:55:32.318 INFO FeatureManager - Using codec VCFCodec to read file file:///export2/liuhw/wes_test/Mutect2_filter/K001137N_somatic_filtered.vcf.gz; 02:55:32.459 INFO Funcotator - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hellbender.tools.funcotator.dataSources.DataSourceUtils).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 02:55:32.466 INFO Funcotator - Shutting down engine; [July 12, 2024 2:55:32 AM EDT] org.broadinstitute.hellbender.tools.funcotator.Funcotator done. Elapsed time: 0.01 minutes.; Runtime.totalMemory()=2148532224; ***********************************************************************. A USER ERROR has occurred: Bad input: ERROR in config file: file:///./software/gatk_Funcotator/funcotator_dataSources.v1.8.hg38.20230908s/gnomAD_exome/hg38/gnomAD_exome.config - src_file does not exist: /./software/gatk_Funcotator/funcotator_dataSources.v1.8.hg38.20230908s/gnomAD_exome/hg38/gs:/broad-public-datasets/funcotator/gnomAD_2.1_VCF_INFO_AF_Only/hg38/gnomad.exomes.r2.1.sites.liftoverToHg38.INFO_ANNOTATIONS_FIXED.vcf.gz. ****************",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8913:3104,log,logger,3104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8913,1,['log'],['logger']
Testability,"- I changed some capitalization depending on what a google search brought up for terms, e.g. Fisher's Exact Test --> Fisher's exact test. But I only did so for the summary and did not touch the rest of the doc.; - Again, I did not touch any other portion of the annotation docs. ---; ### Examining the gatkDocs via a browser:. - [ ] StrandOddsRatio equations looking odd with `$$` surrounding them, e.g.; ```; Odds Ratios in the 2x2 contingency table below are; $$ R = \frac{X[0][0] * X[1][1]}{X[0][1] * X[1][0]} $$; ```; - Docs with minimal content and author showing (DavidB or TakutoS):; - [ ] BaseQuality; - [ ] FragmentLength; - [ ] MappingQuality; - [ ] ReadPosition; - [ ] ReferenceBases; - [ ] StrandArtifact; - Docs with just minimal content; - ExcessHet; - SampleList; - [ ] OxoGReadCounts hypertext link at bottom should include a doi, title should be italicized not quoted and hypertext should be limited to title.; - Some of the docs have a ""Caveat"" section while others have ""Related annotations"" and others neither. This seems inconsistently applied.; - [ ] UniqueAltReadCount's content is one giant long paragraph that could use formatting. Also, again, not sure if UniqueAltReadCount.java's acronym is actually UNIQ_ALT_READ_COUNT.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344711871:108,Test,Test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3809#issuecomment-344711871,2,"['Test', 'test']","['Test', 'test']"
Testability,"- I sneaked in another change where I pass in a single file containing a list of input_vcfs instead of an array of input_vcfs. I made this because Terra couldn't save my inputs when I passed in 700 samples.; - Most of the logic was moved into `CreateTables`, including the determination for what files to load. It would have been cleaner to move all of the file loading logic into `LoadTable` but the current approach cuts down the on the number of `gsutil ls` calls made and more importantly, only spins up a shard if there are files to load.; - I pushed the logic into a separate workflow because I wanted to refactor it as two tasks and I couldn't find a way to get a Task to call another Task without wrapping it in a workflow.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7056:222,log,logic,222,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7056,3,['log'],['logic']
Testability,- M2 WDL has explicit optional parameter for a list of fields that should be excluded from the output.; - Both M2 WDL files are updated. Manually tested mutect2.wdl on local backend. Closes #5141,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5242:146,test,tested,146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5242,1,['test'],['tested']
Testability,"- MAF is the output of Funcotator in M2 WDL. Closes #4935 ; - Updated mutect2.wdl manually tested locally and manually tested in FireCloud.; - Updated mutect2_nio.wdl manually tested in FireCloud.; - Updated automatic Cromwell WDL tests. Closes #4807 ; - Empty MAFs will be devoid of variants, not a file of 0 bytes. Closes #4937 ; - Fixed issue where multiple transcripts could be selected in edge cases, even when CANONICAL or BEST_EFFECT was selected. Closes #4952",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4941:91,test,tested,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4941,4,['test'],"['tested', 'tests']"
Testability,- Make test `public` so it can be run within IntelliJ.; - Make test clean up after itself.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8274:7,test,test,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8274,2,['test'],['test']
Testability,- Modified the files so that we can build libVectorLoglessPairHMM.so on Ubuntu/ppc64le platform; - Restored and modified the files for 128-bit vector that are on GATK3; - Added a new file to replace AVX with POWER8 vector instructions; - [Question] Is any unit test included in the repository to test the library?; - Confirmed that the library was built on Ubuntu 15.10/ppc64le. ```; ./gradlew installAll; :downloadGsaLibFile UP-TO-DATE; :extractIntelDeflater; :compileJava; :processResources; :classes; :compileVectorLoglessPairHMMSharedLibraryVectorLoglessPairHMMCpp; :linkVectorLoglessPairHMMSharedLibrary; :copySharedLib; :jar; :startScripts; :installDist; :sparkJar; :installSpark; :installAll. BUILD SUCCESSFUL; ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748:261,test,test,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748,2,['test'],['test']
Testability,- Move command line parser integration of read filters up to GATKTool (https://github.com/broadinstitute/gatk/issues/2175); - Added fromList method to ReadFilter and CountingReadFilter (https://github.com/broadinstitute/gatk/issues/2198); - Minor change/rationalization of naming and implementation of BQSR filter methods to match the rest of the framework; - Made a small change to the implementation of the base read filter class to improve clarity/testability; - Opportunistic removal of extraneous imports in unrelated classes,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2218:451,test,testability,451,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2218,1,['test'],['testability']
Testability,"- Moved tools to ""Metagenomics"" program group; - Updated tool docs; - Changed tool arguments to kebab-case; - Defined argument strings as static variables that are cross-referenced in integration tests",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3918:196,test,tests,196,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3918,1,['test'],['tests']
Testability,"- Now will detect variants on mitochondrial contigs and will use the; correct, alternate coding sequence to create protein change strings for; such variants.; - Added MT sequences to Gencode data source.; - Added tests for MT protein change strings.; - Now `FuncotatorUtils::getMitochondrialAminoAcidByCodon` has more; complete tests and handles special cases for known initiation site; differences by genus.; - Updated scripts to detect the directory in which the scripts are run.; - Added MT variants to integration tests.; - Added MT genes to gencode testing data source. Fixes #4863",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5361:213,test,tests,213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5361,4,['test'],"['testing', 'tests']"
Testability,"- Refactored GencodeGtfCodec to enable parsing of ENSEMBL GTF files.; - Created AbstractGtfCodec and EnsemblGtfCodec.; - Updated Funcotator and Funcotation Factories to allow ENSEMBL-based; GTF files.; - Added an e. coli data sources folder, reference, VCF, and expected; data for testing.; - Added tests for ENSEMBL GTF files. Fixes #6180",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6477:281,test,testing,281,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6477,2,['test'],"['testing', 'tests']"
Testability,- Relaxes restrictions for allowed samples in SVConcordance: the tool can now accept eval/truth VCFs with arbitrary sample sets and will have genotype concordance metrics computed on the intersection of the sample sets. All available samples are still used for AF/AC annotations. Integration tests added for cases when the samples sets are overlapping but not equal.; - Small additional improvements for sites-only VCFs: concordance annotations will now be `.` instead of `NaN` for example. Integration test added for this case.; - Improved behavior for eval AF annotations: these will not be recalculated if they already exist.; - Improved behavior for truth AF annotations: these will now only be recalculated if they don't exist in the input truth VCF.; - Updated tool doc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8211:292,test,tests,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8211,2,['test'],"['test', 'tests']"
Testability,- Remove some unused VCF header fields from ExtractFeatures; - Renamed VQSR Lite fields to their original naming (e.g. AS_VQS_SENS becomes CALIBRATION_SENSITIVITY). Passing integration test [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/67a00690-5b74-40fd-a0fb-5ab2b0407a4d) - uses updated truth. Example outputs can be found in [this](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/22134bb6-e4b5-4252-b674-860a1168fb6c) Extract run.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8412:185,test,test,185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8412,1,['test'],['test']
Testability,- Removed positive-negative training from TrainVariantAnnotationsModel along with associated integration and WDL tests.; - Added ability to run positive-unlabeled training by passing unlabeled annotations to a custom python backend (although no example backend or tests were added).; - Cleaned up some WDL arguments to allow distinct training and scoring python scripts.; - Removed the `useAlleleSpecificAnnotations` argument; we instead infer whether to run in allele-specific mode from the VCF header.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8131:113,test,tests,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8131,2,['test'],['tests']
Testability,"- The main change is the use of a reducible multi level collector; currently there is only one consumer which is InsertizeMetricsCollector.; - There is a long comment and diagram at the top of MetricsCollectorSpark that describes the roles and relationships of the various component classes that make up a collector. Its a good place to start to understand these changes.; - The Spark and walker versions of CollectInsertSizeMetrics now use the same MultiLevelCollectorReducible-derived implementation (InsertSizeCollector), and exactly the same tests and expected results.; - All of the CollectInsertSizeMetricsSpark code and corresponding unit tests from the previous implementation are removed in this PR.; - Fixes https://github.com/broadinstitute/gatk/issues/1512.; - Both CollectMultipleMetrics (Spark and walker) implementations include support and tests for external/custom collectors.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1959:546,test,tests,546,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1959,3,['test'],['tests']
Testability,- Tool creates histograms to reflect differences in the composition reference blocks in GVCF files; - Integration tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6802:114,test,tests,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6802,1,['test'],['tests']
Testability,- Unclear what is its purpose.; - added and modified tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3680:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3680,1,['test'],['tests']
Testability,- Updated data sources to include variant sites for symbolic alleles.; - Fixed tests to be correct for new logic.; - Now has tests for symbollic alternate alleles and masked alleles. Fixes #5402,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5406:79,test,tests,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5406,3,"['log', 'test']","['logic', 'tests']"
Testability,- Use start position as end for purposes of sorting PE evidence; - Adds regression test to MultiFeatureWalker,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7835:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7835,1,['test'],['test']
Testability,"- User defined transcripts were being used as a filter rather than a priority order. The filtering step has been eliminated. Closes #4918 ; - Fixed previously unidentified issue where locus level ranking was being reversed. Updated tests. This was identified thanks to the thousands of tests in Funcotator (only one failed, but that was all it took).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4931:232,test,tests,232,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4931,2,['test'],['tests']
Testability,- Validating sequence dictionaries...; 14:24:34.550 INFO Funcotator - Processing user transcripts/defaults/overrides...; 14:24:34.551 INFO Funcotator - Initializing data sources...; 14:24:34.554 INFO DataSourceUtils - Initializing data sources from directory: funcotator_dataSources.v1.7.20200521g; 14:24:34.560 INFO DataSourceUtils - Data sources version: 1.7.2020521g; 14:24:34.560 INFO DataSourceUtils - Data sources source: ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/funcotator/funcotator_dataSources.v1.7.20200521g.tar.gz; 14:24:34.561 INFO DataSourceUtils - Data sources alternate source: gs://broad-public-datasets/funcotator/funcotator_dataSources.v1.7.20200521.tar.gz; 14:24:34.587 INFO DataSourceUtils - Resolved data source file path: file:///datastore/nextgenout5/share/labs/bioinformatics/alanh/test/nf-germline-exome_sim4/work/3f/5c862c695472a59dfab47a87afe4f3/gencode.v34.annotation.REORDERED.gtf -> file:///datastore/nextgenout5/share/labs/bioinformatics/alanh/test/nf-germline-exome_sim4/work/3f/5c862c695472a59dfab47a87afe4f3/funcotator_dataSources.v1.7.20200521g/gencode/hg38/gencode.v34.annotation.REORDERED.gtf; 14:24:34.591 INFO DataSourceUtils - Resolved data source file path: file:///datastore/nextgenout5/share/labs/bioinformatics/alanh/test/nf-germline-exome_sim4/work/3f/5c862c695472a59dfab47a87afe4f3/gencode.v34.pc_transcripts.fa -> file:///datastore/nextgenout5/share/labs/bioinformatics/alanh/test/nf-germline-exome_sim4/work/3f/5c862c695472a59dfab47a87afe4f3/funcotator_dataSources.v1.7.20200521g/gencode/hg38/gencode.v34.pc_transcripts.fa; 14:24:34.599 INFO DataSourceUtils - Resolved data source file path: file:///datastore/nextgenout5/share/labs/bioinformatics/alanh/test/nf-germline-exome_sim4/work/3f/5c862c695472a59dfab47a87afe4f3/acmg59_test_cleaned.txt -> file:///datastore/nextgenout5/share/labs/bioinformatics/alanh/test/nf-germline-exome_sim4/work/3f/5c862c695472a59dfab47a87afe4f3/funcotator_dataSources.v1.7.20200521g/acmg_rec/hg38/acmg59_te,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6926:4827,test,test,4827,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6926,1,['test'],['test']
Testability,- [ ] Sample-specific unexplained variance for all samples + quantile in the cohort; - [ ] HMM log likelihood + quantile in the cohort; - [ ] Bias factor loading quantiles in the cohort. This issues requires calculating and saving a number of summary statistics in the COHORT mode in conjunction with the coverage model parameters bundle.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4060:95,log,log,95,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4060,1,['log'],['log']
Testability,- [x] Mount the large files rather than copying into the docker image when running the tests.; - [x] Cleanup the build directory before publishing. We only need the jar.; - [ ] Remove native dependencies that are not required for the docker image.; - [ ] Uninstall gcc and clean the ubuntu image a bit.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2720:87,test,tests,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2720,1,['test'],['tests']
Testability,"- [x] Output bam instead of sam for assembly alignments; - [x] Instead of creating directory, new interpretation tool writes files (behavior consistent with current interpretation tool); - [x] Prefix with sample name for output files' names; - [x] Add `INSLEN` annotation when there's `INSSEQ`; - [x] Clarify the boundary between `AlignedContig` and `AssemblyContigWithFineTunedAlignments`; - [x] Increase test coverage for `AssemblyContigAlignmentsConfigPicker`. Up to date plans for more cleanups and improvements posted in #4111",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4562:406,test,test,406,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4562,1,['test'],['test']
Testability,"- `GvsImportGenomes.wdl` - renamed WDL, fixed issue with poorly returned bq load string; - `GvsCreateFilterSet.wdl` - renamed WDL, added SA support, fixed a lot of issues in ExtractFeatures tool surrounding permissions - BQ projectIDs are now being properly passed through, freq_table UDF defined in repo rather than in BQ; - `GvsPrepareCallset.wdl` (done in previous PR); - `GvsExtractCallset.wdl` - renamed WDL, added SA support; - SA testing README added. all 4 tested with SA in this Terra workspace: https://app.terra.bio/#workspaces/broad-dsp-spec-ops-fc/gvs_sa_testing; testing also without SA in this workspace: https://app.terra.bio/#workspaces/broad-dsp-spec-ops-fc/gvs_testing_no_sa",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7205:437,test,testing,437,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7205,3,['test'],"['tested', 'testing']"
Testability,- add missing null check for reads a whole block past EOF; - correct handling for seek just past EOF + read; - fix reuse of caching buffer when near EOF; - add tests that reproduce(d) the problems,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2387:160,test,tests,160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2387,1,['test'],['tests']
Testability,- added GvsAssignIds to .dockstore.yaml; - added logic to GvsAssignIds to prevent bug from empty input; - updates to Quickstart README directions. Closes https://broadworkbench.atlassian.net/browse/VS-183,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7463:49,log,logic,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7463,1,['log'],['logic']
Testability,- also added it to the PGEN export WDL to analyze performance easier. test run of filter correction: https://app.terra.bio/#workspaces/gvs-dev/RSA%20-%20GVS%20Quickstart%20V2%20/job_history/f7de418a-05c7-4720-8dc9-a997b1cfd456; test run of PGEN extract: https://app.terra.bio/#workspaces/gvs-dev/RSA%20-%20GVS%20Quickstart%20V2%20/job_history/e2b2c875-4cfd-4cbe-879a-18fb91c1518e,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8954:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8954,2,['test'],['test']
Testability,"- error messages will now include all the missing arguments when applicable; - error messages should be more readable; old style:. ```; $ hellbender PrintReads; ***********************************************************************. A USER ERROR has occurred: Invalid command line: Argument output was missing: Argument 'output' is required. ***********************************************************************; ```. new style:. ```; $ hellbender PrintReads; ***********************************************************************. A USER ERROR has occurred:. Invalid command line:; required argument --input was not specified; required argument --output was not specified. Rerun with --help to see more information on available options. ***********************************************************************; ```; - fixed a bug in CommandLineParser; - collection arguments that had a mutual exclusion field would be reported as missing even if one of the mutex arguments was present; - adding tests for this case; - some refactoring on CommandLineParser. fixes #418. <!-- Reviewable:start -->. [<img src=""https://reviewable.io/review_button.png"" height=40 alt=""Review on Reviewable""/>](https://reviewable.io/reviews/broadinstitute/gatk/1144). <!-- Reviewable:end -->",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1144:999,test,tests,999,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1144,1,['test'],['tests']
Testability,- expanding unit tests to actually replicate the error if we have a regression.; - applied fix that sorts the output.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3795:17,test,tests,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3795,1,['test'],['tests']
Testability,- fixup for problem with fully specified `file:///` names that I introduced in #1450 ; - adding test for fully specified `file:///` url; - adding additional tests to `ReadSparkSink` for HDFS; - tests for writing to HDFS using `MiniDFSCluster`; - tests for overwriting existing HDFS paths; - fixed instance of Wrong FileSystem exception in `ReadSparkSink`; - refactored `ReadSparkSink` to remove duplication; - adding `MiniClusterUtils`; - revising existing code using `MiniDFSCluster` to go through `MiniClusterUtils`; - had to make the minicluster dependency a compile time instead of test dependency so downstream projects can make use of MiniClusterUtils.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1461:96,test,test,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1461,5,['test'],"['test', 'tests']"
Testability,"- improved baits count annotator (""lazy"" post processing); - included bait counts as a multiplicative bias in TargetCoverageSexGenotypeCalculator; - improved info and warn log messages in TargetCoverageSexGenotyper; - interval exclusion via CLI args for TargetCoverageSexGenotyper; - soft target filtering using masks; - more extensive unit/integration tests for TargetCoverageSexGenotyper; - integration test for annotate targets w/ bait counts; - missing test resource files from gatk-protected repo; - address PR review",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3183:172,log,log,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3183,4,"['log', 'test']","['log', 'test', 'tests']"
Testability,"- new ""lazy"" annotation mode in TargetAnnotator (a hack for generating annotations that can not be done with a state-less FeatureWalker); - baits count target annotation; - included bait count as a multiplicative bias in TargetCoverageSexGenotypeCalculator; - improved info and warn log messages in TargetCoverageSexGenotyper; - interval exclusion via CLI args for TargetCoverageSexGenotyper (PAR regions can not be blacklisted via CLI arguments); - soft target filtering using masks; - more extensive unit/integration tests for TargetCoverageSexGenotyper; - integration test for annotate targets w/ bait counts",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2813:283,log,log,283,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2813,3,"['log', 'test']","['log', 'test', 'tests']"
Testability,"- new version of BaseRecalibratorDataflow that fits into the skeleton framework; - new command-line BaseRecalibratorDataflow that uses the same code; - tests and test inputs for BaseRecalibrator. They pass, locally and on the cloud.; - fix for issue #791 via a new genomics-dataflow-java release; - smaller changes, like == -> .equals in SequenceDictionaryUtils and using getInstance() to follow the singleton pattern.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/812:152,test,tests,152,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/812,2,['test'],"['test', 'tests']"
Testability,- restore job stats collection to create_ranges_cohort_extract_data_table.py; - add writing of cost info to BigQuery table to create_ranges_cohort_extract_data_table.py and populate_alt_allele_table.py; - add task to GvsQuickstartIntegration.wdl that checks that expected cost data was written to BigQuery table; - tweaked schema for cost_observability table to include descriptions; ; Integration test run: https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/30a2d8ee-13dd-4829-b3a8-4e6a67409705; Closes https://broadworkbench.atlassian.net/browse/VS-480,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7915:398,test,test,398,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7915,1,['test'],['test']
Testability,"- reviewed and restricted the access modifiers of all ICG-related classes; - got rid of the functionality to hold on to old caches: whenever a cache goes out of date, the reference is immediately made null in the new ICG; - completely rewrote ComputableGraphStructure in a functional style; - got rid of unused and unnecessary methods; - Created an ImmutableComputableGraphUtils and factored out the builder and other common methods; - math equality asserts for NDArray; - unit tests for ComputableGraphStructure; - unit tests for ImmutableComputableGraph; - unit tests for ImmutableComputableGraphUtils; - CacheNode keys and tags have their own classes now for code clarity",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3034:450,assert,asserts,450,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3034,4,"['assert', 'test']","['asserts', 'tests']"
Testability,"- reviewed and restricted the access modifiers of all ICG-related classes; - got rid of the functionality to hold on to old caches: whenever a cache goes out of date, the reference is immediately made null in the new ICG; - completely rewrote ComputableGraphStructure in a functional style; - got rid of unused and unnecessary methods; - Created an ImmutableComputableGraphUtils and factored out the builder and other common methods; - math equality asserts for NDArray; - unit tests for ComputableGraphStructure; - unit tests for ImmutableComputableGraph; - unit tests for ImmutableComputableGraphUtils; - keys and tags have their own classes now",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3035:450,assert,asserts,450,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3035,4,"['assert', 'test']","['asserts', 'tests']"
Testability,- separates sample Avro output from other non-partitioned (filter tables) so that they can be in groups of 4000 samples each. Test run here: https://app.terra.bio/#workspaces/gvs-dev/RSA%20-%20GVS%20Quickstart%20V2%20/job_history/30321bb4-614b-4678-a124-12385deee37a,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8673:126,Test,Test,126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8673,1,['Test'],['Test']
Testability,"- updated integration test (removed that argument so it defaults to the same thing); - tested that using ""NONE"" as an argument works",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7206:22,test,test,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7206,2,['test'],"['test', 'tested']"
Testability,-- | ---- |; | R | openjdk8 | [29984.6](https://travis-ci.com/broadinstitute/gatk/jobs/317851324) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.6/tests/test/index.html) |; | python | openjdk8 | [29984.5](https://travis-ci.com/broadinstitute/gatk/jobs/317851323) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.5/tests/test/index.html) |; | integration | oraclejdk8 | [29984.12](https://travis-ci.com/broadinstitute/gatk/jobs/317851330) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.12/tests/test/index.html) |; | integration | openjdk11 | [29984.13](https://travis-ci.com/broadinstitute/gatk/jobs/317851331) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.13/tests/test/index.html) |; | cloud | openjdk8 | [29984.1](https://travis-ci.com/broadinstitute/gatk/jobs/317851319) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.1/tests/test/index.html) |; | cloud | openjdk11 | [29984.15](https://travis-ci.com/broadinstitute/gatk/jobs/317851333) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.15/tests/test/index.html) |; | unit | openjdk11 | [29984.14](https://travis-ci.com/broadinstitute/gatk/jobs/317851332) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.14/tests/test/index.html) |; | integration | openjdk8 | [29984.2](https://travis-ci.com/broadinstitute/gatk/jobs/317851320) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.2/tests/test/index.html) |; | variantcalling | openjdk8 | [29984.4](https://travis-ci.com/broadinstitute/gatk/jobs/317851322) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29984.4/tests/test/index.html) |; | unit | openjdk8 | [29984.3](https://travis-ci.com/broadinstitute/gatk/jobs/317851321) | [logs](https://s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380:1192,test,test-logs,1192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611695380,1,['test'],['test-logs']
Testability,-- | ---- |; | R | openjdk8 | [29992.6](https://travis-ci.com/broadinstitute/gatk/jobs/317887706) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.6/tests/test/index.html) |; | python | openjdk8 | [29992.5](https://travis-ci.com/broadinstitute/gatk/jobs/317887705) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.5/tests/test/index.html) |; | integration | oraclejdk8 | [29992.12](https://travis-ci.com/broadinstitute/gatk/jobs/317887712) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.12/tests/test/index.html) |; | integration | openjdk11 | [29992.13](https://travis-ci.com/broadinstitute/gatk/jobs/317887713) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.13/tests/test/index.html) |; | cloud | openjdk8 | [29992.1](https://travis-ci.com/broadinstitute/gatk/jobs/317887701) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.1/tests/test/index.html) |; | cloud | openjdk11 | [29992.15](https://travis-ci.com/broadinstitute/gatk/jobs/317887715) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.15/tests/test/index.html) |; | integration | openjdk8 | [29992.2](https://travis-ci.com/broadinstitute/gatk/jobs/317887702) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.2/tests/test/index.html) |; | unit | openjdk11 | [29992.14](https://travis-ci.com/broadinstitute/gatk/jobs/317887714) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.14/tests/test/index.html) |; | variantcalling | openjdk8 | [29992.4](https://travis-ci.com/broadinstitute/gatk/jobs/317887704) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29992.4/tests/test/index.html) |; | unit | openjdk8 | [29992.3](https://travis-ci.com/broadinstitute/gatk/jobs/317887703) | [logs](https://s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065:1192,test,test-logs,1192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-611733065,1,['test'],['test-logs']
Testability,-- |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.goog,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1199,test,test-logs,1199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['test'],['test-logs']
Testability,"----------- ; ; 11:03:49.970 INFO FilterMutectCalls - HTSJDK Version: 2.24.0 ; ; 11:03:49.970 INFO FilterMutectCalls - Picard Version: 2.25.0 ; ; 11:03:49.970 INFO FilterMutectCalls - Built for Spark Version: 2.4.5 ; ; 11:03:49.970 INFO FilterMutectCalls - HTSJDK Defaults.COMPRESSION\_LEVEL : 2 ; ; 11:03:49.970 INFO FilterMutectCalls - HTSJDK Defaults.USE\_ASYNC\_IO\_READ\_FOR\_SAMTOOLS : false ; ; 11:03:49.970 INFO FilterMutectCalls - HTSJDK Defaults.USE\_ASYNC\_IO\_WRITE\_FOR\_SAMTOOLS : true ; ; 11:03:49.970 INFO FilterMutectCalls - HTSJDK Defaults.USE\_ASYNC\_IO\_WRITE\_FOR\_TRIBBLE : false ; ; 11:03:49.970 INFO FilterMutectCalls - Deflater: IntelDeflater ; ; 11:03:49.971 INFO FilterMutectCalls - Inflater: IntelInflater ; ; 11:03:49.971 INFO FilterMutectCalls - GCS max retries/reopens: 20 ; ; 11:03:49.971 INFO FilterMutectCalls - Requester pays: disabled ; ; 11:03:49.971 INFO FilterMutectCalls - Initializing engine ; ; 11:03:50.504 INFO FeatureManager - Using codec VCFCodec to read file file:///home/lqh/somatic\_mutation/Mutect2/test.vcf.gz ; ; 11:03:50.696 INFO FilterMutectCalls - Done initializing engine ; ; 11:03:50.840 INFO ProgressMeter - Starting traversal ; ; 11:03:50.840 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute ; ; 11:03:50.841 INFO FilterMutectCalls - Starting pass 0 through the variants ; ; 11:03:51.014 INFO FilterMutectCalls - Shutting down engine ; ; \[June 4, 2021 11:03:51 AM CST\] org.broadinstitute.hellbender.tools.walkers.mutect.filtering.FilterMutectCalls done. Elapsed time: 0.19 minutes. ; ; Runtime.totalMemory()=625999872 ; ; java.lang.NumberFormatException: **For input string: ""167|35|14""** ; ; at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ; ; at java.lang.Integer.parseInt(Integer.java:580) ; ; at java.lang.Integer.valueOf(Integer.java:766) ; ; at htsjdk.variant.variantcontext.CommonInfo.lambda$getAttributeAsIntList$1(CommonInfo.java:288) ; ; at java.util.stream.R",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7298:5223,test,test,5223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7298,1,['test'],['test']
Testability,------------------------------------------------------ ; ; 23:01:23.928 INFO  SelectVariants - HTSJDK Version: 2.23.0 ; ; 23:01:23.929 INFO  SelectVariants - Picard Version: 2.23.3 ; ; 23:01:23.929 INFO  SelectVariants - HTSJDK Defaults.COMPRESSION\_LEVEL : 2 ; ; 23:01:23.929 INFO  SelectVariants - HTSJDK Defaults.USE\_ASYNC\_IO\_READ\_FOR\_SAMTOOLS : false ; ; 23:01:23.929 INFO  SelectVariants - HTSJDK Defaults.USE\_ASYNC\_IO\_WRITE\_FOR\_SAMTOOLS : true ; ; 23:01:23.929 INFO  SelectVariants - HTSJDK Defaults.USE\_ASYNC\_IO\_WRITE\_FOR\_TRIBBLE : false ; ; 23:01:23.930 INFO  SelectVariants - Deflater: IntelDeflater ; ; 23:01:23.930 INFO  SelectVariants - Inflater: IntelInflater ; ; 23:01:23.930 INFO  SelectVariants - GCS max retries/reopens: 20 ; ; 23:01:23.930 INFO  SelectVariants - Requester pays: disabled ; ; 23:01:23.930 INFO  SelectVariants - Initializing engine ; ; 23:01:25.939 INFO  GenomicsDBLibLoader - GenomicsDB native library version : 1.3.2-e18fa63 ; ; log4j:WARN No appenders could be found for logger (org.apache.hadoop.metrics2.lib.MutableMetricsFactory). ; ; log4j:WARN Please initialize the log4j system properly. ; ; log4j:WARN See [http://logging.apache.org/log4j/1.2/faq.html#noconfig](http://logging.apache.org/log4j/1.2/faq.html#noconfig) for more info. ; ; 23:01:39.847 info  NativeGenomicsDB - pid=4376 tid=4377 No valid combination operation found for INFO field AS\_InbreedingCoeff  - the field will NOT be part of INFO fields in the g ; ; enerated VCF records ; ; 23:01:39.847 info  NativeGenomicsDB - pid=4376 tid=4377 No valid combination operation found for INFO field AS\_QD  - the field will NOT be part of INFO fields in the generated VCF ; ; records ; ; 23:01:39.848 info  NativeGenomicsDB - pid=4376 tid=4377 No valid combination operation found for INFO field DS  - the field will NOT be part of INFO fields in the generated VCF rec ; ; ords ; ; 23:01:39.848 info  NativeGenomicsDB - pid=4376 tid=4377 No valid combination operation found for INFO fi,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7070:3562,log,logger,3562,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7070,1,['log'],['logger']
Testability,---------------------------------------------; 04:37:29.322 INFO GenomicsDBImport - ------------------------------------------------------------; 04:37:29.322 INFO GenomicsDBImport - HTSJDK Version: 2.16.1; 04:37:29.323 INFO GenomicsDBImport - Picard Version: 2.18.13; 04:37:29.323 INFO GenomicsDBImport - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 04:37:29.323 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 04:37:29.324 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 04:37:29.324 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 04:37:29.324 INFO GenomicsDBImport - Deflater: IntelDeflater; 04:37:29.324 INFO GenomicsDBImport - Inflater: IntelInflater; 04:37:29.325 INFO GenomicsDBImport - GCS max retries/reopens: 20; 04:37:29.325 INFO GenomicsDBImport - Requester pays: disabled; 04:37:29.325 INFO GenomicsDBImport - Initializing engine; 04:37:29.993 INFO FeatureManager - Using codec BEDCodec to read file file:///cromwell_root/gatk-test-data/intervals/Broad.human.exome.scattered/Broad.human.exome.b37_1_nozero.bed; 04:37:30.330 INFO IntervalArgumentCollection - Processing 18455956 bp from intervals; 04:37:30.340 WARN GenomicsDBImport - A large number of intervals were specified. Using more than 100 intervals in a single import is not recommended and can cause performance to suffer. It is recommended that intervals be aggregated together.; 04:37:30.380 INFO GenomicsDBImport - Done initializing engine; Created workspace /cromwell_root/genomicsdb; 04:37:30.677 INFO GenomicsDBImport - Vid Map JSON file will be written to genomicsdb/vidmap.json; 04:37:30.677 INFO GenomicsDBImport - Callset Map JSON file will be written to genomicsdb/callset.json; 04:37:30.677 INFO GenomicsDBImport - Complete VCF Header will be written to genomicsdb/vcfheader.vcf; 04:37:30.678 INFO GenomicsDBImport - Importing to array - genomicsdb/genomicsdb_array; 04:37:30.680 INFO ProgressMeter - Starting traversal; 04:3,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5300:2446,test,test-data,2446,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300,1,['test'],['test-data']
Testability,"--------------------------------------------; 16:11:10.075 INFO SVAnnotate - ------------------------------------------------------------; 16:11:10.075 INFO SVAnnotate - HTSJDK Version: 3.0.5; 16:11:10.075 INFO SVAnnotate - Picard Version: 3.0.0; 16:11:10.076 INFO SVAnnotate - Built for Spark Version: 3.3.1; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 16:11:10.076 INFO SVAnnotate - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 16:11:10.076 INFO SVAnnotate - Deflater: IntelDeflater; 16:11:10.077 INFO SVAnnotate - Inflater: IntelInflater; 16:11:10.077 INFO SVAnnotate - GCS max retries/reopens: 20; 16:11:10.077 INFO SVAnnotate - Requester pays: disabled; 16:11:10.077 INFO SVAnnotate - Initializing engine; 16:11:10.152 INFO FeatureManager - Using codec VCFCodec to read file file:///home/Division/user/2_Exome/snv_GWAS_data/disease_related_SV/test/test.vcf; 16:11:10.251 INFO SVAnnotate - Done initializing engine; 16:11:10.260 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 43): ##description: evidence-based annotation of the human genome (GRCh38), version 43 (Ensembl 109) Continuing, but errors may occur.; 16:11:10.260 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 43): ##description: evidence-based annotation of the human genome (GRCh38), version 43 (Ensembl 109) Continuing, but errors may occur.; 16:11:10.261 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///home/Division/user/2_Exome/snv_GWAS_data/disease_related_SV/gencode.v43.basic.modified_annotation.gtf; 16:11:10.261 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 43): ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8394#issuecomment-1621377138:2649,test,test,2649,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8394#issuecomment-1621377138,2,['test'],['test']
Testability,-------------------------------------; 23:45:26.825 INFO GenomicsDBImport - HTSJDK Version: 3.0.5; 23:45:26.825 INFO GenomicsDBImport - Picard Version: 3.0.0; 23:45:26.825 INFO GenomicsDBImport - Built for Spark Version: 3.3.1; 23:45:26.826 INFO GenomicsDBImport - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 23:45:26.826 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 23:45:26.826 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 23:45:26.826 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 23:45:26.826 INFO GenomicsDBImport - Deflater: IntelDeflater; 23:45:26.827 INFO GenomicsDBImport - Inflater: IntelInflater; 23:45:26.827 INFO GenomicsDBImport - GCS max retries/reopens: 20; 23:45:26.827 INFO GenomicsDBImport - Requester pays: disabled; 23:45:26.827 INFO GenomicsDBImport - Initializing engine; 23:45:46.550 INFO FeatureManager - Using codec IntervalListCodec to read file file:///gpfs/gpfs_de6000/home/dalegre/projects/1000-Genomes/jointcalling-test/goast_workflows/JointCalling/test_samples-1000.1.4/results/germline/interval/temp_0882_of_2000/scattered.interval_list; 23:45:46.584 INFO IntervalArgumentCollection - Processing 1086188 bp from intervals; 23:45:46.586 INFO GenomicsDBImport - Done initializing engine; 23:45:47.489 INFO GenomicsDBLibLoader - GenomicsDB native library version : 1.4.4-ce4e1b9; 23:45:47.491 INFO GenomicsDBImport - Vid Map JSON file will be written to /gpfs/gpfs_de6000/home/dalegre/projects/1000-Genomes/jointcalling-test/goast_workflows/JointCalling/test_samples-1000.1.4/results/jointcalling/genomicsDB/temp_0882_of_2000_DB/vidmap.json; 23:45:47.491 INFO GenomicsDBImport - Callset Map JSON file will be written to /gpfs/gpfs_de6000/home/dalegre/projects/1000-Genomes/jointcalling-test/goast_workflows/JointCalling/test_samples-1000.1.4/results/jointcalling/genomicsDB/temp_0882_of_2000_DB/callset.json; 23:45:47.491 INFO GenomicsDBImport - Complete VCF Header will ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8683:4211,test,test,4211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8683,1,['test'],['test']
Testability,"------------------------------------; 04:59:43.046 INFO ApplyBQSR - HTSJDK Version: 2.23.0; 04:59:43.046 INFO ApplyBQSR - Picard Version: 2.23.3; 04:59:43.046 INFO ApplyBQSR - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 04:59:43.046 INFO ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 04:59:43.046 INFO ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 04:59:43.046 INFO ApplyBQSR - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 04:59:43.046 INFO ApplyBQSR - Deflater: IntelDeflater; 04:59:43.046 INFO ApplyBQSR - Inflater: IntelInflater; 04:59:43.046 INFO ApplyBQSR - GCS max retries/reopens: 20; 04:59:43.046 INFO ApplyBQSR - Requester pays: disabled; 04:59:43.047 INFO ApplyBQSR - Initializing engine; WARNING: BAM index file /scratch/ddo/markedsam/C18-436P.sort.rmdup.bam.bai is older than BAM /scratch/ddo/markedsam/C18-436P.sort.rmdup.bam; 04:59:43.556 INFO ApplyBQSR - Done initializing engine; 04:59:43.592 WARN ApplyBQSR - This tool has only been well tested on ILLUMINA-based sequencing data. For other data use at your own risk.; 04:59:43.592 INFO ProgressMeter - Starting traversal; 04:59:43.592 INFO ProgressMeter - Current Locus Elapsed Minutes Reads Processed Reads/Minute; 04:59:45.014 INFO ApplyBQSR - Shutting down engine; [November 8, 2021 at 4:59:45 a.m. PST] org.broadinstitute.hellbender.tools.walkers.bqsr.ApplyBQSR done. Elapsed time: 0.05 minutes.; Runtime.totalMemory()=557842432; java.lang.IllegalStateException: **The covariates table is missing ReadGroup V300019285_L2_ in RecalTable0**; 	at org.broadinstitute.hellbender.utils.Utils.validate(Utils.java:750); 	at org.broadinstitute.hellbender.utils.recalibration.covariates.ReadGroupCovariate.keyForReadGroup(ReadGroupCovariate.java:81); 	at org.broadinstitute.hellbender.utils.recalibration.covariates.ReadGroupCovariate.recordValues(ReadGroupCovariate.java:53); 	at org.broadinstitute.hellbender.utils.recalibration.covariates.StandardCovariateList.recordAllValuesInStorage(S",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7549:2917,test,tested,2917,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7549,1,['test'],['tested']
Testability,-----------------; 20:08:45.222 INFO DenoiseReadCounts - HTSJDK Version: 2.14.1; 20:08:45.223 INFO DenoiseReadCounts - Picard Version: 2.17.2; 20:08:45.223 INFO DenoiseReadCounts - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 20:08:45.223 INFO DenoiseReadCounts - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 20:08:45.223 INFO DenoiseReadCounts - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 20:08:45.223 INFO DenoiseReadCounts - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 20:08:45.223 INFO DenoiseReadCounts - Deflater: IntelDeflater; 20:08:45.223 INFO DenoiseReadCounts - Inflater: IntelInflater; 20:08:45.223 INFO DenoiseReadCounts - GCS max retries/reopens: 20; 20:08:45.223 INFO DenoiseReadCounts - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 20:08:45.223 INFO DenoiseReadCounts - Initializing engine; 20:08:45.223 INFO DenoiseReadCounts - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 20:08:45.300 INFO DenoiseReadCounts - Reading read-counts file (BT1813.counts.hdf5)...; HDF5-DIAG: Error detected in HDF5 (1.8.14) thread 0:; #000: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5F.c line 604 in H5Fopen(): unable to open file; major: File accessibilty; minor: Unable to open file; #001: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Fint.c line 1085 in H5F_open(): unable to read superblock; major: File accessibilty; minor: Read failed; #002: /mnt/scr1/abyrne/HDFJava-platypus-2.11/native/HDF5-prefix/src/HDF5/src/H5Fsuper.c line 277 in H5F_super_read(): file signature not found; major: File accessibilty; minor: Not an HDF5 file; 20:08:49.800 INFO DenoiseReadCounts - Shutting down engine; [May 1,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7258:3634,log,logger,3634,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7258,1,['log'],['logger']
Testability,"----. ## Bug Report. ### Affected tool(s) or class(es); - Tool/class name(s), special parameters: GenomicsDBImport. ### Affected version(s); - Version: gatk4-4.4.0.0-0. ### Description ; Hello,. I have been having an issue come up when utilizing `GenomicsDBImport`. This issue has happened when using a range of samples and shard counts (8 - 1000 samples, shard count of up to 2000). My current example is an attempt to joint call 1000 samples together. I will submit the jobs and 1-2 of the shards (of the ~100 concurrently running) will throw a `malloc(): unaligned tcache chunk detected`. When I resubmit that shard, it will usually rerun without a problem. Or if I kill all jobs and resubmit, a different shard will throw the malloc error. . I have run approximately 20 tests and I seem to get this failure 2/3 times. However, it only arises on the initial submission and not when additional jobs are submitted as previous shards complete. Please note that the 1000 samples have successfully been imported into the GenomicsDB but this error seems to persist somewhat randomly across multiple machines. . Thank you for your assistance! . #### Steps to reproduce. - Command used (omitting paths to 1000 samples for brevity) for one of the failed shards. ```; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx8g -jar /gpfs/gpfs_de6000/home/dalegre/miniconda3/envs/GOASTv4.0/share/gatk4-4.4.0.0-0/gatk-package-4.4.0.0-local.jar GenomicsDBImport -V [samples 1-1002] --genomicsdb-workspace-path results/jointcalling/genomicsDB/temp_0882_of_2000_DB --merge-input-intervals false --bypass-feature-reader --tmp-dir temp --max-num-intervals-to-import-in-parallel 10 --batch-size 50 --intervals results/germline/interval/temp_0882_of_2000/scattered.interval_list --genomicsdb-shared-posixfs-optimizations true; ```. #### Expected behavior; All shards are imported into the GenomicsDB successfu",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8683:774,test,tests,774,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8683,1,['test'],['tests']
Testability,----. ## Bug Report. ### Affected tool(s) or class(es); GenomicsDBImport. ### Affected version(s); - [X] Latest public release version [4.1.9.0]; - [ ] Latest master branch as of [date of test?]. ### Description ; [TileDB::FileSystem] Error: (write_to_file) Cannot write to file; File opening error; path=/storage/home/data/gendb/chr13/.__7a3cf8dc-ea9d-4bf9-9e33-c87b91d94b0546913384130304_1605025432087/RAW_MQandDP.tdb; errno=122(Disk quota exceede; d); [TileDB::WriteState] Error: Cannot write segment to file.; [TileDB::FileSystem] Error: (write_to_file) Cannot write to file; File opening error; path=/storage/home/data/gendb/chr13/chr13$32310639$32310731/.__7a3cf8dc-ea9d-4bf9-9e33-c87b91d94b0546913384130304_1605025432087/__book_keeping.tdb.gz; errno=122(Disk quota e; xceeded); [TileDB::utils] Error: (write_to_file_after_compression) Could not write compressed bytes to internal buffer; path=/storage/home/data/gendb/chr13/chr13$32310639$32310731/.__7a3cf8dc-ea9d-4bf9-9e33-c87b91d94b0546913384130304_1605025432087/__book_keeping.tdb.gz; ; errno=122(Disk quota exceeded); [TileDB::BookKeeping] Error: Cannot finalize book-keeping; Failure to write to file /storage/home/data/gendb/chr13/chr13$32310639$32310731/.__7a3cf8dc-ea9d-4bf9-9e33-c87b91d94b0546913384130304_1605025432087/__book_keeping.tdb.gz.; [TileDB::FileSystem] Error: (create_file) Failed to create file; path=/storage/home/data/gendb/chr13/chr13$32310639$32310731/__7a3cf8dc-ea9d-4bf9-9e33-c87b91d94b0546913384130304_1605025432087/__tiledb_fragment.tdb; errno=122(Disk quota exceeded); [TileDB::utils] Error: (create_fragment_file) Failed to create fragment file; path=/storage/home/data/gendb/chr13/chr13$32310639$32310731/__7a3cf8dc-ea9d-4bf9-9e33-c87b91d94b0546913384130304_1605025432087; errno=122(Disk quota exceeded); 11:23:52.390 erro NativeGenomicsDB - pid=57964 tid=57984 VariantStorageManagerException exception : Error while finalizing TileDB array chr13$32310639$32310731; TileDB error message : [TileDB::WriteState] ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6950:188,test,test,188,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6950,1,['test'],['test']
Testability,"----. ## Bug Report; Hi GATK team,. I've just been running some variant calling benchmarks on a set of bacterial isolates and I was trying to understand how GATK HaplotypeCaller chooses which reads to use in its analyses. From what I could tell within the code, HaplotypeCaller sets these default read filters:. *line ~336 `HaplotypeCallerEngine.java`*; ```; public static List<ReadFilter> makeStandardHCReadFilters() {; List<ReadFilter> filters = new ArrayList<>();; filters.add(new MappingQualityReadFilter(DEFAULT_READ_QUALITY_FILTER_THRESHOLD));; filters.add(ReadFilterLibrary.MAPPING_QUALITY_AVAILABLE);; filters.add(ReadFilterLibrary.MAPPED);; filters.add(ReadFilterLibrary.NOT_SECONDARY_ALIGNMENT);; filters.add(ReadFilterLibrary.NOT_DUPLICATE);; filters.add(ReadFilterLibrary.PASSES_VENDOR_QUALITY_CHECK);; filters.add(ReadFilterLibrary.NON_ZERO_REFERENCE_LENGTH_ALIGNMENT);; filters.add(ReadFilterLibrary.GOOD_CIGAR);; filters.add(new WellformedReadFilter());. return filters;; }; ```. And the `WellformedReadFilter` includes these filters:; ```; private void createFilter() {; final AlignmentAgreesWithHeaderReadFilter alignmentAgreesWithHeader = new AlignmentAgreesWithHeaderReadFilter(samHeader);. wellFormedFilter = ReadFilterLibrary.VALID_ALIGNMENT_START; .and(ReadFilterLibrary.VALID_ALIGNMENT_END); .and(alignmentAgreesWithHeader); .and(ReadFilterLibrary.HAS_READ_GROUP); .and(ReadFilterLibrary.HAS_MATCHING_BASES_AND_QUALS); .and(ReadFilterLibrary.READLENGTH_EQUALS_CIGARLENGTH); .and(ReadFilterLibrary.SEQ_IS_STORED); .and(ReadFilterLibrary.CIGAR_CONTAINS_NO_N_OPERATOR);; }; ```. These all seem sensible and consistent, but I was finding that when I would apply these filters to the output of other tools like samtools view, I'd get different number of reported reads compared to what seemed to be being discovered within HaplotypeCaller (via adding debug messages). For example, using this SRA sample: https://www.ncbi.nlm.nih.gov/sra/SRR12324251 and mapping the reads against thes",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7873:80,benchmark,benchmarks,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7873,1,['benchmark'],['benchmarks']
Testability,"----. ## Bug Report; Hi, I'm trying the CNV detection pipeline from GATK: https://gatk.broadinstitute.org/hc/en-us/categories/360002310591; However, when running the Determine Germline Contig Ploidy step, I stumble upon this error. Please guide me to solve this problem. ### Affected tool(s) or class(es); ```; gatk DetermineGermlineContigPloidy \; -L /home/nguyen/RB1/RB1.cohort.gc.filtered.interval_list \; --interval-merging-rule OVERLAPPING_ONLY \; -I ... (63 tsv files output from CollectReadCounts); ```. ### Affected version(s); - GATK 4.1.6.1; ### Description ; Full error log:; ```; Traceback (most recent call last):; File ""/tmp/cohort_determine_ploidy_and_depth.380621677219090732.py"", line 119, in <module>; ploidy_task.engage(); File ""/home/nguyen/anaconda3/envs/gatk/lib/python3.6/site-packages/gcnvkernel/tasks/inference_task_base.py"", line 339, in engage; converged_continuous = self._update_continuous_posteriors(); File ""/home/nguyen/anaconda3/envs/gatk/lib/python3.6/site-packages/gcnvkernel/tasks/inference_task_base.py"", line 395, in _update_continuous_posteriors; assert not np.isnan(loss), ""The optimization step for ELBO update returned a NaN""; AssertionError: The optimization step for ELBO update returned a NaN; 11:09:59.446 DEBUG ScriptExecutor - Result: 1; 11:09:59.447 INFO DetermineGermlineContigPloidy - Shutting down engine; [April 28, 2020 11:09:59 AM ICT] org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy done. Elapsed time: 0.17 minutes.; Runtime.totalMemory()=623902720; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /tmp/cohort_determine_ploidy_and_depth.380621677219090732.py --sample_coverage_metadata=/tmp/samples-by-coverage-per-contig8606344533091962323.tsv --output_calls_path=/home/nguyen/Exec/gatk-4.1.6.0/ploidy-calls --mapping_error_rate=1.000000e-02 --psi_s_scale=1.000000e-04 --mean_bias_sd=1.000000e-02 --psi_j_scale=1.000000e-03 --learning_rate=5.0",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6573:581,log,log,581,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6573,1,['log'],['log']
Testability,"----. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_; CombineGVCFs. ### Affected version(s); - [ ] Latest public release version [version?] Yes; - [ ] Latest master branch as of [date of test?] singularity. ### Description ; _Describe the problem below. Provide **screenshots** , **stacktrace** , **logs** where appropriate._; I am trying to combine GVCFs for joint-calllings and I am using the latest singularity release of GATK. #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_; I am trying to run GATK and CombineGVCF failed.; I am using the following code:; singularity exec /fs/scratch/PHS0338/appz/GVCF/gatk_latest.sif \; gatk CombineGVCFs -R /users/PHS0338/jpac1984/data/Autosome.fasta \; --variant PA113.vcf.gz --variant PA113corr.vcf.gz --variant PA112.vcf.gz --variant PA112corr.vcf.gz --variant IN33.vcf.gz\; --variant IN33corr.vcf.gz --variant AL82.vcf.gz \; -O test.vcf.gz; It has all the parameters as mentioned in the website: https://gatk.broadinstitute.org/hc/en-us/articles/360037593911-CombineGVCFs. #### Expected behavior; _Tell us what should happen_; According to the website (https://gatk.broadinstitute.org/hc/en-us/articles/360037593911-CombineGVCFs) about combineGVCF, it should have worked fine without any problems... I got the following error log:. 20:11:34.701 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.2.0.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jun 13, 2021 8:11:35 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 20:11:35.527 INFO CombineGVCFs - ------------------------------------------------------------; 20:11:35.527 INFO CombineGVCFs - The Genome Analysis Toolkit (GATK) v4.2.0.0; 20:11:3",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7311:217,test,test,217,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7311,2,"['log', 'test']","['logs', 'test']"
Testability,"----; User Report; ----. We are also experiencing a problem wherein GATK 4.0.5.1 GenotypeGVCFs processes hang for many hours. . The last thing our processes logged was the same as reported here:; ```; 08:48:23.075 INFO GenotypeGVCFs - Shutting down engine; GENOMICSDB_TIMER,GenomicsDB iterator next() timer,Wall-clock time(s),0.044110324,Cpu time(s),0.026897973000000006; ```. This particular job ran for about 3m before outputting this line, then stayed running (but apparently doing nothing) for 8 hours before we killed it. . It is one of 1996 jobs that all did pretty much exactly the same thing in a similar time frame - in all cases these were the last two lines logged but GATK failed to terminate afterwards. At the same time, we did have about 8k jobs finish successfully and exit 0, so it appears that the rate at which this happens is (at least for our workload) is around 20%. Don't know yet whether or not this behaviour is deterministic. More on that later. . This Issue was generated from your [forums] ; [forums]: https://gatkforums.broadinstitute.org/gatk/discussion/comment/50019#Comment_50019",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4973:157,log,logged,157,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4973,2,['log'],['logged']
Testability,---|---|; | [...s/haplotypecaller/graphs/CommonSuffixSplitter.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvQ29tbW9uU3VmZml4U3BsaXR0ZXIuamF2YQ==) | `91.045% <100%> (+0.136%)` | `21 <0> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4213/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4213#issuecomment-359306361:1913,test,test,1913,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4213#issuecomment-359306361,1,['test'],['test']
Testability,--adamax_beta2=9.990000e-01 --log_emission_samples_per_round=2000 --log_emission_sampling_rounds=100 --log_emission_sampling_median_rel_error=5.000000e-04 --max_advi_iter_first_epoch=1000 --max_advi_iter_subsequent_epochs=1000 --min_training_epochs=20 --max_training_epochs=100 --initial_temperature=2.000000e+00 --num_thermal_advi_iters=5000 --convergence_snr_averaging_window=5000 --convergence_snr_trigger_threshold=1.000000e-01 --convergence_snr_countdown_window=10 --max_calling_iters=1 --caller_update_convergence_threshold=1.000000e-03 --caller_internal_admixing_rate=7.500000e-01 --caller_external_admixing_rate=7.500000e-01 --disable_caller=false --disable_sampler=false --disable_annealing=false --interval_list=/tmp/intervals8430607484736018931.tsv --contig_ploidy_prior_table=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/9-Ref_Interval/3-contig_ploidy_priors/22.contig_ploidy_priors.csv --output_model_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-26-1-Test-gCNV/2-Output/1-Contig-Ploidy/22.Contig_Ploidy_Dir/ploidy-model; 	at org.broadinstitute.hellbender.utils.python.PythonExecutorBase.getScriptException(PythonExecutorBase.java:75); 	at org.broadinstitute.hellbender.utils.runtime.ScriptExecutor.executeCuratedArgs(ScriptExecutor.java:126); 	at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeArgs(PythonScriptExecutor.java:170); 	at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeScript(PythonScriptExecutor.java:151); 	at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeScript(PythonScriptExecutor.java:121); 	at org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy.executeDeterminePloidyAndDepthPythonScript(DetermineGermlineContigPloidy.java:411); 	at org.broadinstitute.hellbender.tools.copynumber.DetermineGermlineContigPloidy.doWork(DetermineGermlineContigPloidy.java:288); 	at org.broadinstitute.hellbender.cmdline.Com,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235:6556,Test,Test-gCNV,6556,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235,1,['Test'],['Test-gCNV']
Testability,--assembly-complexity-reference-mode in AssemblyComplexity.java test missing,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7955:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7955,1,['test'],['test']
Testability,"--convergence_snr_countdown_window=10 --max_calling_iters=10 --caller_update_convergence_threshold=1.000000e-03 --caller_admixing_rate=7.500000e-01 --disable_caller=false --disable_sampler=false --disable_annealing=false; Stdout: 10:35:09.182 INFO cohort_denoising_calling - Loading 4 read counts file(s)...; 10:35:12.176 INFO gcnvkernel.io.io_metadata - Loading germline contig ploidy and global read depth metadata...; sample_names. Stderr: Traceback (most recent call last):; File ""/tmp/wujh/cohort_denoising_calling.7794651839449939395.py"", line 114, in <module>; n_st, sample_names, sample_metadata_collection); File ""/opt/NfsDir/BioDir/Anaconda3/lib/python3.6/site-packages/gcnvkernel/models/model_denoising_calling.py"", line 379, in __init__; sample_metadata_collection, sample_names, self.contig_list); File ""/opt/NfsDir/BioDir/Anaconda3/lib/python3.6/site-packages/gcnvkernel/models/model_denoising_calling.py"", line 586, in _get_baseline_copy_number_and_read_depth; ""Some samples do not have read depth metadata""; AssertionError: Some samples do not have read depth metadata. at org.broadinstitute.hellbender.utils.python.PythonExecutorBase.getScriptException(PythonExecutorBase.java:75); at org.broadinstitute.hellbender.utils.runtime.ScriptExecutor.executeCuratedArgs(ScriptExecutor.java:126); at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeArgs(PythonScriptExecutor.java:170); at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeScript(PythonScriptExecutor.java:151); at org.broadinstitute.hellbender.utils.python.PythonScriptExecutor.executeScript(PythonScriptExecutor.java:121); at org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller.executeGermlineCNVCallerPythonScript(GermlineCNVCaller.java:416); at org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller.doWork(GermlineCNVCaller.java:255); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:136); at org.broadinstitute.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4457:2721,Assert,AssertionError,2721,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4457,1,['Assert'],['AssertionError']
Testability,--read-validation-stringency SILENT --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --bam-partition-size 0 --disable-sequence-dictionary-validation false --add-output-vcf-command-line true --sharded-output false --num-reducers 0 --help false --version false --showHidden false --verbosity INFO --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --gcs-project-for-requester-pays --disable-tool-default-read-filters false. METRICS CLASS	org.broadinstitute.hellbender.utils.read.markduplicates.GATKDuplicationMetrics LIBRARY	UNPAIRED_READS_EXAMINED	READ_PAIRS_EXAMINED	SECONDARY_OR_SUPPLEMENTARY_RDS	UNMAPPED_READS	UNPAIRED_READ_DUPLICATES READ_PAIR_DUPLICATES	READ_PAIR_OPTICAL_DUPLICATES	PERCENT_DUPLICATION ESTIMATED_LIBRARY_SIZE; lib1	173613	53799913	0	7610605	81003	11974162	585768	0.222961	05870713. MarkDuplicates --INPUT /home/test/WGS_pipeline/TEST/output/orig_412.bowtie2.bam --OUTPUT /home/test/WGS_pipeline/TEST/output/orig_412.MarkDuplicates.bam --METRICS_FILE /home/test/WGS_pipeline/TEST/output/orig_412.MarkDuplicates-metrics.txt --MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP 50000 --MAX_FILE_HANDLES_FOR_READ_ENDS_MAP 8000 --SORTING_COLLECTION_SIZE_RATIO 0.25 --TAG_DUPLICATE_SET_MEMBERS false --REMOVE_SEQUENCING_DUPLICATES false --TAGGING_POLICY DontTag --CLEAR_DT true --ADD_PG_TAG_TO_READS true --REMOVE_DUPLICATES false --ASSUME_SORTED false --DUPLICATE_SCORING_STRATEGY SUM_OF_BASE_QUALITIES --PROGRAM_RECORD_ID MarkDup; licates --PROGRAM_GROUP_NAME MarkDuplicates --READ_NAME_REGEX <optimized capture of last three ':' separated fields as numeric values> --OPTICAL_DUPLICATE_PIXEL_DISTANCE 100 --MAX_OPTICAL_DUPLICATE_SET_SIZE 300000 --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help f; alse --version false --showHidden false --USE_JDK_,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427229905:1860,test,test,1860,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4675#issuecomment-427229905,2,"['TEST', 'test']","['TEST', 'test']"
Testability,"-08-16T00:09:07.4061233Z symbol: class VisibleForTesting; 2022-08-16T00:09:07.4061591Z location: class ReadFilter; 2022-08-16T00:09:07.4083439Z src/main/java/org/broadinstitute/hellbender/utils/config/ConfigFactory.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4092135Z src/main/java/org/broadinstitute/hellbender/utils/config/GATKConfig.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4107682Z src/main/java/org/broadinstitute/hellbender/utils/variant/GATKVariantContextUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4116317Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:3: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.4117746Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:4: error: package com.google.common.collect does not exist; 2022-08-16T00:09:07.4124264Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:32: error: cannot find symbol; 2022-08-16T00:09:07.4124816Z private static BiMap<Log.LogLevel, Level> loggingLevelNamespaceMap;; 2022-08-16T00:09:07.4125855Z symbol: class BiMap; 2022-08-16T00:09:07.4126189Z location: class LoggingUtils; 2022-08-16T00:09:07.4126674Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:41: error: cannot find symbol; 2022-08-16T00:09:07.4127264Z private static BiMap<Log.LogLevel, java.util.logging.Level> javaUtilLevelNamespaceMap;; 2022-08-16T00:09:07.4127999Z symbol: class BiMap; 2022-08-16T00:09:07.4128334Z location: class LoggingUtils; 2022-08-16T00:09:07.4137968Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:13: error: package com.google.common.base does not exist; 2022-08-16T00:09:07.4139500Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:14: error: package com.google.common.io does not exist; 2022-08-16T00:09:07.4190745Z src/main/java/org/broadi",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480:13036,Log,LoggingUtils,13036,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242480,1,['Log'],['LoggingUtils']
Testability,"-08-16T22:45:53.8035505Z symbol: class VisibleForTesting; 2022-08-16T22:45:53.8035658Z location: class ReadFilter; 2022-08-16T22:45:53.8087327Z src/main/java/org/broadinstitute/hellbender/utils/config/ConfigFactory.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8103864Z src/main/java/org/broadinstitute/hellbender/utils/config/GATKConfig.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8113680Z src/main/java/org/broadinstitute/hellbender/utils/variant/GATKVariantContextUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.8117654Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:3: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8118430Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:4: error: package com.google.common.collect does not exist; 2022-08-16T22:45:53.8124030Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:32: error: cannot find symbol; 2022-08-16T22:45:53.8124383Z private static BiMap<Log.LogLevel, Level> loggingLevelNamespaceMap;; 2022-08-16T22:45:53.8124657Z symbol: class BiMap; 2022-08-16T22:45:53.8124810Z location: class LoggingUtils; 2022-08-16T22:45:53.8125227Z src/main/java/org/broadinstitute/hellbender/utils/LoggingUtils.java:41: error: cannot find symbol; 2022-08-16T22:45:53.8125528Z private static BiMap<Log.LogLevel, java.util.logging.Level> javaUtilLevelNamespaceMap;; 2022-08-16T22:45:53.8125793Z symbol: class BiMap; 2022-08-16T22:45:53.8126059Z location: class LoggingUtils; 2022-08-16T22:45:53.8134767Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:13: error: package com.google.common.base does not exist; 2022-08-16T22:45:53.8135486Z src/main/java/org/broadinstitute/hellbender/utils/gcs/BucketUtils.java:14: error: package com.google.common.io does not exist; 2022-08-16T22:45:53.8163449Z src/main/java/org/broadi",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:15074,Log,LoggingUtils,15074,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,1,['Log'],['LoggingUtils']
Testability,-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q_c_expectation_mode=hybrid --max_bias_factors=5 --psi_t_scale=1.000000e-03 --log_mean_bias_std=1.000000e-01 --init_ard_rel_unexplained_variance=1.000000e-01 --num_gc_bins=20 --gc_curve_sd=1.000000e+00 --active_class_padding_hybrid_mode=50000 --enable_bias_factors=True --disable_bias_factors_in_active_class=False --p_alt=1.000000e-06 --cnv_coherence_length=1.000000e+04 --max_copy_number=5 --p_active=0.010000 --class_coherence_length=10000.000000 --learning_rate=1.000000e-02 --adamax_beta1=9.000000e-01 --adamax_beta2=9.900000e-01 --log_emission_samples_per_round=50 --log_emission_sampling_rounds=10 --log_emission_sampling_median_rel_error=5.000000e-03 --max_advi_iter_first,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:9041,Test,Test-,9041,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,"-3.8.1 ...; git checkout --quiet refs/tags/3.8-1; GIT NEW branch -->; repository: https://github.com/broadgsa/gatk.git; at the commit: f2ed14489851ff2c00da3dcab9ad0b8f5ccec200; >>> Source unpacked in /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work; >>> Preparing source in /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1 ...; Equivalent maven command; mvn -Dmaven.repo.local=/scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/.m2/repository verify '-Ddisable.shadepackage'; [INFO] Scanning for projects...; [ERROR] [ERROR] Some problems were encountered while processing the POMs:; [FATAL] Non-parseable POM /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml: unexpected character in markup < (position: END_TAG seen ...</artifactId>\n<<... @15:3) @ /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml, line 15, column 3; @ ; [ERROR] The build could not read 1 project -> [Help 1]; [ERROR] ; [ERROR] The project org.broadinstitute.gatk:gatk-aggregator:[unknown-version] (/scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/pom.xml) has 1 error; [ERROR] Non-parseable POM /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml: unexpected character in markup < (position: END_TAG seen ...</artifactId>\n<<... @15:3) @ /scratch/var/tmp/portage/sci-biology/gatk-3.8.1/work/gatk-3.8.1/public/gatk-root/pom.xml, line 15, column 3 -> [Help 2]; [ERROR] ; [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.; [ERROR] Re-run Maven using the -X switch to enable full debug logging.; [ERROR] ; [ERROR] For more information about the errors and possible solutions, please read the following articles:; [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException; [ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/ModelParseException; ```. I cannot say if `git checkout -f` is used, though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4685#issuecomment-383184514:2597,log,logging,2597,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4685#issuecomment-383184514,1,['log'],['logging']
Testability,-40-33/2-Output/1-Contig-Ploidy/14.Contig_Ploidy_Dir/ploidy-calls --output_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q_c_expectation_mode=hybrid --max_bias_factors=5 --psi_t_scale=1.000000e-03 --log_mean_bias_std=1.000000e-01 --init_ard_rel_unexplained_variance=1.000000e-01 --num_gc_bins=20 --gc_curve_sd=1.000000e+00 --active_class_padding_hybrid_mode=50000 --enable_bias_factors=True --disable_bias_factors_in_active_class=False --p_alt=1.000000e-06 --cnv_coherence_length=1.000000e+04 --max_copy_number=5 --p_active=0.010000 --class_coherence_length=10000.000000 --learning_rate=1.000000e-02 --adamax_beta1=9.000000e-01 --adamax_beta2=9.900000e-01 ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:8896,Test,Test-,8896,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,"-4200-ad29-1e3886ea52ad%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|104.20126111111112|; |NIST evalHCsystemhours|0.20587777777777783|; |NIST evalHCwallclockhours|76.10080000000004|; |NIST evalHCwallclockmax|3.949438888888889|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F75625b9d-e48b-4859-803e-58989e3ccf62%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F75625b9d-e48b-4859-803e-58989e3ccf62%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fb91bffd4-8057-453f-a8e2-4767648da91a%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9c49383b-01a9-4bc0-90fa-cde7e1090a47%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1bf5817a-d896-41de-b193-4a53a1264470"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-15 22:38:43.733246263 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:5668,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5668,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-43ee-84f1-262115dcf151%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|93.23600000000005|; |NIST evalHCsystemhours|0.2127972222222222|; |NIST evalHCwallclockhours|62.422702777777786|; |NIST evalHCwallclockmax|3.1571083333333334|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F3238c3ac-5e7c-4130-bb68-26871868b49e%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F3238c3ac-5e7c-4130-bb68-26871868b49e%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2F499d7c71-c488-4bfb-9802-34f6c5696c8d%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F81dbf637-d90c-4111-93b9-9cec426c5a39%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""fca2c322-83ec-454a-a917-deb026411e19"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-18 19:32:11.841209749 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:5681,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5681,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4607-8ff6-97495034807f%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|96.65376666666666|; |NIST evalHCsystemhours|0.17881944444444442|; |NIST evalHCwallclockhours|68.38394444444445|; |NIST evalHCwallclockmax|3.8226138888888888|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2Fd1a60d2b-8100-459a-9b05-72a22afccb4a%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2Fd1a60d2b-8100-459a-9b05-72a22afccb4a%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fe62b142c-c39c-4c1f-9a08-c41a96647879%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Ff7eac327-c59c-43f7-a850-21bc3e0ccf52%2Fcall-CreateHTMLReport%2FcacheCopy%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""16c4f291-72ad-4c1c-9d59-497e046b8c39"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2022-07-12 17:28:58.385003733 UTC"",; ""status"": ""succeeded"",; ""test_input"": {; ""VariantCallingCarrotOrchestrated.CHM_base_file_name"": ""CHM113"",; ""VariantCallingCarrotOrchestrated.CHM_calling_interval_list"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/wgs_calling_regions.hg38.interval_list"",; ""VariantCallin",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672:5683,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5683,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1182703672,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4869-a5d9-98e5a8934db9%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|112.84528333333336|; |NIST evalHCsystemhours|0.8645277777777777|; |NIST evalHCwallclockhours|88.01737777777778|; |NIST evalHCwallclockmax|4.8386555555555555|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F043115ef-b68a-49a3-8272-8352b304c3aa%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F043115ef-b68a-49a3-8272-8352b304c3aa%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fd4de27fe-6aca-42a5-8a9f-6daff7b890e8%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Fba9f32d5-7b46-462c-8d1f-5692eee05534%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""83db9528-9aa0-4963-a382-95c0dc24102d"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-08-21 22:38:12.285896770 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:5674,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5674,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4b7e-9bce-fc2eab77b125%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|103.71990555555556|; |NIST evalHCsystemhours|0.20632500000000004|; |NIST evalHCwallclockhours|76.41897222222222|; |NIST evalHCwallclockmax|4.163391666666667|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F24ad1003-6862-4e29-9d4d-ea8e85bcc78b%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F24ad1003-6862-4e29-9d4d-ea8e85bcc78b%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Faba51ebf-90d5-44fa-8caa-0beb3cf1643b%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F43bcefb2-f38b-413d-9b65-06b489e64af1%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""1097e2ec-85ce-4fa8-b59e-fc82a8ea8bed"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-06-02 17:26:47.096893136 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123:5670,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5670,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8332#issuecomment-1574622123,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-4bcb-996c-85c1233cb91e"",; ""name"": ""HaplotypeCaller DRAGEN WGS1_run_2020-12-03 17:12:22.583536574 UTC"",; ""status"": ""building"",; ""test_input"": {; ""TestWrapper.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""TestWrapper.dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""TestWrapper.dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""TestWrapper.enableBQD"": ""true"",; ""TestWrapper.enableDRAGSTR"": ""true"",; ""TestWrapper.enableDRDQ"": ""true"",; ""TestWrapper.enableFRD"": ""true"",; ""TestWrapper.evalLabel"": ""GATK"",; ""TestWrapper.gatk_docker_override"": ""image_build:gatk|b42606886deb0d0e1cc05a9ac3c2673f75309c67"",; ""TestWrapper.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""TestWrapper.input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""TestWrapper.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""TestWrapper.make_bamout"": ""true"",; ""TestWrapper.make_gvcf"": ""false"",; ""TestWrapper.preemptible"": ""0"",; ""TestWrapper.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.referenceVersion"": ""hg38"",; ""TestWrapper.scattered_calling_intervals_list"": ""gs://dsp-methods-carrot-data/te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:1219,Test,TestWrapper,1219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,1,['Test'],['TestWrapper']
Testability,"-4e20-a8fe-816dc3e652ae%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|100.56416111111112|; |NIST evalHCsystemhours|0.19999166666666665|; |NIST evalHCwallclockhours|74.00048055555555|; |NIST evalHCwallclockmax|4.007605555555555|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F4ffa2353-b1bc-4960-a5a4-96291208a7eb%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F4ffa2353-b1bc-4960-a5a4-96291208a7eb%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2F6b79227b-3ca8-4f5b-96b6-60d57760cc5b%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2F9bc521dc-3c4c-4274-972c-9d1e4be850d5%2Fcall-CreateHTMLReport%2FcacheCopy%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""121a726a-b813-46be-a21e-d744cf8e1212"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-03 15:51:41.295367156 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f3",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590:5683,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5683,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533946590,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-BenchmarkVCFControlSample/Benchmark/06cbfab4-17a7-4415-9118-d0ebbe156bfd/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""84.26158888888888"",; ""CHM evalHCsystemhours"": ""0.19243055555555555"",; ""CHM evalHCwallclockhours"": ""60.242008333333345"",; ""CHM evalHCwallclockmax"": ""3.176513888888889"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-CHMSampleHeadToHead/BenchmarkComparison/a332776f-175a-4595-bdeb-ab62e7f89921/call-BenchmarkVCFTestSample/Benchmark/362a3e75-6a39-4bde-bb79-e6562dc66dd9/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/0e5c32ab-65e6-451f-a04e-6a3f5e7fe5c8/call-EXOME1Sampl",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202:18190,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,18190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1535104202,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"-; // arguments for debugging / developing the haplotype caller; @@ -634,12 +635,11 @@ public class HaplotypeCaller extends ActiveRegionWalker<List<VariantContext>, In; if ( emitReferenceConfidence() ) {; ; if (SCAC.genotypingOutputMode == GenotypingOutputMode.GENOTYPE_GIVEN_ALLELES); - throw new UserException.BadArgumentValue(""ERC/gt_mode"",""you cannot request reference confidence output and Genotyping Giving Alleles at the same time"");; + throw new UserException.BadArgumentValue(""ERC/gt_mode"",""you cannot request reference confidence output and GENOTYPE_GIVEN_ALLELES at the same time"");; ; SCAC.genotypeArgs.STANDARD_CONFIDENCE_FOR_EMITTING = -0.0;; SCAC.genotypeArgs.STANDARD_CONFIDENCE_FOR_CALLING = -0.0;; ; -; // also, we don't need to output several of the annotations; annotationsToExclude.add(""ChromosomeCounts"");; annotationsToExclude.add(""FisherStrand"");; @@ -651,6 +651,9 @@ public class HaplotypeCaller extends ActiveRegionWalker<List<VariantContext>, In; if (!SCAC.annotateAllSitesWithPLs); logger.info(""All sites annotated with PLs forced to true for reference-model confidence output"");; SCAC.annotateAllSitesWithPLs = true;; + } else if ( ! doNotRunPhysicalPhasing ) {; + doNotRunPhysicalPhasing = true;; + logger.info(""Disabling physical phasing, which is supported only for reference-model confidence output"");; }; ; if ( SCAC.AFmodel == AFCalcFactory.Calculation.EXACT_GENERAL_PLOIDY ); @@ -678,7 +681,7 @@ public class HaplotypeCaller extends ActiveRegionWalker<List<VariantContext>, In; if( SCAC.genotypingOutputMode == GenotypingOutputMode.GENOTYPE_GIVEN_ALLELES && consensusMode ); throw new UserException(""HaplotypeCaller cannot be run in both GENOTYPE_GIVEN_ALLELES mode and in consensus mode. Please choose one or the other."");; ; - genotypingEngine = new HaplotypeCallerGenotypingEngine( getToolkit(), SCAC, tryPhysicalPhasing);; + genotypingEngine = new HaplotypeCallerGenotypingEngine( getToolkit(), SCAC, !doNotRunPhysicalPhasing);; // initialize the output VCF hea",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5727#issuecomment-470679237:3128,log,logger,3128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5727#issuecomment-470679237,1,['log'],['logger']
Testability,"-Add tests with an input cram and an output sam, bam, or cram with various intervals; provided to the -L argument, and check that we get the expected reads in the output; for each set of intervals. -Generalize CRAMReferenceIntegrationTest to CRAMSupportIntegrationTest, and centralize; cram test data in the engine package. Resolves #675",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/860:5,test,tests,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/860,2,['test'],"['test', 'tests']"
Testability,"-Added a ""large files"" directory to src/test/resoureces containing files managed; by ""git lfs"" rather than checked directly into the hellbender repository.; Updated setup instructions in README appropriately to reflect new requirement; for git lfs. -Added a bam with ~600,000 reads from chromosomes 20 and 21, as well as ~50000; unmapped reads. -Added a snippet of the b37 reference with all of chromosomes 20 and 21. -Added a DBSNP vcf containing variants overlapping the reads in the bam above.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/839:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/839,1,['test'],['test']
Testability,"-Adds start/end coordinate validation to `SVCallRecord`, checking contigs and positions against the sequence dictionary and their ordering.; -Adds some checks for invalid coordinates in places where `SimpleInterval.expandWithinContig()` can potentially return `null`.; -Addresses an issue where inter-chromosomal records' end positions were incorrectly disallowed from preceding the start position during record collapsing (despite being on a different contig).; -Deletes unused `SVCallRecordWithEvidence`. Includes regression tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7714:527,test,tests,527,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7714,1,['test'],['tests']
Testability,-Can now request arbitrary windows of reference bases for each read in AddContextDataToRead. -Wrote a reference window function for BQSR that retrieves for each read exactly the reference; bases required by the BQSR algorithm. -Comprehensive unit tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/789:247,test,tests,247,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/789,1,['test'],['tests']
Testability,-ERC BP_RESOLUTION mode in HaplotypeCaller needs an integration test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6833:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6833,1,['test'],['test']
Testability,-Fixes broken input in somatic funcotator test; -Removes some unused resource variable defaults; -Adds `set -u` in some tasks,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6506:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6506,1,['test'],['test']
Testability,"-Ported the remaining pieces of the HaplotypeCaller and assembled them; into a runnable tool. Fixed many bugs in our ported code in the process; of doing so. -Extracted a separate ""engine"" that does all the work of the HC and is; separate from the runnable walker. -Added a new walker class, ReadWindowWalker, as a prospective replacement; for active region traversal. -Hooked up the native VECTOR_LOGLESS_CACHING PairHmm to the HaplotypeCaller,; and activated it by default (this speeds up performance by ~3x in my tests).; Also added a fallback mode when AVX is not present.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1567:516,test,tests,516,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1567,1,['test'],['tests']
Testability,"-Prints the current locus, the elapsed time, number of records processed,; and the rate at which records are being processed. -Hooked up for ReadWalkers, VariantWalkers, and IntervalWalkers. -A new command-line arg in GATKTool allows control over the frequency of; progress meter updates. -Tweaked the log4j output format to create more screen space for logger output. Resolves #974 (for alpha purposes)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1037:354,log,logger,354,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1037,1,['log'],['logger']
Testability,"-Published a jbwa snapshot to the Broad artifactory, which we now depend on; via gradle. This snapshot contains builds of the native jbwa code for both; Mac and Linux. -Added utility methods to NativeUtils to load this library at runtime,; and a test proving that it can be loaded successfully. Also switched; to the new NativeUtils methods for loading the PairHMM, and confirmed; that it loads successfully with the HaplotypeCaller in protected. -Included a gradle script to publish a new jbwa snapshot, should it; become necessary, along with instructions on how to do so. Resolves #1838",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1847:246,test,test,246,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1847,1,['test'],['test']
Testability,"-Reduce memory usage of AssemblyRegion traversal by an order of magnitude; by loading the reads for each shard more lazily. -Add a sharding mode that creates one shard per user interval (or per contig,; if there are no explicit intervals), and make it the default for both HaplotypeCaller; and Mutect2. -When determining active regions, only consider loci within the user's intervals (but; still include surrounding reads in the final region). This mimics GATK3.x behavior. -Serve up empty pileup objects for uncovered loci (this also mimics GATK3.x behavior).; The fact that we weren't doing this before was responsible for much of the remaining; difference vs. the GATK 3.x HaplotypeCaller. -Ported GATK 3 PR 1389 (use median rather than the second-best likelihood for the; NON_REF allele). -Ported a change to the ReferenceConfidenceModel from GATK3. -Fixed a bug in ReadLikelihoods that was causing ArrayIndexOutOfBoundsException. -Added special handling of RawMQ to HaplotypeCaller (mirrors the handling of RawMQ; from GenotypeGVCFs). -Added updated concordance test data generated with HaplotypeCaller 3.8-4-g7b0250253f. Resolves #1950; Resolves #3516; Resolves #3517; Resolves #3518; Resolves #3233; Resolves #2848",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3519:1067,test,test,1067,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3519,1,['test'],['test']
Testability,"-Require that the reference dictionary be a superset of the reads dictionary; only when there is at least one CRAM input. -When determining whether a superset relationship exists, do not take extended; attributes (like the sequence MD5) into account; only consider the contig names; and lengths. -Do not require common contigs to occur at the same absolute indices across; dictionaries (but do require that they occur in the same relative order).; Contig indices were an issue for GATK3, but since hellbender relies on contig; names for queries we can afford to disable this annoying check. If we later find; that we need to turn it back on, we can easily do so. -Updated tests appropriately:; -Added test cases showing that extended attributes are ignored when checking; for a superset. ```; -Added test cases for various combinations of the new boolean options; requireSuperset and checkContigIndices. -The existing integration test CRAMSupportIntegrationTest.testWrongRef(); shows that we throw when a CRAM is provided as input with a reference; that does not contain all of its contigs.; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/877:672,test,tests,672,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/877,5,['test'],"['test', 'testWrongRef', 'tests']"
Testability,"-b298-4324-8a8c-9f46f05708b5/call-GermlineCNVCallerCohortMode/shard-12910/inputs/1773956498/P0001010.b37.counts.hdf5 --contig-ploidy-calls contig-ploidy-calls-dir --interval-merging-rule OVERLAPPING_ONLY --output out --output-prefix csi_batch1-4_wes_gcnv_pon --verbosity DEBUG --p-alt 1e-6 --p-active 1e-2 --cnv-coherence-length 10000.0 --class-coherence-length 10000.0 --max-copy-number 5 --max-bias-factors 5 --mapping-error-rate 0.01 --interval-psi-scale 0.001 --sample-psi-scale 0.0001 --depth-correction-tau 10000.0 --log-mean-bias-standard-deviation 0.1 --init-ard-rel-unexplained-variance 0.1 --num-gc-bins 20 --gc-curve-standard-deviation 1.0 --copy-number-posterior-expectation-mode HYBRID --enable-bias-factors true --active-class-padding-hybrid-mode 50000 --learning-rate 0.05 --adamax-beta-1 0.9 --adamax-beta-2 0.99 --log-emission-samples-per-round 50 --log-emission-sampling-median-rel-error 0.005 --log-emission-sampling-rounds 10 --max-advi-iter-first-epoch 5000 --max-advi-iter-subsequent-epochs 100 --min-training-epochs 10 --max-training-epochs 100 --initial-temperature 2.0 --num-thermal-advi-iters 2500 --convergence-snr-averaging-window 500 --convergence-snr-trigger-threshold 0.1 --convergence-snr-countdown-window 10 --max-calling-iters 10 --caller-update-convergence-threshold 0.001 --caller-internal-admixing-rate 0.75 --caller-external-admixing-rate 1.00 --disable-annealing false. [2019-02-22 23:49:20,42] [info] WorkflowManagerActor WorkflowActor-098a389e-b298-4324-8a8c-9f46f05708b5 is in a terminal state: WorkflowFailedState; [2019-02-22 23:50:01,65] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2019-02-22 23:50:02,38] [info] Workflow polling stopped; [2019-02-22 23:50:02,48] [info] Shutting down WorkflowStoreActor - Timeout = 5 seconds; [2019-02-22 23:50:02,49] [info] Shutting down WorkflowLogCopyRouter - Timeout = 5 seconds; [2019-02-22 23:50:02,53] [info] Shutting down JobExecutionTokenDispenser - Timeout = 5 seconds; [2019-02-2",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5714:29847,log,log-emission-sampling-rounds,29847,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5714,1,['log'],['log-emission-sampling-rounds']
Testability,"-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-BenchmarkVCFControlSample/Benchmark/7195c554-534f-43ef-80c2-77bdafa1827f/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""78.10181666666668"",; ""CHM evalHCsystemhours"": ""0.16157500000000005"",; ""CHM evalHCwallclockhours"": ""55.006172222222226"",; ""CHM evalHCwallclockmax"": ""2.8554194444444443"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-CHMSampleHeadToHead/BenchmarkComparison/a1db35b8-cc7b-4019-bdd0-9f423762542e/call-BenchmarkVCFTestSample/Benchmark/5c4f9069-86b3-4d8c-b765-38a67169e4b4/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-baa5-4052-bff9-bd684393ff6c/call-EXOME1SampleHeadToHead/BenchmarkComparison/688ca200-89b9-479b-b701-5fa0b0854778/call-BenchmarkVCFControlSample/Benchmark/59d8f8b1-1323-4e56-a1b1-0b1b2c8f2cc0/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/2a8ce326-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748:17932,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,17932,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7876#issuecomment-1194801748,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,-biology/gatk-9999/work/gatk-9999/build.gradle:143); 22:05:55.985 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	at org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:90); 22:05:55.986 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] 	... 58 more; 22:05:55.986 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] ; 22:05:55.986 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] ; 22:05:55.986 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] BUILD FAILED; 22:05:55.986 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] ; 22:05:55.987 [LIFECYCLE] [org.gradle.internal.buildevents.BuildResultLogger] Total time: 29.153 secs; ```. ```; root# su - portage; portage$ cd /scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/; portage$ git lfs pull --include src/main/resources/large; No default remote. Errors logged to /scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git/lfs/objects/logs/20180420T221032.955218097.log; Use `git lfs logs last` to view the log.; portage$ cat /scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git/lfs/objects/logs/20180420T221032.955218097.log; git-lfs/2.3.4 (GitHub; linux amd64; go 1.10); git version 2.16.3. $ git-lfs pull --include src/main/resources/large; No default remote. No remotes defined. Current time in UTC: ; 2018-04-20 20:10:32. ENV:; LocalWorkingDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999; LocalGitDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git; LocalGitStorageDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git; LocalMediaDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git/lfs/objects; LocalReferenceDir=; TempDir=/scratch/var/tmp/portage/sci-biology/gatk-9999/work/gatk-9999/.git/lfs/tmp; ConcurrentTransfers=3; TusTransfers=false; BasicTransfersOnly=false; SkipDownloadErrors=,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4687:15038,log,logged,15038,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4687,1,['log'],['logged']
Testability,-bug-input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/CEUTrio.20.21.missingIndel.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/chr21.bad.pl.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combined_genotype_gvcf_exception.nocall.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combined_genotype_gvcf_exception.original.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/gvcf.basepairResolution.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/leadingDeletion.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.combined.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.depr.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/testUpdatePGT.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.markedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.noDups.bam.bai; src/test/resources/org/broadinstitute/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:57341,test,test,57341,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `77.083% <0%> (-3.125%)` | `31% <0%> (ø)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.394% <0%> (-3.03%)` | `61% <0%> (-2%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.838% <0%> (-2.703%)` | `36% <0%> (-3%)` | |; | ... and [3 more](https://codecov.io/gh/broadinstitute/gatk/pull/4889/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4889#issuecomment-396706300:3645,test,test,3645,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4889#issuecomment-396706300,1,['test'],['test']
Testability,-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-65.217%)` | `2% <0%> (-7%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-10%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9CYXNlUmVjYWxpYnJhdG9yU3BhcmtTaGFyZGVkLmphdmE=) | `0% <0%> (-22.807%)` | `0% <0%> (-2%)` | |; | [...titute/hellbender/utils/test/MiniClusterUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L01pbmlDbHVzdGVyVXRpbHMuamF2YQ==) | `78.947% <0%> (-10.526%)` | `6% <0%> (-1%)` | |; | [...der/engine/spark/datasources/ReadsSparkSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NvdXJjZS5qYXZh) | `77.083% <0%> (-3.125%)` | `31% <0%> (ø)` | |; | [...adinstitute/hellbender/engine/ReadsDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUmVhZHNEYXRhU291cmNlLmphdmE=) | `89.394% <0%> (-3.03%)` | `61% <0%> (-2%)` | |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `62.838% <0%> (-2.703%)` | `36% <0%> (-3%)` | |; | ... and [3 more](https://codecov.io/gh/broadinstitute/gatk/pull/4904/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4904#issuecomment-398181642:3655,test,test,3655,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4904#issuecomment-398181642,1,['test'],['test']
Testability,-counts-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-no-intervals.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-sample-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-test-targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-test-targets.tsv.idx; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-test-targets-wo-coords.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/homo_sapiens_germline_HMM_priors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/TCGA_T_matrix_autosomal_bad.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/pon-input.tab; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_autosomal_annot.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_class.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_missing_some_annots.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_rcc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_some_missing.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_with_bait_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotyper_agilent_targets_trunc.tsv; src/test/resources/org/broadinstitute/hellbender/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:33903,test,test,33903,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,['test'],['test']
Testability,"-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCalling.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCalling.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCalling.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCalling.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801:2166,Benchmark,BenchmarkComparison,2166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1027191801,4,['Benchmark'],['BenchmarkComparison']
Testability,"-disable-optimizations \; --force-active -O out.vcf \; --reference /path/to/ucsc.hg19.fasta \; --minimum-mapping-quality <value>;; $ gatk --version; ...; The Genome Analysis Toolkit (GATK) v4.2.0.0; HTSJDK Version: 2.24.0; Picard Version: 2.25.0; ```. (I tried this `4.1.4.0`). `--minimum-mapping-quality 1`:; ```bash; chr7	145945238	.	A	G	7534.06	.	AC=2;AF=1.00;AN=2;DP=247;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=58.06;QD=31.52;SOR=1.050	GT:AD:DP:GQ:PL	1/1:0,239:239:99:7548,716,0; ```. `--minimum-mapping-quality 20`:; ```bash; chr7	145945238	.	A	G	267.64	.	AC=1;AF=0.500;AN=2;BaseQRankSum=2.838;DP=14;ExcessHet=3.0103;FS=6.264;MLEAC=1;MLEAF=0.500;MQ=59.06;MQRankSum=0.000;QD=22.30;ReadPosRankSum=2.208;SOR=2.022	GT:AD:DP:GQ:PL	0/1:3,9:12:28:275,0,28; ```. `--minimum-mapping-quality 60`:; ```bash; chr7	145945238	.	A	G	7150.06	.	AC=2;AF=1.00;AN=2;DP=224;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=32.06;SOR=1.008	GT:AD:DP:GQ:PL	1/1:0,223:223:99:7164,668,0. ```. <details>; <summary>test.bam</summary>. ```; @HD	VN:1.6	SO:coordinate; @SQ	SN:chr1	LN:249250621; @SQ	SN:chr2	LN:243199373; @SQ	SN:chr3	LN:198022430; @SQ	SN:chr4	LN:191154276; @SQ	SN:chr5	LN:180915260; @SQ	SN:chr6	LN:171115067; @SQ	SN:chr7	LN:159138663; @SQ	SN:chr8	LN:146364022; @SQ	SN:chr9	LN:141213431; @SQ	SN:chr10	LN:135534747; @SQ	SN:chr11	LN:135006516; @SQ	SN:chr12	LN:133851895; @SQ	SN:chr13	LN:115169878; @SQ	SN:chr14	LN:107349540; @SQ	SN:chr15	LN:102531392; @SQ	SN:chr16	LN:90354753; @SQ	SN:chr17	LN:81195210; @SQ	SN:chr18	LN:78077248; @SQ	SN:chr19	LN:59128983; @SQ	SN:chr20	LN:63025520; @SQ	SN:chr21	LN:48129895; @SQ	SN:chr22	LN:51304566; @SQ	SN:chrX	LN:155270560; @SQ	SN:chrY	LN:59373566; @SQ	SN:chrM	LN:16571; @RG	ID:1	SM:Sample	LB:Sample	PU:na	PL:Illumina; @PG	PN:bwa	ID:bwa	CL:<redacted>; @PG	PN:MarkDuplicates	ID:MarkDuplicates	CL:<redacted>; q0	99	chr7	145945113	3	151M	=	145945249	287	AGAGATATAAGAGGTTGGGGCACGGAAATAAGGGATCGGGGCACAGAGATATAAGAGGCTGGGGCACGGAAATAAGGGATCGGGGCACAGAGATATAAGAGGCTGGGGCA",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7124:1681,test,test,1681,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7124,1,['test'],['test']
Testability,"-insertions_default_quality 45 --deletions_default_quality 45 --low_quality_tail 2 --quantizing_levels 16 --interval_set_rule UNION --interval_padding 0 --bqsrBAQGapOpenPenalty 40.0 --preserve_qscores_less_than 6 --useOriginalQualities false --defaultBaseQualities -1 --runner LOCAL --client_secret client-secrets.json --help false --version false --VERBOSITY INFO --QUIET false; [June 1, 2015 5:51:02 PM EDT] Executing as pgrosu@eofe5 on Linux 2.6.32-358.el6.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_05-b13; Version: Version:version-unknown-SNAPSHOT JdkDeflater; 17:51:02.969 [main] INFO org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow - Initializing engine; 17:51:02.970 [main] INFO org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow - Done initializing engine; 17:51:03.123 [main] INFO org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow - Shutting down engine; [June 1, 2015 5:51:03 PM EDT] org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=1077936128; Exception in thread ""main"" java.lang.NoSuchMethodError: com.google.common.collect.Sets.newConcurrentHashSet()Ljava/util/Set;; at com.google.cloud.dataflow.sdk.options.PipelineOptionsFactory.<clinit>(PipelineOptionsFactory.java:426); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.doWork(DataflowCommandLineProgram.java:77); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:97); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:150); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:71); at org.broadinstitute.hellbender.Main.main(Main.java:86); ```. I don't have a billing-enabled GCS account, so I did this test to see if I could make it run with my `client-secrets.json` file. Any guidance would be appreciated. Thank you,; Paul",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107730499:5787,test,test,5787,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107730499,1,['test'],['test']
Testability,"-local.jar FastaAlternateReferenceMaker -R /g/data/xe2/references/eucalyptus/emel_scott/Emelliodora_CSIROg1_SISH00000000.1.fasta -O consensus_sequences_gatk//CCA0704.fasta.tmp -V pergene_gatk/CCA0704/CCA0704.vcf.gz; 15:43:14.276 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/g/data/xe2/users/stephen-rodgers/latest-gatk/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 03, 2020 3:43:15 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 15:43:15.230 INFO FastaAlternateReferenceMaker - ------------------------------------------------------------; 15:43:15.230 INFO FastaAlternateReferenceMaker - The Genome Analysis Toolkit (GATK) v4.1.4.1; 15:43:15.230 INFO FastaAlternateReferenceMaker - For support and documentation go to https://software.broadinstitute.org/gatk/; 15:43:15.231 INFO FastaAlternateReferenceMaker - Executing as kdm801@gadi-login-01.gadi.nci.org.au on Linux v4.18.0-80.11.2.el8_0.x86_64 amd64; 15:43:15.240 INFO FastaAlternateReferenceMaker - Java runtime: OpenJDK 64-Bit Server VM v13+33; 15:43:15.240 INFO FastaAlternateReferenceMaker - Start Date/Time: 3 February 2020 at 3:43:14 pm AEDT; 15:43:15.240 INFO FastaAlternateReferenceMaker - ------------------------------------------------------------; 15:43:15.240 INFO FastaAlternateReferenceMaker - ------------------------------------------------------------; 15:43:15.241 INFO FastaAlternateReferenceMaker - HTSJDK Version: 2.21.0; 15:43:15.241 INFO FastaAlternateReferenceMaker - Picard Version: 2.21.2; 15:43:15.241 INFO FastaAlternateReferenceMaker - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 15:43:15.241 INFO FastaAlternateReferenceMaker - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 15:43:15.241 INFO FastaAlternateReferenceMaker - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 15:43:15.241 INFO FastaAlternateRefere",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6434:2296,log,login-,2296,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6434,1,['log'],['login-']
Testability,"-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:8633,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8633,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,68,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_evaluation_regions.v1.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/L",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:2142,Benchmark,BenchmarkComparison,2142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability,"-network none broadinstitute/gatk gatk -version. 2022-08-03 20:37:23,349 main ERROR Could not determine local host name java.net.UnknownHostException: de2c81c88ddc: de2c81c88ddc: Temporary failure in name resolution; at java.net.InetAddress.getLocalHost(InetAddress.java:1506); at org.apache.logging.log4j.core.util.NetUtils.getLocalHostname(NetUtils.java:54); at org.apache.logging.log4j.core.LoggerContext.lambda$setConfiguration$0(LoggerContext.java:620); at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660); at org.apache.logging.log4j.core.LoggerContext.setConfiguration(LoggerContext.java:620); at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:699); at org.apache.logging.log4j.core.LoggerContext.reconfigure(LoggerContext.java:716); at org.apache.logging.log4j.core.LoggerContext.start(LoggerContext.java:270); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:155); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:47); at org.apache.logging.log4j.LogManager.getContext(LogManager.java:196); at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:599); at org.broadinstitute.hellbender.utils.Utils.<clinit>(Utils.java:72); at org.broadinstitute.hellbender.Main.<clinit>(Main.java:45); Caused by: java.net.UnknownHostException: de2c81c88ddc: Temporary failure in name resolution; at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method); at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929); at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324); at java.net.InetAddress.getLocalHost(InetAddress.java:1501); ...13 more. The Genome Analysis Toolkit (GATK) v4.2.6.1; HTSJDK Version: 2.24.1; Picard Version: 2.27.1; Using GATK jar /gatk/gatk-package-4.2.6.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_writ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7983:1189,log,logging,1189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7983,1,['log'],['logging']
Testability,"-pays broad-dsde-methods; ; Child Process : java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx4g -Xms4g -jar /gatk/gatk-package-4.1.8.1-local.jar GenomicsDBImport --genomicsdb-workspace-path genomicsdb --batch-size 50 -L chrX:51630606-68003941 --sample-name-map inputs.list --reader-threads 5 -ip 500 --gcs-project-for-requester-pays broad-dsde-methods; ; The above command took approx. 3.5 hrs to run while writing to local mount of ec2 i.e. EBS volume.; The same command took 8+ hrs (still running as of this email) to run while writing to FSx for luster mount. And surprisingly through AWS Batch – EC2 as part of complete batch/pipeline, took 40+ hrs.; ; The files being read by this process are already cached into FSx as we have been using this same FSx for 5+ days now and these jobs already succeeded with 30-40 hrs of runtime.; ; While we were testing the below manual execution, nothing was running from batch or FSx perspective. Only the 2 manual jobs - one for writing it to local (EBS) and other for FSx. The FSx we are using is the scratch system type with 16.8 TB of space, which gives us a total throughput of 3.3 GB/s.; ; Below is the snapshot of batch 1 executions.; ; EBS Mount Run : Took a total of 1 hr in batch 1; ![EBS Mount Run Batch 1](https://user-images.githubusercontent.com/64221390/151032847-b0bfc418-c2c4-4d8f-a95a-ab0fc0b8eeee.png). FSX Mount Run : Took 2 hrs 11 mins in batch 1; ![FSX Run Batch 1](https://user-images.githubusercontent.com/64221390/151032872-2cae5890-ee5f-4122-b077-037ed4c38414.png). But when the “dd” command to test the write speeds for both the file systems, the FSx shows a much greater speed/performance.; ; Command : dd if=/dev/zero of=<Local/FSx>/test.img bs=1G count=5 oflag=dsync; ; Ran to write on local (ec2 EBS mount) :; ; root@6ece7fab91ec:/app# dd if=/dev/zero of=/app/test.img bs=1G count=5 oflag=dsync; 5+0 records in; 5",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7646:1485,test,testing,1485,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7646,1,['test'],['testing']
Testability,"-spark_7002d0551e84ddef0d74adf95dfee104.jar -- PrintVariantsSpark --V gs://hellbender/test/resources/large/gvcfs/gatk3.7_30_ga4f720357.24_sample.21.expected.vcf --output gs://hellbender-test-logs/test/staging/lb_staging/756f43e6-4663-49ce-8a8c-bf717b07a8c7.vcf --sparkMaster yarn; Job [dfac787d-19aa-4296-8078-c033cd9f440d] submitted.; Waiting for job output...; 19:43:09.678 WARN SparkContextFactory - Environment variables HELLBENDER_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY must be set or the GCS hadoop connector will not be configured properly; 19:43:09.837 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/tmp/dfac787d-19aa-4296-8078-c033cd9f440d/gatk-package-4.beta.6-37-g0a135f8-SNAPSHOT-spark_7002d0551e84ddef0d74adf95dfee104.jar!/com/intel/gkl/native/libgkl_compression.so; [November 15, 2017 7:43:09 PM UTC] PrintVariantsSpark --output gs://hellbender-test-logs/test/staging/lb_staging/756f43e6-4663-49ce-8a8c-bf717b07a8c7.vcf --variant gs://hellbender/test/resources/large/gvcfs/gatk3.7_30_ga4f720357.24_sample.21.expected.vcf --sparkMaster yarn --variantShardSize 10000 --variantShardPadding 1000 --shuffle false --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --interval_merging_rule ALL --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --help false --version false --showHidden false --verbosity INFO --QUIET false --use_jdk_deflater false --use_jdk_inflater false --gcs_max_retries 20 --disableToolDefaultReadFilters false; [November 15, 2017 7:43:09 PM UTC] Executing as root@gatk-test-8875b999-b609-4a3f-86ea-973b929fe662-m on Linux 3.16.0-4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_131-8u131-b11-1~bpo8+1-b11; Version: 4.beta.6-37-g0a135f8-SNAPSHOT; 19:43:09.992 INFO PrintVariantsSpark - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 19:43:09.992 INFO PrintVariantsSpark - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 19:",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3840:1920,test,test,1920,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3840,1,['test'],['test']
Testability,-truth.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/exome/eval/gs-calls.vcf.gz; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-average-depth.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-average-fragment-depth.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-fragment-counts.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-base-calls.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-intervals_dups.bed; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-max-of-9.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-min-MQ-30.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12778.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12872.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-no-intervals.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-sample-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-test-targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-test-targets.tsv.idx; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-test-targets-wo-coords.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/homo_sapiens_germline_HMM_priors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/TCGA_T_matrix_autosomal_bad.tsv; src/test/resources/org/broadinstitute/h,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:32825,test,test,32825,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"-x86_64-with-centos-7.5.1804-Core-x86_64-3.6.2-64/tmpyvtzjxzm'; 00:50:23.369 DEBUG ScriptExecutor - Result: 1; 00:50:23.370 INFO GermlineCNVCaller - Shutting down engine; [October 29, 2019 12:50:23 AM EDT] org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller done. Elapsed time: 0.72 minutes.; Runtime.totalMemory()=2335703040; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: ; python exited with 1; Command Line: python /data/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/cohort_denoising_calling.7177495255490777642.py --ploidy_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/1-Contig-Ploidy/14.Contig_Ploidy_Dir/ploidy-calls --output_calls_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-calls --output_tracking_path=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:8215,Test,Test-,8215,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,-|---|---|---|; | [...s/haplotypecaller/graphs/SharedSequenceMerger.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9ncmFwaHMvU2hhcmVkU2VxdWVuY2VNZXJnZXIuamF2YQ==) | `92.105% <100%> (ø)` | `11 <6> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4214/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4214#issuecomment-359307979:1905,test,test,1905,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4214#issuecomment-359307979,1,['test'],['test']
Testability,".	DP=626;ECNT=1;NLOD=88.13;N_ART_LOD=1.78;POP_AF=0.001;P_GERMLINE=-86.27;TLOD=4.57;	GT:AD:AF:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:SA_MAP_AF:SA_POST_PROB	0/0:323,3:0.035:172,3:151,0:41:141,254:60:27:.:.	0/1:264,3:0.038:127,1:137,2:41:124,7.97254e+06:60:27:0.01,0,0.011:0.001247,0.011,0.987; ```. **EDIT**: It appears that the int 7972545 is converted to 7.97254e+06 after I passed the vcf file through a custom filter, so not really a fault of gatk (apologies). Still '7.97254e+06' should be a valid float. Full stack trace:. ```; gatk FilterMutectCalls --variant gatk/TT001T03.snv.vcf.gz --output test.vcf.gz. Using GATK jar /home/db291g/applications/gatk/gatk-4.0.1.0/gatk-package-4.0.1.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -jar /home/db291g/applications/gatk/gatk-4.0.1.0/gatk-package-4.0.1.0-local.jar FilterMutectCalls --variant gatk/TT001T03.snv.vcf.gz --output test.vcf.gz; 10:10:10.424 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/db291g/applications/gatk/gatk-4.0.1.0/gatk-package-4.0.1.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 10:10:10.528 INFO FilterMutectCalls - ------------------------------------------------------------; 10:10:10.528 INFO FilterMutectCalls - The Genome Analysis Toolkit (GATK) v4.0.1.0; 10:10:10.528 INFO FilterMutectCalls - For support and documentation go to https://software.broadinstitute.org/gatk/; 10:10:10.529 INFO FilterMutectCalls - Executing as db291g@login01 on Linux v2.6.32-431.23.3.el6.x86_64 amd64; 10:10:10.529 INFO FilterMutectCalls - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_121-b13; 10:10:10.529 INFO FilterMutectCalls - Start Date/Time: February 7, 2018 10:10:10 AM GMT; 10:10:10.529 INFO FilterMutectCalls - ------------------------------------------------------------; 10:10:10.529 INFO FilterMutectCalls - -----------------------------------------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4363:1542,test,test,1542,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4363,1,['test'],['test']
Testability,. . . and one of the tests is sadistic.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-383357042:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-383357042,1,['test'],['tests']
Testability,". Note I didn't search in all branches, but I figure we can always recommit those files. Also, any index files, etc. should be retained if necessary. CNV team will delete their files, but I'll leave it up to engine and the other teams about how much we want to remove. src/test/resources/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf.idx; src/test/resources/empty.vcf.idx; src/test/resources/exampleFASTA.fasta.fai; src/test/resources/fastaWithoutDict.fasta.fai; src/test/resources/fastaWithoutFai.dict; src/test/resources/hg19micro.dict; src/test/resources/hg19micro.fasta.fai; src/test/resources/hg19mini.dict; src/test/resources/hg19mini.fasta.fai; src/test/resources/Homo_sapiens_assembly19_chr1_1M.dict; src/test/resources/Homo_sapiens_assembly19_chr1_1M.fasta.fai; src/test/resources/Homo_sapiens_assembly19.dbsnp135.chr1_1M.exome_intervals.vcf.idx; src/test/resources/HSA19.dbsnp135.chr1_1M.exome_intervals.modified.vcf.idx; src/test/resources/human_g1k_v37.chr17_1Mb.dict; src/test/resources/human_g1k_v37.chr17_1Mb.fasta.fai; src/test/resources/iupacFASTA.dict; src/test/resources/iupacFASTA.fasta.fai; src/test/resources/joint_calling.chr1_1M.1kg_samples.10samples.noINFO.vcf.idx; src/test/resources/large/1000G.phase3.broad.withGenotypes.chr20.10100000.vcf.idx; src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.cram.bai; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_wor",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:1300,test,test,1300,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,". To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/gatk/hs_err_pid849.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. **RELEVANT FILES**; [hs_err_pid100.log](https://github.com/broadinstitute/gatk/files/6203288/hs_err_pid100.log); [hs_err_pid164.log](https://github.com/broadinstitute/gatk/files/6203289/hs_err_pid164.log); [hs_err_pid274.log](https://github.com/broadinstitute/gatk/files/6203290/hs_err_pid274.log); [hs_err_pid400.log](https://github.com/broadinstitute/gatk/files/6203291/hs_err_pid400.log); [hs_err_pid482.log](https://github.com/broadinstitute/gatk/files/6203292/hs_err_pid482.log); [hs_err_pid711.log](https://github.com/broadinstitute/gatk/files/6203293/hs_err_pid711.log); [hs_err_pid735.log](https://github.com/broadinstitute/gatk/files/6203294/hs_err_pid735.log); [hs_err_pid801.log](https://github.com/broadinstitute/gatk/files/6203295/hs_err_pid801.log); [hs_err_pid825.log](https://github.com/broadinstitute/gatk/files/6203296/hs_err_pid825.log); [hs_err_pid849.log](https://github.com/broadinstitute/gatk/files/6203297/hs_err_pid849.log); [otherFiles.zip](https://github.com/broadinstitute/gatk/files/6203305/otherFiles.zip); [in2510-8.orientationFilter.vcf.txt](https://github.com/broadinstitute/gatk/files/6203356/in2510-8.orientationFilter.vcf.txt); *VCF extension appended with .txt to satisfy GitHub's upload requirements*. #### Expected behavior; Worked on 7 other files generated with the same pipeline. . #### Actual behavior; Unsure why this last one is causing a segfault. The VCF included is not the whole VCF submitted originally. I went cutting out lines from the original until I could isolate it down to a minimal set required to reproduce the crash (I incl",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7162:7019,log,log,7019,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7162,1,['log'],['log']
Testability,. | Test Type | JDK | Job ID | Logs |; | --------- |---- | ------ | ---- |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1151,log,logs,1151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['log'],['logs']
Testability,"... and this leads some users to believe that GATK has frozen (I've seen several such complaints on the forum). I use python `logger` to log INFO/WARN/DEBUG to `stdout` in `gcnvkernel`. At the moment, I do not pass GATK's log verbosity level to `gcnvkernel` (provisions for doing this is already in place -- it's just a one-liner fix to enable it). A simple strategy is to pipe python's stdout to JVM's, regardless of GATK's log level, and delegate the responsibility setting the log level in python scripts to python tool devs.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4629:126,log,logger,126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4629,5,['log'],"['log', 'logger']"
Testability,... so we can use it in testing.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/75:24,test,testing,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/75,1,['test'],['testing']
Testability,"..... . 12:38:08.377 INFO KnownSitesCache - Number of variants read: 60200001; 12:38:09.341 INFO KnownSitesCache - Number of variants read: 60300001; 12:38:10.131 INFO KnownSitesCache - Number of variants read: 60400001; 12:38:10.940 INFO KnownSitesCache - Number of variants read: 60500001; 12:38:11.719 INFO KnownSitesCache - Number of variants read: 60600001; 12:38:12.568 INFO KnownSitesCache - Number of variants read: 60700001; 12:38:13.432 INFO KnownSitesCache - Number of variants read: 60800001; 12:38:14.137 INFO KnownSitesCache - Number of variants read: 60900001; 12:38:14.833 INFO KnownSitesCache - Number of variants read: 61000001; 12:39:23.200 INFO BaseRecalibrationEngine - The covariates being used here: ; 12:39:23.200 INFO BaseRecalibrationEngine - 	ReadGroupCovariate; ```; Based on the time stamps, the observation is that it took 10 min to read the KnowSites.vcf file (about 10GB), for the code which is a filtering and copy operation:. ```java; private static List<GATKVariant> wrapQueryResults(final Iterator<VariantContext> queryResults ) {; final List<GATKVariant> wrappedResults = new ArrayList<>();; long count = 0;; while ( queryResults.hasNext() ) {; if (count++ % 100000 == 0) {; log.info(""Number of variants read: "" + count);; }; wrappedResults.add(VariantContextVariantAdapter.sparkVariantAdapter(queryResults.next()));; }; return wrappedResults;; }. ```; Seems to me this is awfully slow. The vcf file resides on HDFS (with a 100Gbps switch and backed up by a NVMe storage with over 1GBps bandwidth). Assuming we can achieve a persistent 100MBps bandwidth (which IMO is quite modest), it would take 100 sec to fetch the file. Added the overhead, it should take only 2 to 3 minutes to finish this process. If it turns out that IO performance cannot be improved, I have the impression that knownSites file is relatively stable. Would it make sense to convert the KnownSites into an intermediate format which can be read much faster? Or smaller than the 2GB threshold?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4264:1959,log,log,1959,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4264,1,['log'],['log']
Testability,"...and test, naturally. Issue #3735 reports that transient errors can cause the auth server to return ""403 Forbidden"" and, in turn, cause us to fail. This PR attempts to work around this situation by retrying a few times on these errors.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3739:7,test,test,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3739,1,['test'],['test']
Testability,"...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvUHJvZ3Jlc3NNZXRlci5qYXZh) | `91.429% <0%> (+1.429%)` | `24% <0%> (+1%)` | :white_check_mark: |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `75.694% <0%> (+2.083%)` | `36% <0%> (ø)` | :x: |; | [...oadinstitute/hellbender/utils/GenomeLocParser.java](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9HZW5vbWVMb2NQYXJzZXIuamF2YQ==) | `90.083% <0%> (+4.132%)` | `57% <0%> (+2%)` | :white_check_mark: |; | [...ellbender/utils/test/CommandLineProgramTester.java](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0NvbW1hbmRMaW5lUHJvZ3JhbVRlc3Rlci5qYXZh) | `90.476% <0%> (+4.762%)` | `8% <0%> (+1%)` | :white_check_mark: |. ------. [Continue to review full report at Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2423?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/broadinstitute/gatk/pull/2423?src=pr&el=footer). Last update [5211285...cab0d17](https://codecov.io/gh/broadinstitute/gatk/compare/521128573b0d1a01ee60725c2b84e4a4f6a12fa3...cab0d179986f7f7587e0e005a7b8e54d20168a65?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282342687:2435,test,test,2435,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282342687,2,['test'],['test']
Testability,..llbender/tools/genomicsdb/GenomicsDBConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJDb25zdGFudHMuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (ø)` | :arrow_down: |; | [...r/tools/walkers/annotator/ClippingRankSumTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9DbGlwcGluZ1JhbmtTdW1UZXN0LmphdmE=) | `100% <0%> (ø)` | `4% <0%> (ø)` | :arrow_down: |; | [...ender/engine/spark/datasources/ReadsSparkSink.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvZGF0YXNvdXJjZXMvUmVhZHNTcGFya1NpbmsuamF2YQ==) | `77.027% <0%> (+0.676%)` | `33% <0%> (+1%)` | :arrow_up: |; | [...spark/sv/evidence/FindBreakpointEvidenceSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9zdi9ldmlkZW5jZS9GaW5kQnJlYWtwb2ludEV2aWRlbmNlU3BhcmsuamF2YQ==) | `69.485% <0%> (+0.825%)` | `61% <0%> (+1%)` | :arrow_up: |; | [...utils/test/ReadsPreprocessingPipelineTestData.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1JlYWRzUHJlcHJvY2Vzc2luZ1BpcGVsaW5lVGVzdERhdGEuamF2YQ==) | `0.862% <0%> (+0.862%)` | `1% <0%> (+1%)` | :arrow_up: |; | [...ute/hellbender/utils/test/IntegrationTestSpec.java](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0ludGVncmF0aW9uVGVzdFNwZWMuamF2YQ==) | `73.118% <0%> (+1.075%)` | `25% <0%> (ø)` | :arrow_down: |; | ... and [588 more](https://codecov.io/gh/broadinstitute/gatk/pull/4970/diff?src=pr&el=tree-more) | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4970#issuecomment-401503431:3581,test,test,3581,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4970#issuecomment-401503431,2,['test'],['test']
Testability,".00,0.200:0.011,0.053,0.936; chr7 65961067 . CAAA AAAA . base_quality;panel_of_normals;t_lod DP=178;ECNT=1;IN_PON;NLOD=15.64;N_ART_LOD=-8.858e-01;POP_AF=1.000e-03;P_GERMLINE=-1.452e+01;TLOD=3.82 GT:AD:AF:MBQ:MCL:MFRL:MMQ:MPOS:OBAM:OBAMRC:SA_MAP_AF:SA_POST_PROB 0/0:75,9:0.211:20,2:0,0:169,181:60,60:22,12:false:false 0/1:42,12:0.281:26,5:0,0:155,168:60,60:21,21:false:false:0.253,0.00,0.250:0.011,0.068,0.921; chr10 26536222 . GAAA AAAA . artifact_in_normal;base_quality;panel_of_normals DP=385;ECNT=1;IN_PON;NLOD=7.23;N_ART_LOD=2.38;POP_AF=1.000e-03;P_GERMLINE=-3.938e+00;TLOD=7.64 GT:AD:AF:MBQ:MCL:MFRL:MMQ:MPOS:OBAM:OBAMRC:SA_MAP_AF:SA_POST_PROB 0/0:75,18:0.241:14,6:0,0:169,221:60,60:21,18:false:false 0/1:187,45:0.241:19,8:0,0:134,190:60,60:24,17:false:false:0.111,0.00,0.108:9.821e-04,0.663,0.336; chr20 34445260 . GT TT . germline_risk;panel_of_normals DP=55;ECNT=1;IN_PON;NLOD=3.81;N_ART_LOD=-7.874e-01;POP_AF=6.812e-03;P_GERMLINE=-3.466e-01;TLOD=5.80 GT:AD:AF:MBQ:MCL:MFRL:MMQ:MPOS:OBAM:OBAMRC:SA_MAP_AF:SA_POST_PROB 0/0:13,0:0.186:35,0:0,0:265,0:60,0:30,0:false:false 0/1:28,6:0.188:21,19:0,0:161,168:60,60:20,23:false:false:0.263,0.00,0.263:0.010,0.100,0.890; ```. I select these from the callset with; ```; gatk-launch SelectVariants \; 	-V HCC1143-vs-HCC1143_BL-filtered.vcf \; 	-O other_waf_wpon.vcf.gz \; 	-xlSelectType SNP \; 	-xlSelectType INDEL; ```. The original BAMs and resource files from which these calls were made are as follows. Data are to GRCh38. - tumor `gs://shlee-dev/hcc/hcc1143_T_clean.bam` and `gs://shlee-dev/hcc/hcc1143_T_clean.bai`; - normal `gs://shlee-dev/hcc/ hcc1143_N_clean.bam` and `gs://shlee-dev/hcc/ hcc1143_N_clean.bai`; - 39 sample PoN generated with beta.1 jar `gs://knoblett/CreatePONFiles/log/output/pon.vcf.gz` and `gs://knoblett/CreatePONFiles/log/output/pon.vcf.gz.tbi`; - gnomad resource `gs://shlee-workshop/m2/resources-beta/theta_af-only-gnomad_grch38.vcf.gz` and `gs://shlee-workshop/m2/resources-beta/theta_af-only-gnomad_grch38.vcf.gz.tbi`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3506:2875,log,log,2875,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3506,2,['log'],['log']
Testability,".04-b08; 14:25:55.526 INFO Mutect2 - Start Date/Time: October 7, 2021 2:25:55 PM GMT; 14:25:55.526 INFO Mutect2 - ------------------------------------------------------------; 14:25:55.526 INFO Mutect2 - ------------------------------------------------------------; 14:25:55.526 INFO Mutect2 - HTSJDK Version: 2.23.0; 14:25:55.526 INFO Mutect2 - Picard Version: 2.22.8; 14:25:55.526 INFO Mutect2 - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 14:25:55.526 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 14:25:55.527 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 14:25:55.527 INFO Mutect2 - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 14:25:55.527 INFO Mutect2 - Deflater: IntelDeflater; 14:25:55.527 INFO Mutect2 - Inflater: IntelInflater; 14:25:55.527 INFO Mutect2 - GCS max retries/reopens: 20; 14:25:55.527 INFO Mutect2 - Requester pays: disabled; 14:25:55.527 INFO Mutect2 - Initializing engine; 14:25:55.994 INFO FeatureManager - Using codec BEDCodec to read file file:///test.bed; 14:25:56.086 INFO IntervalArgumentCollection - Processing 3896357 bp from intervals; 14:25:56.115 INFO Mutect2 - Shutting down engine; [October 7, 2021 2:25:56 PM GMT] org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2 done. Elapsed time: 0.01 minutes.; Runtime.totalMemory()=2102919168; **java.lang.NullPointerException**; at java.util.ComparableTimSort.countRunAndMakeAscending(ComparableTimSort.java:325); at java.util.ComparableTimSort.sort(ComparableTimSort.java:202); at java.util.Arrays.sort(Arrays.java:1312); at java.util.Arrays.sort(Arrays.java:1506); at java.util.ArrayList.sort(ArrayList.java:1462); at java.util.Collections.sort(Collections.java:143); at org.broadinstitute.hellbender.utils.IntervalUtils.sortAndMergeIntervals(IntervalUtils.java:467); at org.broadinstitute.hellbender.utils.IntervalUtils.getIntervalsWithFlanks(IntervalUtils.java:965); at org.broadinstitute.hellbender.utils.IntervalUtils.getIntervalsWithFlanks(IntervalU",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7496:2914,test,test,2914,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7496,1,['test'],['test']
Testability,".086;DP=21;ExcessHet=3.0103;FS=1.719;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=8.46;ReadPosRankSum=0.475;SOR=0.368 GT:AD:DP:F1R2:F2R1:GQ:PL; 0/1:13,8:21:6,6:7,2:99:185,0,339; 13 32913055 . A G 402.03 . AC=2;AF=1.00;AN=2;DP=15;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=26.80;SOR=1.112 GT:AD:DP:F1R2:F2R1:GQ:PL 1/1:0,15:15:0,12:0,2:45:416,45,0; 13 32915005 . G C 378.02 . AC=2;AF=1.00;AN=2;DP=13;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=29.08;SOR=1.179 GT:AD:DP:F1R2:F2R1:GQ:PL 1/1:0,13:13:0,4:0,9:39:392,39,0; 13 32929232 . A G 168.60 . AC=1;AF=0.500;AN=2;BaseQRankSum=1.335;DP=11;ExcessHet=3.0103;FS=0.000;MLEAC=1;MLEAF=0.500;MQ=60.00;MQRankSum=0.000;QD=15.33;ReadPosRankSum=-1.442;SOR=0.446 GT:AD:DP:F1R2:F2R1:GQ:PL; 0/1:5,6:11:3,3:2,3:99:176,0,121; 13 32929387 . T C 208.98 . AC=2;AF=1.00;AN=2;DP=7;ExcessHet=3.0103;FS=0.000;MLEAC=2;MLEAF=1.00;MQ=60.00;QD=29.85;SOR=1.609 GT:AD:DP:F1R2:F2R1:GQ:PL 1/1:0,7:7:0,2:0,5:21:223,21,0; ```. Execution log:; ```; Using GATK jar /gatk/gatk-package-4.1.1.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /gatk/gatk-package-4.1.1.0-local.jar HaplotypeCaller --input sample.bam --annotation OrientationBiasReadCounts --intervals b37.chr13.bed --reference hs37d5.fa --output sample.vcf.gz; 03:58:32.017 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.1.1.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jan 06, 2023 3:58:33 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 03:58:33.929 INFO HaplotypeCaller - ------------------------------------------------------------; 03:58:33.930 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.1.1.0; 03:58:33.930 INFO HaplotypeCaller - For support and documentation",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8149:8483,log,log,8483,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8149,1,['log'],['log']
Testability,.21.10m-10m100.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.20.10m-10m100.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.21.10m-10m100.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.excluding_sites_after_129.ch20.1m-1m1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.postRecalibrated.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.2inputs.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.indels_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.low_quality_tail_5.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.mismatches_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.quantizing_levels_6.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:19738,test,test,19738,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.43%)` | `58% <0%> (+1%)` | |; | [.../tools/walkers/haplotypecaller/RefVsAnyResult.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2hhcGxvdHlwZWNhbGxlci9SZWZWc0FueVJlc3VsdC5qYXZh) | `100% <0%> (ø)` | `3% <0%> (+1%)` | :arrow_up: |; | [...ools/walkers/annotator/VariantAnnotatorEngine.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy93YWxrZXJzL2Fubm90YXRvci9WYXJpYW50QW5ub3RhdG9yRW5naW5lLmphdmE=) | `91.304% <0%> (ø)` | `70% <0%> (ø)` | :arrow_down: |; | [...line/GATKPlugin/testpluggables/TestAnnotation.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdEFubm90YXRpb24uamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...line/GATKPlugin/testpluggables/TestReadFilter.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL0dBVEtQbHVnaW4vdGVzdHBsdWdnYWJsZXMvVGVzdFJlYWRGaWx0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0% <0%> (?)` | |; | [...nder/tools/funcotator/FuncotatorTestConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JUZXN0Q29uc3RhbnRzLmphdmE=) | `98.333% <0%> (+0.028%)` | `1% <0%> (ø)` | :arrow_down: |; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5566/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnlVbml0VGVzdC5qYXZh) | `98.104% <0%> (+0.055%)` | `30% <0%> (+1%)` | :arrow_up: |; | ... and [11 more](https://codecov.io/gh/broadinstitute/g,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310:3149,test,testpluggables,3149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-452843310,2,"['Test', 'test']","['TestReadFilter', 'testpluggables']"
Testability,".583536574 UTC</summary> <pre lang=""json""> ; {; ""run_id"": ""294dd9eb-5bbd-4756-b71f-479bf9b15d69"",; ""test_id"": ""dfc196dd-c732-4bcb-996c-85c1233cb91e"",; ""name"": ""HaplotypeCaller DRAGEN WGS1_run_2020-12-03 17:12:22.583536574 UTC"",; ""status"": ""building"",; ""test_input"": {; ""TestWrapper.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.interval_list"",; ""TestWrapper.dataset_name"": ""CH1_CHM13_WGS1_downsampled"",; ""TestWrapper.dragstr_params"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.gatk-dragstr-table.txt"",; ""TestWrapper.enableBQD"": ""true"",; ""TestWrapper.enableDRAGSTR"": ""true"",; ""TestWrapper.enableDRDQ"": ""true"",; ""TestWrapper.enableFRD"": ""true"",; ""TestWrapper.evalLabel"": ""GATK"",; ""TestWrapper.gatk_docker_override"": ""image_build:gatk|b42606886deb0d0e1cc05a9ac3c2673f75309c67"",; ""TestWrapper.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""TestWrapper.input_bam"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam"",; ""TestWrapper.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/CHMI_CHMI3_WGS1_downsampled.bam.bai"",; ""TestWrapper.make_bamout"": ""true"",; ""TestWrapper.make_gvcf"": ""false"",; ""TestWrapper.preemptible"": ""0"",; ""TestWrapper.refDict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.refIndex"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""TestWrapper.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""TestWrapper.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""TestWrapper.reference"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta""",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:1095,Test,TestWrapper,1095,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,1,['Test'],['TestWrapper']
Testability,".691 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/cnorman/projects/gatk/build/libs/gatk-package-4.1.7.0-41-g79586b8-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; [Mon Jun 22 16:03:19 EDT 2020] MergeVcfs --INPUT data/calling/my.vcf.gz --INPUT data/calling/b.vcf.gz --OUTPUT out.vcf.gz --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX true --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false; [Mon Jun 22 16:03:19 EDT 2020] Executing as cnorman@WMCEA-78B on Mac OS X 10.13.6 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_111-b14; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.7.0-41-g79586b8-SNAPSHOT; [Mon Jun 22 16:03:19 EDT 2020] picard.vcf.MergeVcfs done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=372244480; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; htsjdk.samtools.SAMException: Cannot read non-existent file: file:///private/tmp/test%20a/data/calling/my.vcf.gz; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:498); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:485); 	at picard.vcf.MergeVcfs.doWork(MergeVcfs.java:177); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); 	at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:25); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); 	at org.broadinstitute.hellbender.Main.main(Main.java:292); ```. @fdchevalier It you're still convinced its not working, can you post a matched set of command line input and output like I did here, and I can try to dig a little deeper ? Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647743321:3705,test,test,3705,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647743321,3,"['assert', 'test']","['assertFileIsReadable', 'test']"
Testability,".7_30_ga4f720357.expected.vcf, 8536) FAILED; java.lang.AssertionError: different sizes 16940 vs 17070; at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertEqualVariants(VariantContextTestUtils.java:173); at org.broadinstitute.hellbender.tools.GatherVcfsIntegrationTest.testBlockGather(GatherVcfsIntegrationTest.java:103); Results: FAILURE (15 tests, 14 successes, 1 failures, 0 skipped); ```. The tool writes a vcf that, when read back in by GATK, appears to have fewer records than it should. The same test does NOT fail if you do ANY of the following:. * Edit `GatherVcfsIntegrationTest.testBlockGather()` to turn on the JDK deflater by changing `.addBooleanArgument(""use_jdk_deflater"", false);` to `.addBooleanArgument(""use_jdk_deflater"", true);`. * Keep the Intel deflater on, but edit `build.gradle` to change `samjdk.compression_level` to 1 or 2. (You'll also need to change the `Assert.assertEquals(System.getProperty(""samjdk.compression_level""), ""5"");` line in `GatherVcfsIntegrationTest.testBlockGather()` accordingly). * Edit the `getVcfsToShard` `DataProvider` in `GatherVcfsIntegrationTest` to change the failing `{LARGE_VCF, 8536}` test case to `{LARGE_VCF, 8535}`. This cuts the number of files that the vcf gets split into in half, and the test passes. * Comment out all but the last test case in the `getVcfsToShard` `DataProvider` in `GatherVcfsIntegrationTest`. This indicates that there is something stateful going on, since the test case does not fail if run in isolation. One additional bit of information: the test fails with the Intel deflater and compression levels 5 and 9, but with compression level 9 GATK is able to read many fewer records from the final output file than it does at compression level 5. As mentioned above, at compression levels 1 or 2 it's able to read all the records correctly. If you manually decompress the output file it appears to have all the correct records in all cases, so it's something wrong with the compression itself.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3117:1367,test,testBlockGather,1367,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3117,6,['test'],"['test', 'testBlockGather']"
Testability,".BwaMemIndex.createIndexImageFromFastaFile(BwaMemIndex.java:196); at org.broadinstitute.hellbender.BwaMemIntegrationTest.loadIndex(BwaMemIntegrationTest.java:49); Running Test: Test method testChimericUnpairedMapping(org.broadinstitute.hellbender.BwaMemIntegrationTest). Gradle suite > Gradle test > org.broadinstitute.hellbender.BwaMemIntegrationTest > testChimericUnpairedMapping SKIPPED; Running Test: Test method testPerfectUnpairedMapping(org.broadinstitute.hellbender.BwaMemIntegrationTest). Gradle suite > Gradle test > org.broadinstitute.hellbender.BwaMemIntegrationTest > testPerfectUnpairedMapping SKIPPED; ```. This test fails because some JAR wasn't built:; ```; Running Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest); Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: No local jar was found, please build one by running. Gradle suite > Gradle test > org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest > testPipeForPicardTools STANDARD_ERROR; No local jar was found, please build one by running; Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err:. Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: /disk-samsung/ports/biology/gatk/work/gatk-4.6.0.0/gradlew localJar. /disk-samsung/ports/biology/gatk/work/gatk-4.6.0.0/gradlew localJar; Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: or. or; Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: export GATK_LOCAL_JAR=<path_to_local_jar>. export GATK_LOCAL_JAR=<path_to_local_jar>; Test: Test method testPipeForPicardTools(org",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8940:3573,test,test,3573,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8940,1,['test'],['test']
Testability,".BwaMemIndex.createReferenceIndex(Native Method); at org.broadinstitute.hellbender.utils.bwa.BwaMemIndex.createIndexImageFromFastaFile(BwaMemIndex.java:227); at org.broadinstitute.hellbender.utils.bwa.BwaMemIndex.createIndexImageFromFastaFile(BwaMemIndex.java:196); at org.broadinstitute.hellbender.BwaMemIntegrationTest.loadIndex(BwaMemIntegrationTest.java:49); Running Test: Test method testChimericUnpairedMapping(org.broadinstitute.hellbender.BwaMemIntegrationTest). Gradle suite > Gradle test > org.broadinstitute.hellbender.BwaMemIntegrationTest > testChimericUnpairedMapping SKIPPED; Running Test: Test method testPerfectUnpairedMapping(org.broadinstitute.hellbender.BwaMemIntegrationTest). Gradle suite > Gradle test > org.broadinstitute.hellbender.BwaMemIntegrationTest > testPerfectUnpairedMapping SKIPPED; ```. This test fails because some JAR wasn't built:; ```; Running Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest); Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: No local jar was found, please build one by running. Gradle suite > Gradle test > org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest > testPipeForPicardTools STANDARD_ERROR; No local jar was found, please build one by running; Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err:. Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: /disk-samsung/ports/biology/gatk/work/gatk-4.6.0.0/gradlew localJar. /disk-samsung/ports/biology/gatk/work/gatk-4.6.0.0/gradlew localJar; Test: Test method testPipeForPicardTools(org.broadinstitute.hellbender.engine.PipelineSupportIntegrationTest) produced standard out/err: or. or; Test: Test method testPipeForPicardTools(org.broadinstitute.hellben",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8940:3361,Test,Test,3361,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8940,3,"['Test', 'test']","['Test', 'testPipeForPicardTools']"
Testability,".CHM_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthLabel"": ""CHM_GRCh38_SYNDIPv20180222"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarro",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:6285,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,6285,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:133); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:83); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); at com.sun.proxy.$Proxy2.stop(Unknown Source); at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.ja,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:2586,test,testing,2586,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,2,['test'],['testing']
Testability,.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); 	at com.sun.proxy.$Proxy2.stop(Unknown Source); 	at o,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2797:2462,Test,TestNGTestClassProcessor,2462,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2797,3,['Test'],['TestNGTestClassProcessor']
Testability,.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); 	at com.sun.proxy.$Proxy2.stop(Unknown Source); 	at o,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:2099,Test,TestNGTestClassProcessor,2099,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestNGTestClassProcessor']
Testability,".Main.main(Main.java:292); ```. ## Cases when the error does not occur; * If I rename `test a` folder in `test-a` as previously said.; * If I copy my current `test a` in the `/tmp/` directory (`/tmp/test a/`). This may suggest that the path length plays a role.; * If I renamed the VCF files (first VCF becomes `a.vcf.gz`, second `b.vcf.gz`) (`gatk MergeVcfs -I data/calling/a.vcf.gz -I data/calling/b.vcf.gz -O out.vcf.gz`).; * If I rename the first VCF file with as many `a` character as characters found in the original filename. (aaaaaaaaaaaaaaaaaa.vcf.gz).; * If I rename the first VCF by replacing all alphabetical character with a (aaaa_aaaa2.aa_a7_1.vcf.gz); * If I introduce random `_` in the file name (aaaa_aaa_aaaa_aaaa.vcf.gz).; * If I rename the first VCF file by removing the first character (`cerc_prod2.SM_V7_1.vcf.gz` -> `erc_prod2.SM_V7_1.vcf.gz`); * If I rename the first VCF file by introducing a letter at the beginning (`cerc_prod2.SM_V7_1.vcf.gz` -> `ccerc_prod2.SM_V7_1.vcf.gz`). It really seems that the combination of the path lengh, white space and particular filename triggers this. I cannot get my head around this. I don't think this is coming from the content of the VCF as it works well in some cases. Let me know if you need me to make other tests. Fred. ----. ## Update. I investigated a little further after thinking about the tests I did. Because modifying the VCF filename did not trigger the issue and because of the presence of `tabix` related modules in the traces, I decided to see if removing `tbi` file will avoid having the error message. And it did!. After recreating the `tbi` file (`tabix data/calling/cerc_prod2.SM_V7_1.vcf.gz`), the error message appeared again. So it does not seem related to malformed index file. However, index file seems part of the problem. After renaming `test a` folder in `test-a` with the old or new index file, I did not get any error (as usual). Here is my tabix version in case:; ```bash; $ tabix -h. Version: 1.10.2; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241:8331,test,tests,8331,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6664#issuecomment-647808241,4,['test'],"['test', 'test-a', 'tests']"
Testability,.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Nati,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748:2975,Test,TestRunner,2975,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748,2,['Test'],['TestRunner']
Testability,.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Nati,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:4666,Test,TestRunner,4666,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestRunner']
Testability,.Reflections.scan(Reflections.java:204); at org.reflections.Reflections.<init>(Reflections.java:129); at com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds.registerGenomicsCoders(DataflowWorkarounds.java:90); at org.broadinstitute.hellbender.tools.dataflow.transforms.InsertSizeMetricsTransformUnitTest.testInsertSizeMetricsTransform(InsertSizeMetricsTransformUnitTest.java:49); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(R,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/609:2027,Test,TestMethodWorker,2027,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/609,1,['Test'],['TestMethodWorker']
Testability,.VariantContextTestUtils.assertVariantContextsAreEqual(VariantContextTestUtils.java:160); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.lambda$testGenomicsDBImporter$0(GenomicsDBImportIntegrationTest.java:82); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest$$Lambda$57/1926180325.accept(Unknown Source); 	at org.broadinstitute.hellbender.utils.test.GenomicsDBTestUtils.assertCondition(GenomicsDBTestUtils.java:51); 	at org.broadinstitute.hellbender.tools.GenomicsDBImportIntegrationTest.testGenomicsDBImporter(GenomicsDBImportIntegrationTest.java:82); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:483); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112); 	at org.testng.TestRunner.privateRun(TestRunner.java:756); 	at org.testng.TestRunner.run(TestRunner.java:610); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218); 	at org.testng.TestNG.runSuites(TestNG.java:,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143:1654,test,testng,1654,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295418143,1,['test'],['testng']
Testability,".alt_bwamem_GRCh38DH.20150826.FIN.exome.cram -O /humgen/gsa-hpprojects/dev/shlee/1kg_GRCh38_exome/test_decram_20171002.bam; ```. Gives the same error at an approximately similar region:; ```; ...; 10:50:54.603 INFO ProgressMeter - chr1:224042054 2.2 11004000 5016945.0; 10:51:04.609 INFO ProgressMeter - chr1:248061327 2.4 11905000 5044206.5; ERROR	2017-10-02 10:51:05	Slice	Reference MD5 mismatch for slice 0:248574592-248771907, AGTGGATGAG...TGTCGGTATG; 10:51:06.940 INFO PrintReads - Shutting down engine; [October 2, 2017 10:51:06 AM EDT] org.broadinstitute.hellbender.tools.PrintReads done. Elapsed time: 2.45 minutes.; Runtime.totalMemory()=5995233280; htsjdk.samtools.cram.CRAMException: Reference sequence MD5 mismatch for slice: sequence id 0, start 248574592, span 197316, expected MD5 cc8ace0545facc11349da783af07a076; 	at htsjdk.samtools.CRAMIterator.nextContainer(CRAMIterator.java:187); 	at htsjdk.samtools.CRAMIterator.hasNext(CRAMIterator.java:261); 	at htsjdk.samtools.SamReader$AssertingIterator.hasNext(SamReader.java:601); 	at org.broadinstitute.hellbender.utils.iterators.SAMRecordToReadIterator.hasNext(SAMRecordToReadIterator.java:24); 	at java.util.Iterator.forEachRemaining(Iterator.java:115); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151); 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174); 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234); 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418); 	at org.broadinstitute.hellbender.engine.ReadWalker.traverse(ReadWalker.java:94); 	at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:779); 	at org.broadinstitute.hellbender.cmdline.CommandLine",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-333560828:1648,Assert,AssertingIterator,1648,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-333560828,1,['Assert'],['AssertingIterator']
Testability,.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1211); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1190); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745). **This is the stack I get when the test completes but fails (note that the expected line count appears to not match the line count of the expected output file in the repo): **. java.lang.AssertionError: line counts expected [2629] but found [507]; 	at org.testng.Assert.fail(Assert.java:94); 	at org.testng.Assert.failNotEquals(Assert.java:496); 	at org.testng.Assert.assertEquals(Assert.java:125); 	at org.testng.Assert.assertEquals(Assert.java:372); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:211); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:190); 	at org.broadinstitute.hellbender.tools.examples.ExampleAssemblyRegionWalkerSparkIntegrationTest.testExampleAssemblyRegionWalker(ExampleAssemblyRegionWalkerSparkIntegrationTest.java:29); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:3219,test,testng,3219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['test'],['testng']
Testability,.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:83); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32); at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93); at com.sun.proxy.$Proxy2.stop(Unknown Source); at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:120); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360); at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54); at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745);,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:3561,Test,TestWorker,3561,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,2,['Test'],['TestWorker']
Testability,.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_bisulfite_test.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test2.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.bam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.cram; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.fasta.fai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test_multiple.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/example_pfFail_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/first5000a.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/originalQuals.chr1.1-1K.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/valid.dict; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/collect_quality_yield_metrics.bam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/collect_qualit,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:13983,test,test,13983,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/example_pfFail_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/first5000a.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/originalQuals.chr1.1-1K.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/add_comments_to_bam.bam; src/test/resources/org/broadinstitute/hellbender/tools/add_comments_to_bam.sam; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.2.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.3.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.4.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.5.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.6.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.7.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.8.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.1.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.2.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.3.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.4.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.5.txt; src/test/resources/org/broadin,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:16654,test,test,16654,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.4379150-4379157.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.20.10m-10m100.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.21.10m-10m100.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.excluding_sites_after_129.ch20.1m-1m1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.postRecalibrated.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.2inputs.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.indels_context_size_4.recal.txt; src/test/resources/org/bro,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:19147,test,test,19147,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.bai; src/test/resources/org/broadinstitute/hellbender/tools/copynumber/allelic/collect-allelic-counts-tumor.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/copynumber/collectfragmentcounts/collect-fragment-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.dict; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/count_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads_sorted.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads_sorted.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/count_variants.blockgz.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/count_variants_withSequenceDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_combined_copy_number.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_combined_read_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_sample_bias_latent.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_sample_read_depth.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_sample_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_combined_copy_number.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_combined_read_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_bias_latent.tsv; src/test/resources/org/broadinstitute/hellbender/tools/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:27063,test,test,27063,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,".bam -O 1983.align.reorder.sorted.makrdup.bqsr.bam -R ~/Tools/hg19.2bit. -------------; 17/10/18 17:35:58 ERROR SparkUncaughtExceptionHandler: Uncaught exception in thread Thread[Executor task launch worker-0,5,main]; java.lang.OutOfMemoryError: Java heap space; 	at htsjdk.samtools.SAMUtils.compressedBasesToBytes(SAMUtils.java:146); 	at htsjdk.samtools.BAMRecord.decodeReadBases(BAMRecord.java:346); 	at htsjdk.samtools.BAMRecord.getReadBases(BAMRecord.java:275); 	at org.broadinstitute.hellbender.utils.read.SAMRecordToGATKReadAdapter.getLength(SAMRecordToGATKReadAdapter.java:222); 	at org.broadinstitute.hellbender.engine.filters.ReadFilterLibrary$MatchingBasesAndQualsReadFilter.test(ReadFilterLibrary.java:64); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.ReadFilter$ReadFilterAnd.test(ReadFilter.java:70); 	at org.broadinstitute.hellbender.engine.filters.WellformedReadFilter.test(WellformedReadFilter.java:77); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.lambda$getReads$e4b35a40$1(GATKSparkTool.java:213); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool$$Lambda$93/2063469002.call(Unknown Source); 	at org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:76); 	at org.apache.spark.api.java.JavaRDD$$anonfun$filter$1.apply(JavaRDD.scala:76); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:463); 	at scala.collection.convert.Wrappers$IteratorWrapper.hasNext(Wrappers.scala:30); 	at java.util.Iterator.forEachRemaining(Iterator.java:115); 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801); 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); 	at java.util.stream.A",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-337554749:1358,test,test,1358,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-337554749,1,['test'],['test']
Testability,.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190); 	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:3984,test,testng,3984,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testng']
Testability,.broadinstitute.hellbender.tools.walkers.filters.VariantFiltrationIntegrationTest.testClusteredSnps(VariantFiltrationIntegrationTest.java:36); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:133); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:83); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62);,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:1911,test,testng,1911,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,1,['test'],['testng']
Testability,".broadinstitute.org/hc/en-us/community/posts/4409429876123--Did-not-inflate-expected-amount-Error). \--. Hi! I'm doing WGS analysis of a pedigree of three individuals using GATK 4.2.0.0. Everything went on well for the first individual. However, in the step of generating gvcf file from bam file, I encountered the error \[htsjdk.samtools.SAMFormatException: Did not inflate expected amount\] in the other two of the individuals. Please help me! Thank you in advance!. a) GATK version used:. GATK 4.2.0.0. b) Exact command used:. java -jar /home/ngs/biosoft/gatk-4.2.0.0/gatk-package-4.2.0.0-local.jar \\ ; ; HaplotypeCaller \\ ; ; \-R /media/ngs/NGS0/Database/RefSeq/Homo\_sapiens\_NCBI\_GRCh38Decoy/Homo\_sapiens/NCBI/GRCh38Decoy/Sequence/WholeGenomeFasta/NewIndex/genome.fa \\ ; ; \-I /media/ngs/BAM5T/WGS\_analysis/Data/9\_BQSRBam/Ped-San-3\_merged\_realigned\_bqsr.bam \\ ; ; \-ERC GVCF \\ ; ; \-O /media/ngs/BAM5T/WGS\_analysis/Data/10\_gvcf/Ped-San-3\_merged\_realigned\_bqsr.g.vcf. c) Entire error log:. 14:14:32.075 INFO NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/home/ngs/biosoft/gatk-4.2.0.0/gatk-package-4.2.0.0-local.jar!/com/intel/gkl/native/libgkl\_compression.so ; ; Nov 01, 2021 2:14:32 PM shaded.cloud\_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine ; ; INFO: Failed to detect whether we are running on Google Compute Engine. ; ; 14:14:32.573 INFO HaplotypeCaller - ------------------------------------------------------------ ; ; 14:14:32.573 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.2.0.0 ; ; 14:14:32.573 INFO HaplotypeCaller - For support and documentation go to [https://software.broadinstitute.org/gatk/](https://software.broadinstitute.org/gatk/) ; ; 14:14:32.573 INFO HaplotypeCaller - Executing as ngs@ngs-linux on Linux v5.8.0-59-generic amd64 ; ; 14:14:32.573 INFO HaplotypeCaller - Java runtime: OpenJDK 64-Bit Server VM v1.8.0\_292-8u292-b10-0ubuntu1~20.04-b10 ; ; 14:14:32.573 INFO HaplotypeCall",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7582:1393,log,log,1393,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7582,1,['log'],['log']
Testability,.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/ambiguityCodes.dict; src/test/resources/org/broadinstitute/hellbender/engine/ambiguityCodes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10000000-10000020.with.unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.snippet_with_unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.snippet_with_unmapped.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/cramtestWrongRef.dict; src/test/resources/org/broadinstitute/hellbender/engine/cramtestWrongRef.fasta.fai; src/test/resources/org/broadinstitute/hellbender/engine/cram_with_bai_index.cram.bai; src/test/resources/org/broadinstitute/hellbender/engine/cram_with_crai_index.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/example_features.bed.idx; src/test/resources/org/broadinstitute/hellbender/engine/example_variants_noSequenceDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/example_variants_withSequenceDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test_gvcf.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test_withSequenceDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/FeatureInput/vcfWithIndex.vcf; src/test/resources/org/broadinstitute/hellbender/engine/FeatureInput/vcfWithIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/FeatureInput/vcfWithOutIndex.vcf; src/test/resources/org/broadinstitute/hellbender/engine/GCSTests/expected_ReadWalkerGCSSupportIntegrationTest_bam_multiple_intervals.bai; src/test/resources/org/broadinstitute/hellbender/engine/GCSTests/expected_ReadWalkerGCSSupportIntegrationTest_bam_multiple_intervals_with_unmapped.b,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:8880,test,test,8880,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,".csv"",; ""NIST controlHCprocesshours"": ""90.94291388888888"",; ""NIST controlHCsystemhours"": ""0.182125"",; ""NIST controlHCwallclockhours"": ""63.56370277777778"",; ""NIST controlHCwallclockmax"": ""3.701625"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9843"",; ""NIST controlindelPrecision"": ""0.9895"",; ""NIST controlsnpF1Score"": ""0.9908"",; ""NIST controlsnpPrecision"": ""0.992"",; ""NIST controlsnpRecall"": ""0.9896"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-BenchmarkVCFControlSample/Benchmark/eaf4d582-e197-4e13-8122-5e1ec22591ae/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""73.06777222222223"",; ""NIST evalHCsystemhours"": ""0.1622555555555555"",; ""NIST evalHCwallclockhours"": ""46.65241388888888"",; ""NIST evalHCwallclockmax"": ""2.7461055555555554"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9843"",; ""NIST evalindelPrecision"": ""0.9895"",; ""NIST evalsnpF1Score"": ""0.9908"",; ""NIST evalsnpPrecision"": ""0.992"",; ""NIST evalsnpRecall"": ""0.9896"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/e372bd14-cd1f-4563-8d8a-abf6b6ca7883/call-NISTSampleHeadToHead/BenchmarkComparison/103cd89c-b177-4a0b-84fc-9553a1f8161f/call-BenchmarkVCFTestSample/Benchmark/87985440-93fa-4a33-ac09-e4cbead32bfb/call-CombineSummaries/summary.csv""; }; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494:14291,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,14291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7723#issuecomment-1069381494,6,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,".executor.memoryOverhead' has been deprecated as of Spark 2.3 and may be removed in the future. Please use the new key 'spark.executor.memoryOverhead' instead.; 19/02/18 16:58:10 INFO org.spark_project.jetty.util.log: Logging initialized @8431ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: jetty-9.3.z-SNAPSHOT, build timestamp: unknown, git hash: unknown; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.Server: Started @8536ms; 19/02/18 16:58:11 INFO org.spark_project.jetty.server.AbstractConnector: Started ServerConnector@45c90a05{HTTP/1.1,[http/1.1]}{0.0.0.0:4040}; 19/02/18 16:58:11 WARN org.apache.spark.scheduler.FairSchedulableBuilder: Fair Scheduler configuration file not found so jobs will be scheduled in FIFO order. To use fair scheduling, configure pools in fairscheduler.xml or set spark.scheduler.allocation.file to a file that contains the configuration.; 19/02/18 16:58:12 INFO org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:8032; 19/02/18 16:58:13 INFO org.apache.hadoop.yarn.client.AHSProxy: Connecting to Application History server at gatk-test-2495f43b-04fc-49e7-aa0a-7108cc876246-m/10.240.0.11:10200; 19/02/18 16:58:15 INFO org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: Submitted application application_1550508751046_0004; WARNING	2019-02-18 16:58:23	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; WARNING	2019-02-18 16:58:23	AsciiLineReader	Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 19/02/18 16:58:25 INFO org.apache.hadoop.mapreduce.lib.input.FileInputFormat: Total input files to process : 1; 19/02/18 16:58:29 ERROR org.apache.spark.scheduler.TaskResultGetter: Exception while getting task result; com.esotericsoftware.kryo.KryoExc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765:5006,test,test-,5006,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-464825765,1,['test'],['test-']
Testability,".getContig(), bin_start, bin_end));; > }; >; > ------------------------------; >; > In src/main/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervals.java; > <https://github.com/broadinstitute/gatk/pull/3597#discussion_r140646304>:; >; > > + // break the intervals up to bins -- the last bin in each interval can be shorter than the others; > + IntervalList bins = new IntervalList(sequenceDictionary);; > + int bin_start, bin_end;; > + Interval new_bin;; > + for(Interval in : intervalList) {; > + bin_start = in.getStart();; > + bin_end = Math.min(bin_start + widthOfBins - 1, in.getEnd());; > + while(bin_start < in.getEnd()) {; > + new_bin = new Interval(in.getContig(), bin_start, bin_end);; > + bins.add(new_bin);; > + bin_start += widthOfBins;; > + bin_end = Math.min(bin_start + widthOfBins - 1, in.getEnd());; > + }; > + }; > +; > + // write the bins into file; >; > I would skip this comment.; > ------------------------------; >; > In src/test/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervalsIntegrationTest.java; > <https://github.com/broadinstitute/gatk/pull/3597#discussion_r140646311>:; >; > > + // printOutputFile(outputFile);; > +; > + // read the bins from the output file; > + IntervalList binsFromFile = IntervalList.fromFile(outputFile);; > +; > + // we expect the following result; > + IntervalList binsExpected = new IntervalList(binsFromFile.getHeader().getSequenceDictionary());; > + String contig = binsFromFile.iterator().next().getContig();; > + binsExpected.add(new Interval(contig, 1, 10000));; > + binsExpected.add(new Interval(contig, 10001, 20000));; > + binsExpected.add(new Interval(contig, 20001, 20500));; > +; > + // compare the file contents to the expected result; > + Assert.assertEquals(binsFromFile, binsExpected);; > + }; > +; >; > extra whitespace line; > ------------------------------; >; > In src/test/java/org/broadinstitute/hellbender/tools/copynumber/; > CreateBinningIntervalsIntegrationTest.ja",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3597#issuecomment-331744211:12840,test,test,12840,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3597#issuecomment-331744211,1,['test'],['test']
Testability,.google.cloud.storage.StorageOptions$Builder.build(StorageOptions.java:77); 	at com.google.cloud.storage.StorageOptions.getDefaultInstance(StorageOptions.java:121); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.initStorage(CloudStorageFileSystemProvider.java:153); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.getPath(CloudStorageFileSystemProvider.java:208); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.getPath(CloudStorageFileSystemProvider.java:85); 	at java.nio.file.Paths.get(Paths.java:143); 	at org.broadinstitute.hellbender.utils.gcs.BucketUtilsTest.testNoIllegalArgumentException(BucketUtilsTest.java:38); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2707:1608,test,testng,1608,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2707,1,['test'],['testng']
Testability,".gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.CHM_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/chm.full.m38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.twist_exome.interval_list"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthLabel"": ""NA12878_GRCh38_TWISTExome"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA1287",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:6696,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,6696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,76,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,.hellbender.tools.dataflow.pipelines.BaseRecalibratorDataflowIntegrationTest.testBQSRBucket(BaseRecalibratorDataflowIntegrationTest.java:176); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/866:1696,test,testng,1696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/866,1,['test'],['testng']
Testability,.high_confidence.hg38.vcf.gz --known-sites /data/reference/gatk_resource/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz -O PAAD11N.recal_data.test.table; Using GATK jar /data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx8G -Djava.io.tmpdir=/data/xieduo/Łuksza_2022_Nature -jar /data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar BaseRecalibrator -R /data/reference/gatk_resource/Homo_sapiens_assembly38.fasta -I /data/xieduo/Immun_genomics/data/Łuksza_2022_Nature/bam/PAAD11N.bam --known-sites /data/xieduo/WES_pipe/pipeline/gatk_resource/dbsnp_146.hg38.vcf.gz --known-sites /data/reference/gatk_resource/1000G_phase1.snps.high_confidence.hg38.vcf.gz --known-sites /data/reference/gatk_resource/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz -O PAAD11N.recal_data.test.table; 13:36:33.528 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; 13:36:33.547 WARN NativeLibraryLoader - Unable to load libgkl_compression.so from native/libgkl_compression.so (No such file or directory); 13:36:33.550 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/data/xieduo/WES_pipe/pipeline/bin/gatk-4.2.6.1/gatk-package-4.2.6.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; 13:36:33.551 WARN NativeLibraryLoader - Unable to load libgkl_compression.so from native/libgkl_compression.so (No such file or directory); 13:36:33.669 INFO BaseRecalibrator - ------------------------------------------------------------; 13:36:33.670 INFO BaseRecalibrator - The Genome Analysis Toolkit (GATK) v4.2.6.1; 13:36:33.670 INFO BaseRecalibrator - For support and documentation go to https://software.broadinstitute.org/gatk/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8005#issuecomment-1254561081:6438,test,test,6438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8005#issuecomment-1254561081,1,['test'],['test']
Testability,.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.go,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1403,test,test-logs,1403,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['test'],['test-logs']
Testability,.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.12/tests/test/index.html) |; | variantcalling | openjdk8 | [33752.4](https://travis-ci.com/broadinstitute/gatk/jobs/498538890) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.4/tests/test/index.html) |; | unit | openjdk8 | [33752.3](https://travis-ci.com/broadinstitute/gatk/jobs/498538889) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.3/tests/test/index.html) |; | conda | openjdk8 | [33752.5](https://travis-ci.com/broadinstitute/gatk/jobs/498538891) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.5/tests/test/index.html) |; | integration | openjdk8 | [33752.2](https://travis-ci.com/broadinstitute/gatk/jobs/498538888) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.2/tests/test/index.html) |; | cloud | openjdk11 | [33752.14](https://travis-ci.com/broadinstitute/gatk/jobs/498538900) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.14/tests/test/index.html) |; | cloud | openjdk8 | [33752.1](https://travis-ci.com/broadinstitute/gatk/jobs/498538887) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.1/tests/test/index.html) |; | unit | openjdk11 | [33752.13](https://travis-ci.com/broadinstitute/gatk/jobs/498538899) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/master_33752.13/tests/test/index.html) |; | integration | openjdk11 | [33752.12](https://travis-ci.com/broadinstitute/gatk/jobs/498538898) | [logs](https://s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234:1608,test,test-logs,1608,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7203#issuecomment-819750234,1,['test'],['test-logs']
Testability,.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/IntervalTest.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.copy.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDeletionRestrictToStartExpected.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.haploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.tetraploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotationsNoGroup.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotations.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBasepairResolutionInput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleHaploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleTetraploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipl,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:50286,test,test,50286,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotations.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBasepairResolutionInput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleHaploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleTetraploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testWrongReferenceBaseBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testClusteredSnps.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testDeletions.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilter1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilter2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringDPfromFORMATAndFailMissing.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:51585,test,test,51585,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleHaploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleTetraploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testWrongReferenceBaseBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testClusteredSnps.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testDeletions.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilter1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilter2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringDPfromFORMATAndFailMissing.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringDPfromFORMAT.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringDPfromINFO.vcf.idx; src/test/resources,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:51791,test,test,51791,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilterWithSeparateNames.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testGenotypeFilters1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testGenotypeFilters2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertFilter.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertGenotypeFilterExpression.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertJexlFilter.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertJexlGenotypeFilterExpression.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMask1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMask2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMask3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMaskReversed.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testNoAction.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testSetFilteredGtoNocall.vcf.idx; src/test/resources/org/broadinstitute/hellbender/t,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:53911,test,test,53911,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:773); 	at org.testng.TestRunner.run(TestRunner.java:623); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); 	at org.testng.SuiteRunner.run(SuiteRunner.java:259); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); 	at org.testng.TestNG.run(TestNG.java:1018); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.ja,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:5140,test,testng,5140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['test'],['testng']
Testability,.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDi,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6745:3134,test,testng,3134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6745,2,['test'],['testng']
Testability,.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:3155,test,testng,3155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testng']
Testability,.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: java.lang.RuntimeExceptio,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/866:1878,test,testng,1878,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/866,1,['test'],['testng']
Testability,.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:133); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:83); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.gradle.messaging.dispatch.Refle,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:2093,test,testng,2093,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,2,['test'],['testng']
Testability,".invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140). Jul 01, 2015 2:33:37 PM org.reflecti",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/609:2460,test,testng,2460,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/609,1,['test'],['testng']
Testability,.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6745:2962,test,testng,2962,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6745,2,['test'],['testng']
Testability,.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253:2983,test,testng,2983,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6652#issuecomment-672024253,1,['test'],['testng']
Testability,.java:117); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSpark.runTool(HaplotypeCallerSpark.java:118); 	at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:546); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:31); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190); 	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMetho,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:3332,test,testutils,3332,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testutils']
Testability,.java:180); 	at org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImportIntegrationTest.testCommandIncludedInOutputHeader(GenomicsDBImportIntegrationTest.java:422); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: com.intel.genomicsdb.GenomicsDBException: Could not load genomicsdb native library; 	at com.intel.genomicsdb.GenomicsDBImporter.<clinit>(GenomicsDBImporter.java:72); 	... 37 more; ```. if you dig into it more you get down to the foll,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4062:2242,Test,TestRunner,2242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4062,1,['Test'],['TestRunner']
Testability,".java:306). real 481m24.418s; user 581m54.752s; sys 2m49.965s. ```. This run did not complete successfully - the Exception caused it to fail prematurely. . Previously I had seen HaplotypeCaller run out of memory and fail in almost as much time, so I think this and the OOM error are related. The only difference in invocation was that with the OOM failure, I was running with the default for `--max-reads-per-alignment-start` (`50`). This also works just fine with that setting at 15. The failure seems to occur around the same place in the data each time (the end of `chr13`). At that point in the data, there is a very large pileup which is probably instigating this. Additionally, if I remove the `--linked-de-bruijn-graph` argument, this runs just fine with the default setting of `--max-reads-per-alignment-start`. I have a minimally reproductive dataset that I can share which reproduces the OOM error for sure (I'm 99% sure it reproduces this one as well). For the OOM failures, the final logs from HaplotypeCaller look like this:. ```; ./gatk HaplotypeCaller ...; ...; 15:56:23.205 INFO ProgressMeter - Pf3D7_13_v3:2603234 100.5 114070 1134.5; 15:56:33.443 INFO ProgressMeter - Pf3D7_13_v3:2661462 100.7 114420 1136.1; Dangling End recovery killed because of a loop (getReferencePathForwardFromKmer); 15:56:43.998 INFO ProgressMeter - Pf3D7_13_v3:2730055 100.9 114840 1138.3; 15:56:59.911 INFO ProgressMeter - Pf3D7_13_v3:2798281 101.2 115210 1139.0; 15:59:27.062 INFO ProgressMeter - Pf3D7_13_v3:2861780 103.6 115460 1114.4; Dangling End recovery killed because of a loop (getReferencePathForwardFromKmer); Dangling End recovery killed because of a loop (getReferencePathForwardFromKmer); 15:59:37.457 INFO ProgressMeter - Pf3D7_13_v3:2869697 103.8 115500 1112.9. real 671m24.770s; user 777m30.923s; sys 6m13.682s. $ echo $?; 247; ```. Here is my command-line invocation:; ```; ./gatk --java-options ""-Xmx100000m -Xms25000m"" \; HaplotypeCaller \; -R /juffowup2/malaria/references/PlasmoDB-61_",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8440:5050,log,logs,5050,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8440,1,['log'],['logs']
Testability,".java:36); at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:16); at htsjdk.samtools.util.AbstractAsyncWriter$WriterRunnable.run(AbstractAsyncWriter.java:117); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.ClassNotFoundException: org.xerial.snappy.LoadSnappy; at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); ... 11 more. We can find snappy-java in <INST_DIR>/build/install/gatk/lib/snappy-java-1.1.1.7.jar, but it does not have a LoadSnappy class. Renaming the snappy-java jar file so gatk cannot find it allows FastqToSam to run through. ---. @akiezun commented on [Thu Jun 30 2016](https://github.com/broadinstitute/gatk-protected/issues/587#issuecomment-229843043). thanks for the report. Can you provide the whole commandline you used?. ---. @huangk3 commented on [Thu Sep 15 2016](https://github.com/broadinstitute/gatk-protected/issues/587#issuecomment-247467619). Hi @akiezun I experience the same error when running gate-launch FastqToSam. My command line is:; ""./gatk_launch FastqToSam -SM ""test"" -F1 $fq1 -F2 $fq2 -O test.spark.sam -SO coordinate -R $ref --STRIP_UNPAIRED_MATE_NUMBER true --VALIDATION_STRINGENCY LENIENT -PL ILLUMINA --CREATE_INDEX true"". My Spark version is 2.0.0; Thanks!. ---. @lbergelson commented on [Mon Sep 19 2016](https://github.com/broadinstitute/gatk-protected/issues/587#issuecomment-248086238). @huangk3 Unfortunately Adam moved on to a different job so he's longer working on GATK. . I believe this is the same problem as https://github.com/broadinstitute/gatk/issues/2026 and has been patched in gatk public with https://github.com/broadinstitute/gatk/pull/2028. You might try using FastqToSam in the public repo, or wait and try a new version of protected that incorporates an updated gatk public (coming soon..)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2868:2780,test,test,2780,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2868,2,['test'],['test']
Testability,.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: java.lang.RuntimeException: java.lang.NoSuchMethodError: com.google.common.base.Stopwatch.createStarted()Lcom/google/common/base/Stopwatch;; at com.google.cloud.dataflow.sdk.Pipeline.run(Pipeline.java:166); at o,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/866:2064,test,testng,2064,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/866,1,['test'],['testng']
Testability,.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:133); at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:83); at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); at org.gradle.messaging.dispatch.ContextClas,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:2279,test,testng,2279,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,2,['test'],['testng']
Testability,".java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:659); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:771); at org.testng.TestRunner.run(TestRunner.java:621); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199); at org.testng.TestNG.runSuitesLocally(TestNG.java:1124); at org.testng.TestNG.run(TestNG.java:1032); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140). Jul 01, 2015 2:33:37 PM org.reflections.Reflections scan; ```. The fact that it doesn't show up for some users means its likely to be an environmental difference, possibly an underspecified dependency. @davidaadams I under",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/609:2646,test,testng,2646,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/609,1,['test'],['testng']
Testability,.java:467); at java.net.URLClassLoader.access$100(URLClassLoader.java:73); at java.net.URLClassLoader$1.run(URLClassLoader.java:368); at java.net.URLClassLoader$1.run(URLClassLoader.java:362); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:361); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349); at java.lang.ClassLoader.loadClass(ClassLoader.java:411); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.decodeCacheFiles(PluginRegistry.java:181); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.loadFromMainClassLoader(PluginRegistry.java:119); at org.apache.logging.log4j.core.config.plugins.util.PluginManager.collectPlugins(PluginManager.java:132); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:131); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:112); at org.apache.logging.log4j.core.layout.PatternLayout.createPatternParser(PatternLayout.java:220); at org.apache.logging.log4j.core.layout.PatternLayout.<init>(PatternLayout.java:138); at org.apache.logging.log4j.core.layout.PatternLayout.<init>(PatternLayout.java:57); at org.apache.logging.log4j.core.layout.PatternLayout$Builder.build(PatternLayout.java:446); at org.apache.logging.log4j.core.config.AbstractConfiguration.setToDefault(AbstractConfiguration.java:518); at org.apache.logging.log4j.core.config.DefaultConfiguration.<init>(DefaultConfiguration.java:49); at org.apache.logging.log4j.core.LoggerContext.<init>(LoggerContext.java:75); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.createContext(ClassLoaderContextSelector.java:171); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.locateContext(ClassLoaderContextSelector.java:145); at org.apache.logging.log4j.core.selector,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5126:3698,log,logging,3698,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126,1,['log'],['logging']
Testability,.java:496); 	at org.testng.Assert.assertEquals(Assert.java:125); 	at org.testng.Assert.assertEquals(Assert.java:372); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:211); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:190); 	at org.broadinstitute.hellbender.tools.examples.ExampleAssemblyRegionWalkerSparkIntegrationTest.testExampleAssemblyRegionWalker(ExampleAssemblyRegionWalkerSparkIntegrationTest.java:29); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:773); 	at org.testng.TestRunner.run(TestRunner.java:623); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); 	at org.testng.SuiteRunner.run(SuiteRunner.java:259); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); 	at org.testng.TestNG.run(TestNG.java:1018); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClas,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:4294,test,testng,4294,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['test'],['testng']
Testability,.java:546); 	at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:31); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:192); 	at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); 	at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149); 	at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190); 	at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); 	at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:107); 	at org.broadinstitute.hellbender.tools.HaplotypeCallerSparkIntegrationTest.testNonStrictVCFModeIsConsistentWithPastResults(HaplotypeCallerSparkIntegrationTest.java:110); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:3494,test,testNonStrictVCFModeIsConsistentWithPastResults,3494,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['test'],['testNonStrictVCFModeIsConsistentWithPastResults']
Testability,".jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. **RELEVANT FILES**; [hs_err_pid100.log](https://github.com/broadinstitute/gatk/files/6203288/hs_err_pid100.log); [hs_err_pid164.log](https://github.com/broadinstitute/gatk/files/6203289/hs_err_pid164.log); [hs_err_pid274.log](https://github.com/broadinstitute/gatk/files/6203290/hs_err_pid274.log); [hs_err_pid400.log](https://github.com/broadinstitute/gatk/files/6203291/hs_err_pid400.log); [hs_err_pid482.log](https://github.com/broadinstitute/gatk/files/6203292/hs_err_pid482.log); [hs_err_pid711.log](https://github.com/broadinstitute/gatk/files/6203293/hs_err_pid711.log); [hs_err_pid735.log](https://github.com/broadinstitute/gatk/files/6203294/hs_err_pid735.log); [hs_err_pid801.log](https://github.com/broadinstitute/gatk/files/6203295/hs_err_pid801.log); [hs_err_pid825.log](https://github.com/broadinstitute/gatk/files/6203296/hs_err_pid825.log); [hs_err_pid849.log](https://github.com/broadinstitute/gatk/files/6203297/hs_err_pid849.log); [otherFiles.zip](https://github.com/broadinstitute/gatk/files/6203305/otherFiles.zip); [in2510-8.orientationFilter.vcf.txt](https://github.com/broadinstitute/gatk/files/6203356/in2510-8.orientationFilter.vcf.txt); *VCF extension appended with .txt to satisfy GitHub's upload requirements*. #### Expected behavior; Worked on 7 other files generated with the same pipeline. . #### Actual behavior; Unsure why this last one is causing a segfault. The VCF included is not the whole VCF submitted originally. I went cutting out lines from the original until I could isolate it down to a minimal set required to reproduce the crash (I included all of the crash logs generated in case it can help). I was expecting to find a single line or maybe two that were required to reproduce this issue, but that range appears to be needed. Eliminating either the first or last line from the range will make the program work agai",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7162:7298,log,log,7298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7162,1,['log'],['log']
Testability,.lang.ClassLoader.loadClass(ClassLoader.java:411); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.decodeCacheFiles(PluginRegistry.java:181); at org.apache.logging.log4j.core.config.plugins.util.PluginRegistry.loadFromMainClassLoader(PluginRegistry.java:119); at org.apache.logging.log4j.core.config.plugins.util.PluginManager.collectPlugins(PluginManager.java:132); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:131); at org.apache.logging.log4j.core.pattern.PatternParser.<init>(PatternParser.java:112); at org.apache.logging.log4j.core.layout.PatternLayout.createPatternParser(PatternLayout.java:220); at org.apache.logging.log4j.core.layout.PatternLayout.<init>(PatternLayout.java:138); at org.apache.logging.log4j.core.layout.PatternLayout.<init>(PatternLayout.java:57); at org.apache.logging.log4j.core.layout.PatternLayout$Builder.build(PatternLayout.java:446); at org.apache.logging.log4j.core.config.AbstractConfiguration.setToDefault(AbstractConfiguration.java:518); at org.apache.logging.log4j.core.config.DefaultConfiguration.<init>(DefaultConfiguration.java:49); at org.apache.logging.log4j.core.LoggerContext.<init>(LoggerContext.java:75); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.createContext(ClassLoaderContextSelector.java:171); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.locateContext(ClassLoaderContextSelector.java:145); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:70); at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:57); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:140); at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41); at org.apache.logging.log4j.LogManager.getContext(LogManag,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5126:4148,log,logging,4148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5126,1,['log'],['logging']
Testability,".lifecycle.materialization.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:156); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:612); 	at akka.actor.ActorCell.invoke(ActorCell.scala:581); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:268); 	at akka.dispatch.Mailbox.run(Mailbox.scala:229); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:241); 	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2019-10-01 02:53:03,81] [info] WorkflowManagerActor WorkflowActor-c55a06f3-abc1-4db1-8e0f-ea0303caab2c is in a terminal state: WorkflowFailedState; [2019-10-01 02:53:07,42] [info] Not triggering log of token queue status. Effective log interval = None; [2019-10-01 02:53:08,41] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; [2019-10-01 02:53:12,32] [info] Workflow polling stopped; [2019-10-01 02:53:12,33] [info] 0 workflows released by cromid-876ccf5; [2019-10-01 02:53:12,34] [info] Shutting down WorkflowStoreActor - Timeout = 5 seconds; [2019-10-01 02:53:12,34] [info] Shutting down WorkflowLogCopyRouter - Timeout = 5 seconds; [2019-10-01 02:53:12,34] [info] Shutting down JobExecutionTokenDispenser - Timeout = 5 seconds; [2019-10-01 02:53:12,34] [info] Aborting all running workflows.; [2019-10-01 02:53:12,34] [info] JobExecutionTokenDispenser stopped; [2019-10-01 02:53:12,35] [info] WorkflowStoreActor stopped; [2019-10-01 02:53:12,35] [info] WorkflowLogCopyRouter stopped; [2019-10-01 02:53:12,35] [info] Shutting down WorkflowManagerActor - Timeout = 3600 seconds; [2019-10-01 02:53:12,35] [info] WorkflowManagerActor All workflows finished; [2019-10-01 02:53:12,35] [info] WorkflowManagerActor stopped; [2019-10-01 02:53:12,65] [info] Connectio",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6189:9142,log,log,9142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6189,1,['log'],['log']
Testability,".max=512m,spark.yarn.executor.memoryOverhead=600,spark.executor.cores=2,spark.executor.instances=2. Running:; gcloud dataproc jobs submit spark --cluster droazen-test-cluster --properties spark.driver.userClassPathFirst=true,spark.io.compression.codec=lzf,spark.driver.maxResultSize=0,spark.executor.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 ,spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 ,spark.kryoserializer.buffer.max=512m,spark.yarn.executor.memoryOverhead=600,spark.executor.cores=2,spark.executor.instances=2 --jar /Users/droazen/src/hellbender/build/libs/gatk-package-4.beta.6-54-g0ee99da-SNAPSHOT-spark.jar -- CountReadsSpark -I gs://hellbender/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --sparkMaster yarn; Job [acdae2af-e0ce-4822-87f5-dcd165d85cf4] submitted.; Waiting for job output...; 20:39:42.869 WARN SparkContextFactory - Environment variables HELLBENDER_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY must be set or the GCS hadoop connector will not be configured properly; 20:39:43.053 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/tmp/acdae2af-e0ce-4822-87f5-dcd165d85cf4/gatk-package-4.beta.6-54-g0ee99da-SNAPSHOT-spark.jar!/com/intel/gkl/native/libgkl_compression.so; [November 27, 2017 8:39:43 PM UTC] CountReadsSpark --input gs://hellbender/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --sparkMaster yarn --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --interval_merging_rule ALL --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --help fal",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-347320994:2422,test,test,2422,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-347320994,1,['test'],['test']
Testability,.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:37); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:34); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:138); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:346); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:161); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:355); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:32); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42); 	at org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:25); 	at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35); 	at org.mockito.internal.MockitoCore.mock(MockitoCore.java:51); 	at org.mockito.Mockito.mock(Mockito.java:1798); 	at org.mockito.Mockito.mock(Mockito.java:1711); 	at org.broadinstitute.hellbender.utils.iterators.AllLocusIteratorUnitTest.testIteratorReturnsPileupsForAllLociData(AllLocusIteratorUnitTest.java:23); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:55); 	at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(Metho,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836:2301,mock,mockito,2301,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836,1,['mock'],['mockito']
Testability,.ofThisVm(ClassFileVersion.java:147); 	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction.run(ClassInjector.java:301); 	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection$Dispatcher$CreationAction.run(ClassInjector.java:290); 	at java.base/java.security.AccessController.doPrivileged(Native Method); 	at net.bytebuddy.dynamic.loading.ClassInjector$UsingReflection.<clinit>(ClassInjector.java:70); 	at net.bytebuddy.dynamic.loading.ClassLoadingStrategy$Default$InjectionDispatcher.load(ClassLoadingStrategy.java:184); 	at net.bytebuddy.dynamic.TypeResolutionStrategy$Passive.initialize(TypeResolutionStrategy.java:79); 	at net.bytebuddy.dynamic.DynamicType$Default$Unloaded.load(DynamicType.java:4456); 	at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(SubclassBytecodeGenerator.java:115); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:37); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:34); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:138); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:346); 	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:161); 	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:355); 	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:32); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71); 	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42); 	at org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:25); 	at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35); 	at org.mockito.internal.MockitoCore.mock(MockitoCore.java:51); 	at,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836:1425,mock,mockito,1425,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532377836,1,['mock'],['mockito']
Testability,.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.bai; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.bam; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.tmp; src/test/resources/org/broadinstitute/hellbender/tools/FixCallSetSampleOrdering/badlySorted1000-batch-size13.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.fasta; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr22_27M_37M.tiny.bam; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr22_27M_37M.tiny.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr3_1K_11K.tiny.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/testHeaderContigLineSorting1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/testHeaderContigLineSorting2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.3.8-4-g7b0250253f.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.alleleSpecific.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.alleleSpecific.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:36767,test,test,36767,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.piece.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.4379150-4379157.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.20.10m-10m100.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.21.10m-10m100.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.excluding_sites_after_129.ch20.1m-1m1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.postRecalibrated.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.2inputs.recal.txt; src/test/resources/org/broadinstitute/hellbender/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:19024,test,test,19024,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.indels_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.low_quality_tail_5.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.mismatches_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.quantizing_levels_6.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq-1.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq6.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate_allaligned.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.sharded.bam/part-r-00001.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.dict; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.chr17_69k_7,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:20964,test,test,20964,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,".ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_out",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4190,benchmark,benchmarking,4190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,".ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_out",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4190,benchmark,benchmarking,4190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,".ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"": ""test_output:FunctionalEquivalenceTest.out_dataset"",; ""GatkDragenConcordanceEvaluation",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4293,benchmark,benchmarking,4293,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,".reflect.Method.invoke(Method.java:497); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); ```. #### Steps to reproduce; These are the arguments I used (the input bam is on the file system):. ```; final String[] args = {; ""-I"", ""/humgen/gsa-hpprojects/dev/mshand/SpecOps/Mitochondria/Filtering/IGV/198489_vs_811158/sorted.mt.1.bam"",; ""-"" + M2ArgumentCollection.TUMOR_SAMPLE_SHORT_NAME, ""198489"",; ""-R"", ""/humgen/gsa-hpprojects/dev/mshand/SpecOps/Mitochondria/MitochondriaOnlyFastas/Homo_sapiens_assembly38.mt_only.fasta"",; ""-O"", outputVcf.getAbsolutePath(),; ""--max-reads-per-alignment-start"", ""0"",; ""-default-af"", ""0"",; ""--initial-tumor-lod"", ""0"",; ""--tumor-lod-to-emit"", ""0"",; ""--min-pruning"", ""10"",; ""--annotation"", ""StrandBiasBySample"",; //""--ignore-itr-a",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5036:4396,Test,TestNG,4396,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5036,1,['Test'],['TestNG']
Testability,.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.j,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2797:2177,Test,TestNG,2177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2797,3,['Test'],['TestNG']
Testability,.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1814,Test,TestNG,1814,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestNG']
Testability,".reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: com.intel.genomicsdb.GenomicsDBException: Could not load genomicsdb native library; 	at com.intel.genomicsdb.GenomicsDBImporter.<clinit>(GenomicsDBImporter.java:72); 	... 37 more; ```. if you dig into it more you get down to the following error:; ```; /private/var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/libtiledbgenomicsdb6159269479234619546.dylib: dlopen(/private/var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/libtiledbgenomicsdb6159269479234619546.dylib, 1): ; Library not loaded: /opt/local/lib/libuuid.16.dylib; Referenced from: /private/var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/libtiledbgenomicsdb6159269479234619546.dylib; Reason: image",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4062:2668,Test,TestNG,2668,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4062,1,['Test'],['TestNG']
Testability,".samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:36); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:16); 	at htsjdk.samtools.util.AbstractAsyncWriter$WriterRunnable.run(AbstractAsyncWriter.java:124); 	at java.lang.Thread.run(Thread.java:748); Caused by: htsjdk.samtools.SAMException: Exception creating BAM index for record i 1/2 76b aligned read.; 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:119); 	at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:139); 	... 5 more; Caused by: htsjdk.samtools.SAMException: IOException in BinaryBAMIndexWriter reference 0; 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:151); 	at htsjdk.samtools.BAMIndexer.advanceToReference(BAMIndexer.java:138); 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:115); 	... 6 more; Caused by: java.nio.channels.ClosedByInterruptException; 	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202); 	at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:216); 	at java.nio.channels.Channels.writeFullyImpl(Channels.java:78); 	at java.nio.channels.Channels.writeFully(Channels.java:101); 	at java.nio.channels.Channels.access$000(Channels.java:61); 	at java.nio.channels.Channels$1.write(Channels.java:174); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:149); 	... 8 more; ```. One of the logs is here: https://storage.googleapis.com/hellbender-test-logs/build_reports/12617.7/tests/test/index.html. We saw a whole host of those cigar validation errors you're seeing when we updated htsdjk the last time, it's a new validation that wasn't previously checked in htsjdk, so a lot of the test files had errors in them that no one had ever noticed/bothered fixing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977:2001,log,logs,2001,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977,5,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,".samuel.k@gmail.com>; Date: Fri Dec 8 00:55:14 2017 -0500. updated somatic PoNs for PreprocessIntervals drop Ns. commit cff64984d9fb42364001bda4c73d54cf68d85a5c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:37:24 2017 -0500. sudo travis yml. commit 89025941febd2089d426cfa1e0f0aa6a6712e2a9; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Fri Dec 8 00:23:22 2017 -0500. travis/Docker config update (g++-6, Miniconda3); python test group assignment. commit 31f96398106c2b8577b8c25d110abea3ebe7f836; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:44:53 2017 -0500. WDL test bugfix. commit 9b2fb820536ec355bea0256471bd093d547f5c99; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:20:36 2017 -0500. update WDL test JSON files. commit e3d97644d1a2c40a5c364a96f8b67246154179c9; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:18:14 2017 -0500. assertions in inference task base; removed a ASCII > 128 character in log messages. commit 526cf92e623a3bbd5f9d375132b6ca046fc47620; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 20:03:04 2017 -0500. redirect tqdm progress bar to python logger. commit 2e45bd30968b921fae225de3901fb97ece690b0c; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 19:45:49 2017 -0500. more arg related fixes. commit bb89a3bb338d88199881e8aca65f656f2acd7c0a; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 19:41:20 2017 -0500. arg related bugfixes in WDL, python, and java CLIs. commit 23569787ee2c8cc6c9227a44170cbbd02fe4427f; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 17:21:05 2017 -0500. fixed issue with python boolean argparse (they use weird semantics). commit ae841c9ed4cd9b2ca1ac0e9082d175ff8ea98298; Author: Mehrtash Babadi <mehrtash@broadinstitute.org>; Date: Thu Dec 7 16:44:02 2017 -0500. shorter gCNV WDL tests. commit 5466b806e36df16cad2d045be074e7f",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598:4739,assert,assertions,4739,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-354805598,4,"['assert', 'log']","['assertions', 'log']"
Testability,".setPosition(SAMRecordToGATKReadAdapter.java:89); at org.broadinstitute.hellbender.utils.clipping.ClippingOp.applyHARDCLIP_BASES(ClippingOp.java:381); at org.broadinstitute.hellbender.utils.clipping.ClippingOp.apply(ClippingOp.java:73); at org.broadinstitute.hellbender.utils.clipping.ReadClipper.clipRead(ReadClipper.java:147); at org.broadinstitute.hellbender.utils.clipping.ReadClipper.clipRead(ReadClipper.java:128); at org.broadinstitute.hellbender.utils.clipping.ReadClipper.hardClipSoftClippedBases(ReadClipper.java:332); at org.broadinstitute.hellbender.utils.clipping.ReadClipper.hardClipSoftClippedBases(ReadClipper.java:335); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.finalizeRegion(AssemblyBasedCallerUtils.java:84); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.assembleReads(AssemblyBasedCallerUtils.java:238); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:478); at org.broadinstitute.hellbender.tools.HaplotypeCallerSpark.lambda$regionToVariants$580(HaplotypeCallerSpark.java:203) ; ```. At first glance this looks like a problem with unmapped reads, but these are filtered out by the tool. So it's more likely to be in the clipping logic. It's hard to diagnose since it doesn't say which read caused it, and it's slow to reproduce as it is running on a large input. Any thoughts @lbergelson, @droazen?. ---. @lbergelson commented on [Sat May 27 2017](https://github.com/broadinstitute/gatk-protected/issues/1091#issuecomment-304466112). @tomwhite Is it possible you could upload the bam file somewhere on google cloud along with the command line you used? It's not obvious to me where the error is being caused. It's painful to debug anything on a 160GB file, but I think we can probably do a binary search on the file and find the bad location pretty quickly. I.e. throw compute at the problem instead of human time...",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3013:1632,log,logic,1632,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3013,1,['log'],['logic']
Testability,.sites.1M-10M.vcf.idx; src/test/resources/large/VQSR/dbsnp_132_b37.leftAligned.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/expected/snpRecal.scattered.vcf.idx; src/test/resources/large/VQSR/expected/snpSampledRecal.vcf.idx; src/test/resources/large/VQSR/indelRecal.vcf.idx; src/test/resources/large/VQSR/Omni25_sites_1525_samples.b37.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf.idx; src/test/resources/large/VQSR/sites_r27_nr.b37_fwd.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/snpRecal.vcf.idx; src/test/resources/NA12878.chr17_69k_70k.dictFix.bam.bai; src/test/resources/NA12878.chr17_69k_70k.dictFix.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/ambiguityCodes.dict; src/test/resources/org/broadinstitute/hellbender/engine/ambiguityCodes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10000000-10000020.with.unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.snippet_with_unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.snippet_with_unmapped.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/cramtestWrongRef.dict; src/test/resources/org/broadinstitute/hellbender/engine/cramtestWrongRef.fasta.fai; src/test/resources/org/broadinstitute/hellbender/engine/cram_with_bai_index.cram.bai; src/test/resources/org/broadinstitute/hellbender/engine/cram_with_crai_index.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/example_features.bed.idx; src/test/resources/org/broadinstitute/hellbender/engine/example_variants_noSequenceDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/example_variants_withSequenceDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test_gvcf.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/feature_data_source_test.vcf,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:8225,test,test,8225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,".snappy' to force htsjdk to fallback to pure java. Longer term solution likely involves patches to htsjdk and possibly snappy itself. ```; ./gatk-launch SplitNCigarReads -I src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -O out.bam -R src/test/resources/large/human_g1k_v37.20.21.fasta. Running:; /Users/louisb/Workspace/gatk/build/install/gatk/bin/gatk SplitNCigarReads -I src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -O out.bam -R src/test/resources/large/human_g1k_v37.20.21.fasta; 15:31:00.516 INFO IntelGKLUtils - Trying to load Intel GKL library from:; jar:file:/Users/louisb/Workspace/gatk/build/install/gatk/lib/gkl-0.1.2.jar!/com/intel/gkl/native/libIntelGKL.dylib; 15:31:00.552 INFO IntelGKLUtils - Intel GKL library loaded from classpath.; [July 20, 2016 3:31:00 PM EDT] org.broadinstitute.hellbender.tools.walkers.rnaseq.SplitNCigarReads --output out.bam --input src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam --reference src/test/resources/large/human_g1k_v37.20.21.fasta --refactor_NDN_cigar_string false --maxReadsInMemory 150000 --maxMismatchesInOverhang 1 --maxBasesInOverhang 40 --doNotFixOverhangs false --disable_all_read_filters false --interval_set_rule UNION --interval_padding 0 --readValidationStringency SILENT --secondsBetweenProgressUpdates 10.0 --disableSequenceDictionaryValidation false --createOutputBamIndex true --createOutputBamMD5 false --addOutputSAMProgramRecord true --help false --version false --verbosity INFO --QUIET false --use_jdk_deflater false; [July 20, 2016 3:31:00 PM EDT] Executing as louisb@wm1b0-8ab on Mac OS X 10.10.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_91-b14; Version: Version:4.alpha.1-217-g3ff51ed-SNAPSHOT; 15:31:00.557 INFO SplitNCigarReads - Defaults.BUFFER_SIZE : 131072; 15:31:00.557 INFO SplitNCigarReads - Defaults.COMPRESSION_LEVEL : 1; 15:31:00.557 INFO SplitNCigarReads - Defaults.CREATE_INDEX : false; 15:31:00.557 INFO SplitNCigarReads - Defaults.CREATE_MD5 : fal",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2026:1155,test,test,1155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2026,1,['test'],['test']
Testability,.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1211); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1190); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745). **This is the stack I get when the test completes but fails (note that the expected line count appears to not match the line count of the expected output file in the repo): **. java.lang.AssertionError: line counts expected [2629] but found [507]; 	at org.testng.Assert.fail(Assert.java:94); 	at org.testng.Assert.failNotEquals(Assert.java:496); 	at org.testng.Assert.assertEquals(Assert.java:125); 	at org.testng.Assert.assertEquals(Assert.java:372); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:211); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:190); 	at org.broadinstitute.hellbender.tools.examples.ExampleAssemblyRegionWalkerSparkIntegrationTest.testExampleAssemblyRegionWalker(ExampleAssemblyRegionWalkerSparkIntegrationTest.java:29); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:3226,Assert,Assert,3226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['Assert'],['Assert']
Testability,.splitNcigarReads.doNotFixOverhangs.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxBasesInOverhang5.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxMismatchesInOverhang0.bai; src/test/resources/large/gencode.v19.LargeFile.gtf.idx; src/test/resources/large/gencode.v26.primary_assembly.annotation.XYZ.gtf.idx; src/test/resources/large/gvcfs/CEUTrio.20.21.gatk3.4.g.vcf.idx; src/test/resources/large/gvcfs/combined.gatk3.7_30_ga4f720357.g.vcf.gz.tbi; src/test/resources/large/gvcfs/combined.gatk3.7.g.vcf.gz.tbi; src/test/resources/large/gvcfs/gatk3.7_30_ga4f720357.24_sample.21.g.vcf.idx; src/test/resources/large/gvcfs/HG00096.g.vcf.gz.tbi; src/test/resources/large/gvcfs/HG00268.g.vcf.gz.tbi; src/test/resources/large/gvcfs/NA19625.g.vcf.gz.tbi; src/test/resources/large/Homo_sapiens_assembly38.20.21.dict; src/test/resources/large/Homo_sapiens_assembly38.20.21.fasta.fai; src/test/resources/large/human_g1k_v37.20.21.fasta.amb; src/test/resources/large/human_g1k_v37.20.21.fasta.ann; src/test/resources/large/human_g1k_v37.20.21.fasta.bwt; src/test/resources/large/human_g1k_v37.20.21.fasta.pac; src/test/resources/large/human_g1k_v37.20.21.fasta.sa; src/test/resources/large/K-562.duplicateMarked.chr20.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor.bam.bai; src/test/resources/large/NA12878.RNAseq.bai; src/test/resources/large/SVIntegrationTest.bam.bai; src/test/resources/large/very-small-gnomad.vcf.idx; src/test/resources/large/VQSR/ALL.wgs.indels_mills_devine_hg19_leftAligned_collapsed_double_hit.sites.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/combined.phase1.c,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:6213,test,test,6213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:103); 	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:827); 	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:65); 	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98); 	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:94); 	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:512); 	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:104); 	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:512); 	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:31); 	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267); 	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263); 	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:31); 	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:31); 	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:488); 	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:94); 	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:81); 	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:79); 	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:133); 	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:856); 	at org.apache.spark.sql.DataFrameWriter,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8587:5725,log,logical,5725,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8587,2,['log'],['logical']
Testability,".stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/LCR_Hg38.interval_list"",; ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/HCR_hg38.bed""; ],; ""TestWrapper.stratLabels"": [; ""LCR"",; ""HCR""; ],; ""TestWrapper.truthLabel"": ""chm"",; ""TestWrapper.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz"",; ""TestWrapper.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/chm.full.m38.vcf.gz.tbi"",; ""TestWrapper.vcfScoreField"": ""QUAL""; },; ""eval_input"": {; ""PlotROC.dataset_name"": ""CHMI_CHMI3_WGS1_downsampled"",; ""PlotROC.sample1_indel_HCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_HCR"",; ""PlotROC.sample1_indel_LCR_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_LCR"",; ""PlotROC.sample1_indel_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample1_snp_HCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_HCR"",; ""PlotROC.sample1_snp_LCR_roc_table"": ""test_output:TestWrapper.snp_roc_table_LCR"",; ""PlotROC.sample1_snp_roc_table"": ""test_output:TestWrapper.nonsnp_roc_table_all"",; ""PlotROC.sample2_indel_HCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_HCR_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_indel_LCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_LCR_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_indel_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_vcfeval_non_snp_roc.tsv.gz"",; ""PlotROC.sample2_snp_HCR_roc_table"": ""gs://dsp-methods-carrot-data/test_data/Dragen_GATK_Concordance/cached_dragen_sample_data/CHMI_CHMI3_WGS1_downsampled_DRAGEN_dragen_chm_HCR_vcfeval_snp_roc.tsv.gz"",; ""PlotROC.sample2_snp_LCR_roc_table"": ""gs://dsp-me",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120:3319,Test,TestWrapper,3319,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6986#issuecomment-738147120,2,['Test'],['TestWrapper']
Testability,.testExclusionListOverridesManualDefaultAnnotations(VcfOutputRendererUnitTest.java:40); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133); 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584); 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172); 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46); 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804); 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748:2804,Test,TestMethodWorker,2804,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748,1,['Test'],['TestMethodWorker']
Testability,.testGenotypeCallForLotsOfAlts(GnarlyGenotyperEngineUnitTest.java:71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.jav,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1491,test,testng,1491,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['test'],['testng']
Testability,.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.runSuitesLocally(TestNG.java:1110); at org.testng.TestNG.run(TestNG.java:1018); at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111); at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204); at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:483); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140); Caused by: java.lang.RuntimeException: java.lang.NoSuchMethodError: com.google.common.base.Stopwatch.createStarted()Lcom/google/common/base/Stopwatch;; at com.google.cloud.dataflow.sdk.Pipeline.run(Pipeline.java:166); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.runPipeline(DataflowCommandLineProgram.java:145); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.doWork(DataflowCommandLineP,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/866:2289,test,testng,2289,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/866,1,['test'],['testng']
Testability,.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy2.stop(Unknown Source); 	at o,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748:3671,Test,TestNGTestClassProcessor,3671,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748,2,['Test'],['TestNGTestClassProcessor']
Testability,.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128); 	at java.util.ArrayList.forEach(ArrayList.java:1257); 	at org.testng.TestRunner.privateRun(TestRunner.java:770); 	at org.testng.TestRunner.run(TestRunner.java:591); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355); 	at org.testng.SuiteRunner.run(SuiteRunner.java:304); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102); 	at org.testng.TestNG.runSuites(TestNG.java:1032); 	at org.testng.TestNG.run(TestNG.java:1000); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33); 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94); 	at com.sun.proxy.$Proxy2.stop(Unknown Source); 	at o,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429:5362,Test,TestNGTestClassProcessor,5362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639136429,1,['Test'],['TestNGTestClassProcessor']
Testability,.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_rcc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_some_missing.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_with_bait_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotyper_agilent_targets_trunc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_basic.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_extended.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-basic-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-full-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-intermediate-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-simplified-for-allelic-fraction-transformation.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/test_reference.dict; src/test/resources/org/broadinstitute/hellbender/tools/exome/test_reference.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.bai; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.bam; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.tmp; src/test/resources/org/broadinstitute/hellbender/tools/FixCallSetSampleOrdering/badlySorted1000-batch-size13.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.bam.bai; src/test/r,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:35261,test,test,35261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.utils.runtime.AsynchronousStreamWriterServiceUnitTest.testAsyncWriteInBatches(AsynchronousStreamWriterServiceUnitTest.java:35); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.Na,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4024:1504,test,testng,1504,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4024,1,['test'],['testng']
Testability,".vcf \\ ; ;   -L 0005-scattered.interval\_list \\ ; ;   -bamout results/wesep-229191-f.variants.bam \\ ; ;   -G StandardAnnotation -G StandardHCAnnotation \\ ; ;   --dragen-mode \\ ; ;   --dragstr-params-path /home/gvandeweyer/elprep\_streaming/results/wesep-229191-f.bam.params \\ ; ;   --native-pair-hmm-threads 2.   ; ; c) Entire program log:. (ELPREP) gvandeweyer@ngsvm-pipelines:~/elprep\_streaming/VariantCalling\_Test/scattered$ gatk --java-options ""-Djava.io.tmpdir=/tmp -Xmx3g"" HaplotypeCaller    -R /home/gvandeweyer/elprep\_streaming/reference/hg19.fasta    -I /home/gvandeweyer/elprep\_streaming/results/wesep- ; ; 229191-f.bam    -O results/wesep-229191-f.vcf    --alleles ../wesid-226998-m.haplotypecaller.final.vcf.gz -L 0005-scattered.interval\_list    -bamout results/wesep-229191-f.variants.bam    -G StandardAnnotation -G StandardHCAnnotation    --dragen-mode    --dragstr-params- ; ; path /home/gvandeweyer/elprep\_streaming/results/wesep-229191-f.bam.params 2>&1 | tee Runtime.log.txt ; ; Using GATK jar /home/gvandeweyer/miniconda3/envs/ELPREP/share/gatk4-4.2.5.0-0/gatk-package-4.2.5.0-local.jar ; ; Running: ; ;    java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -Djava.io.tmpdir=/tmp -Xmx3g -jar /home/gvandeweyer/miniconda3/envs/ELPREP/share/gatk4-4.2.5.0-0/gatk-packa ; ; ge-4.2.5.0-local.jar HaplotypeCaller -R /home/gvandeweyer/elprep\_streaming/reference/hg19.fasta -I /home/gvandeweyer/elprep\_streaming/results/wesep-229191-f.bam -O results/wesep-229191-f.vcf --alleles ../wesid-226998-m.haplotypecaller.final.vcf.gz -L 0005-scattered.inter ; ; val\_list -bamout results/wesep-229191-f.variants.bam -G StandardAnnotation -G StandardHCAnnotation --dragen-mode --dragstr-params-path /home/gvandeweyer/elprep\_streaming/results/wesep-229191-f.bam.params ; ; 22:06:39.332 WARN  GATKAnnotationPluginDescriptor - Redundant enabled annotation group (",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7741:3167,log,log,3167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7741,1,['log'],['log']
Testability,.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testGenotypeFilters1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testGenotypeFilters2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertFilter.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertGenotypeFilterExpression.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertJexlFilter.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testInvertJexlGenotypeFilterExpression.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMask1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMask2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMask3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testMaskReversed.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testNoAction.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testSetFilteredGtoNocall.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testSetVcfFilteredGtoNocall.vcf.idx; src/test/resources/org/broadinstitute/hellbende,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:54079,test,test,54079,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:206); at org.broadinstitute.hellbender.Main.main(Main.java:292); Caused by: htsjdk.samtools.SAMException: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at htsjdk.samtools.reference.FastaSequenceIndex.<init>(FastaSequenceIndex.java:74); at htsjdk.samtools.reference.IndexedFastaSequenceFile.<init>(IndexedFastaSequenceFile.java:98); at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getReferenceSequenceFile(ReferenceSequenceFileFactory.java:139); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:134); ... 13 more; Caused by: java.nio.file.FileSystemException: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai: Too many open files; at sun.nio.fs.UnixException.translateToIOException(UnixException.java:103); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:114); at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:119); at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:226); at java.nio.fi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:2441,benchmark,benchmark,2441,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291,1,['benchmark'],['benchmark']
Testability,"/.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068170 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068171 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068172 . G *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068173 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068174 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,4,0:6:53:735,102,53,507,108,472:0,0,2,4; 20 10068175 . T <NON_REF> . . . GT:DP:GQ:MIN_DP:PL ./.:20:17:20:0,17,729; ```. When the original GVCF is imported into GenomicsDB and then extracted:. ```; ./gatk GenomicsDBImport -R src/test/resources/large/human_g1k_v37.20.21.fasta -L 20 -V src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf -genomicsdb-workspace-path spanDelWorkspace; ./gatk SelectVariants -V gendb://spanDelWorkspace -R src/test/resources/large/human_g1k_v37.20.21.fasta -O test.g.vcf -L 20; ```. It contains the following records in this region:. ```; 20 10068158 . GTGTATATATATA G,<NON_REF> . . BaseQRankSum=-6.520e-01;ClippingRankSum=0.00;DP=29;ExcessHet=3.01;MQRankSum=0.328;RAW_MQ=93364.00;ReadPosRankSum=-2.530e-0; 1 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068159 . T *,<NON_REF> . . DP=29 GT:AD:DP:GQ:PL:SB ./.:3,4,0:7:57:104,0,57,114,69,183:0,3,2,2; 20 10068160 . GTATATATATATGTA G,*,<NON_REF> . . DP=28;ExcessHet=3.01;RAW_MQ=87005.00 GT:AD:DP:GQ:PL:SB ./.:0,2,4,0:6:53:735,162,131,102,0,53,507,174,108,472:0,0,; 2,4; 20 10068161 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068162 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068163 . T *,<NON_REF> . . DP=28 GT:AD:DP:GQ:PL:SB ./.:0,2,0:6:53:735,162,131,507,174,472:0,0,2,4; 20 10068164 . A *,<NON_REF> . . DP=28 GT:AD:DP:GQ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172:3457,test,test,3457,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-403519172,1,['test'],['test']
Testability,//codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `70.707% <ø> (-13.116%)` | `27 <0> (-9)` | |; | [...e/hellbender/utils/test/testers/SamFileTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvU2FtRmlsZVRlc3Rlci5qYXZh) | `90.217% <ø> (ø)` | `30 <0> (ø)` | :arrow_down: |; | [.../hellbender/utils/test/testers/CleanSamTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQ2xlYW5TYW1UZXN0ZXIuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |; | [...llbender/utils/test/SimpleIntervalTestFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1NpbXBsZUludGVydmFsVGVzdEZhY3RvcnkuamF2YQ==) | `100% <100%> (ø)` | `5 <2> (?)` | |; | [...ute/hellbender/utils/test/GenomicsDBTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0dlbm9taWNzREJUZXN0VXRpbHMuamF2YQ==) | `91.667% <100%> (-0.641%)` | `3 <0> (ø)` | |; | [...ils/test/testers/AbstractMarkDuplicatesTester.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L3Rlc3RlcnMvQWJzdHJhY3RNYXJrRHVwbGljYXRlc1Rlc3Rlci5qYXZh) | `79.487% <100%> (ø)` | `17 <1> (ø)` | :arrow_down: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3475?src=pr&el=tree#diff-c3JjL21h,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700:1802,test,test,1802,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324298700,1,['test'],['test']
Testability,"//github.com/broadinstitute/hellbender/blob/c6b41e6da8c9ea3f03206a25ce4ad74312b154f0/src/test/java/org/broadinstitute/gatk/CommandLineProgramTest.java). I'm assuming this is because we have not settled on a way to `Assert` that outputs are similar after running a hellbender command line. This issue should resolve with a definition how far one should test before a pull request is accepted. After an arbitrary low level patch to the codebase, I believe the GATK [`MD5DB`](https://github.com/broadgsa/gatk/blob/3b67b448072e24c80779b2e1cbc9dcfcb5dce4cf/public/gatk-tools-public/src/test/java/org/broadinstitute/gatk/utils/MD5DB.java) and [`DiffEngine`](https://github.com/broadgsa/gatk/blob/3b67b448072e24c80779b2e1cbc9dcfcb5dce4cf/public/gatk-tools-public/src/main/java/org/broadinstitute/gatk/engine/walkers/diffengine/DiffEngine.java) are considered too hard to verify-and-update en masse. This limitation would also apply to external framework test utilities, such as TestNG's `FileAssert.assertLength()`. A 2009 discussion of file comparators is archived [here](http://stackoverflow.com/questions/466841/comparing-text-files-w-junit). Ultimately, I believe the biggest pain point with the `MD5DB` is that there does not exist a quick way to a) diagnose what has changed and b) to then update all hundreds of expected outputs. As in `DiffEngine`, we could define a way to regression test that only certain aspects of common file types aren't changing (exact number of reads in BAMs, or exact number of variants in BCF), or that values are falling within a certain range (number of quality scores all above 30 under 60), etc. As for updating results, instead of embedding the expected `MD5DB` outputs in a hundreds of java test files, one could also externalize _all_ of the expected outputs to another file (json, flat text, etc.) such that this singular sorted file for the entire test suite may be updated once. Or, we can decide that none of this is required at all and just delete `CommandLine",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/69:1082,assert,assertLength,1082,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/69,1,['assert'],['assertLength']
Testability,/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-tracking --modeling_interval_list=/gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/intervals8729903857029540703.tsv --output_model_path=/gpfs/gsfs7/users/sangj2/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/2-Germline-CNV/14.Germline-CNV/CNV-model --enable_explicit_gc_bias_modeling=True --read_count_tsv_files /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-07410307475890858352.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-12290301678667639499.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-21824691337189197401.tsv /gpfs/gsfs7/users/gatk_users1/0-Project/1-gCNV-Lung/z-bak/z-2019-10-28-1-Test-gCNV_23-40-33/2-Output/8-GATK-Temp/sample-31776045115104931009.tsv --psi_s_scale=1.000000e-04 --mapping_error_rate=1.000000e-02 --depth_correction_tau=1.000000e+04 --q_c_expectation_mode=hybrid --max_bias_factors=5 --psi_t_scale=1.000000e-03 --log_mean_bias_std=1.000000e-01 --init_ard_rel_unexplained_variance=1.000000e-01 --num_gc_bins=20 --gc_curve_sd=1.000000e+00 --active_class_padding_hybrid_mode=50000 --enable_bias_factors=True --disable_bias_factors_in_active_class=False --p_alt=1.000000e-06 --cnv_coherence_length=1.000000e+04 --max_copy_number=5 --p_active=0.010000 --class_coherence_length=10000.000000 --learning_rate=1.000000e-02 --adamax_beta1=9.000000e-01 --adamax_beta2=9.900000e-01 --log_emission_samples_per_round=50 --log_emission_sampling_rounds=10 --log_emission_sampling_median_rel_error=5.000000e-03 --max_advi_iter_first_epoch=5000 --max_advi_iter_subsequent_epochs=200 --min_training_epochs=10 --max_training_epochs=50 --initial_temperature=1.500000e+00 --num_ther,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019:9186,Test,Test-,9186,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547440019,1,['Test'],['Test-']
Testability,"/15305869/37785631-078c3fa8-2dd1-11e8-8bd1-3e8b1da36c8b.png); ![image](https://user-images.githubusercontent.com/15305869/37785638-0bc9f48e-2dd1-11e8-9aa1-47c77a5625aa.png); ![image](https://user-images.githubusercontent.com/15305869/37785656-19976c68-2dd1-11e8-802e-1893eb37cdd7.png); ![image](https://user-images.githubusercontent.com/15305869/37785664-1dcafa48-2dd1-11e8-832e-9d5fa0529653.png); ![image](https://user-images.githubusercontent.com/15305869/37785674-24d8d3dc-2dd1-11e8-8359-5dd266ca3947.png). Clearly, there is a strong correlation here. In particular, low mappability bins show two distinct modes: a mode at the coverage mode (~ 100 fragments/bin), and a mode that bifurcates to lower values. **I conjecture that the bimodality results from heterogeneity of mappability scores at different positions in the same bin. The bins are 1k wide and it is feasible that some positions are highly mappable and other positions are not. This conjecture can be tested by collecting coverage on smaller bins and to check whether the bimodality weakens. If it does, I suggest filtering based on read position, similar to Genome STRiP, as opposed to filtering bins.**. Also, there is little sample-to-sample variation in coverage-mappability scatter plots (as opposed to, let's say, GC). **Therefore, there is no reason to consider mappability as a bias covariate**. The mappability coverage bias can be captured by a cohort-wide mean bias. Finally, let us study the NB overdispersion of different samples for different contigs:; ![image](https://user-images.githubusercontent.com/15305869/37785938-c47b4e38-2dd1-11e8-85f5-6e82764afbde.png). There's a clear structure here: some samples have higher overdispersion than the others. This could be due to degraded samples, less even GC curve, different chemistry, etc. In any event, we can regress the residual variance $psi_sj$ (for sample s, contig j) with a linear model:. psi_sj ~ N(a_s * psi_j + b_s, \beta). Here's how the regression looks like",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4558:3245,test,tested,3245,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4558,1,['test'],['tested']
Testability,/5598?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...dataSources/vcf/VcfFuncotationFactoryUnitTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnlVbml0VGVzdC5qYXZh) | `98.104% <100%> (+0.055%)` | `30 <1> (+1)` | :arrow_up: |; | [...er/tools/funcotator/FuncotatorIntegrationTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JJbnRlZ3JhdGlvblRlc3QuamF2YQ==) | `85.253% <100%> (+0.372%)` | `113 <1> (+1)` | :arrow_up: |; | [...cotator/dataSources/vcf/VcfFuncotationFactory.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL2RhdGFTb3VyY2VzL3ZjZi9WY2ZGdW5jb3RhdGlvbkZhY3RvcnkuamF2YQ==) | `88.05% <100%> (+0.469%)` | `48 <0> (ø)` | :arrow_down: |; | [...nder/tools/funcotator/FuncotatorTestConstants.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9mdW5jb3RhdG9yL0Z1bmNvdGF0b3JUZXN0Q29uc3RhbnRzLmphdmE=) | `98.333% <100%> (+0.028%)` | `1 <0> (ø)` | :arrow_down: |; | [...ute/hellbender/utils/test/FuncotatorTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL3Rlc3QvamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Z1bmNvdGF0b3JUZXN0VXRpbHMuamF2YQ==) | `95.161% <66.667%> (-3.084%)` | `7 <1> (+1)` | |; | [...nder/utils/runtime/StreamingProcessController.java](https://codecov.io/gh/broadinstitute/gatk/pull/5598/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9ydW50aW1lL1N0cmVhbWluZ1Byb2Nlc3NDb250cm9sbGVyLmphdmE=) | `67.299% <0%> (-0.474%)` | `33% <0%> (ø)` | |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5598#issuecomment-456891301:2279,test,test,2279,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5598#issuecomment-456891301,1,['test'],['test']
Testability,/BQSR/expected.HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq-1.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq6.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate_allaligned.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.sharded.bam/part-r-00001.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.dict; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.chr17_69k_70k.dictFix.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.oq.read_consumes_zero_ref_bases.chr20.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/na.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/na.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/overlappingRead.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/solid.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/solid.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/clippingReadsTest.withRG.hg19.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:21734,test,test,21734,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/BenchmarkComparison/a8851b03-1abb-4622-b481-5425ce01418b/call-BenchmarkVCFTestSample/Benchmark/7d946274-eb9e-4be8-b04f-c1b3399d4068/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""108.55041388888888"",; ""NIST controlHCsystemhours"": ""0.2213388888888889"",; ""NIST controlHCwallclockhours"": ""78.14672499999998"",; ""NIST controlHCwallclockmax"": ""4.031741666666667"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-BenchmarkVCFControlSample/Benchmark/4121c5eb-9771-43ee-84f1-262115dcf151/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""93.23600000000005"",; ""NIST evalHCsystemhours"": ""0.2127972222222222"",; ""NIST evalHCwallclockhours"": ""62.422702777777786"",; ""NIST evalHCwallclockmax"": ""3.1571083333333334"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac-5e7c-4130-bb68-26871868b49e/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/81dbf637-d90c-4111-93b9-9cec426c5a39/call-NISTSampleHeadToHead/BenchmarkComparison/3238c3ac",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497:20635,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20635,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684837497,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"/BenchmarkComparison/a98aa003-bddd-492a-8691-dfa50191e2c6/call-BenchmarkVCFTestSample/Benchmark/269b49fd-36aa-4381-a08a-a3f2a4586967/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""103.49216944444444"",; ""NIST controlHCsystemhours"": ""0.21042500000000003"",; ""NIST controlHCwallclockhours"": ""74.8884888888889"",; ""NIST controlHCwallclockmax"": ""3.995058333333333"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-BenchmarkVCFControlSample/Benchmark/670f9cb4-5bb0-48e2-95c9-15a2e1ae7dee/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""103.23083611111107"",; ""NIST evalHCsystemhours"": ""0.2083694444444444"",; ""NIST evalHCwallclockhours"": ""76.16374166666664"",; ""NIST evalHCwallclockmax"": ""3.743883333333333"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-19c8-4f87-b7b1-b71028109732/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/acc9e2ac-b10a-4d6a-b586-cd3e47f04e41/call-NISTSampleHeadToHead/BenchmarkComparison/56974c24-",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:20630,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20630,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,/CollectBaseDistributionByCycle/valid.dict; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/collect_quality_yield_metrics.bam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/collect_quality_yield_metrics.cram; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/valid.dict; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/MeanQualityByCycle/example_pfFail_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/MeanQualityByCycle/first5000a.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/MeanQualityByCycle/unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/example_pfFail_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/first5000a.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/originalQuals.chr1.1-1K.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/QualityScoreDistribution/unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/add_comments_to_bam.bam; src/test/resources/org/broadinstitute/hellbender/tools/add_comments_to_bam.sam; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.2.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.3.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.4,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:15603,test,test,15603,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/FindBreakpointEvidenceSpark.java; - input coverage-scaled thresholds, convert to absolute internally. Allow thresholds to be double instead of int; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilter.java; - getter functions added to calculate properties for XGBoostEvidenceFilter. Also fromStringRep() and helper constructors added for testing; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointEvidence.java; - updates to tests reflecting changes to these interfaces; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointDensityFilterTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/FindBreakpointEvidenceSparkUnitTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/FindBreakpointEvidenceSparkIntegrationTest.java; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/integration/SVIntegrationTestDataProvider.java. 4. Added code; - factory to call appropriate BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/BreakpointFilterFactory.java; - simple helper class to hold feature vectors for classifier; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/EvidenceFeatures.java; - implement classifier-based BreakpointEvidence filter; src/main/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilter.java; - unit test for classifier filter; src/test/java/org/broadinstitute/hellbender/tools/spark/sv/evidence/XGBoostEvidenceFilterUnitTest.java. 5. Added resources; - Genome tracts; src/main/resources/large/hg38_centromeres.txt.gz; src/main/resources/large/hg38_gaps.txt.gz; src/main/resources/large/hg38_umap_s100.txt.gz; - Classifier binary file; src/main/resources/large/sv_evidence_classifier.bin; - Data used for validation of performance in unit tests; src/test/resources/sv_classifier_test_data.json; src/test/resources/sv_features_test_data.json",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477:2674,test,test,2674,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4769#issuecomment-389218477,10,['test'],"['test', 'tests']"
Testability,/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.chr20snippet.g.unsorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.InsertSizeRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.MateRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.MateRankSum.chr20snippet.withoutIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/VariantAnnotatorEngine/one_entry_source.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/convertToBasePairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/IntervalTest.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.copy.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.g.vc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:48898,test,test,48898,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_35-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_36-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_37-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_38-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_39-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_40-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_41-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_42-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_43-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_44-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_45-calls --contig-ploidy-calls /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/ploidy/ploidy-calls --allosomal-contig chrX --allosomal-contig chrY --sample-index 1 --output-genotyped-intervals /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/output/R18001345LU01-XG1009_combined_cohort.vcf --output-genotyped-segments /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/output/R18001345LU01-XG1009_combined_segment_cohort.vcf --output-denoised-copy-ratios /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/output/R18001345LU01-XG1009_combined_ratio.txt`. Here attach all my scattered interval list files, and I have confirmed all my scattered interval list are in the same dictionary order.; [scatter.zip](https://github.com/broadinstitute/gatk/files/14973582/scatter.zip)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8776:42982,test,test,42982,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8776,2,['test'],['test']
Testability,/PathSeqBuildKmers/exampleFASTA.hss; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PathSeqBuildReferenceTaxonomy/genbank_test.dict; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PathSeqBuildReferenceTaxonomy/genbank_test.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PathSeqBuildReferenceTaxonomy/test.dict; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PathSeqBuildReferenceTaxonomy/test.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PathSeqPipelineSpark/e_coli_k12_mini.dict; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PathSeqPipelineSpark/pipeline_output.bam.splitting-bai; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PSBuildReferenceTaxonomyUtils/test.tar.gz; src/test/resources/org/broadinstitute/hellbender/tools/spark/pathseq/PSFilter/hg19mini_test_reads.bam; src/test/resources/org/broadinstitute/hellbender/tools/spark/pipelines/FlagStatSpark/flag_stat.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/evidence/FindBreakpointEvidenceSpark/SVBreakpointsTest.assembly.0; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.fastq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGA,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:42405,test,test,42405,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/Users/droazen/src/hellbender/src/test/resources/large/gvcfs/combined.gatk3.7_30_ga4f720357.expected.vcf, 8536) FAILED; java.lang.AssertionError: different sizes 16940 vs 17070; at org.broadinstitute.hellbender.utils.test.VariantContextTestUtils.assertEqualVariants(VariantContextTestUtils.java:173); at org.broadinstitute.hellbender.tools.GatherVcfsIntegrationTest.testBlockGather(GatherVcfsIntegrationTest.java:103); Results: FAILURE (15 tests, 14 successes, 1 failures, 0 skipped); ```. The tool writes a vcf that, when read back in by GATK, appears to have fewer records than it should. The same test does NOT fail if you do ANY of the following:. * Edit `GatherVcfsIntegrationTest.testBlockGather()` to turn on the JDK deflater by changing `.addBooleanArgument(""use_jdk_deflater"", false);` to `.addBooleanArgument(""use_jdk_deflater"", true);`. * Keep the Intel deflater on, but edit `build.gradle` to change `samjdk.compression_level` to 1 or 2. (You'll also need to change the `Assert.assertEquals(System.getProperty(""samjdk.compression_level""), ""5"");` line in `GatherVcfsIntegrationTest.testBlockGather()` accordingly). * Edit the `getVcfsToShard` `DataProvider` in `GatherVcfsIntegrationTest` to change the failing `{LARGE_VCF, 8536}` test case to `{LARGE_VCF, 8535}`. This cuts the number of files that the vcf gets split into in half, and the test passes. * Comment out all but the last test case in the `getVcfsToShard` `DataProvider` in `GatherVcfsIntegrationTest`. This indicates that there is something stateful going on, since the test case does not fail if run in isolation. One additional bit of information: the test fails with the Intel deflater and compression levels 5 and 9, but with compression level 9 GATK is able to read many fewer records from the final output file than it does at compression level 5. As mentioned above, at compression levels 1 or 2 it's able to read all the records correctly. If you manually decompress the output file it appears to have all the correct",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3117:1264,assert,assertEquals,1264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3117,1,['assert'],['assertEquals']
Testability,/VariantFiltration/vcfMask.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/ad-bug-input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/CEUTrio.20.21.missingIndel.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/chr21.bad.pl.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combined_genotype_gvcf_exception.nocall.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combined_genotype_gvcf_exception.original.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/gvcf.basepairResolution.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/leadingDeletion.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.combined.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.depr.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/testUpdatePGT.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.markedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/too,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:57230,test,test,57230,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |; | cloud | openjdk8 | [36661.1](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900056) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.1/tests/test/index.html) |; | cloud | openjdk11 | [36661.14](https://app.travis-ci.com/broadinstitute/gatk/jobs/545900069) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_36661.14/tests/test/index.html) |,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400:2053,log,logs,2053,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7539#issuecomment-955088400,20,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.noDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/markDups.test2reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge2.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge3.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes_casava.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.dict; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.baq.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.IMPROPER_PAIR.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplic,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:59071,test,test,59071,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.noDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/markDups.test2reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge2.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge3.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes_casava.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.dict; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.baq.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.IMPROPER_PAIR.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.NON_REF.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.SYNONYMOUS_CODING.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDi,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:59193,test,test,59193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.r,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:3362,test,test,3362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_Viterbi_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/log_likelihood_history.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_bias_latent_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_log_likelihoods.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_read_depth_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74NEG.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P2T.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P35.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_covariate_bias_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_unexplained_variance_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv/realistic-targets.tab; src/test/resources/lar,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:3644,test,test,3644,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/combined_genotype_gvcf_exception.nocall.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combined_genotype_gvcf_exception.original.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/gvcf.basepairResolution.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/leadingDeletion.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.combined.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.depr.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/testUpdatePGT.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.markedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.noDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/markDups.test2reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge2.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge3.sam; src/test/resources/org/broadinstitute/hellbender/t,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:57653,test,test,57653,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/coveragemodel/learning_sample_read_depth.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_contig_anots.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_HMM_priors_table.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/mean_bias_covariates_matrix.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/target_specific_mean_log_bias.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/target_specific_unexplained_variance.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/acnv-segments-from-allelic-integration.seg; src/test/resources/org/broadinstitute/hellbender/tools/exome/af-params-from-allelic-integration.af.param; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-1.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-2.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-3.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-4.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/dupReadsMini.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12778.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12872.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-c,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:29058,test,test,29058,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://gcp-public-data--broad-references/hg38/v0/exome_evaluation_regions.v1.interval_list"",; ""gs://broad-dsp-spec-ops/scratch/mshand/EvaluationStratIntervalLists/LCRFromHengHg38.interval_list""; ],; ""BenchmarkComparison.stratLabels"": [; ""exome"",; ""LCR""; ],; ""BenchmarkComparison.truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkComparison.truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkComparison.truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi""; },; ""test_cromwell_job_id"": null,; ""eval_cromwell_job_id"": null,; ""created_at"": ""2022-02-24T15:51:30.767060"",; ""created_by"": null,; ""finished_at"": null; } ; </pre> </details>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691:2859,Benchmark,BenchmarkComparison,2859,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1049997691,6,['Benchmark'],['BenchmarkComparison']
Testability,/exome/exome-read-counts-test-targets-wo-coords.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/homo_sapiens_germline_HMM_priors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/TCGA_T_matrix_autosomal_bad.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/pon-input.tab; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_autosomal_annot.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_class.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_missing_some_annots.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_rcc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_some_missing.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_with_bait_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotyper_agilent_targets_trunc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_basic.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_extended.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-basic-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-full-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-intermediate-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-simplified-for-allelic-fra,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:34507,test,test,34507,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/gatk/pull/2778?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `41.216% <0%> (-30.405%)` | `26% <0%> (-8%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...ender/engine/datasources/ReferenceMultiSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2778#issuecomment-304471964:1824,test,test,1824,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2778#issuecomment-304471964,1,['test'],['test']
Testability,/gatk/pull/3111?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvR0FUS0dDU09wdGlvbnMuamF2YQ==) | `0% <0%> (-66.667%)` | `0% <0%> (ø)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `22.013% <0%> (-62.264%)` | `8% <0%> (-26%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `41.216% <0%> (-30.405%)` | `26% <0%> (-8%)` | |; | [...llbender/engine/spark/SparkCommandLineProgram.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvc3BhcmsvU3BhcmtDb21tYW5kTGluZVByb2dyYW0uamF2YQ==) | `68.75% <0%> (-25%)` | `6% <0%> (-1%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/3111?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGV,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3111#issuecomment-308324914:1823,test,test,1823,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3111#issuecomment-308324914,1,['test'],['test']
Testability,/gatk/pull/4283?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [.../main/java/org/broadinstitute/hellbender/Main.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9NYWluLmphdmE=) | `70.466% <25%> (+9.733%)` | `43 <1> (+8)` | :arrow_up: |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-75.51%)` | `0% <0%> (-17%)` | |; | [...nder/tools/spark/pipelines/PrintVariantsSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9waXBlbGluZXMvUHJpbnRWYXJpYW50c1NwYXJrLmphdmE=) | `0% <0%> (-66.667%)` | `0% <0%> (-2%)` | |; | [...oadinstitute/hellbender/utils/test/XorWrapper.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L1hvcldyYXBwZXIuamF2YQ==) | `13.043% <0%> (-60.87%)` | `2% <0%> (-6%)` | |; | [...lbender/engine/datasources/ReferenceAPISource.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvZGF0YXNvdXJjZXMvUmVmZXJlbmNlQVBJU291cmNlLmphdmE=) | `25.735% <0%> (-44.853%)` | `8% <0%> (-19%)` | |; | [...oadinstitute/hellbender/utils/gcs/BucketUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9nY3MvQnVja2V0VXRpbHMuamF2YQ==) | `54.194% <0%> (-25.806%)` | `30% <0%> (-9%)` | |; | [...nder/tools/spark/BaseRecalibratorSparkSharded.java](https://codecov.io/gh/broadinstitute/gatk/pull/4283/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361224262:1844,test,test,1844,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361224262,1,['test'],['test']
Testability,/hellbender/tools/BQSR/solid.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/solid.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/clippingReadsTest.withRG.hg19.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/clippingReadsTestCRAM.cram; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/clippingReadsTest.withRG.hg19.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTestCRAM.QT_10.cram; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTestCRAM.QT_10.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15_1115.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15_1115.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_0.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_0.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10_CR_SOFTCLIP_BASES.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10_CR_SOFTCLIP_BASES.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10_CR_WRITE_NS.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.QT_10_CR_WRITE_NS.tmp; src/test/resources/org/broadinstitute/hellbender/tools/Cl,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:23468,test,test,23468,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/hellbender/tools/spark/sv/SVReadLikelihoodCalculator.java (85); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSpark.java (239); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark.java (501); > M src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeLikelihoodCalculator.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/ReadLikelihoods.java (6); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:2743,test,test,2743,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/hellbender/tools/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/valid.dict; src/test/resources/org/broadinstitute/hellbender/tools/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.indels.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.HACKEDhg38header.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.snps.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/CombineGVCFs.output.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/CombineGVCFs.output.withoutIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/GenotypeGVCFs.output.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/HCOutputWithASAnnotation.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.unindexed.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.InsertSizeRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.MateRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.MateRankSum.chr20snippet.withoutIndex.vcf.idx; ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:46813,test,test,46813,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.depr.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/testUpdatePGT.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.markedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.noDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/markDups.test2reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge2.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge3.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes_casava.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.dict; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.baq.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.IMPROPER_PAIR.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.MultiContext.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA1287,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:58645,test,test,58645,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/threeMemberNonTrioTest_chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/261_S01_raw_variants_gvcf.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/complexExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/diploid-multisample-sac.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/expected/testSelectVariants_DiscordanceNoSampleSpecified.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/expected/testSelectVariants_FileWithoutInfoLineInHeaderWithOverride.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/expected/testSelectVariants_SelectMultiAllelicExcludeNonVar.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/filteringDepthInFormat.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/haploid-multisample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/selectVariantsInfoField.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/test.dup.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/tetra-diploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/tetraploid-multisample-sac.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/tetraploid-multisample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/SelectVariants/vcfexample2DiscordanceConcordance.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/Sel,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:64404,test,test,64404,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/hg19micro.dict; src/test/resources/hg19micro.fasta.fai; src/test/resources/hg19mini.dict; src/test/resources/hg19mini.fasta.fai; src/test/resources/Homo_sapiens_assembly19_chr1_1M.dict; src/test/resources/Homo_sapiens_assembly19_chr1_1M.fasta.fai; src/test/resources/Homo_sapiens_assembly19.dbsnp135.chr1_1M.exome_intervals.vcf.idx; src/test/resources/HSA19.dbsnp135.chr1_1M.exome_intervals.modified.vcf.idx; src/test/resources/human_g1k_v37.chr17_1Mb.dict; src/test/resources/human_g1k_v37.chr17_1Mb.fasta.fai; src/test/resources/iupacFASTA.dict; src/test/resources/iupacFASTA.fasta.fai; src/test/resources/joint_calling.chr1_1M.1kg_samples.10samples.noINFO.vcf.idx; src/test/resources/large/1000G.phase3.broad.withGenotypes.chr20.10100000.vcf.idx; src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.cram.bai; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/bias_covariates_ARD_coefficients_history.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_max_likelihood_estimate_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_precision_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_Viterbi_matrix.tsv; src/test/resources/large/cnv_germline_workflows_,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:1787,test,test,1787,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/hg38.fasta -O hdfs:///user/hadoop/output/testgatkvcf.vcf \; > -- \; > --spark-runner SPARK --spark-master yarn; Using GATK jar /home/hadoop/gatk/build/libs/gatk-spark.jar; Running:; /usr/lib/spark/bin/spark-submit --master yarn --conf spark.driver.userClassPathFirst=false --conf spark.io.compression.codec=lzf --conf spark.driver.maxResultSize=0 --conf spark.executor.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 --conf spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 --conf spark.kryoserializer.buffer.max=512m --conf spark.yarn.executor.memoryOverhead=600 /home/hadoop/gatk/build/libs/gatk-spark.jar HaplotypeCallerSpark -I hdfs:///user/hadoop/testdata/TestData -R hdfs:///user/hadoop/reference/hg38.fasta -O hdfs:///user/hadoop/output/testgatkvcf.vcf --spark-master yarn; 19/04/08 19:01:40 WARN SparkConf: The configuration key 'spark.yarn.executor.memoryOverhead' has been deprecated as of Spark 2.3 and may be removed in the future. Please use the new key 'spark.executor.memoryOverhead' instead.; 19:01:43.413 WARN SparkContextFactory - Environment variables HELLBENDER_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY must be set or the GCS hadoop connector will not be configured properly; 19:01:43.565 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/hadoop/gatk/build/libs/gatk-spark.jar!/com/intel/gkl/native/libgkl_compression.so; 19:01:43.728 INFO HaplotypeCallerSpark - ------------------------------------------------------------; 19:01:43.729 INFO HaplotypeCallerSpark - The Genome Analysis Toolkit (GATK) v4.1.1.0-10-g554a0e8-SNAPSHOT; 19:01:43.729 INFO HaplotypeCallerSpark - For support and document,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5869:1300,test,testdata,1300,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5869,2,"['Test', 'test']","['TestData', 'testdata']"
Testability,/inputs/wes_pon/posteriors_final/copy_ratio_max_likelihood_estimate_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_precision_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_Viterbi_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/log_likelihood_history.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_bias_latent_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_log_likelihoods.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_read_depth_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74NEG.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P2T.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P35.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_covariate_bias_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_unexplained_variance_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_sp,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:3416,test,test,3416,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/issues/1053). Currently ValidateVariants relies on genotypes to transitively check that each alt allele occurs in at least one sample and that the AC adds up. However, this can fail on sites-only files because there are no genotypes. We should use the definition of the info annotations in the header to check how many entries each should have.; ### Outline; - Add a new validation type for info-field counts to enum and to switch statement; - Grab info headers from input VCF with something like GATKVCFUtils.getVCFHeadersFromRods(getToolkit(), variantCollection.variants.getName()) and VCFHeader::getInfoHeaderLines; - In the map() function, for each info header line, call on each VCFInfoHeaderLine getCount(vc) to get the expected number of info annotation entries; - Compare the expected number with a count based on vc.getAttribute(currentVCFinfoHeaderLine.getID()), which will require some additional parsing because it returns an Object; - (Bonus points if you use the isFixedCount() and getCount() functions on the VCF info header line to simplify annotations that aren't according to the number of alt alleles); ### Test data. /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; Should fail AC/AF validation at ; `1 768589 . A C,G 76 PASS AC=1;AF=0.00047;AN=2120`; See results using:. ```; use VCFtools; vcf-validator /humgen/gsa-hpprojects/dev/gauthier/scratch/supportingMultiA.vcf; ```. which outputs:; `INFO field at 1:768589 .. INFO tag [AC=1] expected different number of values (expected 2, found 1),INFO tag [AF=0.00047] expected different number of values (expected 2, found 1)`; ### Notes. Currently, all the validation modes call out to HTSJDK. Do we want to put the new functionality there as well?. ---. @yfarjoun commented on [Thu Jul 16 2015](https://github.com/broadinstitute/gsa-unstable/issues/1053#issuecomment-122130280). I think that it is very appropriate to validate in htsjdk. On Thu, Jul 16, 2015 at 4:05 PM, ldgauthier notifications@github.com; wrote:",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2507:1237,Test,Test,1237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2507,1,['Test'],['Test']
Testability,/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark.java (501); > M src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeLikelihoodCalculator.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/ReadLikelihoods.java (6); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.me,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:2936,test,test,2936,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (177); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSparkUnitTest.java (307); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:3266,test,test,3266,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,"/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/classes,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/zipfs.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/dnsns.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunjce_provider.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/icedtea-sound.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/nashorn.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/java-atk-wrapper.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunec.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunpkcs11.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/cldrdata.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/jaccess.jar,/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/localedata.jar,/gatk/gatk-package-unspecified-SNAPSHOT-local.jar,/jars/gatk-package-4.2.6.1-50-g40182c7-SNAPSHOT-testDependencies.jar,/jars/gatk-package-4.2.6.1-50-g40182c7-SNAPSHOT-test.jar]; 2022-08-16T22:45:53.6382333Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6383952Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:4: error: package com.google.common.base does not exist; 2022-08-16T22:45:53.6523417Z src/main/java/org/broadinstitute/hellbender/engine/FeatureInput.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6548080Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/PosteriorProbabilitiesUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6571861Z src/main/java/org/broadinstitute/hellbender/engine/FeatureContext.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T22:45:53.6588890Z src/main/java/org/broadinstitute/h",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370:1935,test,testDependencies,1935,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217253370,1,['test'],['testDependencies']
Testability,"/machineTypes/n1-standard-2"",; ""maintenanceEvent"":""NONE"",; ""networkInterfaces"":[{""accessConfigs"":[{""externalIp"":""104.198.203.242"",""type"":""ONE_TO_ONE_NAT""}],""forwardedIps"":[],""ip"":""10.128.0.163"",""network"":""projects/685190392835/networks/default""}],; ""scheduling"":{""automaticRestart"":""TRUE"",""onHostMaintenance"":""MIGRATE"",""preemptible"":""FALSE""},; ""serviceAccounts"":{; ""685190392835-compute@developer.gserviceaccount.com"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]; },; ""default"":{; ""aliases"":[""default""],; ""email"":""685190392835-compute@developer.gserviceaccount.com"",; ""scopes"":[""https://www.googleapis.com/auth/userinfo.email"",; ""https://www.googleapis.com/auth/devstorage.full_control"",; ""https://www.googleapis.com/auth/compute""]}; },; ""tags"":[""testing""],; ""virtualClock"":{""driftToken"":""11704388862566216373""},; ""zone"":""projects/685190392835/zones/us-central1-b""; },. ""project"":{; ""attributes"":{; ""sshKeys"":""henrik:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChY0pdGXohYN7KRnQa3VIcDoVBrxZVHkhOFc1SROV2T+gTOunYbOW5C4V1P2MGG6FcKeoQTJzXgPbZurM5l1AfEbKeCde778QyyxbcjpYvKyY5b4qVO79nOKAg1qHIqUl+2txv7X6tPv4Q99T7UBechuc5awnkJZKqP1s1qJ9BYYYAPukZPbhAkjkvPSaJfIi+py2p6L9mXFtrAhYNH1flE9GErAsf2Hq8zQvx4hmTseumv4Fb9rVogcBJOqhmDQmYwTg2rEbdLAjbqY7Sf4kjdOfF7uhwasZgVMjF1z5utnvHd2wC/cjkuDZB4UhetLTeOWDtvgZxF/uVJSTU2AGD google-ssh {\""userName\"":\""henrik@travis-ci.org\"",\""expireOn\"":\""2016-03-04T00:52:57+0000\""}\nhenrik:ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJ6IOlU4vY6QLWKOX52Opcdx/2zNgJyMq7ntIf8qD+CbMMfUy5C6WJnjn4E2lvYqYaVIotY196cVazh0Jj8E/co= google-ssh {\""userName\"":\""henrik@travis-ci.org\"",\""expireOn\"":\""2016-03-04T00:52:42+0000\""}\n""; },; ""numericProjectId"":685190392835,; ""projectId"":""travis-ci-prod-2""; }; },. ```. In the meantime, I've also found [this site](https:/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018:2500,test,testing,2500,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018,1,['test'],['testing']
Testability,/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSink/fragments_test; src/test/resources/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSink/fragments_test/part-r-00001; src/test/resources/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSink/fragments_test/part-r-00002; src/test/resources/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSink/fragments_test/part-r-00003; src/test/resources/org/broadinstitute/hellbender/engine/VariantWalkerTest_VariantsWithReads.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_bisulfite_test.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test2.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.bam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.cram; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.fasta.fai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test_multiple.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/example_pfFail_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/first5000a.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/originalQuals.chr1.1-1K.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/unmapped.bam.bai; src/test/resources/org/broadinstitut,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:13443,test,test,13443,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.3.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.4.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.5.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.fakeSitesForTesting.b37.chr17.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.fakeSitesForTesting.b37.chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.manyObservations.full.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.manyObservations.piece.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.4379150-4379157.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10m-10m100.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.20.10m-10m100.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.21.10m-10m100.vcf.idx; ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:18309,test,test,18309,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate_allaligned.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.sharded.bam/part-r-00001.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.dict; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.chr17_69k_70k.dictFix.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.oq.read_consumes_zero_ref_bases.chr20.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/na.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/na.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/overlappingRead.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/solid.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/solid.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/clippingReadsTest.withRG.hg19.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/clippingReadsTestCRAM.cram; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/clippingReadsTest.withRG.hg19.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTestCRAM.QT_10.cram; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTestCRAM.QT_10.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15_1115.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:22271,test,test,22271,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/copynumber/collectfragmentcounts/collect-fragment-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.dict; src/test/resources/org/broadinstitute/hellbender/tools/count_bases.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/count_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads_sorted.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/count_reads_sorted.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/count_variants.blockgz.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/count_variants_withSequenceDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_combined_copy_number.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_combined_read_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_sample_bias_latent.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_sample_read_depth.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/calling_sample_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_combined_copy_number.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_combined_read_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_bias_latent.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_read_depth.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_sex_ge,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:27159,test,test,27159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (22); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa (84); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa (46); > D src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.fa (4); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assem,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:4691,test,test,4691,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtils.java (101); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunction.java (309); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SVReadLikelihoodCalculator.java (85); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSpark.java (239); > A src/main/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark.java (501); > M src/main/java/org/broadinstitute/hellbender/tools/walkers/genotyper/GenotypeLikelihoodCalculator.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/ReadLikelihoods.java (6); > M src/main/java/org/broadinstitute/hellbender/utils/genotyper/SampleList.java (2); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/LoglessPairHMM.java (1); > M src/main/java/org/broadinstitute/hellbender/utils/pairhmm/PairHMM.java (29); > D src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignAssembledContigsSparkTest.java (50); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/AlignmentRegionTest.java (45); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigAlignerTest.java (16); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/ContigsCollectionUnitTest.java (121); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/InversionReadLikelihoodCalculatorUnitTest.java (28); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/LocalAssemblyContigUnitTest.java (28); > M src/test/java/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSparkUnitTest.java (6); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVFastqUtilsUnitTest.java (186); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SVJunctionUnitTest.java (204); > A src/test/java/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicInversionGenotyperSparkUnitTest.java (1,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:2544,test,test,2544,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.fq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/utils/SVContext.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/splitNCigarReadsSnippet.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.sam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.sam; src/test/resources/org/broadinstitute/hellbender/tools/validation/marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/picard.marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/single.read.bai; src/test/resources/org/broadinstitute/hellbender/tools/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/valid.dict; src/test/resources/org/broadinstitute/hellbender/tools/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.indels.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AS,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:45246,test,test,45246,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/org/broadinstitute/hellbender/tools/walkers/annotator/VariantAnnotatorEngine/one_entry_source.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/convertToBasePairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/IntervalTest.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.copy.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDeletionRestrictToStartExpected.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.haploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.tetraploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotationsNoGroup.vcf.idx; src/test/resources/org/broadinstitute/hellben,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:49640,test,test,49640,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/pool_sequence_nov2016/data/gVCF/pl_ZC_0035_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/pl_GV_0036_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/pl_CW_0037_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/pl_DL_0038_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/pl_KS_0039_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/pl_OF_0040_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/pl_WR_0041_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/pl_RI_0042_chr26.raw.g.vcf -nt 10 --max_genotype_count 1024 -L chr26 --dbsnp /usr/users/geibel/chicken/chickenrefgen/ENSEMBL_20170106/Gallus_gallus.updated.vcf -o /usr/users/geibel/chicken/pool_sequence_nov2016/data/rawVCF/IndandPool_chr26.raw.vcf ; ```. The user actually includes a shell script in the test data bundle called `JointGenotyping_chr26.sh`. ---; ### The error shows:; ```; ##### ERROR --; ##### ERROR stack trace ; java.lang.IllegalArgumentException: the number of genotypes is too large for ploidy 20 and allele 16: approx. 3247943160; 	at org.broadinstitute.gatk.tools.walkers.genotyper.GenotypeLikelihoodCalculators.getInstance(GenotypeLikelihoodCalculators.java:319); 	at org.broadinstitute.gatk.tools.walkers.variantutils.ReferenceConfidenceVariantContextMerger.mergeRefConfidenceGenotypes(ReferenceConfidenceVariantContextMerger.java:461); 	at org.broadinstitute.gatk.tools.walkers.variantutils.ReferenceConfidenceVariantContextMerger.merge(ReferenceConfidenceVariantContextMerger.java:164); 	at org.broadinstitute.gatk.tools.walkers.variantutils.GenotypeGVCFs.map(GenotypeGVCFs.java:302); 	at org.broadinstitute.gatk.tools.walkers.variantutils.GenotypeGVCFs.map(GenotypeGVCFs.java:135); 	at org.broadinstitute.gatk.engine.traversals.TraverseLociNano$TraverseLociMap.apply(TraverseL,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2946:9834,test,test,9834,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2946,1,['test'],['test']
Testability,"/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.bam""; ],; ""FunctionalEquivalenceTest.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|4fa4b23a1b3756080aba2f1eecd791380b3921a6""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEqui",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135:4108,benchmark,benchmarking,4108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6925#issuecomment-760278135,2,['benchmark'],['benchmarking']
Testability,"/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.bam""; ],; ""FunctionalEquivalenceTest.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ],; ""gatk_docker"": ""image_build:gatk|5cdd2eaebb27509947cde3dbd26ee9a3fce72352""; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEqui",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659:4108,benchmark,benchmarking,4108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760340659,2,['benchmark'],['benchmarking']
Testability,"/reprocessed_data/CHMI_CHMI3_WGS4/CHMI_CHMI3_WGS4.bam""; ],; ""FunctionalEquivalenceTest.ref_dict"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.dict"",; ""FunctionalEquivalenceTest.ref_fasta"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"",; ""FunctionalEquivalenceTest.ref_fasta_index"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.fasta.fai"",; ""FunctionalEquivalenceTest.replicate_no"": [; ""1"",; ""2"",; ""3"",; ""4""; ],; ""FunctionalEquivalenceTest.sample_id"": [; ""CHM1"",; ""CHM2"",; ""CHM3"",; ""CHM4""; ],; ""FunctionalEquivalenceTest.scattered_calling_intervals_lists"": [; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt"",; ""gs://broad-dsde-methods-dragen/wgs_scattered_calling_intervals.txt""; ],; ""FunctionalEquivalenceTest.truth_vcf"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz""; ],; ""FunctionalEquivalenceTest.truth_vcf_index"": [; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi"",; ""gs://broad-dsde-methods-ckachulis/benchmarking/Truth_Sets/chm.full.m38.vcf.gz.tbi""; ]; },; ""eval_input"": {; ""GatkDragenConcordanceEvaluation.confidence_intervals"": ""test_output:FunctionalEquivalenceTest.out_confidence_intervals"",; ""GatkDragenConcordanceEvaluation.create_roc_plot"": ""test_output:FunctionalEquivalenceTest.out_create_roc_plot"",; ""GatkDragenConcordanceEvaluation.dataset"":",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440:4211,benchmark,benchmarking,4211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7039#issuecomment-760410440,2,['benchmark'],['benchmarking']
Testability,/resources/large/K-562.duplicateMarked.chr20.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor.bam.bai; src/test/resources/large/NA12878.RNAseq.bai; src/test/resources/large/SVIntegrationTest.bam.bai; src/test/resources/large/very-small-gnomad.vcf.idx; src/test/resources/large/VQSR/ALL.wgs.indels_mills_devine_hg19_leftAligned_collapsed_double_hit.sites.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/combined.phase1.chr20.raw.indels.filtered.sites.1M-10M.vcf.idx; src/test/resources/large/VQSR/dbsnp_132_b37.leftAligned.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/expected/snpRecal.scattered.vcf.idx; src/test/resources/large/VQSR/expected/snpSampledRecal.vcf.idx; src/test/resources/large/VQSR/indelRecal.vcf.idx; src/test/resources/large/VQSR/Omni25_sites_1525_samples.b37.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf.idx; src/test/resources/large/VQSR/sites_r27_nr.b37_fwd.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/snpRecal.vcf.idx; src/test/resources/NA12878.chr17_69k_70k.dictFix.bam.bai; src/test/resources/NA12878.chr17_69k_70k.dictFix.cram.crai; src/test/resources/org/broadinstitute/hellbender/engine/ambiguityCodes.dict; src/test/resources/org/broadinstitute/hellbender/engine/ambiguityCodes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.10000000-10000020.with.unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.snippet_with_unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/CEUTrio.HiSeq.WGS.b37.NA12878.snippet_with_unm,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:7419,test,test,7419,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/resources/large/gencode.v26.primary_assembly.annotation.XYZ.gtf.idx; src/test/resources/large/gvcfs/CEUTrio.20.21.gatk3.4.g.vcf.idx; src/test/resources/large/gvcfs/combined.gatk3.7_30_ga4f720357.g.vcf.gz.tbi; src/test/resources/large/gvcfs/combined.gatk3.7.g.vcf.gz.tbi; src/test/resources/large/gvcfs/gatk3.7_30_ga4f720357.24_sample.21.g.vcf.idx; src/test/resources/large/gvcfs/HG00096.g.vcf.gz.tbi; src/test/resources/large/gvcfs/HG00268.g.vcf.gz.tbi; src/test/resources/large/gvcfs/NA19625.g.vcf.gz.tbi; src/test/resources/large/Homo_sapiens_assembly38.20.21.dict; src/test/resources/large/Homo_sapiens_assembly38.20.21.fasta.fai; src/test/resources/large/human_g1k_v37.20.21.fasta.amb; src/test/resources/large/human_g1k_v37.20.21.fasta.ann; src/test/resources/large/human_g1k_v37.20.21.fasta.bwt; src/test/resources/large/human_g1k_v37.20.21.fasta.pac; src/test/resources/large/human_g1k_v37.20.21.fasta.sa; src/test/resources/large/K-562.duplicateMarked.chr20.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor.bam.bai; src/test/resources/large/NA12878.RNAseq.bai; src/test/resources/large/SVIntegrationTest.bam.bai; src/test/resources/large/very-small-gnomad.vcf.idx; src/test/resources/large/VQSR/ALL.wgs.indels_mills_devine_hg19_leftAligned_collapsed_double_hit.sites.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/combined.phase1.chr20.raw.indels.filtered.sites.1M-10M.vcf.idx; src/test/resources/large/VQSR/dbsnp_132_b37.leftAligned.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/expected/snpRecal.scattered.vcf.idx; src/test/resources/large/VQSR/expected/snpSampledRecal.vcf.idx; src/test/resources/large/VQSR/indelRecal,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:6494,test,test,6494,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/IntervalTest.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.copy.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDeletionRestrictToStartExpected.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.haploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.tetraploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotationsNoGroup.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotations.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBasepairResolutionInput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleHaploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleTetraploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGV,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:50398,test,test,50398,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/resources/org/broadinstitute/hellbender/utils/IndexUtils/test_bed_for_index.bed.idx; src/test/resources/org/broadinstitute/hellbender/utils/IndexUtils/test_variants_for_index.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/utils/IndexUtils/test_variants_for_index.vcf.bgz.tbi; src/test/resources/org/broadinstitute/hellbender/utils/read/comparator_test_with_unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/utils/read/ReadUtils/print_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/utils/samples/SampleUtils/emptySamples.samples; src/test/resources/org/broadinstitute/hellbender/utils/samples/SampleUtils/overlapsWithSamples2.samples; src/test/resources/org/broadinstitute/hellbender/utils/samples/SampleUtils/samples1.samples; src/test/resources/org/broadinstitute/hellbender/utils/samples/SampleUtils/samples2.samples; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test2.dict; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test2.fasta.fai; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test2.intervals; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test2.sorted.bam.bai; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test.dict; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test.fasta.fai; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test.sorted.bam.bai; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test_variants_for_index.vcf.bgz.tbi; src/test/resources/org/broadinstitute/hellbender/utils/SequenceDictionaryUtils/test.vcf.idx; src/test/resources/org/broadinstitute/hellbender/utils/test/SamAssertionUtilsUnitTest/file1.bam.bai; src/test/resources/problematicFASTA.dict; src/test/resourc,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:67681,test,test,67681,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.fq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.fastq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.fq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/utils/SVContext.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/splitNCigarReadsSnippet.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.fasta.fai; src/test/resources/org/broadinstitute/h,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:43982,test,test,43982,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/sim_model/target_specific_mean_log_bias.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/target_specific_unexplained_variance.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/acnv-segments-from-allelic-integration.seg; src/test/resources/org/broadinstitute/hellbender/tools/exome/af-params-from-allelic-integration.af.param; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-1.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-2.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-3.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-4.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/dupReadsMini.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12778.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12872.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-sample-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/test_reference.dict; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/test_reference.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/exome/conversion/allelicbalancecaller/cell_line_full-sim-final.seg; src/test/resources/org/broadinstitute/hellbender/tools/exome/create-pon-some-targets.bed; src/test/resources,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:29647,test,test,29647,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/sparkcache --class org.broadinstitute.hellbender.Main /gpfs/software/spark/gatk4onspark.jar PrintReadsSpark -I /gpfs/home/tpathare/gatk/src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O /gpfs/home/tpathare/test/; + /spark-1.6.2-bin-hadoop2.6//bin/spark-submit --master spark://hpcgenomicn24:6311 --conf spark.executor.memory=2g --conf spark.driver.memory=2g --conf spark.local.dir=/gpfs/ngsdata/sparkcache --class org.broadinstitute.hellbender.Main /gpfs/software/spark/gatk4onspark.jar PrintReadsSpark -I /gpfs/home/tpathare/gatk/src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O /gpfs/home/tpathare/test/; 23:25:07.475 INFO IntelGKLUtils - Trying to load Intel GKL library from:; 	jar:file:/gpfs/software/spark/gatk4onspark.jar!/com/intel/gkl/native/libIntelGKL.so; 23:25:07.552 INFO IntelGKLUtils - Intel GKL library loaded from classpath.; [November 16, 2016 11:25:07 PM AST] org.broadinstitute.hellbender.tools.spark.pipelines.PrintReadsSpark --output /gpfs/home/tpathare/test/ --input /gpfs/home/tpathare/gatk/src/test/resources/NA12878.chr17_69k_70k.dictFix.bam --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --disableSequenceDictionaryValidation false --shardedOutput false --numReducers 0 --sparkMaster local[*] --help false --version false --verbosity INFO --QUIET false --use_jdk_deflater false --disableAllReadFilters false; [November 16, 2016 11:25:07 PM AST] Executing as root@hpcgenomicn24 on Linux 2.6.32-358.el6.x86_64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_66-b17; Version: Version:4.alpha.2-98-g8fa5092-SNAPSHOT; 23:25:07.556 INFO PrintReadsSpark - Defaults.BUFFER_SIZE : 131072; 23:25:07.556 INFO PrintReadsSpark - Defaults.COMPRESSION_LEVEL : 5; 23:25:07.556 INFO PrintReadsSpark - Defaults.CREATE_INDEX : false; 23:25:07.556 INFO PrintReadsSpark - Defaults.CREATE_MD5 : false; 23:25:07.556 INFO PrintReadsSpark - Defaults.CUSTOM_READER_FACTORY : ; 23:25:07.556 INFO PrintR",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2268:1565,test,test,1565,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2268,2,['test'],['test']
Testability,/summary_alignment_stats_test2.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.bam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.cram; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.fasta.fai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test_multiple.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectAlignmentSummaryMetrics/summary_alignment_stats_test.sam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/example_pfFail_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/first5000a.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/originalQuals.chr1.1-1K.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/valid.dict; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectBaseDistributionByCycle/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/collect_quality_yield_metrics.bam; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/collect_quality_yield_metrics.cram; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/metrics/analysis/CollectQualityYieldMetrics/valid.dict;,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:14223,test,test,14223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_39-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_40-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_41-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_42-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_43-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_44-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_45-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_1-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_2-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_3-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_4-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_5-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_6-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_7-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_8-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_9-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_10-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_11-calls --calls-shard-path /data/xiangxd/project/test/PD_WES,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8776:37893,test,test,37893,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8776,1,['test'],['test']
Testability,/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_39-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_40-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_41-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_42-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_43-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_44-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_45-model --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_1-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_2-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_3-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_4-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_5-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_6-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_7-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_8-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_9-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_10-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_11-calls --calls-shard-path /data/xiangxd/project/test/PD_WES,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8776:13429,test,test,13429,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8776,2,['test'],['test']
Testability,/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_39-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_40-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_41-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_42-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_43-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_44-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_45-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_1-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_2-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_3-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_4-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_5-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_6-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_7-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_8-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_9-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_10-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_11-model --model-shard-path /data/xiangxd/project/test/PD_WES,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8776:27921,test,test,27921,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8776,1,['test'],['test']
Testability,/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_8-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_9-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_10-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_11-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_12-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_13-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_14-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_15-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_16-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_17-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_18-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_19-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_20-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_21-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_22-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_23-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_24-calls --calls-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_25-calls --calls-shard-path /data/xiangxd/project/test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8776:14976,test,test,14976,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8776,3,['test'],['test']
Testability,/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_8-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_9-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_10-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_11-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_12-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_13-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_14-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_15-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_16-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_17-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_18-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_19-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_20-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_21-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_22-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_23-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_24-model --model-shard-path /data/xiangxd/project/test/PD_WES_50/cnv_calling/GATK_gCNV/infos/cohort_all/cohort_25-model --model-shard-path /data/xiangxd/project/test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8776:9990,test,test,9990,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8776,3,['test'],['test']
Testability,/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wgs_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv/realistic-targets.tab; src/test/resources/large/cnv_somatic_workflows_test_files/ice_targets_sample-chr20.interval_list; src/test/resources/large/cnv_somatic_workflows_test_files/wes-do-gc.pon.hdf5; src/test/resources/large/cnv_somatic_workflows_test_files/wes-no-gc.pon.hdf5; src/test/resources/large/cnv/truncated-realistic-targets.tab; src/test/resources/large/dbsnp_138.b37.1.1-65M.vcf.idx; src/test/resources/large/dbsnp_138.b37.20.21.vcf.blockgz.gz.tbi; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.doNotFixOverhangs.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxBasesInOverhang5.bai; src/test/resources/large/expected.NA12878.RNAseq.splitNcigarReads.maxMismatchesInOverhang0.bai; src/test/resources/large/gencode.v19.LargeFile.gtf.idx; src/test/resources/large/gencode.v26.primary_assembly.annotation.XYZ.gtf.idx; src/test/resources/large/gvcfs/CEUTrio.20.21.gatk3.4.g.vcf.idx; src/test/resources/large/gvcfs/combined.gatk3.7_30_ga4f720357.g.vcf.gz.tbi; src/test/resources/large/gvcfs/combined.gatk3.7.g.vcf.gz.tbi; src/test/resources/large/gvcfs/gatk3.7_30_ga4f720357.24_sample.21.g.vcf.idx; src/test/resources/large/gvcfs/HG00096.g.vcf.gz.tbi; src/test/resources/large/gvcfs/HG00268.g.vcf.gz.tbi; src/test/resources/large/gvcfs/NA19625.g.vcf.gz.tbi; src/test/resources/large/Homo_sapiens_assembly38.20.21.dict; src/test/resources/large/Homo_sapiens_assembly38.20.21.fasta.fai; src/test/resources/large/human_g1k_v37.20.21.fasta.amb; src/test/resources/large/human_g1k_v37.20.21.fasta.ann; src/test/resources/large/human_g1k_v37.20.21.fasta.bwt; src/test/resources/large/human_g1k_v37.20.21.fasta.p,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:5362,test,test,5362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/resources/large/gvcfs/HG00268.g.vcf.gz.tbi; src/test/resources/large/gvcfs/NA19625.g.vcf.gz.tbi; src/test/resources/large/Homo_sapiens_assembly38.20.21.dict; src/test/resources/large/Homo_sapiens_assembly38.20.21.fasta.fai; src/test/resources/large/human_g1k_v37.20.21.fasta.amb; src/test/resources/large/human_g1k_v37.20.21.fasta.ann; src/test/resources/large/human_g1k_v37.20.21.fasta.bwt; src/test/resources/large/human_g1k_v37.20.21.fasta.pac; src/test/resources/large/human_g1k_v37.20.21.fasta.sa; src/test/resources/large/K-562.duplicateMarked.chr20.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/normal.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_3.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor_4.bam.bai; src/test/resources/large/mutect/dream_synthetic_bams/tumor.bam.bai; src/test/resources/large/NA12878.RNAseq.bai; src/test/resources/large/SVIntegrationTest.bam.bai; src/test/resources/large/very-small-gnomad.vcf.idx; src/test/resources/large/VQSR/ALL.wgs.indels_mills_devine_hg19_leftAligned_collapsed_double_hit.sites.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/combined.phase1.chr20.raw.indels.filtered.sites.1M-10M.vcf.idx; src/test/resources/large/VQSR/dbsnp_132_b37.leftAligned.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/expected/snpRecal.scattered.vcf.idx; src/test/resources/large/VQSR/expected/snpSampledRecal.vcf.idx; src/test/resources/large/VQSR/indelRecal.vcf.idx; src/test/resources/large/VQSR/Omni25_sites_1525_samples.b37.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf.idx; src/test/resources/large/VQSR/sites_r27_nr.b37_fwd.20.1M-10M.vcf.idx; src/test/resources/large/VQSR/snpRecal.vcf.idx; src/test/resources/NA12878.chr17_69k_70k.dictFix.bam.bai; src/test/resources/NA12878.chr17_69k_70k.dictFix.cram.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:6913,test,test,6913,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"/test/resources/large/org/broadinstitute/hellbender/tools/walkers/vqsr/scalable/train/expected/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5 /repo/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5. file1 file2; ---------------------------------------; x x / ; x x /data ; x x /data/scores . group : </> and </>; 0 differences found; group : </data> and </data>; 0 differences found; dataset: </data/scores> and </data/scores>; size: [445] [445]; position scores scores difference ; ------------------------------------------------------------; [ 60 ] -0.419202 -0.419202 5.55112e-17 ; 1 differences found; ```. Looks pretty negligible to me! :stuck_out_tongue_closed_eyes: Probably a result of the native code being called by the python/ML packages used in these tools; even minor changes in the compilers across Ubuntu versions might introduce differences like these. A quick fix might be to replace all system calls to `h5diff` in these tests with `h5diff --use-system-epsilon`; seems to do the trick here. But if that doesn't fix all test cases, then perhaps you can relax things with `h5diff -p EPSILON`, where `EPSILON` is a relative threshold. Probably OK to pick something like `1E-6`. OK if I leave it to you to try this or otherwise check the rest of the cases?. Sorry for the inconvenience! I think the exact-match test worked as intended here, but I probably could've put in better messaging originally. Unfortunately, it's a bit awkward to grab the output of system commands. And thanks for dealing with conda again (a necessary evil, unless we want to reimplement the entire field of machine learning in Java)! I'll experiment to see if I can't get the more recent version used in #8561 (23.10) working with the current environment---probably just some minor tweak to the pip version is needed to get around the error you're seeing. You could try unpinning it to see what gets pulled in. It would be great if we could get off",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931:1378,test,tests,1378,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931,2,['test'],['tests']
Testability,/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.dict; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.chr17_69k_70k.dictFix.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.oq.read_consumes_zero_ref_bases.chr20.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/na.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/na.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/overlappingRead.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/solid.bam; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/solid.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/clippingReadsTest.withRG.hg19.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/clippingReadsTestCRAM.cram; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/clippingReadsTest.withRG.hg19.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTestCRAM.QT_10.cram; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTestCRAM.QT_10.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15_1115.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15_1115.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15.bam; src/test/resources/org/broadinstitute/hellbender/tools/ClipReads/expected.clippingReadsTest.withRG.hg19.CT_15.tmp; src/test/resources/org/broadinstitute/hellbender/tools/ClipRea,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:22611,test,test,22611,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.empty.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.noSG.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg1.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg2.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg3.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg4.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg5.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.dict; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/dream3-chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_4.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/na12878-chr20-consumes-zero-reference-bases.bai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/repeated_reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/validation/nearby_indels.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/NA12878.rg_subset.chr1.recal_data.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/NA12878.rg_subset.chrY_Plus.recal_data.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/originalQuals.chr1.1-1K.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.chr1only.dict; src/test/resources/org/broadinstitute/hellbender/tools/print_reads.chr1only.fasta.fai; src/test/reso,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:38941,test,test,38941,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_some_missing.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_with_bait_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotyper_agilent_targets_trunc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_basic.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_extended.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-basic-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-full-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-intermediate-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-simplified-for-allelic-fraction-transformation.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/test_reference.dict; src/test/resources/org/broadinstitute/hellbender/tools/exome/test_reference.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.bai; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.bam; src/test/resources/org/broadinstitute/hellbender/tools/expected.originalQuals.chr1.1-1K.bam.QT_10_CT_15_X_CCCCC.tmp; src/test/resources/org/broadinstitute/hellbender/tools/FixCallSetSampleOrdering/badlySorted1000-batch-size13.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.fasta; src/test/resources/org/broadinstitute/he,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:35359,test,test,35359,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.alleleSpecific.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.alleleSpecific.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/pretendTobeTetraPloidTetraAllelicSite.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.empty.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.noSG.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg1.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg2.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg3.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg4.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg5.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.dict; src/test/resources/org/broadinstitute/hellbender/tools/Homo_sapiens_assembly18.10k_lines.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/dream3-chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/dream/vcfs/sample_1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/mutect/d,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:37976,test,test,37976,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/resources/org/broadinstitute/hellbender/tools/validation/single.read.bai; src/test/resources/org/broadinstitute/hellbender/tools/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/valid.dict; src/test/resources/org/broadinstitute/hellbender/tools/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.indels.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.HACKEDhg38header.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.snps.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/CombineGVCFs.output.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/CombineGVCFs.output.withoutIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/GenotypeGVCFs.output.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/HCOutputWithASAnnotation.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.unindexed.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.InsertSizeRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.MateRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadi,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:46696,test,test,46696,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtriMixedPloidyTest.vcf; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotypePosteriors/CEUtrioPopPriorsTest_chr1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/variantutils/CalculateGenotype,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:61317,test,test,61317,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadCounter/NA12878.chr20_2444518_2637800.RNAseq.warnings.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/UnmarkDuplicates/allDuplicates.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_incompatibleDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents_lexDict.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/complexEvents.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet_BAD_INCOMPLETE_REGION.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.BAD_MISSING_NON_REF.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/NA12891.AS.chr20snippet.missingrefblock.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleBad.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleGood.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationExampleRSIDonPositionNotInDBSNP.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/ValidateVariants/validationUnusedAllelesBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/validation/basicshortmutpileup/IS3.snv.indel.sv-vs-G15512.prenormal.sorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/vali,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:60850,test,test,60850,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/tests/classes/org.broadinstitute.hellbender.tools.walkers.filters.VariantFiltrationIntegrationTest.html#testClusteredSnps. ```; java.lang.RuntimeException: htsjdk.tribble.TribbleException: Exception encountered in worker thread.; at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.executeTest(IntegrationTestSpec.java:153); at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.executeTest(IntegrationTestSpec.java:126); at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.executeTest(IntegrationTestSpec.java:108); at org.broadinstitute.hellbender.tools.walkers.filters.VariantFiltrationIntegrationTest.testClusteredSnps(VariantFiltrationIntegrationTest.java:36); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:639); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:773); at org.testng.TestRunner.run(TestRunner.java:623); at org.testng.SuiteRunner.runTest(SuiteRunner.java:357); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310); at org.testng.SuiteRunner.run(SuiteRunner.java:259); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185); at org.testng.TestNG.ru,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1638:1353,test,testng,1353,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1638,1,['test'],['testng']
Testability,/tools/ArtificallyContaminatedBams/contamination.case.3.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.4.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.5.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.6.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.7.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.8.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.1.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.2.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.3.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.4.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.5.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.fakeSitesForTesting.b37.chr17.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.fakeSitesForTesting.b37.chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.manyObservations.full.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.manyObservations.piece.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.cram.bai; src/test/resources/org/broadinstitute/hellbender/t,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:17438,test,test,17438,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/tools/coveragemodel/calling_sample_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_combined_copy_number.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_combined_read_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_bias_latent.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_read_depth.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/learning_sample_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_contig_anots.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_HMM_priors_table.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/mean_bias_covariates_matrix.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/target_specific_mean_log_bias.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/target_specific_unexplained_variance.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/acnv-segments-from-allelic-integration.seg; src/test/resources/org/broadinstitute/hellbender/tools/exome/af-params-from-allelic-integration.af.param; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-1.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-2.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-3.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-4.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/dupReadsMini.bam.bai; src/test/resources/org/broadinstitute,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:28632,test,test,28632,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/tools/coveragemodel/sim_model; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/mean_bias_covariates_matrix.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/target_specific_mean_log_bias.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_model/target_specific_unexplained_variance.tsv; src/test/resources/org/broadinstitute/hellbender/tools/coveragemodel/sim_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/acnv-segments-from-allelic-integration.seg; src/test/resources/org/broadinstitute/hellbender/tools/exome/af-params-from-allelic-integration.af.param; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-1.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-2.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-3.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/allelic-pon-test-pulldown-4.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/dupReadsMini.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12778.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12872.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/exome-read-counts-sample-NA12878.output; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/test_reference.dict; src/test/resources/org/broadinstitute/hellbender/tools/exome/calculatetargetcoverage/test_reference.fasta.fai; src/test/resources/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:29446,test,test,29446,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,['test'],"['test', 'test-pulldown-']"
Testability,/tools/exome/exome-read-counts-test-targets.tsv.idx; src/test/resources/org/broadinstitute/hellbender/tools/exome/exome-read-counts-test-targets-wo-coords.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/homo_sapiens_germline_HMM_priors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/germlinehmm/TCGA_T_matrix_autosomal_bad.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/pon-input.tab; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_autosomal_annot.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_class.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/contig_annots_bad_missing_some_annots.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_rcc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_sex_genotypes.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_some_missing.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/ice_trunc_targets_with_bait_counts.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotyper_agilent_targets_trunc.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_basic.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/sexgenotyper/sex_genotypes_broadies_extended.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-basic-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-full-with-phase-posteriors.tsv; src/test/resources/org/broadinstitute/hellbender/tools/exome/snps-intermediate-with-phase-po,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:34404,test,test,34404,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/tools/flag_stat.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.fasta; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr22_27M_37M.tiny.bam; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr22_27M_37M.tiny.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr3_1K_11K.tiny.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/testHeaderContigLineSorting1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/testHeaderContigLineSorting2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.3.8-4-g7b0250253f.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.alleleSpecific.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.alleleSpecific.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/pretendTobeTetraPloidTetraAllelicSite.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.empty.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.noSG.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.sg1.table.gz; src/test/resources/org/broadinstitute/hell,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:37232,test,test,37232,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/tools/walkers/CombineGVCFs/spanningDel.1.copy.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDeletionRestrictToStartExpected.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.haploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.tetraploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotationsNoGroup.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotations.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBasepairResolutionInput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleHaploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleTetraploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testWrongReferenceBaseBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-3.vcf.idx; src/test/,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:50750,test,test,50750,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,['test'],"['test', 'testBasepairResolutionInput']"
Testability,/tools/walkers/GenotypeGVCFs/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/leadingDeletion.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.combined.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/spanningDel.depr.delOnly.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/testUpdatePGT.gvcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.markedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/example.chr1.1-1K.unmarkedDups.noDups.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/markDups.test2reads.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge2.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/merge3.sam; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes_casava.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.dict; src/test/resources/org/broadinstitute/hellbender/tools/walkers/MarkDuplicatesGATK/optical_dupes.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.baq.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/qc/pileup/reads_data_source_test1.samtools.pileup.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/rnaseq/ASEReadC,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:58346,test,test,58346,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/tools/walkers/annotator/allelespecific/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.InsertSizeRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.MateRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.MateRankSum.chr20snippet.withoutIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/VariantAnnotatorEngine/one_entry_source.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/convertToBasePairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcf.basepairResolution.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/gvcfExample2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/IntervalTest.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.copy.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDeletionRestrictToStart,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:49126,test,test,49126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.13/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk8 | [33966.3](https://travis-ci.com/broadinstitute/gatk/jobs/501303124) | [logs](https://storage.googleapis.com/hellbender-test-logs/build_reports/ah_var_store_33966.3/tests/test/index.html) |; | unit | openjdk11 | [33966.13](https://travis-ci.com/broadinstitute/gatk/jobs/501303134) | [logs](https://storage.googleapis.com/hellbende,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679:1459,test,tests,1459,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7221#issuecomment-827314679,2,['test'],"['test', 'tests']"
Testability,/validation/marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/picard.marked.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam; src/test/resources/org/broadinstitute/hellbender/tools/validation/single.read.bai; src/test/resources/org/broadinstitute/hellbender/tools/valid.cram.crai; src/test/resources/org/broadinstitute/hellbender/tools/valid.dict; src/test/resources/org/broadinstitute/hellbender/tools/valid.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.indels.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.HACKEDhg38header.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.postSNPinput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.AStest.snps.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/VQSR/VQSR.mixedTest.recal.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/CombineGVCFs.output.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/CombineGVCFs.output.withoutIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/GenotypeGVCFs.output.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/HCOutputWithASAnnotation.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.unindexed.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.InsertSi,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:46516,test,test,46516,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/walkers/CombineGVCFs/spanningDel.1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDeletionRestrictToStartExpected.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.haploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/spanningDel.many.tetraploid.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotationsNoGroup.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testAlleleSpecificAnnotations.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBasepairResolutionInput.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testBreakBandsArgumet.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleHaploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSampleTetraploid.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testMultipleSpanningDeletionsForOneSample.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/testWrongReferenceBaseBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:50863,test,test,50863,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,2,['test'],"['test', 'testBreakBandsArgumet']"
Testability,/wes_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/bias_covariates_ARD_coefficients_history.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_max_likelihood_estimate_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_precision_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_Viterbi_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/log_likelihood_history.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_bias_latent_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_log_likelihoods.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_read_depth_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74NEG.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P2T.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:2672,test,test,2672,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,/wes_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/bias_covariates_ARD_coefficients_history.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_max_likelihood_estimate_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_precision_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/copy_ratio_Viterbi_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/log_likelihood_history.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_bias_latent_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_log_likelihoods.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_read_depth_posteriors.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/sample_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74NEG.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P2T.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/segments/SM-74P35.seg; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/total_covariate_bias_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_fina,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:2913,test,test,2913,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"0	0|1	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|1	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0	0|0; ```; Running `$HOME/gatk-4.0.11.0/gatk --java-options ""-Xmx4g"" HaplotypeCaller -R $HOME/GRCh37files/hs37d5.fa -I /mnt/fast/test.bam -O test.out.vcf.gz -L 22 --genotyping-mode GENOTYPE_GIVEN_ALLELES --alleles test.vcf.gz`, the resulting error is:; ```; java.lang.IllegalStateException: Allele in genotype GGTTTGTTT not in the variant context [GGTTTGTTT*, GGTTTGTTTGTTT, GGTTTGTTTGTTTGTTT, G]; at htsjdk.variant.variantcontext.VariantContext.validateGenotypes(VariantContext.java:1360); at htsjdk.variant.variantcontext.VariantContext.validate(VariantContext.java:1298); at htsjdk.variant.variantcontext.VariantContext.<init>(VariantContext.java:401); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:494); at htsjdk.variant.variantcontext.VariantContextBuilder.make(VariantContextBuilder.java:488); at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:864); at org.broadinstitute.hellbender.utils.variant.GATKVariantContextUtils.simpleMerge(GATKVariantContextUtils.java:646); at org.broadinstitute.hellbender.tools.walkers",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5355:40869,test,test,40869,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5355,1,['test'],['test']
Testability,"0 samples generated.; 09:46:01.577 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:01.577 INFO GibbsSampler - MCMC sampling complete.; 09:46:01.621 INFO MultidimensionalModeller - Smoothing iteration: 2; 09:46:01.621 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 398; 09:46:01.621 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 341; 09:46:01.622 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:02.459 INFO GibbsSampler - Starting MCMC sampling.; 09:46:04.896 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:07.292 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:09.705 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:12.179 INFO GibbsSampler - MCMC sampling complete.; 09:46:12.179 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:12.202 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:12.546 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599161.730531...; 09:46:12.546 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.041338, outlierProbability=0.030947}; 09:46:12.859 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599150.005317...; 09:46:12.859 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151592, biasVariance=0.036533, outlierProbability=0.037484}; 09:46:13.165 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599148.402059...; 09:46:13.165 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149236, biasVariance=0.034264, outlierProbability=0.038997}; 09:46:13.451 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599147.957754...; 09:46:13.451 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:7053,log,log,7053,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:46:39.723 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:39.723 INFO GibbsSampler - MCMC sampling complete.; 09:46:39.763 INFO MultidimensionalModeller - Smoothing iteration: 3; 09:46:39.763 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 341; 09:46:39.764 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 326; 09:46:39.764 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:46:40.559 INFO GibbsSampler - Starting MCMC sampling.; 09:46:42.928 INFO GibbsSampler - 25 of 100 samples generated.; 09:46:45.335 INFO GibbsSampler - 50 of 100 samples generated.; 09:46:47.720 INFO GibbsSampler - 75 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - 100 of 100 samples generated.; 09:46:50.130 INFO GibbsSampler - MCMC sampling complete.; 09:46:50.130 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:46:50.155 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:46:50.491 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599186.382799...; 09:46:50.491 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.041597, outlierProbability=0.031043}; 09:46:50.793 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599173.973431...; 09:46:50.793 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151674, biasVariance=0.036521, outlierProbability=0.036858}; 09:46:51.096 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599172.045766...; 09:46:51.096 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149513, biasVariance=0.034385, outlierProbability=0.039399}; 09:46:51.370 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599171.568776...; 09:46:51.370 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:9352,log,log,9352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:47:17.895 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:17.895 INFO GibbsSampler - MCMC sampling complete.; 09:47:17.941 INFO MultidimensionalModeller - Smoothing iteration: 4; 09:47:17.942 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 326; 09:47:17.942 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 320; 09:47:17.942 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:18.756 INFO GibbsSampler - Starting MCMC sampling.; 09:47:21.195 INFO GibbsSampler - 25 of 100 samples generated.; 09:47:23.597 INFO GibbsSampler - 50 of 100 samples generated.; 09:47:26.031 INFO GibbsSampler - 75 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:28.533 INFO GibbsSampler - MCMC sampling complete.; 09:47:28.533 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:47:28.553 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:47:28.883 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599193.821455...; 09:47:28.884 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.041615, outlierProbability=0.031024}; 09:47:29.188 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599181.471228...; 09:47:29.188 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.151686, biasVariance=0.036547, outlierProbability=0.036766}; 09:47:29.513 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599179.528974...; 09:47:29.514 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149492, biasVariance=0.034434, outlierProbability=0.039341}; 09:47:29.794 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599179.050215...; 09:47:29.794 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:11651,log,log,11651,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:47:55.984 INFO GibbsSampler - 100 of 100 samples generated.; 09:47:55.984 INFO GibbsSampler - MCMC sampling complete.; 09:47:56.024 INFO MultidimensionalModeller - Smoothing iteration: 5; 09:47:56.025 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 320; 09:47:56.025 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 315; 09:47:56.025 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:47:56.852 INFO GibbsSampler - Starting MCMC sampling.; 09:47:59.368 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:01.836 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:04.204 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:06.588 INFO GibbsSampler - MCMC sampling complete.; 09:48:06.589 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:06.609 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:06.967 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.667518...; 09:48:06.967 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.041090, outlierProbability=0.031116}; 09:48:07.271 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.280111...; 09:48:07.271 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152065, biasVariance=0.036781, outlierProbability=0.037210}; 09:48:07.582 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.550266...; 09:48:07.582 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149834, biasVariance=0.034708, outlierProbability=0.039514}; 09:48:07.846 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.121676...; 09:48:07.846 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:13950,log,log,13950,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:48:33.639 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:33.639 INFO GibbsSampler - MCMC sampling complete.; 09:48:33.671 INFO MultidimensionalModeller - Smoothing iteration: 6; 09:48:33.671 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 315; 09:48:33.672 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:48:33.672 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:48:34.470 INFO GibbsSampler - Starting MCMC sampling.; 09:48:36.720 INFO GibbsSampler - 25 of 100 samples generated.; 09:48:39.070 INFO GibbsSampler - 50 of 100 samples generated.; 09:48:41.417 INFO GibbsSampler - 75 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - 100 of 100 samples generated.; 09:48:43.749 INFO GibbsSampler - MCMC sampling complete.; 09:48:43.749 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:48:43.771 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:48:44.116 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:48:44.116 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:48:44.424 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:48:44.424 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:48:44.714 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:48:44.714 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:48:44.991 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:48:44.991 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:16249,log,log,16249,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,"0 samples generated.; 09:49:11.512 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:11.512 INFO GibbsSampler - MCMC sampling complete.; 09:49:11.543 INFO MultidimensionalModeller - Smoothing iteration: 7; 09:49:11.543 INFO MultidimensionalModeller - Number of segments before smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Number of segments after smoothing iteration: 311; 09:49:11.543 INFO MultidimensionalModeller - Fitting copy-ratio model...; 09:49:12.363 INFO GibbsSampler - Starting MCMC sampling.; 09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:18548,log,log,18548,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,1,['log'],['log']
Testability,0%> (-44.445%)` | `87 <0> (-82)` | |; | [...ender/cmdline/programgroups/SparkProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL3Byb2dyYW1ncm91cHMvU3BhcmtQcm9ncmFtR3JvdXAuamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...ctions/RequiredFeatureInputArgumentCollection.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL2FyZ3VtZW50Y29sbGVjdGlvbnMvUmVxdWlyZWRGZWF0dXJlSW5wdXRBcmd1bWVudENvbGxlY3Rpb24uamF2YQ==) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...sformers/MisencodedBaseQualityReadTransformer.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90cmFuc2Zvcm1lcnMvTWlzZW5jb2RlZEJhc2VRdWFsaXR5UmVhZFRyYW5zZm9ybWVyLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...r/cmdline/programgroups/TestSparkProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9jbWRsaW5lL3Byb2dyYW1ncm91cHMvVGVzdFNwYXJrUHJvZ3JhbUdyb3VwLmphdmE=) | `0% <0%> (-100%)` | `0% <0%> (-3%)` | |; | [...e/hellbender/utils/R/RScriptExecutorException.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9SL1JTY3JpcHRFeGVjdXRvckV4Y2VwdGlvbi5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-1%)` | |; | [...der/utils/codecs/GENCODE/GencodeGtfUTRFeature.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy9jb2RlY3MvR0VOQ09ERS9HZW5jb2RlR3RmVVRSRmVhdHVyZS5qYXZh) | `0% <0%> (-100%)` | `0% <0%> (-4%)` | |; | [...dline/programgroups/SparkPipelineProgramGroup.java](https://codecov.io/gh/broadinstitute/gatk/pull/3778?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcm,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342821044:2169,Test,TestSparkProgramGroup,2169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342821044,1,['Test'],['TestSparkProgramGroup']
Testability,0); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24); 	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377); 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54); 	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); Caused by: org.testng.TestNGException:An error occurred while instantiating class org.broadinstitute.hellbender.engine.spark.ReadsPreprocessingPipelineSparkTestData. Check to make sure it can be instantiated; 	at org.testng.internal.InstanceCreator.createInstanceUsingObjectFactory(InstanceCreator.java:134); 	at org.testng.internal.InstanceCreator.createInstance(InstanceCreator.java:79); 	at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:110); 	at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:195); 	at org.testng.TestClass.getInstances(TestClass.java:102); 	at org.testng.TestClass.initTestClassesAndInstances(TestClass.java:82); 	at org.testng.TestClass.init(TestClass.java:74); 	at org.testng.TestClass.<init>(TestClass.java:39); 	at org.testng.TestRunner.initMethods(TestRunner.java:466); 	at org.testng.TestRunner.init(TestRunner.java:345); 	at org.testng.TestRunner.init(TestRunner.java:298); 	at org.testng.TestRunner.<init>(TestRunner.java:183); 	at org.testng.SuiteRunner$Defau,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858:2345,test,testng,2345,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5787#issuecomment-472107858,1,['test'],['testng']
Testability,0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.fa (4); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.fa (8); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.fa (84); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup-contigs.fa (30); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.ec.filter.pass.merged.rmdup.fa (84); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly4.pp.fq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.fastq (0); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.fa (2); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.fa (4); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.fa (46); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup-contigs.fa (14); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.ec.filter.pass.merged.rmdup.fa (20); > R src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/RunSGAViaProcessBuilderOnSpark/assembly9.pp.fq (0); > A src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/SingleDiploidSampleBiallelicSVGenotyperSpark/inversions.vcf (25); > Patch Links:; > ; > https://github.com/broadinstitute/gatk/pull/2189.patch; > https://,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886:5515,test,test,5515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2189#issuecomment-250052886,1,['test'],['test']
Testability,0); Caused by: org.gradle.api.GradleException: Javadoc generation failed. Generated Javadoc options file (useful for troubleshooting): '/vsc-hard-mounts/leuven-data/304/vsc30484/git/gatk/build/tmp/gatkTabComplete/javadoc.options'; at org.gradle.api.tasks.javadoc.internal.JavadocGenerator.execute(JavadocGenerator.java:58); at org.gradle.api.tasks.javadoc.internal.JavadocGenerator.execute(JavadocGenerator.java:31); at org.gradle.api.tasks.javadoc.Javadoc.executeExternalJavadoc(Javadoc.java:152); at org.gradle.api.tasks.javadoc.Javadoc.generate(Javadoc.java:140); at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75); at org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.doExecute(DefaultTaskClassInfoStore.java:136); at org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.execute(DefaultTaskClassInfoStore.java:129); at org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.execute(DefaultTaskClassInfoStore.java:118); at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:623); at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:606); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80); at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61); ... 68 more; Caused by: org.gradle.process.internal.ExecException: Process 'command '/vsc-hard-mounts/leuven-apps/thinking/2015a/software/Java/1.8.0_144/bin/javadoc'' finished with non-zero exit value 1; at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:369); at org.gradle.process.internal.DefaultExecAction.execute(DefaultExecAction.java:31); at org.gradle.api.tasks.javadoc.internal.JavadocGenerator.execute(JavadocGenerator.java:53); ... 79 more. BUILD FAILED; ```,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4155:9752,assert,assertNormalExitValue,9752,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4155,1,['assert'],['assertNormalExitValue']
Testability,"0-48e2-95c9-15a2e1ae7dee%2Fcall-CombineSummaries%2Fsummary.csv)|; |NIST evalHCprocesshours|103.23083611111107|; |NIST evalHCsystemhours|0.2083694444444444|; |NIST evalHCwallclockhours|76.16374166666664|; |NIST evalHCwallclockmax|3.743883333333333|; |NIST evalMonitoringLogs|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F56974c24-19c8-4f87-b7b1-b71028109732%2Fcall-EVALRuntimeTask%2Fmonitoring.pdf)|; |NIST evalindelF1Score|0.9902|; |NIST evalindelPrecision|0.9903|; |NIST evalsnpF1Score|0.9899|; |NIST evalsnpPrecision|0.9887|; |NIST evalsnpRecall|0.9911|; |NIST evalsummary|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-NISTSampleHeadToHead%2FBenchmarkComparison%2F56974c24-19c8-4f87-b7b1-b71028109732%2Fcall-BenchmarkVCFTestSample%2FBenchmark%2Fb84fd1b7-a21e-4098-aeaf-05de3b35b2df%2Fcall-CombineSummaries%2Fsummary.csv)|; |ROC_Plots_Reported|[View in the GCS Console](https://console.cloud.google.com/storage/browser/_details/dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated%2Facc9e2ac-b10a-4d6a-b586-cd3e47f04e41%2Fcall-CreateHTMLReport%2Freport.html)|. </details>. <details><summary>Full details</summary> <pre lang=""json""> ; {; ""run_id"": ""00d212a9-8eac-4575-9cde-b0a911b3c2f2"",; ""test_id"": ""c3de522b-7ce5-4a51-8b57-1cea628dd93a"",; ""run_group_ids"": [],; ""name"": ""HaplotypeCaller CARROT Regression Tests_run_2023-05-16 17:15:43.799630906 UTC"",; ""status"": ""succeeded"",; ""test_wdl"": ""gs://dsp-methods-carrot-data/wdl-prod/8fce9006-acbf-48ed-984a-2ec988d82eea/test.wdl"",; ""test_wdl_hash"": ""272dc41890e3710cc96c32af03df25065cc4aa9dc389e3c2473bddba7be237db3e0698c15ef287c4619cff83e9b2e8e5e0a486eb4534658604e4bb312f308611"",; ""te",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099:5678,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,5678,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1550601099,2,['Benchmark'],"['BenchmarkVCFTestSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-EVALRuntimeTask/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-CHMSampleHeadToHead/BenchmarkComparison/deb85607-d693-4232-a4da-0fb88dd29cad/call-BenchmarkVCFTestSample/Benchmark/a15fdeb6-16e8-48d7-82cb-168726f4dc18/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-EXOME1SampleHeadToHead/BenchmarkComparison/75ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFControlSample/Benchmark/0f001ca8-d7af-4d01-b9ef-d6ddbe35317d/call-CombineSummaries/summary.csv"",; ""EXOME1 evalindelF1Score"": ""0.727"",; ""EXOME1 evalindelPrecision"": ""0.632"",; ""EXOME1 evalsnpF1Score"": ""0.9878"",; ""EXOME1 evalsnpPrecision"": ""0.9815"",; ""EXOME1 evalsnpRecall"": ""0.9941"",; ""EXOME1 evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-EXOME1SampleHeadToHead/BenchmarkComparison/75ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFTestSample/Benchmark/540fbadc-ba57-4012-8ff1-76461ecb7bb3/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""99.85891111111113"",; ""NIST controlHCsystemhours"": ""0.17817777777777768"",; ""NIST controlHCwallclockhours"": ""70.22329166666665"",; ""NIST controlHCwallclockmax"": ""3.8036305555555554"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOr",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:19126,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,19126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"0.100;MQ=60.00;MQRankSum=0.000;QD=0.46;ReadPosRankSum=-0.300;SOR=2.792 GT:AD:DP:GQ:PL 0/0/0/0/0/0/0/0/0/1:85,3:88:34:66,0,34,78,132,196,276,380,528,782,6199; contig00001 8244 . T C 43.68 . AC=1;AF=0.100;AN=10;BaseQRankSum=-0.838;ClippingRankSum=0.000;DP=80;FS=15.529;MLEAC=1;MLEAF=0.100;MQ=60.00;MQRankSum=0.000;QD=0.55;ReadPosRankSum=-1.716;SOR=2.783 GT:AD:DP:GQ:PL 0/0/0/0/0/0/0/0/0/1:77,3:80:31:69,0,31,71,119,178,251,347,482,716,5872; contig00001 8846 . C T 72.68 . AC=1;AF=0.100;AN=10;BaseQRankSum=0.659;ClippingRankSum=0.000;DP=88;FS=2.385;MLEAC=1;MLEAF=0.100;MQ=59.93;MQRankSum=0.273;QD=0.83;ReadPosRankSum=-4.696;SOR=1.102 GT:AD:DP:GQ:PL 0/0/0/0/0/0/0/0/0/1:84,4:88:31:98,0,31,72,124,186,264,366,510,759,3392; contig00001 9854 . A G 42.69 . AC=1;AF=0.100;AN=10;BaseQRankSum=0.463;ClippingRankSum=0.000;DP=79;FS=11.687;MLEAC=1;MLEAF=0.100;MQ=60.00;MQRankSum=0.000;QD=0.55;ReadPosRankSum=1.267;SOR=2.799 GT:AD:DP:GQ:PL 0/0/0/0/0/0/0/0/0/1:74,3:77:29:68,0,29,66,111,166,235,324,450,665,2970; contig00001 19796 . A G 34.70 . AC=1;AF=0.100;AN=10;BaseQRankSum=-2.543;ClippingRankSum=0.000;DP=66;FS=10.825;MLEAC=1;MLEAF=0.100;MQ=60.00;MQRankSum=0.000;QD=0.53;ReadPosRankSum=-0.600;SOR=0.829 GT:AD:DP:GQ:PL 0/0/0/0/0/0/0/0/0/1:63,3:66:23:60,0,23,54,93,140,199,275,384,572,2745; contig00001 20699 . T C 47.70 . AC=1;AF=0.100;AN=10;BaseQRankSum=0.326;ClippingRankSum=0.000;DP=66;FS=2.442;MLEAC=1;MLEAF=0.1; ```. When I run . ```gatk VariantFiltration -V GenomeA.rawSNPs.vcf -filter ""QD < 20.0"" --filter-name ""snp_def"" -O test.vcf```. or. ```gatk VariantFiltration -R ../GenomeA_contigs.fa -V GenomeA.rawSNPs.vcf -filter ""QD < 20.0"" --filter-name ""snp_def"" -O test.vcf```. I get the following error:. ```A USER ERROR has occurred: Invalid argument '>'.```. I tried to use different operators and style ```""""``` rather than ```''``` but the error is still the same.; I was hoping that there is a mistake in my code but it seems to be a bug to me.; I run on a HPC with a slurm managing system. ; Thank you",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6241:1804,test,test,1804,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6241,2,['test'],['test']
Testability,"00 KB. 18:03:07.612 WARN TaskSetManager:70 - Stage 182 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB.; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000010a5a9401, pid=2425, tid=8963; #; # JRE version: Java(TM) SE Runtime Environment (8.0_91-b14) (build 1.8.0_91-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.91-b14 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # V [libjvm.dylib+0x1a9401]; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/louisb/Workspace/gatk-protected/hs_err_pid2425.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; #; ```. [hs_err_pid2425.log.txt](https://github.com/broadinstitute/gatk-protected/files/448383/hs_err_pid2425.log.txt). @yfarjoun Is this similar to the crash you saw a while back?. ---. @yfarjoun commented on [Wed Aug 31 2016](https://github.com/broadinstitute/gatk-protected/issues/659#issuecomment-243946864). no. this is different. On Wed, Aug 31, 2016 at 3:27 PM, Louis Bergelson notifications@github.com; wrote:. > I got a segfault while running CreatePanelOfNormalsIntegrationTest.; > Subsequent runs were unable to reproduce it.; > ; > 18:03:07.573 WARN TaskSetManager:70 - Stage 181 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB.; > Test: Test method testAllTargetsHDF5PoNCreationSpark[0](null, src/test/resources/org/broadinstitute/hellbender/tools/exome/create-pon-control-full.pcov)(org.broadinstitute.hellbender.tools.exome.CreatePanelOfNormalsIntegrationTest) produced standard out/err: 18:03:07.612 WARN TaskSetManager:70 - Stage 182 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB.; > ; > ```; > 18:03:07.612 WAR",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2883:1750,log,log,1750,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2883,1,['log'],['log']
Testability,00.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_138.b37.excluding_sites_after_129.ch20.1m-1m1k.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.postRecalibrated.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.2inputs.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.indels_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.low_quality_tail_5.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.mismatches_context_size_4.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.quantizing_levels_6.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.CEUTrio.HiSeq.WGS.b37.ch20.1m-1m20k.NA12878.recal.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.alternate.recalibrated.DIQ.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq-1.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.HiSeq.1mb.1RG.2k_lines.bqsr.qq6.alternate.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/expected.MultiSite.reads.pipeline.cram.bai; src/test/resources/org/broadinstitute/hell,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:20297,test,test,20297,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"0076845511-How-do-I-SelectVariants-from-GenomicsDB-stored-in-GCS-#community\_comment\_360014183291](https://gatk.broadinstitute.org/hc/en-us/community/posts/360076845511-How-do-I-SelectVariants-from-GenomicsDB-stored-in-GCS-#community_comment_360014183291). \--. Thank you, it has started to work with gendb.gs://. But now I think it does not run. I have only one sample stored into the database and I'm selecting only chr20:1-1000000 and it is running for more than 30 minutes. Is it expected?. I'm using a VM from GCE, in the same region as the GCS bucket. Using GATK jar /home/taniguti/gatk-4.1.9.0/gatk-package-4.1.9.0-local.jar ; ; ```; Running: ; ;    java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -Xmx10g -Xms5g - ; ; jar /home/taniguti/gatk-4.1.9.0/gatk-package-4.1.9.0-local.jar SelectVariants -R Homo\_sapiens\_assembly38.fasta -V gendb.gs://mybucket/genomicsdb -L chr20:1-1000000 -O teste. ; ; vcf.gz ; ; 23:01:23.595 INFO  NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/home/taniguti/gatk-4.1.9.0/gatk-package-4.1.9.0-local.jar!/com/intel/gkl/native/libgkl\_compres ; ; sion.so ; ; 23:01:23.914 INFO  SelectVariants - ------------------------------------------------------------ ; ; 23:01:23.915 INFO  SelectVariants - The Genome Analysis Toolkit (GATK) v4.1.9.0 ; ; 23:01:23.915 INFO  SelectVariants - For support and documentation go to [https://software.broadinstitute.org/gatk/](https://software.broadinstitute.org/gatk/) ; ; 23:01:23.918 INFO  SelectVariants - Executing as taniguti@phasing-shapeit4-taniguti on Linux v5.4.0-1036-gcp amd64 ; ; 23:01:23.918 INFO  SelectVariants - Java runtime: OpenJDK 64-Bit Server VM v11.0.9.1+1-Ubuntu-0ubuntu1.20.04 ; ; 23:01:23.919 INFO  SelectVariants - Start Date/Time: February 1, 2021 at 11:01:23 PM UTC ; ; 23:01:23.919 INFO  SelectVariants - --------------------------------------------------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7070:1502,test,teste,1502,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7070,1,['test'],['teste']
Testability,"015f-0a1b-f1bd-00002ce33928 ; on database directory /tmp/spark-98953d35-8594-4907-b4a5-0870f1d17b3e/metastore with class loader sun.misc.Launcher$AppClassLoader@5c647e05 ; Loaded from file:/opt/cloudera/parcels/CDH-5.12.1-1.cdh5.12.1.p0.3/jars/derby-10.11.1.1.jar; java.vendor=Oracle Corporation; java.runtime.version=1.8.0_91-b14; user.dir=/opt/Software/gatk; os.name=Linux; os.arch=amd64; os.version=3.10.0-514.el7.x86_64; derby.system.home=null; Database Class Loader started - derby.database.classpath=''; 17/10/11 14:25:33 WARN metastore.ObjectStore: Version information not found in metastore. hive.metastore.schema.verification is not enabled so recording the schema version 1.1.0-cdh5.12.1; 17/10/11 14:25:33 WARN metastore.ObjectStore: Failed to get database default, returning NoSuchObjectException; SQL context available as sqlContext. **./gradlew bundle**; **[root@com1 gatk]# ./gradlew bundle; when I executed the command ”./gradlew bundle”， it appeared the error in the last ，did this matter？**. .......; [loading ZipFileIndexFileObject[/root/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.6.5/d50be1723a09be903887099ff2014ea9020333/jackson-databind-2.6.5.jar(com/fasterxml/jackson/databind/annotation/JsonSerialize$Inclusion.class)]]; [loading ZipFileIndexFileObject[/root/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.5/7ed845de1dfe070d43511fab1784e6c4118398/log4j-core-2.5.jar(org/apache/logging/log4j/core/config/plugins/PluginVisitorStrategy.class)]]; [done in 5759 ms]; 1 error; :gatkTabComplete FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':gatkTabComplete'.; > Javadoc generation failed. Generated Javadoc options file (useful for troubleshooting): '/opt/Software/gatk/build/tmp/gatkTabComplete/jadoc.options'. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 7.431 secs",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240:3245,log,logging,3245,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3686#issuecomment-335696240,3,['log'],"['log', 'logging']"
Testability,"0190327_David_rampseq_Ehsan/data/samtools_sorted_out/SNPs_candidates.g.vcf; 09:28:39.708 INFO ProgressMeter - Starting traversal; 09:28:39.708 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; =========This is the indexed chromosome ===================; 09:28:41.968 INFO ProgressMeter - **chr7B_part2:295520629** 0.0 925631 24596040.7. 09:28:41.968 INFO ProgressMeter - Traversal complete. Processed 925631 total records in 0.0 minutes.; 09:28:42.006 INFO IndexFeatureFile - Successfully wrote index to /storage/ppl/yifang/20190327/data/samtools_sorted_out/SNPs_candidates.g.vcf.idx; 09:28:42.006 INFO IndexFeatureFile - Shutting down engine; [May 6, 2019 9:28:42 CST AM] org.broadinstitute.hellbender.tools.IndexFeatureFile done. Elapsed time: 0.05 minutes.; Runtime.totalMemory()=2434269184). ```; This is my command line:; `java -DGATK_STACKTRACE_ON_USER_EXCEPTION=true -jar ${gatk4_jar} IndexFeatureFile --feature-file ${gvcf} --output ${gvcf}.idx 2>${LOGDIR}/index_candidates.log`. I tried this exact command line with another genome, which worked just fine with output progress report as following for a comparison of the multiple chromosomes processed:; ```; 12:50:38.871 INFO ProgressMeter - Starting traversal; 12:50:38.873 INFO ProgressMeter - Current Locus Elapsed Minutes Records Processed Records/Minute; 12:50:48.876 INFO ProgressMeter - N1:21408210 0.2 5669000 34010598.9; 12:50:58.876 INFO ProgressMeter - N2:13383863 0.3 11960000 35874618.8. ...... 12:55:58.884 INFO ProgressMeter - N19:50063133 5.3 208660000 39122405.2; 12:56:02.409 INFO ProgressMeter - N19:55994806 5.4 210940859 39119265.4; 12:56:02.409 INFO ProgressMeter - Traversal complete. Processed 210940859 total records in 5.4 minutes.; 12:56:02.429 INFO IndexFeatureFile - Successfully wrote index to /storage/ppl/yifang/20190225/data3/samtools_sorted_out/SNPs_candidates.g.vcf.idx; 12:56:02.429 INFO IndexFeatureFile - Shutting down engine; [April 25, 2019 12:56:02 PM CST] org.broad",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5917:4721,LOG,LOGDIR,4721,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5917,1,['LOG'],['LOGDIR']
Testability,"05,Cpu time(s),7.8149e-05,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; GENOMICSDB_TIMER,Time in read_all(),Wall-clock time(s),0.096994,Cpu time(s),0.0968966,Critical path wall-clock time(s),0,Cpu time(s),0,#critical path,0; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; Created workspace /tmp/travis/genomicsdb-batchsize-tests-311791747726779418/workspace-1; GENOMICSDB_TIMER,Fetch from VCF,Wall-clock time(s),0.018375,Cpu time(s),0.0183694,Critical path wall-clock time(s),0.017755,Cpu time(s),0.0177497,#critical path,19; GENOMICSDB_TIMER,Combining cells,Wall-clock time(s),0.00309",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693:4425,test,tests-,4425,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693,1,['test'],['tests-']
Testability,"05f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-CONTROLRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM controlindelF1Score"": ""0.8724"",; ""CHM controlindelPrecision"": ""0.8814"",; ""CHM controlsnpF1Score"": ""0.9784"",; ""CHM controlsnpPrecision"": ""0.9706"",; ""CHM controlsnpRecall"": ""0.9863"",; ""CHM controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-BenchmarkVCFControlSample/Benchmark/3b068fb2-7140-4c1e-8860-df8df21821ec/call-CombineSummaries/summary.csv"",; ""CHM evalHCprocesshours"": ""80.5165222222222"",; ""CHM evalHCsystemhours"": ""0.1713305555555555"",; ""CHM evalHCwallclockhours"": ""53.10978888888891"",; ""CHM evalHCwallclockmax"": ""2.7458416666666667"",; ""CHM evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-EVALRuntimeTask/cacheCopy/monitoring.pdf"",; ""CHM evalindelF1Score"": ""0.8724"",; ""CHM evalindelPrecision"": ""0.8814"",; ""CHM evalsnpF1Score"": ""0.9784"",; ""CHM evalsnpPrecision"": ""0.9706"",; ""CHM evalsnpRecall"": ""0.9863"",; ""CHM evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-CHMSampleHeadToHead/BenchmarkComparison/1fb97a8b-caee-4184-8e36-be21e6c43549/call-BenchmarkVCFTestSample/Benchmark/7f7c4522-e293-4a03-ada8-9541a585250b/call-CombineSummaries/summary.csv"",; ""EXOME1 controlindelF1Score"": ""0.727"",; ""EXOME1 controlindelPrecision"": ""0.632"",; ""EXOME1 controlsnpF1Score"": ""0.9878"",; ""EXOME1 controlsnpPrecision"": ""0.9815"",; ""EXOME1 controlsnpRecall"": ""0.9941"",; ""EXOME1 controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/6ea2705f-a3fa-41fc-8d17-a2c55d875eab/call-EXOME1Sampl",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207:11269,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,11269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1069766207,2,['Benchmark'],"['BenchmarkComparison', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"07, 2021 12:21 UTC. . Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/4403256366107--java-lang-ArrayIndexOutOfBoundsException-32772-while-running-GenotypeGVCFs](https://gatk.broadinstitute.org/hc/en-us/community/posts/4403256366107--java-lang-ArrayIndexOutOfBoundsException-32772-while-running-GenotypeGVCFs). \--. i don't get an error but the massge  java.lang.ArrayIndexOutOfBoundsException: 32772 ; ; i use : GATK version used: 4.2.0 ; ; b) Exact command used  this line for Geomics DBImport. gatk GenomicsDBImport -V MA1.g.vcf -V MA2.g.vcf -V MA3.g.vcf -V MH1.g.vcf -V MH2.g.vcf -V MH3.g.vcf -V F4\_1.g.vcf -V F4\_2.g.vcf -V F4\_3.g.vcf --genomicsdb-workspace-path my\_database1AB -L 1A -L 1B -L 2A -L 2B -L 3A -L 3B -L 4A -L 4B -L 5A -L 5B -L 6A -L 6B -L 7A -L 7B. and this for GenotypeGVCFs. gatk --java-options ""-Xmx12g -Xms12g"" GenotypeGVCFs -R Triticum\_dicoccoides.WEWSeq\_v.1.0.dna.toplevel.fa -V gendb://my\_database -O output.vcf.gz --new-qual --tmp-dir temp/. c) Entire error log:. Using GATK jar /home/alonzi/miniconda3/envs/rna-seq/share/gatk4-4.2.0.0-1/gatk-package-4.2.0.0-local.jar ; ; Running: ; ; java -Dsamjdk.use\_async\_io\_read\_samtools=false -Dsamjdk.use\_async\_io\_write\_samtools=true -Dsamjdk.use\_async\_io\_write\_tribble=false -Dsamjdk.compression\_level=2 -Xmx12g -Xms12g -jar /home/alonzi/miniconda3/envs/rna-seq/share/gatk4-4.2.0.0-1/gatk-package-4.2.0.0-local.jar GenotypeGVCFs -R Triticum\_dicoccoides.WEWSeq\_v.1.0.dna.toplevel.fa -V gendb://my\_database -O output.vcf.gz --new-qual --tmp-dir temp/ ; ; 14:28:22.448 INFO NativeLibraryLoader - Loading libgkl\_compression.so from jar:file:/home/alonzi/miniconda3/envs/rna-seq/share/gatk4-4.2.0.0-1/gatk-package-4.2.0.0-local.jar!/com/intel/gkl/native/libgkl\_compression.so ; ; Jul 07, 2021 2:28:22 PM shaded.cloud\_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine ; ; INFO: Failed to detect whether we are running on Google Compute Engine. ; ; 14:28:22.617 INFO Genoty",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7348:1561,log,log,1561,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7348,1,['log'],['log']
Testability,0999 -47 ; ==============================================; Files 769 770 +1 ; Lines 40143 40264 +121 ; Branches 6993 7010 +17 ; ==============================================; - Hits 30479 30293 -186 ; - Misses 7017 7318 +301 ; - Partials 2647 2653 +6; ```. | [Impacted Files](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree) | Coverage Δ | Complexity Δ | |; |---|---|---|---|; | [...institute/hellbender/engine/FeatureDataSource.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci9lbmdpbmUvRmVhdHVyZURhdGFTb3VyY2UuamF2YQ==) | `75.676% <ø> (-0.901%)` | `35 <0> (-1)` | |; | [...ute/hellbender/utils/test/GenomicsDBTestUtils.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0dlbm9taWNzREJUZXN0VXRpbHMuamF2YQ==) | `85.714% <100%> (ø)` | `1 <0> (ø)` | :arrow_down: |; | [...broadinstitute/hellbender/utils/test/BaseTest.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci91dGlscy90ZXN0L0Jhc2VUZXN0LmphdmE=) | `77.612% <44.444%> (-8.788%)` | `32 <2> (-3)` | |; | [.../hellbender/tools/genomicsdb/GenomicsDBImport.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9nZW5vbWljc2RiL0dlbm9taWNzREJJbXBvcnQuamF2YQ==) | `72.321% <72.321%> (ø)` | `20 <20> (?)` | |; | [...s/spark/ParallelCopyGCSDirectoryIntoHDFSSpark.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvYnJvYWRpbnN0aXR1dGUvaGVsbGJlbmRlci90b29scy9zcGFyay9QYXJhbGxlbENvcHlHQ1NEaXJlY3RvcnlJbnRvSERGU1NwYXJrLmphdmE=) | `0% <0%> (-80.612%)` | `0% <0%> (-19%)` | |; | [...institute/hellbender/utils/gcs/GATKGCSOptions.java](https://codecov.io/gh/broadinstitute/gatk/pull/2389?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9v,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296171696:1533,test,test,1533,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296171696,1,['test'],['test']
Testability,"09:49:14.885 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:17.255 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:19.604 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:21.938 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:21.939 INFO GibbsSampler - MCMC sampling complete.; 09:49:21.939 INFO MultidimensionalModeller - Fitting allele-fraction model...; 09:49:21.958 INFO AlleleFractionInitializer - Initializing allele-fraction model, iterating until log likelihood converges to within 0.500000...; 09:49:22.312 INFO AlleleFractionInitializer - Iteration 1, model log likelihood = -599214.649782...; 09:49:22.312 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.041049, outlierProbability=0.031143}; 09:49:22.622 INFO AlleleFractionInitializer - Iteration 2, model log likelihood = -599203.367762...; 09:49:22.622 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.152095, biasVariance=0.036778, outlierProbability=0.037218}; 09:49:22.933 INFO AlleleFractionInitializer - Iteration 3, model log likelihood = -599201.638390...; 09:49:22.933 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.149830, biasVariance=0.034706, outlierProbability=0.039510}; 09:49:23.216 INFO AlleleFractionInitializer - Iteration 4, model log likelihood = -599201.210843...; 09:49:23.216 INFO AlleleFractionInitializer - AlleleFractionGlobalParameters{meanBias=1.147681, biasVariance=0.033671, outlierProbability=0.039510}; 09:49:23.323 INFO GibbsSampler - Starting MCMC sampling.; 09:49:29.603 INFO GibbsSampler - 25 of 100 samples generated.; 09:49:36.116 INFO GibbsSampler - 50 of 100 samples generated.; 09:49:42.766 INFO GibbsSampler - 75 of 100 samples generated.; 09:49:49.322 INFO GibbsSampler - 100 of 100 samples generated.; 09:49:49.322 INFO GibbsSampler - MCMC sampling complete.; 09:49:49.355 INFO MultidimensionalModeller - Final number of segments after smoothing: 311; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732:19161,log,log,19161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382805732,2,['log'],['log']
