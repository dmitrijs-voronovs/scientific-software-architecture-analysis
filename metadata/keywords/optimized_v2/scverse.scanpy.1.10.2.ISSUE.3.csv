quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Safety,"### Please make sure these conditions are met. - [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. There are a few instances where the input for `sc.get.obs_df` could be described better to avoid some edge cases that don't throw errors (or throw cryptic errors). . 1. The param descriptions say that `obsm_keys` expects a [Tuple of (key, column)](https://github.com/scverse/scanpy/blob/39c6532d276ca83cc0548546c3d73ebee6eec0c1/src/scanpy/get/get.py#L240-L241), but this gives an error:; ```py; adata = sc.datasets.pbmc3k_processed(); sc.get.obs_df(adata, obsm_keys = ('X_pca', 1)); ``` ; ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[15], line 1; ----> 1 sc.get.obs_df(adata, obsm_keys = ('X_pca', 1)). File /oak/stanford/groups/pritch/users/emma/miniforge3/envs/perturb-vs-tissue-env/lib/python3.10/site-packages/scanpy/get/get.py:328, in obs_df(adata, keys, obsm_keys, layer, gene_symbols, use_raw); 325 if keys:; 326 df = df[keys]; --> 328 for k, idx in obsm_keys:; 329 added_k = f""{k}-{idx}""; 330 val = adata.obsm[k]. ValueError: too many values to unpack (expected 2); ```; The function works if you pass a list of Tuples:; ```; sc.get.obs_df(adata, obsm_keys = [('X_pca', 1)]); ```; So perhaps the parameter descriptions should say `List of Tuples of (key, column)`? Or the case of extracting a single column should be handled. . 2. The input for the `keys` is described as [""keys""](https://github.com/scverse/scanpy/blob/39c6532d276ca83cc0548546c3d73ebee6eec0c1/src/scanpy/get/get.py#L238-L239), but if you pass only one key as a string, the function returns a `pd.Series` instead of a `pd.DataFrame`. This is not a massive problem, unless you also pass something to `obsm_keys`. When you do that, the function",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3310:380,avoid,avoid,380,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3310,1,['avoid'],['avoid']
Safety,"### What kind of feature would you like to request?. Additional function parameters / changed functionality / changed defaults?. ### Please describe your wishes. The sc.tl.rank_gene_groups function needs additional arguments to filter some genes before running a test on them, just like Seurat's `FindMarkers` function. . 1. `minc_pct`: Only test genes detected in a minimum fraction of min_pct cells in either of the two comparison groups. It is beneficial for comparing cluster A to cluster B.; 2. `min_cells`: Minimum number of cells expressing the feature in at least one of the two comparison groups.; 3. `min_pct_difference`: Only test genes showing a minimum difference in the detection fraction between the two comparison groups. I will also try to implement these changes.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3159:353,detect,detected,353,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3159,2,['detect'],"['detected', 'detection']"
Safety,"(). ~/miniconda3/envs/scanpy-forge/lib/python3.8/site-packages/pandas/core/indexes/base.py in _isnan(self); 2172 """"""; 2173 if self._can_hold_na:; -> 2174 return isna(self); 2175 else:; 2176 # shouldn't reach to this condition by checking hasnans beforehand. ~/miniconda3/envs/scanpy-forge/lib/python3.8/site-packages/pandas/core/dtypes/missing.py in isna(obj); 125 Name: 1, dtype: bool; 126 """"""; --> 127 return _isna(obj); 128 ; 129 . ~/miniconda3/envs/scanpy-forge/lib/python3.8/site-packages/pandas/core/dtypes/missing.py in _isna(obj, inf_as_na); 154 # hack (for now) because MI registers as ndarray; 155 elif isinstance(obj, ABCMultiIndex):; --> 156 raise NotImplementedError(""isna is not defined for MultiIndex""); 157 elif isinstance(obj, type):; 158 return False. NotImplementedError: isna is not defined for MultiIndex; ```. </details>. I don't get an error from this on master, but I do get these warnings. ```; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; ```. No differences between pandas, seaborn, or matplotlib versions between these environments. Seems like it's sorta fixed on mas",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1885:5449,avoid,avoided,5449,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1885,1,['avoid'],['avoided']
Safety,"([], [])), shape=(n_obs, 1)); --> 390 connectivities = fuzzy_simplicial_set(; 391 X,; 392 n_neighbors,. /hps/software/users/marioni/Leah/miniconda3/envs/scvelo/lib/python3.8/site-packages/umap/umap_.py in fuzzy_simplicial_set(X, n_neighbors, random_state, metric, metric_kwds, knn_indices, knn_dists, angular, set_op_mix_ratio, local_connectivity, apply_set_operations, verbose); 600 knn_dists = knn_dists.astype(np.float32); 601 ; --> 602 sigmas, rhos = smooth_knn_dist(; 603 knn_dists, float(n_neighbors), local_connectivity=float(local_connectivity),; 604 ). SystemError: CPUDispatcher(<function smooth_knn_dist at 0x14a113bac160>) returned a result with an error set. time: 4.73 s (started: 2021-08-18 11:47:40 +01:00); ```. #### Versions. <details>. ```pytb; WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 8.3.1; autotime 0.3.1; backcall 0.2.0; bottleneck 1.3.2; cffi 1.14.6; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; decorator 5.0.9; defusedxml 0.7.1; h5py 2.10.0; igraph 0.9.6; ipykernel 6.0.3; ipython_genutils 0.2.0; jedi 0.18.0; joblib 1.0.1; kiwisolver 1.3.1; leidenalg 0.8.7; llvmlite 0.33.0; loompy 3.0.6; louvain 0.7.0; matplotlib 3.4.2; matplotlib_inline NA; mkl 2.4.0; mpl_toolkits NA; natsort 7.1.1; numba 0.50.1; numexpr 2.7.3; numpy 1.20.3; numpy_groupies 0.9.13; packaging 21.0; pandas 1.3.0; parso 0.8.2; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.19; ptyprocess 0.7.0; pycparser",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1983:3967,avoid,avoid,3967,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1983,1,['avoid'],['avoid']
Safety,(fix): conditional imports to avoid `anndata.io` warning,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3289:30,avoid,avoid,30,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3289,1,['avoid'],['avoid']
Safety,"(sorry, I messed up my branch, so sending a new PR). I added a new batch_key option to HVG function. If specified, it runs the HVG selection in every batch separately and then merges the list in order to reduce the batch effects by avoiding the selection of batch-specific genes. This doesn't fully correct the batch effect but reduces it. Running the function for each batch is trivial but merging is trickier than I thought. How I do it now is as follows:. - hvg is run on each batch and resulting hvg lists are first concatenated into a single dataframe.; The data frame is grouped by genes. mean, dispersion and normalized dispersion values are aggregated via `np.nanmean`. Two new columns are created 1) ""in how many batches a gene is detected as hvg"". 2) intersection of all HVGs across batches. - if n_top_genes is given, combined hvg lists are sorted by 1) in how many batches a gene is detected as hvg 2) normalized dispersion. normalized dispersion is used to break the ties. Then top n genes are selected as the final hvg list. - if n_top_genes is not given, same mean and dispersion thresholds are applied to the combined hvg list. Here is the code to see the improvement of this approach:. ```python; import scanpy as sc; import numpy as np; import pandas as pd. ad = sc.read(""pancreas.h5ad"", backup_url=""https://goo.gl/V29FNk"") # adapted from scGen repo; ad.obs[""cell_type""] = ad.obs[""celltype""].tolist(). ad = sc.AnnData(ad.raw.X, var=ad.raw.var, obs=ad.obs); sc.pp.normalize_per_cell(ad); sc.pp.log1p(ad). sc.pp.highly_variable_genes(ad, batch_key='batch'); sc.pp.pca(ad); sc.pp.neighbors(ad); sc.tl.umap(ad); sc.pl.umap(ad, color=[""batch"", ""cell_type""]); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/622:232,avoid,avoiding,232,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/622,3,"['avoid', 'detect']","['avoiding', 'detected']"
Safety,"**The following is what this function does (we can see it with ?sc.pp.recipe_zheng17):**; ```; sc.pp.filter_genes(adata, min_counts=1) # only consider genes with more than 1 count; sc.pp.normalize_per_cell( # normalize with total UMI count per cell; adata, key_n_counts='n_counts_all'); filter_result = sc.pp.filter_genes_dispersion( # select highly-variable genes; adata.X, flavor='cell_ranger', n_top_genes=n_top_genes, log=False); adata = adata[:, filter_result.gene_subset] # subset the genes; sc.pp.normalize_per_cell(adata) # renormalize after filtering; if log: sc.pp.log1p(adata) # log transform: adata.X = log(adata.X + 1); sc.pp.scale(adata) # scale to unit variance and shift to zero mean; ```. **But in the original paper Zheng et al. (2017 (https://www.nature.com/articles/ncomms14049#Sec11), it said:**; Only genes with at least one UMI count detected in at least one cell are used. UMI normalization was performed by first dividing UMI counts by the total UMI counts in each cell, **followed by multiplication with the median of the total UMI counts across cells**. Then, we took the natural log of the UMI counts. Finally, each gene was normalized such that the mean signal for each gene is 0, and standard deviation is 1. **So, comparing these two pipelines, the pipeline implemented in scanpy is not the same with the method described in the original paper, in the paper, there is a step**: _multiplication with the median of the total UMI counts across cells_, but this step was skipped inside the function sc.pp.recipe_zheng17. **Is there anyone who can tell me why they are different?** @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/905:857,detect,detected,857,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/905,1,['detect'],['detected']
Safety,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. This is probably a bug in my thinking, but naively I thought that `sc.pp.normalize_total()` normalizes counts per cell, thus allowing comparison of different cells by correcting for variable sequencing depth. However, the log transformation applied after normalisation seems to upset this relationship, example below. Why is this not problematic?. Incidentally, I first noticed this on my real biological dataset, not the toy example below. Edit: [relevant paper](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6215955/). > We can show, mathematically, that if we normalize expression profiles to have the same mean across cells, the mean after the equation [log] transformation used for RNA-Seq data will not be the same, and it will depend on the detection rate... And this [one](https://www.biorxiv.org/content/10.1101/404962v1.full):. > One issue of particular interest is that the mean of the log-counts is not generally the same as the log-mean count [1]. This is problematic in scRNA-seq contexts where the log-transformation is applied to normalized expression data. ---. ### Minimal code sample. ```python; >>> from anndata import AnnData; >>> import scanpy as sc; >>> import numpy as np; >>> adata = AnnData(np.array([[3, 3, 3, 6, 6],[1, 1, 1, 2, 2],[1, 22, 1, 2, 2], ])); >>> X_norm = sc.pp.normalize_total(adata, target_sum=1, inplace=False)['X']; >>> X_norm_log = np.log1p(X_norm); >>> X_norm_again = np.expm1(X_norm_log); >>> adata.X.sum(axis=1); array([21., 7., 28.], dtype=float32) # Different counts for each cell; >>> X_norm.sum(axis=1); array([1., 1., 1.], dtype=float32) # Normalisation means same counts for each cell; >>> X_norm_log.sum(axis=1); array([0.90322304, 0.90322304, 0.7879869 ], dtype=float32) # <<< Interested in this! Different counts for each ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1364:971,detect,detection,971,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1364,1,['detect'],['detection']
Safety,"- [x ] I have checked that this issue has not already been reported.; - [ x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. Selection of highly variable genes works fine in default settings, but I get an error when I try to use seurat_v3 flavor. ```python; adata2.layers[""counts""] = adata2.X.copy(); adata2.raw = adata2 # keep full dimension safe; sc.pp.normalize_total(adata2, target_sum=1e4); sc.pp.log1p(adata2); sc.pp.highly_variable_genes(; adata2,; flavor=""seurat_v3"",; n_top_genes=3000,; layer=""counts"",; batch_key=""Sample"",; subset=True; ); ```. ```pytb; ValueError Traceback (most recent call last); <ipython-input-18-64d280f5029c> in <module>; 3 sc.pp.normalize_total(adata2, target_sum=1e4); 4 sc.pp.log1p(adata2); ----> 5 sc.pp.highly_variable_genes(; 6 adata2,; 7 flavor=""seurat_v3"",. /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/scanpy/preprocessing/_highly_variable_genes.py in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values); 417 ; 418 if flavor == 'seurat_v3':; --> 419 return _highly_variable_genes_seurat_v3(; 420 adata,; 421 layer=layer,. /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/scanpy/preprocessing/_highly_variable_genes.py in _highly_variable_genes_seurat_v3(adata, layer, n_top_genes, batch_key, check_values, span, subset, inplace); 83 x = np.log10(mean[not_const]); 84 model = loess(x, y, span=span, degree=2); ---> 85 model.fit(); 86 estimat_var[not_const] = model.outputs.fitted_values; 87 reg_std = np.sqrt(10 ** estimat_var). _loess.pyx in _loess.loess.fit(). ValueError: b'svddc failed in l2fit.'; ```. #### Versions; 0.10.00",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2034:449,safe,safe,449,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2034,1,['safe'],['safe']
Safety,"- [x ] I have checked that this issue has not already been reported.; - [x ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # create new env; conda install -c pytorch pytorch; conda install -c pytorch cudatoolkit=11.3. conda install -c bioconda scanpy; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versionsThe following specifications were found to be incompatible with your system:. - feature:/linux-64::__glibc==2.31=0; - feature:|@/linux-64::__glibc==2.31=0. Your installed version is: 2.31; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2282:1145,abort,abort,1145,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2282,1,['abort'],['abort']
Safety,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; adata = sc.datasets.pbmc3k(); sc.external.pp.scrublet(adata, threshold='I am ignored'); ```. ```pytb; /opt/conda/lib/python3.7/site-packages/scanpy/preprocessing/_normalization.py:138: UserWarning: Revieved a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.27; Detected doublet rate = 1.5%; Estimated detectable doublet fraction = 44.3%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 3.4%. ```. #### Versions. <details>. scanpy==1.7.0 anndata==0.7.5 umap==0.5.1 numpy==1.20.0 scipy==1.6.0 pandas==1.2.1 scikit-learn==0.24.1 statsmodels==0.12.2 python-igraph==0.8.3 louvain==0.7.0 leidenalg==0.8.3. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1644:655,Detect,Detected,655,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1644,2,"['Detect', 'detect']","['Detected', 'detectable']"
Safety,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. Found while investigating #1477. `scanpy.set_figure_parms` detects whether we're in an IPython session (or at least tries to #1841), and sets the default output format. The way it sets the format [is deprecated](https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html#IPython.display.set_matplotlib_formats), as it looks like the `matplotlib_inline` backend has moved to a separate package. . The new way to call this is: . ```python; import matplotlib_inline.backend_inline. if isinstance(ipython_format, str):; ipython_format = [ipython_format]; matplotlib_inline.backend_inline.set_matplotlib_formats(*ipython_format); ```. It may take some investigation to figure out how to do this in a backwards compatible way. I would also note the current backend format that we are using (`""png2x""`) is undocumented. It is equivalent to the documented format `""retina""`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1842:288,detect,detects,288,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1842,1,['detect'],['detects']
Safety,"---. Apologies for all the edits, but I'm stuck on this so have been playing around with it. Basically I'm getting weird errors when running scanpy on scvelo objects. I first had this issue when running `sc.pp.pca(adata_panc, n_comps=50)`, but managed to solve it by previously setting `adata_panc.X = np.array(adata_panc.X.todense())`. However, I'm now getting the exact same error when running `sc.pp.neighbors(adata_panc)` and I'm not sure which matrix to test. Any advice would be very much appreciated!. ### Minimal code sample (that we can copy&paste without having any data). ```python; adata_panc = scv.datasets.pancreas(); scv.pp.filter_and_normalize(adata_panc, n_top_genes=3000, min_shared_counts=20); del adata_panc.obsm['X_pca']; del adata_panc.obsm['X_umap']; del adata_panc.obsp['distances']; del adata_panc.obsp['connectivities']; adata_panc.X = np.array(adata_panc.X.todense()); sc.pp.pca(adata_panc, n_comps=50); sc.pp.neighbors(adata_panc); ```. ```pytb; Filtered out 20801 genes that are detected 20 counts (shared).; Normalized count data: X, spliced, unspliced.; Extracted 3000 highly variable genes.; Logarithmized X.; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); TypeError: expected dtype object, got 'numpy.dtype[float32]'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /hps/scratch/lsf_tmpdir/hl-codon-10-04/ipykernel_2322052/531027197.py in <module>; 7 adata_panc.X = np.array(adata_panc.X.todense()); 8 sc.pp.pca(adata_panc, n_comps=50); ----> 9 sc.pp.neighbors(adata_panc). /hps/software/users/marioni/Leah/miniconda3/envs/scvelo/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in neighbors(adata, n_neighbors, n_pcs, use_rep, knn, random_state, method, metric, metric_kwds, key_added, copy); 137 adata._init_as_actual(adata.copy()); 138 neighbors = Neighbors(adata); --> 139 neighbors.compute_neighbors(; 140 n_ne",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1983:1232,detect,detected,1232,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1983,1,['detect'],['detected']
Safety,"-serif;; 	mso-font-charset:0;; 	text-align:center;}; .xl68; 	{text-align:center;}; ruby; 	{ruby-align:left;}; rt; 	{color:windowtext;; 	font-size:9.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:等线;; 	mso-generic-font-family:auto;; 	mso-font-charset:134;; 	mso-char-type:none;; 	display:none;}; -->; </style>; </head>. <body link=""#0563C1"" vlink=""#954F72"">. Windows PC1 |   | Windows PC2 |   | Windows PC3 |  ; -- | -- | -- | -- | -- | --; adjustText | 0.7.3 | adjustText | 0.7.3 | adjustText | 0.7.3; aiohttp | 3.8.1 | aiohttp | 3.8.1 | aiohttp | 3.8.1; aiosignal | 1.2.0 | aiosignal | 1.2.0 | aiosignal | 1.2.0; anndata | 0.7.8 | anndata | 0.7.8 | anndata | 0.7.8; anyio | 2.2.0 | anyio | 2.2.0 | anyio | 2.2.0; arboreto | 0.1.6 | arboreto | 0.1.6 | arboreto | 0.1.6; argon2-cffi | 20.1.0 | argon2-cffi | 20.1.0 | argon2-cffi | 20.1.0; async-generator | 1.1 | async-generator | 1.1 | async-generator | 1.1; async-timeout | 4.0.2 | async-timeout | 4.0.2 | async-timeout | 4.0.2; attrs | 21.4.0 | attrs | 21.2.0 | attrs | 21.4.0; Babel | 2.9.1 | Babel | 2.9.1 | Babel | 2.9.1; backcall | 0.2.0 | backcall | 0.2.0 | backcall | 0.2.0; bleach | 4.1.0 | bleach | 4.1.0 | bleach | 4.1.0; bokeh | 2.4.2 | bokeh | 2.4.2 | bokeh | 2.4.2; boltons | 21.0.0 | boltons | 21.0.0 | boltons | 21.0.0; brotlipy | 0.7.0 | brotlipy | 0.7.0 | brotlipy | 0.7.0; cellrank | 1.5.1 | cellrank | 1.5.1 | cellrank | 1.5.1; certifi | 2020.6.20 | certifi | 2020.6.20 | certifi | 2020.6.20; cffi | 1.15.0 | cffi | 1.15.0 | cffi | 1.15.0; charset-normalizer | 2.0.4 | charset-normalizer | 2.0.4 | charset-normalizer | 2.0.4; click | 8.0.3 | click | 8.0.3 | click | 8.0.3; cloudpickle | 2.0.0 | cloudpickle | 2.0.0 | cloudpickle | 2.0.0; colorama | 0.4.4 | colorama | 0.4.4 | colorama | 0.4.4; cryptography | 36.0.0 | cryptography | 36.0.0 | cryptography | 36.0.0; ctxcore | 0.1.1 | ctxcore | 0.1.1 | ctxcore | 0.1.1; cycler | 0.11.0 | cycler | 0.11.0 | cycler | 0.11.0; cytoolz | 0.11.0 | cyto",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2114:6319,timeout,timeout,6319,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2114,1,['timeout'],['timeout']
Safety,". File ~/anaconda3/envs/ml/lib/python3.9/site-packages/mpl_toolkits/mplot3d/axes3d.py:485, in Axes3D.draw(self, renderer); 480 # Calculate projection of collections and patches and zorder them.; 481 # Make sure they are drawn above the grids.; 482 zorder_offset = max(axis.get_zorder(); 483 for axis in self._get_axis_list()) + 1; 484 for i, col in enumerate(; --> 485 sorted(self.collections,; 486 key=do_3d_projection,; 487 reverse=True)):; 488 col.zorder = zorder_offset + i; 489 for i, patch in enumerate(; 490 sorted(self.patches,; 491 key=do_3d_projection,; 492 reverse=True)):. File ~/anaconda3/envs/ml/lib/python3.9/site-packages/mpl_toolkits/mplot3d/axes3d.py:471, in Axes3D.draw.<locals>.do_3d_projection(artist); 458 """"""; 459 Call `do_3d_projection` on an *artist*, and warn if passing; 460 *renderer*.; (...); 464 *renderer* and raise a warning.; 465 """"""; 467 if artist.__module__ == 'mpl_toolkits.mplot3d.art3d':; 468 # Our 3D Artists have deprecated the renderer parameter, so; 469 # avoid passing it to them; call this directly once the; 470 # deprecation has expired.; --> 471 return artist.do_3d_projection(); 473 _api.warn_deprecated(; 474 ""3.4"",; 475 message=""The 'renderer' parameter of ""; 476 ""do_3d_projection() was deprecated in Matplotlib ""; 477 ""%(since)s and will be removed %(removal)s.""); 478 return artist.do_3d_projection(renderer). File ~/anaconda3/envs/ml/lib/python3.9/site-packages/matplotlib/_api/deprecation.py:431, in delete_parameter.<locals>.wrapper(*inner_args, **inner_kwargs); 421 deprecation_addendum = (; 422 f""If any parameter follows {name!r}, they should be passed as ""; 423 f""keyword, not positionally.""); 424 warn_deprecated(; 425 since,; 426 name=repr(name),; (...); 429 else deprecation_addendum,; 430 **kwargs); --> 431 return func(*inner_args, **inner_kwargs). File ~/anaconda3/envs/ml/lib/python3.9/site-packages/mpl_toolkits/mplot3d/art3d.py:599, in Path3DCollection.do_3d_projection(self, renderer); 597 @_api.delete_parameter('3.4', 'renderer')",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2285:8946,avoid,avoid,8946,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2285,1,['avoid'],['avoid']
Safety,". ~/miniconda3/envs/scanpy-forge/lib/python3.8/site-packages/pandas/core/dtypes/missing.py in _isna(obj, inf_as_na); 154 # hack (for now) because MI registers as ndarray; 155 elif isinstance(obj, ABCMultiIndex):; --> 156 raise NotImplementedError(""isna is not defined for MultiIndex""); 157 elif isinstance(obj, type):; 158 return False. NotImplementedError: isna is not defined for MultiIndex; ```. </details>. I don't get an error from this on master, but I do get these warnings. ```; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; ```. No differences between pandas, seaborn, or matplotlib versions between these environments. Seems like it's sorta fixed on master. I think this might be a cause:. ```python; import scanpy as sc; import seaborn as sns; sns.set() # <--- here. pbmc = sc.datasets.pbmc68k_reduced(); sc.pl.umap(pbmc, color = 'phase') # This errors. pbmc.uns[""phase_colors""]; ```. ```; [(0.2980392156862745, 0.4470588235294118, 0.6901960784313725),; (0.8666666666666667, 0.5176470588235295, 0.3215686274509804),; (0.3333333333333333, 0.6588235294117647, 0.40784313725490196)]; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1885:6083,avoid,avoided,6083,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1885,1,['avoid'],['avoided']
Safety,"/github.com/scverse/scanpy/blob/master/scanpy/external/pp/_scrublet.py#L252) results in a key error since the scrubbed data contains fewer cells than the original adata. ### Minimal code sample (that we can copy&paste without having any data); I do not have a code sample that does not require data, but any anndata that contains cells with fewer than 3 genes should trigger the error.; ```python; import scanpy; adata = scanpy.read(""test.h5ad"") # e.g. contains cells with fewer than 3 genes; sc.external.pp.scrublet(test_adata, batch_key = ""label""); ```. ```pytb; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.16; Detected doublet rate = 6.4%; Estimated detectable doublet fraction = 61.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.4%. ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.17; Detected doublet rate = 5.8%; Estimated detectable doublet fraction = 55.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.5%. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /tmp/ipykernel_2434661/1304834185.py in <module>; ----> 1 sc.external.pp.scrublet(test_adata, batch_key = ""label""). ~/.local/lib/python3.9/site-packages/scanpy/external/pp/_scrublet.py in sc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2377:1585,Detect,Detected,1585,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2377,1,['Detect'],['Detected']
Safety,"/scanpy/external/pp/_scrublet.py#L252) results in a key error since the scrubbed data contains fewer cells than the original adata. ### Minimal code sample (that we can copy&paste without having any data); I do not have a code sample that does not require data, but any anndata that contains cells with fewer than 3 genes should trigger the error.; ```python; import scanpy; adata = scanpy.read(""test.h5ad"") # e.g. contains cells with fewer than 3 genes; sc.external.pp.scrublet(test_adata, batch_key = ""label""); ```. ```pytb; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.16; Detected doublet rate = 6.4%; Estimated detectable doublet fraction = 61.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.4%. ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.17; Detected doublet rate = 5.8%; Estimated detectable doublet fraction = 55.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.5%. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /tmp/ipykernel_2434661/1304834185.py in <module>; ----> 1 sc.external.pp.scrublet(test_adata, batch_key = ""label""). ~/.local/lib/python3.9/site-packages/scanpy/external/pp/_scrublet.py in scrublet(adata, adata_sim, batch_key, sim",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2377:1625,detect,detectable,1625,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2377,1,['detect'],['detectable']
Safety,0.13; pydeseq2 0.4.1; PyDispatcher 2.0.5; pydocstyle 6.3.0; pyerfa 2.0.0.3; pyflakes 3.0.1; Pygments 2.16.1; PyJWT 2.8.0; pylint 2.17.5; pylint-venv 3.0.2; pyls-spyder 0.4.0; pynndescent 0.5.10; pyodbc 4.0.39; pyOpenSSL 23.2.0; pyparsing 3.1.1; PyQt5-sip 12.11.0; PySocks 1.7.1; pytest 7.4.2; python-dateutil 2.8.2; python-dotenv 1.0.0; python-json-logger 2.0.7; python-lsp-black 1.3.0; python-lsp-jsonrpc 1.1.2; python-lsp-server 1.7.2; python-slugify 8.0.1; pytoolconfig 1.2.5; pytz 2023.3.post1; pyviz_comms 3.0.0; PyWavelets 1.4.1; pyxdg 0.28; PyYAML 6.0.1; pyzmq 25.1.1; QDarkStyle 3.1; qstylizer 0.2.2; QtAwesome 1.2.3; qtconsole 5.4.4; QtPy 2.4.0; queuelib 1.6.2; referencing 0.30.2; regex 2023.10.3; requests 2.31.0; requests-file 1.5.1; requests-toolbelt 1.0.0; reretry 0.11.8; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rich 13.6.0; rope 1.10.0; rpds-py 0.10.4; Rtree 1.0.1; ruamel.yaml 0.17.35; ruamel.yaml.clib 0.2.7; ruamel-yaml-conda 0.15.80; s3fs 0.5.1; sacremoses 0.0.53; safetensors 0.3.3; scanpy 1.9.5; scikit-image 0.21.0; scikit-learn 1.3.1; scikit-learn-intelex 20230725.122106; scipy 1.11.3; Scrapy 2.11.0; scrublet 0.2.3; scTE 1.0; scTE 1.0; seaborn 0.13.0; SecretStorage 3.3.3; semver 3.0.1; Send2Trash 1.8.2; service-identity 18.1.0; session-info 1.0.0; setuptools 68.0.0; sip 6.6.2; six 1.16.0; smart-open 6.4.0; smmap 5.0.0; snakemake 7.32.3; sniffio 1.3.0; snowballstemmer 2.2.0; sortedcontainers 2.4.0; soupsieve 2.5; Sphinx 7.2.6; sphinxcontrib-applehelp 1.0.7; sphinxcontrib-devhelp 1.0.5; sphinxcontrib-htmlhelp 2.0.4; sphinxcontrib-jsmath 1.0.1; sphinxcontrib-qthelp 1.0.6; sphinxcontrib-serializinghtml 1.1.9; spyder 5.4.3; spyder-kernels 2.4.4; SQLAlchemy 2.0.21; stack-data 0.6.2; statsmodels 0.14.0; stdlib-list 0.8.0; stopit 1.1.2; sympy 1.12; tables 3.9.1; tabulate 0.9.0; TBB 0.2; tblib 2.0.0; tenacity 8.2.3; terminado 0.17.1; text-unidecode 1.3; textdistance 4.5.0; texttable 1.7.0; threadpoolctl 3.2.0; three-merge 0.1.1; throttler 1.2.2; tifffile 20,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2680:8959,safe,safetensors,8959,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2680,1,['safe'],['safetensors']
Safety,"14 with self.builtin_trap:; -> 2115 result = fn(magic_arg_s, cell); 2116 return result; 2117 . <decorator-gen-59> in time(self, line, cell, local_ns). /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k); 186 # but it's overkill for just that one bit of state.; 187 def magic_deco(arg):; --> 188 call = lambda f, *a, **k: f(*a, **k); 189 ; 190 if callable(arg):. /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/IPython/core/magics/execution.py in time(self, line, cell, local_ns); 1178 else:; 1179 st = clock2(); -> 1180 exec(code, glob, local_ns); 1181 end = clock2(); 1182 out = None. <timed exec> in <module>(). /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in dpt(adata, n_branchings, n_neighbors, knn, n_pcs, n_dcs, min_group_size, n_jobs, recompute_graph, recompute_pca, allow_kendall_tau_shift, flavor, copy); 127 adata.smp['dpt_pseudotime'] = dpt.pseudotime; 128 # detect branchings and partition the data into segments; --> 129 dpt.branchings_segments(); 130 # vector of length n_groups; 131 adata.add['dpt_groups_order'] = [str(n) for n in dpt.segs_names_unique]. /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in branchings_segments(self); 188 for each segment.; 189 """"""; --> 190 self.detect_branchings(); 191 self.postprocess_segments(); 192 self.set_segs_names(). /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in detect_branchings(self); 258 segs_connects,; 259 segs_undecided,; --> 260 segs_adjacency, iseg, tips3); 261 # store as class members; 262 self.segs = segs. /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in detect_branching(self, segs, segs_tips, segs_connects, segs_undecided, segs_adjacency, iseg, tips3); 464 # branching on the segment, return the list ssegs of segments that; 465 # are defined by splitting this segment; --> 466 result = self._detect_branching(Dseg, tips3, seg); 467 ssegs, ssegs_tips, ssegs_adjacency, ssegs_connec",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/33:2545,detect,detect,2545,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/33,1,['detect'],['detect']
Safety,"18:; ```; conda create -n temp_env_scanpy; conda activate temp_env_scanpy; (temp_env_scanpy) giov@vm:~$ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: -; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found to be incompatible with your CUDA driver:. - feature:/linux-64::__cuda==9.1=0. Your installed CUDA driver is: 9.1; ```; Interestingly, this error is not thrown all the time, e.g. in a VM centos 7 without cuda:; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError:; ```; Another student working with me had the same issue in windows. His error was:; ```; UnsatisfiableError: The following specifications were found to be incompatible with your CUDA driver:. - feature:/win-64::__cuda==10.2=0. Your installed CUDA driver is: 10.2; ```; But on a mac, no problem at all. In all situations, I have at least another environment with scanpy installed.; In all cases, conda was `4.8.3`.; I cannot rule out completely the possibility that my conda in those 2 vms are messed up.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1142:1551,abort,abort,1551,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1142,1,['abort'],['abort']
Safety,"2 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5923 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6767 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7077 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6080 genes that are detected in less than 5 cells; Traceback (most recent call last):; File ""/mypath/runMulti_scanpy.py"", line 161, in main; adata = sc.concat([adata,adata_tmp],join='outer'); File ""/mypath/scanpy1.7/lib/python3.8/site-packages/anndata/_core/merge.py"", line 818, in concat; X = concat_arrays(; File ""/mypath/scanpy1.7/lib/python3.8/site-packages/anndata/_core/merge.py"", line 424, in concat_arrays; return np.concatenate(; File ""<__array_function__ internals>"", line 5, in concatenate; numpy.core._exceptions.MemoryError: Unable to allocate 15.9 GiB for an array with shape (180000, 23752) and data type float32; ```. Thanks !!!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:3461,detect,detected,3461,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,3,['detect'],['detected']
Safety,"6 elif isinstance(data, ma.MaskedArray):; 437 import numpy.ma.mrecords as mrecords. /usr/local/lib/python3.8/site-packages/pandas/core/internals/construction.py in init_dict(data, index, columns, dtype); 237 else:; 238 nan_dtype = dtype; --> 239 val = construct_1d_arraylike_from_scalar(np.nan, len(index), nan_dtype); 240 arrays.loc[missing] = [val] * missing.sum(); 241 . /usr/local/lib/python3.8/site-packages/pandas/core/dtypes/cast.py in construct_1d_arraylike_from_scalar(value, length, dtype); 1438 else:; 1439 if not isinstance(dtype, (np.dtype, type(np.dtype))):; -> 1440 dtype = dtype.dtype; 1441 ; 1442 if length and is_integer_dtype(dtype) and isna(value):. AttributeError: type object 'object' has no attribute 'dtype'; ```. #### Versions. <details>. WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.4; scanpy 1.6.0; sinfo 0.3.4; -----; MulticoreTSNE NA; PIL 8.0.1; appnope 0.1.2; attr 20.3.0; backcall 0.2.0; cffi 1.14.4; cloudpickle 2.0.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.2; dask 2022.01.0; dateutil 2.8.1; decorator 4.4.2; dunamai 1.7.0; fsspec 2022.01.0; get_version 3.5.3; google NA; h5py 2.10.0; idna 2.10; igraph 0.9.6; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.17.2; jinja2 2.11.2; joblib 1.0.1; jsonschema 3.2.0; jupyter_server 1.13.3; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.0; llvmlite 0.38.0; loompy 3.0.6; louvain 0.7.0; markupsafe 1.1.1; matplotlib 3.3.3; mpl_toolkits NA; natsort 7.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2121:4282,avoid,avoid,4282,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2121,1,['avoid'],['avoid']
Safety,"; 310 show = settings.autoshow if show is None else show; 311 if save:; --> 312 savefig(writekey, dpi=dpi, ext=ext); 313 if show:; 314 pl.show(). ~/opt/anaconda3/lib/python3.8/site-packages/scanpy/plotting/_utils.py in savefig(writekey, dpi, ext); 280 else:; 281 dpi = rcParams['savefig.dpi']; --> 282 settings.figdir.mkdir(parents=True, exist_ok=True); 283 if ext is None:; 284 ext = settings.file_format_figs. AttributeError: 'str' object has no attribute 'mkdir'; ```. #### Versions. scanpy==1.8.1 anndata==0.7.6 umap==0.5.1 numpy==1.18.5 scipy==1.6.2 pandas==1.1.5 scikit-learn==0.24.2 statsmodels==0.12.2 python-igraph==0.9.4 louvain==0.7.0 pynndescent==0.5.2. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 8.3.1; anyio NA; appdirs 1.4.4; appnope 0.1.2; attr 21.2.0; babel 2.9.1; backcall 0.2.0; bioservices 1.7.12; bottleneck 1.3.2; brotli NA; bs4 4.9.3; certifi 2021.05.30; cffi 1.14.6; chardet 4.0.0; cloudpickle 1.6.0; colorama 0.4.4; colorlog NA; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2021.07.2; dateutil 2.8.2; decorator 5.0.9; defusedxml 0.7.1; docutils 0.17.1; easydev 0.11.1; fsspec 2021.07.0; gseapy 0.10.5; h5py 2.10.0; html5lib 1.1; idna 2.10; igraph 0.9.4; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.6.3; jedi 0.17.2; jinja2 2.11.3; joblib 1.0.1; json5 NA; jsonschema 3.2.0; jupyter_server 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1981:3457,avoid,avoid,3457,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1981,1,['avoid'],['avoid']
Safety,"<!-- Please give a clear and concise description of what the bug is: -->; I am calculating custom connectivities using hsnw on rep 'X', I don't want to calculate PCA, I want to compute UMAP using these connectivities. ; sc.tl.umap falls back to pca in:; https://github.com/theislab/scanpy/blob/5bc37a2b10f40463f1d90ea1d61dc599bbea2cd0/scanpy/tools/_umap.py#L153; https://github.com/theislab/scanpy/blob/5bc37a2b10f40463f1d90ea1d61dc599bbea2cd0/scanpy/tools/_utils.py#L23. how to get sc.tl.umap to run on the precomputed 'X 'connectivities?; ... <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; from scvelo.pp import neighbors; adata; #AnnData object with n_obs × n_vars = 4329 × 192; #obs: 'BARCODE', 'sample', 'detectable.features'; #var: 'gene_ids', 'feature_types'; #layers: 'normalized.counts'. neighbors(adata, n_neighbors = 20, use_rep = ""X"",knn = True,random_state = 0,method = 'hnsw',metric = ""euclidean"",metric_kwds = {""M"":20,""ef"":200,""ef_construction"":200},num_threads=1). adata.uns[""neighbors""]['params']; #{'n_neighbors': 20, 'method': 'hnsw', 'metric': 'euclidean', 'n_pcs': None}. sc.tl.umap(adata). #WARNING: .obsp[""connectivities""] have not been computed using umap; #WARNING: You’re trying to run this on 192 dimensions of `.X`, if you really want this, set `use_rep='X'`.; # Falling back to preprocessing with `sc.pp.pca` and default params. ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; #WARNING: .obsp[""connectivities""] have not been computed using umap; #WARNING: You’re trying to run this on 192 dimensions of `.X`, if you really want this, set `use_rep='X'`.; # Falling back to preprocessing with `sc.pp.pca` and default params. ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; scanpy==1.5.1 anndata==0.7.3 umap==0.4.4 numpy==1.19.0 scipy==1.5.0 pandas==1.0.5 scikit-learn==0.23.1 statsmodels==0.11.1 python-",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1318:789,detect,detectable,789,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1318,1,['detect'],['detectable']
Safety,"<!-- Please give a clear and concise description of what the bug is: -->; Not able to install with conda and no info about the source of error.; <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```bash; (scrna) $ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: | ; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1190:808,abort,abort,808,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1190,1,['abort'],['abort']
Safety,"<!-- What kind of feature would you like to request? -->; - [ ] Additional function parameters / changed functionality / changed defaults?; - [X] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; ...; `sc.tl.score_genes_cell_cycle` calculates scores via `sc.tl.score_genes` but also assigns a categorical label of cell cycle phase. Given lists of marker genes of cell types, can a similar approach be used to potentially annotate putative cell types? Maybe it is too naive? My main concern is that cells that do not fit any cell type for which there are markers will be mis-assigned. I am aware that there are tons of automated cell type prediction tools for scRNA-seq, but not found anything directly supported by scanpy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1863:911,predict,prediction,911,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1863,1,['predict'],['prediction']
Safety,"<!-- What kind of feature would you like to request? -->; - [ ] Additional function parameters / changed functionality / changed defaults?; - [x] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; Adding multiplex community detection from Leiden: https://leidenalg.readthedocs.io/en/stable/multiplex.html#layer-multiplex. It seems very straightforward and would be the most simple way to integrate two modalities on the graph. We would make great use of it in Squidpy (rna counts+image), but I think it should live in Scanpy becasue it could be useful for other multi-modal data. This is a duplicate of #1107 and it has been extensively discussed in #1117 . In the latter however, lots of thought went into normalization/processing which is superfluous for this case as it is only specific for CITE-seq data. Here we'd just want to allow users to get partitions out of multiple graphs. This could be done in two ways:; - adding arguments to existing `tl.leiden`, so that it accepts multiple graphs and multiple resolutions params per graph.; - creating a separate function `sc.tl.leiden_multiplex`.; Any thoughts on this @ivirshup @Koncopd ?. I think @WeilerP also had some thoughts along these lines. Have you ever tried this out? is there any other analysis tool you explored with a simlar purpose? Would be interested to hear your thoughts!; worth mentioning that another approach, the WNN from seurat, was also mentioned here: https://github.com/theislab/scanpy/pull/1117#issuecomment-777020580; although am not sure how much work that requries.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1818:496,detect,detection,496,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1818,1,['detect'],['detection']
Safety,"<!-- What kind of feature would you like to request? -->; - [x] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->. Especially when we visualize large datasets with multiple categorical variables (e.g. patient, disease, cell type) using `sc.pl.dotplot`, and we use a sequence in the `groupby` argument (`e.g. sc.pl.dotplot(ad, 'genex', groupby=['individual', 'disease_status', 'cell type'])`), sometimes we end up with too few cells in some rows, in which summary statistics like fraction of nonzero expressors or mean expression are not very robust. To avoid that, I think it'd be cool to have a minimum observation cutoff in the function, where e.g. `min_cells=5` would show `groupby` combinations with at least 5 cells. Without this option, this sort of filtering becomes an annoying pandas exercise (which some might enjoy but possibly not everyone).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1829:907,avoid,avoid,907,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1829,1,['avoid'],['avoid']
Safety,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [X] Fixes #1867; - [X] Tests included or not required because: New tests included which catch the failure mode described in #1867. Current implementation fails these.; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because: Added entry in release notes. Addresses issue #1867 with a fix as outlined by @jlause and tests which catch the failure mode detected and nicely demonstrated by @jlause.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2757:713,detect,detected,713,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2757,1,['detect'],['detected']
Safety,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2836; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change. Changes:; - Removes import-time change to globals:; 	- `matplotlib.testing:setup` should be called before each (plotting) test; 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params; 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that.; - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2838:799,redund,redundant,799,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838,1,['redund'],['redundant']
Safety,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes NA; - [x] Tests included or not required because: dev change; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change. This allows clickable links when developing in a path with spaces. TODO: check if nunit attachment URLs are predictable. If yes, emit them instead of paths in CI runs, i.e. instead of the Expected/Actual/Diff part, display just this URL:. display: https://dev.azure.com/scverse/scanpy/_build/results?buildId=5698&view=ms.vss-test-web.build-test-results-tab&runId=18968&resultId=100831&paneView=attachments. /edit: doesn’t seem like it’s possible. The URL contains `resultId=100831`, and I don’t see how this could be known at runtime. I assume those get assigned after the NUnit XML gets uploaded. ----. Once https://github.com/microsoft/vscode/issues/176812 is fixed, we can change this to [OSC 8](https://github.com/Alhadis/OSC8-Adoption) links",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2860:613,predict,predictable,613,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2860,1,['predict'],['predictable']
Safety,"According to the PBMC 3k tutorial, which I consider as the 'best practice' tutorial for scanpy, regressing out the fraction of mitochondrial reads and the number of detected genes is recommended as a 'standard processing step'. . Having analysed two different datasets, I am so sure anymore if this is a good idea. **number of detected genes**; I loaded these datasets into scanpy and processed them according to the 3k PBMC tutorial: ; * [Savas et al., 2018](https://doi.org/10.1038/s41591-018-0078-7), ~6k cells, CD3+ T cells, BRCA; * [Lambrechts et al., 2018](https://doi.org/10.1038/s41591-018-0096-5), ~32k cells, whole tissue NSCLC. Regress-out seems to perfectly do its jobs on the *Savas et al.* dataset, that contains closely related cell types (1st row of figure): The 2nd PC is confounded by the number of detected genes and this effect is reduced. . On the *Lambrechts et al* dataset, that contains all kinds of cells (cancer, stromal, immune), this looks differently: Neither of the first 2 PCs seems to be related to the number of detected genes and it actually seems to me that I am 'loosing' information by applying `regress_out` (everything is now a single blob). . **cell cycle**; The lower part of the plot shows regress out applied to the cell cycle (following [the scanpy tutorial](https://nbviewer.jupyter.org/github/theislab/scanpy_usage/blob/master/180209_cell_cycle/cell_cycle.ipynb) and the 'alternative approach' described in the [seurat vignette](https://satijalab.org/seurat/cell_cycle_vignette.html#assign-cell-cycle-scores), i.e. I regressed out the difference between the G2M and S phase scores):; ```; adata.obs[""cell_cycle_diff""] = adata.obs[""S_score""] - adata.obs[""G2M_score""]; sc.pp.regress_out(adata, ['cell_cycle_diff']); ```; Like that, the differences between dividing and non-dividing cells should be preserved. ; Again, in the *Savas* dataset, after regressing out the cell cycle effects, G1 is correctly separated from G2M/S. In *Lambrechts*, there is no cle",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/526:165,detect,detected,165,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/526,3,['detect'],['detected']
Safety,"An updated new release of [`PhenoGraph`](https://github.com/dpeerlab/PhenoGraph) package now supports `Leiden` algorithm for community detection. The suggested changes in `scanpy/external/tl/_phenograph.py` will make the new updates visible in Scanpy as well. Also, the suggested changes include a testing function in `scanpy/tests/external/test_phenograph.py`, and updated docs.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1080:135,detect,detection,135,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1080,1,['detect'],['detection']
Safety,"Anndata's __init__.py is a shortcut, a full path; avoids the issue. This PR uses the full path as fallback if the; shortcut fails. Issue: #1439",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1440:50,avoid,avoids,50,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1440,1,['avoid'],['avoids']
Safety,Avoid argument explosion in plotting functions,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/956:0,Avoid,Avoid,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/956,1,['Avoid'],['Avoid']
Safety,Avoid large copy in subsample,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1022:0,Avoid,Avoid,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1022,1,['Avoid'],['Avoid']
Safety,Avoid warning in rank_genes_groups if 't-test' is passed,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1303:0,Avoid,Avoid,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1303,1,['Avoid'],['Avoid']
Safety,Backport PR #3289 on branch 1.10.x ((fix): conditional imports to avoid `anndata.io` warning),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3290:66,avoid,avoid,66,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3290,1,['avoid'],['avoid']
Safety,Backport PR #3289: (fix): conditional imports to avoid `anndata.io` warning,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3290:49,avoid,avoid,49,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3290,1,['avoid'],['avoid']
Safety,Branching points detection,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/11:17,detect,detection,17,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/11,1,['detect'],['detection']
Safety,"By default, Travis does `git clone --depth=50` which means the version can’t be detected from the git tag. In case we ever start relying on the version being correct in the tests, this fixes it.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1713:80,detect,detected,80,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1713,1,['detect'],['detected']
Safety,"C 3k tutorial, which I consider as the 'best practice' tutorial for scanpy, regressing out the fraction of mitochondrial reads and the number of detected genes is recommended as a 'standard processing step'. . Having analysed two different datasets, I am so sure anymore if this is a good idea. **number of detected genes**; I loaded these datasets into scanpy and processed them according to the 3k PBMC tutorial: ; * [Savas et al., 2018](https://doi.org/10.1038/s41591-018-0078-7), ~6k cells, CD3+ T cells, BRCA; * [Lambrechts et al., 2018](https://doi.org/10.1038/s41591-018-0096-5), ~32k cells, whole tissue NSCLC. Regress-out seems to perfectly do its jobs on the *Savas et al.* dataset, that contains closely related cell types (1st row of figure): The 2nd PC is confounded by the number of detected genes and this effect is reduced. . On the *Lambrechts et al* dataset, that contains all kinds of cells (cancer, stromal, immune), this looks differently: Neither of the first 2 PCs seems to be related to the number of detected genes and it actually seems to me that I am 'loosing' information by applying `regress_out` (everything is now a single blob). . **cell cycle**; The lower part of the plot shows regress out applied to the cell cycle (following [the scanpy tutorial](https://nbviewer.jupyter.org/github/theislab/scanpy_usage/blob/master/180209_cell_cycle/cell_cycle.ipynb) and the 'alternative approach' described in the [seurat vignette](https://satijalab.org/seurat/cell_cycle_vignette.html#assign-cell-cycle-scores), i.e. I regressed out the difference between the G2M and S phase scores):; ```; adata.obs[""cell_cycle_diff""] = adata.obs[""S_score""] - adata.obs[""G2M_score""]; sc.pp.regress_out(adata, ['cell_cycle_diff']); ```; Like that, the differences between dividing and non-dividing cells should be preserved. ; Again, in the *Savas* dataset, after regressing out the cell cycle effects, G1 is correctly separated from G2M/S. In *Lambrechts*, there is no clear separation. Havin",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/526:1045,detect,detected,1045,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/526,1,['detect'],['detected']
Safety,"Conda installation fails silently with no error. Installation command:; ```; conda install -c bioconda scanpy; ```. Output:; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: / ; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions; ```. Increasing the verbosity did not help. Using older python version did not helpeither.. It looks like the metadata are not correct but I am not able to validate this. I tried miniconda anaconda clean installs and I had no luck whatsoever. Pip install works fine.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1298:646,abort,abort,646,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1298,1,['abort'],['abort']
Safety,"Continuation from #805, cc @gokceneraslan @falexwolf . > Why do we change Matplotlib ""font.sans-serif"" anyway?. Alex started replacing fonts from the beginning:. https://github.com/theislab/scanpy/blob/c22e48abe45a6ccca5918bbf689637caa4b31250/scanpy/plotting.py#L605. He then updated them to the stack we have now:. https://github.com/theislab/scanpy/blob/6c68b8ba2821f27bd0b8f499a1d543dff9cc51b2/scanpy/plotting.py#L763-L767. There’s some known [metrically compatible](https://wiki.archlinux.org/index.php/Metric-compatible_fonts) fonts, but our stack doesn’t reflect that, as e.g. DejaVu Sans isn’t metrically compatible to Arial and Helvetica. Is the [default matplotlib stack](https://github.com/matplotlib/matplotlib/blob/90fba030f534b3d7068e536fcfc4a2dc8d459eeb/lib/matplotlib/rcsetup.py#L1125-L1129) better or can we at least gain inspiration from it? What would be a safe stack to use on most OSs (even if that means fiddling with our plots if we change the stack to not-Helvetica-like)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/897:875,safe,safe,875,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/897,1,['safe'],['safe']
Safety,"Currently, `sc.tl.louvain` etc return cluster assignments as a Categorical with dtype `str` resulting in incompatibility with matplotlib color sequences. For example, the following code raises a ValueError:. ```python; import numpy as np; import scanpy as sc; import matplotlib.pyplot as plt. adata = sc.AnnData(np.random.normal(size=(100,2))); sc.pp.neighbors(adata); sc.tl.louvain(adata); plt.scatter(adata.X[:,0], adata.X[:,1], c=adata.obs['louvain']); ```. The error is: `ValueError: RGBA values should be within 0-1 range`. Funnily enough, this used to work due to a bug in matplotlib that was fixed in https://github.com/matplotlib/matplotlib/pull/13913. Note, the following code works as intended:. ```python; plt.scatter(adata.X[:,0], adata.X[:,1], c=adata.obs['louvain'].astype(int)); ```. I would have submitted a PR changing this behavior had I not noticed that returning cluster assignments as `str` is explicitly checked here:. https://github.com/theislab/scanpy/blob/78125e6355c0cd2c4ae930495829282eea6f4a52/scanpy/tools/_utils_clustering.py#L11-L23. This brings up a larger design question in scanpy / anndata: *Why are arrays of numerics routinely converted to strings representing numbers?*. In `https://github.com/theislab/anndata/issues/311` I found a case where converting arrays of numerics to strings creates a bug when assigning to AnnData `obsm` with DataFrames with a RangeIndex. In that case, I understand there's a desire to avoid ambiguity in positional vs label indexing, but that issue was solved in pandas with the `.loc` and `.iloc` conventions. Why not carry that forward?. In this case, why not just return cluster assignments as arrays of numerics as is done in `sklearn.cluster`? . I think following these conventions will make both tools much more accessible to the general Python data science community.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1030:1452,avoid,avoid,1452,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030,1,['avoid'],['avoid']
Safety,"Dear all,. I am writing to ask you some other functionalities.; I have just moved from Seurat to Scanpy and I am finding Scanpy a very nice and well done Python package. . 1. I wrote a function to show the 3D plot of the UMAP, tSNE and PCA spaces. In the `scanpy.tl.tsne` function is not possible to change the number of components, it calculates only the first two components, even if the `scanpy.pl.tsne` function has a parameter `component`. May you add a parameter like the `n_components` of the `scanpy.tl.umap` function?. 2. In the `rank_genes_groups` function the log2FC values are provided only for ‘t-test’ based methods. May you return the log2FC values (maybe named log2FC) for all the implemented statistical methods?. 3. I think that two parameters in the `rank_genes_groups` function should be added.; - `min_pCells` to test only the genes that are detected in a minimum fraction of cells of either of the two populations (e.g., cluster 0 vs rest). For instance, min_pCells=0.3 means that at least 30% of the cells must express that gene.; - `positive`, if it is True, the function should return only positive marker genes for each population. 4. A function showing the volcano plots (based on the log2FC) can help (I can write it if the log2FC values are provided). Thank you in advance.; Best,; Andrea",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/460:863,detect,detected,863,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/460,1,['detect'],['detected']
Safety,Every piece of redundant code we delete is one we don’t have to maintain.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/556:15,redund,redundant,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/556,1,['redund'],['redundant']
Safety,Failing to detect ipython,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1841:11,detect,detect,11,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1841,1,['detect'],['detect']
Safety,Feature request - DPT predict,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/53:22,predict,predict,22,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/53,1,['predict'],['predict']
Safety,Fix ipython detection,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1844:12,detect,detection,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1844,1,['detect'],['detection']
Safety,Get modularity score after community detection in leiden/louvain,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2908:37,detect,detection,37,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2908,1,['detect'],['detection']
Safety,"Goals:. - flexibility in creation; - Neighbor querying API; - Harmonize storage of backends’ querying indices. 	- use it in doublet detection and scanorama reimplementations. Current solution: `method` arg. https://github.com/scverse/scanpy/blob/ed8e1401d39068782f2435d258b33fce4f7b4a9e/scanpy/neighbors/__init__.py#L32. - if `use_dense_distances`: [`sklearn.metrics.pairwise_distances`](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise_distances.html); - if `method == 'rapids'`: [`cuml.neighbors.NearestNeighbors`](https://docs.rapids.ai/api/cuml/stable/api/#cuml.neighbors.NearestNeighbors); - otherwise: [`umap.umap_.nearest_neighbors`](https://umap-learn.readthedocs.io/en/latest/api.html#umap.umap_.nearest_neighbors); - if `method == 'gauss'`: use umap distances, overwrite its connectivities. ## Evaluating options. See [ann-benchmarks.com](https://ann-benchmarks.com/index.html#datasets). Build time vs query time is not straightforward, see https://github.com/erikbern/ann-benchmarks/issues/207#issuecomment-1180389432 and https://github.com/erikbern/ann-benchmarks/issues/207#issuecomment-1180747770. > If, however, you are simply interested in knn-graph construction then you can get that from pynndescent in less time than even the index construction time (since the prepare phase isn't required, but is a non-trivial part of the index construction time). Plots for index building are on individual dataset pages, like [glove-100-angular](https://ann-benchmarks.com/glove-100-angular_10_angular.html). <details>; <summary>Used metrics</summary>. https://github.com/scverse/scanpy/blob/ed8e1401d39068782f2435d258b33fce4f7b4a9e/scanpy/neighbors/__init__.py#L35-L56. </details>. Interesting:. Name | Demo | wheels: Platforms | wheels: Python | Search speed | Index build; --- | --- | --- | --- | --- | ---; [NMSLIB](https://github.com/nmslib/nmslib) | [6 notebooks](https://github.com/nmslib/nmslib/blob/master/python_bindings/notebooks/README.md) | [Linux wheels](",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2519:132,detect,detection,132,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2519,1,['detect'],['detection']
Safety,"Hey!. I have recently gotten a quite deeply clinically phenotyped dataset and have been pondering how the metadata should best be stored in an anndata object. It feels redundant to duplicate a label for every cell from the same patient. Instead, one could save patient-level data in `adata.uns` and then have a function that links categories in an obs column to e.g., keys in a dict in `adata.uns`. This would save quite a lot of space in anndata objects if you have a lot of clinical metadata. I'm thinking of this as a hidden function that plotting functions could use instead of just looking for `.obs` columns to plot data. This may be somewhat linked to #619.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/658:168,redund,redundant,168,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/658,1,['redund'],['redundant']
Safety,"Hey,. finally solves #1563 . I added: . ```; - id: trailing-whitespace; - id: end-of-file-fixer; - id: check-added-large-files; - id: check-case-conflict; - id: check-toml; - id: check-yaml; - id: check-merge-conflict; - id: detect-private-key; ```. They are super super fast, so speed is not a concern. Signed-off-by: zethson <lukas.heumos@posteo.net>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1848:225,detect,detect-private-key,225,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1848,1,['detect'],['detect-private-key']
Safety,"Hey,. we moved from conda-forge to Bioconda -> https://github.com/scverse/scanpy/issues/1169. Unfortunately, this comes at a cost which is highly relevant for pipeline building. nf-core wants to add support for scverse data structures: https://github.com/nf-core/scrnaseq/issues/68 The issue is that Bioconda autogenerates Docker & Singularity containers which Nextflow pipelines always use to provide support for all execution environments. conda-forge does not. The official Dockerhub is firstly stuck in an old version and, when used, it lacks the package `procps` that is used by nextflow to track execution. How serious are the Bioconda issues? Can we resolve them and move back? I'd avoid always having to manage also our own container releases and love the automated container building by Bioconda.; I was also made aware by @apeltzer that bio specific tools should live in bioconda. Choosing to put them in conda-forge is not really desired. @ivirshup @flying-sheep . CC @drpatelh @fmalmeida @apeltzer @grst",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2281:689,avoid,avoid,689,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2281,1,['avoid'],['avoid']
Safety,"Hi @giovp @ivirshup, (also CCing @dkobak). as we discussed at #1715 and in https://github.com/theislab/scanpy-tutorials/pull/43, I prepared a function `pearson_residuals_hvg_scatter()` that wraps `sc.pl.scatter()` to reproduce the ""gene selection plot"" from the tutorial. It can be used as a sanity check for both the HVG selection and the appropriateness of the used Pearson residual null model (as explained also in the tutorial notebook). I also added a feature to show known marker genes on the plot, change plot aesthetics and which fields are used for plotting. Looking forward to your thoughts on this one :); Best,; Jan. PS: I prepared this PR on an independent branch from #1715 - hope that is the correct way in this situation!; ```; import scanpy as sc; sc.settings.set_figure_params(dpi=80, facecolor=""white""). #run pearson residuals gene selection; adata=sc.datasets.pbmc3k(); sc.pp.filter_genes(adata, min_cells=1); sc.experimental.pp.highly_variable_genes(adata, flavor=""pearson_residuals"", n_top_genes=2000). #basic plot; sc.experimental.pl.pearson_residuals_hvg_scatter(adata); ```; ![image](https://user-images.githubusercontent.com/34481813/158408471-5d661d60-11f3-482d-981b-da3a507b64b4.png). ```; #modify some aesthetics; sc.experimental.pl.pearson_residuals_hvg_scatter(adata,kwargs_sc_pl_scatter=dict(size=30)); ```. ![image](https://user-images.githubusercontent.com/34481813/158408564-9ca8b476-c0e6-4159-8c4e-cc4b542f43c4.png). ```; #highlight some marker genes; markers = [""IL7R"", ""LYZ"", ""CD14"", ""MS4A1"", ""CD8A"", ""GNLY""]; sc.experimental.pl.pearson_residuals_hvg_scatter(adata,marker_names=markers,kwargs_sc_pl_scatter=dict(size=30)); ```; ![image](https://user-images.githubusercontent.com/34481813/158408630-f973cb16-0165-42ee-95e6-55e9e6de676e.png). ```; #use custom fields in `adata` for x and y; #(there is also a similar option to use a different field for where HVG flag is stored); sc.experimental.pl.pearson_residuals_hvg_scatter(adata,x='means',y='variances',return",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2176:292,sanity check,sanity check,292,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2176,1,['sanity check'],['sanity check']
Safety,"Hi all,. I have updated my scanpy to version 1.4 (was working on 1.3.7 before) and did not get the same filtering output using sc.pp.filter_ working with the same input dataset (10X). By running in sc1.3.7: sc.pp.filter_genes(adata, min_counts=2); -> 267 genes were filtered out and I was able to follow up on my analysis until the end. However, after switching to the new version, I could not get any filtering anymore. By scaling up, the first filtering I got was with a min of counts of 4 (sc.pp.filter_genes(adata, min_counts=4)); ""filtered out 655 genes that are detected in less than 4 counts"". Not sure what is going on there and which setting I should use then. Any feedback will be more than appreciated. Thank you",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/501:568,detect,detected,568,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/501,1,['detect'],['detected']
Safety,"Hi everyone,. Thank you for scanpy! I use it very frequently for my research. I am getting started with spatial data, and would like to ask if there is any prediction for when IMC data will be supported? You mention this in the [spatial transcriptomics tutorial](https://scanpy-tutorials.readthedocs.io/en/latest/spatial/basic-analysis.html) so I suppose it's coming soon -- but how soon?; If you have started something and need an extra pair of hands to get it done, I would be happy to contribute! . Thanks,; Pedro",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1503:156,predict,prediction,156,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1503,1,['predict'],['prediction']
Safety,"Hi scanpy team,. The HVG method seurat_v3 requires raw count as input. So I stored my data into adata.obsm['raw_data']. When i was trying to recover the raw count with the following code. it is very slow. Do you have any tips?. ```; ad.X = ad.obsm['raw_data'].copy(); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1817:141,recover,recover,141,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1817,1,['recover'],['recover']
Safety,"Hi there,. I am doing a DE analysis using the functions `rank_genes_groups` and `filter_rank_genes_groups`.; I noticed that when two groups are compared (I did not check when multiple groups are compared) the parameter `min_in_group_fraction` of the function `filter_rank_genes_groups` is used only to filter the first group. I applied twice the functions `rank_genes_groups` and `filter_rank_genes_groups` to filter the calculated genes (I am asking that a gene is expressed in at least X% of cells).; There are mainly two possibilities, namely:; - a gene is expressed in at least X% of cells of **both** groups;; - a gene is expressed in at least X% of cells of **either** group1 or group2. In Seurat, the function `FindAllMarkers` has the parameter `min.pct `that is used to only test the genes that are detected in a minimum fraction of `min.pct` cells in either group1 or group2. It would be interesting to include these filtering steps in the `filter_rank_genes_groups` (maybe both strategies, i.e., **both** groups and **either** group1 or group2). What do you think? . Thanks!; Andrea",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1324:807,detect,detected,807,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1324,1,['detect'],['detected']
Safety,"Hi!; As someone else posted on [stackoverflow](https://stackoverflow.com/questions/54366505/importerror-dll-load-failed-while-file-is-in-working-directory/54441575#54441575), there seem to be problems with the tables dependencies for windows users resulting in the following error when importing scanpy:. ```pytb; >>> import scanpy; ...; File ""C:\Miniconda3\envs\py36\lib\site-packages\scanpy\readwrite.py"", line 9, in; import tables; File ""C:\Miniconda3\envs\py36\lib\site-packages\tables__init__.py"", line 131, in; from .file import File, open_file, copy_file; File ""C:\Miniconda3\envs\py36\lib\site-packages\tables\file.py"", line 35, in; from . import hdf5extension; ImportError: DLL load failed: The specified procedure could not be found.; ```. I've also posted an answer suggestion there. Maybe you could require h5py to have a fixed older version like 2.8 to avoid this problem for other windows users. Downgrading to that version worked for me.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/454:866,avoid,avoid,866,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/454,1,['avoid'],['avoid']
Safety,"Hi, I am reproducing this tutorial https://nbviewer.jupyter.org/github/theislab/scanpy_usage/blob/master/170503_zheng17/zheng17.ipynb. the line sc.pp.neighbors(adata) produces the following error:. Inconsistency detected by ld.so: dl-version.c: 205: _dl_check_map_versions: Assertion `needed != NULL' failed!. Ubuntu 18.04; Python 3.6.6. scanpy==1.3.1 anndata==0.6.10 numpy==1.15.2 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.19.2 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 . Can you help me? Thank You",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/280:212,detect,detected,212,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/280,1,['detect'],['detected']
Safety,"Hi, first thanks for sharing this analysis tool. I prefer Python much more to R, though most Bioinformatics tools are written in R. Here I want to ask a question about data processing before we feed it as _adata_ into _dpt_ for _pseudotime_ ordering. . As the DPT algorithm can accept multiple types of data, such as the most commonly single-cell qPCR (Ct values) and RNA-Seq (FPKM/TPM) data, is the data processing procedure identical with each other? Since I have also checked the Monocle 2 algorithm, it seems much more complicated in Monocle 2. For instance, in the 4th page of its document [link](http://www.bioconductor.org/packages/release/bioc/vignettes/monocle/inst/doc/monocle-vignette.pdf), it asks you to specify different _expressionFamily_, i.e., the proper distribution of the data, for different kinds of data. Then, how about the _dpt_ function in scanpy? Does it take all kinds of data the same way?. According to my understanding, ; - For qPCR data, we should provide delta_Ct=LOD-Ct values to _dpt_ (LOD: limit of detection);; - For RNA-Seq data, we should offer log2(FPKM+1) to _dpt_.; Is it right?. Any help is appreciated.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/26:1034,detect,detection,1034,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/26,1,['detect'],['detection']
Safety,"Hi,. I tried the [`DoubletDetection`](https://github.com/JonathanShor/DoubletDetection) Python library on my data and got some interesting result. As it can be run directly on a numpy array of count matrix (`adata.X`), I thought it would be an interesting feature for `scanpy`. . ```; clf = doubletdetection.BoostClassifier() ; doublets = clf.fit(adata.X).predict(); adata.obs['doublet'] = pd.Categorical(doublets.astype(bool)); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/173:356,predict,predict,356,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/173,1,['predict'],['predict']
Safety,"Hi,. I'm using AGA to build global trajectories on neuronal differentiation datasets. It works well on small subsets of data (only progenitors or only neurons), but produces spurious trajectories between clusters that cannot be explained (progenitors --> inhibitory neurons --> excitatory neurons, rather than progenitors --> excitatory neurons). I'm thinking that part of this may be due to noise/outliers in the dataset. . From the paper (Supplementary Note 3.2), it looks like the connectivity between two partitions are calculated as the minimum distance between all pairs of points, which is prone to outliers. . > Taking the minimum is independent of the specific shape of a partition but is prone to outliers: it is only a viable option as the distance measure d itself is highly robust being computed as an average over all random walks on the graph. . Are there alternative ways to calculate connectivities that are more robust to outliers? (e.g. other connectivity metrics or something like Endpoint Supervision in Slingshot (https://doi.org/10.1101/128843) to avoid connecting endpoints from different lineages.)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/96:1071,avoid,avoid,1071,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/96,1,['avoid'],['avoid']
Safety,"Hi,. In the example notebook, `seurat.ipynb`, the function `sc.pp.normalize_per_cell()` is run before `sc.pp.regress_out()`. Is it not better to regress out the effect of n_counts before normalization? I do not completely understand this and it would be great if the authors could explain this order of pre-processing. Also, is there certain order(s) of steps which should always be avoided?. Thank you. Best,; Parashar",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/48:383,avoid,avoided,383,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/48,1,['avoid'],['avoided']
Safety,"Hi,; I couldn't import scanpy due to an error: DLL load failed. I have checked pre-existing issues, but all of them seem to be an h5py issue. My error report seems different from them.; ```; >>> import scanpy as sc; D:\Anaconda\lib\site-packages\dask\config.py:168: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.; data = yaml.load(f.read()) or {}; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\__init__.py"", line 36, in <module>; from . import tools as tl; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\tools\__init__.py"", line 17, in <module>; from ._sim import sim; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\tools\_sim.py"", line 23, in <module>; from .. import _utils, readwrite, logging as logg; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\readwrite.py"", line 10, in <module>; import tables; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\tables\__init__.py"", line 99, in <module>; from .utilsextension import (; ImportError: DLL load failed: The specified procedure could not be found. >>> print(sys.version); 3.7.3 (default, Mar 27 2019, 17:13:21) [MSC v.1915 64 bit (AMD64)]; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1468:362,unsafe,unsafe,362,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1468,1,['unsafe'],['unsafe']
Safety,"Hi,; I have some problems running Louvain clustering.; The first time I tried to run, it complains about missing library `igraph`.; I installed `igraph` but now this same library throws a `DeprecationWarning` when calling Louvain clustering. ```; ---------------------------------------------------------------------------; DeprecationWarning Traceback (most recent call last); <ipython-input-17-329d7c2ac26c> in <module>(); ----> 1 sc.tl.louvain(adata). ~/.pyenv/versions/3.6.4/lib/python3.6/site-packages/scanpy/tools/louvain.py in louvain(adata, resolution, random_state, restrict_to, key_added, adjacency, flavor, directed, n_jobs, copy); 79 directed = False; 80 if not directed: logg.m(' using the undirected graph', v=4); ---> 81 g = utils.get_igraph_from_adjacency(adjacency, directed=directed); 82 if flavor == 'vtraag':; 83 import louvain. ~/.pyenv/versions/3.6.4/lib/python3.6/site-packages/scanpy/utils.py in get_igraph_from_adjacency(adjacency, directed); 92 def get_igraph_from_adjacency(adjacency, directed=None):; 93 """"""Get igraph graph from adjacency matrix.""""""; ---> 94 import igraph as ig; 95 sources, targets = adjacency.nonzero(); 96 weights = adjacency[sources, targets]. ~/.pyenv/versions/3.6.4/lib/python3.6/site-packages/igraph/__init__.py in <module>(); 6 __license__ = ""MIT""; 7 ; ----> 8 raise DeprecationWarning(""To avoid name collision with the igraph project, ""; 9 ""this visualization library has been renamed to ""; 10 ""'jgraph'. Please upgrade when convenient.""). DeprecationWarning: To avoid name collision with the igraph project, this visualization library has been renamed to 'jgraph'. Please upgrade when convenient.; ```. I can work on a PR and change line 94 of `scanpy/utils.py` to:. ```; import jgraph as ig; ```. This should solve the issue afaik (and `jgraph` should be listed in the dependencies I think). Let me know if you accept PRs. Thanks,; Francesco",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/138:1343,avoid,avoid,1343,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/138,2,['avoid'],['avoid']
Safety,"Hi,; Scanpy detect high variable genes with normalized (but not logarithmized) data (refer to Clustering 3k PBMCs following a Seurat Tutorial), while Seurat do this by first normalize the raw data, then logarithmize the data and finally detect high variable genes, which one is better ? or both of them works well ?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/188:12,detect,detect,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/188,2,['detect'],['detect']
Safety,"I added a new `batch_key` option to HVG function. If specified, it runs the HVG selection in every batch separately and then merges the list in order to reduce the batch effects by avoiding the selection of batch-specific genes. This doesn't fully correct the batch effect but reduces it. Running the function for each batch is trivial but merging is trickier than I thought. How I do it now is as follows:. - hvg is run on each batch and resulting hvg lists are first concatenated into a single dataframe.; - The data frame is grouped by genes. mean, dispersion and normalized dispersion values are aggregated via ~~np.nanmin~~ np.nanmean. Another column which counts ""in how many batches a gene is detected as hvg"" is also created. ~~I'm not 100% certain about nanmin, but I think it works better than mean or max, because it forces the process to pick genes with high dispersion even in the ""worst"" batches.~~; - if n_top_genes is given, combined hvg lists are sorted by 1) in how many batches a gene is detected as hvg 2) normalized dispersion. normalized dispersion is used to break the ties. Then top n genes are selected as the final hvg list.; - if n_top_genes is not given, same mean and dispersion thresholds are applied to the combined hvg list. Here is the code to see the improvement of this approach:. ```python; import scanpy as sc; import numpy as np; import pandas as pd. ad = sc.read(""pancreas.h5ad"", backup_url=""https://goo.gl/V29FNk"") # adapted from scGen repo; ad.obs[""cell_type""] = ad.obs[""celltype""].tolist(). ad = sc.AnnData(ad.raw.X, var=ad.raw.var, obs=ad.obs); sc.pp.normalize_per_cell(ad); sc.pp.log1p(ad). sc.pp.highly_variable_genes(ad, batch_key='batch'); sc.pp.pca(ad); sc.pp.neighbors(ad); sc.tl.umap(ad); sc.pl.umap(ad, color=[""batch"", ""cell_type""]); ```. ![image](https://user-images.githubusercontent.com/1140359/56462765-af5f1880-6396-11e9-95fb-dddb05d94214.png). ```python; sc.pp.highly_variable_genes(ad); sc.pp.pca(ad); sc.pp.neighbors(ad); sc.tl.umap(ad); sc.p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/614:181,avoid,avoiding,181,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/614,3,"['avoid', 'detect']","['avoiding', 'detected']"
Safety,"I am trying to toy with the krumsiek11 model, but the ```sc.tl.sim``` call seems to ignore parameters and always uses the parameters from the ```krumsiek11_params.txt``` file. In particular, running:. ```; adam_krumsiek11 = sc.tl.sim('krumsiek11'); adam_krumsiek11_2 = sc.tl.sim('krumsiek11', nrRealizations = 1, seed = 1665487); sc.pl.sim(adam_krumsiek11 ); sc.pl.sim(adam_krumsiek11_2); ```; produces two exactly identical figures with 4 realizations. I also tried to set ```read_params_from_file = False``` (this is not documented at http://scanpy.readthedocs.io/en/latest/api/scanpy.api.tl.sim.html but seemed relevant). However, running; ```; adam_krumsiek11 = sc.tl.sim('krumsiek11', nrRealizations = 1, read_params_from_file = False); sc.pl.sim(adam_krumsiek11); ```; results in ```IndexError```; and running ; ```; adam_krumsiek11 = sc.tl.sim('krumsiek11', nrRealizations = 1, tmax = 800, read_params_from_file = False); sc.pl.sim(adam_krumsiek11); ```; avoids the error, but gives the exact same figure as the first code segment. Maybe I am not understanding correctly, how the function should work? (in which case this would be a documentation issue) Or is there really something wrong?. Thanks for any hints.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/52:962,avoid,avoids,962,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/52,1,['avoid'],['avoids']
Safety,"I cannot install scanpy successfully. (conda v. 4.7.12). $ conda create -n scanpy_scRNA -c bioconda scanpy ; Collecting package metadata (current_repodata.json): done; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: / ; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Package numba conflicts for:; scanpy -> numba[version='>=0.41.0']; Package matplotlib conflicts for:; scanpy -> matplotlib[version='3.0.*|>=2.2']; Package h5py conflicts for:; scanpy -> h5py!=2.10.0; Package networkx conflicts for:; scanpy -> networkx; Package scipy conflicts for:; scanpy -> scipy[version='<1.3|>=1.3']; Package scikit-learn conflicts for:; scanpy -> scikit-learn[version='>=0.21.2']; Package joblib conflicts for:; scanpy -> joblib; Package natsort conflicts for:; scanpy -> natsort; Package seaborn conflicts for:; scanpy -> seaborn; Package setuptools conflicts for:; scanpy -> setuptools; Package pytables conflicts for:; scanpy -> pytables; Package anndata conflicts for:; scanpy -> anndata[version='>=0.6.10|>=0.6.22rc1']; Package importlib-metadata conflicts for:; scanpy -> importlib-metadata; Package importlib_metadata conflicts for:; scanpy -> importlib_metadata[version='>=0.7']; Package tqdm conflicts for:; scanpy -> tqdm; Package pandas conflicts for:; scanpy -> pandas[version='>=0.21']; Package umap-learn conflicts for:; scanpy -> umap-learn[version='>=0.3.0']; Package patsy conflicts for:; scanpy -> patsy; Package louvain conflicts for:; scanpy -> louvain; Package python conflicts for:; scanpy -> python[version='>=3.6|>=3.6,<3.7.0a0']; Package python-igraph conflicts for:; scanpy -> python-igraph; Package statsmodels conflicts for:; scanpy -> statsmodels[version='>=0.10.0rc2']",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/990:453,abort,abort,453,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/990,1,['abort'],['abort']
Safety,"I have some issues runnign tSNE with `sc.tsne(adata)`. It seems to work on the `moignard15` data set but running the same code with my data set results in the following error. ```; compute tSNE; preprocess using PCA with 50 PCs; --> avoid this by setting n_pcs = 0; 0:00:02.013 - compute PCA with n_comps = 50; 0:00:00.162 - finished; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-5-ea03cbb426c5> in <module>(); ----> 1 sc.tsne(adata). /opt/conda/lib/python3.6/site-packages/scanpy/tools/tsne.py in tsne(adata, random_state, n_pcs, perplexity); 59 sett.m(0, 'preprocess using PCA with', n_pcs, 'PCs'); 60 sett.m(0, '--> avoid this by setting n_pcs = 0'); ---> 61 X = pca(adata.X, random_state=random_state, n_comps=n_pcs); 62 adata['X_pca'] = X; 63 else:. /opt/conda/lib/python3.6/site-packages/scanpy/tools/pca.py in pca(adata_or_X, n_comps, zero_center, svd_solver, random_state); 60 zero_center, svd_solver,; 61 random_state=random_state); ---> 62 adata['X_pca'] = X_pca; 63 if isadata:; 64 return adata. UnboundLocalError: local variable 'adata' referenced before assignment; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/10:233,avoid,avoid,233,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/10,2,['avoid'],['avoid']
Safety,"I updated the rank_genes_groups function to output p-values for t-tests and the wilcoxon rank-sum test, as discussed with @falexwolf in #159. ; The changes are outlined below:; - The t-test in the original file used a Welch t-test. I kept this, calculated the relevant degrees of freedom for a Welch test and then extracted the corresponding two-tailed p-value for the t-statistic (score). ; - The Wilcoxon test was originally done in chunks. To get the p-values I had to simplify this approach and use the ranksums function in scipy.stats. This caused me to loop through all of the genes being tested, which was fine for my dataset, but might need to be optimized for larger datasets.; - The adjusted p-values (pvals_adj) were calculated with a standard Bonferroni correction.; - All p-values are outputted and sorted the same way as 'names' or 'scores'. The only difference is that the p-values recarrays use float64 as a datatype to avoid converting a lot of the very small p-values to 0. Hope this is helpful!. Andrés",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/270:936,avoid,avoid,936,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/270,1,['avoid'],['avoid']
Safety,"I was wondering whether it is possible to plot this split dotplot (in this case, half of a dot represents mRNA levels while the other half about protein)?; ![image](https://user-images.githubusercontent.com/4110443/126654762-9de9bb40-ade5-4131-b6d3-410e36b5f986.png); This is useful in two places: 1. when we are visualizing mRNA and protein levels of a same group of genes 2. when we are comparing two conditions (control PBMC vs stimulated PBMC etc.). Because it would avoid duplicating the gene/cell type names and save half the space compared to this one:; ![image](https://user-images.githubusercontent.com/4110443/126655187-3aaf5c3d-3122-47a3-9864-48eb5ea47142.png). Thanks",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1956:471,avoid,avoid,471,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1956,1,['avoid'],['avoid']
Safety,"I wonder for datasets whose umap results looking like this:; ![image](https://user-images.githubusercontent.com/43333475/128300875-6cb34999-500b-4b5b-8ecb-4a6a0e018247.png). Can the tool, Ingest, be used to predict the cell type label for datasets with batch effect? Since in this dataset, it seems that I will face ""ValueError: 0 is not in index"" error. Thanks.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1976:207,predict,predict,207,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1976,1,['predict'],['predict']
Safety,"I'm curious as to what would be the best practice for this situation... I have an np.array containing 18 expression values for gene y. There are 3 replicates, so 6 different conditions. ; `adata.X[:,0] = [ 72. 92. 51. 93. 1. 46. 0. 33. 46. 75. 56. 28. 90. 100. 7. 25. 40. 81.]`. I need to calculate several values: replicate average, pvalue, FDR, standard error and standard deviation. Currently, I can calculate average for the replicates. The result for the above example is:; `adata.Xmean[:,0] = [71.6667 71.6667 71.6667 46.6667 46.6667 46.6667 26.3333 26.3333 26.3333 53. 53. 53. 65.6667 65.6667 65.6667 48.6667 48.6667 48.6667]`. This seems redundant as the average is listed for each replicate. It led me to think about separating the replicates into their own .X, like .X1 for replicate 1, .X2, etc. This would mean the .Xmean[0] would link to .X1[0], .X2[0], .X3[0]. . The averages may be the only one to benefit from this setup, as each replicate will have its' own p-value, FDR, standard error, and standard deviation. This makes me think the redundant .Xmean is the better approach. What are your thoughts? Thank you in advance!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/106:646,redund,redundant,646,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/106,2,['redund'],['redundant']
Safety,"In short: Avoids creating dense matrices for score calculation. Currently, `_score_genes()` unnecessarily creates dense matrices to use the `np.nanmean` function (which doesn't work on sparse matrices out of the box).; This causes memory problems for larger datasets (anything 50k cells got me into trouble) and can be completely avoided with a `nanmean()` implementation of sparse matrices. Not sure why the build is failing now in completely unrelated functions though!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1196:10,Avoid,Avoids,10,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1196,2,"['Avoid', 'avoid']","['Avoids', 'avoided']"
Safety,Inconsistency detected by ld.so,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/280:14,detect,detected,14,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/280,1,['detect'],['detected']
Safety,Make marks type safe,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2707:16,safe,safe,16,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2707,1,['safe'],['safe']
Safety,"Maybe I am doing something wrong. I try to recover the observation from annData as a dataframe, and I am playing with some of the commands. This is an example. ```; import scanpy.api as sc; data = sc.read_text('/media/SETH_DATA/SETH_Alex/Fibroblasts.txt').T. print(data.data); ```. Then this error happens:. ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-14-1f44700b9ea5> in <module>(); ----> 1 print(data.data). ~/anaconda3_6/lib/python3.6/site-packages/anndata/utils.py in new_func(*args, **kwargs); 104 def new_func(*args, **kwargs):; 105 warnings.simplefilter('always', DeprecationWarning) # turn off filter; --> 106 warnings.warning(; 107 'Use {0} instead of {1}, {1} will be removed in the future.'; 108 .format(new_name, func.__name__),. AttributeError: module 'warnings' has no attribute 'warning'; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/394:43,recover,recover,43,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/394,1,['recover'],['recover']
Safety,Multiplex community detection with Leiden,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1818:20,detect,detection,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1818,1,['detect'],['detection']
Safety,"New version of `uns` as discussed in https://github.com/theislab/anndata/issues/295#issuecomment-596164456. The reason for setting a dummy `library_id` (as ""0"" for instance) is:; * The `library_id` information is in the molecule_info file [explained here](https://support.10xgenomics.com/spatial-gene-expression/software/pipelines/latest/output/molecule_info). Recover it would require to input an additional file path; * All the 10x data I had a look at, both from the same tissue (so 2 slides from same tissue slice) and from different tissues, have `library_id` entry set to ""0"". So I am not really sure how space ranger set that value but it does not appear to be unique (and therefore not a natural `batch_key` value).; * I think it would be more useful if this value is set according to user choice. Only in the context of `adata.concatenate` it should be modified according to `batch_key`. This is also the only point in the analysis where the `library_id` entry matter.; * I agree with respect to maintaining the tree structure before and after concatenation, so the reason for keeping the `library_id` entry and setting it to a dummy variable by default. Looking forward to hear what you think @ivirshup and if agree I'll go on with PRs for `anndata.concatenate`. . Also, let's keep this `spatial` branch open until we really have (almost) everything up and running for spatial analysis.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1105:361,Recover,Recover,361,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1105,1,['Recover'],['Recover']
Safety,"Numba can’t correctly detect when a threading backend is available. This was fine in the past, since `pynndescent`/ `umap` were forcing a `workqueue` backend which is always available. `pynndescent` 0.5.3 recently came out, and started favoring the `tbb` backend. This is a problem since numba thinks this backend is available on our CI (and on my HPC), but it’s actually not. I also can’t get tbb to even install in a way numba sees in on these systems. If tbb isn’t actually available, but numba detects it we get errors with horrible tracebacks anytime parallelized numba code is used https://github.com/lmcinnes/pynndescent/issues/129. These tracebacks are so horrible they break our CI further https://github.com/pytest-dev/pytest-nunit/issues/47. So what do we do?. ## Possible solutions:. * Pin pynndescent below 0.5.3. This makes pynndescent a required dependency. We’ve previously avoided this since it would change results for people using `umap<0.4` (e.g. anyone with `scvelo` installed) who did not explicitly install pynndescent. However, given the lack of complaints around umap results changing as dependencies have increased, this may not be so bad. It would be great if we could constrain the version without having it be a dependency. This would be similar to what's possible with `pip` and [constraints files](https://pip.pypa.io/en/stable/user_guide/#constraints-files), I don't see how one would be able to specify this for a package. I don't think it's possible, but maybe I'm missing something about the version string syntax. * Make sure the numba threading layer is `“workqueue”` after pynndescent is imported. This is tricky. pynndescent<0.5.3 takes a long time to import, so we don’t want to do this at the top level. So we would need to add a check after everytiem pynndescent could possibly be imported to check that it didn’t set the threading backend to anything else. My understanding of the numba threading system is that once you’ve called for parallel compilation, y",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1931:22,detect,detect,22,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1931,3,"['avoid', 'detect']","['avoided', 'detect', 'detects']"
Safety,"Overhaul of tutorials page. Tutorials can now be versioned with the docs by using a gitsubmodule of the tutorials repo (letting us avoid things like: https://github.com/scverse/scanpy-tutorials/issues/85). Possible additions, that can be left to later. * It's a lot more bare now, maybe we should use cards? I wasn't sure if there's a great way to do this while keeping overall organization.; * Some tutorials that have been removed may be worth keeping; * 1.3 million mouse neurons; * Cell cycle regression",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2901:131,avoid,avoid,131,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2901,1,['avoid'],['avoid']
Safety,Palantir for Single cell trajectory detection,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/493:36,detect,detection,36,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/493,1,['detect'],['detection']
Safety,Pin sphinx-autodoc-typehints version to avoid KeyError: 'argname',MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2100:40,avoid,avoid,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2100,1,['avoid'],['avoid']
Safety,"Reorder operations to avoid overflows. Behavior Fixed:; ```py; import scanpy as sc; import numpy as np; X = np.random.randint(0,1000, size= (3000,2000)); ann = sc.AnnData(np.log(X+1)); gsize = X.shape [0] / 2; ann.obs['group'] = ['a']* int (gsize) + ['b']*int (gsize); sc.tl.rank_genes_groups(ann, 'group', method = 'wilcoxon', n_genes=2000); ```; ```pytb; ... storing 'group' as categorical; C:\Users\patou\Anaconda-p3.7\envs\py36\lib\site-packages\scanpy\tools\_rank_genes_groups.py:372: RuntimeWarning: overflow encountered in long_scalars; (ns[imask] * (n_cells - ns[imask]) * (n_cells + 1) / 12)); ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-7-bccdb587a644> in <module>; 5 gsize = X.shape [0] / 2; 6 ann.obs['group'] = ['a']* int (gsize) + ['b']*int (gsize); ----> 7 sc.tl.rank_genes_groups(ann, 'group', method = 'wilcoxon', n_genes=2000); 8; 9. ~\Anaconda-p3.7\envs\py36\lib\site-packages\scanpy\tools\_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, **kwds); 370 scores[imask, :] = (scores[imask, :] - (ns[imask] * (n_cells + 1) / 2)) / sqrt(; 371 (ns[imask] * (n_cells - ns[imask]) * (n_cells + 1) / 12)); --> 372; 373 scores[np.isnan(scores)] = 0; 374 pvals = 2 * stats.distributions.norm.sf(np.abs(scores[imask,:])). ValueError: math domain error; ```. After the fix, the same code no longer raises an error",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1062:22,avoid,avoid,22,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1062,1,['avoid'],['avoid']
Safety,Require a minimum groupsize for marker detection to prevent division by zero errors,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1490:39,detect,detection,39,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1490,1,['detect'],['detection']
Safety,"Running https://github.com/theislab/scanpy_usage/blob/master/170522_visualizing_one_million_cells/cluster.py on the latest released Scanpy (1.4.4.post1) gives a memory error:. ```; reading 1M_neurons_filtered_gene_bc_matrices_h5.h5; Variable names are not unique. To make them unique, call `.var_names_make_unique`.; (0:01:39); running recipe zheng17; filtered out 3983 genes that are detectedin less than 1 counts; Killed; ```. This is running with 60GB of memory (n1-standard-16), but also occurs with 104GB (n1-highmem-16). It looks like there has been a regression somewhere since this used to run OK. I think the error may be happening in anndata.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/811:385,detect,detectedin,385,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/811,1,['detect'],['detectedin']
Safety,Scanpy affecting most versions tested with 1.4.3. Python 3.6 throws `Math error` exception in windows system for in `rank gene_groups`. _rank_gene_groups.py:313; ```; scores = (scores - (n_active * (n_active + m_active + 1) / 2)) / sqrt(; (n_active * m_active * (n_active + m_active + 1) / 12)); ```. Reason `sqrt` encounters integer overflow in: ` (n_active * m_active * (n_active + m_active + 1) / 12)` for large numbers. Quick fix to avoid overflow: divide by 12 before scaling by ` (n_active + m_active + 1)`; _rank_gene_groups.py:313; ```; scores = (scores - (n_active * (n_active + m_active + 1) / 2)) / sqrt(; (n_active * m_active * (1/12.0) * (n_active + m_active + 1))); ```; Casting to float could work as well? Behavior in Unix/Linux not tested,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1061:437,avoid,avoid,437,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1061,1,['avoid'],['avoid']
Safety,"So this is possibly related to #1136 (pure speculation 😅 ). Basically, on a Vm with ubuntu 18:; ```; conda create -n temp_env_scanpy; conda activate temp_env_scanpy; (temp_env_scanpy) giov@vm:~$ conda install -c bioconda scanpy. Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: -; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found to be incompatible with your CUDA driver:. - feature:/linux-64::__cuda==9.1=0. Your installed CUDA driver is: 9.1; ```; Interestingly, this error is not thrown all the time, e.g. in a VM centos 7 without cuda:; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError:; ```; Another student working with me had the same issue in windows. His error was:; ```; UnsatisfiableError: The following specifications were found to be incompatible with your CUDA driver:. - feature:/win-64::__cuda==10.2=0. Your installed CUDA driver is: 10.2; ```; But on a mac, no problem at all. In all situations, I have at least another environment with scanpy installed.; In all cases, conda was `4.8.3`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1142:744,abort,abort,744,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1142,1,['abort'],['abort']
Safety,"Thanks for you work!. There is a feature that I would be nice to have. Once the DPT has been calculated, it would be nice to be able to ""predict"" (like in the R package destiny) new data into the calculate DifussionMap . It would be great to include a label that tells apart the new cells from the already existing ones. Thanks",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/53:137,predict,predict,137,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/53,1,['predict'],['predict']
Safety,"They kept failing. Something upstream (likely numba) or Azure’s testing machines seem to have become less consistent in calculating this. [This thread](https://github.com/scverse/scanpy/pull/1740#discussion_r596827747) came across that. @ivirshup’s final statement was. > This bug seems to be based on having nested parallelism and certain reductions. We can avoid it by just not having nested parallelism, which is what I've done for gearys_c. I don’t think exact float equality is a reasonable assumption, but if we want to continue to test for it, we need to be able to force numba to be predictable or so. Needs no release note. Added https://github.com/scverse/scanpy/issues/2688 to track this regression",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2687:359,avoid,avoid,359,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2687,2,"['avoid', 'predict']","['avoid', 'predictable']"
Safety,"This PR addresses #646 by adding the option to pass a dict to the plotting functions heatmap, dotplot, matrixplot, tracksplot and stacked_violin. . Now, when `var_names` is a dictionary the `var_group_labels` and `var_group_positions` are set such that the dictionary key is a label and the group is the dict values. In the following example the 'brackets' plot on top of the image are prepared based on the markers dictionary:. ```PYTHON; marker_genes_dict = {'B-cell': ['CD79A', 'MS4A1'], ; 'T-cell': 'CD3D',; 'T-cell CD8+': ['CD8A', 'CD8B'],; 'NK': ['GNLY', 'NKG7'],; 'Myeloid': ['CST3', 'LYZ'],; 'Monocytes': ['FCGR3A'],; 'Dendritic': ['FCER1A']}; # use marker genes as dict to group them; ax = sc.pl.dotplot(pbmc, marker_genes_dict, groupby='bulk_labels'); ```; ![image](https://user-images.githubusercontent.com/4964309/58255475-5dcaf480-7d6d-11e9-83f6-bb4ebc8e33a7.png). This PR also introduces a small change in `sc.pl.stacked_violin` by setting `cut=0` as default parameter for `seaborn.violin`. This produces in my opinion better plots by removing the extension of the violin past extreme points. This is specially useful to avoid the violin plot to extend below zero expression values. . **Update**: I set the dependencies to `matplotlib==3.0.*` and `scipy==1.2` to solve failing tests. More details in the conversation",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/661:1135,avoid,avoid,1135,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/661,1,['avoid'],['avoid']
Safety,"This PR addresses issues from #562 #1103. Here is a list of changes for `sc.pl.dotplot` and also for `sc.pl.rank_genes_groups_dotplot`:; * Colorbar and dot size legends had been improved. Now is also possible to set a title for them.; * The dotplot functionality has been separated from the main function. This allows to take any two pandas dataFrames, one containing the color values and other containing the size to be plotted.; * A new dotplot style is added, in which a background square is colored according to the colormap instead of the dot. The style can be chosen as parameter.; * Now p-values, score and in general any parameter from `sc.rank_genes_groups` can be plotted.; * `swap_axes` has been added.; * **update**: method chaining was added to avoid explosion of parameters as suggested in #956. The caveat is that a different name is needed to keep the current functionality of `sc.pl.dotplot`. Now is possible to do `sc.pl.DotPlot(adata, ....).add_dendrogram(size=1.2).swap_axes().show()`. ![image](https://user-images.githubusercontent.com/4964309/77526545-13ce0600-6e8b-11ea-996a-3d548f52f200.png). ![image](https://user-images.githubusercontent.com/4964309/77529251-8c36c600-6e8f-11ea-8446-c1dd18374cd4.png). Open issues:; * we need a better way to filter the output from rank_genes_groups (and I would also consider a better name). One option is to filter while plotting.; * to correctly plot the results from `sc.tl.rank_genes_groups` is better to report the results for all genes (`n_genes`). The default is to keep the top 100 genes per group. Thus, for many genes, the pvalue, logfoldchange etc in other groups is not saved.; * added new parameters, for some I would be happy to have some feedback. One is `style` that has two options `square color` and `dot color`. **Update**; The following is now possible (notice the method chaining):. ```PYTHON; adata = sc.datasets.pbmc68k_reduced(); markers = {'T-cell': ['CD3D', 'CD3E', 'IL32'], 'B-cell': ['CD79A', 'CD79B', 'MS4A1'], '",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1127:758,avoid,avoid,758,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1127,1,['avoid'],['avoid']
Safety,"This adds RAPIDS as an (experimental) option for running some of the graph algorithms on a GPU. Example usage is demonstrated here: https://github.com/tomwhite/scanpy_usage/tree/rapids-gpu/1909_rapids_gpu. In summary:. ```python; sc.pp.neighbors(adata, method='rapids'); sc.tl.louvain(adata, flavor='rapids'); sc.tl.umap(adata, method='rapids'); ```. Timings (on 130K samples):. | Step | CPU time (s) | GPU time (s) | Speedup |; | --------- | ------------ | ------------ | ------- |; | Neighbors | 47 | 15 | 3x |; | Louvain | 70 | 1 | 70x |; | UMAP | 186 | 15 | 12x |. Comments:; * In general the output figures are quite different for each of the algorithms compared to regular Scanpy. (See the figures in the link above.); * RAPIDS uses exact nearest neighbors (using https://github.com/facebookresearch/faiss I think), whereas the default NNDescent algorithm in Scanpy is approximate.; * Louvain community detection results in a different number of communities (28 vs 45). I'm not sure if it is possible to change the termination criteria or other parameters that would make the two outputs the same, or at least more similar.; * UMAP is different too, and in particular it is bunched in one corner. There are a few very small clusters in the opposite corner, which looks like it might be a bug.; * UMAP computes the nearest neighbors again from scratch - it can’t reuse the ones computed earlier since RAPIDS only exposes the fit/transform methods, and not `simplicial_set_embedding` that regular UMAP exposes.; * In general it would be useful to understand what random number generators each of the alternatives use, how they can be controlled, and what prospects there are for achieving identical output (if any).; * This is using RAPIDS version 0.7 since it is the version available on the Google Cloud image I used (https://cloud.google.com/deep-learning-vm/docs/images).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/830:909,detect,detection,909,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/830,1,['detect'],['detection']
Safety,"This is a bugfix to allow for the fact that Scrublet doesn't always find a threshold and produce predictions by:. - Detecting when threshold not present, and setting prediction column to False'; - Not assuming presence of threshold in plot functions.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2023:97,predict,predictions,97,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2023,3,"['Detect', 'predict']","['Detecting', 'prediction', 'predictions']"
Safety,"True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True]])]; ```; At first I was creating all dendrograms in a list comprehension and it did the same. ; I also directly inputted a list of my own and I obtained the same result....; I guess dendrogram don't detect the genes. When running functions such as ; ```python ; ## Testing with creating the dendro manually. def do_corr_mat(adata, var_names, groupby, method = ""spearman"") :; categories, obs_tidy = _prepare_dataframe(adata, var_names=var_names, groupby=groupby); mean_df = obs_tidy.groupby(level=0).mean(); ; return mean_df.T.corr(method=method). def do_dendro(corr_matrix, method=""ward"") :; z_var = linkage(corr_matrix, method=linkage); return dendrogram(z_var, labels=mean_df.index); ``` ; Everything works fine ! . Thanks by advance, ; C. #### Versions. 1.6.0. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1549:4772,detect,detect,4772,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1549,1,['detect'],['detect']
Safety,Use graph coloring algorithm for a “world map” avoiding to color neighboring clusters in the same color,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1366:47,avoid,avoiding,47,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1366,1,['avoid'],['avoiding']
Safety,"Using `method=wilcoxon` in the `rank_genes_groups` function chunks the genes into groups (to avoid using too much memory). The scores for the genes on the endpoints of these chunks are never computed, however. This can easily be observed by looking at a dataset containing 5000 genes (so that the chunk size is 2000) and setting `rankby_abs=True`. The genes with indices 2000, 4000, 6000, .... will all be selected as marker genes with p-values of 0. This is due to the fact that the rank-sums for these genes are left at 0 (they are never computed), which is then judged to be EXTREMELY significant. . I will submit a PR with a fix for this in a minute :)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/469:93,avoid,avoid,93,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/469,1,['avoid'],['avoid']
Safety,What is the best way to recover raw count to adata.X,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1817:24,recover,recover,24,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1817,1,['recover'],['recover']
Safety,"When exploring various options of preprocessing data, I try to avoid having several copies of AnnData objects in memory if they're not sparse, so I save them to h5ad at key steps. Sometimes alas, after a few iterations I re-write stuff and forget what operations have been performed in my ""X"" (particularly in the preprocessing steps). So, because being lazy makes me creative, I started tracking these in the object itself (see example https://gist.github.com/afrendeiro/7ccaf324bfdbff042ae36f734f544860) by decorating the preprocessing functions post hoc (this could even easily be used to save the values of kwargs passed potentially). I wonder if an internal implementation of this would be of broad interest, particularly for functions which modify ""X"" inplace?; Of course this would be no replacement for proper documentation of one's steps, etc but I thought it could be an interesting addition to scanpy in any case.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/472:63,avoid,avoid,63,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/472,1,['avoid'],['avoid']
Safety,"While I run 'sc.tl.louvain', this error raised and told me I should call 'jgraph'.; Is it necessary for me to change the package name of 'igraph'to 'jgraph' manually?. ```pytb; ---------------------------------------------------------------------------; DeprecationWarning Traceback (most recent call last); <ipython-input-191-71b705e00011> in <module>; ----> 1 sc.tl.louvain(ad_2). /usr/local/lib/python3.6/dist-packages/scanpy/tools/_louvain.py in louvain(adata, resolution, random_state, restrict_to, key_added, adjacency, flavor, directed, use_weights, partition_type, partition_kwargs, copy); 112 directed = False; 113 if not directed: logg.debug(' using the undirected graph'); --> 114 g = utils.get_igraph_from_adjacency(adjacency, directed=directed); 115 if use_weights:; 116 weights = np.array(g.es[""weight""]).astype(np.float64). /usr/local/lib/python3.6/dist-packages/scanpy/utils.py in get_igraph_from_adjacency(adjacency, directed); 379 def get_igraph_from_adjacency(adjacency, directed=None):; 380 """"""Get igraph graph from adjacency matrix.""""""; --> 381 import igraph as ig; 382 sources, targets = adjacency.nonzero(); 383 weights = adjacency[sources, targets]. /usr/local/lib/python3.6/dist-packages/igraph/__init__.py in <module>; 6 __license__ = ""MIT""; 7 ; ----> 8 raise DeprecationWarning(""To avoid name collision with the igraph project, ""; 9 ""this visualization library has been renamed to ""; 10 ""'jgraph'. Please upgrade when convenient.""). DeprecationWarning: To avoid name collision with the igraph project, this visualization library has been renamed to 'jgraph'. Please upgrade when convenient.; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/807:1309,avoid,avoid,1309,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/807,2,['avoid'],['avoid']
Safety,"[ Yes] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; ncont = ncont[ncont.obs.pct_counts_mt < 5, :]; ncont.raw = ncont; ```. ```pytb; [TypeError: cannot unpack non-iterable NoneType object]; ```. #### Versions. scanpy==1.8.2 anndata==0.7.8 umap==0.5.2 numpy==1.21.5 scipy==1.7.1 pandas==1.3.2 scikit-learn==0.24.2 statsmodels==0.13.2 python-igraph==0.9.9 pynndescent==0.5.6. <details>. [WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.8; scanpy 1.8.2; sinfo 0.3.4; -----; PIL 8.3.1; anyio NA; attr 21.2.0; babel 2.9.1; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; celltypist 0.2.0; certifi 2021.05.30; cffi 1.14.6; charset_normalizer 2.0.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; decorator 5.0.9; defusedxml 0.7.1; entrypoints 0.3; h5py 3.3.0; idna 3.2; igraph 0.9.9; ipykernel 6.2.0; ipython_genutils 0.2.0; jedi 0.18.0; jinja2 3.0.1; joblib 1.0.1; json5 NA; jsonschema 3.2.0; jupyter_server 1.10.2; jupyterlab_server 2.7.1; kiwisolver 1.3.1; leidenalg 0.8.9; llvmlite 0.38.0; markupsafe 2.0.1; matplotlib 3.4.3; matplotlib_inline NA; mpl_toolkits NA; natsort 8.1.0; nbclassic NA; nbform",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2188:1071,avoid,avoid,1071,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2188,1,['avoid'],['avoid']
Safety,"[`sklearn.neighbors.KNeighborsTransformer`](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsTransformer.html) is a good abstraction for KNN calculations. We could follow the suggestion here, then finish this PR https://github.com/frankier/sklearn-ann/issues/8#issuecomment-1609553421. ### For reviewing. - most functions were moved unchanged; - I extensively changed https://github.com/scverse/scanpy/blob/73915b4bd0dc84108df08ad83ec28e627a9a0e0d/scanpy/neighbors/__init__.py#L471; - This uncovered very grown-over-time logic: https://github.com/scverse/scanpy/blob/73915b4bd0dc84108df08ad83ec28e627a9a0e0d/scanpy/neighbors/__init__.py#L522-L523 ; *Should we change that logic for more predictability at the expense of backwards compatibility*? Especially the “euclidean” condition makes not much sense IMHO; - Another piece of weird logic: *Where to allow`knn=False`*? It would make sense for e.g. the scipy knn transformer with `algorithm='kd_tree'` … ; https://github.com/scverse/scanpy/blob/73915b4bd0dc84108df08ad83ec28e627a9a0e0d/scanpy/neighbors/__init__.py#L614-L617; - I also changed `method` to only mean “connectivity method”. `transformer_cls` alone now determines how to calculate distances. ### TODO. - [x] split of sklearn-ann part into own issue/PR; - [x] figure out what the `_more_tags` methods are ; - [x] allow specifying algorithm and/or backend; - [x] revert 75c6670, move connectivities code out of backends; - [x] switch our stuff to KNeighborsTransformer; - [x] unify selection: algorithm+backend, metric, connectivity (maybe separate out connectivity); - [x] figure out how to do connectivities: can mode be changed after fit? *no, we just use umap connectivities as before*; - [x] check out where we have coverage; - is there paga specific stuff? *not in the parts I changed*; - gauss: dense matrix when knn=True (“build a symmetric mask”, …) *not covered, but also the logic shouldn’t have changed*; - pre-computed in umap transformer; handlin",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2536:716,predict,predictability,716,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2536,1,['predict'],['predictability']
Safety,"\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 777 import multiprocessing; 778 pool = multiprocessing.Pool(n_jobs); --> 779 res = pool.map_async(_regress_out_chunk, tasks).get(9999999); 780 pool.close(); 781 . ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in get(self, timeout); 636 ; 637 def get(self, timeout=None):; --> 638 self.wait(timeout); 639 if not self.ready():; 640 raise TimeoutError. ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in wait(self, timeout); 633 ; 634 def wait(self, timeout=None):; --> 635 self._event.wait(timeout); 636 ; 637 def get(self, timeout=None):. ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 549 signaled = self._flag; 550 if not signaled:; --> 551 signaled = self._cond.wait(timeout); 552 return signaled; 553 . ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 297 else:; 298 if timeout > 0:; --> 299 gotit = waiter.acquire(True, timeout); 300 else:; 301 gotit = waiter.acquire(False). OverflowError: timeout value is too large. update:-----------------------------------------------------------------------------------------------------. when i used the n_jobs= 1 as a paramters ,seems like i lack a module named patsy; oduleNotFoundError Traceback (most recent call last); <ipython-input-22-6ea7e0dee435> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito'],n_jobs = 1). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 781 ; 782 else:; --> 783 res = list(map(_regress_out_chunk, tasks)); 784 ; 785 # res is a list of vectors (each corresponding to a regressed gene column). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in _regress_out_chunk(data); 798 ; 799 responses_chunk_list = []; --> 800 import statsmodels.api as sm",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:1334,timeout,timeout,1334,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,2,['timeout'],['timeout']
Safety,"```; # normalize, by excluding frequent gene to avoid distorting data; sc.pp.normalize_total(d, exclude_highly_expressed=True, max_fraction=0.05, inplace=True); ```. I was trying to normalize_total and exclude highly expressed genes. But:; I got; TypeError: normalize_total() got an unexpected keyword argument 'exclude_highly_expressed'",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/871:48,avoid,avoid,48,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/871,1,['avoid'],['avoid']
Safety,"`louvain` and `leiden` have a lot of redundant documentation. After having learned in #557, I could file a PR to deduplicate this. Would it be valid to shuffle the arguments in such a way that the shared documentation is grouped together? Otherwise, one would have to introduce many short strings and puzzle them together.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/570:37,redund,redundant,37,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/570,1,['redund'],['redundant']
Safety,`pip install -e .` raises LookupError: setuptools-scm was unable to detect version for '/home/ubuntu/code/scanpy'.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1496:68,detect,detect,68,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1496,1,['detect'],['detect']
Safety,"`scanpy.api.pl.paga(adata, export_to_gexf=True)`; If 'write' dir does not exist, then export aborts.; (Solution: manually create 'write' dir)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/117:93,abort,aborts,93,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/117,1,['abort'],['aborts']
Safety,"adata_tmp, min_cells=mincells); adata_tmp.obs['sample'] = ugname[i]; adata = sc.concat([adata,adata_tmp],join='outer'); ```. ```pytb; filtered out 5508 genes that are detected in less than 5 cells; filtered out 5905 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6390 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_u",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:2253,detect,detected,2253,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"aforge/envs/scanpy/lib/python3.9/site-packages/joblib/parallel.py:901, in Parallel.dispatch_one_batch(self, iterator); 899 return False; 900 else:; --> 901 self._dispatch(tasks); 902 return True. File ~/tools/mambaforge/envs/scanpy/lib/python3.9/site-packages/joblib/parallel.py:819, in Parallel._dispatch(self, batch); 817 with self._lock:; 818 job_idx = len(self._jobs); --> 819 job = self._backend.apply_async(batch, callback=cb); 820 # A job can complete so quickly than its callback is; 821 # called before we get here, causing self._jobs to; 822 # grow. To ensure correct results ordering, .insert is; 823 # used (rather than .append) in the following line; 824 self._jobs.insert(job_idx, job). File ~/tools/mambaforge/envs/scanpy/lib/python3.9/site-packages/joblib/_parallel_backends.py:252, in PoolManagerMixin.apply_async(self, func, callback); 250 def apply_async(self, func, callback=None):; 251 """"""Schedule a func to be run""""""; --> 252 return self._get_pool().apply_async(; 253 SafeFunction(func), callback=callback). File ~/tools/mambaforge/envs/scanpy/lib/python3.9/site-packages/joblib/_parallel_backends.py:407, in ThreadingBackend._get_pool(self); 401 """"""Lazily initialize the thread pool; 402 ; 403 The actual pool of worker threads is only initialized at the first; 404 call to apply_async.; 405 """"""; 406 if self._pool is None:; --> 407 self._pool = ThreadPool(self._n_jobs); 408 return self._pool. File ~/tools/mambaforge/envs/scanpy/lib/python3.9/multiprocessing/pool.py:927, in ThreadPool.__init__(self, processes, initializer, initargs); 926 def __init__(self, processes=None, initializer=None, initargs=()):; --> 927 Pool.__init__(self, processes, initializer, initargs). File ~/tools/mambaforge/envs/scanpy/lib/python3.9/multiprocessing/pool.py:216, in Pool.__init__(self, processes, initializer, initargs, maxtasksperchild, context); 214 for p in self._pool:; 215 if p.exitcode is None:; --> 216 p.terminate(); 217 for p in self._pool:; 218 p.join(). AttributeError: 'DummyPr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2506:8591,Safe,SafeFunction,8591,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2506,1,['Safe'],['SafeFunction']
Safety,"ages/seaborn/categorical.py:420, in _CategoricalPlotter._configure_legend(self, ax, func, common_kws, semantic_kws); 418 if show_legend:; 419 self.add_legend_data(ax, func, common_kws, semantic_kws=semantic_kws); --> 420 handles, _ = ax.get_legend_handles_labels(); 421 if handles:; 422 ax.legend(title=self.legend_title). AttributeError: 'NoneType' object has no attribute 'get_legend_handles_labels'; ```. ### Versions. <details>. ```; Package Version; ----------------------------- ---------------; aiobotocore 2.6.0; aiohttp 3.8.6; aioitertools 0.11.0; aiosignal 1.3.1; alabaster 0.7.13; anaconda-anon-usage 0.4.2; anaconda-catalogs 0.2.0; anaconda-client 1.12.0; anaconda-cloud-auth 0.1.4; anaconda-navigator 2.5.0; anaconda-project 0.11.1; anndata 0.10.1; anndata 0.10.0rc1; annoy 1.17.2; anyio 4.0.0; appdirs 1.4.4; argon2-cffi 23.1.0; argon2-cffi-bindings 21.2.0; array-api-compat 1.4; array-api-compat 1.4; arrow 1.3.0; astroid 2.15.7; astropy 5.3.4; asttokens 2.4.0; async-lru 2.0.4; async-timeout 4.0.3; atomicwrites 1.4.1; attrs 23.1.0; Automat 22.10.0; autopep8 2.0.4; Babel 2.12.1; backcall 0.2.0; backports.functools-lru-cache 1.6.5; backports.tempfile 1.0; backports.weakref 1.0.post1; bcrypt 4.0.1; beautifulsoup4 4.12.2; binaryornot 0.4.4; black 23.9.1; bleach 6.1.0; blinker 1.6.3; bokeh 3.2.2; boltons 23.0.0; botocore 1.31.17; brotlipy 0.7.0; cached-property 1.5.2; celltypist 1.6.1; certifi 2023.7.22; cffi 1.16.0; chardet 5.2.0; charset-normalizer 3.3.0; click 8.1.7; cloudpickle 2.2.1; clyent 1.2.2; colorama 0.4.6; colorcet 3.0.1; comm 0.1.4; conda 23.9.0; conda-build 3.27.0; conda-content-trust 0+unknown; conda_index 0.2.3; conda-libmamba-solver 23.9.1; conda-pack 0.6.0; conda-package-handling 2.2.0; conda_package_streaming 0.9.0; conda-repo-cli 1.0.75; conda-token 0.4.0; conda-verify 3.4.2; ConfigArgParse 1.7; connection-pool 0.0.3; constantly 15.1.0; contourpy 1.1.1; cookiecutter 2.4.0; cryptography 40.0.1; cssselect 1.2.0; cycler 0.12.1; cytoolz 0.12.2; daal4py 20",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2680:3845,timeout,timeout,3845,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2680,1,['timeout'],['timeout']
Safety,"artition the data into segments; --> 129 dpt.branchings_segments(); 130 # vector of length n_groups; 131 adata.add['dpt_groups_order'] = [str(n) for n in dpt.segs_names_unique]. /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in branchings_segments(self); 188 for each segment.; 189 """"""; --> 190 self.detect_branchings(); 191 self.postprocess_segments(); 192 self.set_segs_names(). /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in detect_branchings(self); 258 segs_connects,; 259 segs_undecided,; --> 260 segs_adjacency, iseg, tips3); 261 # store as class members; 262 self.segs = segs. /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in detect_branching(self, segs, segs_tips, segs_connects, segs_undecided, segs_adjacency, iseg, tips3); 464 # branching on the segment, return the list ssegs of segments that; 465 # are defined by splitting this segment; --> 466 result = self._detect_branching(Dseg, tips3, seg); 467 ssegs, ssegs_tips, ssegs_adjacency, ssegs_connects, trunk = result; 468 # map back to global indices. /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.py in _detect_branching(self, Dseg, tips, seg_reference); 632 if len(np.flatnonzero(newseg)) <= 1:; 633 logg.warn('detected group with only {} cells'.format(np.flatnonzero(newseg))); --> 634 secondtip = newseg[np.argmax(Dseg[tips[inewseg]][newseg])]; 635 ssegs_tips.append([tips[inewseg], secondtip]); 636 undecided_cells = np.arange(Dseg.shape[0], dtype=int)[nonunique]. /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/numpy/core/fromnumeric.py in argmax(a, axis, out); 971 except AttributeError:; 972 return _wrapit(a, 'argmax', axis, out); --> 973 return argmax(axis, out); 974 ; 975 . ValueError: attempt to get argmax of an empty sequence```. Does it mean that this data didn't contain any branches? ; Howerer, I do see some small tips when I plot using `diffmap` result or `sc.tl.dpt` with default branch. Could you help me to figure it out?. Thanks,; jiping",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/33:3795,detect,detected,3795,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/33,1,['detect'],['detected']
Safety,"axUMIs_new = maxUMIs; sc.pp.filter_cells(adata_tmp, max_genes=maxgenes_new); sc.pp.filter_cells(adata_tmp, max_counts=maxUMIs_new); sc.pp.filter_genes(adata_tmp, min_cells=mincells); adata_tmp.obs['sample'] = ugname[i]; adata = sc.concat([adata,adata_tmp],join='outer'); ```. ```pytb; filtered out 5508 genes that are detected in less than 5 cells; filtered out 5905 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6390 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_u",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:2102,detect,detected,2102,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"b; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.16; Detected doublet rate = 6.4%; Estimated detectable doublet fraction = 61.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.4%. ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.17; Detected doublet rate = 5.8%; Estimated detectable doublet fraction = 55.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.5%. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /tmp/ipykernel_2434661/1304834185.py in <module>; ----> 1 sc.external.pp.scrublet(test_adata, batch_key = ""label""). ~/.local/lib/python3.9/site-packages/scanpy/external/pp/_scrublet.py in scrublet(adata, adata_sim, batch_key, sim_doublet_ratio, expected_doublet_rate, stdev_doublet_rate, synthetic_doublet_umi_subsampling, knn_dist_metric, normalize_variance, log_transform, mean_center, n_prin_comps, use_approx_neighbors, get_doublet_neighbor_parents, n_neighbors, threshold, verbose, copy, random_state); 250 # Now reset the obs to get the scrublet scores; 251 ; --> 252 adata.obs = scrubbed_obs.loc[adata.obs_names.values]; 253 ; 254 # Save the .uns from each batch separately. <path>/lib/python3.9/site-packages/pandas/core/indexing.py in __getite",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2377:2147,Detect,Detected,2147,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2377,1,['Detect'],['Detected']
Safety,"boring); 117 pass; 118 ; --> 119 download_experiment(accession); 120 ; 121 logg.info(f""Downloaded {accession} to {experiment_dir.absolute()}""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in download_experiment(accession); 41 ; 42 _download(; ---> 43 download_url + ""experiment-design"", experiment_dir / ""experimental_design.tsv"",; 44 ); 45 _download(. ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/readwrite.py in _download(url, path); 877 ; 878 try:; --> 879 urlretrieve(url, str(path), reporthook=update_to); 880 except Exception:; 881 # Make sure file doesn’t exist half-downloaded. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlretrieve(url, filename, reporthook, data); 246 url_type, path = splittype(url); 247 ; --> 248 with contextlib.closing(urlopen(url, data)) as fp:; 249 headers = fp.info(); 250 . ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context); 221 else:; 222 opener = _opener; --> 223 return opener.open(url, data, timeout); 224 ; 225 def install_opener(opener):. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in open(self, fullurl, data, timeout); 530 for processor in self.process_response.get(protocol, []):; 531 meth = getattr(processor, meth_name); --> 532 response = meth(req, response); 533 ; 534 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in http_response(self, request, response); 640 if not (200 <= code < 300):; 641 response = self.parent.error(; --> 642 'http', request, response, code, msg, hdrs); 643 ; 644 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in error(self, proto, *args); 568 if http_err:; 569 args = (dict, 'default', 'http_error_default') + orig_args; --> 570 return self._call_chain(*args); 571 ; 572 # XXX probably also want an abstract factory that knows when it makes. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in _call_chain(se",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1221:1852,timeout,timeout,1852,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1221,1,['timeout'],['timeout']
Safety,"correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This would have an effect on the ordering of the very top genes, but NOT on the actual genes which are selected by `SelectIntegrationFeatures`. **Note**; All of this does not affect the fairly good match, up to potentially numerics, between `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=None)` and Seurat's `FindVariableFeatures` with `selection.method = 'vst'` introduced in Stuart et al.; If it helps to avoid confusion between the two: `FindVariableFeatures` is called within `SelectIntegrationFeatures`, on each batch separately. **Technical additions here**; This PR suggests to solve this by introducing a new flavor. Either. -`seurat_v3_paper` This fixes to exactly what @jlause noticed and @adamgayoso pinpointed in #1733.; OR; -`seurat_v3_implementation` This matches more closely the suspected Seurat implementation I mentioned above. They select the same genes. Leaning towards favoring the style of `seurat_v3_paper`. Better naming suggestions more than welcome. **Examples**; - Good when no `batch_key` used:; ```py; import numpy as np; import pandas as pd; import scanpy as sc. # load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(); # use the exact filterin from Seurat tutorial; sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw; sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat; sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has b",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2792:2421,avoid,avoid,2421,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792,1,['avoid'],['avoid']
Safety,"data,; by=[; ""patient_id"",; ""timepoint"",; ""external_batch_id"",; ],; func=""mean"",; ); pb.obs[""patient_id""].nunique(). 15. >>> pb = sc.get.aggregate(; test_adata,; by=[; ""patient_id"",; ""external_batch_id"",; ],; func=""mean"",; ); pb.obs[""patient_id""].nunique(). 69. >>> pb = sc.get.aggregate(; test_adata,; by=[; ""patient_id"",; ""timepoint"",; ],; func=""mean"",; ); pb.obs[""patient_id""].nunique(). 69; ```. ### Error output. ```pytb; So only if using all three variables, some patient IDs are lost. I don't see why this would be happening.; ```. ### Versions. <details>. ```; Package Version Editable project location; ------------------------- --------------- -------------------------------------------------------------------------------------------------------------------------; aiohttp 3.9.3; aiosignal 1.3.1; anndata 0.10.5.post1; anyio 4.3.0; appdirs 1.4.4; argon2-cffi 23.1.0; argon2-cffi-bindings 21.2.0; array_api_compat 1.5; arrow 1.3.0; asciitree 0.3.3; asttokens 2.4.1; async-lru 2.0.4; async-timeout 4.0.3; attrs 23.2.0; Babel 2.14.0; beautifulsoup4 4.12.3; bleach 6.1.0; bokeh 3.3.4; branca 0.7.1; Brotli 1.1.0; cached-property 1.5.2; cachetools 5.3.3; certifi 2024.2.2; cffi 1.16.0; charset-normalizer 3.3.2; click 8.1.7; click-plugins 1.1.1; cligj 0.7.2; cloudpickle 3.0.0; colorama 0.4.6; colorcet 3.1.0; comm 0.2.1; confluent-kafka 1.9.2; contourpy 1.2.0; cubinlinker 0.3.0; cucim 24.2.0; cuda-python 11.8.3; cudf 24.2.2; cudf_kafka 24.2.2; cugraph 24.2.0; cuml 24.2.0; cuproj 24.2.0; cupy 12.2.0; cuspatial 24.2.0; custreamz 24.2.2; cuxfilter 24.2.0; cycler 0.12.1; cytoolz 0.12.3; dask 2024.1.1; dask-cuda 24.2.0; dask-cudf 24.2.2; datashader 0.16.0; debugpy 1.8.1; decorator 5.1.1; decoupler 1.6.0; defusedxml 0.7.1; distributed 2024.1.1; docrep 0.3.2; entrypoints 0.4; et-xmlfile 1.1.0; exceptiongroup 1.2.0; executing 2.0.1; fa2 0.3.5; fasteners 0.19; fastjsonschema 2.19.1; fastrlock 0.8.2; fcsparser 0.2.8; filelock 3.13.1; fiona 1.9.5; folium 0.16.0; fonttools 4.49.0; fqdn 1.5.1;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2964:1964,timeout,timeout,1964,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2964,1,['timeout'],['timeout']
Safety,"data_tmp, min_genes=mingenes); sc.pp.filter_cells(adata_tmp, min_counts=minUMIs). if maxgenes <= 1:; maxgenes_new = np.percentile(adata_tmp.obs['n_genes'], 100*maxgenes)+1; else:; maxgenes_new = maxgenes; if maxUMIs <= 1:; maxUMIs_new = np.percentile(adata_tmp.obs['n_counts'], 100*maxUMIs)+1; else:; maxUMIs_new = maxUMIs; sc.pp.filter_cells(adata_tmp, max_genes=maxgenes_new); sc.pp.filter_cells(adata_tmp, max_counts=maxUMIs_new); sc.pp.filter_genes(adata_tmp, min_cells=mincells); adata_tmp.obs['sample'] = ugname[i]; adata = sc.concat([adata,adata_tmp],join='outer'); ```. ```pytb; filtered out 5508 genes that are detected in less than 5 cells; filtered out 5905 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6390 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_u",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:1800,detect,detected,1800,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"e them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5923 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6767 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7077 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6080 genes that are detected in less than 5 cells; Traceback (most recent call last):; File ""/mypath/runMulti_scanpy.py"", line 161, in main; adata = sc.concat([adata,adata_tmp],join='outer'); File ""/mypath/scanpy1.7/lib/python3.8/site-packages/anndata/_core/merge.py"", line 818, i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:3008,detect,detected,3008,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"e them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5923 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6767 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7077 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_u",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:2706,detect,detected,2706,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"e them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5923 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6767 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7077 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6080 genes that are detected in less than 5 cells; Traceback (most recent call last):; File ""/mypath/runMulti_scanpy.py"", line 161, in main; adata = sc.concat([adata,adata_tmp],join='outer'); File ""/mypath/scanpy1.7/lib/python3.8/site-packages/anndata/_core/merge.py"", line 818, in concat; X = concat_arrays(; File ""/mypath/scanpy1.7/lib/python3.8/site-packages/anndata/_core/merge.py"", line 424, in concat_arrays; return np.concat",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:3159,detect,detected,3159,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"e them unique, call `.obs_names_make_unique`.; filtered out 6390 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5923 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6767 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_u",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:2555,detect,detected,2555,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"e them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5923 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6767 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7077 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6080 genes that are detected in less than 5 cells; Traceback (most recent call last):; File ""/mypath/runMulti_scanpy.py"", line 161, in main; adata = sc.concat([adata,adata_tmp],join='outer'); File ""/mypath/scanpy1.7/lib/python3.8/site-packages/anndata/_core/merge.py"", line 818, in concat; X = concat_arrays(; File ""/mypath/scanpy1.7/lib/python3.8/site-packages/anndata/_core/merge.py"", line 424, in concat_arrays; return np.concatenate(; File ""<__array_function__ internals>"", line 5, in concatenate; numpy.core._exceptions.MemoryError: Unable to allocate 15.9 GiB for an array wit",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:3310,detect,detected,3310,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"e them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6039 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6036 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5923 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6767 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7077 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6080 genes that are detected in less than 5 cells; Traceback (most recent call last):; File ""/mypath/runMulti_scanpy.py"", line 16",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:2857,detect,detected,2857,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"e();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-j38v6hmh/install-record.txt --single-version-externally-managed --user --prefix= --compile --install-headers /home/ube/.local/include/python3.10/llvmlite; cwd: /tmp/pip-install-i_hyvl0s/llvmlite_d91917e9522a491da51d00bc9034d43e/; Complete output (29 lines):; running install; running build; got version from file /tmp/pip-install-i_hyvl0s/llvmlite_d91917e9522a491da51d00bc9034d43e/llvmlite/_version.py {'version': '0.34.0', 'full': 'c5889c9e98c6b19d5d85ebdd982d64a03931f8e2'}; running build_ext; /usr/bin/python /tmp/pip-install-i_hyvl0s/llvmlite_d91917e9522a491da51d00bc9034d43e/ffi/build.py; LLVM version... Traceback (most recent call last):; File ""/tmp/pip-install-i_hyvl0s/llvmlite_d91917e9522a491da51d00bc9034d43e/ffi/build.py"", line 105, in main_posix; out = subprocess.check_output([llvm_config, '--version']); File ""/usr/lib/python3.10/subprocess.py"", line 420, in check_output; return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,; File ""/usr/lib/python3.10/subprocess.py"", line 501, in run; with Popen(*popenargs, **kwargs) as process:; File ""/usr/lib/python3.10/subprocess.py"", line 966, in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; File ""/usr/lib/python3.10/subprocess.py"", line 1842, in _execute_child; raise child_exception_type(errno_num, err_msg, err_filename); FileNotFoundError: [Errno 2] No such file or directory: 'llvm-config'; ; During handling of the above exception, another exception occurred:; ; Traceback (most recent call last):; File ""/tmp/pip-install-i_hyvl0s/llvmlite_d91917e9522a491da51d00bc9034d43e/ffi/build.py"", line 191, in <module>; main(); File ""/tmp/pip-install-i_hyvl0s/llvmlite_d91917e9522a491da51d00bc9034d43e/ffi/build.py"", line 181, in main; main_posix('linux', '.so'); File ""/tmp/pip-install-i_hyvl0s/llvmlite_d91917e9522a491da51d00bc9034d43e/ffi/build.py"", line 107, in main_posix; raise RuntimeError(""%s failed executing, pleas",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2105:1777,timeout,timeout,1777,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2105,2,['timeout'],['timeout']
Safety,"eaf_array_parallel(rp_forest)); 1098 else:; 1099 return np.array([[-1]]). ~/.local/lib/python3.8/site-packages/pynndescent/rp_trees.py in rptree_leaf_array_parallel(rp_forest); 1087 ; 1088 def rptree_leaf_array_parallel(rp_forest):; -> 1089 result = joblib.Parallel(n_jobs=-1, require=""sharedmem"")(; 1090 joblib.delayed(get_leaves_from_tree)(rp_tree) for rp_tree in rp_forest; 1091 ). /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/parallel.py in __call__(self, iterable); 1054 ; 1055 with self._backend.retrieval_context():; -> 1056 self.retrieve(); 1057 # Make sure that we get a last message telling us we are done; 1058 elapsed_time = time.time() - self._start_time. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/parallel.py in retrieve(self); 933 try:; 934 if getattr(self._backend, 'supports_timeout', False):; --> 935 self._output.extend(job.get(timeout=self.timeout)); 936 else:; 937 self._output.extend(job.get()). /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/multiprocessing/pool.py in get(self, timeout); 769 return self._value; 770 else:; --> 771 raise self._value; 772 ; 773 def _set(self, i, obj):. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/multiprocessing/pool.py in worker(inqueue, outqueue, initializer, initargs, maxtasks, wrap_exception); 123 job, i, func, args, kwds = task; 124 try:; --> 125 result = (True, func(*args, **kwds)); 126 except Exception as e:; 127 if wrap_exception and func is not _helper_reraises_exception:. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/_parallel_backends.py in __call__(self, *args, **kwargs); 593 def __call__(self, *args, **kwargs):; 594 try:; --> 595 return self.func(*args, **kwargs); 596 except KeyboardInterrupt as e:; 597 # We capture the KeyboardInterrupt and reraise it as. ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2472:4244,timeout,timeout,4244,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2472,1,['timeout'],['timeout']
Safety,"ed {accession} to {experiment_dir.absolute()}""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in download_experiment(accession); 41 ; 42 _download(; ---> 43 download_url + ""experiment-design"", experiment_dir / ""experimental_design.tsv"",; 44 ); 45 _download(. ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/readwrite.py in _download(url, path); 877 ; 878 try:; --> 879 urlretrieve(url, str(path), reporthook=update_to); 880 except Exception:; 881 # Make sure file doesn’t exist half-downloaded. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlretrieve(url, filename, reporthook, data); 246 url_type, path = splittype(url); 247 ; --> 248 with contextlib.closing(urlopen(url, data)) as fp:; 249 headers = fp.info(); 250 . ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context); 221 else:; 222 opener = _opener; --> 223 return opener.open(url, data, timeout); 224 ; 225 def install_opener(opener):. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in open(self, fullurl, data, timeout); 530 for processor in self.process_response.get(protocol, []):; 531 meth = getattr(processor, meth_name); --> 532 response = meth(req, response); 533 ; 534 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in http_response(self, request, response); 640 if not (200 <= code < 300):; 641 response = self.parent.error(; --> 642 'http', request, response, code, msg, hdrs); 643 ; 644 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in error(self, proto, *args); 568 if http_err:; 569 args = (dict, 'default', 'http_error_default') + orig_args; --> 570 return self._call_chain(*args); 571 ; 572 # XXX probably also want an abstract factory that knows when it makes. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in _call_chain(self, chain, kind, meth_name, *args); 502 for handler in handlers:; 503 func = getattr(handler, m",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1221:1969,timeout,timeout,1969,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1221,1,['timeout'],['timeout']
Safety,"etup_distribution = dist = klass(attrs); File ""/tmp/pip-build-env-wb9dh0v3/overlay/lib/python3.8/site-packages/setuptools/dist.py"", line 423, in __init__; _Distribution.__init__(self, {; File ""/usr/lib/python3.8/distutils/dist.py"", line 292, in __init__; self.finalize_options() File ""/tmp/pip-build-env-wb9dh0v3/overlay/lib/python3.8/site-packages/setuptools/dist.py"", line 695, in finalize_options; ep(self); File ""/tmp/pip-build-env-wb9dh0v3/overlay/lib/python3.8/site-packages/setuptools/dist.py"", line 702, in _finalize_setup_keywords; ep.load()(self, ep.name, value); File ""/usr/local/lib/python3.8/dist-packages/setuptools_scm/integration.py"", line 17, in version_keyword; dist.metadata.version = _get_version(config); File ""/usr/local/lib/python3.8/dist-packages/setuptools_scm/__init__.py"", line 148, in _get_version; parsed_version = _do_parse(config); File ""/usr/local/lib/python3.8/dist-packages/setuptools_scm/__init__.py"", line 110, in _do_parse raise LookupError(; LookupError: setuptools-scm was unable to detect version for '/home/ubuntu/code/scanpy'.; Make sure you're either building from a fully intact git repository or PyPI tarballs. Most other sources (such as GitHub's tarballs, a git checkout without the .git folder) don't contain the necessary metadata and will not work.; ; For example, if you're using pip, instead of https://github.com/user/proj/archive/master.zip use git+https://github.com/user/proj.git#egg=proj```; ```; #### Versions. <details>. scanpy; problem is with installation, so scanpy.logging.print_versions(); commit: ef5a8ee57c2aef7778a069a49101a8998718e6d5. python; 3.8.5. pip; 20.0.2 . ubuntu; 20.04. pip list; Package Version Location ; ------------------------- -------------------- -----------------------------; analysaurus 0.0.1 /home/ubuntu/code/analysaurus; anndata 0.7.5 ; ansi2html 1.5.2 ; appdirs 1.4.4 ; argon2-cffi 20.1.0 ; astroid 2.4.2 ; async-generator 1.10 ; attrs 20.3.0 ; autopep8 1.5.4 ; backcall 0.2.0 ; biopython 1.78 ; black 20.8b1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1496:2633,detect,detect,2633,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1496,1,['detect'],['detect']
Safety,"eturn np.vstack(rptree_leaf_array_parallel(rp_forest)); 1098 else:; 1099 return np.array([[-1]]). ~/.local/lib/python3.8/site-packages/pynndescent/rp_trees.py in rptree_leaf_array_parallel(rp_forest); 1087 ; 1088 def rptree_leaf_array_parallel(rp_forest):; -> 1089 result = joblib.Parallel(n_jobs=-1, require=""sharedmem"")(; 1090 joblib.delayed(get_leaves_from_tree)(rp_tree) for rp_tree in rp_forest; 1091 ). /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/parallel.py in __call__(self, iterable); 1054 ; 1055 with self._backend.retrieval_context():; -> 1056 self.retrieve(); 1057 # Make sure that we get a last message telling us we are done; 1058 elapsed_time = time.time() - self._start_time. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/parallel.py in retrieve(self); 933 try:; 934 if getattr(self._backend, 'supports_timeout', False):; --> 935 self._output.extend(job.get(timeout=self.timeout)); 936 else:; 937 self._output.extend(job.get()). /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/multiprocessing/pool.py in get(self, timeout); 769 return self._value; 770 else:; --> 771 raise self._value; 772 ; 773 def _set(self, i, obj):. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/multiprocessing/pool.py in worker(inqueue, outqueue, initializer, initargs, maxtasks, wrap_exception); 123 job, i, func, args, kwds = task; 124 try:; --> 125 result = (True, func(*args, **kwds)); 126 except Exception as e:; 127 if wrap_exception and func is not _helper_reraises_exception:. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/_parallel_backends.py in __call__(self, *args, **kwargs); 593 def __call__(self, *args, **kwargs):; 594 try:; --> 595 return self.func(*args, **kwargs); 596 except KeyboardInterrupt as e:; 597 # We capture the KeyboardInter",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2472:4231,timeout,timeout,4231,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2472,1,['timeout'],['timeout']
Safety,"exploring (I let it run for almost a whole week and nothing changed). However, even if I switched to my own dataset (unpublished, around 5k celIs), it paused at the same step. ; ```; Running Scrublet; filtered out 1419 genes that are detected in less than 3 cells; normalizing counts per cell; finished (0:00:00); extracting highly variable genes; finished (0:00:00); --> added; 'highly_variable', boolean vector (adata.var); 'means', float vector (adata.var); 'dispersions', float vector (adata.var); 'dispersions_norm', float vector (adata.var); normalizing counts per cell; finished (0:00:00); normalizing counts per cell; finished (0:00:00); Embedding transcriptomes using PCA...; ```. I was running this analysis on my Intel-core iMac. Surprisingly, when I ran the same line of code (under a similar virtual environment) on my M2-chip laptop, it finished in a flash of time.; ```Running Scrublet; filtered out 1419 genes that are detected in less than 3 cells; normalizing counts per cell; finished (0:00:00); extracting highly variable genes; finished (0:00:00); --> added; 'highly_variable', boolean vector (adata.var); 'means', float vector (adata.var); 'dispersions', float vector (adata.var); 'dispersions_norm', float vector (adata.var); normalizing counts per cell; finished (0:00:00); normalizing counts per cell; finished (0:00:00); Embedding transcriptomes using PCA...; using data matrix X directly; Automatically set threshold at doublet score = 0.42; Detected doublet rate = 0.3%; Estimated detectable doublet fraction = 5.2%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 6.6%; Scrublet finished (0:00:14); ```. I'm still not sure what actually caused the problem, but it seems that some dependency inconsistency occurred when performing PCA within the pipeline. Perhaps some package required for the `sc.pp.scrublet()` pipeline needs to be updated to a newer version?. Here are the details of the packages in the virtual environment when I ran the code on my desktop (fail",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:1487,detect,detected,1487,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['detect'],['detected']
Safety,"fo = pd.DataFrame(df.columns,index=df.columns,columns=['cell_index']); adata_tmp = sc.AnnData(df.T, obs=cellinfo, var = geneinfo); sc.pp.filter_cells(adata_tmp, min_genes=mingenes); sc.pp.filter_cells(adata_tmp, min_counts=minUMIs). if maxgenes <= 1:; maxgenes_new = np.percentile(adata_tmp.obs['n_genes'], 100*maxgenes)+1; else:; maxgenes_new = maxgenes; if maxUMIs <= 1:; maxUMIs_new = np.percentile(adata_tmp.obs['n_counts'], 100*maxUMIs)+1; else:; maxUMIs_new = maxUMIs; sc.pp.filter_cells(adata_tmp, max_genes=maxgenes_new); sc.pp.filter_cells(adata_tmp, max_counts=maxUMIs_new); sc.pp.filter_genes(adata_tmp, min_cells=mincells); adata_tmp.obs['sample'] = ugname[i]; adata = sc.concat([adata,adata_tmp],join='outer'); ```. ```pytb; filtered out 5508 genes that are detected in less than 5 cells; filtered out 5905 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6390 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_u",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:1649,detect,detected,1649,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"follow the normal pipeline and only meet problems when i use the function ""sc.pp.regress"". it works well on R; system is windows 8.1; and use annaconda to manage environment; python 3.6.6. OverflowError Traceback (most recent call last); <ipython-input-21-c0d016811ded> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito']). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 777 import multiprocessing; 778 pool = multiprocessing.Pool(n_jobs); --> 779 res = pool.map_async(_regress_out_chunk, tasks).get(9999999); 780 pool.close(); 781 . ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in get(self, timeout); 636 ; 637 def get(self, timeout=None):; --> 638 self.wait(timeout); 639 if not self.ready():; 640 raise TimeoutError. ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in wait(self, timeout); 633 ; 634 def wait(self, timeout=None):; --> 635 self._event.wait(timeout); 636 ; 637 def get(self, timeout=None):. ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 549 signaled = self._flag; 550 if not signaled:; --> 551 signaled = self._cond.wait(timeout); 552 return signaled; 553 . ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 297 else:; 298 if timeout > 0:; --> 299 gotit = waiter.acquire(True, timeout); 300 else:; 301 gotit = waiter.acquire(False). OverflowError: timeout value is too large. update:-----------------------------------------------------------------------------------------------------. when i used the n_jobs= 1 as a paramters ,seems like i lack a module named patsy; oduleNotFoundError Traceback (most recent call last); <ipython-input-22-6ea7e0dee435> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito'],n_jobs = 1). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jo",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:725,timeout,timeout,725,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,6,"['Timeout', 'timeout']","['TimeoutError', 'timeout']"
Safety,"font-family:""Var\(--jp-code-font-family\)"", sans-serif;; 	mso-font-charset:0;; 	text-align:center;}; .xl68; 	{text-align:center;}; ruby; 	{ruby-align:left;}; rt; 	{color:windowtext;; 	font-size:9.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:等线;; 	mso-generic-font-family:auto;; 	mso-font-charset:134;; 	mso-char-type:none;; 	display:none;}; -->; </style>; </head>. <body link=""#0563C1"" vlink=""#954F72"">. Windows PC1 |   | Windows PC2 |   | Windows PC3 |  ; -- | -- | -- | -- | -- | --; adjustText | 0.7.3 | adjustText | 0.7.3 | adjustText | 0.7.3; aiohttp | 3.8.1 | aiohttp | 3.8.1 | aiohttp | 3.8.1; aiosignal | 1.2.0 | aiosignal | 1.2.0 | aiosignal | 1.2.0; anndata | 0.7.8 | anndata | 0.7.8 | anndata | 0.7.8; anyio | 2.2.0 | anyio | 2.2.0 | anyio | 2.2.0; arboreto | 0.1.6 | arboreto | 0.1.6 | arboreto | 0.1.6; argon2-cffi | 20.1.0 | argon2-cffi | 20.1.0 | argon2-cffi | 20.1.0; async-generator | 1.1 | async-generator | 1.1 | async-generator | 1.1; async-timeout | 4.0.2 | async-timeout | 4.0.2 | async-timeout | 4.0.2; attrs | 21.4.0 | attrs | 21.2.0 | attrs | 21.4.0; Babel | 2.9.1 | Babel | 2.9.1 | Babel | 2.9.1; backcall | 0.2.0 | backcall | 0.2.0 | backcall | 0.2.0; bleach | 4.1.0 | bleach | 4.1.0 | bleach | 4.1.0; bokeh | 2.4.2 | bokeh | 2.4.2 | bokeh | 2.4.2; boltons | 21.0.0 | boltons | 21.0.0 | boltons | 21.0.0; brotlipy | 0.7.0 | brotlipy | 0.7.0 | brotlipy | 0.7.0; cellrank | 1.5.1 | cellrank | 1.5.1 | cellrank | 1.5.1; certifi | 2020.6.20 | certifi | 2020.6.20 | certifi | 2020.6.20; cffi | 1.15.0 | cffi | 1.15.0 | cffi | 1.15.0; charset-normalizer | 2.0.4 | charset-normalizer | 2.0.4 | charset-normalizer | 2.0.4; click | 8.0.3 | click | 8.0.3 | click | 8.0.3; cloudpickle | 2.0.0 | cloudpickle | 2.0.0 | cloudpickle | 2.0.0; colorama | 0.4.4 | colorama | 0.4.4 | colorama | 0.4.4; cryptography | 36.0.0 | cryptography | 36.0.0 | cryptography | 36.0.0; ctxcore | 0.1.1 | ctxcore | 0.1.1 | ctxcore | 0.1.1; cycler | 0.11.0 | cycler | 0.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2114:6271,timeout,timeout,6271,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2114,1,['timeout'],['timeout']
Safety,"g\simple.py in regress_out(adata, keys, n_jobs, copy); 777 import multiprocessing; 778 pool = multiprocessing.Pool(n_jobs); --> 779 res = pool.map_async(_regress_out_chunk, tasks).get(9999999); 780 pool.close(); 781 . ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in get(self, timeout); 636 ; 637 def get(self, timeout=None):; --> 638 self.wait(timeout); 639 if not self.ready():; 640 raise TimeoutError. ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in wait(self, timeout); 633 ; 634 def wait(self, timeout=None):; --> 635 self._event.wait(timeout); 636 ; 637 def get(self, timeout=None):. ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 549 signaled = self._flag; 550 if not signaled:; --> 551 signaled = self._cond.wait(timeout); 552 return signaled; 553 . ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 297 else:; 298 if timeout > 0:; --> 299 gotit = waiter.acquire(True, timeout); 300 else:; 301 gotit = waiter.acquire(False). OverflowError: timeout value is too large. update:-----------------------------------------------------------------------------------------------------. when i used the n_jobs= 1 as a paramters ,seems like i lack a module named patsy; oduleNotFoundError Traceback (most recent call last); <ipython-input-22-6ea7e0dee435> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito'],n_jobs = 1). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 781 ; 782 else:; --> 783 res = list(map(_regress_out_chunk, tasks)); 784 ; 785 # res is a list of vectors (each corresponding to a regressed gene column). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in _regress_out_chunk(data); 798 ; 799 responses_chunk_list = []; --> 800 import statsmodels.api as sm; 801 from statsmodels.tools.sm_exceptions import PerfectSeparationE",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:1413,timeout,timeout,1413,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,1,['timeout'],['timeout']
Safety,"gument of a type that is unsupported by the named function.; [1] During: resolving callee type: Function(<function norm at 0x7f637ad4ca70>); [2] During: typing of call at /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py (16). File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 16:; def l2_norm(in_matrix):; return np.linalg.norm(x=in_matrix, axis=1); ^. @jit(float32[:](float32[:, :]), nogil=True); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""l2_norm"" was compiled in object mode without forceobj=True. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 15:; @jit(float32[:](float32[:, :]), nogil=True); def l2_norm(in_matrix):; ^. state.func_ir.loc)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: ; Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 15:; @jit(float32[:](float32[:, :]), nogil=True); def l2_norm(in_matrix):; ^. state.func_ir.loc)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py:14: NumbaWarning: Code running in object mode won't allow parallel execution despite nogil=True.; @jit(float32[:](float32[:, :]), nogil=True); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py:14: NumbaWarning: ; Compilation is falling back to object mode WITH looplifting enabled because Function ""l2_norm"" failed type inference due to: Invalid use of Function(<function norm at 0x7f637ad4ca70>) with argument(s) of type(s): (axis=Literal[int](1), x=array(float32, 2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1167:2887,detect,detected,2887,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1167,7,['detect'],['detected']
Safety,"gument of a type that is unsupported by the named function.; [1] During: resolving callee type: Function(<function norm at 0x7f637ad4ca70>); [2] During: typing of call at /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py (16). File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 16:; def l2_norm(in_matrix):; return np.linalg.norm(x=in_matrix, axis=1); ^. @jit(float32[:](float32[:, :]), nogil=True); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""l2_norm"" was compiled in object mode without forceobj=True. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 15:; @jit(float32[:](float32[:, :]), nogil=True); def l2_norm(in_matrix):; ^. state.func_ir.loc)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: ; Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 15:; @jit(float32[:](float32[:, :]), nogil=True); def l2_norm(in_matrix):; ^. state.func_ir.loc)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py:14: NumbaWarning: Code running in object mode won't allow parallel execution despite nogil=True.; @jit(float32[:](float32[:, :]), nogil=True); Starting MNN correct iteration. Reference batch: 0; Step 1 of 11: processing batch 1; Looking for MNNs...; /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py:88: NumbaWarning: ; Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""find_mutual_nn"" failed type inference due to: non-precise ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1167:19995,detect,detected,19995,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1167,1,['detect'],['detected']
Safety,"hecked that this issue has not already been reported.; - [ Yes] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.pp.highly_variable_genes(; ncase,; n_top_genes=3000,; # subset=True, # to automatically subset to the 4000 genes; layer=""counts"",; flavor=""seurat""; ); ```. ```pytb; ValueError: cannot specify integer `bins` when input data contains infinity; ```. #### Versions. <details>. WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.8; scanpy 1.8.2; sinfo 0.3.4; -----; PIL 8.3.1; aa8f2297d25b4dc6fd3d98411eb3ba53823c4f42 NA; absl NA; anyio NA; astunparse 1.6.3; attr 21.2.0; babel 2.9.1; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; celltypist 0.2.0; certifi 2021.05.30; cffi 1.14.6; charset_normalizer 2.0.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; decorator 5.0.9; defusedxml 0.7.1; entrypoints 0.3; et_xmlfile 1.1.0; flatbuffers 2.0; gast 0.5.3; google NA; h5py 3.3.0; idna 3.2; igraph 0.9.9; ipykernel 6.2.0; ipython_genutils 0.2.0; jedi 0.18.0; jinja2 3.0.1; joblib 1.0.1; json5 NA; jsonschema 3.2.0; jupyter_server 1.10.2; jupyterlab_server 2.7.1; keras 2.8.0; keras_preprocessing",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2193:1014,avoid,avoid,1014,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2193,1,['avoid'],['avoid']
Safety,"https://github.com/theislab/scanpy/blob/63b42e4bff46a9e1386abfede4adeef3a8100c7b/pyproject.toml#L65. > The sinfo package has changed name and is now called session_info to become more discoverable and self-explanatory. The sinfo PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install session_info instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1996:265,avoid,avoid,265,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1996,1,['avoid'],['avoid']
Safety,"i_expression_atlas.py in download_experiment(accession); 41 ; 42 _download(; ---> 43 download_url + ""experiment-design"", experiment_dir / ""experimental_design.tsv"",; 44 ); 45 _download(. ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/readwrite.py in _download(url, path); 877 ; 878 try:; --> 879 urlretrieve(url, str(path), reporthook=update_to); 880 except Exception:; 881 # Make sure file doesn’t exist half-downloaded. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlretrieve(url, filename, reporthook, data); 246 url_type, path = splittype(url); 247 ; --> 248 with contextlib.closing(urlopen(url, data)) as fp:; 249 headers = fp.info(); 250 . ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context); 221 else:; 222 opener = _opener; --> 223 return opener.open(url, data, timeout); 224 ; 225 def install_opener(opener):. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in open(self, fullurl, data, timeout); 530 for processor in self.process_response.get(protocol, []):; 531 meth = getattr(processor, meth_name); --> 532 response = meth(req, response); 533 ; 534 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in http_response(self, request, response); 640 if not (200 <= code < 300):; 641 response = self.parent.error(; --> 642 'http', request, response, code, msg, hdrs); 643 ; 644 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in error(self, proto, *args); 568 if http_err:; 569 args = (dict, 'default', 'http_error_default') + orig_args; --> 570 return self._call_chain(*args); 571 ; 572 # XXX probably also want an abstract factory that knows when it makes. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in _call_chain(self, chain, kind, meth_name, *args); 502 for handler in handlers:; 503 func = getattr(handler, meth_name); --> 504 result = func(*args); 505 if result is not None:; 506 return result. ~/anaconda3/envs/sc-py/lib/pyth",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1221:2102,timeout,timeout,2102,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1221,1,['timeout'],['timeout']
Safety,"ization.py:45: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; scanpy/preprocessing/_normalization.py:185: in normalize_total; ' The following highly-expressed genes are not considered during '; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = Index(['0', '1', '2'], dtype='object'); key = dask.array<invert, shape=(3,), dtype=bool, chunksize=(3,), chunktype=numpy.ndarray>. def __getitem__(self, key):; """"""; Override numpy.ndarray's __getitem__ method to work as desired.; ; This function adds lists and Series as valid boolean indexers; (ndarrays only supports ndarray with dtype=bool).; ; If resulting ndim != 1, plain ndarray is returned instead of; corresponding `Index` subclass.; ; """"""; getitem = self._data.__getitem__; ; if is_integer(key) or is_float(key):; # GH#44051 exclude bool, which would return a 2d ndarray; key = com.cast_scalar_indexer(key, warn_float=True); return getitem(key); ; if isinstance(key, slice):; # This case is separated from the conditional above to avoid; # pessimization com.is_bool_indexer and ndim checks.; result = getitem(key); # Going through simple_new for performance.; return type(self)._simple_new(result, name=self._name); ; if com.is_bool_indexer(key):; # if we have list[bools, length=1e5] then doing this check+convert; # takes 166 µs + 2.1 ms and cuts the ndarray.__getitem__; # time below from 3.8 ms to 496 µs; # if we already have ndarray[bool], the overhead is 1.4 µs or .25%; key = np.asarray(key, dtype=bool); ; > result = getitem(key); E IndexError: too many indices for array: array is 1-dimensional, but 3 were indexed. ../../venvs/single-cell/lib/python3.8/site-packages/pandas/core/indexes/base.py:5055: IndexError; ```. #### Versions. <details>. -----; anndata 0.9.0rc2.dev18+g7771f6ee; scanpy 1.10.0.dev50+g3e3427d0; -----; PIL 9.1.1; asciitree NA; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; cloudpickle 2.2.1; cycler 0.10.0; cython_runtime NA; dask 2023.3.2;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2465:3216,avoid,avoid,3216,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2465,1,['avoid'],['avoid']
Safety,"ize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #173; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Docs:; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/release-notes/index.html#version-1-10; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/api/generated/scanpy.pp.scrublet.html; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/api/generated/scanpy.pp.scrublet_simulate_doublets.html; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/api/generated/scanpy.pl.scrublet_score_distribution.html. ### How to review this PR. I made tests quantitative before this PR, so note that the only change that modified tests is 42143d88a0d499130fac8e5ca60eef0c19163734. In that PR, I make it so there are no longer any duplicate simulated doublets being created. This is necessary to be able to support any neighborhood detection algorithm. I also feel like it makes more sense. This is the only algorithmic change to upstream. Please use your own judgement to check if this makes sense to you. ### TODO:. - [x] remove unused utils (plotting, preprocessing); - [ ] figure out what remaining utils to replace with ours; - [x] PCA/SVD: https://github.com/scverse/scanpy/blob/bf5f1f9343f5729df6f90f7c68363682022e0480/scanpy/preprocessing/_scrublet/__init__.py#L415-L417; - [x] mean_center, normalize_variance, zscore: small enough to be left alone I think; - [ ] get_knn_graph: no need to have multiple implementations here, but our current implementation automatically calculates connectivities, which this doesn’t need https://github.com/scverse/scanpy/pull/2723; - [ ] refactor so the class API matches the way we use it ; - [x] switch to dataclass for centralized attr defs; - [x] use non-deprecated random state style; - [x] use our logging instead of print statements",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2703:1226,detect,detection,1226,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2703,1,['detect'],['detection']
Safety,"le_genes_single_batch(; 441 adata,; 442 layer=layer,; 443 min_disp=min_disp,; 444 max_disp=max_disp,; 445 min_mean=min_mean,; 446 max_mean=max_mean,; 447 n_top_genes=n_top_genes,; 448 n_bins=n_bins,; 449 flavor=flavor,; 450 ); 451 else:; 452 sanitize_anndata(adata). File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/scanpy/preprocessing/_highly_variable_genes.py:223, in _highly_variable_genes_single_batch(adata, layer, min_disp, max_disp, min_mean, max_mean, n_top_genes, n_bins, flavor); 219 # retrieve those genes that have nan std, these are the ones where; 220 # only a single gene fell in the bin and implicitly set them to have; 221 # a normalized disperion of 1; 222 one_gene_per_bin = disp_std_bin.isnull(); --> 223 gen_indices = np.where(one_gene_per_bin[df['mean_bin'].values])[0].tolist(); 224 if len(gen_indices) > 0:; 225 logg.debug(; 226 f'Gene indices {gen_indices} fell into a single bin: their '; 227 'normalized dispersion was set to 1.\n '; 228 'Decreasing `n_bins` will likely avoid this effect.'; 229 ). File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/pandas/core/series.py:1033, in Series.__getitem__(self, key); 1030 key = np.asarray(key, dtype=bool); 1031 return self._get_values(key); -> 1033 return self._get_with(key). File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/pandas/core/series.py:1073, in Series._get_with(self, key); 1070 return self.iloc[key]; 1072 # handle the dup indexing case GH#4246; -> 1073 return self.loc[key]. File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/pandas/core/indexing.py:1103, in _LocationIndexer.__getitem__(self, key); 1100 axis = self.axis or 0; 1102 maybe_callable = com.apply_if_callable(key, self.obj); -> 1103 return self._getitem_axis(maybe_callable, axis=axis). File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/pandas/core/indexing.py:1332, in _LocIndexer._getitem_axis(self, key, axis); 1329 if hasattr(key, ""ndim"") and key.ndim > 1:; 1330 raise ValueError(""",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2547:2238,avoid,avoid,2238,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2547,1,['avoid'],['avoid']
Safety,"lg, sphinxext-opengraph, sphinx-design, sphinx-copybutton, sphinx-autodoc-typehints, scanpydoc, pynndescent, pydata-sphinx-theme, pre-commit, myst-parser, anndata, umap-learn, sphinx-book-theme, jupyter-cache, scanpy, nbsphinx, myst-nb; Attempting uninstall: tbb; Found existing installation: TBB 0.2; ERROR: Cannot uninstall 'TBB'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.; ```. ### Versions. <details>. ```; Package Version; ----------------------------- ---------------; aiobotocore 2.5.0; aiofiles 22.1.0; aiohttp 3.8.5; aioitertools 0.7.1; aiosignal 1.2.0; aiosqlite 0.18.0; alabaster 0.7.12; anaconda-anon-usage 0.4.2; anaconda-catalogs 0.2.0; anaconda-client 1.12.1; anaconda-cloud-auth 0.1.3; anaconda-navigator 2.5.0; anaconda-project 0.11.1; anyio 3.5.0; appdirs 1.4.4; argon2-cffi 21.3.0; argon2-cffi-bindings 21.2.0; arrow 1.2.3; astroid 2.14.2; astropy 5.1; asttokens 2.0.5; async-timeout 4.0.2; atomicwrites 1.4.0; attrs 22.1.0; Automat 20.2.0; autopep8 1.6.0; Babel 2.11.0; backcall 0.2.0; backports.functools-lru-cache 1.6.4; backports.tempfile 1.0; backports.weakref 1.0.post1; bcrypt 3.2.0; beautifulsoup4 4.12.2; binaryornot 0.4.4; black 0.0; bleach 4.1.0; bokeh 3.2.1; boltons 23.0.0; botocore 1.29.76; Bottleneck 1.3.5; brotlipy 0.7.0; certifi 2023.7.22; cffi 1.15.1; chardet 4.0.0; charset-normalizer 2.0.4; click 8.0.4; cloudpickle 2.2.1; clyent 1.2.2; colorama 0.4.6; colorcet 3.0.1; comm 0.1.2; conda 23.7.4; conda-build 3.26.1; conda-content-trust 0.2.0; conda_index 0.3.0; conda-libmamba-solver 23.7.0; conda-pack 0.6.0; conda-package-handling 2.2.0; conda_package_streaming 0.9.0; conda-repo-cli 1.0.75; conda-token 0.4.0; conda-verify 3.4.2; constantly 15.1.0; contourpy 1.0.5; cookiecutter 1.7.3; cryptography 41.0.3; cssselect 1.1.0; cycler 0.11.0; Cython 3.0.3; cytoolz 0.12.0; daal4py 2023.1.1; dask 2023.6.0; datasets 2.12.0; datashader 0.15.2; datashape 0.5.4;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2706:1754,timeout,timeout,1754,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2706,1,['timeout'],['timeout']
Safety,"lor""]. File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\series.py:1153, in Series.__getitem__(self, key); 1150 key = np.asarray(key, dtype=bool); 1151 return self._get_rows_with_mask(key); -> 1153 return self._get_with(key). File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\series.py:1163, in Series._get_with(self, key); 1158 raise TypeError(; 1159 ""Indexing a Series with DataFrame is not ""; 1160 ""supported, use the appropriate DataFrame column""; 1161 ); 1162 elif isinstance(key, tuple):; -> 1163 return self._get_values_tuple(key); 1165 elif not is_list_like(key):; 1166 # e.g. scalars that aren't recognized by lib.is_scalar, GH#32684; 1167 return self.loc[key]. File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\series.py:1203, in Series._get_values_tuple(self, key); 1198 if com.any_none(*key):; 1199 # mpl compat if we look up e.g. ser[:, np.newaxis];; 1200 # see tests.series.timeseries.test_mpl_compat_hack; 1201 # the asarray is needed to avoid returning a 2D DatetimeArray; 1202 result = np.asarray(self._values[key]); -> 1203 disallow_ndim_indexing(result); 1204 return result; 1206 if not isinstance(self.index, MultiIndex):. File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\indexers\utils.py:341, in disallow_ndim_indexing(result); 333 """"""; 334 Helper function to disallow multi-dimensional indexing on 1D Series/Index.; 335 ; (...); 338 in GH#30588.; 339 """"""; 340 if np.ndim(result) > 1:; --> 341 raise ValueError(; 342 ""Multi-dimensional indexing (e.g. `obj[:, None]`) is no longer ""; 343 ""supported. Convert to a numpy array before indexing instead.""; 344 ). ValueError: Multi-dimensional indexing (e.g. `obj[:, None]`) is no longer supported. Convert to a numpy array before indexing instead.; ```. ### Versions. <details>. ```-----; anndata 0.10.5.post1; scanpy 1.10.1; -----; PIL 9.4.0; annoy NA; anyio NA; asttokens NA; attr 22.1.0; autograd NA; autograd_gamma NA; babel 2.11.0; backcall 0.2.0; bbknn 1.6.0; bet",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3086:5456,avoid,avoid,5456,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3086,1,['avoid'],['avoid']
Safety,"ly meet problems when i use the function ""sc.pp.regress"". it works well on R; system is windows 8.1; and use annaconda to manage environment; python 3.6.6. OverflowError Traceback (most recent call last); <ipython-input-21-c0d016811ded> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito']). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 777 import multiprocessing; 778 pool = multiprocessing.Pool(n_jobs); --> 779 res = pool.map_async(_regress_out_chunk, tasks).get(9999999); 780 pool.close(); 781 . ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in get(self, timeout); 636 ; 637 def get(self, timeout=None):; --> 638 self.wait(timeout); 639 if not self.ready():; 640 raise TimeoutError. ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in wait(self, timeout); 633 ; 634 def wait(self, timeout=None):; --> 635 self._event.wait(timeout); 636 ; 637 def get(self, timeout=None):. ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 549 signaled = self._flag; 550 if not signaled:; --> 551 signaled = self._cond.wait(timeout); 552 return signaled; 553 . ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 297 else:; 298 if timeout > 0:; --> 299 gotit = waiter.acquire(True, timeout); 300 else:; 301 gotit = waiter.acquire(False). OverflowError: timeout value is too large. update:-----------------------------------------------------------------------------------------------------. when i used the n_jobs= 1 as a paramters ,seems like i lack a module named patsy; oduleNotFoundError Traceback (most recent call last); <ipython-input-22-6ea7e0dee435> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito'],n_jobs = 1). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 781 ; 782 else:; --> ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:1011,timeout,timeout,1011,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,2,['timeout'],['timeout']
Safety,"m', float vector (adata.var); normalizing counts per cell; finished (0:00:00); normalizing counts per cell; finished (0:00:00); Embedding transcriptomes using PCA...; ```. I was running this analysis on my Intel-core iMac. Surprisingly, when I ran the same line of code (under a similar virtual environment) on my M2-chip laptop, it finished in a flash of time.; ```Running Scrublet; filtered out 1419 genes that are detected in less than 3 cells; normalizing counts per cell; finished (0:00:00); extracting highly variable genes; finished (0:00:00); --> added; 'highly_variable', boolean vector (adata.var); 'means', float vector (adata.var); 'dispersions', float vector (adata.var); 'dispersions_norm', float vector (adata.var); normalizing counts per cell; finished (0:00:00); normalizing counts per cell; finished (0:00:00); Embedding transcriptomes using PCA...; using data matrix X directly; Automatically set threshold at doublet score = 0.42; Detected doublet rate = 0.3%; Estimated detectable doublet fraction = 5.2%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 6.6%; Scrublet finished (0:00:14); ```. I'm still not sure what actually caused the problem, but it seems that some dependency inconsistency occurred when performing PCA within the pipeline. Perhaps some package required for the `sc.pp.scrublet()` pipeline needs to be updated to a newer version?. Here are the details of the packages in the virtual environment when I ran the code on my desktop (failed case):; ```; channels:; - pytorch; - plotly; - conda-forge; - bioconda; - defaults; dependencies:; - anndata=0.10.7; - anyio=4.4.0; - appnope=0.1.4; - argcomplete=3.3.0; - argh=0.31.2; - argon2-cffi=23.1.0; - argon2-cffi-bindings=21.2.0; - arpack=3.8.0; - array-api-compat=1.7.1; - arrow=1.3.0; - asttokens=2.4.1; - async-lru=2.0.4; - attrs=23.2.0; - babel=2.14.0; - beautifulsoup4=4.12.3; - biopython=1.83; - blas=2.120; - blas-devel=3.9.0; - bleach=6.1.0; - blosc=1.21.5; - brotli=1.1.0; - brotli-bin=1.1.0; - bro",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:2061,detect,detectable,2061,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['detect'],['detectable']
Safety,"ndas/core/dtypes/missing.py in isna(obj); 125 Name: 1, dtype: bool; 126 """"""; --> 127 return _isna(obj); 128 ; 129 . ~/miniconda3/envs/scanpy-forge/lib/python3.8/site-packages/pandas/core/dtypes/missing.py in _isna(obj, inf_as_na); 154 # hack (for now) because MI registers as ndarray; 155 elif isinstance(obj, ABCMultiIndex):; --> 156 raise NotImplementedError(""isna is not defined for MultiIndex""); 157 elif isinstance(obj, type):; 158 return False. NotImplementedError: isna is not defined for MultiIndex; ```. </details>. I don't get an error from this on master, but I do get these warnings. ```; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*. Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.; ```. No differences between pandas, seaborn, or matplotlib versions between these environments. Seems like it's sorta fixed on master. I think this might be a cause:. ```python; import scanpy as sc; import seaborn as sns; sns.set() # <--- here. pbmc = sc.datasets.pbmc68k_reduced(); sc.pl.umap(pbmc, color = 'phase') # This errors. pbmc.uns[""phase_colors""]; ```. ```; [(0.2980392156862745, 0.4470588235294118, 0.6901960784313725),; (0.86666666666666",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1885:5766,avoid,avoided,5766,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1885,1,['avoid'],['avoided']
Safety,"ng. And there is a warning,; ```; /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/plotting/_utils.py:314: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.; pl.show(); ```. ### Minimal code sample. ```python. import scanpy as sc; import scanpy.external as sce. adata = sc.datasets.pbmc3k(). sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3). sc.external.pp.scrublet(adata, expected_doublet_rate = 0.06, threshold = 0.25); adata = adata[adata.obs.predicted_doublet == False, :]. sc.pp.calculate_qc_metrics(adata, percent_top=None, log1p=False, inplace=True); sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts'],; jitter=0.4, multi_panel=True, save=""_before_QC.pdf""); ```. ### Error output. ```pytb; /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata); Detected doublet rate = 1.7%; Estimated detectable doublet fraction = 41.1%; Overall doublet rate:; 	Expected = 6.0%; 	Estimated = 4.1%; /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/preprocessing/_qc.py:135: ImplicitModificationWarning: Trying to modify attribute `.obs` of view, initializing view as actual.; adata.obs[obs_metrics.columns] = obs_metrics; WARNING: saving figure to file figures/violin_before_QC.pdf; /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight; self._figure.tight_layout(*args, **kwargs); /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/plotting/_utils.py:314: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.; pl.show(); ```. ### Versions. <details>. ```; -----; anndata 0.9.2; scanpy 1.9.3; -----; PIL 9.2.0; annoy NA; anyio NA; arrow 1.2.3; asttokens NA; attr 23.1.0; attrs 23.1.0; ba",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2627:1388,Detect,Detected,1388,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2627,1,['Detect'],['Detected']
Safety,"niconda3/envs/uhler/lib/python3.7/site-packages/scanpy/plotting/_tools/scatterplots.py in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, vmax, vmin, vcenter, norm, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs); 383 rasterized=settings._vector_friendly,; 384 norm=normalize,; --> 385 **kwargs,; 386 ); 387 . TypeError: functools.partial object got multiple values for keyword argument 'marker'; ```. #### Versions. <details>. WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 8.3.2; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; cached_property 1.5.2; cffi 1.14.6; cloudpickle 2.0.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dask 2021.09.1; dateutil 2.8.2; debugpy 1.5.0; decorator 5.1.0; defusedxml 0.7.1; entrypoints 0.3; fsspec 2021.10.0; google NA; h5py 3.4.0; ipykernel 6.4.1; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.18.0; jinja2 3.0.2; joblib 1.1.0; kiwisolver 1.3.2; llvmlite 0.37.0; markupsafe 2.0.1; matplotlib 3.4.3; matplotlib_inline NA; mpl_toolkits NA; mudata 0.1.0; muon 0.1.1; natsort 7.1.1; nbinom_ufunc NA; numba 0.54.1; numexpr 2.7.3; numpy 1.20.3; packaging 21.0;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2122:2686,avoid,avoid,2686,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2122,1,['avoid'],['avoid']
Safety,"o,; it's me again, really thanks for your kindly reply before.; when I analyze my own data using `sc.tl.dpt` with default `n_branches`, it worked well, but when I set `n_branches` more than 0, it occurred an error:; ```no root cell found, no computation of pseudotime; --> To enable computation of pseudotime, pass the index or expression vector; of a root cell. Either add; adata.add['iroot'] = root_cell_index; or (robust to subsampling); adata.var['xroot'] = adata.X[root_cell_index, :]; where ""root_cell_index"" is the integer index of the root cell, or; adata.var['xroot'] = adata[root_cell_name, :].X; where ""root_cell_name"" is the name (a string) of the root cell.; perform Diffusion Pseudotime analysis; using ""X_pca"" for building graph; using stored data graph with n_neighbors = 30 and spectrum; [ 1. 0.9944264293 0.9934666753 0.9925051928 0.9899699688; 0.9893597364 0.9855745435 0.9840251803 0.981688261 0.9806631804]; detect 1 branching; do not consider groups with less than 2742 points for splitting; branching 1: split group 0; WARNING: detected group with only [] cells. ValueError Traceback (most recent call last); <ipython-input-3-b1749d943ac4> in <module>(); ----> 1 get_ipython().run_cell_magic('time', '', 'sc.tl.dpt(adata_corrected,n_jobs=48,n_pcs=30,allow_kendall_tau_shift=False,n_branchings=1)\nsc.logging.print_memory_usage()'). /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/IPython/core/interactiveshell.py in run_cell_magic(self, magic_name, line, cell); 2113 magic_arg_s = self.var_expand(line, stack_depth); 2114 with self.builtin_trap:; -> 2115 result = fn(magic_arg_s, cell); 2116 return result; 2117 . <decorator-gen-59> in time(self, line, cell, local_ns). /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k); 186 # but it's overkill for just that one bit of state.; 187 def magic_deco(arg):; --> 188 call = lambda f, *a, **k: f(*a, **k); 189 ; 190 if callable(arg):. /public",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/33:933,detect,detect,933,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/33,2,['detect'],"['detect', 'detected']"
Safety,"ocker pull dynverse/ti_paga_issue. # enter the container ; docker run --entrypoint bash -it dynverse/ti_paga_issue. # create an example dataset and save it at /input.h5; /code/example.sh /input.h5. # enter python; python; ```; Inside python; ```python; import dynclipy; task = dynclipy.main([""--dataset"", ""/input.h5"", ""--output"", ""/output.h5""]). import scanpy.api as sc; import anndata. counts = task[""counts""]. adata = anndata.AnnData(counts); sc.pp.recipe_zheng17(adata, n_top_genes=101); sc.tl.pca(adata, n_comps=50); sc.pp.neighbors(adata, n_neighbors=15); ```; Which generates the following warning:; ```; /usr/local/lib/python3.7/site-packages/umap/umap_.py:349: NumbaWarning: ; Compilation is falling back to object mode WITH looplifting enabled because Function ""fuzzy_simplicial_set"" failed type inference due to: Untyped global name 'nearest_neighbors': cannot determine Numba type of <class 'function'>. File ""usr/local/lib/python3.7/site-packages/umap/umap_.py"", line 467:; def fuzzy_simplicial_set(; <source elided>; if knn_indices is None or knn_dists is None:; knn_indices, knn_dists, _ = nearest_neighbors(; ^. @numba.jit(); /usr/local/lib/python3.7/site-packages/numba/compiler.py:725: NumbaWarning: Function ""fuzzy_simplicial_set"" was compiled in object mode without forceobj=True. File ""usr/local/lib/python3.7/site-packages/umap/umap_.py"", line 350:; @numba.jit(); def fuzzy_simplicial_set(; ^. self.func_ir.loc)); /usr/local/lib/python3.7/site-packages/numba/compiler.py:734: NumbaDeprecationWarning: ; Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File ""usr/local/lib/python3.7/site-packages/umap/umap_.py"", line 350:; @numba.jit(); def fuzzy_simplicial_set(; ^. warnings.warn(errors.NumbaDeprecationWarning(msg, self.func_ir.loc)); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/688:2154,detect,detected,2154,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/688,1,['detect'],['detected']
Safety,"ode-font-family\)"", sans-serif;; 	mso-font-charset:0;; 	text-align:center;}; .xl68; 	{text-align:center;}; ruby; 	{ruby-align:left;}; rt; 	{color:windowtext;; 	font-size:9.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:等线;; 	mso-generic-font-family:auto;; 	mso-font-charset:134;; 	mso-char-type:none;; 	display:none;}; -->; </style>; </head>. <body link=""#0563C1"" vlink=""#954F72"">. Windows PC1 |   | Windows PC2 |   | Windows PC3 |  ; -- | -- | -- | -- | -- | --; adjustText | 0.7.3 | adjustText | 0.7.3 | adjustText | 0.7.3; aiohttp | 3.8.1 | aiohttp | 3.8.1 | aiohttp | 3.8.1; aiosignal | 1.2.0 | aiosignal | 1.2.0 | aiosignal | 1.2.0; anndata | 0.7.8 | anndata | 0.7.8 | anndata | 0.7.8; anyio | 2.2.0 | anyio | 2.2.0 | anyio | 2.2.0; arboreto | 0.1.6 | arboreto | 0.1.6 | arboreto | 0.1.6; argon2-cffi | 20.1.0 | argon2-cffi | 20.1.0 | argon2-cffi | 20.1.0; async-generator | 1.1 | async-generator | 1.1 | async-generator | 1.1; async-timeout | 4.0.2 | async-timeout | 4.0.2 | async-timeout | 4.0.2; attrs | 21.4.0 | attrs | 21.2.0 | attrs | 21.4.0; Babel | 2.9.1 | Babel | 2.9.1 | Babel | 2.9.1; backcall | 0.2.0 | backcall | 0.2.0 | backcall | 0.2.0; bleach | 4.1.0 | bleach | 4.1.0 | bleach | 4.1.0; bokeh | 2.4.2 | bokeh | 2.4.2 | bokeh | 2.4.2; boltons | 21.0.0 | boltons | 21.0.0 | boltons | 21.0.0; brotlipy | 0.7.0 | brotlipy | 0.7.0 | brotlipy | 0.7.0; cellrank | 1.5.1 | cellrank | 1.5.1 | cellrank | 1.5.1; certifi | 2020.6.20 | certifi | 2020.6.20 | certifi | 2020.6.20; cffi | 1.15.0 | cffi | 1.15.0 | cffi | 1.15.0; charset-normalizer | 2.0.4 | charset-normalizer | 2.0.4 | charset-normalizer | 2.0.4; click | 8.0.3 | click | 8.0.3 | click | 8.0.3; cloudpickle | 2.0.0 | cloudpickle | 2.0.0 | cloudpickle | 2.0.0; colorama | 0.4.4 | colorama | 0.4.4 | colorama | 0.4.4; cryptography | 36.0.0 | cryptography | 36.0.0 | cryptography | 36.0.0; ctxcore | 0.1.1 | ctxcore | 0.1.1 | ctxcore | 0.1.1; cycler | 0.11.0 | cycler | 0.11.0 | cycler | 0.11.0;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2114:6295,timeout,timeout,6295,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2114,1,['timeout'],['timeout']
Safety,odestyle 2.10.0; pycosat 0.6.4; pycparser 2.21; pyct 0.5.0; pycurl 7.45.2; pydantic 1.10.8; PyDispatcher 2.0.5; pydocstyle 6.3.0; pyerfa 2.0.0; pyflakes 3.0.1; Pygments 2.15.1; PyJWT 2.4.0; pylint 2.16.2; pylint-venv 2.3.0; pyls-spyder 0.4.0; pyodbc 4.0.34; pyOpenSSL 23.2.0; pyparsing 3.0.9; PyQt5-sip 12.11.0; pyrsistent 0.18.0; PySocks 1.7.1; pytest 7.4.0; python-dateutil 2.8.2; python-dotenv 0.21.0; python-json-logger 2.0.7; python-lsp-black 1.2.1; python-lsp-jsonrpc 1.0.0; python-lsp-server 1.7.2; python-slugify 5.0.2; python-snappy 0.6.1; pytoolconfig 1.2.5; pytz 2023.3.post1; pyviz-comms 2.3.0; PyWavelets 1.4.1; pyxdg 0.27; PyYAML 6.0; pyzmq 23.2.0; QDarkStyle 3.0.2; qstylizer 0.2.2; QtAwesome 1.2.2; qtconsole 5.4.2; QtPy 2.2.0; queuelib 1.5.0; regex 2022.7.9; requests 2.31.0; requests-file 1.5.1; requests-toolbelt 1.0.0; responses 0.13.3; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rope 1.7.0; Rtree 1.0.1; ruamel.yaml 0.17.21; ruamel-yaml-conda 0.17.21; s3fs 2023.4.0; safetensors 0.3.2; scikit-image 0.20.0; scikit-learn 1.3.0; scikit-learn-intelex 20230426.111612; scipy 1.11.1; Scrapy 2.8.0; seaborn 0.12.2; SecretStorage 3.3.1; Send2Trash 1.8.0; service-identity 18.1.0; setuptools 68.0.0; sip 6.6.2; six 1.16.0; smart-open 5.2.1; sniffio 1.2.0; snowballstemmer 2.2.0; sortedcontainers 2.4.0; soupsieve 2.4; Sphinx 5.0.2; sphinxcontrib-applehelp 1.0.2; sphinxcontrib-devhelp 1.0.2; sphinxcontrib-htmlhelp 2.0.0; sphinxcontrib-jsmath 1.0.1; sphinxcontrib-qthelp 1.0.3; sphinxcontrib-serializinghtml 1.1.5; spyder 5.4.3; spyder-kernels 2.4.4; SQLAlchemy 1.4.39; stack-data 0.2.0; statsmodels 0.14.0; sympy 1.11.1; tables 3.8.0; tabulate 0.8.10; TBB 0.2; tblib 1.7.0; TELR 1.0; tenacity 8.2.2; terminado 0.17.1; text-unidecode 1.3; textdistance 4.2.1; texttable 1.7.0; threadpoolctl 2.2.0; three-merge 0.1.1; tifffile 2023.4.12; tinycss2 1.2.1; tldextract 3.2.0; tokenizers 0.13.2; toml 0.10.2; tomlkit 0.11.1; toolz 0.12.0; tornado 6.3.2; tqdm 4.65.0; traitlets 5.7.1; tran,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2706:6451,safe,safetensors,6451,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2706,1,['safe'],['safetensors']
Safety,on + 404; 	17 python 0x000000010a56b778 _PyEval_EvalFrameDefault + 45528; 	18 python 0x000000010a42d078 function_code_fastcall + 120; 	19 python 0x000000010a56dafe call_function + 174; 	20 python 0x000000010a56b684 _PyEval_EvalFrameDefault + 45284; 	21 python 0x000000010a55f2d2 _PyEval_EvalCodeWithName + 418; 	22 python 0x000000010a42c577 _PyFunction_FastCallDict + 231; 	23 python 0x000000010a4304a2 method_call + 130; 	24 python 0x000000010a42def2 PyObject_Call + 130; 	25 python 0x000000010a56b8cf _PyEval_EvalFrameDefault + 45871; 	26 python 0x000000010a55f2d2 _PyEval_EvalCodeWithName + 418; 	27 python 0x000000010a42c577 _PyFunction_FastCallDict + 231; 	28 python 0x000000010a56b8cf _PyEval_EvalFrameDefault + 45871; 	29 python 0x000000010a55f2d2 _PyEval_EvalCodeWithName + 418; 	30 python 0x000000010a42c577 _PyFunction_FastCallDict + 231; 	31 python 0x000000010a56b8cf _PyEval_EvalFrameDefault + 45871; 	32 python 0x000000010a55f2d2 _PyEval_EvalCodeWithName + 418; 	33 python 0x000000010a42c577 _PyFunction_FastCallDict + 231; 	34 python 0x000000010a4b00b1 slot_tp_init + 193; 	35 python 0x000000010a4ba091 type_call + 241; 	36 python 0x000000010a42d283 _PyObject_FastCallKeywords + 179; 	37 python 0x000000010a56dbe4 call_function + 404; 	38 python 0x000000010a56b778 _PyEval_EvalFrameDefault + 45528; 	39 python 0x000000010a55f2d2 _PyEval_EvalCodeWithName + 418; 	40 python 0x000000010a42d783 _PyFunction_FastCallKeywords + 195; 	41 python 0x000000010a56dafe call_function + 174; 	42 python 0x000000010a56b778 _PyEval_EvalFrameDefault + 45528; 	43 python 0x000000010a55f2d2 _PyEval_EvalCodeWithName + 418; 	44 python 0x000000010a5c3c40 PyRun_FileExFlags + 256; 	45 python 0x000000010a5c30b7 PyRun_SimpleFileExFlags + 391; 	46 python 0x000000010a5ef7ec pymain_main + 9564; 	47 python 0x000000010a3ffa9d main + 125; 	48 libdyld.dylib 0x00007fff72169ed9 start + 1; 	49 ??? 0x0000000000000002 0x0 + 2; ); libc++abi.dylib: terminating with uncaught exception of type NSException; Abort trap: 6,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/567:3384,Abort,Abort,3384,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/567,1,['Abort'],['Abort']
Safety,"onda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/plotting/_utils.py:314: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.; pl.show(); ```. ### Minimal code sample. ```python. import scanpy as sc; import scanpy.external as sce. adata = sc.datasets.pbmc3k(). sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3). sc.external.pp.scrublet(adata, expected_doublet_rate = 0.06, threshold = 0.25); adata = adata[adata.obs.predicted_doublet == False, :]. sc.pp.calculate_qc_metrics(adata, percent_top=None, log1p=False, inplace=True); sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts'],; jitter=0.4, multi_panel=True, save=""_before_QC.pdf""); ```. ### Error output. ```pytb; /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata); Detected doublet rate = 1.7%; Estimated detectable doublet fraction = 41.1%; Overall doublet rate:; 	Expected = 6.0%; 	Estimated = 4.1%; /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/preprocessing/_qc.py:135: ImplicitModificationWarning: Trying to modify attribute `.obs` of view, initializing view as actual.; adata.obs[obs_metrics.columns] = obs_metrics; WARNING: saving figure to file figures/violin_before_QC.pdf; /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/seaborn/axisgrid.py:118: UserWarning: The figure layout has changed to tight; self._figure.tight_layout(*args, **kwargs); /data/apps/anaconda3/envs/scRNAseq/lib/python3.8/site-packages/scanpy/plotting/_utils.py:314: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.; pl.show(); ```. ### Versions. <details>. ```; -----; anndata 0.9.2; scanpy 1.9.3; -----; PIL 9.2.0; annoy NA; anyio NA; arrow 1.2.3; asttokens NA; attr 23.1.0; attrs 23.1.0; babel 2.12.1; backcall 0.2.0; brotli NA; certifi 20",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2627:1428,detect,detectable,1428,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2627,1,['detect'],['detectable']
Safety,"ople ignore them when they happen. - [x] #2678; - Deprecated `is_categorical_dtype`; - Deprecated `pandas.value_counts`; - [x] #2789; - Deprecated the default of observed=False in [DataFrame.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby) and [Series.groupby()](https://pandas.pydata.org/docs/dev/reference/api/pandas.Series.groupby.html#pandas.Series.groupby); this will default to True in a future version ([GH 43999](https://github.com/pandas-dev/pandas/issues/43999)). Setting `observed=True` is probably unproblematic, we don’t want to handle categories that aren’t in the data, except maybe in plotting (but then we don’t use groupby); - Deprecated `some_series[0]`: “`Series.__getitem__` treating keys as positions is deprecated”; - The default value of 'ignore' for the `na_action` parameter in pandas.Categorical.map is deprecated and will be changed to 'None' in a future version. Please set na_action to the desired value to avoid seeing this warning; - `df = df.groupby('gene').agg(` (in SeriesGroupBy.agg?) The provided callable <function nansum at 0x7f50a03cb7e0> is currently using SeriesGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass 'sum' instead.; - same for nanmean/SeriesGroupBy.mean.; - scanpy/tests/test_highly_variable_genes.py:59: SettingWithCopyWarning (in `adata.obs.batch.loc[::2] = ""b""`) A value is trying to be set on a copy of a slice from a DataFrame. See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy. ### Versions. <details>. ```; -----; anndata 0.10.3; scanpy 1.10.0.dev178+ga073532a; -----; PIL 10.1.0; asciitree NA; cloudpickle 3.0.0; cycler 0.12.1; cython_runtime NA; dask 2023.12.1; dateutil 2.8.2; fasteners 0.19; h5py 3.10.0; igraph 0.10.8; iniconfig NA; jinja2 3.1.2; joblib 1.3.2; kiwisolver 1.4.5; legacy_api_wrap NA; leidenalg ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2788:1286,avoid,avoid,1286,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2788,1,['avoid'],['avoid']
Safety,outlier detection in scanpy?,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/718:8,detect,detection,8,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/718,1,['detect'],['detection']
Safety,"proj077/backup/public_data/scanpy_tutorials_data/PBMC3K/filtered_gene_bc_matrices/hg19/barcodes.tsv'; ----> 4 adata = sc.read(filename_data, cache=True).transpose(); 5 adata.var_names = np.genfromtxt(filename_genes, dtype=str)[:, 1]; 6 adata.smp_names = np.genfromtxt(filename_barcodes, dtype=str). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read(filename_or_filekey, sheet, ext, delimiter, first_column_names, backup_url, return_dict, cache); 73 if is_filename(filename_or_filekey):; 74 data = read_file(filename_or_filekey, sheet, ext, delimiter,; ---> 75 first_column_names, backup_url, cache); 76 if isinstance(data, dict):; 77 return data if return_dict else AnnData(data). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read_file(filename, sheet, ext, delimiter, first_column_names, backup_url, cache); 364 os.makedirs(os.path.dirname(filename_cache)); 365 # write for faster reading when calling the next time; --> 366 write_dict_to_file(filename_cache, ddata, sett.file_format_data); 367 return ddata; 368 . /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in write_dict_to_file(filename, d, ext); 771 d_write[key] = value; 772 # now open the file; --> 773 wait_until_file_unused(filename) # thread-safe writing; 774 if ext == 'h5':; 775 with h5py.File(filename, 'w') as f:. /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in wait_until_file_unused(filename); 935 ; 936 def wait_until_file_unused(filename):; --> 937 while (filename in get_used_files()):; 938 time.sleep(1); 939 . /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in get_used_files(); 919 def get_used_files():; 920 """"""Get files used by processes with name scanpy.""""""; --> 921 loop_over_scanpy_processes = (proc for proc in psutil.process_iter(); 922 if proc.name() == 'scanpy'); 923 filenames = []. AttributeError: module 'psutil' has no attribute 'process_iter'. `",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/35:1814,safe,safe,1814,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/35,1,['safe'],['safe']
Safety,"python3.8/site-packages/anndata/_io/h5ad.py in write_attribute_h5ad(f, key, value, *args, **kwargs); 128 if key in f:; 129 del f[key]; --> 130 _write_method(type(value))(f, key, value, *args, **kwargs); 131 ; 132 . ~/anaconda3/lib/python3.8/site-packages/anndata/_io/utils.py in func_wrapper(elem, key, val, *args, **kwargs); 210 except Exception as e:; 211 parent = _get_parent(elem); --> 212 raise type(e)(; 213 f""{e}\n\n""; 214 f""Above error raised while writing key {key!r} of {type(elem)}"". TypeError: Can't implicitly convert non-string objects to strings. Above error raised while writing key 'Batch' of <class 'h5py._hl.group.Group'> from /. Above error raised while writing key 'obs' of <class 'h5py._hl.files.File'> from /. ```. #### Versions. <details>. WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.6; scanpy 1.7.2; sinfo 0.3.4; -----; PIL 8.2.0; anyio NA; appnope 0.1.2; attr 20.3.0; babel 2.9.0; backcall 0.2.0; bottleneck 1.3.2; brotli NA; cairo 1.20.0; certifi 2020.12.05; cffi 1.14.5; chardet 4.0.0; cloudpickle 1.6.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2021.04.0; dateutil 2.8.1; decorator 5.0.6; fsspec 2021.05.0; get_version 2.2; google NA; h5py 3.2.1; idna 2.10; igraph 0.7.1; ipykernel 5.3.4; ipython_genutils 0.2.0; jedi 0.17.2; jinja2 2.11.3; joblib 1.0.1; json5 NA; jsonschema 3.2.0; jupyter_server 1.4.1; jupyterlab_server 2.4.0; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.7.0; llvmlite 0.36.0; loompy 3.0.6",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1866:6155,avoid,avoid,6155,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1866,1,['avoid'],['avoid']
Safety,"rest); 1087 ; 1088 def rptree_leaf_array_parallel(rp_forest):; -> 1089 result = joblib.Parallel(n_jobs=-1, require=""sharedmem"")(; 1090 joblib.delayed(get_leaves_from_tree)(rp_tree) for rp_tree in rp_forest; 1091 ). /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/parallel.py in __call__(self, iterable); 1054 ; 1055 with self._backend.retrieval_context():; -> 1056 self.retrieve(); 1057 # Make sure that we get a last message telling us we are done; 1058 elapsed_time = time.time() - self._start_time. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/parallel.py in retrieve(self); 933 try:; 934 if getattr(self._backend, 'supports_timeout', False):; --> 935 self._output.extend(job.get(timeout=self.timeout)); 936 else:; 937 self._output.extend(job.get()). /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/multiprocessing/pool.py in get(self, timeout); 769 return self._value; 770 else:; --> 771 raise self._value; 772 ; 773 def _set(self, i, obj):. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/multiprocessing/pool.py in worker(inqueue, outqueue, initializer, initargs, maxtasks, wrap_exception); 123 job, i, func, args, kwds = task; 124 try:; --> 125 result = (True, func(*args, **kwds)); 126 except Exception as e:; 127 if wrap_exception and func is not _helper_reraises_exception:. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/_parallel_backends.py in __call__(self, *args, **kwargs); 593 def __call__(self, *args, **kwargs):; 594 try:; --> 595 return self.func(*args, **kwargs); 596 except KeyboardInterrupt as e:; 597 # We capture the KeyboardInterrupt and reraise it as. /omics/groups/OE0540/internal/B260/users/olga/.conda/envs/10x_analysis/lib/python3.8/site-packages/joblib/parallel.py in __call__(self); 260 # change the default number ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2472:4424,timeout,timeout,4424,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2472,1,['timeout'],['timeout']
Safety,"rt multiprocessing; 778 pool = multiprocessing.Pool(n_jobs); --> 779 res = pool.map_async(_regress_out_chunk, tasks).get(9999999); 780 pool.close(); 781 . ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in get(self, timeout); 636 ; 637 def get(self, timeout=None):; --> 638 self.wait(timeout); 639 if not self.ready():; 640 raise TimeoutError. ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in wait(self, timeout); 633 ; 634 def wait(self, timeout=None):; --> 635 self._event.wait(timeout); 636 ; 637 def get(self, timeout=None):. ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 549 signaled = self._flag; 550 if not signaled:; --> 551 signaled = self._cond.wait(timeout); 552 return signaled; 553 . ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 297 else:; 298 if timeout > 0:; --> 299 gotit = waiter.acquire(True, timeout); 300 else:; 301 gotit = waiter.acquire(False). OverflowError: timeout value is too large. update:-----------------------------------------------------------------------------------------------------. when i used the n_jobs= 1 as a paramters ,seems like i lack a module named patsy; oduleNotFoundError Traceback (most recent call last); <ipython-input-22-6ea7e0dee435> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito'],n_jobs = 1). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 781 ; 782 else:; --> 783 res = list(map(_regress_out_chunk, tasks)); 784 ; 785 # res is a list of vectors (each corresponding to a regressed gene column). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in _regress_out_chunk(data); 798 ; 799 responses_chunk_list = []; --> 800 import statsmodels.api as sm; 801 from statsmodels.tools.sm_exceptions import PerfectSeparationError; 802 . ~\AppData\Local\conda\conda\envs\scanpy\lib\site-pac",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:1484,timeout,timeout,1484,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,1,['timeout'],['timeout']
Safety,"s'], 100*maxgenes)+1; else:; maxgenes_new = maxgenes; if maxUMIs <= 1:; maxUMIs_new = np.percentile(adata_tmp.obs['n_counts'], 100*maxUMIs)+1; else:; maxUMIs_new = maxUMIs; sc.pp.filter_cells(adata_tmp, max_genes=maxgenes_new); sc.pp.filter_cells(adata_tmp, max_counts=maxUMIs_new); sc.pp.filter_genes(adata_tmp, min_cells=mincells); adata_tmp.obs['sample'] = ugname[i]; adata = sc.concat([adata,adata_tmp],join='outer'); ```. ```pytb; filtered out 5508 genes that are detected in less than 5 cells; filtered out 5905 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6390 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5593 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6412 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6662 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_u",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:1951,detect,detected,1951,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,1,['detect'],['detected']
Safety,"s/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.16; Detected doublet rate = 6.4%; Estimated detectable doublet fraction = 61.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.4%. ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_simple.py:251: ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; adata.var['n_cells'] = number; ~/.local/lib/python3.9/site-packages/scanpy/preprocessing/_normalization.py:170: UserWarning: Received a view of an AnnData. Making a copy.; view_to_actual(adata). Automatically set threshold at doublet score = 0.17; Detected doublet rate = 5.8%; Estimated detectable doublet fraction = 55.7%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 10.5%. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /tmp/ipykernel_2434661/1304834185.py in <module>; ----> 1 sc.external.pp.scrublet(test_adata, batch_key = ""label""). ~/.local/lib/python3.9/site-packages/scanpy/external/pp/_scrublet.py in scrublet(adata, adata_sim, batch_key, sim_doublet_ratio, expected_doublet_rate, stdev_doublet_rate, synthetic_doublet_umi_subsampling, knn_dist_metric, normalize_variance, log_transform, mean_center, n_prin_comps, use_approx_neighbors, get_doublet_neighbor_parents, n_neighbors, threshold, verbose, copy, random_state); 250 # Now reset the obs to get the scrublet scores; 251 ; --> 252 adata.obs = scrubbed_obs.loc[adata.obs_names.values]; 253 ; 254 # Save the .uns from each batch separately. <path>/lib/python3.9/site-packages/pandas/core/indexing.py in __getitem__(self, key); 929 ; 930 maybe_callabl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2377:2187,detect,detectable,2187,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2377,1,['detect'],['detectable']
Safety,sc.tl.dpt with error: detected group with only [] cells,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/33:22,detect,detected,22,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/33,1,['detect'],['detected']
Safety,"scent(neighbors['distances']); 352 ; 353 def _init_pca(self, adata):. ~/.local/lib/python3.7/site-packages/scanpy/tools/_ingest.py in _init_pynndescent(self, distances); 284 ; 285 first_col = np.arange(distances.shape[0])[:, None]; --> 286 init_indices = np.hstack((first_col, np.stack(distances.tolil().rows))); 287 ; 288 self._nnd_idx = NNDescent(. <__array_function__ internals> in stack(*args, **kwargs). ~/.local/lib/python3.7/site-packages/numpy/core/shape_base.py in stack(arrays, axis, out); 425 shapes = {arr.shape for arr in arrays}; 426 if len(shapes) != 1:; --> 427 raise ValueError('all input arrays must have the same shape'); 428 ; 429 result_ndim = arrays[0].ndim + 1. ValueError: all input arrays must have the same shape; ```. ### Versions. ```; WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.8.0; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 7.1.2; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; decorator 5.1.1; google NA; h5py 3.7.0; ipykernel 5.3.0; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.0; joblib 1.1.0; kiwisolver 1.2.0; llvmlite 0.38.1; matplotlib 3.3.0; mpl_toolkits NA; natsort 8.1.0; nbinom_ufunc NA; netifaces 0.11.0; numba 0.55.2; numexpr 2.8.3; numpy 1.20.0; packaging 21.3; pandas 1.1.3; parso 0.7.0; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.5; psutil 5.9.0; ptyprocess 0.6.0; pygments 2.6.1; pyparsing 3.0.8; pytz 2022.1; ruamel N",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2635:3489,avoid,avoid,3489,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2635,1,['avoid'],['avoid']
Safety,"sts on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. As far as I can tell, `sc.pl.violin` always prepends the string ""violin"" to all save filed, regardless of `sc.settings.figdir`. This complicates programatically setting the filename for outputs. I've also confirmed this behaviour for `sc.pl.scatter`, and suspect it holds true for other `sc.pl` methods. As an example: I keep all results from my analysis in a `results/` directory, with each step having its own subdirectory. Currently, this doesn't seem possible. If I set `sc.settings.figdir = ./results`, then try to save to, say ""qcmetrics/total_counts.png"", the code fails as ""violinqcmetrics/total_counts.png"" does not exist. A partial work around is to set `sc.settings.figdir` every time I want to save in a different directory, but this feels quite clunky to me. And it will still result in all my files being prepended with ""violin"" (or ""scatter"", etc.), which I'd like to avoid. Is there any way to disable this prefix on save behaviour?. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.settings.figdir = ""./""; sc.pl.violin(adata, [""total_counts""], save=""results/test_plot.png""); ```. ```pytb; FileNotFoundError: [Errno 2] No such file or directory: 'violinresults/test_plot.png'; ```. #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.6.0; sinfo 0.3.1; -----; IPython 7.19.0; PIL 8.0.1; anndata 0.7.5; backcall 0.2.0; cffi 1.14.4; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; flufl NA; get_version 2.1; h5py 3.1.0; igraph 0.8.3; ipython_genutils 0.2.0; jedi 0.17.2; joblib 0.17.0; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.3; llvmlite 0.35.0rc3; matplotlib 3.3.3; mpl_toolkits NA; natsort 7.1.0; numba 0.51.2; numexpr 2.7.1; numpy 1.19.4; packaging 20.4; pandas 1.1.4; parso 0.7.1; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.8; ptyprocess 0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1508:1112,avoid,avoid,1112,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1508,1,['avoid'],['avoid']
Safety,"t vector (adata.var); 'dispersions_norm', float vector (adata.var); normalizing counts per cell; finished (0:00:00); normalizing counts per cell; finished (0:00:00); Embedding transcriptomes using PCA...; ```. I was running this analysis on my Intel-core iMac. Surprisingly, when I ran the same line of code (under a similar virtual environment) on my M2-chip laptop, it finished in a flash of time.; ```Running Scrublet; filtered out 1419 genes that are detected in less than 3 cells; normalizing counts per cell; finished (0:00:00); extracting highly variable genes; finished (0:00:00); --> added; 'highly_variable', boolean vector (adata.var); 'means', float vector (adata.var); 'dispersions', float vector (adata.var); 'dispersions_norm', float vector (adata.var); normalizing counts per cell; finished (0:00:00); normalizing counts per cell; finished (0:00:00); Embedding transcriptomes using PCA...; using data matrix X directly; Automatically set threshold at doublet score = 0.42; Detected doublet rate = 0.3%; Estimated detectable doublet fraction = 5.2%; Overall doublet rate:; 	Expected = 5.0%; 	Estimated = 6.6%; Scrublet finished (0:00:14); ```. I'm still not sure what actually caused the problem, but it seems that some dependency inconsistency occurred when performing PCA within the pipeline. Perhaps some package required for the `sc.pp.scrublet()` pipeline needs to be updated to a newer version?. Here are the details of the packages in the virtual environment when I ran the code on my desktop (failed case):; ```; channels:; - pytorch; - plotly; - conda-forge; - bioconda; - defaults; dependencies:; - anndata=0.10.7; - anyio=4.4.0; - appnope=0.1.4; - argcomplete=3.3.0; - argh=0.31.2; - argon2-cffi=23.1.0; - argon2-cffi-bindings=21.2.0; - arpack=3.8.0; - array-api-compat=1.7.1; - arrow=1.3.0; - asttokens=2.4.1; - async-lru=2.0.4; - attrs=23.2.0; - babel=2.14.0; - beautifulsoup4=4.12.3; - biopython=1.83; - blas=2.120; - blas-devel=3.9.0; - bleach=6.1.0; - blosc=1.21.5; - b",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:2021,Detect,Detected,2021,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['Detect'],['Detected']
Safety,"ts.visium_sge(sample_id=""V1_Human_Lymph_Node""); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/site-packages/scanpy/datasets/_datasets.py"", line 367, in visium_sge; _download_visium_dataset(sample_id); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/site-packages/scanpy/datasets/_datasets.py"", line 325, in _download_visium_dataset; _utils.check_presence_download(; File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/site-packages/scanpy/_utils.py"", line 604, in check_presence_download; _download(backup_url, filename); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/site-packages/scanpy/readwrite.py"", line 905, in _download; urlretrieve(url, str(path), reporthook=update_to); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/data/lu/anaconda3/envs/spatial_t/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 403: Forbidden. Process finished with exit code 1. #### Versions. <details>; scanpy==1.5.0 anndata==0.7.1 umap==0.4.2 numpy==1.18.1 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.1 statsmodels==0.11.0. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1714:1897,timeout,timeout,1897,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1714,1,['timeout'],['timeout']
Safety,"use annaconda to manage environment; python 3.6.6. OverflowError Traceback (most recent call last); <ipython-input-21-c0d016811ded> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito']). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 777 import multiprocessing; 778 pool = multiprocessing.Pool(n_jobs); --> 779 res = pool.map_async(_regress_out_chunk, tasks).get(9999999); 780 pool.close(); 781 . ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in get(self, timeout); 636 ; 637 def get(self, timeout=None):; --> 638 self.wait(timeout); 639 if not self.ready():; 640 raise TimeoutError. ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in wait(self, timeout); 633 ; 634 def wait(self, timeout=None):; --> 635 self._event.wait(timeout); 636 ; 637 def get(self, timeout=None):. ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 549 signaled = self._flag; 550 if not signaled:; --> 551 signaled = self._cond.wait(timeout); 552 return signaled; 553 . ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 297 else:; 298 if timeout > 0:; --> 299 gotit = waiter.acquire(True, timeout); 300 else:; 301 gotit = waiter.acquire(False). OverflowError: timeout value is too large. update:-----------------------------------------------------------------------------------------------------. when i used the n_jobs= 1 as a paramters ,seems like i lack a module named patsy; oduleNotFoundError Traceback (most recent call last); <ipython-input-22-6ea7e0dee435> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito'],n_jobs = 1). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 781 ; 782 else:; --> 783 res = list(map(_regress_out_chunk, tasks)); 784 ; 785 # res is a list of vectors (each corresponding t",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:1132,timeout,timeout,1132,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,1,['timeout'],['timeout']
Safety,"utils.py"", line 107:; def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):; <source elided>; vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32); for index, ve in zip(mnn2, vect):; ^. @jit(float32[:, :](float32[:, :], float32[:, :], int32[:], int32[:], float32[:, :], float32)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""compute_correction"" was compiled in object mode without forceobj=True. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:; def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):; <source elided>; vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32); for index, ve in zip(mnn2, vect):; ^. state.func_ir.loc)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: ; Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 107:; def compute_correction(data1, data2, mnn1, mnn2, data2_or_raw2, sigma):; <source elided>; vect_reduced = np.zeros((data2.shape[0], vect.shape[1]), dtype=np.float32); for index, ve in zip(mnn2, vect):; ^. state.func_ir.loc)); Traceback (most recent call last):. File ""<ipython-input-2-111b3b404a99>"", line 7, in <module>; batch_categories=['1','2','3','4','5','6','7','8','9','10','11','12']). File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py"", line 154, in mnn_correct; **kwargs,. File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/mnn.py"", line 126, in mnn_correct; svd_mode=svd_mode, d",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1167:26923,detect,detected,26923,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1167,1,['detect'],['detected']
Safety,"we can copy&paste without having any data). ```python; df = pd.read_csv(expfile[i], sep=""\t"" ,index_col=0); geneinfo = pd.DataFrame(df.index,index=df.index,columns=['gene_index']); cellinfo = pd.DataFrame(df.columns,index=df.columns,columns=['cell_index']); adata_tmp = sc.AnnData(df.T, obs=cellinfo, var = geneinfo); sc.pp.filter_cells(adata_tmp, min_genes=mingenes); sc.pp.filter_cells(adata_tmp, min_counts=minUMIs). if maxgenes <= 1:; maxgenes_new = np.percentile(adata_tmp.obs['n_genes'], 100*maxgenes)+1; else:; maxgenes_new = maxgenes; if maxUMIs <= 1:; maxUMIs_new = np.percentile(adata_tmp.obs['n_counts'], 100*maxUMIs)+1; else:; maxUMIs_new = maxUMIs; sc.pp.filter_cells(adata_tmp, max_genes=maxgenes_new); sc.pp.filter_cells(adata_tmp, max_counts=maxUMIs_new); sc.pp.filter_genes(adata_tmp, min_cells=mincells); adata_tmp.obs['sample'] = ugname[i]; adata = sc.concat([adata,adata_tmp],join='outer'); ```. ```pytb; filtered out 5508 genes that are detected in less than 5 cells; filtered out 5905 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6390 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5974 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 7136 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 5971 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6234 genes that are detected in less than 5 cells; Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; filtered out 6442 genes that are detected in less than 5 cells; Observation names are not unique. To make ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2080:1434,detect,detected,1434,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2080,2,['detect'],['detected']
Safety,"ype pyobject; [1] During: typing of argument at /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py (94). File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 94:; def find_mutual_nn(data1, data2, k1, k2, n_jobs):; <source elided>; mutual_2 = []; for index_2 in range(data2.shape[0]):; ^. @jit((float32[:, :], float32[:, :], int8, int8, int8)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:178: NumbaWarning: Function ""find_mutual_nn"" was compiled in object mode without forceobj=True. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 94:; def find_mutual_nn(data1, data2, k1, k2, n_jobs):; <source elided>; mutual_2 = []; for index_2 in range(data2.shape[0]):; ^. state.func_ir.loc)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/object_mode_passes.py:188: NumbaDeprecationWarning: ; Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/utils.py"", line 94:; def find_mutual_nn(data1, data2, k1, k2, n_jobs):; <source elided>; mutual_2 = []; for index_2 in range(data2.shape[0]):; ^. state.func_ir.loc)); Computing correction vectors...; /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/ir_utils.py:2041: NumbaPendingDeprecationWarning: ; Encountered the use of a type that is scheduled for deprecation: type 'reflected list' found for argument 'mnn2' of function 'compute_correction'. For more information visit http://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-reflection-for-list-and-set-types. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/mnnpy/util",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1167:21996,detect,detected,21996,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1167,1,['detect'],['detected']
Safety,"ython-input-21-c0d016811ded> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito']). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 777 import multiprocessing; 778 pool = multiprocessing.Pool(n_jobs); --> 779 res = pool.map_async(_regress_out_chunk, tasks).get(9999999); 780 pool.close(); 781 . ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in get(self, timeout); 636 ; 637 def get(self, timeout=None):; --> 638 self.wait(timeout); 639 if not self.ready():; 640 raise TimeoutError. ~\AppData\Local\conda\conda\envs\scanpy\lib\multiprocessing\pool.py in wait(self, timeout); 633 ; 634 def wait(self, timeout=None):; --> 635 self._event.wait(timeout); 636 ; 637 def get(self, timeout=None):. ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 549 signaled = self._flag; 550 if not signaled:; --> 551 signaled = self._cond.wait(timeout); 552 return signaled; 553 . ~\AppData\Local\conda\conda\envs\scanpy\lib\threading.py in wait(self, timeout); 297 else:; 298 if timeout > 0:; --> 299 gotit = waiter.acquire(True, timeout); 300 else:; 301 gotit = waiter.acquire(False). OverflowError: timeout value is too large. update:-----------------------------------------------------------------------------------------------------. when i used the n_jobs= 1 as a paramters ,seems like i lack a module named patsy; oduleNotFoundError Traceback (most recent call last); <ipython-input-22-6ea7e0dee435> in <module>(); ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito'],n_jobs = 1). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 781 ; 782 else:; --> 783 res = list(map(_regress_out_chunk, tasks)); 784 ; 785 # res is a list of vectors (each corresponding to a regressed gene column). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocess",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:1226,timeout,timeout,1226,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,1,['timeout'],['timeout']
Security," 0.18.1; jinja2 3.1.2; joblib 1.2.0; kiwisolver 1.4.4; lazy_loader NA; leidenalg 0.10.1; llvmlite 0.40.0; markupsafe 2.1.1; matplotlib 3.5.3; matplotlib_inline 0.1.6; matplotlib_scalebar 0.8.1; matplotlib_venn 0.11.9; mkl 2.4.0; mpl_toolkits NA; msgpack 1.0.5; multipledispatch 0.6.0; multiscale_spatial_image 0.11.2; mygene 3.2.2; natsort 7.1.1; nbinom_ufunc NA; neighborhood_enrichment NA; networkx 3.1; numba 0.57.0; numcodecs 0.11.0; numpy 1.24.3; ome_zarr NA; openpyxl 3.1.2; packaging 23.0; pandas 2.0.3; param 1.13.0; parso 0.8.3; patsy 0.5.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; platformdirs 2.5.2; pooch v1.4.0; prompt_toolkit 3.0.36; psutil 5.9.0; ptyprocess 0.7.0; pure_eval 0.2.2; pyarrow 12.0.1; pycparser 2.21; pyct 0.5.0; pydev_ipython NA; pydevconsole NA; pydevd 2.9.5; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygeos 0.14; pygments 2.15.1; pynndescent 0.5.10; pyparsing 3.0.9; pyproj 3.6.0; pytz 2022.7; pywt 1.4.1; requests 2.31.0; rich NA; rtree 1.0.1; schist v0.7.16; scipy 1.8.0; seaborn 0.12.2; session_info 1.0.0; setuptools 68.0.0; shapely 2.0.1; sip NA; six 1.16.0; skimage 0.20.0; sklearn 1.2.2; socks 1.7.1; spatial_image 0.3.0; spatialdata 0.0.12; sphinxcontrib NA; spyder 5.4.3; spyder_kernels 2.4.3; spydercustomize NA; squidpy 1.3.0; stack_data 0.2.0; statsmodels 0.14.0; tblib 2.0.0; texttable 1.6.7; threadpoolctl 2.2.0; tifffile 2021.7.2; tlz 0.12.0; toolz 0.12.0; tornado 6.3.2; tqdm 4.65.0; traitlets 5.7.1; typing_extensions NA; umap 0.5.3; urllib3 1.26.16; validators 0.20.0; wcwidth 0.2.5; wurlitzer 3.0.2; xarray 2022.12.0; xarray_dataclasses 1.6.0; xarray_schema 0.0.3; xrspatial 0.3.7; yaml 6.0; zarr 2.16.0; zipp NA; zmq 25.1.0; zoneinfo NA; zstandard 0.19.0; -----; IPython 8.12.0; jupyter_client 8.1.0; jupyter_core 5.3.0; -----; Python 3.9.15 | packaged by conda-forge | (main, Nov 22 2022, 08:50:29) [Clang 14.0.6 ]; macOS-11.6-x86_64-i386-64bit; -----; Session information updated at 2023-08-02 20:20. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2586:7361,validat,validators,7361,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2586,1,['validat'],['validators']
Security," 2 print (adata1.var.ix['Wfdc18']). /usr/local/lib/python3.6/site-packages/pandas/core/indexing.py in __getitem__(self, key); 125 ; 126 key = com._apply_if_callable(key, self.obj); --> 127 return self._getitem_axis(key, axis=axis); 128 ; 129 def _get_label(self, label, axis=None):. /usr/local/lib/python3.6/site-packages/pandas/core/indexing.py in _getitem_axis(self, key, axis); 1106 return self._get_loc(key, axis=axis); 1107 ; -> 1108 return self._get_label(key, axis=axis); 1109 ; 1110 def _getitem_iterable(self, key, axis=None):. /usr/local/lib/python3.6/site-packages/pandas/core/indexing.py in _get_label(self, label, axis); 143 raise IndexingError('no slices here, handle elsewhere'); 144 ; --> 145 return self.obj._xs(label, axis=axis); 146 ; 147 def _get_loc(self, key, axis=None):. /usr/local/lib/python3.6/site-packages/pandas/core/generic.py in xs(self, key, axis, level, drop_level); 2342 drop_level=drop_level); 2343 else:; -> 2344 loc = self.index.get_loc(key); 2345 ; 2346 if isinstance(loc, np.ndarray):. /usr/local/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2525 return self._engine.get_loc(key); 2526 except KeyError:; -> 2527 return self._engine.get_loc(self._maybe_cast_indexer(key)); 2528 ; 2529 indexer = self.get_indexer([key], method=method, tolerance=tolerance). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'Wfdc18'. **Moreover, it still plots it?:** . ax1 = sc.pl.pca_scatter(adata1, components='1,2', color=['Wfdc18'], right_margin=0.2). ![pca_adata1 001](https://user-images.githubusercontent.com/6422882/37835563-d56b07e6-2e86-11e8-8326-c730011de4d4.jpeg). **Any input I would be most grateful. Many thanks, ; Olivia**",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/109:2726,hash,hashtable,2726,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/109,2,['hash'],['hashtable']
Security," 678 colors = ['dpt_pseudotime']; --> 679 if len(np.unique(adata.obs['dpt_groups'].values)) > 1: colors += ['dpt_groups']; 680 if color is not None: colors = color; 681 dpt_scatter(. /usr/local/lib/python3.6/site-packages/pandas/core/frame.py in __getitem__(self, key); 2137 return self._getitem_multilevel(key); 2138 else:; -> 2139 return self._getitem_column(key); 2140 ; 2141 def _getitem_column(self, key):. /usr/local/lib/python3.6/site-packages/pandas/core/frame.py in _getitem_column(self, key); 2144 # get column; 2145 if self.columns.is_unique:; -> 2146 return self._get_item_cache(key); 2147 ; 2148 # duplicate columns & possible reduce dimensionality. /usr/local/lib/python3.6/site-packages/pandas/core/generic.py in _get_item_cache(self, item); 1840 res = cache.get(item); 1841 if res is None:; -> 1842 values = self._data.get(item); 1843 res = self._box_item_values(item, values); 1844 cache[item] = res. /usr/local/lib/python3.6/site-packages/pandas/core/internals.py in get(self, item, fastpath); 3841 ; 3842 if not isna(item):; -> 3843 loc = self.items.get_loc(item); 3844 else:; 3845 indexer = np.arange(len(self.items))[isna(self.items)]. /usr/local/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2525 return self._engine.get_loc(key); 2526 except KeyError:; -> 2527 return self._engine.get_loc(self._maybe_cast_indexer(key)); 2528 ; 2529 indexer = self.get_indexer([key], method=method, tolerance=tolerance). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'dpt_groups'; ```. ---; scanpy==1.0.4+11.gc241098 anndata==0.5.10 numpy==1.14.2 scipy==1.0.1 pandas==0.22.0 scikit-learn==0.19.1 statsmodels==0.8.0 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/129:3441,hash,hashtable,3441,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/129,2,['hash'],['hashtable']
Security," Whenever I try to plot gene expression I get the following KeyError, regardless of the gene/plotting function. I have confirmed that all genes I have tried do exist in adata.var_names. Id like to highlight that my adata object was created from h5ad converted from seurat. How can I check the keys? . Thank you!. Lucy. ---. ```python; sc.pl.draw_graph(myeloid, color=['SPP1']); ```. ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /software/anaconda3/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2645 try:; -> 2646 return self._engine.get_loc(key); 2647 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'SPP1'. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-94-440b32bde3cc> in <module>(); ----> 1 sc.pl.draw_graph(myeloid, color=['SPP1']). /software/anaconda3/lib/python3.6/site-packages/scanpy/plotting/_tools/scatterplots.py in draw_graph(adata, layout, **kwargs); 701 ); 702 ; --> 703 return embedding(adata, basis, **kwargs); 704 ; 705 . /software/anaconda3/lib/python3.6/site-packages/scanpy/plotting/_tools/scatterplots.py in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, layer, projection, img_key, crop_coord, alpha_img, bw, library_id, color_map, palette, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, vmax, vmin, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwar",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2018:1003,hash,hashtable,1003,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2018,1,['hash'],['hashtable']
Security," am using `sc.pp.calculate_qc_metrics(ad, inplace=True)` to get QC metrics, its reported that a error occoured. ; Error message as below. ; ﻿﻿; It might just be because there's something wrong with my data. Does anyone else have a similar situation?. ### Minimal code sample. ```python; import scanpy as sc; import numpy as np; import anndata. # ad = anndata.read_h5ad('mypath'). def scrublet_by_sample(ad, key='samplename'):; """""" do doublet prediction by batch/sample """"""; """""" ad = anndata object """"""; """""" key = sample or batch in ad.obs""""""; sc.pp.calculate_qc_metrics(ad, inplace=True); ads = []; samplenames = ad.obs[key].unique(); for i in samplenames:; adx = ad[ad.obs[key].isin([i])].copy(); print(i,adx.n_obs); sc.external.pp.scrublet(adx,n_prin_comps=min(30,adx.shape[0]-1)); ads.append(adx); adata = ads[0].concatenate(tuple(ads[1:]), join='outer'); return adata. if np.array_equal(arr, np.round(arr)):; ad = scrublet_by_sample(ad, 'sample_ID'); ad.write(qc_h5); qc_md5 = generate_file_md5(qc_h5); print(""QC MD5 Hash:"", qc_md5); ```. ### Error output. ```pytb; Traceback (most recent call last):; File ""<stdin>"", line 2, in <module>; File ""<stdin>"", line 5, in scrublet_by_sample; File ""/home/sunhao/.conda/envs/h5ad/lib/python3.9/site-packages/scanpy/preprocessing/_qc.py"", line 306, in calculate_qc_metrics; obs_metrics = describe_obs(; File ""/home/sunhao/.conda/envs/h5ad/lib/python3.9/site-packages/scanpy/preprocessing/_qc.py"", line 116, in describe_obs; proportions = top_segment_proportions(X, percent_top); File ""/home/sunhao/.conda/envs/h5ad/lib/python3.9/site-packages/scanpy/preprocessing/_qc.py"", line 401, in top_segment_proportions; return top_segment_proportions_sparse_csr(mtx.data, mtx.indptr, np.array(ns)); File ""/home/sunhao/.conda/envs/h5ad/lib/python3.9/site-packages/numba/core/dispatcher.py"", line 468, in _compile_for_args; error_rewrite(e, 'typing'); File ""/home/sunhao/.conda/envs/h5ad/lib/python3.9/site-packages/numba/core/dispatcher.py"", line 409, in error_rewr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2758:1319,Hash,Hash,1319,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2758,1,['Hash'],['Hash']
Security," from ._leiden import leiden; 16 from ._louvain import louvain; ---> 17 from ._sim import sim; 18 from ._score_genes import score_genes, score_genes_cell_cycle; 19 from ._dendrogram import dendrogram. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/tools/_sim.py in <module>; 21 from anndata import AnnData; 22 ; ---> 23 from .. import _utils, readwrite, logging as logg; 24 from .._settings import settings; 25 from .._compat import Literal. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/readwrite.py in <module>; 8 import pandas as pd; 9 from matplotlib.image import imread; ---> 10 import tables; 11 import anndata; 12 from anndata import (. ModuleNotFoundError: No module named 'tables'. ```. The messages when updating anndata:; ```; The following packages will be REMOVED:. pytables-3.6.1-py38h9f153d1_1. The following packages will be UPDATED:. anndata 0.7.6-py38h578d9bd_0 --> 0.8.0-py38h578d9bd_0; ca-certificates pkgs/main::ca-certificates-2022.4.26-~ --> conda-forge::ca-certificates-2022.5.18.1-ha878542_0; h5py 2.10.0-nompi_py38h513d04c_102 --> 3.6.0-nompi_py38hfbb2109_100; hdf5 1.10.5-nompi_h5b725eb_1114 --> 1.12.1-nompi_h2750804_100. The following packages will be SUPERSEDED by a higher-priority channel:. certifi pkgs/main::certifi-2022.5.18.1-py38h0~ --> conda-forge::certifi-2022.5.18.1-py38h578d9bd_0; openssl pkgs/main::openssl-1.1.1o-h7f8727e_0 --> conda-forge::openssl-1.1.1o-h166bdaf_0. Proceed ([y]/n)? y. Downloading and Extracting Packages; keyutils-1.6.1 | 115 KB | ############################################################################# | 100% ; h5py-3.6.0 | 1.4 MB | ############################################################################# | 100% ; cached_property-1.5. | 11 KB | ############################################################################# | 100% ; c-ares-1.18.1 | 113 KB | ############################################################################# | 100% ; anndata-0.8.0 | 151 KB | ################################",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2265:1681,certificate,certificates-,1681,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2265,1,['certificate'],['certificates-']
Security," len(c):; 1285 df[key] = c; -> 1286 df[key].cat.categories = df[key].cat.categories.astype('U'); 1287 logg.info(; 1288 '... storing \'{}\' as categorical'. ~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in __getattr__(self, name); 3608 if (name in self._internal_names_set or name in self._metadata or; 3609 name in self._accessors):; -> 3610 return object.__getattribute__(self, name); 3611 else:; 3612 if name in self._info_axis:. ~/anaconda3/lib/python3.6/site-packages/pandas/core/accessor.py in __get__(self, instance, owner); 52 # this ensures that Series.str.<method> is well defined; 53 return self.accessor_cls; ---> 54 return self.construct_accessor(instance); 55 ; 56 def __set__(self, instance, value):. ~/anaconda3/lib/python3.6/site-packages/pandas/core/categorical.py in _make_accessor(cls, data); 2209 def _make_accessor(cls, data):; 2210 if not is_categorical_dtype(data.dtype):; -> 2211 raise AttributeError(""Can only use .cat accessor with a ""; 2212 ""'category' dtype""); 2213 return CategoricalAccessor(data.values, data.index,. AttributeError: Can only use .cat accessor with a 'category' dtype; ```. Then, I comment out the respective line of code, run the whole thing again, and it works. And when I uncomment the line it works fine again. When I comment the line for the first time, I get a couple of lines displayed in the output saying:; > ... 'donor' was turned into a categorical variable; > ... 'gene_symbols' was turned into a categorical variable. or something like that... My theory is that sanitize_anndata() detects that these variables should be categorical variables and tries to convert them into categoricals. As this sc.pl.scatter call is the first time sanitize_anndata() is called after the variables are read in, this is the first time this conversion would take place. However, I am calling the sc.pl.scatter() on a subsetted anndata object, so it somehow cannot do the conversion. Once I call sc.pl.scatter on a non-subsetted anndata object ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/166:2875,access,accessor,2875,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/166,1,['access'],['accessor']
Security, pickleshare=0.7.5; - pillow=9.4.0; - pip=23.2.1; - pixman=0.43.4; - pkgutil-resolve-name=1.3.10; - platformdirs=3.10.0; - plotly=5.16.1; - plotly-orca=3.4.2; - pooch=1.7.0; - prettyprinter=0.18.0; - prometheus_client=0.17.1; - prompt-toolkit=3.0.39; - prompt_toolkit=3.0.39; - psutil=5.9.5; - pthread-stubs=0.4; - ptyprocess=0.7.0; - pure_eval=0.2.2; - py-cpuinfo=9.0.0; - pycparser=2.21; - pyct=0.5.0; - pyfaidx=0.8.1.1; - pygments=2.16.1; - pymde=0.1.18; - pymongo=4.5.0; - pynndescent=0.5.11; - pyobjc-core=9.2; - pyobjc-framework-cocoa=9.2; - pyparsing=3.0.9; - pysocks=1.7.1; - pytables=3.8.0; - python=3.11.4; - python-dateutil=2.8.2; - python-fastjsonschema=2.18.0; - python-igraph=0.11.3; - python-json-logger=2.0.7; - python-kaleido=0.2.1; - python-tzdata=2023.3; - python_abi=3.11; - pytorch=2.0.1; - pytz=2023.3; - pyvcf3=1.0.3; - pyyaml=6.0.1; - pyzmq=25.1.1; - radian=0.6.7; - rchitect=0.4.1; - readline=8.2; - referencing=0.30.2; - requests=2.31.0; - rfc3339-validator=0.1.4; - rfc3986-validator=0.1.1; - rpds-py=0.9.2; - scanpy=1.10.1; - scikit-learn=1.3.0; - scipy=1.11.2; - seaborn=0.13.2; - seaborn-base=0.13.2; - send2trash=1.8.2; - session-info=1.0.0; - setuptools=68.1.2; - simplejson=3.19.2; - six=1.16.0; - snappy=1.1.10; - sniffio=1.3.0; - soupsieve=2.3.2.post1; - stack_data=0.6.2; - statsmodels=0.14.0; - stdlib-list=0.10.0; - svt-av1=1.6.0; - sympy=1.12; - tbb=2021.11.0; - tenacity=8.2.3; - terminado=0.17.1; - texttable=1.7.0; - threadpoolctl=3.2.0; - tinycss2=1.2.1; - tk=8.6.12; - tomli=2.0.1; - torchvision=0.15.2; - tornado=6.3.3; - traitlets=5.9.0; - typing_extensions=4.8.0; - typing_utils=0.1.0; - tzdata=2023c; - umap-learn=0.5.5; - uri-template=1.3.0; - wcwidth=0.2.6; - webcolors=1.13; - webencodings=0.5.1; - websocket-client=1.6.2; - wheel=0.41.2; - x264=1!164.3095; - x265=3.5; - xlrd=1.2.0; - xorg-libxau=1.0.11; - xorg-libxdmcp=1.1.3; - xz=5.2.6; - yaml=0.2.5; - zeromq=4.3.4; - zipp=3.16.2; - zlib=1.2.13; - zlib-ng=2.0.7; - zstd=1.5.2; - pip:; - absl-py=,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:13624,validat,validator,13624,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['validat'],['validator']
Security, pynndescent 0.5.13 pyhff2d567_0 conda-forge; pyparsing 3.1.2 pyhd8ed1ab_0 conda-forge; pyqt 5.15.10 py39h313beb8_0 ; pyqt5-sip 12.13.0 py39h80987f9_0 ; pyro-api 0.1.2 pyhd8ed1ab_0 conda-forge; pyro-ppl 1.8.6 pyhd8ed1ab_0 conda-forge; pysocks 1.7.1 py39hca03da5_0 ; python 3.9.18 hd7ebdb9_1_cpython conda-forge; python-dateutil 2.9.0 pyhd8ed1ab_0 conda-forge; python-fastjsonschema 2.16.2 py39hca03da5_0 ; python-igraph 0.11.5 py39hd012b80_1 conda-forge; python-json-logger 2.0.7 py39hca03da5_0 ; python-tzdata 2024.1 pyhd8ed1ab_0 conda-forge; python_abi 3.9 4_cp39 conda-forge; pytorch 1.12.1 cpu_py39h6ba7f14_0 ; pytorch-lightning 1.9.4 pyhd8ed1ab_1 conda-forge; pytz 2024.1 py39hca03da5_0 ; pyyaml 6.0.1 py39h0f82c59_1 conda-forge; pyzmq 25.1.2 py39h313beb8_0 ; qt-main 5.15.8 hf679f28_21 conda-forge; qtconsole 5.5.1 py39hca03da5_0 ; qtpy 2.4.1 py39hca03da5_0 ; re2 2023.02.01 hb7217d7_0 conda-forge; readline 8.2 h1a28f6b_0 ; referencing 0.30.2 py39hca03da5_0 ; requests 2.32.2 py39hca03da5_0 ; rfc3339-validator 0.1.4 py39hca03da5_0 ; rfc3986-validator 0.1.1 py39hca03da5_0 ; rich 13.7.1 pyhd8ed1ab_0 conda-forge; rpds-py 0.10.6 py39hf0e4da2_0 ; scanpy 1.8.1 pypi_0 pypi; scikit-learn 1.1.2 py39h598ef33_0 conda-forge; scikit-misc 0.3.1 pypi_0 pypi; scipy 1.13.1 py39h3d5391c_0 conda-forge; scvi-tools 0.20.3 pyhd8ed1ab_0 conda-forge; seaborn 0.12.2 hd8ed1ab_0 conda-forge; seaborn-base 0.12.2 pyhd8ed1ab_0 conda-forge; send2trash 1.8.2 py39hca03da5_0 ; session-info 1.0.0 pyhd8ed1ab_0 conda-forge; setuptools 69.5.1 py39hca03da5_0 ; sinfo 0.3.4 pypi_0 pypi; sip 6.7.12 py39h313beb8_0 ; six 1.16.0 pyh6c4a22f_0 conda-forge; sniffio 1.3.0 py39hca03da5_0 ; soupsieve 2.5 py39hca03da5_0 ; sqlite 3.45.3 h80987f9_0 ; stack_data 0.2.0 pyhd3eb1b0_0 ; statsmodels 0.14.2 py39h161d348_0 conda-forge; stdlib-list 0.10.0 pyhd8ed1ab_0 conda-forge; tbb 2021.8.0 h48ca7d4_0 ; terminado 0.17.1 py39hca03da5_0 ; texttable 1.7.0 pyhd8ed1ab_0 conda-forge; threadpoolctl 3.5.0 pyhc1e730c_0 conda-forge; tinycss2 1,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3144:14303,validat,validator,14303,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3144,1,['validat'],['validator']
Security," sc. adata = sc.datasets.paul15(); adata.obs['batch'] = np.random.randint(3, size=adata.n_obs); adata.obs['X'] = adata.X[:,1]; adata.obs['Y'] = adata.X[:,2]. sc.pl.scatter(adata, x='X', y='Y', color='batch') # works; sc.pl.scatter(adata, x='X', y='Y', color=['paul15_clusters', 'batch']) # fails; ```. ```pytb; Traceback (most recent call last):; File ""/home/mumichae/miniconda3/envs/opsca/lib/python3.8/site-packages/IPython/core/interactiveshell.py"", line 3441, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-52-9844c466c985>"", line 1, in <module>; sc.pl.scatter(adata, x='X', y='Y', color=['paul15_clusters', 'batch']); File ""/home/mumichae/miniconda3/envs/opsca/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 131, in scatter; and (color is None or color in adata.obs.keys() or color in adata.var.index); File ""/home/mumichae/miniconda3/envs/opsca/lib/python3.8/site-packages/pandas/core/indexes/base.py"", line 4572, in __contains__; hash(key); TypeError: unhashable type: 'list'; ```. #### Versions. <details>. ```; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.1; -----; IPython 7.25.0; PIL 8.3.1; anndata 0.7.6; backcall 0.2.0; backend_interagg NA; beta_ufunc NA; binom_ufunc NA; cffi 1.14.6; colorama 0.4.4; console_thrift NA; cycler 0.10.0; cython_runtime NA; datalore NA; dateutil 2.8.1; decorator 4.4.2; defusedxml 0.7.1; h5py 2.10.0; igraph 0.9.6; ipython_genutils 0.2.0; jedi 0.18.0; joblib 1.0.1; kiwisolver 1.3.1; llvmlite 0.36.0; louvain 0.7.0; matplotlib 3.4.2; mpl_toolkits NA; natsort 7.1.1; nbinom_ufunc NA; numba 0.53.1; numexpr 2.7.3; numpy 1.18.1; packaging 20.9; pandas 1.3.1; parso 0.8.2; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.19; psutil 5.8.0; ptyprocess 0.7.0; pycparser 2.20; pydev_console NA; pydev_ipython NA; pydevconsole NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.9.0; pynndescent 0.5.4; pyparsing 2.4.7; pytz 2021.1; scanpy 1.8.1; scipy 1.7.0; sinfo",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1986:1287,hash,hash,1287,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1986,1,['hash'],['hash']
Security," self._accessor(obj); 225 # Replace the property with the accessor object. Inspired by:; 226 # https://www.pydanny.com/cached-property.html; 227 # We need to use object.__setattr__ because we overwrite __setattr__ on; 228 # NDFrame; 229 object.__setattr__(obj, self._name, accessor_obj). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:181, in StringMethods.__init__(self, data); 178 def __init__(self, data) -> None:; 179 from pandas.core.arrays.string_ import StringDtype; --> 181 self._inferred_dtype = self._validate(data); 182 self._is_categorical = is_categorical_dtype(data.dtype); 183 self._is_string = isinstance(data.dtype, StringDtype). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:235, in StringMethods._validate(data); 232 inferred_dtype = lib.infer_dtype(values, skipna=True); 234 if inferred_dtype not in allowed_types:; --> 235 raise AttributeError(""Can only use .str accessor with string values!""); 236 return inferred_dtype. AttributeError: Can only use .str accessor with string values!; ```; I did try to eleminate empty cells, but it didn't work; #### Versions. <details>. -----; anndata 0.9.1; scanpy 1.9.3; -----; PIL 9.4.0; absl NA; asttokens NA; attr 22.1.0; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; brotli NA; certifi 2022.12.07; cffi 1.15.1; charset_normalizer 2.0.4; chex 0.1.7; colorama 0.4.6; comm 0.1.2; contextlib2 NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; docrep 0.3.2; executing 0.8.3; flax 0.6.1; fsspec 2023.4.0; gmpy2 2.1.2; h5py 3.8.0; hypergeom_ufunc NA; idna 3.4; igraph 0.10.3; invgauss_ufunc NA; ipykernel 6.19.2; ipython_genutils 0.2.0; ipywidgets 8.0.4; jax 0.4.8; jaxlib 0.4.7; jedi 0.18.1; joblib 1.2.0; jupyter_server 1.23.4; kiwisolver 1.4.4; leidenalg 0.9.1; lightning_fabric 1.9.4; lightning_utilities 0.8.0; llvmlite 0.39.1; matplotlib 3.7.1; matplotlib_inline 0.1.6; mkl 2.4.0; ml_collection",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:3028,access,accessor,3028,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessor']
Security,"![screenshot](https://github.com/scverse/scanpy/assets/8238804/5d21ca96-6186-4fee-8a40-fe258f7722d3). The latter sentences of this docstring are totally incorrect, plus `AggType` is just an alias for the string literal values and isn't one we expose to users.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2931:243,expose,expose,243,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2931,1,['expose'],['expose']
Security,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Dear scanpy teams, research fellows,; I downloaded some scRNA-seq data from https://zenodo.org/records/3357167,; and when I was tring to use `anndata.AnnData.concatenate` to combine two read count data(I checked their dimensions and the result were `Baron_human: [2133,22758]` and `Segerstolpe: [8569,17500]` which means they certainly have different annotated genes), I got below error. Could u help. many thanks!!. ### Minimal code sample. ```python; all_adata = anndata.AnnData.concatenate(train_adata,test_adata); ```. ### Error output. ```pytb; File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\pandas\core\strings\accessor.py"", line 245, in _validate; raise AttributeError(""Can only use .str accessor with string values!""); AttributeError: Can only use .str accessor with string values!; ```. ### Versions. <details>. ```; >>> scanpy.logging.print_versions(); -----; anndata 0.8.0; scanpy 1.9.3; -----; CIForm NA; PIL 9.1.0; astunparse 1.6.3; cffi 1.15.1; colorama 0.4.6; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; google NA; h5py 3.11.0; igraph 0.10.4; joblib 1.2.0; kiwisolver 1.4.2; leidenalg 0.9.1; llvmlite 0.39.1; matplotlib 3.5.2; mpl_toolkits NA; natsort 8.3.1; nt NA; numba 0.56.4; numpy 1.23.5; opt_einsum v3.3.0; packaging 21.3; pandas 2.2.3; plotly 5.13.1; psutil 5.9.4; pyparsing 3.0.9; pytz 2022.1; scipy 1.10.0; session_info 1.0.0; six 1.16.0; sklearn 1.2.1; texttable 1.6.7; threadpoolctl 3.1.0; torch 1.13.1+cpu; tqdm 4.64.1; typing_extensions NA; yaml 6.0; zoneinfo NA; zope NA; -----; Python 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]; Windows-10-10.0.19041-SP0; -----; Session information updated at 2024",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3261:946,access,accessor,946,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3261,1,['access'],['accessor']
Security,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. **Note**: This bug seems to have been mentioned on 2/13/2022 in this discourse.scverse.org thread: https://discourse.scverse.org/t/error-in-highly-variable-gene-selection/276. However, I can't seem to access scverse.org so I can't see what the cause/resolution was. **Issue**: I am running highly_variable_genes with flavor='seurat_v3'. When I do not include a batch_key, the function runs fine. When I add a batch_key, I get a numerical error. ### Minimal code sample. ```python; sc.pp.highly_variable_genes(adata, flavor='seurat_v3', n_top_genes=1000, batch_key=""Covariate""); ```. ### Error output. ```pytb; ----> 1 sc.pp.highly_variable_genes(adata, flavor='seurat_v3', n_top_genes=1000, batch_key=""Covariate""). File ~/miniconda3/envs/singlecell/lib/python3.8/site-packages/scanpy/preprocessing/_highly_variable_genes.py:428, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values); 422 raise ValueError(; 423 '`pp.highly_variable_genes` expects an `AnnData` argument, '; 424 'pass `inplace=False` if you want to return a `pd.DataFrame`.'; 425 ); 427 if flavor == 'seurat_v3':; --> 428 return _highly_variable_genes_seurat_v3(; 429 adata,; 430 layer=layer,; 431 n_top_genes=n_top_genes,; 432 batch_key=batch_key,; 433 check_values=check_values,; 434 span=span,; 435 subset=subset,; 436 inplace=inplace,; 437 ); 439 if batch_key is None:; 440 df = _highly_variable_genes_single_batch(; 441 adata,; 442 layer=layer,; (...); 449 flavor=flavor,; 450 ). File ~/miniconda3/envs/singlecell/lib/python3.8/site-packages/scanpy/preprocessing/_highly_variable_genes.py:85, in _highly_variable_genes_seurat_v3(adata, la",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2669:492,access,access,492,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2669,1,['access'],['access']
Security,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. I am trying to concatenate multiple datasets. I have Anndata's of 4 runs that I'm trying to analyze together. I tried the plotting functions (e.g. sc.pl. violin) and saving to h5ad files on individual Anndata's and it works. When I merge them via ad.concat I keep getting a Type Error due to Anndata calling sanitize and strings_to_categoricals when I try to save or use plotting functions. I thought it might be because I'm adding new obs before merging but then I tried to just merge without any manipulation of individual Anndata's and it still gave the same error. Then I tried to manually merge the Anndata's by saving X as dataframe and obs as separate dataframes, merging them as dataframes and then creating a new Anndata object. I still keep getting these errors. The error message says that I'm trying to manipulate a view of the Anndata object although I'm not subsetting it and when I do adata.is_view it says False. . I'm not sure how to provide a code sample that can be replicated without data in this case. . ### Minimal code sample. ```python; samples= [ <list of 4 hdf5 files>]; all_adata = []; i = 0; for s in samples:; curr_adata = sc.read_h5ad(f""/mnt/d/Labmembers/Deniz/aging_data/{s}""); curr_adata.var_names_make_unique(); all_adata.append(curr_adata); adata= ad.concat(all_adata); #I get the same type error when I try to do; adata.write('trial.hdf5') ; #or; sc.pl.violin(adata, 'volume'); ```. ### Error output. ```pytb; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[8], line 1; ----> 1 sc.pl.violin(adata, 'volume'). File /home/denizparmaksiz/anaconda3/envs/scanpy/lib/python3.9/site-packages/scanpy/p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2645:599,sanitiz,sanitize,599,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2645,1,['sanitiz'],['sanitize']
Security,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Installation using pip & installation from github repository. ### Minimal code sample. ```python; pip install scanpy; ```. ### Error output. ```pytb; Installing collected packages: tbb, distlib, asciitree, stdlib-list, setuptools-scm, pbr, numcodecs, nodeenv, natsort, igraph, identify, filelock, fasteners, docutils, cfgv, array-api-compat, accessible-pygments, zarr, virtualenv, sphinx, session-info, pytest-nunit, pytest-mock, profimp, mdit-py-plugins, leidenalg, sphinxext-opengraph, sphinx-design, sphinx-copybutton, sphinx-autodoc-typehints, scanpydoc, pynndescent, pydata-sphinx-theme, pre-commit, myst-parser, anndata, umap-learn, sphinx-book-theme, jupyter-cache, scanpy, nbsphinx, myst-nb; Attempting uninstall: tbb; Found existing installation: TBB 0.2; ERROR: Cannot uninstall 'TBB'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.; ```. ### Versions. <details>. ```; Package Version; ----------------------------- ---------------; aiobotocore 2.5.0; aiofiles 22.1.0; aiohttp 3.8.5; aioitertools 0.7.1; aiosignal 1.2.0; aiosqlite 0.18.0; alabaster 0.7.12; anaconda-anon-usage 0.4.2; anaconda-catalogs 0.2.0; anaconda-client 1.12.1; anaconda-cloud-auth 0.1.3; anaconda-navigator 2.5.0; anaconda-project 0.11.1; anyio 3.5.0; appdirs 1.4.4; argon2-cffi 21.3.0; argon2-cffi-bindings 21.2.0; arrow 1.2.3; astroid 2.14.2; astropy 5.1; asttokens 2.0.5; async-timeout 4.0.2; atomicwrites 1.4.0; attrs 22.1.0; Automat 20.2.0; autopep8 1.6.0; Babel 2.11.0; backcall 0.2.0; backports.functools-lru-cache 1.6.4; backports.tempfile 1.0; backports.weakref 1.0.post1; bcrypt 3.2.0; beautifulsoup4 4.12.2; binaryorn",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2706:633,access,accessible-pygments,633,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2706,1,['access'],['accessible-pygments']
Security,"### What kind of feature would you like to request?. A new public analysis function. ### Please describe your wishes. Currently, these are implemented here but only have a public API in squidpy, so we should expose the API here as well",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3291:208,expose,expose,208,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3291,1,['expose'],['expose']
Security,"### What kind of feature would you like to request?. Additional function parameters / changed functionality / changed defaults?. ### Please describe your wishes. It would be extremely helpful if the embedding manifold tools had scikit-learn style API. . For example, https://pydiffmap.readthedocs.io/en/master/reference/diffusion_map.html. Having the .fit, .transform, and .fit_transform would make the robust implementations in the backend of ScanPy a lot more accessible for users. Right now, the usage feels a bit restrictive and I'm having difficulty leveraging the power of the methods if it's not part of some similar workflow that is in the tutorials. . I'm trying to use the code in the backend of ScanPy implement this API myself but ScanPy is an extremely confusing package from an outside developer. There are nested functions and tests for even simple steps (many of which handle edge cases making the package robust). More specifically, I'm trying to use the ScanPy implementation of Diffusion Maps as I would use those from pyDiffMap or the spectral clustering from Sklearn. I would like to be able to fit a model with data. Pickle it. Then transform new samples based on the fitted model. This would provide a useful interface for users looking for a non linear alternative to pca.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3054:462,access,accessible,462,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3054,1,['access'],['accessible']
Security,"#**Here is an example:** . adata.var.ix['Wfdc18']; result: ; gene_ids ENSMUSG00000000983; n_cells 2411; Name: Wfdc18, dtype: object. sc.pp.normalize_per_cell(adata, counts_per_cell_after=1e4); filter_result = sc.pp.filter_genes_dispersion(; adata.X, min_mean=0.0125, max_mean=3, min_disp=0.5); sc.pl.filter_genes_dispersion(filter_result). adata1 = adata[:, filter_result.gene_subset]; adata1.var.ix['Wfdc18']. KeyError Traceback (most recent call last); /usr/local/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2524 try:; -> 2525 return self._engine.get_loc(key); 2526 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'Wfdc18'. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-53-fb4aad8315fd> in <module>(); 1 print (adata.var.ix['Wfdc18']); ----> 2 print (adata1.var.ix['Wfdc18']). /usr/local/lib/python3.6/site-packages/pandas/core/indexing.py in __getitem__(self, key); 125 ; 126 key = com._apply_if_callable(key, self.obj); --> 127 return self._getitem_axis(key, axis=axis); 128 ; 129 def _get_label(self, label, axis=None):. /usr/local/lib/python3.6/site-packages/pandas/core/indexing.py in _getitem_axis(self, key, axis); 1106 return self._get_loc(key, axis=axis); 1107 ; -> 1108 return self._get_label(key, axis=axis); 1109 ; 1110 def _getitem_iterable(self, key, axis=None):. /usr/local/lib/python3.6/site-packages/pandas/core/indexing.py in _get_label(self, label, axis); 143 raise IndexingError('no slices here, handle elsewhere'); 144 ; --> 145 return self.obj._xs(label, axis=axis); 146 ; 147 def _get_loc(self, key, axis=None):. /usr/local/lib/pyth",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/109:832,hash,hashtable,832,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/109,2,['hash'],['hashtable']
Security,"(adata); ```; Output:; ```python; **scanpy==1.3.7 anndata==0.6.17 numpy==1.15.4 scipy==1.2.0 pandas==0.24.0 scikit-learn==0.20.2 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 . ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-11-5d93fbf298b7> in <module>; 4 adata = sc.datasets.blobs(); 5 ; ----> 6 sc.pp.highly_variable_genes(adata). ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/scanpy/preprocessing/highly_variable_genes.py in highly_variable_genes(adata, min_disp, max_disp, min_mean, max_mean, n_top_genes, n_bins, flavor, subset, inplace); 115 # a normalized disperion of 1; 116 one_gene_per_bin = disp_std_bin.isnull(); --> 117 gen_indices = np.where(one_gene_per_bin[df['mean_bin']])[0].tolist(); 118 if len(gen_indices) > 0:; 119 logg.msg(. ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/series.py in __getitem__(self, key); 909 Please use .at[] or .iat[] accessors.; 910 ; --> 911 Parameters; 912 ----------; 913 index : label. ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/series.py in _get_with(self, key); 951 -------; 952 series : Series; --> 953 If label is contained, will be reference to calling Series,; 954 otherwise a new object; 955 """""". ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/series.py in reindex(self, index, **kwargs). ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/generic.py in reindex(self, *args, **kwargs); 4344 ; 4345 elif not is_list_like(value):; -> 4346 new_data = self._data.fillna(value=value, limit=limit,; 4347 inplace=inplace,; 4348 downcast=downcast). ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/generic.py in _reindex_axes(self, axes, level, limit, tolerance, method, fill_value, copy); 4357 return self._constructor(new_data).__finalize__(self); 4358 ; -> 4359 def ffill(self, axis=None, inplace=False, limit=None, downcas",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/450:1137,access,accessors,1137,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/450,1,['access'],['accessors']
Security,", I think `batch_size` parameter doesn't work for `sc.external.pp.scanorama_integrate`. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.external.pp.scanorama_integrate(adata, key=""datasetID"", batch_size=500); ```. ```pytb; WARNING: Out of memory, consider turning on batched computation with batch_size parameter.; Traceback (most recent call last):; File ""/lustre1/shiq//02_igt/py/1_igt_scanorama.py"", line 26, in <module>; sc.external.pp.scanorama_integrate(adata, key=""datasetID"", batch_size=500); File ""/lustre1/shiq/app/miniconda3/envs/scanpy/lib/python3.10/site-packages/scanpy/external/pp/_scanorama_integrate.py"", line 121, in scanorama_integrate; integrated = scanorama.assemble(; File ""/lustre1/shiq/app/miniconda3/envs/scanpy/lib/python3.10/site-packages/scanorama/scanorama.py"", line 933, in assemble; bias = transform(curr_ds, curr_ref, ds_ind, ref_ind, sigma=sigma,; File ""/lustre1/shiq/app/miniconda3/envs/scanpy/lib/python3.10/site-packages/scanorama/scanorama.py"", line 762, in transform; avg_bias = batch_bias(curr_ds, match_ds, bias, sigma=sigma,; File ""/lustre1/shiq/app/miniconda3/envs/scanpy/lib/python3.10/site-packages/scanorama/scanorama.py"", line 723, in batch_bias; weights = rbf_kernel(curr_ds, match_ds, gamma=0.5*sigma); File ""/lustre1/shiq/app/miniconda3/envs/scanpy/lib/python3.10/site-packages/sklearn/metrics/pairwise.py"", line 1294, in rbf_kernel; X, Y = check_pairwise_arrays(X, Y); File ""/lustre1/shiq/app/miniconda3/envs/scanpy/lib/python3.10/site-packages/sklearn/metrics/pairwise.py"", line 155, in check_pairwise_arrays; X = check_array(; File ""/lustre1/shiq/app/miniconda3/envs/scanpy/lib/python3.10/site-packages/sklearn/utils/validation.py"", line 727, in check_array; warnings.warn(; FutureWarning: np.matrix usage is deprecated in 1.0 and will raise a TypeError in 1.2. Please convert to a numpy array with np.asarray. For more information see: https://numpy.org/doc/stable/reference/generated/numpy.matrix.html; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2319:1829,validat,validation,1829,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2319,1,['validat'],['validation']
Security,",'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax2, show=False, title=""< 1000 counts""); plt.show(); ```. Essentially the same thing but colored by the percentage of mitochondrial counts.; Only one legend seems to be drawn and this one is not looking as expected. Plus, I cannot remove the legend from the first plot. ; This is how it looks:; ![image](https://user-images.githubusercontent.com/50995210/83322257-6f838980-a256-11ea-83a5-bd0b4dfa4180.png). Why doesn't it behave in the same way like in the example above?; Is there a way I can share the same legend with a scale from 0 to 1 (0%-100%) for both plots in this case?; As you can see, the line removing the legend from `sc_ax1` is commented out because `get_legend()` returns `None` in this case, which would lead to the error below:. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-154-702da93b63cb> in <module>; 2 sc_fig, (sc_ax1, sc_ax2) = plt.subplots(1,2, figsize=(12,5)); 3 sc.pl.scatter(adata_raw, 'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax1, show=False, title=""all counts""); ----> 4 sc_ax1.get_legend().remove(); 5 sc.pl.scatter(adata_raw[adata_raw.obs['total_counts']<1000],'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax2, show=False, title=""< 1000 counts""); 6 plt.show(). AttributeError: 'NoneType' object has no attribute 'remove'; ```; Shouldn't the legends be attached to the individual axes objects?; I cannot access them and I wonder where they are stored in this case. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.2.dev5+ge5d246aa anndata==0.7.1 umap==0.4.3 numpy==1.18.4 scipy==1.4.1 pandas==0.25.3 scikit-learn==0.23.0 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.7.0; >matplotlib==3.1.2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1258:3325,access,access,3325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1258,1,['access'],['access']
Security,"- [x ] I have checked that this issue has not already been reported.; - [ x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug.; scvi does not have models class anymore to access VAE and LDVAE, please change it to use scvi.module. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; sc.external.pp.scvi(adata, train_size=0.8, batch_key='batch'); ```. ```pytb; File ""/usr/local/apps/python/3.9.4/lib/python3.9/site-packages/scanpy/external/pp/_scvi.py"", line 116, in scvi; from scvi.models import VAE, LDVAE; ModuleNotFoundError: No module named 'scvi.models'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/data/lab/MCF7/for_PAGA/MCF7_batch_attempt1.py"", line 140, in <module>; sc.external.pp.scvi(adata, train_size=0.8, batch_key='batch'); File ""/usr/local/apps/python/3.9.4/lib/python3.9/site-packages/scanpy/external/pp/_scvi.py"", line 120, in scvi; raise ImportError(; ImportError: Please install scvi package from https://github.com/YosefLab/scVI. ```. #### Versions; >>> scanpy.logging.print_versions() ; WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.5; scanpy 1.7.1; sinfo 0.3.1; -----; PIL 8.2.0; anndata 0.7.5; cffi 1.14.5; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; get_version 2.1; google NA; h5py 3.2.1; igraph 0.9.1; joblib 1.0.1; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.3; llvmlite 0.36.0; matplotlib 3.4.1; mpl_toolkits NA; natsort 7.1.1; numba 0.53.1; numexpr 2.7.3; numpy 1.20.2; packaging 20.9; pandas 1.2.3; pkg_resources NA; pyexpat NA; pyparsing 2.4.7; pytz 2021.1; scanpy 1.7.1; scipy 1.6.2; setupt",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1781:460,access,access,460,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1781,1,['access'],['access']
Security,"- [x] Additional function parameters / changed functionality / changed defaults?; - [x] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [x] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. I'd really like a smarter d/e method to be accessible easily from Scanpy, one that allows proper treatment of covariates etc. MAST is obviously very popular, but fiddly to integrate from R. I see diffxpy mentioned about the place here, and see it's an in-house tool of yours. Is there a reason it's not been integrated already? If nobody's working on it, shall I take a crack at it?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1955:409,access,accessible,409,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1955,1,['access'],['accessible']
Security,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. Hello, . This may be a problem outside the realm of scanpy functionality, but I thought it best to bring up in case it is relevant or in case anyone here has seen something before while trying to use scanpy. It looks like I can having trouble importing a dependency of the sc.pp.regress() function. I don't think the data here is relevant, just something in my set up. I tried updating all the libraries so that everything is up to date. This problem just started occurring today (2/10/21) and had no issue yesterday, so I figure it was a change on the scanpy end that I didn't keep up with proprely. ```python; sc.pp.regress_out(merged_adata, ['pct_counts_mt', 'pct_counts_rp']); ```. yields the following error. ```pytb; /broad/software/free/Linux/redhat_7_x86_64/pkgs/anaconda3_2020.07/lib/python3.8/site-packages/statsmodels/tsa/filters/filtertools.py in <module>; 16 import scipy.fftpack as fft; 17 from scipy import signal; ---> 18 from scipy.signal.signaltools import _centered as trim_centered; 19 ; 20 from statsmodels.tools.validation import array_like, PandasWrapper. ImportError: cannot import name '_centered' from 'scipy.signal.signaltools' (/home/unix/jjeang/.local/lib/python3.8/site-packages/scipy/signal/signaltools.py); ```. #### Versions. <details>. scanpy==1.6.0 anndata==0.7.8 umap==0.3.10 numpy==1.22.2 scipy==1.8.0 pandas==1.2.5 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.9.9 louvain==0.7.0 leidenalg==0.8.0. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2137:1263,validat,validation,1263,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2137,1,['validat'],['validation']
Security,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. pre_existing_clusters argument doesn't work. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```. ```pytb; KeyError Traceback (most recent call last); <ipython-input-207-326a4b3ee327> in <module>(); 1 sce.pp.hashsolo(adata, sample_to_column.keys(),; 2 number_of_noise_barcodes=1, pre_existing_clusters='leiden',; ----> 3 priors = [0.01, 0.6, 0.39],). /home/nicholas/repos/scanpy/scanpy/external/pp/_hashsolo.py in hashsolo(cell_hashing_adata, cell_hashing_columns, priors, pre_existing_clusters, clustering_data, resolutions, number_of_noise_barcodes, inplace); 249 unique_cluster_features = np.unique(cell_hashing_adata.obs[cluster_features]); 250 for cluster_feature in unique_cluster_features:; --> 251 cluster_feature_bool_vector = cell_hashing_adata.obs[cluster_features == cluster_feature]```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1482:677,hash,hashsolo,677,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1482,2,['hash'],['hashsolo']
Security,"----------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-2-3e86e297513a> in <module>; 1 import scanpy.api as sc; ----> 2 sc.read_loom('./Thienpont_T-cell_v4_R_fixed.loom'). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/anndata/readwrite/read.py in read_loom(filename, sparse, cleanup, X_name, obs_names, var_names); 142 filename = fspath(filename) # allow passing pathlib.Path objects; 143 from loompy import connect; --> 144 with connect(filename, 'r') as lc:; 145 ; 146 if X_name not in lc.layers.keys(): X_name = ''. ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in connect(filename, mode, validate, spec_version); 1151 Note: if validation is requested, an exception is raised if validation fails.; 1152 	""""""; -> 1153 return LoomConnection(filename, mode, validate=validate, spec_version=spec_version). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in __init__(self, filename, mode, validate, spec_version); 82 lv = loompy.LoomValidator(version=spec_version); 83 if not lv.validate(filename):; ---> 84 raise ValueError(""\n"".join(lv.errors) + f""\n{filename} does not appead to be a valid Loom file according to Loom spec version '{spec_version}'""); 85 ; 86 self._file = h5py.File(filename, mode). ValueError: Row attribute 'Gene' dtype object is not allowed; Row attribute 'Regulons' dtype [('SPI1_extended_(1805g)', 'u1'), ('SPI1_(1756g)', 'u1'), ('KLF5_extended_(1521g)', 'u1'), ('EHF_extended_(1513g)', 'u1'), ('STAT1_extended_(1443g)', 'u1'), ('ELF3_extended_(1249g)', 'u1'), ('STAT1_(1212g)', 'u1'), ('CEBPB_extended_(1162g)', 'u1'), ('CEBPB_(1045g)', 'u1'), ('KLF5_(1038g)', 'u1'), ('ELF1_extended_(987g)', 'u1'), ('ETS2_extended_(932g)', 'u1'), ('IRF8_extended_(923g)', 'u1'), ('JUND_extended_(789g)', 'u1'), ('EHF_(762g)', 'u1'), ('ELF1_(753g)', 'u1'), ('TFEC_extended_(694g)', 'u1'), ('ETS2_(688g)', 'u1'), ('IRF7_extended_(688g)', 'u1'), ('IRF8_(687g)', 'u1'), ('XBP1_extended",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/320:1694,validat,validate,1694,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/320,1,['validat'],['validate']
Security,"-2-3e86e297513a> in <module>; 1 import scanpy.api as sc; ----> 2 sc.read_loom('./Thienpont_T-cell_v4_R_fixed.loom'). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/anndata/readwrite/read.py in read_loom(filename, sparse, cleanup, X_name, obs_names, var_names); 142 filename = fspath(filename) # allow passing pathlib.Path objects; 143 from loompy import connect; --> 144 with connect(filename, 'r') as lc:; 145 ; 146 if X_name not in lc.layers.keys(): X_name = ''. ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in connect(filename, mode, validate, spec_version); 1151 Note: if validation is requested, an exception is raised if validation fails.; 1152 	""""""; -> 1153 return LoomConnection(filename, mode, validate=validate, spec_version=spec_version). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in __init__(self, filename, mode, validate, spec_version); 82 lv = loompy.LoomValidator(version=spec_version); 83 if not lv.validate(filename):; ---> 84 raise ValueError(""\n"".join(lv.errors) + f""\n{filename} does not appead to be a valid Loom file according to Loom spec version '{spec_version}'""); 85 ; 86 self._file = h5py.File(filename, mode). ValueError: Row attribute 'Gene' dtype object is not allowed; Row attribute 'Regulons' dtype [('SPI1_extended_(1805g)', 'u1'), ('SPI1_(1756g)', 'u1'), ('KLF5_extended_(1521g)', 'u1'), ('EHF_extended_(1513g)', 'u1'), ('STAT1_extended_(1443g)', 'u1'), ('ELF3_extended_(1249g)', 'u1'), ('STAT1_(1212g)', 'u1'), ('CEBPB_extended_(1162g)', 'u1'), ('CEBPB_(1045g)', 'u1'), ('KLF5_(1038g)', 'u1'), ('ELF1_extended_(987g)', 'u1'), ('ETS2_extended_(932g)', 'u1'), ('IRF8_extended_(923g)', 'u1'), ('JUND_extended_(789g)', 'u1'), ('EHF_(762g)', 'u1'), ('ELF1_(753g)', 'u1'), ('TFEC_extended_(694g)', 'u1'), ('ETS2_(688g)', 'u1'), ('IRF7_extended_(688g)', 'u1'), ('IRF8_(687g)', 'u1'), ('XBP1_extended_(669g)', 'u1'), ('IRF1_extended_(662g)', 'u1'), ('ETS1_extended_(647g)', 'u1'), ('IRF1_(617g)', 'u1'), ('IRF7_(61",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/320:1784,validat,validate,1784,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/320,1,['validat'],['validate']
Security,.0 pypi_0 pypi; setuptools 69.2.0 pyhd8ed1ab_0 conda-forge; setuptools-scm 8.0.4 pypi_0 pypi; six 1.16.0 pypi_0 pypi; statsmodels 0.14.1 pypi_0 pypi; stdlib-list 0.10.0 pypi_0 pypi; texttable 1.7.0 pypi_0 pypi; threadpoolctl 3.4.0 pypi_0 pypi; tifffile 2024.2.12 pypi_0 pypi; tk 8.6.13 noxft_h4845f30_101 conda-forge; toolz 0.12.1 pypi_0 pypi; tqdm 4.66.2 pypi_0 pypi; typing-extensions 4.11.0 pypi_0 pypi; tzdata 2024.1 pypi_0 pypi; umap-learn 0.5.6 pypi_0 pypi; virtualenv 20.25.1 pypi_0 pypi; wheel 0.43.0 pyhd8ed1ab_1 conda-forge; xz 5.2.6 h166bdaf_0 conda-forge; zarr 2.17.2 pypi_0 pypi; ```. </details>. <details>; <summary> My failing env </summary>. ```; # packages in environment at /mnt/workspace/mambaforge/envs/scanpy-dev2:; #; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; anndata 0.10.7 pypi_0 pypi; array-api-compat 1.6 pypi_0 pypi; asciitree 0.3.3 pypi_0 pypi; attrs 23.2.0 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; ca-certificates 2024.2.2 hbcca054_0 conda-forge; cfgv 3.4.0 pypi_0 pypi; click 8.1.7 pypi_0 pypi; cloudpickle 3.0.0 pypi_0 pypi; contourpy 1.2.1 pypi_0 pypi; coverage 7.4.4 pypi_0 pypi; cycler 0.12.1 pypi_0 pypi; dask 2024.4.1 pypi_0 pypi; dask-expr 1.0.10 pypi_0 pypi; distlib 0.3.8 pypi_0 pypi; execnet 2.1.1 pypi_0 pypi; fasteners 0.19 pypi_0 pypi; filelock 3.13.3 pypi_0 pypi; fonttools 4.51.0 pypi_0 pypi; fsspec 2024.3.1 pypi_0 pypi; h5py 3.10.0 pypi_0 pypi; identify 2.5.35 pypi_0 pypi; igraph 0.11.4 pypi_0 pypi; imageio 2.34.0 pypi_0 pypi; iniconfig 2.0.0 pypi_0 pypi; joblib 1.4.0 pypi_0 pypi; kiwisolver 1.4.5 pypi_0 pypi; lazy-loader 0.4 pypi_0 pypi; ld_impl_linux-64 2.40 h41732ed_0 conda-forge; legacy-api-wrap 1.4 pypi_0 pypi; leidenalg 0.10.2 pypi_0 pypi; libexpat 2.6.2 h59595ed_0 conda-forge; libffi 3.4.2 h7f98852_5 conda-forge; libgcc-ng 13.2.0 h807b86a_5 conda-forge; libgomp 13.2.0 h807b86a_5 conda-forge; libnsl 2.0.1 hd590300_0 conda-forge; libsqlite 3.45.2 h2797004_0 conda,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:29151,certificate,certificates,29151,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['certificate'],['certificates']
Security,".0; opt_einsum v3.3.0; optax 0.1.4; packaging 23.0; pandas 1.5.3; parso 0.8.3; paste NA; patsy 0.5.3; petsc4py 3.19.0; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; platformdirs 3.0.0; progressbar 4.2.0; prometheus_client NA; prompt_toolkit 3.0.38; psutil 5.9.4; ptyprocess 0.7.0; pure_eval 0.2.2; pvectorc NA; pycparser 2.21; pydev_ipython NA; pydevconsole NA; pydevd 2.9.5; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pydot 1.4.2; pygam 0.8.0; pygments 2.14.0; pygpcca 1.0.4; pyparsing 3.0.9; pyro 1.8.4+9ed468d; pyrsistent NA; python_utils NA; pythonjsonlogger NA; pytorch_lightning 1.9.3; pytz 2022.7.1; pywt 1.4.1; requests 2.28.2; rfc3339_validator 0.1.4; rfc3986_validator 0.1.1; rich NA; scHPL NA; scarches 0.5.7; sccoda 0.1.9; scipy 1.10.1; scvelo 0.2.5; scvi 0.20.1; seaborn 0.12.2; send2trash NA; session_info 1.0.0; setuptools 67.4.0; six 1.16.0; skewnorm_ufunc NA; skimage 0.19.3; sklearn 1.2.1; slepc4py 3.19.0; sniffio 1.3.0; socks 1.7.1; squidpy 1.2.2; stack_data 0.6.2; statsmodels 0.13.5; tblib 1.7.0; tcr_embedding NA; tensorboard 2.11.2; tensorflow 2.11.0; tensorflow_probability 0.19.0; termcolor NA; texttable 1.6.7; threadpoolctl 3.1.0; tifffile 2023.2.28; tlz 0.12.0; toolz 0.12.0; torch 1.13.1; torch_cluster 1.6.0; torch_geometric 2.2.0; torch_scatter 2.1.0; torch_sparse 0.6.15; torchmetrics 0.11.3; torchvision 0.14.1; tornado 6.2; tqdm 4.64.1; traitlets 5.9.0; tree 0.1.7; typing_extensions NA; unicodedata2 NA; uri_template NA; urllib3 1.26.14; validators 0.20.0; wcwidth 0.2.6; webcolors 1.11.1; websocket 1.5.1; wrapt 1.15.0; xarray 2023.2.0; xarray_einstats 0.5.1; yaml 6.0; zarr 2.13.6; zipp NA; zmq 25.0.0; zoneinfo NA; zope NA; -----; IPython 8.11.0; jupyter_client 8.0.3; jupyter_core 5.2.0; jupyterlab 3.6.1; notebook 6.5.2; -----; Python 3.10.9 | packaged by conda-forge | (main, Feb 2 2023, 20:20:04) [GCC 11.3.0]; Linux-3.10.0-1160.83.1.el7.x86_64-x86_64-with-glibc2.17; -----; Session information updated at 2023-05-26 01:06. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2493:3717,validat,validators,3717,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2493,1,['validat'],['validators']
Security,".1; - h5py==3.1.0; - importlib-metadata==3.4.0; - joblib==1.0.0; - kiwisolver==1.3.1; - legacy-api-wrap==1.2; - leidenalg==0.8.3; - llvmlite==0.35.0; - loompy==3.0.6; - louvain==0.7.0; - matplotlib==3.3.4; - natsort==7.1.1; - networkx==2.5; - numba==0.52.0; - numexpr==2.7.2; - numpy==1.20.0; - numpy-groupies==0.9.13; - pandas==1.2.1; - patsy==0.5.1; - pillow==8.1.0; - python-igraph==0.8.3; - pytz==2021.1; - scanpy==1.6.1; - scikit-learn==0.24.1; - scipy==1.6.0; - scvelo==0.2.2; - seaborn==0.11.1; - setuptools-scm==5.0.1; - sinfo==0.3.1; - statsmodels==0.12.1; - stdlib-list==0.8.0; - tables==3.6.1; - texttable==1.6.3; - threadpoolctl==2.1.0; - tqdm==4.56.0; - typing-extensions==3.7.4.3; - umap-learn==0.4.6; ```. I can reproduce the issue with a Docker container that only has the minimal conda environment above. Additionally, I already tried installing the exact same dependency versions in the new environment, but got the same results. ; If you need access to the data and the container please contact me and I will make it available to you.; The data is already at the ICB cluster. Code:. ```; from os import path; import numpy as np; import matplotlib.pyplot as plt; import scanpy as sc; import scanpy.external as sce; from os import listdir; import pandas as pd; import seaborn as sb; import datetime, time; import scvelo as scv. from matplotlib.colors import LinearSegmentedColormap. #Define a nice colour map for gene expression; from matplotlib import colors. def timestamp():; ts = time.time(); st = datetime.datetime.fromtimestamp(ts).strftime('%d-%m-%Y %H:%M:%S'); return st. # Exporting folder. folder = ""/output""; sc.settings.figdir = folder + ""Plots/""; sc.set_figure_params(vector_friendly = True, dpi=300). sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_version_and_date(); sc.logging.print_header(). adata = sc.read(""/data/190924_Recreated_Virus_Object_regressed.h5ad""); #adata.write(folder + ""190924_Recreated_Virus_O",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1625:5484,access,access,5484,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1625,1,['access'],['access']
Security,".values; 374 adata.obs_names = pd.read_csv(path / 'barcodes.tsv.gz', header=None)[0]; 375 return adata. /Applications/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py in __getitem__(self, key); 2686 return self._getitem_multilevel(key); 2687 else:; -> 2688 return self._getitem_column(key); 2689 ; 2690 def _getitem_column(self, key):. /Applications/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py in _getitem_column(self, key); 2693 # get column; 2694 if self.columns.is_unique:; -> 2695 return self._get_item_cache(key); 2696 ; 2697 # duplicate columns & possible reduce dimensionality. /Applications/anaconda3/lib/python3.7/site-packages/pandas/core/generic.py in _get_item_cache(self, item); 2487 res = cache.get(item); 2488 if res is None:; -> 2489 values = self._data.get(item); 2490 res = self._box_item_values(item, values); 2491 cache[item] = res. /Applications/anaconda3/lib/python3.7/site-packages/pandas/core/internals.py in get(self, item, fastpath); 4113 ; 4114 if not isna(item):; -> 4115 loc = self.items.get_loc(item); 4116 else:; 4117 indexer = np.arange(len(self.items))[isna(self.items)]. /Applications/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3078 return self._engine.get_loc(key); 3079 except KeyError:; -> 3080 return self._engine.get_loc(self._maybe_cast_indexer(key)); 3081 ; 3082 indexer = self.get_indexer([key], method=method, tolerance=tolerance). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). KeyError: 2; ```. Versions of all packages:. `scanpy==1.4.5.post2 anndata==0.6.22.post1 umap==0.3.10 numpy==1.18.2 scipy==1.3.1 pandas==0.23.4 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1`. Thanks",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1408:3579,hash,hashtable,3579,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1408,2,['hash'],['hashtable']
Security,0; pure-eval 0.2.2; py-cpuinfo 9.0.0; pyarrow 13.0.0; pyasn1 0.5.0; pyasn1-modules 0.3.0; pycodestyle 2.10.0; pycosat 0.6.6; pycparser 2.21; pyct 0.4.6; pycurl 7.45.1; pydantic 1.10.13; pydeseq2 0.4.1; PyDispatcher 2.0.5; pydocstyle 6.3.0; pyerfa 2.0.0.3; pyflakes 3.0.1; Pygments 2.16.1; PyJWT 2.8.0; pylint 2.17.5; pylint-venv 3.0.2; pyls-spyder 0.4.0; pynndescent 0.5.10; pyodbc 4.0.39; pyOpenSSL 23.2.0; pyparsing 3.1.1; PyQt5-sip 12.11.0; PySocks 1.7.1; pytest 7.4.2; python-dateutil 2.8.2; python-dotenv 1.0.0; python-json-logger 2.0.7; python-lsp-black 1.3.0; python-lsp-jsonrpc 1.1.2; python-lsp-server 1.7.2; python-slugify 8.0.1; pytoolconfig 1.2.5; pytz 2023.3.post1; pyviz_comms 3.0.0; PyWavelets 1.4.1; pyxdg 0.28; PyYAML 6.0.1; pyzmq 25.1.1; QDarkStyle 3.1; qstylizer 0.2.2; QtAwesome 1.2.3; qtconsole 5.4.4; QtPy 2.4.0; queuelib 1.6.2; referencing 0.30.2; regex 2023.10.3; requests 2.31.0; requests-file 1.5.1; requests-toolbelt 1.0.0; reretry 0.11.8; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rich 13.6.0; rope 1.10.0; rpds-py 0.10.4; Rtree 1.0.1; ruamel.yaml 0.17.35; ruamel.yaml.clib 0.2.7; ruamel-yaml-conda 0.15.80; s3fs 0.5.1; sacremoses 0.0.53; safetensors 0.3.3; scanpy 1.9.5; scikit-image 0.21.0; scikit-learn 1.3.1; scikit-learn-intelex 20230725.122106; scipy 1.11.3; Scrapy 2.11.0; scrublet 0.2.3; scTE 1.0; scTE 1.0; seaborn 0.13.0; SecretStorage 3.3.3; semver 3.0.1; Send2Trash 1.8.2; service-identity 18.1.0; session-info 1.0.0; setuptools 68.0.0; sip 6.6.2; six 1.16.0; smart-open 6.4.0; smmap 5.0.0; snakemake 7.32.3; sniffio 1.3.0; snowballstemmer 2.2.0; sortedcontainers 2.4.0; soupsieve 2.5; Sphinx 7.2.6; sphinxcontrib-applehelp 1.0.7; sphinxcontrib-devhelp 1.0.5; sphinxcontrib-htmlhelp 2.0.4; sphinxcontrib-jsmath 1.0.1; sphinxcontrib-qthelp 1.0.6; sphinxcontrib-serializinghtml 1.1.9; spyder 5.4.3; spyder-kernels 2.4.4; SQLAlchemy 2.0.21; stack-data 0.6.2; statsmodels 0.14.0; stdlib-list 0.8.0; stopit 1.1.2; sympy 1.12; tables 3.9.1; tabulate 0.9.0; TB,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2680:8784,validat,validator,8784,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2680,1,['validat'],['validator']
Security,1.1.1o-h166bdaf_0. Proceed ([y]/n)? y. Downloading and Extracting Packages; keyutils-1.6.1 | 115 KB | ############################################################################# | 100% ; h5py-3.6.0 | 1.4 MB | ############################################################################# | 100% ; cached_property-1.5. | 11 KB | ############################################################################# | 100% ; c-ares-1.18.1 | 113 KB | ############################################################################# | 100% ; anndata-0.8.0 | 151 KB | ############################################################################# | 100% ; libev-4.33 | 104 KB | ############################################################################# | 100% ; libnghttp2-1.46.0 | 680 KB | ############################################################################# | 100% ; libcurl-7.82.0 | 342 KB | ############################################################################# | 100% ; libssh2-1.10.0 | 233 KB | ############################################################################# | 100% ; cached-property-1.5. | 4 KB | ############################################################################# | 100% ; openssl-1.1.1o | 2.1 MB | ############################################################################# | 100% ; certifi-2022.5.18.1 | 150 KB | ############################################################################# | 100% ; hdf5-1.12.1 | 3.5 MB | ############################################################################# | 100% ; libedit-3.1.20191231 | 121 KB | ############################################################################# | 100% ; ca-certificates-2022 | 144 KB | ############################################################################# | 100% ; krb5-1.19.3 | 1.4 MB | ############################################################################# | 100% ; Preparing transaction: done; Verifying transaction: done; Executing transaction: done. ```. Any ideas??,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2265:3764,certificate,certificates-,3764,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2265,1,['certificate'],['certificates-']
Security,"1041 expansion = 10.0 / np.abs(initialisation).max(). /home/sguenth/.conda/envs/scRNAseq_analysis_1.6/lib/python3.7/site-packages/umap/spectral.py in spectral_layout(data, graph, dim, random_state, metric, metric_kwds); 304 random_state,; 305 metric=metric,; --> 306 metric_kwds=metric_kwds,; 307 ); 308 . /home/sguenth/.conda/envs/scRNAseq_analysis_1.6/lib/python3.7/site-packages/umap/spectral.py in multi_component_layout(data, graph, n_components, component_labels, dim, random_state, metric, metric_kwds); 191 random_state,; 192 metric=metric,; --> 193 metric_kwds=metric_kwds,; 194 ); 195 else:. /home/sguenth/.conda/envs/scRNAseq_analysis_1.6/lib/python3.7/site-packages/umap/spectral.py in component_layout(data, n_components, component_labels, dim, random_state, metric, metric_kwds); 120 else:; 121 distance_matrix = pairwise_distances(; --> 122 component_centroids, metric=metric, **metric_kwds; 123 ); 124 . /home/sguenth/.conda/envs/scRNAseq_analysis_1.6/lib/python3.7/site-packages/sklearn/utils/validation.py in inner_f(*args, **kwargs); 70 FutureWarning); 71 kwargs.update({k: arg for k, arg in zip(sig.parameters, args)}); ---> 72 return f(**kwargs); 73 return inner_f; 74 . /home/sguenth/.conda/envs/scRNAseq_analysis_1.6/lib/python3.7/site-packages/sklearn/metrics/pairwise.py in pairwise_distances(X, Y, metric, n_jobs, force_all_finite, **kwds); 1738 raise ValueError(""Unknown metric %s. ""; 1739 ""Valid metrics are %s, or 'precomputed', or a ""; -> 1740 ""callable"" % (metric, _VALID_METRICS)); 1741 ; 1742 if metric == ""precomputed"":. ValueError: Unknown metric angular. Valid metrics are ['euclidean', 'l2', 'l1', 'manhattan', 'cityblock', 'braycurtis', 'canberra', 'chebyshev', 'correlation', 'cosine', 'dice', 'hamming', 'jaccard', 'kulsinski', 'mahalanobis', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule', 'wminkowski', 'nan_euclidean', 'haversine'], or 'precomputed', or a callable; ```. #### Vers",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1989:2772,validat,validation,2772,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1989,1,['validat'],['validation']
Security,"19A1 ENSG00000173638 31 False 31 0.018519 ... 3.234231 2.932458 -2.020969e-10 0.173017 SLC19A1; S100B ENSG00000160307 94 False 94 0.076667 ... 3.042992 1.078783 5.994639e-10 0.399946 S100B; PRMT2 ENSG00000160310 588 False 588 0.275926 ... 2.774169 0.629058 -6.100551e-10 0.762753 PRMT2. [1838 rows x 14 columns]; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; >>> adata.var['CD14']; Traceback (most recent call last):; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2646, in get_loc; return self._engine.get_loc(key); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; >>> adata.raw.var['CD14']; Traceback (most re",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:2960,hash,hashtable,2960,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,1,['hash'],['hashtable']
Security,"288 '... storing \'{}\' as categorical'. ~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in __getattr__(self, name); 3608 if (name in self._internal_names_set or name in self._metadata or; 3609 name in self._accessors):; -> 3610 return object.__getattribute__(self, name); 3611 else:; 3612 if name in self._info_axis:. ~/anaconda3/lib/python3.6/site-packages/pandas/core/accessor.py in __get__(self, instance, owner); 52 # this ensures that Series.str.<method> is well defined; 53 return self.accessor_cls; ---> 54 return self.construct_accessor(instance); 55 ; 56 def __set__(self, instance, value):. ~/anaconda3/lib/python3.6/site-packages/pandas/core/categorical.py in _make_accessor(cls, data); 2209 def _make_accessor(cls, data):; 2210 if not is_categorical_dtype(data.dtype):; -> 2211 raise AttributeError(""Can only use .cat accessor with a ""; 2212 ""'category' dtype""); 2213 return CategoricalAccessor(data.values, data.index,. AttributeError: Can only use .cat accessor with a 'category' dtype; ```. Then, I comment out the respective line of code, run the whole thing again, and it works. And when I uncomment the line it works fine again. When I comment the line for the first time, I get a couple of lines displayed in the output saying:; > ... 'donor' was turned into a categorical variable; > ... 'gene_symbols' was turned into a categorical variable. or something like that... My theory is that sanitize_anndata() detects that these variables should be categorical variables and tries to convert them into categoricals. As this sc.pl.scatter call is the first time sanitize_anndata() is called after the variables are read in, this is the first time this conversion would take place. However, I am calling the sc.pl.scatter() on a subsetted anndata object, so it somehow cannot do the conversion. Once I call sc.pl.scatter on a non-subsetted anndata object once, the conversion can take place and I can subsequently call sc.pl.scatter also on a subsetted anndata object. I",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/166:3012,access,accessor,3012,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/166,1,['access'],['accessor']
Security,2=10.43; - pexpect=4.8.0; - pickleshare=0.7.5; - pillow=9.4.0; - pip=23.2.1; - pixman=0.43.4; - pkgutil-resolve-name=1.3.10; - platformdirs=3.10.0; - plotly=5.16.1; - plotly-orca=3.4.2; - pooch=1.7.0; - prettyprinter=0.18.0; - prometheus_client=0.17.1; - prompt-toolkit=3.0.39; - prompt_toolkit=3.0.39; - psutil=5.9.5; - pthread-stubs=0.4; - ptyprocess=0.7.0; - pure_eval=0.2.2; - py-cpuinfo=9.0.0; - pycparser=2.21; - pyct=0.5.0; - pyfaidx=0.8.1.1; - pygments=2.16.1; - pymde=0.1.18; - pymongo=4.5.0; - pynndescent=0.5.11; - pyobjc-core=9.2; - pyobjc-framework-cocoa=9.2; - pyparsing=3.0.9; - pysocks=1.7.1; - pytables=3.8.0; - python=3.11.4; - python-dateutil=2.8.2; - python-fastjsonschema=2.18.0; - python-igraph=0.11.3; - python-json-logger=2.0.7; - python-kaleido=0.2.1; - python-tzdata=2023.3; - python_abi=3.11; - pytorch=2.0.1; - pytz=2023.3; - pyvcf3=1.0.3; - pyyaml=6.0.1; - pyzmq=25.1.1; - radian=0.6.7; - rchitect=0.4.1; - readline=8.2; - referencing=0.30.2; - requests=2.31.0; - rfc3339-validator=0.1.4; - rfc3986-validator=0.1.1; - rpds-py=0.9.2; - scanpy=1.10.1; - scikit-learn=1.3.0; - scipy=1.11.2; - seaborn=0.13.2; - seaborn-base=0.13.2; - send2trash=1.8.2; - session-info=1.0.0; - setuptools=68.1.2; - simplejson=3.19.2; - six=1.16.0; - snappy=1.1.10; - sniffio=1.3.0; - soupsieve=2.3.2.post1; - stack_data=0.6.2; - statsmodels=0.14.0; - stdlib-list=0.10.0; - svt-av1=1.6.0; - sympy=1.12; - tbb=2021.11.0; - tenacity=8.2.3; - terminado=0.17.1; - texttable=1.7.0; - threadpoolctl=3.2.0; - tinycss2=1.2.1; - tk=8.6.12; - tomli=2.0.1; - torchvision=0.15.2; - tornado=6.3.3; - traitlets=5.9.0; - typing_extensions=4.8.0; - typing_utils=0.1.0; - tzdata=2023c; - umap-learn=0.5.5; - uri-template=1.3.0; - wcwidth=0.2.6; - webcolors=1.13; - webencodings=0.5.1; - websocket-client=1.6.2; - wheel=0.41.2; - x264=1!164.3095; - x265=3.5; - xlrd=1.2.0; - xorg-libxau=1.0.11; - xorg-libxdmcp=1.1.3; - xz=5.2.6; - yaml=0.2.5; - zeromq=4.3.4; - zipp=3.16.2; - zlib=1.2.13; - zlib-ng=2.0.7; - zst,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:13597,validat,validator,13597,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['validat'],['validator']
Security,"63 . /software/anaconda3/lib/python3.6/site-packages/anndata/_core/index.py in _normalize_index(indexer, index); 72 return indexer; 73 elif isinstance(indexer, str):; ---> 74 return index.get_loc(indexer) # int; 75 elif isinstance(indexer, (Sequence, np.ndarray, pd.Index, spmatrix, np.matrix)):; 76 if hasattr(indexer, ""shape"") and (. /software/anaconda3/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2646 return self._engine.get_loc(key); 2647 except KeyError:; -> 2648 return self._engine.get_loc(self._maybe_cast_indexer(key)); 2649 indexer = self.get_indexer([key], method=method, tolerance=tolerance); 2650 if indexer.ndim > 1 or indexer.size > 1:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'SPP1'. ```. #### Versions. <details>. -----; anndata 0.7.6; scanpy 1.7.2; sinfo 0.3.4; -----; PIL 8.4.0; backcall 0.1.0; bottleneck 1.2.1; cffi 1.11.5; cloudpickle 0.5.3; colorama 0.3.9; cycler 0.10.0; cython_runtime NA; cytoolz 0.9.0.1; dask 0.17.5; dateutil 2.7.3; decorator 4.3.0; fa2 NA; flaskext NA; get_version 2.1; google NA; h5py 2.10.0; igraph 0.9.7; ipykernel 4.8.2; ipython_genutils 0.2.0; ipywidgets 7.2.1; jedi 0.12.0; joblib 0.13.2; kiwisolver 1.0.1; legacy_api_wrap 1.2; leidenalg 0.8.8; llvmlite 0.34.0; louvain 0.6.1; lxml NA; matplotlib 3.3.4; mpl_toolkits NA; natsort 6.0.0; networkx 2.5.1; numba 0.51.2; numexpr 2.6.5; numpy 1.19.5; packaging 21.0; pandas 1.1.5; parso 0.2.0; pexpect 4.5.0; pickleshare 0.7.4; pkg_resources NA; prompt_toolkit 1.0.15; psutil 5.4.5; ptyprocess 0.5.2; pycparser 2.18; pygments 2.2.0; pynndescent 0.5.0; pyparsing 2.2.0; pytz 2018.4; ruamel NA; scipy 1.4.1; scvelo 0.2.4; setuptools_scm NA; simplegeneric",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2018:4109,hash,hashtable,4109,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2018,1,['hash'],['hashtable']
Security,"7672 ICOSLG; SUMO3 ENSG00000184900 570 False 570 0.292963 ... 4.046776 2.431045 -3.685750e-10 0.723121 SUMO3; SLC19A1 ENSG00000173638 31 False 31 0.018519 ... 3.234231 2.932458 -2.020969e-10 0.173017 SLC19A1; S100B ENSG00000160307 94 False 94 0.076667 ... 3.042992 1.078783 5.994639e-10 0.399946 S100B; PRMT2 ENSG00000160310 588 False 588 0.275926 ... 2.774169 0.629058 -6.100551e-10 0.762753 PRMT2. [1838 rows x 14 columns]; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; >>> adata.var['CD14']; Traceback (most recent call last):; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2646, in get_loc; return self._engine.get_loc(key); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:2847,hash,hashtable,2847,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,1,['hash'],['hashtable']
Security,8.4; - patsy=0.5.6; - pexpect=4.9.0; - pickleshare=0.7.5; - pillow=10.3.0; - pip=24.0; - pkgutil-resolve-name=1.3.10; - platformdirs=4.2.2; - plotly=5.22.0; - plotly-orca=1.3.1; - pooch=1.8.2; - prettyprinter=0.18.0; - prometheus_client=0.20.0; - prompt-toolkit=3.0.47; - prompt_toolkit=3.0.47; - protobuf=4.25.3; - psutil=5.9.8; - pthread-stubs=0.4; - ptyprocess=0.7.0; - pure_eval=0.2.2; - py-cpuinfo=9.0.0; - pycparser=2.22; - pyfaidx=0.8.1.1; - pygments=2.18.0; - pymde=0.1.18; - pymongo=4.7.3; - pynndescent=0.5.12; - pyobjc-core=10.2; - pyobjc-framework-cocoa=10.2; - pyparsing=3.1.2; - pysocks=1.7.1; - pytables=3.9.2; - python=3.11.4; - python-dateutil=2.9.0; - python-fastjsonschema=2.19.1; - python-igraph=0.11.5; - python-json-logger=2.0.7; - python-kaleido=0.2.1; - python-tzdata=2024.1; - python_abi=3.11; - pytorch=2.2.2; - pytz=2024.1; - pyvcf3=1.0.3; - pyyaml=6.0.1; - pyzmq=26.0.3; - radian=0.6.12; - rchitect=0.4.6; - readline=8.2; - referencing=0.35.1; - requests=2.32.3; - rfc3339-validator=0.1.4; - rfc3986-validator=0.1.1; - rpds-py=0.18.1; - scanpy=1.10.1; - scikit-learn=1.5.0; - scipy=1.13.1; - seaborn=0.13.2; - seaborn-base=0.13.2; - send2trash=1.8.3; - session-info=1.0.0; - setuptools=70.0.0; - simplejson=3.19.2; - six=1.16.0; - snappy=1.2.0; - sniffio=1.3.1; - soupsieve=2.5; - stack_data=0.6.2; - statsmodels=0.14.2; - stdlib-list=0.10.0; - sympy=1.12; - tbb=2021.12.0; - tenacity=8.3.0; - terminado=0.18.1; - texttable=1.7.0; - threadpoolctl=3.5.0; - tinycss2=1.3.0; - tk=8.6.13; - tomli=2.0.1; - torchvision=0.17.2; - tornado=6.4.1; - tqdm=4.66.4; - traitlets=5.14.3; - types-python-dateutil=2.9.0.20240316; - typing-extensions=4.12.2; - typing_extensions=4.12.2; - typing_utils=0.1.0; - tzdata=2024a; - umap-learn=0.5.5; - uri-template=1.3.0; - urllib3=2.2.1; - wcwidth=0.2.13; - webcolors=24.6.0; - webencodings=0.5.1; - websocket-client=1.8.0; - wheel=0.43.0; - xlrd=1.2.0; - xorg-libxau=1.0.11; - xorg-libxdmcp=1.1.3; - xz=5.2.6; - yaml=0.2.5; - zeromq=4.3.5; - z,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:7001,validat,validator,7001,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['validat'],['validator']
Security,"8/site-packages/scanpy/tools/__init__.py in <module>; 15 from ._leiden import leiden; 16 from ._louvain import louvain; ---> 17 from ._sim import sim; 18 from ._score_genes import score_genes, score_genes_cell_cycle; 19 from ._dendrogram import dendrogram. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/tools/_sim.py in <module>; 21 from anndata import AnnData; 22 ; ---> 23 from .. import _utils, readwrite, logging as logg; 24 from .._settings import settings; 25 from .._compat import Literal. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/readwrite.py in <module>; 8 import pandas as pd; 9 from matplotlib.image import imread; ---> 10 import tables; 11 import anndata; 12 from anndata import (. ModuleNotFoundError: No module named 'tables'. ```. The messages when updating anndata:; ```; The following packages will be REMOVED:. pytables-3.6.1-py38h9f153d1_1. The following packages will be UPDATED:. anndata 0.7.6-py38h578d9bd_0 --> 0.8.0-py38h578d9bd_0; ca-certificates pkgs/main::ca-certificates-2022.4.26-~ --> conda-forge::ca-certificates-2022.5.18.1-ha878542_0; h5py 2.10.0-nompi_py38h513d04c_102 --> 3.6.0-nompi_py38hfbb2109_100; hdf5 1.10.5-nompi_h5b725eb_1114 --> 1.12.1-nompi_h2750804_100. The following packages will be SUPERSEDED by a higher-priority channel:. certifi pkgs/main::certifi-2022.5.18.1-py38h0~ --> conda-forge::certifi-2022.5.18.1-py38h578d9bd_0; openssl pkgs/main::openssl-1.1.1o-h7f8727e_0 --> conda-forge::openssl-1.1.1o-h166bdaf_0. Proceed ([y]/n)? y. Downloading and Extracting Packages; keyutils-1.6.1 | 115 KB | ############################################################################# | 100% ; h5py-3.6.0 | 1.4 MB | ############################################################################# | 100% ; cached_property-1.5. | 11 KB | ############################################################################# | 100% ; c-ares-1.18.1 | 113 KB | ############################################################################# | 100% ; ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2265:1609,certificate,certificates,1609,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2265,2,['certificate'],"['certificates', 'certificates-']"
Security,":14, in <module>; 12 import matplotlib.pyplot as plt; 13 from anndata import AnnData; ---> 14 from pandas.api.types import is_categorical; 16 from ..preprocessing._utils import _get_mean_var; 17 from .._utils import NeighborsView. ImportError: cannot import name 'is_categorical' from 'pandas.api.types' (/Users/michael/mambaforge/envs/basic_comp_bio/lib/python3.9/site-packages/pandas/api/types/__init__.py); ```. ### Versions. <details>. ```; conda list; # packages in environment at /Users/michael/mambaforge/envs/basic_comp_bio:; #; # Name Version Build Channel; anndata 0.9.1 pyhd8ed1ab_0 conda-forge; appnope 0.1.2 py39hca03da5_1001 anaconda; asttokens 2.0.5 pyhd3eb1b0_0 anaconda; backcall 0.2.0 pyhd3eb1b0_0 anaconda; blosc 1.21.4 hc338f07_0 conda-forge; brotli 1.0.9 h1a8c8d9_9 conda-forge; brotli-bin 1.0.9 h1a8c8d9_9 conda-forge; brotli-python 1.0.9 py39h23fbdae_9 conda-forge; bzip2 1.0.8 h3422bc3_4 conda-forge; c-ares 1.19.1 hb547adb_0 conda-forge; c-blosc2 2.10.0 h068da5f_0 conda-forge; ca-certificates 2022.4.26 hca03da5_0 anaconda; cached-property 1.5.2 hd8ed1ab_1 conda-forge; cached_property 1.5.2 pyha770c72_1 conda-forge; certifi 2022.6.15 py39hca03da5_0 anaconda; charset-normalizer 3.2.0 pyhd8ed1ab_0 conda-forge; colorama 0.4.6 pyhd8ed1ab_0 conda-forge; curl 8.1.2 hc52a3a8_1 conda-forge; cycler 0.11.0 pyhd8ed1ab_0 conda-forge; debugpy 1.5.1 py39hc377ac9_0 anaconda; decorator 5.1.1 pyhd3eb1b0_0 anaconda; dunamai 1.18.0 pyhd8ed1ab_0 conda-forge; entrypoints 0.4 py39hca03da5_0 anaconda; executing 0.8.3 pyhd3eb1b0_0 anaconda; fonttools 4.41.0 py39h0f82c59_0 conda-forge; freetype 2.12.1 hd633e50_1 conda-forge; get_version 3.5.4 pyhd8ed1ab_0 conda-forge; gettext 0.21.1 h0186832_0 conda-forge; git 2.41.0 pl5321h46e2b6d_0 conda-forge; h5py 3.9.0 nompi_py39he9c2634_101 conda-forge; hdf5 1.14.1 nompi_h3aba7b3_100 conda-forge; idna 3.4 pyhd8ed1ab_0 conda-forge; importlib-metadata 6.8.0 pyha770c72_0 conda-forge; importlib_metadata 6.8.0 hd8ed1ab_0 conda-forge; ipykernel 6.9",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2564:2660,certificate,certificates,2660,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2564,1,['certificate'],['certificates']
Security,"; 199 doublet_adata = AnnData(; 200 np.concatenate([doublet_latent_rep, np.log(doublet_lib_size)], axis=1); 201 ); 202 doublet_adata.obs[LABELS_KEY] = ""doublet""; --> 204 full_adata = latent_adata.concatenate(doublet_adata); 205 cls.setup_anndata(full_adata, labels_key=LABELS_KEY); 206 return cls(full_adata, **classifier_kwargs). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/anndata/_core/anndata.py:1808, in AnnData.concatenate(self, join, batch_key, batch_categories, uns_merge, index_unique, fill_value, *adatas); 1799 pat = rf""-({'|'.join(batch_categories)})$""; 1800 out.var = merge_dataframes(; 1801 [a.var for a in all_adatas],; 1802 out.var_names,; 1803 partial(merge_outer, batch_keys=batch_categories, merge=merge_same),; 1804 ); 1805 out.var = out.var.iloc[; 1806 :,; 1807 (; -> 1808 out.var.columns.str.extract(pat, expand=False); 1809 .fillna(""""); 1810 .argsort(kind=""stable""); 1811 ),; 1812 ]; 1814 return out. File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/accessor.py:224, in CachedAccessor.__get__(self, obj, cls); 221 if obj is None:; 222 # we're accessing the attribute of the class, i.e., Dataset.geo; 223 return self._accessor; --> 224 accessor_obj = self._accessor(obj); 225 # Replace the property with the accessor object. Inspired by:; 226 # https://www.pydanny.com/cached-property.html; 227 # We need to use object.__setattr__ because we overwrite __setattr__ on; 228 # NDFrame; 229 object.__setattr__(obj, self._name, accessor_obj). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:181, in StringMethods.__init__(self, data); 178 def __init__(self, data) -> None:; 179 from pandas.core.arrays.string_ import StringDtype; --> 181 self._inferred_dtype = self._validate(data); 182 self._is_categorical = is_categorical_dtype(data.dtype); 183 self._is_string = isinstance(data.dtype, StringDtype). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:235, in S",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:1856,access,accessor,1856,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessor']
Security,"; File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; >>> adata.raw.var['CD14']; Traceback (most recent call last):; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2646, in get_loc; return self._engine.get_loc(key); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; ```. #### Versions:; ```; scanpy==1.5.1 annda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:4501,hash,hashtable,4501,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,1,['hash'],['hashtable']
Security,"; anndata 0.6.11 <pip>; scanpy 1.3.2 <pip>; ```; Here is the error below, I don't know if this is an issue with the latest loompy version? Thanks so much for any help! -Orr; ```; import scanpy.api as sc ; sc.read_loom('./Thienpont_T-cell_v4_R_fixed.loom'). ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-2-3e86e297513a> in <module>; 1 import scanpy.api as sc; ----> 2 sc.read_loom('./Thienpont_T-cell_v4_R_fixed.loom'). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/anndata/readwrite/read.py in read_loom(filename, sparse, cleanup, X_name, obs_names, var_names); 142 filename = fspath(filename) # allow passing pathlib.Path objects; 143 from loompy import connect; --> 144 with connect(filename, 'r') as lc:; 145 ; 146 if X_name not in lc.layers.keys(): X_name = ''. ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in connect(filename, mode, validate, spec_version); 1151 Note: if validation is requested, an exception is raised if validation fails.; 1152 	""""""; -> 1153 return LoomConnection(filename, mode, validate=validate, spec_version=spec_version). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in __init__(self, filename, mode, validate, spec_version); 82 lv = loompy.LoomValidator(version=spec_version); 83 if not lv.validate(filename):; ---> 84 raise ValueError(""\n"".join(lv.errors) + f""\n{filename} does not appead to be a valid Loom file according to Loom spec version '{spec_version}'""); 85 ; 86 self._file = h5py.File(filename, mode). ValueError: Row attribute 'Gene' dtype object is not allowed; Row attribute 'Regulons' dtype [('SPI1_extended_(1805g)', 'u1'), ('SPI1_(1756g)', 'u1'), ('KLF5_extended_(1521g)', 'u1'), ('EHF_extended_(1513g)', 'u1'), ('STAT1_extended_(1443g)', 'u1'), ('ELF3_extended_(1249g)', 'u1'), ('STAT1_(1212g)', 'u1'), ('CEBPB_extended_(1162g)', 'u1'), ('CEBPB_(1045g)', 'u1'), ('KLF5_(1038g)', 'u1'), ('ELF1_extended_(9",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/320:1377,validat,validate,1377,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/320,3,['validat'],"['validate', 'validation']"
Security,; ptyprocess 0.7.0; pure-eval 0.2.2; py-cpuinfo 8.0.0; pyarrow 11.0.0; pyasn1 0.4.8; pyasn1-modules 0.2.8; pycodestyle 2.10.0; pycosat 0.6.4; pycparser 2.21; pyct 0.5.0; pycurl 7.45.2; pydantic 1.10.8; PyDispatcher 2.0.5; pydocstyle 6.3.0; pyerfa 2.0.0; pyflakes 3.0.1; Pygments 2.15.1; PyJWT 2.4.0; pylint 2.16.2; pylint-venv 2.3.0; pyls-spyder 0.4.0; pyodbc 4.0.34; pyOpenSSL 23.2.0; pyparsing 3.0.9; PyQt5-sip 12.11.0; pyrsistent 0.18.0; PySocks 1.7.1; pytest 7.4.0; python-dateutil 2.8.2; python-dotenv 0.21.0; python-json-logger 2.0.7; python-lsp-black 1.2.1; python-lsp-jsonrpc 1.0.0; python-lsp-server 1.7.2; python-slugify 5.0.2; python-snappy 0.6.1; pytoolconfig 1.2.5; pytz 2023.3.post1; pyviz-comms 2.3.0; PyWavelets 1.4.1; pyxdg 0.27; PyYAML 6.0; pyzmq 23.2.0; QDarkStyle 3.0.2; qstylizer 0.2.2; QtAwesome 1.2.2; qtconsole 5.4.2; QtPy 2.2.0; queuelib 1.5.0; regex 2022.7.9; requests 2.31.0; requests-file 1.5.1; requests-toolbelt 1.0.0; responses 0.13.3; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rope 1.7.0; Rtree 1.0.1; ruamel.yaml 0.17.21; ruamel-yaml-conda 0.17.21; s3fs 2023.4.0; safetensors 0.3.2; scikit-image 0.20.0; scikit-learn 1.3.0; scikit-learn-intelex 20230426.111612; scipy 1.11.1; Scrapy 2.8.0; seaborn 0.12.2; SecretStorage 3.3.1; Send2Trash 1.8.0; service-identity 18.1.0; setuptools 68.0.0; sip 6.6.2; six 1.16.0; smart-open 5.2.1; sniffio 1.2.0; snowballstemmer 2.2.0; sortedcontainers 2.4.0; soupsieve 2.4; Sphinx 5.0.2; sphinxcontrib-applehelp 1.0.2; sphinxcontrib-devhelp 1.0.2; sphinxcontrib-htmlhelp 2.0.0; sphinxcontrib-jsmath 1.0.1; sphinxcontrib-qthelp 1.0.3; sphinxcontrib-serializinghtml 1.1.5; spyder 5.4.3; spyder-kernels 2.4.4; SQLAlchemy 1.4.39; stack-data 0.2.0; statsmodels 0.14.0; sympy 1.11.1; tables 3.8.0; tabulate 0.8.10; TBB 0.2; tblib 1.7.0; TELR 1.0; tenacity 8.2.2; terminado 0.17.1; text-unidecode 1.3; textdistance 4.2.1; texttable 1.7.0; threadpoolctl 2.2.0; three-merge 0.1.1; tifffile 2023.4.12; tinycss2 1.2.1; tldextract 3.2.0; t,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2706:6346,validat,validator,6346,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2706,1,['validat'],['validator']
Security,"<!-- Please give a clear and concise description of what the bug is: -->; When I use the `scanpy.datasets.ebi_expression_atlas`, I got an error `HTTP Error 500: `. My python version is 3.6.10, and I also reproduced it on google colab. ; <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; adata = sc.datasets.ebi_expression_atlas(""E-MTAB-4888""); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; HTTPError Traceback (most recent call last); <ipython-input-6-0ae186d1a0d7> in <module>; ----> 1 adata = sc.datasets.ebi_expression_atlas(""E-MTAB-4888""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in ebi_expression_atlas(accession, filter_boring); 117 pass; 118 ; --> 119 download_experiment(accession); 120 ; 121 logg.info(f""Downloaded {accession} to {experiment_dir.absolute()}""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in download_experiment(accession); 41 ; 42 _download(; ---> 43 download_url + ""experiment-design"", experiment_dir / ""experimental_design.tsv"",; 44 ); 45 _download(. ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/readwrite.py in _download(url, path); 877 ; 878 try:; --> 879 urlretrieve(url, str(path), reporthook=update_to); 880 except Exception:; 881 # Make sure file doesn’t exist half-downloaded. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlretrieve(url, filename, reporthook, data); 246 url_type, path = splittype(url); 247 ; --> 248 with contextlib.closing(urlopen(url, data)) as fp:; 249 headers = fp.info(); 250 . ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context); 221 else:; 222 opener = _opener; --> 223 return opener.open(url, data, timeout); 224 ; 225 def install_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1221:872,access,accession,872,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1221,3,['access'],['accession']
Security,"<!-- Please give a clear and concise description of what the bug is: -->; When using `sc.pl.scatter()` and providing an existing axis object, the legend doesn't always appear correctly and cannot be accessed. ; This doesn't seem to happen with a categorial coloring however, only with a continous colormap. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; This code works as expected:; ```python; sc.pp.calculate_qc_metrics(adata_raw, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True); sc_fig, (sc_ax1, sc_ax2) = plt.subplots(1,2, figsize=(12,5)); sc.pl.scatter(adata_raw, 'total_counts','n_genes_by_counts', color='batch', size = 10, ax=sc_ax1, show=False, title=""all counts""); sc_ax1.get_legend().remove(); sc.pl.scatter(adata_raw[adata_raw.obs['total_counts']<1000],'total_counts','n_genes_by_counts', color='batch', size = 10, ax=sc_ax2, show=False, title=""< 1000 counts""); plt.show(); ```; It creates some metrics and stores them in `adata_raw.obs`, then plots these metrics for all counts and for counts < 1000 on the two axes created by `plt.subplots()`. The legend from the first axis is then removed.; This is an example of this output:; ![image](https://user-images.githubusercontent.com/50995210/83322157-ac9b4c00-a255-11ea-9861-8974b535cac3.png). Now the code that doesn't work:; ```python; sc_fig, (sc_ax1, sc_ax2) = plt.subplots(1,2, figsize=(12,5)); sc.pl.scatter(adata_raw, 'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax1, show=False, title=""all counts""); #sc_ax1.get_legend().remove(); sc.pl.scatter(adata_raw[adata_raw.obs['total_counts']<1000],'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax2, show=False, title=""< 1000 counts""); plt.show(); ```. Essentially the same thing but colored by the percentage of mitochondrial counts.; Only one legend seems to be drawn and this one is not looking as expected. Plus, I cannot remove the legend from the first plot. ; Th",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1258:199,access,accessed,199,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1258,1,['access'],['accessed']
Security,"<!-- What kind of feature would you like to request? -->; - [X] Additional function parameters / changed functionality / changed defaults?; - [X] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [X] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; t-SNE is an interative algorithm, and takes numerous iterations to converge, particularly on larger datasets. For example, if MulticoreTSNE is installed, it accepts `n_iter=30000` as opposed to the default `n_iter=1000`. It would be nice to have this parameter exposed. For larger datasets of say 200K cells, 1000 iterations isn't enough to fully converge to its final compact cluster shapes. . Alternatively, is it possible to pass in a kwargs to scanpy tools that wrap other algorithms, so that the advanced user can flexibly look up [additional MulticoreTSNE parameters](https://github.com/DmitryUlyanov/Multicore-TSNE/blob/62dedde52469f3a0aeb22fdd7bce2538f17f77ef/MulticoreTSNE/__init__.py#L55) to modify, without needing to exhaustively enumerate all parameters in the scanpy wrapper?. Finally, it would be even better to have the faster FFT-based tsne to generalize to millions of cells, the most recent re-implementation being https://github.com/pavlin-policar/openTSNE. In the mean time, one has to overwrite the `.X_tsne` attribute after running these other tools separately.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1150:730,expose,exposed,730,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1150,1,['expose'],['exposed']
Security,"<!-- What kind of feature would you like to request? -->; - [x] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; Hey,; currently, when trying to use plotting functions that require categorical obs columns (for example `sc.pl.clustermap` `obs_keys` parameter), but one passes a boolean column key in `.obs,` scanpy will raise an error (or pandas does but the origin is in scanpy's codebase): `AttributeError: Can only use .cat accessor with a 'category' dtype`. Would it be possible to let the passed key be from a column of `dtype bool` as well? Are there any downsides? Happy to provide more detail if needed.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2249:782,access,accessor,782,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2249,1,['access'],['accessor']
Security,"<!-- What kind of feature would you like to request? -->; - [x] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [x] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ x] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; ... 1. exposed a setting to prevent `sc.pp.<fn>` from saving with a ""prefix"" (default filename) if `type(save) == str`. Why?; I don't want my files having that prefix. . 2. please add PHATE and magic-impute to embedding options :)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2450:477,expose,exposed,477,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2450,1,['expose'],['exposed']
Security,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3051; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. TODO:. - [x] release notes; - [x] some added text explaining things; - [x] run internet tests, implement caching for datasets. Optional:. 1. continue to not run the internet tests in CI. A side effect of this PR is that our tests get less flaky by not running the flaky `ebi_expression_atlas` doctest; 2. run internet tests in CI; 1. add caching to CI; 2. make sure the dataset functions don’t download already-downloaded data; 3. validate cached data instead; 4. run the internet tests (with caching) in CI. ## [Rendered](https://icb-scanpy--3060.com.readthedocs.build/en/3060/api/datasets.html)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3060:917,validat,validate,917,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3060,1,['validat'],['validate']
Security,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`); - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2801:624,expose,exposed,624,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801,1,['expose'],['exposed']
Security,"<!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->; ...; Since I'm writing an extension that performs some analysis on neighbor graph I'm a bit confused about the current status of scanpy's way to store that information. Will connectivity matrix always be stored into `adata.obsp` making `adata.uns['neighbors']['connectivities']` deprecated? I always need to access the connectivity sparse matrix, as far as I understand the path will be. ```python; conn_key = adata.uns[neighbor_key][f'{neighbor_key}_connectivities']; adata.obsp[neighbor_key][conn_key]; ```. except when no `neighbor_key` is given and matrix is `adata.obsp['connectivities']`, correct?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1176:485,access,access,485,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1176,1,['access'],['access']
Security,"= 6.6%; Scrublet finished (0:00:14); ```. I'm still not sure what actually caused the problem, but it seems that some dependency inconsistency occurred when performing PCA within the pipeline. Perhaps some package required for the `sc.pp.scrublet()` pipeline needs to be updated to a newer version?. Here are the details of the packages in the virtual environment when I ran the code on my desktop (failed case):; ```; channels:; - pytorch; - plotly; - conda-forge; - bioconda; - defaults; dependencies:; - anndata=0.10.7; - anyio=4.4.0; - appnope=0.1.4; - argcomplete=3.3.0; - argh=0.31.2; - argon2-cffi=23.1.0; - argon2-cffi-bindings=21.2.0; - arpack=3.8.0; - array-api-compat=1.7.1; - arrow=1.3.0; - asttokens=2.4.1; - async-lru=2.0.4; - attrs=23.2.0; - babel=2.14.0; - beautifulsoup4=4.12.3; - biopython=1.83; - blas=2.120; - blas-devel=3.9.0; - bleach=6.1.0; - blosc=1.21.5; - brotli=1.1.0; - brotli-bin=1.1.0; - brotli-python=1.1.0; - bzip2=1.0.8; - c-ares=1.28.1; - c-blosc2=2.14.4; - ca-certificates=2024.6.2; - cached-property=1.5.2; - cached_property=1.5.2; - certifi=2024.6.2; - cffi=1.16.0; - charset-normalizer=3.3.2; - colorama=0.4.6; - colorcet=3.1.0; - colorful=0.5.6; - comm=0.2.2; - contourpy=1.2.1; - cycler=0.12.1; - debugpy=1.8.1; - decorator=5.1.1; - defusedxml=0.7.1; - dill=0.3.8; - dnspython=2.6.1; - entrypoints=0.4; - et_xmlfile=1.1.0; - exceptiongroup=1.2.0; - executing=2.0.1; - filelock=3.14.0; - fonttools=4.53.0; - fqdn=1.5.1; - freetype=2.12.1; - get-annotations=0.1.2; - gffpandas=1.2.2; - gffutils=0.13; - glpk=5.0; - gmp=6.3.0; - gmpy2=2.1.5; - h11=0.14.0; - h2=4.1.0; - h5py=3.11.0; - hdf5=1.14.3; - hpack=4.0.0; - httpcore=1.0.5; - httpx=0.27.0; - hyperframe=6.0.1; - icu=73.2; - idna=3.7; - igraph=0.10.12; - importlib-metadata=7.1.0; - importlib_metadata=7.1.0; - importlib_resources=6.4.0; - ipykernel=6.29.4; - ipython=8.25.0; - isoduration=20.11.0; - jedi=0.19.1; - jinja2=3.1.4; - joblib=1.4.2; - json5=0.9.25; - jsonpointer=2.4; - jsonschema=4.22.0; - jso",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:3144,certificate,certificates,3144,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['certificate'],['certificates']
Security,=3.6; - markdown-it-py==3.0.0; - mdurl==0.1.2; - ml-dtypes==0.3.2; - namex==0.0.8; - opt-einsum==3.3.0; - optree==0.11.0; - rich==13.7.1; - tensorboard==2.16.2; - tensorboard-data-server==0.7.2; - tensorflow==2.16.1; - tensorflow-io-gcs-filesystem==0.37.0; - termcolor==2.4.0; - werkzeug==3.0.3; - wrapt==1.16.0; ```. The virtual environment on my laptop (successful case):; ```; channels:; - pytorch; - bioconda; - conda-forge; dependencies:; - adjusttext=1.0.4; - anndata=0.10.5.post1; - anyio=3.7.1; - aom=3.5.0; - appnope=0.1.3; - argcomplete=3.3.0; - argh=0.31.2; - argon2-cffi=23.1.0; - argon2-cffi-bindings=21.2.0; - arpack=3.8.0; - array-api-compat=1.4.1; - arrow=1.2.3; - asttokens=2.2.1; - async-lru=2.0.4; - attrs=23.1.0; - babel=2.12.1; - backcall=0.2.0; - backports=1.0; - backports.functools_lru_cache=1.6.5; - beautifulsoup4=4.12.2; - bleach=6.0.0; - blosc=1.21.4; - brotli=1.0.9; - brotli-bin=1.0.9; - brotli-python=1.0.9; - bzip2=1.0.8; - c-ares=1.19.1; - c-blosc2=2.10.2; - ca-certificates=2024.6.2; - cached-property=1.5.2; - cached_property=1.5.2; - cairo=1.18.0; - certifi=2024.6.2; - cffi=1.15.1; - charset-normalizer=3.2.0; - colorama=0.4.6; - colorcet=3.0.1; - colorful=0.5.4; - comm=0.1.4; - contourpy=1.1.0; - cryptography=41.0.4; - cycler=0.11.0; - dav1d=1.2.1; - debugpy=1.6.8; - decorator=5.1.1; - defusedxml=0.7.1; - dill=0.3.7; - dnspython=2.4.2; - entrypoints=0.4; - et_xmlfile=1.1.0; - exceptiongroup=1.1.3; - executing=1.2.0; - expat=2.5.0; - ffmpeg=6.0.0; - filelock=3.12.2; - font-ttf-dejavu-sans-mono=2.37; - font-ttf-inconsolata=3.000; - font-ttf-source-code-pro=2.038; - font-ttf-ubuntu=0.83; - fontconfig=2.14.2; - fonts-conda-ecosystem=1; - fonts-conda-forge=1; - fonttools=4.42.1; - fqdn=1.5.1; - freetype=2.12.1; - fribidi=1.0.10; - get-annotations=0.1.2; - gettext=0.21.1; - gffutils=0.13; - glpk=5.0; - gmp=6.3.0; - gmpy2=2.1.2; - gnutls=3.7.8; - graphite2=1.3.13; - h11=0.14.0; - h2=4.1.0; - h5py=3.9.0; - harfbuzz=7.3.0; - hdf5=1.14.1; - hpack=4.0.0; - ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:9233,certificate,certificates,9233,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['certificate'],['certificates']
Security,"@falexwolf, @flying-sheep . From the discussion on #45, I think some more discussion should be had as to what imputation methods are to be included in scanpy. Validation of and comparisons between the currently available imputation methods are both severely lacking---I only know of [1][2][3][4][5], none of which include comprehensive benchmarks, and the updated MAGIC (#187) article at Cell doesn't include relevant comparisons between current methods. . I'd be very interested in hearing/having an open discussion about the motivation, benefits, and limitations of the various imputation methods available. [1]: Zhang and Zhang, 2017. https://www.biorxiv.org/content/early/2017/12/31/241190; [2]: Lopez et al. 2018, https://www.biorxiv.org/content/early/2018/03/30/292037; [3]: Li and Li, 2018. https://www.nature.com/articles/s41467-018-03405-7; [4]: Eraslan et al. 2018. https://www.biorxiv.org/content/early/2018/04/13/300681; [5]: Huang et al. 2018. https://www.biorxiv.org/content/early/2018/03/08/138677",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/189:159,Validat,Validation,159,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/189,1,['Validat'],['Validation']
Security,Access UMAP Coordinates through API?,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/911:0,Access,Access,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/911,1,['Access'],['Access']
Security,Access to Diffusion Map methods (and other embedding methods) as Scikit-Learn style API,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3054:0,Access,Access,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3054,1,['Access'],['Access']
Security,Accessing tSNE coordinates different between sliced and unsliced AnnData,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/778:0,Access,Accessing,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/778,1,['Access'],['Accessing']
Security,Add sanitize to score_genes,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3262:4,sanitiz,sanitize,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3262,1,['sanitiz'],['sanitize']
Security,Add some data access helpers to utils,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/619:14,access,access,14,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/619,1,['access'],['access']
Security,"Added DCA integration, as discussed in #142 . For denoising, uses can call:. `sc.pp.dca(adata)`. which replaces adata.X inplace. For latent representations:. `sc.pp.dca(adata, mode='latent')`. can be called, which adds 'X_dca' to adata.obsm. Fixes #142 . This integration uses new DCA API (>= 0.2.1). All DCA API arguments are exposed and usable in scanpy integration.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/186:327,expose,exposed,327,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/186,1,['expose'],['exposed']
Security,Addresses hashsolo pre_existing_cluster bugs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1483:10,hash,hashsolo,10,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1483,1,['hash'],['hashsolo']
Security,"As discussed with @falexwolf this PR introduces a new Ingest class to process new small pieces of data. > sc.pp.neighbors(adata) # adata is huge with 1M observations; > ; > ingest = sc.Ingest(adata) # represents the existing data, learned annotations, structure and exposes it to functionality that allows to ingest new data very quickly; > ; > adata_small.obsm['X_model'] = model(adata_small.X); > ; > ingest.neighbors(adata_small) # adata_small with just 1000 observations; > ; > now, we have the updated neighbors graph with 1,001,000 observations; > we want to do the same things as always; > ; > by leveraging the neighbors of the new data within the old data, ; > map the new data into the embedding (umap), by just computing a correction to the existing embedding: a new data point gets the mean position of its k nearest neighbors; > ; > ingest.umap(adata_small); > ; > update the clustering (mapping the 1000 observations into the existing clusters): a new data point maps into a cluster if the majority of its neighbors is a member of the cluster ; > ; > ingest.louvain(adata_small)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/651:266,expose,exposes,266,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/651,1,['expose'],['exposes']
Security,AttributeError: Can only use .str accessor with string values!,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3261:34,access,accessor,34,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3261,1,['access'],['accessor']
Security,"CT_sub2 = sc.read('C:/Users/Park_Lab/Documents/ACT_sub2.h5ad') # Scanpy proceeded data; ACT_sub2; AnnData object with n_obs × n_vars = 2636 × 5000; obs: 'leiden', 'n_genes', 'n_genes_by_counts', 'total_counts', 'total_counts_mt', 'pct_counts_mt', 'total_counts_rpl', 'pct_counts_rpl', 'total_counts_rps', 'pct_counts_rps'; var: 'Accession', 'Chromosome', 'End', 'Start', 'Strand', 'n_cells', 'mt', 'rpl', 'rps', 'n_cells_by_counts', 'mean_counts', 'pct_dropout_by_counts', 'total_counts', 'highly_variable', 'means', 'dispersions', 'dispersions_norm', 'mean', 'std'; uns: 'hvg', 'leiden', 'leiden_colors', 'neighbors', 'pca', 'rank_genes_groups', 'umap'; obsm: 'X_pca', 'X_umap'; varm: 'PCs'; layers: 'ambiguous', 'matrix', 'spliced', 'unspliced'; obsp: 'connectivities', 'distances'. adata = sc.read_loom(filename='C:/Users/Park_Lab/Documents/cellsorted_Apc_Cracd_Tumor_KPVDV.loom') # raw data; adata.var_names_make_unique(); adata; AnnData object with n_obs × n_vars = 13499 × 32285; var: 'Accession', 'Chromosome', 'End', 'Start', 'Strand'; layers: 'matrix', 'ambiguous', 'spliced', 'unspliced'. adata.var['highly_variable']=ACT_sub2.var['highly_variable']; adata = adata[:, adata.var.highly_variable] # subset the raw data by ACT_sub2's highly variable genes. KeyError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_9544/4098982234.py in <module>; ----> 1 adata = adata[:, adata.var.highly_variable]; 2 adata. ~\anaconda3\envs\Python3812\lib\site-packages\anndata\_core\anndata.py in __getitem__(self, index); 1114 def __getitem__(self, index: Index) -> ""AnnData"":; 1115 """"""Returns a sliced view of the object.""""""; -> 1116 oidx, vidx = self._normalize_indices(index); 1117 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1118 . ~\anaconda3\envs\Python3812\lib\site-packages\anndata\_core\anndata.py in _normalize_indices(self, index); 1095 ; 1096 def _normalize_indices(self, index: Optional[Index]) -> Tuple[slice, slice]:; -> 1097 return _normalize_indices(index, se",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2095:1779,Access,Accession,1779,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2095,1,['Access'],['Accession']
Security,Cell hashing,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/797:5,hash,hashing,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/797,1,['hash'],['hashing']
Security,Cell hashing method hashsolo for scanpy,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1432:5,hash,hashing,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1432,2,['hash'],"['hashing', 'hashsolo']"
Security,"Conda installation fails silently with no error. Installation command:; ```; conda install -c bioconda scanpy; ```. Output:; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: / ; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed . UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions; ```. Increasing the verbosity did not help. Using older python version did not helpeither.. It looks like the metadata are not correct but I am not able to validate this. I tried miniconda anaconda clean installs and I had no luck whatsoever. Pip install works fine.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1298:975,validat,validate,975,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1298,1,['validat'],['validate']
Security,"Currently it’s almost a MVP. What do you people think (especially @mbuttner)? Possible improvements:. - [x] **Heuristic for neighborhood size**; - [x] Expose more data: E.g. a column in `.obs` with the corrected p values; - [ ] **Better docs**; - [ ] **groupby**; - [ ] Mean of multiple samples instead of whole data; - [ ] Adapt to cells that appear in no neighborhoods; - [ ] Speedups?. I guess at least the heuristic and the docs have to go in!. I also don’t know if relying on the previous `neighbors` call is a good idea. Its default is 15 Neighbors, and even for a small (200 cells) dataset, the number the heuristic determined was 75.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/364:151,Expose,Expose,151,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/364,1,['Expose'],['Expose']
Security,"Currently, `sc.pl.violin` does not support support reading colors from `adata['uns']`, this PR fixes it.; Prior to this PR, the below ""works"":; ```python; sc.pl.violin(adata, keys=['initial_size'], stripplot=True, groupby='initial_size'); ```; i.e. takes about ~30 seconds to plot, because `groupby` is not categorical (there's no check), now; it raises `AttributeError: Can only use .cat accessor with a 'category' dtype` because of the color addition.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1029:389,access,accessor,389,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1029,1,['access'],['accessor']
Security,"Currently, `sc.tl.louvain` etc return cluster assignments as a Categorical with dtype `str` resulting in incompatibility with matplotlib color sequences. For example, the following code raises a ValueError:. ```python; import numpy as np; import scanpy as sc; import matplotlib.pyplot as plt. adata = sc.AnnData(np.random.normal(size=(100,2))); sc.pp.neighbors(adata); sc.tl.louvain(adata); plt.scatter(adata.X[:,0], adata.X[:,1], c=adata.obs['louvain']); ```. The error is: `ValueError: RGBA values should be within 0-1 range`. Funnily enough, this used to work due to a bug in matplotlib that was fixed in https://github.com/matplotlib/matplotlib/pull/13913. Note, the following code works as intended:. ```python; plt.scatter(adata.X[:,0], adata.X[:,1], c=adata.obs['louvain'].astype(int)); ```. I would have submitted a PR changing this behavior had I not noticed that returning cluster assignments as `str` is explicitly checked here:. https://github.com/theislab/scanpy/blob/78125e6355c0cd2c4ae930495829282eea6f4a52/scanpy/tools/_utils_clustering.py#L11-L23. This brings up a larger design question in scanpy / anndata: *Why are arrays of numerics routinely converted to strings representing numbers?*. In `https://github.com/theislab/anndata/issues/311` I found a case where converting arrays of numerics to strings creates a bug when assigning to AnnData `obsm` with DataFrames with a RangeIndex. In that case, I understand there's a desire to avoid ambiguity in positional vs label indexing, but that issue was solved in pandas with the `.loc` and `.iloc` conventions. Why not carry that forward?. In this case, why not just return cluster assignments as arrays of numerics as is done in `sklearn.cluster`? . I think following these conventions will make both tools much more accessible to the general Python data science community.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1030:1785,access,accessible,1785,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1030,1,['access'],['accessible']
Security,"Dear all,. I had the following error when going through the PBMC3K tutorial. Everything was fine until I got to this step (Embedding the neighbourhood graph):. ```py; sc.tl.paga(adata); ```. which raises the following:. <details><summary>KeyError: 'louvain', Traceback:</summary>. ```pytb; running PAGA; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); C:\Anaconda\lib\site-packages\pandas\core\indexes\base.py in get_loc(self, key, method, tolerance); 2656 try:; -> 2657 return self._engine.get_loc(key); 2658 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'louvain'. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-31-5aa170e493c3> in <module>; ----> 1 sc.tl.paga(adata). C:\Anaconda\lib\site-packages\scanpy\tools\_paga.py in paga(adata, groups, use_rna_velocity, model, copy); 92 adata.uns['paga'] = {}; 93 if not use_rna_velocity:; ---> 94 paga.compute_connectivities(); 95 adata.uns['paga']['connectivities'] = paga.connectivities; 96 adata.uns['paga']['connectivities_tree'] = paga.connectivities_tree. C:\Anaconda\lib\site-packages\scanpy\tools\_paga.py in compute_connectivities(self); 126 def compute_connectivities(self):; 127 if self._model == 'v1.2':; --> 128 return self._compute_connectivities_v1_2(); 129 elif self._model == 'v1.0':; 130 return self._compute_connectivities_v1_0(). C:\Anaconda\lib\site-packages\scanpy\tools\_paga.py in _compute_connectivities_v1_2(self); 141 g = utils.get_igraph_from_adjacency(ones, directed=True); 142 vc = igraph.VertexClustering(; --> 143 g, membership=self._adata.obs[self._groups_key",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/755:793,hash,hashtable,793,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/755,2,['hash'],['hashtable']
Security,"Dear author,. Can bbknn integrate multiple variables？such as Platform and Individual. Looking forward your reply; Siyu. >>> sc.external.pp.bbknn(mydata, batch_key=[""Platform"",""Individual_2""],n_pcs=50,set_op_mix_ratio=ratio). computing batch balanced neighbors; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/scCell2/miniconda3/lib/python3.8/site-packages/scanpy/external/pp/_bbknn.py"", line 134, in bbknn; return bbknn(; File ""/home/scCell2/miniconda3/lib/python3.8/site-packages/bbknn/__init__.py"", line 110, in bbknn; if batch_key not in adata.obs:; File ""/home/scCell2/miniconda3/lib/python3.8/site-packages/pandas/core/generic.py"", line 1721, in __contains__; return key in self._info_axis; File ""/home/scCell2/miniconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py"", line 4071, in __contains__; hash(key); TypeError: unhashable type: 'list",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2004:850,hash,hash,850,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2004,1,['hash'],['hash']
Security,"Engine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; >>> adata.raw.var['CD14']; Traceback (most recent call last):; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2646, in get_loc; return self._engine.get_loc(key); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:3751,hash,hashtable,3751,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,1,['hash'],['hashtable']
Security,"External has outlived its usefulness with the emergence of the scverse ecosystem, and should be removed. ^ This text should be expanded. # TODO. - [ ] Finalize methods to keep/ merge into main namespace; - Currently: `scanorama`, `hashsolo`, `scrublet` or equivalent, maybe `bbknn`; - [ ] Make removal plan (probably deprecation message + maybe email to authors) for; - [ ] `harmony`; - [ ] `dca`; - [ ] `magic`; - [ ] `phate`; - [ ] `palantir`; - [ ] `trimap`; - [ ] `sam`; - [ ] `phenograph`; - [ ] `wishbone`; - [ ] `sandbag`; - [ ] `cyclone`; - [ ] Export functionality for; - [ ] `spring_project`; - [ ] `cellbrowser`. ```[tasklist]; ### Sub-issues; - [ ] #173; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2717:231,hash,hashsolo,231,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2717,1,['hash'],['hashsolo']
Security,Fix default `number_of_noise_barcodes` for hashsolo,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2190:43,hash,hashsolo,43,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2190,1,['hash'],['hashsolo']
Security,"Fixes for deprecation warnings from anndata`v0.6.22`. This is mostly by replacing access to `.X` with access via `{obs,var}_vector` or `sc.get.obs_df`. Supercedes #713, fixes #700 and #690. Functions changed:. * `sc.pl.violin`; * Dataframe for plotting now constructed with `obs_df`, access to `adata.X` no longer used.; * `sc.pl.scatter`; * Changed default `layer` from `""X""` to `""None""`. `""X""` is still supported, but should throw a deprecation warning if it's explicitly used.; * Replace usage of `._get_obs_array` with `.obs_vector`; * `sc.pl._tools.scatterplots.plot_scatter`; * Normalized access to layers, now sparse and dense should similarly.; * `sc.get.obs_df`; * Added support for `use_raw`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/730:82,access,access,82,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/730,4,['access'],['access']
Security,"Good Evening,. My goal here is to get either a Gene barcode or dense matrix from a .h5 file from 10x. I'm currently trying to use the .read_10x_h5() function to help me achieve this. To my understanding I just need to input the file name into the function. When I run my code (See below), I get an error stating that ""Variable names are not unique. To make them unique, call `.var_names_make_unique`."" From the documentation I don't see a way that I can call .var_names_make_unique(). Is there some preprocessing that I'm missing?. ```python; user_input = input(""Enter the path of your file: ""); def convert_h5_to_adata(filename):; filename = str(filename); if os.access(filename, os.R_OK):; sc.read_10x_h5(filename); return; convert_h5_to_adata(user_input); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/534:664,access,access,664,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/534,1,['access'],['access']
Security,Got `AttributeError: Can only use .str accessor with string values!` when initiating solo model,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:39,access,accessor,39,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessor']
Security,Hashsolo pre_existing_cluster argument doesn't work,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1481:0,Hash,Hashsolo,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1481,1,['Hash'],['Hashsolo']
Security,"Hello everyone,. In order to get eigenvalues of the PCs after running PCA, I modified the simple.py code by adding a line to return pca_.explained_variance_ and store it in adata.uns in the pca function definition. This might be useful for users wanting to access eigenvalues of the PCs, which is not possible as far as I know with only the explained_variance_ratio. Would it be a good idea to open a pull request for that?. else:; logg.m('compute PCA with n_comps =', n_comps, r=True, v=4); result = pca(adata.X, n_comps=n_comps, zero_center=zero_center,; svd_solver=svd_solver, random_state=random_state,; recompute=recompute, mute=mute, return_info=True); X_pca, components, pca_variance_ratio, pca_eigenval = result; adata.obsm['X_pca'] = X_pca; adata.varm['PCs'] = components.T; adata.uns['pca_eigenvalues']=pca_eigenval; adata.uns['pca_variance_ratio'] = pca_variance_ratio; logg.m(' finished', t=True, end=' ', v=4). ....... if False if return_info is None else return_info:. return X_pca, pca_.components_, pca_.explained_variance_ratio_, pca_.explained_variance_; else:; return X_pca. Thank you!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/86:257,access,access,257,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/86,1,['access'],['access']
Security,"Hello, . Whenever I try to plot gene expression I get the following KeyError, regardless of the gene/plotting function. I have confirmed that all genes I have tried do exist in adata.var_names. Id like to highlight that my adata object was created from h5ad converted from seurat. How can I check the keys? . Thank you!. Lucy. ---. ```python; sc.pl.draw_graph(myeloid, color=['SPP1']); ```. ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /software/anaconda3/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2645 try:; -> 2646 return self._engine.get_loc(key); 2647 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'SPP1'. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-94-440b32bde3cc> in <module>(); ----> 1 sc.pl.draw_graph(myeloid, color=['SPP1']). /software/anaconda3/lib/python3.6/site-packages/scanpy/plotting/_tools/scatterplots.py in draw_graph(adata, layout, **kwargs); 701 ); 702 ; --> 703 return embedding(adata, basis, **kwargs); 704 ; 705 . /software/anaconda3/lib/python3.6/site-packages/scanpy/plotting/_tools/scatterplots.py in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, layer, projection, img_key, crop_coord, alpha_img, bw, library_id, color_map, palette, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, vmax, vmin, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2018:907,hash,hashtable,907,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2018,1,['hash'],['hashtable']
Security,Here is a stab at adding cell hashing demultiplexing to scanpy. This will address https://github.com/theislab/scanpy/issues/351.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/797:30,hash,hashing,30,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/797,1,['hash'],['hashing']
Security,"Hi Guys,; Thanks for developing such a wonderful tool in python.; Do you mind to point me on how to install scanpy under anaconda environment? currently ""conda search scanpy"" doesn't find it?!; Thanks; Hashem",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/29:202,Hash,Hashem,202,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/29,1,['Hash'],['Hashem']
Security,"Hi I got this warning when I used sc.pl.scatter:; ```; .../scanpy/plotting/_anndata.py:311: DeprecationWarning: Use obs_vector instead of _get_obs_array, _get_obs_array will be removed in the future.; x_arr = adata._get_obs_array(x, use_raw=use_raw, layer=layers[0]); .../anndata/base.py:1618: FutureWarning: In a future version of AnnData, access to `.X` by passing `layer='X'` will be removed. Instead pass `layer=None`.; FutureWarning; ```. I would like to know if the plots generated with this warning are correct.; Thanks.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/690:341,access,access,341,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/690,1,['access'],['access']
Security,"Hi guys,; I am trying to open a .loom file from : http://scope.aertslab.org/#/53d2bb24-9335-48d4-b874-eab05dd8c690/Aerts_Fly_AdultBrain_Filtered_57k.loom/gene. I can open the .loom file by:. ```py; loom_object = loompy.connect('Aerts_Fly_AdultBrain_Filtered_57k.loom', validate=False); ```. However i would like to open it with scanpy by:. ```py; loom_file = sc.read_loom('Aerts_Fly_AdultBrain_Filtered_57k.loom', validate=False); ```. and i get the following error:. ```pytb; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-3a0e0ee3248f> in <module>(); ----> 1 loom_file=sc.read_loom('Aerts_Fly_AdultBrain_Filtered_57k.loom',validate=False). ~\AppData\Local\Continuum\anaconda3\lib\site-packages\anndata\readwrite\read.py in read_loom(filename, sparse, cleanup, X_name, obs_names, var_names, dtype, **kwargs); 184 var=var,; 185 layers=layers,; --> 186 dtype=dtype); 187 return adata; 188 . ~\AppData\Local\Continuum\anaconda3\lib\site-packages\anndata\base.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, oidx, vidx); 670 layers=layers,; 671 dtype=dtype, shape=shape,; --> 672 filename=filename, filemode=filemode); 673 ; 674 def _init_as_view(self, adata_ref: 'AnnData', oidx: Index, vidx: Index):. ~\AppData\Local\Continuum\anaconda3\lib\site-packages\anndata\base.py in _init_as_actual(self, X, obs, var, uns, obsm, varm, raw, layers, dtype, shape, filename, filemode); 848 # annotations; 849 self._obs = _gen_dataframe(obs, self._n_obs,; --> 850 ['obs_names', 'row_names', 'smp_names']); 851 self._var = _gen_dataframe(var, self._n_vars, ['var_names', 'col_names']); 852 . ~\AppData\Local\Continuum\anaconda3\lib\site-packages\anndata\base.py in _gen_dataframe(anno, length, index_names); 285 _anno = pd.DataFrame(; 286 anno, index=anno[index_name],; --> 287 columns=[k for k in anno.keys() if k != index_name]); 288 break; 289 else:. ~\AppData\L",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/924:269,validat,validate,269,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/924,3,['validat'],['validate']
Security,"Hi there,. I implemented my tool hashsolo for demultiplexing cell hashing data for scanpy to address https://github.com/theislab/scanpy/issues/351. Would be great to to get this in. Let me know if this is close or way off how you would like it implemented for scanpy. associated paper if that matters: ; https://www.cell.com/cell-systems/fulltext/S2405-4712(20)30195-2. Best; Nick",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1432:33,hash,hashsolo,33,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1432,2,['hash'],"['hashing', 'hashsolo']"
Security,"Hi, this is a PR with some changes to Hashsolo, mainly the docstring:; - Rewrite some param descriptions for brevity + clarity; - Explicitly list the obs keys being added to adata; - Copy input adata if inplace=False",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2429:38,Hash,Hashsolo,38,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2429,1,['Hash'],['Hashsolo']
Security,"Hi,. I have few queries regarding scanpy. 1. As scanpy is using Louvain Leiden algorithms for clustering which optimize modularity 'Q', so how we can access and print modularity funciton?. 2. Resolution parameter gave us different number of clusters when we iterated between the best suggested 0.6-1.2. So how we know best number of cluster and how we can choose the optimum value of parameter 'resolution'?. Thanks,; Khalid",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/670:150,access,access,150,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/670,1,['access'],['access']
Security,"Howdy y'all, working on a tool to convert packages to JSON and noticed there were some functions missing their parameters in the docstring. I've updated a few that were missing for better pydoc accessibility. All param descriptions were either copied from other similar param or made based on their functionality. - [x] Tests included or not required because:. Docstring updates only. - [x] Release notes not necessary because:. No changes to logic",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2888:194,access,accessibility,194,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2888,1,['access'],['accessibility']
Security,"I am trying to access tSNE coordinates from a sliced AnnData object. `adata.obsm.X_tsne` works fine. But if I were to filter the AnnData object,`filtered_adata = adata[:, some_filter]`, and then run `filtered_adata.obsm.X_tsne`, I get the error `AttributeError: 'ArrayView' object has no attribute 'X_tsne'`. I can, however, access the coords with `filtered_adata.obsm['X_tsne']`. Is this desired behavior? I feel the API should be the same between the two.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/778:15,access,access,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/778,2,['access'],['access']
Security,"I am trying to follow the pbmc3k tutorial. I pushed through the regres_out error mentioned in #1010 , but now it fails at line: . ```python; sc.tl.leiden(adata); ```; with error : . ```pytb; running Leiden clustering. ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-46-a9ad6348435f> in <module>; ----> 1 sc.tl.leiden(adata). ~/miniconda3/envs/i529/lib/python3.7/site-packages/scanpy/tools/_leiden.py in leiden(adata, resolution, restrict_to, random_state, key_added, adjacency, directed, use_weights, n_iterations, partition_type, copy, **partition_kwargs); 138 adata.obs[key_added] = pd.Categorical(; 139 values=groups.astype('U'),; --> 140 categories=natsorted(np.unique(groups).astype('U')),; 141 ); 142 # store information on the clustering parameters. ~/miniconda3/envs/i529/lib/python3.7/site-packages/pandas/core/arrays/categorical.py in __init__(self, values, categories, ordered, dtype, fastpath); 383 ; 384 else:; --> 385 codes = _get_codes_for_values(values, dtype.categories); 386 ; 387 if null_mask.any():. ~/miniconda3/envs/i529/lib/python3.7/site-packages/pandas/core/arrays/categorical.py in _get_codes_for_values(values, categories); 2574 _, cats = _get_data_algo(categories); 2575 t = hash_klass(len(cats)); -> 2576 t.map_locations(cats); 2577 return coerce_indexer_dtype(t.lookup(vals), cats); 2578 . pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.StringHashTable.map_locations(). TypeError: Expected unicode, got numpy.str_. ```. #### Versions:; scanpy __version__ is 1.4.4.post1, everything was installed using conda in a freshly created environment.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1028:1465,hash,hashtable,1465,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1028,1,['hash'],['hashtable']
Security,"I get an error when I use sc.read_10x_mtx() to read scRNA-seq files (matrix.mtx.gz, barcodes.tsv.gz, and features.tsv.gz) generated by ""Illumina HiSeq 4000"". The function works fine when I read files generated by other 10x platforms such as ""Illumina NovaSeq 6000"". . Example:; ```python; sc.read_10x_mtx(""GSE145328_RAW""); ```. Error:; ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); ~/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3079 try:; -> 3080 return self._engine.get_loc(casted_key); 3081 except KeyError as err:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). KeyError: 2. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); <ipython-input-20-26443e0aed95> in <module>; ----> 1 rnaseq1 = sc.read_10x_mtx(""GSE145328_RAW""). ~/anaconda3/lib/python3.8/site-packages/scanpy/readwrite.py in read_10x_mtx(path, var_names, make_unique, cache, cache_compression, gex_only, prefix); 479 genefile_exists = (path / f'{prefix}genes.tsv').is_file(); 480 read = _read_legacy_10x_mtx if genefile_exists else _read_v3_10x_mtx; --> 481 adata = read(; 482 str(path),; 483 var_names=var_names,. ~/anaconda3/lib/python3.8/site-packages/scanpy/readwrite.py in _read_v3_10x_mtx(path, var_names, make_unique, cache, cache_compression, prefix); 560 else:; 561 raise ValueError(""`var_names` needs to be 'gene_symbols' or 'gene_ids'""); --> 562 adata.var['feature_types'] = genes[2].values; 563 adata.obs_names = pd.read_csv(path / f'{prefix}barcodes.tsv.gz', header=None)[; 564 0. ~/anaconda3/lib/python3.8/site-packages/pandas/core/frame",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1916:858,hash,hashtable,858,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1916,2,['hash'],['hashtable']
Security,"I have a similar issue to [this comment](https://github.com/theislab/scanpy/issues/1916#issuecomment-927497782). `Carraro=sc.read_10x_mtx('/mnt/Carraro',var_names='gene_ids')`. Switching to `gene_symbols` didn't work. Error messages:; ```; --> This might be very slow. Consider passing `cache=True`, which enables much faster reading from a cache file. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3360 try:; -> 3361 return self._engine.get_loc(casted_key); 3362 except KeyError as err:. ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). KeyError: 1. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); /tmp/ipykernel_29519/245170133.py in <module>; ----> 1 Carraro=sc.read_10x_mtx('/mnt/Carraro',var_names='gene_ids'). ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/readwrite.py in read_10x_mtx(path, var_names, make_unique, cache, cache_compression, gex_only); 452 genefile_exists = (path / 'genes.tsv').is_file(); 453 read = _read_legacy_10x_mtx if genefile_exists else _read_v3_10x_mtx; --> 454 adata = read(; 455 str(path),; 456 var_names=var_names,. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/readwrite.py in _read_legacy_10x_mtx(path, var_names, make_unique, cache, cache_compression); 491 elif var_names == 'gene_ids':; 492 adata.var_names = genes[0].values; --> 493 adata.var['gene_symbols'] = genes[1].values; 494 else:; 495 raise V",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2053:979,hash,hashtable,979,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2053,1,['hash'],['hashtable']
Security,"I have some problems with certificates. I can't find what is the default certificate location for urllib, but it is certainly not certifi location. This tries opening with standard certificates as before and if it fails it tries to use certifi.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2119:26,certificate,certificates,26,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2119,3,['certificate'],"['certificate', 'certificates']"
Security,"I just have scanpy 0.2.7 and am trying to produce bpmc3 results. BUT right at the beginning (sc.read()) the following error! I will appreciate your help.; thanks. `--------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-3-ef7315cdb8ff> in <module>(); 2 filename_genes = '/ifs/projects/proj077/backup/public_data/scanpy_tutorials_data/PBMC3K/filtered_gene_bc_matrices/hg19/genes.tsv'; 3 filename_barcodes = '/ifs/projects/proj077/backup/public_data/scanpy_tutorials_data/PBMC3K/filtered_gene_bc_matrices/hg19/barcodes.tsv'; ----> 4 adata = sc.read(filename_data, cache=True).transpose(); 5 adata.var_names = np.genfromtxt(filename_genes, dtype=str)[:, 1]; 6 adata.smp_names = np.genfromtxt(filename_barcodes, dtype=str). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read(filename_or_filekey, sheet, ext, delimiter, first_column_names, backup_url, return_dict, cache); 73 if is_filename(filename_or_filekey):; 74 data = read_file(filename_or_filekey, sheet, ext, delimiter,; ---> 75 first_column_names, backup_url, cache); 76 if isinstance(data, dict):; 77 return data if return_dict else AnnData(data). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read_file(filename, sheet, ext, delimiter, first_column_names, backup_url, cache); 364 os.makedirs(os.path.dirname(filename_cache)); 365 # write for faster reading when calling the next time; --> 366 write_dict_to_file(filename_cache, ddata, sett.file_format_data); 367 return ddata; 368 . /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in write_dict_to_file(filename, d, ext); 771 d_write[key] = value; 772 # now open the file; --> 773 wait_until_file_unused(filename) # thread-safe writing; 774 if ext == 'h5':; 775 with h5py.File(filename, 'w') as f:. /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in wait_until_file_unused(filenam",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/35:816,hash,hashem,816,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/35,1,['hash'],['hashem']
Security,"I sucessfully used mnn to correct batch effect for my datasets but I would like to know when and how can I create a copy so as to access the raw data which will be used for differential genes expression analysis for instance. In one of the scanpy tutorial it shows how to create a copy of the raw data that can be used for latter analysis by typing adata.raw = sc.pp.log1p(adata, copy=True) but when can I do that with mnn. I used the following cmd to create the batch corrected files. How can I create the adata.raw copy?. corrected = sc.pp.mnn_correct(adata1,adata2,adata3,adata4, batch_categories=[""ba1"", ""ba2"",""ba3"",""ba4""]); adata_corrected = corrected[0]. adata_corrected.write('./write1/mnn_corrected.h5ad'). Thank you very much.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/233:130,access,access,130,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/233,1,['access'],['access']
Security,"I think this should fix it – it fixes it on my machine and the tests pass. There's no reason to access raw if `use_raw` isn't passed, right?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/578:96,access,access,96,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/578,1,['access'],['access']
Security,"I think we should introduce a standardized “mask” argument to scanpy functions. This would be a boolean array (or reference to a boolean array in `obs`/ `var`) which masks out certain data entries. This can be thought of as a generalization of how highly variable genes is handled. As an example:. ```python; sc.pp.pca(adata, use_highly_variable=True); ```. Would be equivalent to:. ```python; sc.pp.pca(adata, mask=""highly_variable""); # or; sc.pp.pca(adata, mask=adata.obs[""highly_variable""]); ```. One of the big advantages of making this more widespread is that tasks which previously required using `.raw` or creating new anndata objects will be much easier. Some uses for this change:. ### Plotting. A big one is plotting. Right now if you want to show gene expression for a subset of cells, you have to manually work with the Matplotlib Axes:. ```python; ax = sc.pl.umap(pbmc, show=False); sc.pl.umap(; pbmc[pbmc.obs[""louvain""].isin(['CD4 T cells', 'B cells', 'CD8 T cells',])],; color=""LDHB"",; ax=ax,; ); ```. If a user could provide a mask, this could be reduced, and would make plotting more than one value possible:. ```python; sc.pl.umap(; pbmc,; color=['LDHB', 'LYZ', 'CD79A’],; mask=pbmc.obs[""louvain""].isin(['CD4 T cells', 'B cells', 'CD8 T cells’,]),; ); ```. ### Other uses. This has come up before in a few contexts:. * Performing normalization on just some variables https://github.com/scverse/scanpy/issues/2142#issuecomment-1046729522; * Selecting a subset of variables for DE tests: https://github.com/scverse/scanpy/issues/1744; * See also https://github.com/scverse/scanpy/issues/748; * Changing use_raw https://github.com/scverse/scanpy/issues/1798#issuecomment-819998988. ## Implementation. I think this could fit quite well into the `sc.get` getter/ validation functions (https://github.com/scverse/scanpy/issues/828#issuecomment-560072919).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2234:1776,validat,validation,1776,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2234,1,['validat'],['validation']
Security,"I wanted to use ` sc.datasets.ebi_expression_atlas` but I get an error that seems to be related to code only valid in python 3.8. This error happens with python version `3.6.7`. Code:; ```python; adata = sc.datasets.ebi_expression_atlas(""E-GEOD-98556""); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; /scanpy/scanpy/datasets/_ebi_expression_atlas.py in download_experiment(accession); 41; 42 _download(; ---> 43 download_url + ""experiment-design"", experiment_dir / ""experimental_design.tsv"",; 44 ); 45 _download(. /scanpy/scanpy/readwrite.py in _download(url, path); 877 except Exception:; 878 # Make sure file doesn’t exist half-downloaded; --> 879 path.unlink(missing_ok=True); 880 raise; 881. TypeError: unlink() got an unexpected keyword argument 'missing_ok'. ...; ```; `missing_ok` was added to python v. 3.8 (https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1082:431,access,accession,431,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1082,1,['access'],['accession']
Security,"I would like to get an opinion from @gokceneraslan, @adamgayoso (who implemented this originally), or someone else more familiar in hvg selection here. I feel like we should probably have multiple methods for this, which we expose via a kwarg. I'm not confident median rank makes sense as a value here. I think there are assumptions about what kinds of values a rank can have that get broken by taking the median. Is the method for aggregating hvgs from multiple batches here reasonable? For reference, a similar code block can be found in `_highly_variable_genes_seurat_v3`, which says this is the method used in `SelectIntegrationFeatures` from Seurat. _Originally posted by @ivirshup in https://github.com/theislab/scanpy/pull/1715#discussion_r736690390_. @jlause commented:; I agree that exposing multiple options could make sense here. Any opinion @gokceneraslan and @adamgayoso which ones we should implement / which one should be the default?. I just copied this part from the seurat_v3 batch integration, so I don't have an expert opinion - but if I remember correctly, the other flavors use dispersions_norm to break ties instead of using the median rank. If I read the code correctly, this is the within-batch dispersion averaged over batches. We could also do something similar here: Compute residual variance within each batch, take the average across batches, and use that to break ties instead of using median rank.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2151:224,expose,expose,224,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2151,1,['expose'],['expose']
Security,"I'd be happy to add this once I could figure it out. I've been able to load my tabular text files, store them as h5ad, then load them back again. I cannot see how to iterate over rows, then columns so that I can access all values of the dataframe with an awareness of which row/column each belongs to. My wishful code example:. ```py; adata = sc.read_h5ad(filename); selected = adata[:, adata.var_names.isin({'AAR2', 'ECT2'})]. ## this line spews information on the columns like:; # Empty DataFrameView; # Columns: []; # Index: [Cancer--Cell_1, Cancer--Cell_10, Cancer--Cell_100, Cancer--Cell_1000, Cancer--Cell_1001; #print(selected.obs). ## this line gives the row information:; # Empty DataFrameView; # Columns: []; #Index: [AAR2, ECT2]; #print(selected.var); ; # Nothing happens here at all; #for i, row in selected.obs.iteritems():; # print(i, row). for gene_name, row in selected.var.iterrows():; # this prints like: Series([], Name: AAR2, dtype: float64); print(row). # Nothing happens here; for cell_name, val in row.iteritems():; print(""{0}\t{1}\t{2}"".format(gene_name, cell_name, val)); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/70:212,access,access,212,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/70,1,['access'],['access']
Security,"I'm trying to import some data I downloaded from GEO using the read_10x_mtx() function. Since this data was generated with an older version of Cellranger, there is no features.tsv.gz file. I renamed the genes.tsv.gz file to features.tsv.gz but that still doesn't fix my problem. I am pasting the error message below: . ```pytb; --> This might be very slow. Consider passing `cache=True`, which enables much faster reading from a cache file.; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /Applications/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3077 try:; -> 3078 return self._engine.get_loc(key); 3079 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). KeyError: 2. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-13-884b80f3079d> in <module>; ----> 1 adata = sc.read_10x_mtx('/Users/kulkarnia2/Box/scRNASeq/HNSCC/Combined_TC_CK_scRNAseq/all_samples/HD_1_PBL'). ~/.local/lib/python3.7/site-packages/scanpy/readwrite.py in read_10x_mtx(path, var_names, make_unique, cache, cache_compression, gex_only); 302 make_unique=make_unique,; 303 cache=cache,; --> 304 cache_compression=cache_compression,; 305 ); 306 if genefile_exists or not gex_only:. ~/.local/lib/python3.7/site-packages/scanpy/readwrite.py in _read_v3_10x_mtx(path, var_names, make_unique, cache, cache_compression); 371 else:; 372 raise ValueError(""`var_names` needs to be 'gene_symbols' or 'gene_ids'""); --> 373 adata.var['feature_types'] = genes[2].values; 374 adata.obs_names = pd.read_csv(path / 'barcodes.tsv.gz', header=Non",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1408:953,hash,hashtable,953,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1408,1,['hash'],['hashtable']
Security,"I've written up a little script for making an `AnnData` given an accession for the EBI single cell expression atlas ([gist](https://gist.github.com/ivirshup/e7f0c435474d9b06b622c63d4221afe6)), and was wondering if it'd be useful to add under `sc.datasets`. It could be nice to make it easier to try out methods/ have examples which weren't for pbmcs.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/489:65,access,accession,65,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/489,1,['access'],['accession']
Security,"If you call `sns.set_palette`, seaborn sets the default color palette as rgb tuples. matplotlib sometimes complains about this, and something this causes errors with our other code. We were putting these tuples into `adata.uns[f""{key}_colors""]` without validation. Now we validate this. Fixes #1885.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1886:253,validat,validation,253,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1886,2,['validat'],"['validate', 'validation']"
Security,In order to make the learning rate of accessible from scanpy it will be needed to update the dca; version once https://github.com/theislab/dca/pull/27 is merged. Indeed the default learning rate is very high and the training diverges a lot on the tabula muris dataset.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/793:38,access,accessible,38,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/793,1,['access'],['accessible']
Security,"In the scanpy documentation for sc.pl.dotplot, it indicates that it returns a list of matplotlib.axes.Axes. However, this is not true, it returns a gridspec object instead. I noticed this because I wanted to make some subtle edits to the results to enhance the figure such as changing axis labels, adding overlapping lines to delineate the marker genes for each cell type, etc. But I am struggling to do so. I am wondering how the API intends for us to interact with the gridspec object returned to modify the figure. If I edit the code to return the figure object as well as the gridspec, I can access the axis like so. ```; ax = fig.add_subplot(gs[1,0]); ```. but I can't seem to overwrite the default axis labels or add new lines as commands like; ```; ax.set_ylabel('new label'); ```. Don't change the figure at all. This is all Scanpy 1.4.5.post1 but it was the same for 1.4.4.post1. Thanks!. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->. scanpy==1.4.5.post1 anndata==0.6.22.post1 umap==0.4.0 numpy==1.17.2 scipy==1.3.1 pandas==0.25.1 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1. but the same things happened with scanpy==1.4.4.post1; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/979:596,access,access,596,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/979,1,['access'],['access']
Security,"It seems like the dendrogram feature has been merged into the master branch according to this thread #308 and it is documented in the API. However, after updating my scanpy to 1.3.2, I still cannot access the dendrogram feature and get the following error when I set `dendrogram=True` when using `sc.pl.heatmap`:; `AttributeError: Unknown property dendrogram`. Here are the versions that I am using:; scanpy==1.3.2 anndata==0.6.10 numpy==1.14.3 scipy==1.1.0 pandas==0.23.0 scikit-learn==0.19.1 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1. Do you plan on releasing the dendrogram feature? Which package version currently has it?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/344:198,access,access,198,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/344,1,['access'],['access']
Security,"It seems like the last PR #1483 1504a36 by @njbernstein broke the way the `number_of_noise_barcodes` worked. Like in the[ original solo repository ](https://github.com/calico/solo/blob/cd0ec6bd189fafa842af934e3d302715135bc8fc/solo/hashsolo.py#L83-L89) the `number_of_**non**_noise_barcodes` should be `2` as a default OR the `number_of_barcodes` - `number_of_noise_barcodes`. . However, changing the default `number_of_noise_barcodes` from `None` to `2` and changing:; ```python; number_of_non_noise_barcodes = (; num_of_barcodes - number_of_noise_barcodes; if number_of_noise_barcodes is not None; else 2; ); ```. to ; ```python; number_of_non_noise_barcodes = num_of_barcodes - number_of_noise_barcodes; ```. led to the situation, that the used `number_of_non_noise_barcodes` was `number_of_barcodes` - `2` as a default instead of `2`. This leads to problems with demultiplexing, especially with multiple barcodes. Hence, I changed this back. I also modified the check for a valid input to cope for the `None` default. ``` python; if number_of_noise_barcodes >= len(cell_hashing_columns):; ```; changed to; ```python; if (number_of_noise_barcodes is not None) and (; number_of_noise_barcodes >= len(cell_hashing_columns); ):; ```. The rest of changes was introduced by `black` formatting.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2190:231,hash,hashsolo,231,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2190,1,['hash'],['hashsolo']
Security,"Legends not accessible via provided axis and misplaced (scatterplot, subplots)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1258:12,access,accessible,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1258,1,['access'],['accessible']
Security,Make inner keyword argument of violin plot accessible from outside,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1064:43,access,accessible,43,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1064,1,['access'],['accessible']
Security,Make the dca learning rate accessible from scanpy.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/813:27,access,accessible,27,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/813,2,['access'],['accessible']
Security,Make the optimal_ordering accessible from sc.tl.dendrogram.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/945:26,access,accessible,26,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/945,1,['access'],['accessible']
Security,"NA; ```. ### Error output. ```pytb; platform linux -- Python 3.9.18, pytest-8.0.1, pluggy-1.4.0 -- /opt/hostedtoolcache/Python/3.9.18/x64/bin/python; cachedir: .pytest_cache; rootdir: /home/vsts/work/1/s; configfile: pyproject.toml; testpaths: scanpy; plugins: nunit-1.0.6, mock-3.12.0; [1mcollecting ... [0mcollected 1474 items. scanpy/_utils/compute/is_constant.py::scanpy._utils.compute.is_constant.is_constant [32mPASSED[0m[32m [ 0%][0m; scanpy/datasets/_ebi_expression_atlas.py::scanpy.datasets._ebi_expression_atlas.ebi_expression_atlas [32mPASSED[0m[32m [ 0%][0m; scanpy/external/pl.py::scanpy.external.pl.phate [33mSKIPPED[0m (needs modul...)[32m [ 0%][0m; scanpy/external/pp/_bbknn.py::scanpy.external.pp._bbknn.bbknn [33mSKIPPED[0m[32m [ 0%][0m; scanpy/external/pp/_harmony_integrate.py::scanpy.external.pp._harmony_integrate.harmony_integrate [32mPASSED[0m[32m [ 0%][0m; scanpy/external/pp/_hashsolo.py::scanpy.external.pp._hashsolo.hashsolo [33mSKIPPED[0m[32m [ 0%][0m; scanpy/external/pp/_magic.py::scanpy.external.pp._magic.magic [32mPASSED[0m[32m [ 0%][0m; scanpy/external/pp/_scanorama_integrate.py::scanpy.external.pp._scanorama_integrate.scanorama_integrate Fatal Python error: Illegal instruction. Thread 0x00007f00347c4640 (most recent call first):; File ""/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/threading.py"", line 316 in wait; File ""/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/threading.py"", line 581 in wait; File ""/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/tqdm/_monitor.py"", line 60 in run; File ""/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/threading.py"", line 980 in _bootstrap_inner; File ""/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/threading.py"", line 937 in _bootstrap. Current thread 0x00007f004e08eb80 (most recent call first):; File ""/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/scanorama/scanorama.py"", line 522 in nn_approx; File ""/opt/hostedtoolcac",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2866:1536,hash,hashsolo,1536,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2866,1,['hash'],['hashsolo']
Security,"Not a bug, _per se_, as the code runs fine, but you currently cannot install scanpy directly with the rapids extras. Running `pip install scanpy[rapids]` fails with the following error:. ```python; ERROR: Could not find a version that satisfies the requirement cudf>=0.9; extra == ""rapids"" (from scanpy[rapids]) (from versions: 0.5.0, 0.6.1, 0.6.1.post1); ERROR: No matching distribution found for cudf>=0.9; extra == ""rapids"" (from scanpy[rapids]); ```; ; A quick check shows that `PyPi` has the most recent version of rapids suite (cuML, cuDF, cuGRAPH) at 0.6.1 - hence the fail. The only place I can see to get versions of the cu suite that meets the requirements in `setup.py`is from the rapidsAI conda channel, where the most recent version is 0.140. However, if I try to `pip install scanpy` followed by the necessary conda command to install the rapids packages, I get a broken environment that won't let me `import scanpy as sc`, frequently - though not always - because of issues with pandas. How should I install the rapids extras?. Anyways, I recognise these features are experimental, but would love to see them become standard as they are a huge boon when working on big datasets, particularly as I have access to some really good GPUs remotely.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1280:1217,access,access,1217,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1280,1,['access'],['access']
Security,"Now that we changed from the reexports in `scanpy.api` whose sole purpose were to reexport top-level functions to the user in a clean way, we run into two problems;; * one can no longer access the submodules as the names are occupied by the functions; * the users sees private modules such as `pp.distributed` and similar. Therefore, I'd change everything that is not intended to be used by the user to a private submodule. This actually was the very first design before `scanpy.api` (inspired by `statsmodels.api` and `matplotlib.pyplot`) was introduced. Comments are welcome: @flying-sheep and everyone else.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/412:186,access,access,186,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/412,1,['access'],['access']
Security,"Numpy has dropped support for python 3.6 in 1.20.0, and have recommended that packages in the pydata ecosystem adopt a similar schedule for python versions ([NEP 29](https://numpy.org/neps/nep-0029-deprecation_policy.html)). Should we follow this?. Some cool stuff we get by dropping 3.6:. * [Postponed evaluation of type annotations](https://docs.python.org/3/whatsnew/3.7.html#pep-563-postponed-evaluation-of-annotations); * [`singledispatch` can register from type annotations](https://docs.python.org/3/whatsnew/3.7.html#functools); * [Customized access to module attributes](https://docs.python.org/3/whatsnew/3.7.html#pep-562-customization-of-access-to-module-attributes). Also, users will be pinned to old versions of numpy if they're using 3.6, and maybe we don't want to deal with that.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1697:551,access,access,551,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1697,2,['access'],"['access', 'access-to-module-attributes']"
Security,"O using the read_10x_mtx() function. Since this data was generated with an older version of Cellranger, there is no features.tsv.gz file. I renamed the genes.tsv.gz file to features.tsv.gz but that still doesn't fix my problem. I am pasting the error message below: . ```pytb; --> This might be very slow. Consider passing `cache=True`, which enables much faster reading from a cache file.; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /Applications/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3077 try:; -> 3078 return self._engine.get_loc(key); 3079 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). KeyError: 2. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-13-884b80f3079d> in <module>; ----> 1 adata = sc.read_10x_mtx('/Users/kulkarnia2/Box/scRNASeq/HNSCC/Combined_TC_CK_scRNAseq/all_samples/HD_1_PBL'). ~/.local/lib/python3.7/site-packages/scanpy/readwrite.py in read_10x_mtx(path, var_names, make_unique, cache, cache_compression, gex_only); 302 make_unique=make_unique,; 303 cache=cache,; --> 304 cache_compression=cache_compression,; 305 ); 306 if genefile_exists or not gex_only:. ~/.local/lib/python3.7/site-packages/scanpy/readwrite.py in _read_v3_10x_mtx(path, var_names, make_unique, cache, cache_compression); 371 else:; 372 raise ValueError(""`var_names` needs to be 'gene_symbols' or 'gene_ids'""); --> 373 adata.var['feature_types'] = genes[2].values; 374 adata.obs_names = pd.read_csv(path / 'barcodes.tsv.gz', header=None)[0]; 375 return adata. /Applications/anaconda3/l",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1408:1046,hash,hashtable,1046,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1408,1,['hash'],['hashtable']
Security,"Previously discussed in #240. A few things left to discuss:. ## Tests. These are pretty simple, ""this doesn't intrinsically throw an error"" type tests. Should the tests cover more than that? Should they be more thorough is checking arguments won't throw errors? I'm open to suggestions on other things that could be checked. Also, is there a place they'd be more appropriate?. ## Allowing storage of multiple network representations . I think this would also be a pretty simple addition, but wanted to check again before implementing it. I'm thinking of adding a `use_network` argument which would allow key access to network stored in the AnnData object – similar to the `use_rep` argument. @LuckyMD mentioned there might be some storage concerns here, though I think the user is ultimately responsible for size in this case. The value added here is different representations are useful for different analysis, and it'd be useful to not have to have two objects when the rest of the data would be shared. ## Allow more choice of partition method for `louvain-igraph` package. I'm not too fussed on this one. It's just that `""RBConfiguration""` is hard coded when other methods are available, and I'm not aware of a reason it would be the best choice.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/248:608,access,access,608,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/248,1,['access'],['access']
Security,Public function for accessing category colors,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1881:20,access,accessing,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1881,1,['access'],['accessing']
Security,"Should actually fix downloading EBI datasets. URLs for tables and count matrices had changed, and this PR fixes that. This is a bit of a band-aid, since we should probably be accessing these files through the FTP and we should be checking that already downloaded datasets are current. I've also only done a spot check on this, and tested it with a couple datasets. It's probably worth testing with a larger set.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1102:175,access,accessing,175,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1102,1,['access'],['accessing']
Security,"Some effort to simplify how the embedding plots are handled. Right now this consists of simplifying the `components` argument to `dimensions`. Dimensions is a list of collections of ints. Each element in this list has the length of the number of dimensions to be plotted. `components` is no longer used once it can be transformed into dimensions. What does this do?. * Let's us delete `_get_data_points`, an awful function; * Get rid of `data_points` a list of coordinates that most code assumed would only ever have one element; * Move spatial specific code to spatial specific functions; * Gets rid of edge cases where `components` was either `None` or `[None]` (not sure how). Side note, also made a modification to a testing fixture that had been making tests fail when run out of order. ## Some questions:. ### Should `dimensions` be exposed? If so, should `components` be deprecated?. I think it's weird to pass the dimensions as strings `""1,2""` as opposed to dimensions `(0, 1)`. * Why is it one indexed?; * Isn't it the same amount of keystrokes?; * How useful is `""all""`?. I also think it's weird that the amount of plots generated is the product of `components` and `color`. This differs from every other ""vectorized"" argument to `embedding`. Changing arguments and deprecating `components` would be an opportunity to change this. ### If dimensions should be exposed, how many places does this need to be implemented?. We use `components` as an argument in a number of places in the codebase. Should we think about doing a large-scale replacement?. ### I broke a plotting test. I can't tell the difference. @giovp, does this look fine to you? It's the spatial plots with no image. <details>; <summary> </summary>. Expected. ![master_spatial_visium_empty_image](https://user-images.githubusercontent.com/8238804/101748159-4f475800-3b20-11eb-9007-5a987a881828.png). Actual. ![master_spatial_visium_empty_image](https://user-images.githubusercontent.com/8238804/101748219-64bc8200-3b20-11eb-931",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1538:839,expose,exposed,839,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1538,1,['expose'],['exposed']
Security,"Some of the preprocessing recipes have a `plot` argument, but as far as I can tell, they'll only throw an error. `recipe_zheng17` and `recipe_seurat` have the lines:. ```python; if plot:; from .. import plotting as pl # should not import at the top of the file; pl.filter_genes_dispersion(filter_result, log=True); ```. But `plotting` doesn't have the function `filter_genes_dispersion` exposed. Here's an example of the error using `scanpy` pulled from github, but the same issue occurs on the release on pypi:. ```python; In [1]: import numpy as np; ...: import pandas as pd; ...: import scanpy.api as sc; ...: ; ...: sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); ...: sc.settings.set_figure_params(dpi=80) # low dpi (dots per inch) yields small inline figures; ...: sc.logging.print_versions(); /Users/isaac/miniconda3/envs/scanpy/lib/python3.5/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.; from ._conv import register_converters as _register_converters; adatascanpy==1.0.4+91.ge9ae4ff anndata==0.6 numpy==1.14.3 scipy==1.1.0 pandas==0.22.0 scikit-learn==0.19.1 statsmodels==0.8.0 . In [2]: adata = sc.read(""./data/pbmc3k_filtered_gene_bc_matrices/hg19/matrix.mtx"").T; --> This might be very slow. Consider passing `cache=True`, which enables much faster reading from a cache file.; In [3]: sc.pp.recipe_zheng17(adata, plot=True); running recipe zheng17; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-3-c19f237f1c6e> in <module>(); ----> 1 sc.pp.recipe_zheng17(adata, plot=True). ~/github/scanpy/scanpy/preprocessing/recipes.py in recipe_zheng17(adata, n_top_genes, log, plot, copy); 106 if plot:; 107 from .. import plotting as pl # should not import at the top of the file; --> 108 pl.filter",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/153:387,expose,exposed,387,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/153,1,['expose'],['exposed']
Security,"Table.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; >>> adata.raw.var['CD14']; Traceback (most recent call last):; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2646, in get_loc; return self._engine.get_loc(key); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/U",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:3864,hash,hashtable,3864,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,1,['hash'],['hashtable']
Security,Test hashsolo docs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1541:5,hash,hashsolo,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1541,1,['hash'],['hashsolo']
Security,"The `read_10x_mtx()` function does not work due to the update of the anndata package to 0.10.4 (January 14, 2024); (?Error reading the file *features.tsv.gz*). The launch was carried out on the following data: ; https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM5733023. You can also download files using my google drive:; https://drive.google.com/drive/folders/1p6ilbsJX_cYZb4HG0OSbLHAwQObqmncW?usp=sharing. # **My actions**:. 1) I have installed the latest version of `scanpy=1.9.6` using conda:; ```console; $ conda --version; conda 23.10.0; $ conda install scanpy; # Channels:; # - conda-forge; # - bioconda; # - defaults; # Platform: linux-64. # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; anndata 0.10.4 pyhd8ed1ab_0 conda-forge; array-api-compat 1.4 pyhd8ed1ab_0 conda-forge; brotli 1.1.0 hd590300_1 conda-forge; brotli-bin 1.1.0 hd590300_1 conda-forge; bzip2 1.0.8 hd590300_5 conda-forge; c-ares 1.25.0 hd590300_0 conda-forge; ca-certificates 2023.11.17 hbcca054_0 conda-forge; cached-property 1.5.2 hd8ed1ab_1 conda-forge; cached_property 1.5.2 pyha770c72_1 conda-forge; certifi 2023.11.17 pyhd8ed1ab_0 conda-forge; colorama 0.4.6 pyhd8ed1ab_0 conda-forge; contourpy 1.2.0 py311h9547e67_0 conda-forge; cycler 0.12.1 pyhd8ed1ab_0 conda-forge; exceptiongroup 1.2.0 pyhd8ed1ab_2 conda-forge; fonttools 4.47.2 py311h459d7ec_0 conda-forge; freetype 2.12.1 h267a509_2 conda-forge; get-annotations 0.1.2 pyhd8ed1ab_0 conda-forge; h5py 3.10.0 nompi_py311hebc2b07_101 conda-forge; hdf5 1.14.3 nompi_h4f84152_100 conda-forge; icu 73.2 h59595ed_0 conda-forge; joblib 1.3.2 pyhd8ed1ab_0 conda-forge; keyutils 1.6.1 h166bdaf_0 conda-forge; kiwisolver 1.4.5 py311h9547e67_1 conda-forge; krb5 1.21.2 h659d440_0 conda-forge; lcms2 2.16 hb7c19ff_0 conda-forge; ld_impl_linux-64 2.40 h41732ed_0 conda-forge; lerc 4.0.0 h27087fc_0 conda-forge; libaec 1.1.2 h59595ed_1 conda-forge; libblas 3.9.0 20_linux64_openblas conda-forge; libbrotlicommon",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2806:1297,certificate,certificates,1297,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806,1,['certificate'],['certificates']
Security,"This PR addresses https://github.com/theislab/scanpy/issues/1645, which was caused by my injection of normalised matrices from Scanpy workflows, thereby bypassing a sparseness check Scrublet does with the raw matrix. The fix contained here is apply the Scrublet sparseness check, before calling Scrublet functions with a dependency on sparseness.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1707:89,inject,injection,89,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1707,1,['inject'],['injection']
Security,"This PR addresses issues from #979 and #1103 related to `sc.pl.dotplot` and replaces PR #1127. Furthermore, the current PR attempts to unify common code between `dotplot`, `matrixplot` and `stacked_violin` plots while at the same time adding more flexibility to the plots. . This PR also makes possible to plot fold changes, log fold changes and p-values from `sc.tl.rank_genes_groups` as suggested in #562. To achieve this the `sc.pl.dotplot`, `sc.pl.matrixplot` and `sc.pl.stacked_violin` method had been transformed into wrappers for the new `DotPlot`, `MatrixPlot` and `StackedVioling` classes. Accessing the new classes directly allows further fine tuning of the plots. The use of the `sc.pl.dotplot`, `sc.pl.matrixplot` and `sc.pl.stacked_violin` didn't change, only the new parameter `return_fig` was added. For clarity, the relevant code has been moved to `scanpy.plotting._groupby_plots.py`. . The new plot classes are all descendants of a `BasePlot` class that captures most of the common code shared between the plots. The design of the classes follows the method chaining (as found in Pandas or Altair). This allows the addition of independent features (via well documented methods) to the plot without increasing the number parameters of a single function. This was first suggested here #956. . For example, for dotplot is now is possible to `add category totals`, define the titles for the colorbar and size legend and modify the values for edge color and edge line with for dot plot and the size exponent used (among may other options). For example:. ```PYTHON; adata = sc.datasets.pbmc68k_reduced(); markers = {'T-cell': ['CD3D', 'CD3E', 'IL32'], 'B-cell': ['CD79A', 'CD79B', 'MS4A1'], ; 'myeloid': ['CST3', 'LYZ']}; dp = sc.pl.dotplot(adata, markers, groupby='bulk_labels', return_fig=True); dp.add_totals(size=1.2)\; .legend(color_title='log(UMI count+1)', width=1.6, show_size_legend=True)\; .style(cmap='Blues', dot_edge_color='black', dot_edge_lw=1, size_exponent=1.5)\; .show(); ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1210:599,Access,Accessing,599,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1210,1,['Access'],['Accessing']
Security,"This PR introduces a family of plots to validate gene markers obtained using `scanpy.api.tl.rank_genes_groups`. The plots work similarly as `scanpy.api.pl.rank_genes_groups`:; ; ![image](https://user-images.githubusercontent.com/4964309/43768141-efa3633a-9a36-11e8-856f-3970352c33a8.png). ![image](https://user-images.githubusercontent.com/4964309/43768035-b8ba9082-9a36-11e8-91e6-8c828f456981.png). ![image](https://user-images.githubusercontent.com/4964309/43768064-c78dc64c-9a36-11e8-95ed-351ef6fff99e.png). ![image](https://user-images.githubusercontent.com/4964309/43768099-d776a510-9a36-11e8-9708-959d5d0afe92.png). Those functions are wrappers around `scanpy.api.pl.heatmap`, `scanpy.api.pl.stacked_violin`, `scanpy.api.pl.dotplot` and `scanpy.api.pl.matrixplot`. `heatmap` and `dotplot` were modified to allow the 'brackets' on top of the images. This functionality can be used directly from those plots. E.g.:. ![image](https://user-images.githubusercontent.com/4964309/43771788-83bbb604-9a40-11e8-90d6-51f084343a98.png). The `pl.stacked_violin` plot was before part of `pl.violin` but I thought that the code is cleaner by separating the two plots. Also, this PR adds the new plot `scanpy.api.pl.matrixplot` that plots the average gene expression per category. E.g.:. ![image](https://user-images.githubusercontent.com/4964309/43771966-07c9bd92-9a41-11e8-818e-263dfae69b7f.png). This PR also updates several test for the plotting options and adds new ones. . I tried to update the documentation to reflect the changes. Also a new dataset called `pbmc68k_reduced` was added. This dataset is used for tests and for the example notebook [here](https://gist.github.com/fidelram/2289b7a8d6da055fb058ac9a79ed485c). This dataset contains around 700 cells and 200 genes from the original 68k 10x genomics dataset and is saved as a small anndata object. It contains cell type annotations, UMAP coordinates and rank_gene_groups. The dataset can be accessed as; ```python; adata = sc.datasets.pbmc68k_r",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/228:40,validat,validate,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/228,1,['validat'],['validate']
Security,"This adds RAPIDS as an (experimental) option for running some of the graph algorithms on a GPU. Example usage is demonstrated here: https://github.com/tomwhite/scanpy_usage/tree/rapids-gpu/1909_rapids_gpu. In summary:. ```python; sc.pp.neighbors(adata, method='rapids'); sc.tl.louvain(adata, flavor='rapids'); sc.tl.umap(adata, method='rapids'); ```. Timings (on 130K samples):. | Step | CPU time (s) | GPU time (s) | Speedup |; | --------- | ------------ | ------------ | ------- |; | Neighbors | 47 | 15 | 3x |; | Louvain | 70 | 1 | 70x |; | UMAP | 186 | 15 | 12x |. Comments:; * In general the output figures are quite different for each of the algorithms compared to regular Scanpy. (See the figures in the link above.); * RAPIDS uses exact nearest neighbors (using https://github.com/facebookresearch/faiss I think), whereas the default NNDescent algorithm in Scanpy is approximate.; * Louvain community detection results in a different number of communities (28 vs 45). I'm not sure if it is possible to change the termination criteria or other parameters that would make the two outputs the same, or at least more similar.; * UMAP is different too, and in particular it is bunched in one corner. There are a few very small clusters in the opposite corner, which looks like it might be a bug.; * UMAP computes the nearest neighbors again from scratch - it can’t reuse the ones computed earlier since RAPIDS only exposes the fit/transform methods, and not `simplicial_set_embedding` that regular UMAP exposes.; * In general it would be useful to understand what random number generators each of the alternatives use, how they can be controlled, and what prospects there are for achieving identical output (if any).; * This is using RAPIDS version 0.7 since it is the version available on the Google Cloud image I used (https://cloud.google.com/deep-learning-vm/docs/images).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/830:1418,expose,exposes,1418,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/830,2,['expose'],['exposes']
Security,"This adds two new convenience functions to `utils`. ## `obs_values_df`. Basically does the data access part of the scatter plots (actually copied the core of the code from there). Basically, lets you get a data frame of values from obs, obsm, and expression matrix back as a dataframe. I'd planned on this being the data access part of `ridge_plot` PR, but I've found it generally useful for data access. Also finding a feature-ful KDE that isn't buggy has been an issue for the ridge plots. This uses the obsm access I had suggested to @gokceneraslan in #613. I'm also open to adding a `var_values_df` to this PR, I just haven't had a use case yet. ## `rank_genes_groups_df`. Returns a dataframe of differential expression results, because accessing DE results right now is a pain. This was a part of #467, but I can just remove it from there. ## Whats left to do. Docs, but it's boilerplate. Do we have centralized docstrings for things like `gene_symbols`, `use_raw`, `layers`, and `adata`?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/619:96,access,access,96,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/619,5,['access'],"['access', 'accessing']"
Security,"This is a long term solution to securing the image files on the tutorials page, addressing https://github.com/theislab/scanpy/issues/2132.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2134:32,secur,securing,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2134,1,['secur'],['securing']
Security,"This is a result of a change in fc840961c4a9f49cfcea975d01f79e5345fc521e. The problem is not exposed in tests since `scanpy/tests/conftest.py` overrides the default verbosity to `hint`. However, if the line in that file is commented out then the tests fail. I'm not sure of a simple way to add a regression test, but this change fixes the problem as verified by a manual test.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/486:93,expose,exposed,93,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/486,1,['expose'],['exposed']
Security,This makes it easier to access the binning,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3170:24,access,access,24,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3170,1,['access'],['access']
Security,"This prepares the complete centralization of all setup information in pyproject.toml once we switch to flit. To this end, it moves all setup metadata that also needs to be accessed at runtime (`__version__`, `__author__` and `__email__`) to a new `scanpy._metadata` module which retrieves them. - during development from a checked-out project's git metadata and `pyproject.toml`; - when installed from the `scanpy-$version.dist-info` metadata.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1381:172,access,accessed,172,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1381,1,['access'],['accessed']
Security,Update hashsolo docstring,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2429:7,hash,hashsolo,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2429,1,['hash'],['hashsolo']
Security,"We often identify a subset of cells as irrelevant noise cells and hope to discard them during the analysis. I am a bit confused about how to perform such operations in Scanpy. It's a common practice in other analysis tool like Seurat to do ScaleData across cells so that the relative expression level is adjusted without uninteresting cells' influences. . Such operation is supported by Seurat by providing multiple ""Assay"", such as `counts`, `data`, and `scale.data`, which stores the raw UMI counts, column normalized data (across genes, log1p), and row normalized data (across samples, zscores). . I noticed the scaled data are stored in `adata.X` in scanpy. With this design, how can we access the raw UMI count and do re-scaling if I hope to subset the data?. Looking forward your reply. Thanks.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1089:691,access,access,691,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1089,1,['access'],['access']
Security,"What stays the same:. - `pip install scanpy`; - `pip install . `; - `pip install git+https://...`; - you can install your deps with conda; - you can do a dev install. What changes:. - Please check the [install docs](https://scanpy.readthedocs.io/en/flit-for-isaac/installation.html#development-version), in short:; - `pip install -e .[every,single,extra]` → `flit install -s` for dev installs; - `beni pyproject.toml > environment.yml` for conda; - Extremely simple `flit build` and `flit publish`. Maybe install `keyring` to store your publish password, and you know everything you need to.; - `flit build` doesn’t clutter your dev directory with `build/` and `*.egg-info/` junk, it just creates `dist/scanpy-*{.whl,.tar.gz}`.; - No more obscure stuff nobody understands (MANIFEST.in, package_data, …); - Centralized setup configuration in pyproject.toml instead of spread over multiple files",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1527:545,password,password,545,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1527,1,['password'],['password']
Security,_0 pypi; jupyterlab-pygments 0.3.0 pypi_0 pypi; jupyterlab-server 2.25.4 pypi_0 pypi; jupyterlab-widgets 3.0.10 pypi_0 pypi; jupyterlab_pygments 0.1.2 py_0; jupyterlab_server 2.25.1 py311haa95532_0; kiwisolver 1.4.5 pypi_0 pypi; lazy-loader 0.3 pypi_0 pypi; legacy-api-wrap 1.4 pypi_0 pypi; leidenalg 0.10.2 pypi_0 pypi; libffi 3.4.4 hd77b12b_0; libsodium 1.0.18 h62dcd97_0; llvmlite 0.42.0 pypi_0 pypi; m2w64-bwidget 1.9.10 2; m2w64-bzip2 1.0.6 6; m2w64-expat 2.1.1 2; m2w64-fftw 3.3.4 6; m2w64-flac 1.3.1 # Name Version Build Channel; _r-mutex 1.0.0 anacondar_1 ; anndata 0.10.6 pypi_0 pypi; anyio 4.3.0 pypi_0 pypi; argon2-cffi 23.1.0 pypi_0 pypi; argon2-cffi-bindings 21.2.0 py311h2bbff1b_0 ; array-api-compat 1.5.1 pypi_0 pypi; arrow 1.3.0 pypi_0 pypi; asttokens 2.4.1 pypi_0 pypi; async-lru 2.0.4 py311haa95532_0 ; attrs 23.2.0 pypi_0 pypi; babel 2.14.0 pypi_0 pypi; beautifulsoup4 4.12.3 pypi_0 pypi; bleach 6.1.0 pypi_0 pypi; brotli-python 1.0.9 py311hd77b12b_7 ; bzip2 1.0.8 h2bbff1b_5 ; ca-certificates 2023.12.12 haa95532_0 ; certifi 2024.2.2 py311haa95532_0 ; cffi 1.16.0 py311h2bbff1b_0 ; chardet 5.2.0 pypi_0 pypi; charset-normalizer 3.3.2 pypi_0 pypi; colorama 0.4.6 py311haa95532_0 ; comm 0.2.2 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cycler 0.12.1 pypi_0 pypi; debugpy 1.8.1 pypi_0 pypi; decorator 5.1.1 pyhd3eb1b0_0 ; defusedxml 0.7.1 pyhd3eb1b0_0 ; executing 2.0.1 pypi_0 pypi; fastjsonschema 2.19.1 pypi_0 pypi; fonttools 4.50.0 pypi_0 pypi; fqdn 1.5.1 pypi_0 pypi; h11 0.14.0 pypi_0 pypi; h5py 3.10.0 pypi_0 pypi; httpcore 1.0.4 pypi_0 pypi; httpx 0.27.0 pypi_0 pypi; idna 3.6 pypi_0 pypi; igraph 0.11.4 pypi_0 pypi; imageio 2.34.0 pypi_0 pypi; ipykernel 6.29.3 pypi_0 pypi; ipython 8.22.2 pypi_0 pypi; ipywidgets 8.1.2 pypi_0 pypi; isoduration 20.11.0 pypi_0 pypi; jedi 0.19.1 pypi_0 pypi; jinja2 3.1.3 py311haa95532_0 ; joblib 1.3.2 pypi_0 pypi; json5 0.9.22 pypi_0 pypi; jsonpointer 2.4 pypi_0 pypi; jsonschema 4.21.1 pypi_0 pypi; jsonschema-specifications 2023.12.1 pypi_0 ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2969:5243,certificate,certificates,5243,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2969,1,['certificate'],['certificates']
Security,"`compute_neighbors` method of the Neighbors class has a nice option called `write_knn_indices` which saves kNN indices into the Neighbors object. But this object and its members are not accessible from sc.pp.neighbors since we don't save the reference to it. . Making the write_knn_indices option available from `sc.pp.neighbors` gives access to knn indices which provide additional information on top of connectivities and distances since these matrices are symmetrized. . With knn_indices one can do cool things like building a mutual kNN graph, e.g.:. ```python; import scipy.sparse as sp. lm = sp.lil_matrix((adata.n_obs, adata.n_obs)); lm.rows = adata.uns['neighbors']['knn_indices']; lm.data = np.ones_like(adata.uns['neighbors']['knn_indices']); lm = lm.tocsr(); lm.setdiag(0); lm.eliminate_zeros(); lm = lm.multiply(lm.T) # build mnn mask. adata.uns['neighbors']['distances'] = adata.uns['neighbors']['distances'].multiply(lm); adata.uns['neighbors']['connectivities'] = adata.uns['neighbors']['connectivities'].multiply(lm); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/820:186,access,accessible,186,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/820,2,['access'],"['access', 'accessible']"
Security,`sc.pl.heatmap` (and others) should offer a means of accessing the `matplotlib.pyplot.Figure` object,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2336:53,access,accessing,53,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2336,1,['access'],['accessing']
Security,"a in a simple and intuitive way. Truly, from the bottom of my heart, thank you, this package is awesome and I deeply appreciate all the work the scanpy team and Theis lab has put into it. . With that said, I find myself wanting to do things with scanpy that aren't currently supported. . (1) Clustering cells based on a restricted set of genes as opposed to principle components: I understand that this is a biased approach, but I find myself wanting to do this to explore datasets and how genes vary together. I believe it would aid in understanding data topology to reduce the dimensionality of the dataset by looking at a subset of key genes that are picked by an expert who has domain knowledge. I think this is best integrated with a separate sc.pp.neighbors-like function that uses a gene list, as opposed to PCs. Integration into downstream plotting can be done with separate functions that have a similar name (sc.tl.umap_genelist or sc.tl.umap_sparse; sc.tl.paga_genelist or sc.tl.paga_sparse). . I envision that this would also be a nice stepping stone towards multi-modal analysis with CITE-seq. . (2) I want to use PAGA and UMAP to display my CytOF data as well as integrate scRNA-seq/CytOF data together. I saw a pre-print on bioRxiv that indicated that you are working on this aspect of PAGA/scanpy. This was very exciting to me and I am glad that this is being developed. Is it possible to access the current version of this software? . I think that major partitions identified with CytOF or scRNA-seq can be linked together providing a coarse-grained mechanism to demonstrate how heterogeneity identified with each technique relates to each other based on a given experimental time point. . (3) Histogram integration in the plotting api for QC metrics would be helpful. While scatter plots and violin plots are effective, I find myself wanting to make cuts (bounds on percent mitochondrial or nGenes) in my data based off histograms. Again, thank you so much for the amazing software!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/510:1951,access,access,1951,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/510,1,['access'],['access']
Security,"a_hvg, svd_solver='arpack', n_comps = 30, use_highly_variable=True). ~/anaconda2/envs/scanpy/lib/python3.6/site-packages/scanpy/preprocessing/_simple.py in pca(data, n_comps, zero_center, svd_solver, random_state, return_info, use_highly_variable, dtype, copy, chunked, chunk_size); 529 pca_ = TruncatedSVD(n_components=n_comps, random_state=random_state); 530 X = adata_comp.X; --> 531 X_pca = pca_.fit_transform(X); 532 ; 533 if X_pca.dtype.descr != np.dtype(dtype).descr: X_pca = X_pca.astype(dtype). ~/anaconda2/envs/scanpy/lib/python3.6/site-packages/sklearn/decomposition/pca.py in fit_transform(self, X, y); 358 ; 359 """"""; --> 360 U, S, V = self._fit(X); 361 U = U[:, :self.n_components_]; 362 . ~/anaconda2/envs/scanpy/lib/python3.6/site-packages/sklearn/decomposition/pca.py in _fit(self, X); 380 ; 381 X = check_array(X, dtype=[np.float64, np.float32], ensure_2d=True,; --> 382 copy=self.copy); 383 ; 384 # Handle n_components==None. ~/anaconda2/envs/scanpy/lib/python3.6/site-packages/sklearn/utils/validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, warn_on_dtype, estimator); 556 "" a minimum of %d is required%s.""; 557 % (n_features, array.shape, ensure_min_features,; --> 558 context)); 559 ; 560 if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:. ValueError: Found array with 0 feature(s) (shape=(44495, 0)) while a minimum of 1 is required.; ```. The `pca` code doesn't error here, because `highly_variable_intersection` makes `'highly_variable' in adata.var.keys()` evaluate to `True`:; ```; if use_highly_variable is True and 'highly_variable' not in adata.var.keys():; raise ValueError('Did not find adata.var[\'highly_variable\']. '; 'Either your data already only consists of highly-variable genes '; 'or consider running `pp.highly_variable_genes` first.'); if use_highly_variable is None:; use_highly_variable = True if 'highly_varia",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1032:2109,validat,validation,2109,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1032,1,['validat'],['validation']
Security,"ances_dpt`; eigenvalues of transition matrix; [1. 0.87799305 0.74851424 0.7235198 0.5982796 0.5652917; 0.45321003 0.35327435 0.33786523 0.29598442]; finished (0:01:09.57) --> added; 'dpt_pseudotime', the pseudotime (adata.obs); ```. But calling pl.dpt on this object yields an error, looking at the above outout of tl.dpt it seems that dpt_groups was not created in adata.obs if n_branchings=0?. ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /usr/local/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2524 try:; -> 2525 return self._engine.get_loc(key); 2526 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'dpt_groups'. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-102-eb7d1d859c99> in <module>(); ----> 1 sc.pl.dpt(adata, groups=None). ~/gitDevelopment/scanpy/scanpy/plotting/tools/__init__.py in dpt(adata, basis, color, alpha, groups, components, projection, legend_loc, legend_fontsize, legend_fontweight, color_map, palette, right_margin, size, title, show, save); 677 """"""; 678 colors = ['dpt_pseudotime']; --> 679 if len(np.unique(adata.obs['dpt_groups'].values)) > 1: colors += ['dpt_groups']; 680 if color is not None: colors = color; 681 dpt_scatter(. /usr/local/lib/python3.6/site-packages/pandas/core/frame.py in __getitem__(self, key); 2137 return self._getitem_multilevel(key); 2138 else:; -> 2139 return self._getitem_column(key); 2140 ; 2141 def _getitem_column(self, key):. /usr/local/lib/python3.6/site-packages/pandas/core/frame.py in _getitem_column(self, key",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/129:1265,hash,hashtable,1265,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/129,1,['hash'],['hashtable']
Security,"and I also reproduced it on google colab. ; <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; adata = sc.datasets.ebi_expression_atlas(""E-MTAB-4888""); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; HTTPError Traceback (most recent call last); <ipython-input-6-0ae186d1a0d7> in <module>; ----> 1 adata = sc.datasets.ebi_expression_atlas(""E-MTAB-4888""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in ebi_expression_atlas(accession, filter_boring); 117 pass; 118 ; --> 119 download_experiment(accession); 120 ; 121 logg.info(f""Downloaded {accession} to {experiment_dir.absolute()}""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in download_experiment(accession); 41 ; 42 _download(; ---> 43 download_url + ""experiment-design"", experiment_dir / ""experimental_design.tsv"",; 44 ); 45 _download(. ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/readwrite.py in _download(url, path); 877 ; 878 try:; --> 879 urlretrieve(url, str(path), reporthook=update_to); 880 except Exception:; 881 # Make sure file doesn’t exist half-downloaded. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlretrieve(url, filename, reporthook, data); 246 url_type, path = splittype(url); 247 ; --> 248 with contextlib.closing(urlopen(url, data)) as fp:; 249 headers = fp.info(); 250 . ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context); 221 else:; 222 opener = _opener; --> 223 return opener.open(url, data, timeout); 224 ; 225 def install_opener(opener):. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in open(self, fullurl, data, timeout); 530 for processor in self.process_response.get(protocol, []):; 531 meth = getattr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1221:1149,access,accession,1149,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1221,1,['access'],['accession']
Security,api 0.10 r36h6115d3f_0 ; r-rvest 0.3.3 r36h6115d3f_0 ; r-scales 1.0.0 r36h6115d3f_0 ; r-selectr 0.4_1 r36h6115d3f_0 ; r-shiny 1.3.2 r36h6115d3f_0 ; r-sourcetools 0.1.7 r36h6115d3f_0 ; r-spatial 7.3_11 r36h6115d3f_4 ; r-squarem 2017.10_1 r36h6115d3f_0 ; r-stringi 1.4.3 r36h6115d3f_0 ; r-stringr 1.4.0 r36h6115d3f_0 ; r-survival 2.44_1.1 r36h6115d3f_0 ; r-sys 3.2 r36h6115d3f_0 ; r-tibble 2.1.1 r36h6115d3f_0 ; r-tidyr 0.8.3 r36h6115d3f_0 ; r-tidyselect 0.2.5 r36h6115d3f_0 ; r-tidyverse 1.2.1 r36h6115d3f_0 ; r-timedate 3043.102 r36h6115d3f_0 ; r-tinytex 0.12 r36h6115d3f_0 ; r-ttr 0.23_4 r36h6115d3f_0 ; r-utf8 1.1.4 r36h6115d3f_0 ; r-uuid 0.1_2 r36h6115d3f_4 ; r-viridislite 0.3.0 r36h6115d3f_0 ; r-whisker 0.3_2 r36h6115d3f_4 ; r-withr 2.1.2 r36h6115d3f_0 ; r-xfun 0.6 r36h6115d3f_0 ; r-xml2 1.2.0 r36h6115d3f_0 ; r-xtable 1.8_4 r36h6115d3f_0 ; r-xts 0.11_2 r36h6115d3f_0 ; r-yaml 2.2.0 r36h6115d3f_0 ; r-zoo 1.8_5 r36h6115d3f_0 ; referencing 0.33.0 pypi_0 pypi; requests 2.31.0 py311haa95532_1 ; rfc3339-validator 0.1.4 py311haa95532_0 ; rfc3986-validator 0.1.1 py311haa95532_0 ; rpds-py 0.18.0 pypi_0 pypi; scanpy 1.10.0 pypi_0 pypi; scikit-image 0.22.0 pypi_0 pypi; scikit-learn 1.4.1.post1 pypi_0 pypi; scikit-misc 0.3.1 pypi_0 pypi; scipy 1.12.0 pypi_0 pypi; seaborn 0.13.2 pypi_0 pypi; send2trash 1.8.2 py311haa95532_0 ; session-info 1.0.0 pypi_0 pypi; setuptools 68.2.2 py311haa95532_0 ; six 1.16.0 pyhd3eb1b0_1 ; sniffio 1.3.1 pypi_0 pypi; soupsieve 2.5 py311haa95532_0 ; sqlite 3.41.2 h2bbff1b_0 ; stack-data 0.6.3 pypi_0 pypi; stack_data 0.2.0 pyhd3eb1b0_0 ; statsmodels 0.14.1 pypi_0 pypi; stdlib-list 0.10.0 pypi_0 pypi; tenacity 8.2.3 pypi_0 pypi; terminado 0.18.1 pypi_0 pypi; texttable 1.7.0 pypi_0 pypi; threadpoolctl 3.4.0 pypi_0 pypi; tifffile 2024.2.12 pypi_0 pypi; tinycss2 1.2.1 py311haa95532_0 ; tk 8.6.12 h2bbff1b_0 ; tornado 6.4 pypi_0 pypi; tqdm 4.66.2 pypi_0 pypi; traitlets 5.14.2 pypi_0 pypi; types-python-dateutil 2.9.0.20240315 pypi_0 pypi; typing-extensions 4.9.0 py,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2969:13642,validat,validator,13642,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2969,1,['validat'],['validator']
Security,"bles especially if they have some outliers. This deeply saddens us and forces us to watch a few more episodes of Stranger Things and it certainly doesn't help :(. I would like to hear your thoughts about how to fix that. But before that, as a responsible person, I did some homework and I spent around 34 minutes to understand how color normalization works in matplotlib (https://matplotlib.org/3.1.1/tutorials/colors/colormapnorms.html) and tried to implement a custom normalization class (https://matplotlib.org/3.1.1/tutorials/colors/colormapnorms.html#custom-normalization-manually-implement-two-linear-ranges). . My idea is simply to specify vmin/vmax in terms of quantiles of the color vector which can be shared between variables instead of a specific value. One way, I thought, might be to pass a `norm` argument with a custom normalization object to our lovely `plot_scatter`. However, as far as I understand, it's not possible because in the quantile function in the custom normalization class requires the entire color vector for each continuous variable which is not super convenient because it's too much preprocessing to find different quantile values for each variable and pass a vmin/vmax vector to the plotting function. Not user-friendly and still requires modifications in the code :(. Instead, I added two ugly arguments named `vmin_quantile` and `vmax_quantile` to the `plot_scatter` function which allows me to specify a single quantile value for vmin/vmax which is then translated into real values separately for each variable:. ![image](https://user-images.githubusercontent.com/1140359/62720493-20731c00-b9d8-11e9-9dc9-f91cf052c4e1.png). This solved my problem but I was wondering if it makes sense to add this to scanpy. What do you think?. Finally, here is the way I use it:. `plot_scatter(adata, basis='umap', color=['louvain', 'NKG7', 'GNLY', 'KIT'], cmap='Reds', vmax_quantile=0.999)`. PS: It needs a few more lines to be accessible from other functions like sc.pl.umap.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/775:2336,access,accessible,2336,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/775,1,['access'],['accessible']
Security,"bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.pl.pca(adata, color='CST3'); ```. ```pytb; [Paste the error output produced by the above code here]; ```KeyError Traceback (most recent call last); D:\anaconda\lib\site-packages\pandas\core\indexes\base.py in get_loc(self, key, method, tolerance); 3628 try:; -> 3629 return self._engine.get_loc(casted_key); 3630 except KeyError as err:. D:\anaconda\lib\site-packages\pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc(). D:\anaconda\lib\site-packages\pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'CST3'. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); ~\AppData\Local\Temp\ipykernel_42228\2632014446.py in <module>; 1 # 绘制 PCA 图; ----> 2 sc.pl.pca(adata, color='CST3'). D:\anaconda\lib\site-packages\scanpy\plotting\_tools\scatterplots.py in pca(adata, annotate_var_explained, show, return_fig, save, **kwargs); 869 """"""; 870 if not annotate_var_explained:; --> 871 return embedding(; 872 adata, 'pca', show=show, return_fig=return_fig, save=save, **kwargs; 873 ). D:\anaconda\lib\site-packages\scanpy\plotting\_tools\scatterplots.py in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, siz",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2430:1092,hash,hashtable,1092,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2430,1,['hash'],['hashtable']
Security,"cript_Identity'].cat.categories; Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',; 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',; 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',; 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',; 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',; 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',; 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',; 'ncMonocyte', 'pDC'],; dtype='object'); ```. ### Error output. ```pytb; WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups; test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts); File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__; raise ValueError(; ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample.; ```. ### Versions. <details>. ```; setuptools 69.0.3; shapely 2.0.2; six 1.16.0; skimage 0.20.0; sklearn 1.3.2; socks 1.7.1; spatial_image 0.3.0; spatialdata 0.0.15; squidpy 1.3.1; stack_data 0.6.2; statsmodels 0.14.1; sympy 1.12; tangram 1.0.4; tblib 3.0.0; texttable 1.7.0; threadpoolctl 3.2.0; tifffile 2023.12.9; tlz 0.12.0; toolz 0.12.0; torch 2.1.2+cu121; torchgen NA; tqdm 4.66.1; traitlets 5.14.1; typing_extensions NA; umap 0.5.5; urllib3 2.1.0; validators 0.22.0; wcwidth 0.2.13; xarray 2023.12.0; xarray_dataclasses 1.7.0; xarray_schema 0.0.3; xrspatial 0.3.7; yaml 6.0.1; zarr 2.16.1; zipp NA; zoneinfo NA; -----; Python 3.9.18 | packaged by conda-forge | (main, Dec 23 2023, 16:33:10) [GCC 12.3.0]; Linux-4.18.0-477.15.1.el8_8.x86_64-x86_64-with-glibc2.28. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2821:2582,validat,validators,2582,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821,1,['validat'],['validators']
Security,ct=4.9.0; - pickleshare=0.7.5; - pillow=10.3.0; - pip=24.0; - pkgutil-resolve-name=1.3.10; - platformdirs=4.2.2; - plotly=5.22.0; - plotly-orca=1.3.1; - pooch=1.8.2; - prettyprinter=0.18.0; - prometheus_client=0.20.0; - prompt-toolkit=3.0.47; - prompt_toolkit=3.0.47; - protobuf=4.25.3; - psutil=5.9.8; - pthread-stubs=0.4; - ptyprocess=0.7.0; - pure_eval=0.2.2; - py-cpuinfo=9.0.0; - pycparser=2.22; - pyfaidx=0.8.1.1; - pygments=2.18.0; - pymde=0.1.18; - pymongo=4.7.3; - pynndescent=0.5.12; - pyobjc-core=10.2; - pyobjc-framework-cocoa=10.2; - pyparsing=3.1.2; - pysocks=1.7.1; - pytables=3.9.2; - python=3.11.4; - python-dateutil=2.9.0; - python-fastjsonschema=2.19.1; - python-igraph=0.11.5; - python-json-logger=2.0.7; - python-kaleido=0.2.1; - python-tzdata=2024.1; - python_abi=3.11; - pytorch=2.2.2; - pytz=2024.1; - pyvcf3=1.0.3; - pyyaml=6.0.1; - pyzmq=26.0.3; - radian=0.6.12; - rchitect=0.4.6; - readline=8.2; - referencing=0.35.1; - requests=2.32.3; - rfc3339-validator=0.1.4; - rfc3986-validator=0.1.1; - rpds-py=0.18.1; - scanpy=1.10.1; - scikit-learn=1.5.0; - scipy=1.13.1; - seaborn=0.13.2; - seaborn-base=0.13.2; - send2trash=1.8.3; - session-info=1.0.0; - setuptools=70.0.0; - simplejson=3.19.2; - six=1.16.0; - snappy=1.2.0; - sniffio=1.3.1; - soupsieve=2.5; - stack_data=0.6.2; - statsmodels=0.14.2; - stdlib-list=0.10.0; - sympy=1.12; - tbb=2021.12.0; - tenacity=8.3.0; - terminado=0.18.1; - texttable=1.7.0; - threadpoolctl=3.5.0; - tinycss2=1.3.0; - tk=8.6.13; - tomli=2.0.1; - torchvision=0.17.2; - tornado=6.4.1; - tqdm=4.66.4; - traitlets=5.14.3; - types-python-dateutil=2.9.0.20240316; - typing-extensions=4.12.2; - typing_extensions=4.12.2; - typing_utils=0.1.0; - tzdata=2024a; - umap-learn=0.5.5; - uri-template=1.3.0; - urllib3=2.2.1; - wcwidth=0.2.13; - webcolors=24.6.0; - webencodings=0.5.1; - websocket-client=1.8.0; - wheel=0.43.0; - xlrd=1.2.0; - xorg-libxau=1.0.11; - xorg-libxdmcp=1.1.3; - xz=5.2.6; - yaml=0.2.5; - zeromq=4.3.5; - zipp=3.19.2; - zlib-ng=2.0.7,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:7028,validat,validator,7028,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['validat'],['validator']
Security,"culate_linkage_scipy(). /usr/local/lib/python3.6/site-packages/seaborn/matrix.py in _calculate_linkage_fastcluster(self); 618 else:; 619 linkage = fastcluster.linkage(self.array, method=self.method,; --> 620 metric=self.metric); 621 return linkage; 622 . /usr/local/lib/python3.6/site-packages/fastcluster.py in linkage(X, method, metric, preserve_input); 241 assert X.ndim==2; 242 N = len(X); --> 243 X = pdist(X, metric); 244 X = array(X, dtype=double, copy=False, order='C', subok=True); 245 Z = empty((N-1,4)). /usr/local/lib/python3.6/site-packages/scipy/spatial/distance.py in pdist(X, metric, *args, **kwargs); 1932 if metric_name is not None:; 1933 X, typ, kwargs = _validate_pdist_input(X, m, n,; -> 1934 metric_name, **kwargs); 1935 ; 1936 # get pdist wrapper. /usr/local/lib/python3.6/site-packages/scipy/spatial/distance.py in _validate_pdist_input(X, m, n, metric_name, **kwargs); 287 typ = types[types.index(X.dtype)] if X.dtype in types else types[0]; 288 # validate data; --> 289 X = _convert_to_type(X, out_type=typ); 290 ; 291 # validate kwargs. /usr/local/lib/python3.6/site-packages/scipy/spatial/distance.py in _convert_to_type(X, out_type); 182 ; 183 def _convert_to_type(X, out_type):; --> 184 return np.ascontiguousarray(X, dtype=out_type); 185 ; 186 . /usr/local/lib/python3.6/site-packages/numpy/core/numeric.py in ascontiguousarray(a, dtype); 588 ; 589 """"""; --> 590 return array(a, dtype, copy=False, order='C', ndmin=1); 591 ; 592 . ValueError: setting an array element with a sequence.; ```. </details>. -------------------. I think this is happening because `pandas` doesn't like being passed a sparse array ([which can happen in `sc.pl.clustermap`](https://github.com/theislab/scanpy/blob/7de1f5159c91d6d2243bb7866d9495ee6747c750/scanpy/plotting/anndata.py#L741)):. ```python; import pandas as pd; adata = sc.AnnData(A) # from above; pd.DataFrame(A) # Throws error; pd.DataFrame(adata.X, index=adata.obs_name, columns=adata.var_name).head() # returns malformed datafram",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/356:3812,validat,validate,3812,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/356,2,['validat'],['validate']
Security,"data); sc.tl.umap(em_adata); sc.tl.leiden(em_adata,flavor='igraph',n_iterations=2,random_state=1653,directed=False); ```. ### Error output. ```pytb; Exception ignored in: <class 'ValueError'>; Traceback (most recent call last):; File ""numpy\\random\\mtrand.pyx"", line 780, in numpy.random.mtrand.RandomState.randint; File ""numpy\\random\\_bounded_integers.pyx"", line 2881, in numpy.random._bounded_integers._rand_int32; ValueError: high is out of bounds for int32; ```. ### Versions. <details>. ```; conda env:; # Name Version Build Channel; _r-mutex 1.0.0 anacondar_1; anndata 0.10.6 pypi_0 pypi; anyio 4.3.0 pypi_0 pypi; argon2-cffi 23.1.0 pypi_0 pypi; argon2-cffi-bindings 21.2.0 py311h2bbff1b_0; array-api-compat 1.5.1 pypi_0 pypi; arrow 1.3.0 pypi_0 pypi; asttokens 2.4.1 pypi_0 pypi; async-lru 2.0.4 py311haa95532_0; attrs 23.2.0 pypi_0 pypi; babel 2.14.0 pypi_0 pypi; beautifulsoup4 4.12.3 pypi_0 pypi; bleach 6.1.0 pypi_0 pypi; brotli-python 1.0.9 py311hd77b12b_7; bzip2 1.0.8 h2bbff1b_5; ca-certificates 2023.12.12 haa95532_0; certifi 2024.2.2 py311haa95532_0; cffi 1.16.0 py311h2bbff1b_0; charset-normalizer 3.3.2 pypi_0 pypi; colorama 0.4.6 py311haa95532_0; comm 0.2.2 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; cycler 0.12.1 pypi_0 pypi; debugpy 1.8.1 pypi_0 pypi; decorator 5.1.1 pyhd3eb1b0_0; defusedxml 0.7.1 pyhd3eb1b0_0; executing 2.0.1 pypi_0 pypi; fastjsonschema 2.19.1 pypi_0 pypi; fonttools 4.50.0 pypi_0 pypi; fqdn 1.5.1 pypi_0 pypi; h11 0.14.0 pypi_0 pypi; h5py 3.10.0 pypi_0 pypi; httpcore 1.0.4 pypi_0 pypi; httpx 0.27.0 pypi_0 pypi; idna 3.6 pypi_0 pypi; igraph 0.11.4 pypi_0 pypi; imageio 2.34.0 pypi_0 pypi; ipykernel 6.29.3 pypi_0 pypi; ipython 8.22.2 pypi_0 pypi; ipywidgets 8.1.2 pypi_0 pypi; isoduration 20.11.0 pypi_0 pypi; jedi 0.19.1 pypi_0 pypi; jinja2 3.1.3 py311haa95532_0; joblib 1.3.2 pypi_0 pypi; json5 0.9.22 pypi_0 pypi; jsonpointer 2.4 pypi_0 pypi; jsonschema 4.21.1 pypi_0 pypi; jsonschema-specifications 2023.12.1 pypi_0 pypi; jupyter-client 8.6.1 pypi_0 p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2969:2841,certificate,certificates,2841,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2969,1,['certificate'],['certificates']
Security,"ditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Dear scanpy teams, research fellows,; I downloaded some scRNA-seq data from https://zenodo.org/records/3357167,; and when I was tring to use `anndata.AnnData.concatenate` to combine two read count data(I checked their dimensions and the result were `Baron_human: [2133,22758]` and `Segerstolpe: [8569,17500]` which means they certainly have different annotated genes), I got below error. Could u help. many thanks!!. ### Minimal code sample. ```python; all_adata = anndata.AnnData.concatenate(train_adata,test_adata); ```. ### Error output. ```pytb; File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\site-packages\pandas\core\strings\accessor.py"", line 245, in _validate; raise AttributeError(""Can only use .str accessor with string values!""); AttributeError: Can only use .str accessor with string values!; ```. ### Versions. <details>. ```; >>> scanpy.logging.print_versions(); -----; anndata 0.8.0; scanpy 1.9.3; -----; CIForm NA; PIL 9.1.0; astunparse 1.6.3; cffi 1.15.1; colorama 0.4.6; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; google NA; h5py 3.11.0; igraph 0.10.4; joblib 1.2.0; kiwisolver 1.4.2; leidenalg 0.9.1; llvmlite 0.39.1; matplotlib 3.5.2; mpl_toolkits NA; natsort 8.3.1; nt NA; numba 0.56.4; numpy 1.23.5; opt_einsum v3.3.0; packaging 21.3; pandas 2.2.3; plotly 5.13.1; psutil 5.9.4; pyparsing 3.0.9; pytz 2022.1; scipy 1.10.0; session_info 1.0.0; six 1.16.0; sklearn 1.2.1; texttable 1.6.7; threadpoolctl 3.1.0; torch 1.13.1+cpu; tqdm 4.64.1; typing_extensions NA; yaml 6.0; zoneinfo NA; zope NA; -----; Python 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)]; Windows-10-10.0.19041-SP0; -----; Session information updated at 2024-09-26 11:05; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3261:1024,access,accessor,1024,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3261,2,['access'],['accessor']
Security,"e)], axis=1); 201 ); 202 doublet_adata.obs[LABELS_KEY] = ""doublet""; --> 204 full_adata = latent_adata.concatenate(doublet_adata); 205 cls.setup_anndata(full_adata, labels_key=LABELS_KEY); 206 return cls(full_adata, **classifier_kwargs). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/anndata/_core/anndata.py:1808, in AnnData.concatenate(self, join, batch_key, batch_categories, uns_merge, index_unique, fill_value, *adatas); 1799 pat = rf""-({'|'.join(batch_categories)})$""; 1800 out.var = merge_dataframes(; 1801 [a.var for a in all_adatas],; 1802 out.var_names,; 1803 partial(merge_outer, batch_keys=batch_categories, merge=merge_same),; 1804 ); 1805 out.var = out.var.iloc[; 1806 :,; 1807 (; -> 1808 out.var.columns.str.extract(pat, expand=False); 1809 .fillna(""""); 1810 .argsort(kind=""stable""); 1811 ),; 1812 ]; 1814 return out. File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/accessor.py:224, in CachedAccessor.__get__(self, obj, cls); 221 if obj is None:; 222 # we're accessing the attribute of the class, i.e., Dataset.geo; 223 return self._accessor; --> 224 accessor_obj = self._accessor(obj); 225 # Replace the property with the accessor object. Inspired by:; 226 # https://www.pydanny.com/cached-property.html; 227 # We need to use object.__setattr__ because we overwrite __setattr__ on; 228 # NDFrame; 229 object.__setattr__(obj, self._name, accessor_obj). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:181, in StringMethods.__init__(self, data); 178 def __init__(self, data) -> None:; 179 from pandas.core.arrays.string_ import StringDtype; --> 181 self._inferred_dtype = self._validate(data); 182 self._is_categorical = is_categorical_dtype(data.dtype); 183 self._is_string = isinstance(data.dtype, StringDtype). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:235, in StringMethods._validate(data); 232 inferred_dtype = lib.infer_dtype(values, skipna=True); 234 i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:1949,access,accessing,1949,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessing']
Security,"e, value):. ~/anaconda3/lib/python3.6/site-packages/pandas/core/categorical.py in _make_accessor(cls, data); 2209 def _make_accessor(cls, data):; 2210 if not is_categorical_dtype(data.dtype):; -> 2211 raise AttributeError(""Can only use .cat accessor with a ""; 2212 ""'category' dtype""); 2213 return CategoricalAccessor(data.values, data.index,. AttributeError: Can only use .cat accessor with a 'category' dtype; ```. Then, I comment out the respective line of code, run the whole thing again, and it works. And when I uncomment the line it works fine again. When I comment the line for the first time, I get a couple of lines displayed in the output saying:; > ... 'donor' was turned into a categorical variable; > ... 'gene_symbols' was turned into a categorical variable. or something like that... My theory is that sanitize_anndata() detects that these variables should be categorical variables and tries to convert them into categoricals. As this sc.pl.scatter call is the first time sanitize_anndata() is called after the variables are read in, this is the first time this conversion would take place. However, I am calling the sc.pl.scatter() on a subsetted anndata object, so it somehow cannot do the conversion. Once I call sc.pl.scatter on a non-subsetted anndata object once, the conversion can take place and I can subsequently call sc.pl.scatter also on a subsetted anndata object. If this is true, I can see why this is happening. However I feel this behaviour will be quite puzzling to a typical user. Maybe sanitize_anndata() should be called before plotting (probably hard to implement), or the plotting functions should have a parameter to plot only a subset of the data. That way sanitize_anndata can be called on the whole anndata object every time as there is no longer a reason to pass a view of the object. You could then test if a view is being passed to sanitize anndata, and then say ""please don't pass subsetted anndata objects to plotting functions"" or something like that.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/166:4512,sanitiz,sanitize,4512,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/166,1,['sanitiz'],['sanitize']
Security,"e.g `pp.filter_genes_dispersion` returns a dict with known keys. if you know the keys, this means you should return an object where you can use attribute access instead. usually the pythonic thing to do in this case is to return a namedtuple. in this case though, we have. ```py; >>> {k: v.shape for k, v in filter_result.items()}; {'dispersions': (173351,),; 'dispersions_norm': (173351,),; 'gene_filter': (173351,),; 'means': (173351,)}; ```. which is a perfect case for a recarray.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/17:154,access,access,154,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/17,1,['access'],['access']
Security,"e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/scanpy/plotting/tools/paga.py"", line 930, in paga_path; idcs_group = np.argsort(adata.obs['dpt_pseudotime'].values[; File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/frame.py"", line 2688, in __getitem__; return self._getitem_column(key); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/frame.py"", line 2695, in _getitem_column; return self._get_item_cache(key); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/generic.py"", line 2489, in _get_item_cache; values = self._data.get(item); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/internals.py"", line 4115, in get; loc = self.items.get_loc(item); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/indexes/base.py"", line 3080, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 140, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 162, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1492, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1500, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'dpt_pseudotime'; ```. My test dataset was probably not an adapted one (I did not find any test to reproduce) but is it an expected behavior? Should we provide as input always a `adata` with `dpt_pseudotime`? Maybe it would be interesting to detail that in the documentation.; Anything I can do to help there?. Bérénice",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/328:1903,hash,hashtable,1903,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/328,2,['hash'],['hashtable']
Security,"e: 'dict'"" error. I looked into the paga.py code but couldn't figure out where the problem is. . The 'seurat_clusters' contains 8 clusters:. ```; adata.obs['seurat_clusters'].cat.categories; ```; `Index(['0', '1', '2', '3', '4', '5', '6', '7'], dtype='object')`. My command-line to run pl.paga with pie nodes:; ```; sc.pl.paga(adata,color={'0':{'red':0.2,'blue':0.8},'1':{'red':0.2,'blue':0.8},'2':{'red':0.2,'blue':0.8},'3':{'red':0.2,'blue':0.8},'4':{'red':0.2,'blue':0.8},'5':{'red':0.2,'blue':0.8},'6':{'red':0.2,'blue':0.8},'7':{'red':0.2,'blue':0.8}}, root=3, layout='eq_tree', node_size_scale=2, save='PAGA_tree.pdf'); ```. Error message:; ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-327-1f686f2dc40b> in <module>(); ----> 1 sc.pl.paga(adata,color=colors). /nfs/med-bfx-activeprojects/weishwu/common/Anaconda3/envs/scanpy/lib/python3.6/site-packages/scanpy/plotting/_tools/paga.py in paga(adata, threshold, color, layout, layout_kwds, init_pos, root, labels, single_component, solid_edges, dashed_edges, transitions, fontsize, fontweight, fontoutline, text_kwds, node_size_scale, node_size_power, edge_width_scale, min_edge_width, max_edge_width, arrowsize, title, left_margin, random_state, pos, normalize_to_color, cmap, cax, colorbar, cb_kwds, frameon, add_pos, export_to_gexf, use_raw, colors, groups, plot, show, save, ax); 474 or (c in var_names); 475 ); --> 476 for c in colors; 477 ]; 478 else:. /nfs/med-bfx-activeprojects/weishwu/common/Anaconda3/envs/scanpy/lib/python3.6/site-packages/scanpy/plotting/_tools/paga.py in <listcomp>(.0); 474 or (c in var_names); 475 ); --> 476 for c in colors; 477 ]; 478 else:. /nfs/med-bfx-activeprojects/weishwu/common/Anaconda3/envs/scanpy/lib/python3.6/site-packages/pandas/core/indexes/base.py in __contains__(self, key); 4069 False; 4070 """"""; -> 4071 hash(key); 4072 try:; 4073 return key in self._engine. TypeError: unhashable type: 'dict'; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1497:2118,hash,hash,2118,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1497,1,['hash'],['hash']
Security,"ested with data from: https://data.humancellatlas.org/explore/projects/0c3b7785-f74d-4091-8616-a68757e4c2a8/m/project-matrices). ```python; import scanpy; loomdata = scanpy.read_loom(""path/bone-marrow-myeloma-human-hematopoeitic-10XV2.loom""). #I also tried:; loomdata=scanpy.read_loom(""path/bone-marrow-myeloma-human-hematopoeitic-10XV2.loom"", obs_names='CellID', var_names='ensembl_ids'. ```. ```pytb; scanpy.read_loom(""/Users/acastanza/Downloads/bone-marrow-myeloma-human-hematopoeitic-10XV2.loom""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/local/anaconda3/lib/python3.8/site-packages/anndata/compat/__init__.py"", line 253, in inner_f; return f(*args, **kwargs); File ""/usr/local/anaconda3/lib/python3.8/site-packages/anndata/_io/read.py"", line 261, in read_loom; with connect(filename, ""r"", **kwargs) as lc:; File ""/usr/local/anaconda3/lib/python3.8/site-packages/loompy/loompy.py"", line 1140, in connect; return LoomConnection(filename, mode, validate=validate, spec_version=spec_version); File ""/usr/local/anaconda3/lib/python3.8/site-packages/loompy/loompy.py"", line 84, in __init__; raise ValueError(""\n"".join(lv.errors) + f""\n{filename} does not appead to be a valid Loom file according to Loom spec version '{spec_version}'""); ValueError: Row attribute 'Gene' dtype object is not allowed; Row attribute 'ensembl_ids' dtype object is not allowed; Row attribute 'gene_names' dtype object is not allowed; Column attribute 'CellID' dtype object is not allowed; Column attribute 'cell_names' dtype object is not allowed; Column attribute 'input_id' dtype object is not allowed; For help, see http://linnarssonlab.org/loompy/format/; /Users/acastanza/Downloads/bone-marrow-myeloma-human-hematopoeitic-10XV2.loom does not appead to be a valid Loom file according to Loom spec version '2.0.1'; ```. #### Versions. <details>. scanpy==1.8.1 anndata==0.7.6.dev49+g19ba44d umap==0.5.1 numpy==1.19.2 scipy==1.7.1 pandas==1.2.4 scikit-learn==0.24.2 statsmodels==",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2040:1506,validat,validate,1506,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2040,2,['validat'],['validate']
Security,"f._adata.obs_names); --> 161 var = _normalize_index(var, self.var_names); 162 return obs, var; 163 . /software/anaconda3/lib/python3.6/site-packages/anndata/_core/index.py in _normalize_index(indexer, index); 72 return indexer; 73 elif isinstance(indexer, str):; ---> 74 return index.get_loc(indexer) # int; 75 elif isinstance(indexer, (Sequence, np.ndarray, pd.Index, spmatrix, np.matrix)):; 76 if hasattr(indexer, ""shape"") and (. /software/anaconda3/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2646 return self._engine.get_loc(key); 2647 except KeyError:; -> 2648 return self._engine.get_loc(self._maybe_cast_indexer(key)); 2649 indexer = self.get_indexer([key], method=method, tolerance=tolerance); 2650 if indexer.ndim > 1 or indexer.size > 1:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'SPP1'. ```. #### Versions. <details>. -----; anndata 0.7.6; scanpy 1.7.2; sinfo 0.3.4; -----; PIL 8.4.0; backcall 0.1.0; bottleneck 1.2.1; cffi 1.11.5; cloudpickle 0.5.3; colorama 0.3.9; cycler 0.10.0; cython_runtime NA; cytoolz 0.9.0.1; dask 0.17.5; dateutil 2.7.3; decorator 4.3.0; fa2 NA; flaskext NA; get_version 2.1; google NA; h5py 2.10.0; igraph 0.9.7; ipykernel 4.8.2; ipython_genutils 0.2.0; ipywidgets 7.2.1; jedi 0.12.0; joblib 0.13.2; kiwisolver 1.0.1; legacy_api_wrap 1.2; leidenalg 0.8.8; llvmlite 0.34.0; louvain 0.6.1; lxml NA; matplotlib 3.3.4; mpl_toolkits NA; natsort 6.0.0; networkx 2.5.1; numba 0.51.2; numexpr 2.6.5; numpy 1.19.5; packaging 21.0; pandas 1.1.5; parso 0.2.0; pexpect 4.5.0; pickleshare 0.7.4; pkg_resources NA; prompt_toolkit 1.0.15; psutil 5.4.5; ptyprocess 0.5.2; pycparser 2.18; pygments 2.2.0; pynndescent 0.5.0; pypa",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2018:4013,hash,hashtable,4013,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2018,1,['hash'],['hashtable']
Security,"g the same code with a fresh Conda environment and the latest dependencies installed. ![image](https://user-images.githubusercontent.com/21954664/106739402-659dfb80-6619-11eb-84f1-e75abfa6167d.png). Top = new, trash results; Bottom = old=agando expected results. The old environment has:. ```; scanpy==1.6.1.dev110+gb4234d81 anndata==0.7.4 umap==0.4.6 numpy==1.19.0 scipy==1.5.1 pandas==1.1.5 scikit-learn==0.23.1 statsmodels==0.12.1 python-igraph==0.8.0 louvain==0.6.1 leidenalg==0.8.3; ```. The new environment has ; ```; scanpy==1.6.1 anndata==0.7.5 umap==0.4.6 numpy==1.20.0 scipy==1.6.0 pandas==1.2.1 scikit-learn==0.24.1 statsmodels==0.12.1 python-igraph==0.8.3 louvain==0.7.0 leidenalg==0.8.3; ```; Full new conda environment:; ```; name: single_cell_analysis; channels:; - defaults; dependencies:; - _libgcc_mutex=0.1=main; - argon2-cffi=20.1.0=py37h7b6447c_1; - async_generator=1.10=py37h28b3542_0; - attrs=20.3.0=pyhd3eb1b0_0; - backcall=0.2.0=pyhd3eb1b0_0; - bleach=3.3.0=pyhd3eb1b0_0; - ca-certificates=2021.1.19=h06a4308_0; - certifi=2020.12.5=py37h06a4308_0; - cffi=1.14.4=py37h261ae71_0; - dbus=1.13.18=hb2f20db_0; - decorator=4.4.2=pyhd3eb1b0_0; - defusedxml=0.6.0=py_0; - entrypoints=0.3=py37_0; - expat=2.2.10=he6710b0_2; - fontconfig=2.13.0=h9420a91_0; - freetype=2.10.4=h5ab3b9f_0; - glib=2.66.1=h92f7085_0; - gst-plugins-base=1.14.0=h8213a91_2; - gstreamer=1.14.0=h28cd5cc_2; - icu=58.2=he6710b0_3; - importlib_metadata=2.0.0=1; - ipykernel=5.3.4=py37h5ca1d4c_0; - ipython=7.20.0=py37hb070fc8_1; - ipython_genutils=0.2.0=pyhd3eb1b0_1; - ipywidgets=7.6.3=pyhd3eb1b0_1; - jedi=0.17.0=py37_0; - jinja2=2.11.3=pyhd3eb1b0_0; - jpeg=9b=h024ee3a_2; - jsonschema=3.2.0=py_2; - jupyter=1.0.0=py37_7; - jupyter_client=6.1.7=py_0; - jupyter_console=6.2.0=py_0; - jupyter_core=4.7.1=py37h06a4308_0; - jupyterlab_pygments=0.1.2=py_0; - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1; - ld_impl_linux-64=2.33.1=h53a641e_7; - libedit=3.1.20191231=h14c3975_1; - libffi=3.3=he6710b0_2; - libgcc-ng=9.1.0=hd",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1625:1662,certificate,certificates,1662,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1625,1,['certificate'],['certificates']
Security,h6115d3f_0 ; r-scales 1.0.0 r36h6115d3f_0 ; r-selectr 0.4_1 r36h6115d3f_0 ; r-shiny 1.3.2 r36h6115d3f_0 ; r-sourcetools 0.1.7 r36h6115d3f_0 ; r-spatial 7.3_11 r36h6115d3f_4 ; r-squarem 2017.10_1 r36h6115d3f_0 ; r-stringi 1.4.3 r36h6115d3f_0 ; r-stringr 1.4.0 r36h6115d3f_0 ; r-survival 2.44_1.1 r36h6115d3f_0 ; r-sys 3.2 r36h6115d3f_0 ; r-tibble 2.1.1 r36h6115d3f_0 ; r-tidyr 0.8.3 r36h6115d3f_0 ; r-tidyselect 0.2.5 r36h6115d3f_0 ; r-tidyverse 1.2.1 r36h6115d3f_0 ; r-timedate 3043.102 r36h6115d3f_0 ; r-tinytex 0.12 r36h6115d3f_0 ; r-ttr 0.23_4 r36h6115d3f_0 ; r-utf8 1.1.4 r36h6115d3f_0 ; r-uuid 0.1_2 r36h6115d3f_4 ; r-viridislite 0.3.0 r36h6115d3f_0 ; r-whisker 0.3_2 r36h6115d3f_4 ; r-withr 2.1.2 r36h6115d3f_0 ; r-xfun 0.6 r36h6115d3f_0 ; r-xml2 1.2.0 r36h6115d3f_0 ; r-xtable 1.8_4 r36h6115d3f_0 ; r-xts 0.11_2 r36h6115d3f_0 ; r-yaml 2.2.0 r36h6115d3f_0 ; r-zoo 1.8_5 r36h6115d3f_0 ; referencing 0.33.0 pypi_0 pypi; requests 2.31.0 py311haa95532_1 ; rfc3339-validator 0.1.4 py311haa95532_0 ; rfc3986-validator 0.1.1 py311haa95532_0 ; rpds-py 0.18.0 pypi_0 pypi; scanpy 1.10.0 pypi_0 pypi; scikit-image 0.22.0 pypi_0 pypi; scikit-learn 1.4.1.post1 pypi_0 pypi; scikit-misc 0.3.1 pypi_0 pypi; scipy 1.12.0 pypi_0 pypi; seaborn 0.13.2 pypi_0 pypi; send2trash 1.8.2 py311haa95532_0 ; session-info 1.0.0 pypi_0 pypi; setuptools 68.2.2 py311haa95532_0 ; six 1.16.0 pyhd3eb1b0_1 ; sniffio 1.3.1 pypi_0 pypi; soupsieve 2.5 py311haa95532_0 ; sqlite 3.41.2 h2bbff1b_0 ; stack-data 0.6.3 pypi_0 pypi; stack_data 0.2.0 pyhd3eb1b0_0 ; statsmodels 0.14.1 pypi_0 pypi; stdlib-list 0.10.0 pypi_0 pypi; tenacity 8.2.3 pypi_0 pypi; terminado 0.18.1 pypi_0 pypi; texttable 1.7.0 pypi_0 pypi; threadpoolctl 3.4.0 pypi_0 pypi; tifffile 2024.2.12 pypi_0 pypi; tinycss2 1.2.1 py311haa95532_0 ; tk 8.6.12 h2bbff1b_0 ; tornado 6.4 pypi_0 pypi; tqdm 4.66.2 pypi_0 pypi; traitlets 5.14.2 pypi_0 pypi; types-python-dateutil 2.9.0.20240315 pypi_0 pypi; typing-extensions 4.9.0 py311haa95532_1 ; typing_extensions 4.9.0 py,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2969:13684,validat,validator,13684,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2969,1,['validat'],['validator']
Security,"h_categories)})$""; 1800 out.var = merge_dataframes(; 1801 [a.var for a in all_adatas],; 1802 out.var_names,; 1803 partial(merge_outer, batch_keys=batch_categories, merge=merge_same),; 1804 ); 1805 out.var = out.var.iloc[; 1806 :,; 1807 (; -> 1808 out.var.columns.str.extract(pat, expand=False); 1809 .fillna(""""); 1810 .argsort(kind=""stable""); 1811 ),; 1812 ]; 1814 return out. File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/accessor.py:224, in CachedAccessor.__get__(self, obj, cls); 221 if obj is None:; 222 # we're accessing the attribute of the class, i.e., Dataset.geo; 223 return self._accessor; --> 224 accessor_obj = self._accessor(obj); 225 # Replace the property with the accessor object. Inspired by:; 226 # https://www.pydanny.com/cached-property.html; 227 # We need to use object.__setattr__ because we overwrite __setattr__ on; 228 # NDFrame; 229 object.__setattr__(obj, self._name, accessor_obj). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:181, in StringMethods.__init__(self, data); 178 def __init__(self, data) -> None:; 179 from pandas.core.arrays.string_ import StringDtype; --> 181 self._inferred_dtype = self._validate(data); 182 self._is_categorical = is_categorical_dtype(data.dtype); 183 self._is_string = isinstance(data.dtype, StringDtype). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:235, in StringMethods._validate(data); 232 inferred_dtype = lib.infer_dtype(values, skipna=True); 234 if inferred_dtype not in allowed_types:; --> 235 raise AttributeError(""Can only use .str accessor with string values!""); 236 return inferred_dtype. AttributeError: Can only use .str accessor with string values!; ```; I did try to eleminate empty cells, but it didn't work; #### Versions. <details>. -----; anndata 0.9.1; scanpy 1.9.3; -----; PIL 9.4.0; absl NA; asttokens NA; attr 22.1.0; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; brotli NA; certifi 2022.12.07; cf",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:2422,access,accessor,2422,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessor']
Security,him 0.2.4; numba 0.59.0; numcodecs 0.12.1; numpy 1.24.4; nvtx 0.2.10; omnipath 1.0.8; openpyxl 3.1.2; orjson 3.9.15; overrides 7.7.0; packaging 24.0; pandas 1.5.3; pandocfilters 1.5.0; panel 1.3.8; param 2.0.2; parso 0.8.3; partd 1.4.1; patsy 0.5.6; pexpect 4.9.0; pickleshare 0.7.5; pillow 10.2.0; pip 24.0; pkgutil_resolve_name 1.3.10; platformdirs 4.2.0; pooch 1.8.1; prometheus_client 0.20.0; prompt-toolkit 3.0.42; protobuf 4.25.3; psutil 5.9.8; ptxcompiler 0.8.1; ptyprocess 0.7.0; pure-eval 0.2.2; pyarrow 14.0.2; pyarrow-hotfix 0.6; pycparser 2.21; pyct 0.5.0; pydantic 1.10.14; pyee 8.1.0; Pygments 2.17.2; pylibcugraph 24.2.0; pylibraft 24.2.0; pynndescent 0.5.11; pynvml 11.4.1; pyparsing 3.1.2; pyppeteer 1.0.2; pyproj 3.6.1; PySocks 1.7.1; python-dateutil 2.9.0; python-json-logger 2.0.7; pytometry 0.1.4; pytz 2024.1; pyviz_comms 3.0.1; PyWavelets 1.4.1; PyYAML 6.0.1; pyzmq 25.1.2; raft-dask 24.2.0; rapids_singlecell 0.9.6; readfcs 1.1.7; referencing 0.33.0; requests 2.31.0; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rich 13.7.1; rmm 24.2.0; rpds-py 0.18.0; Rtree 1.2.0; scanpy 1.10.0rc2; scikit-image 0.22.0; scikit-learn 1.4.1.post1; scikit-misc 0.3.1; scipy 1.12.0; seaborn 0.13.2; Send2Trash 1.8.2; session-info 1.0.0; setuptools 69.1.1; shapely 2.0.3; simpervisor 1.0.0; single_cell_helper 0.0.1 ; six 1.16.0; sniffio 1.3.1; sortedcontainers 2.4.0; soupsieve 2.5; stack-data 0.6.2; statsmodels 0.14.1; stdlib-list 0.10.0; streamz 0.6.4; tblib 3.0.0; terminado 0.18.0; texttable 1.7.0; threadpoolctl 3.3.0; tifffile 2024.2.12; tinycss2 1.2.1; tomli 2.0.1; toolz 0.12.1; tornado 6.4; tqdm 4.66.2; traitlets 5.14.1; treelite 4.0.0; types-python-dateutil 2.8.19.20240311; typing_extensions 4.10.0; typing-utils 0.1.0; uc-micro-py 1.0.3; ucx-py 0.36.0; umap-learn 0.5.5; unicodedata2 15.1.0; uri-template 1.3.0; urllib3 1.26.18; wcwidth 0.2.13; webcolors 1.13; webencodings 0.5.1; websocket-client 1.7.0; websockets 10.4; wget 3.2; wheel 0.42.0; widgetsnbextension 4.0.10; wra,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2964:5368,validat,validator,5368,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2964,1,['validat'],['validator']
Security,"iler_machinery.py:269, in PassManager._runPass.<locals>.check(func, compiler_state); 268 def check(func, compiler_state):; --> 269 mangled = func(compiler_state); 270 if mangled not in (True, False):; 271 msg = (""CompilerPass implementations should return True/False. ""; 272 ""CompilerPass with name '%s' did not.""). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/typed_passes.py:306, in ParforPass.run_pass(self, state); 295 assert state.func_ir; 296 parfor_pass = _parfor_ParforPass(state.func_ir,; 297 state.typemap,; 298 state.calltypes,; (...); 304 state.metadata,; 305 state.parfor_diagnostics); --> 306 parfor_pass.run(); 308 # check the parfor pass worked and warn if it didn't; 309 has_parfor = False. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:2926, in ParforPass.run(self); 2924 # Validate reduction in parfors.; 2925 for p in parfors:; -> 2926 get_parfor_reductions(self.func_ir, p, p.params, self.calltypes); 2928 # Validate parameters:; 2929 for p in parfors:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3549, in get_parfor_reductions(func_ir, parfor, parfor_params, calltypes, reductions, reduce_varnames, param_uses, param_nodes, var_to_param); 3547 if param_name in used_vars and param_name not in reduce_varnames:; 3548 param_nodes[param].reverse(); -> 3549 reduce_nodes = get_reduce_nodes(param, param_nodes[param], func_ir); 3550 # Certain kinds of ill-formed Python (like potentially undefined; 3551 # variables) in combination with SSA can make things look like; 3552 # reductions except that they don't have reduction operators.; 3553 # If we get to this point but don't find a reduction operator; 3554 # then assume it is this situation and just don't treat this; 3555 # variable as a reduction.; 3556 if reduce_nodes is not None:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3637, in get_reduce_nodes(reduction_node, nodes, func_ir); 3635 def",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:9316,Validat,Validate,9316,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['Validat'],['Validate']
Security,"inalize_time:; 298 mutated |= check(pss.run_finalizer, internal_state). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler_machinery.py:269, in PassManager._runPass.<locals>.check(func, compiler_state); 268 def check(func, compiler_state):; --> 269 mangled = func(compiler_state); 270 if mangled not in (True, False):; 271 msg = (""CompilerPass implementations should return True/False. ""; 272 ""CompilerPass with name '%s' did not.""). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/typed_passes.py:306, in ParforPass.run_pass(self, state); 295 assert state.func_ir; 296 parfor_pass = _parfor_ParforPass(state.func_ir,; 297 state.typemap,; 298 state.calltypes,; (...); 304 state.metadata,; 305 state.parfor_diagnostics); --> 306 parfor_pass.run(); 308 # check the parfor pass worked and warn if it didn't; 309 has_parfor = False. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:2926, in ParforPass.run(self); 2924 # Validate reduction in parfors.; 2925 for p in parfors:; -> 2926 get_parfor_reductions(self.func_ir, p, p.params, self.calltypes); 2928 # Validate parameters:; 2929 for p in parfors:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3549, in get_parfor_reductions(func_ir, parfor, parfor_params, calltypes, reductions, reduce_varnames, param_uses, param_nodes, var_to_param); 3547 if param_name in used_vars and param_name not in reduce_varnames:; 3548 param_nodes[param].reverse(); -> 3549 reduce_nodes = get_reduce_nodes(param, param_nodes[param], func_ir); 3550 # Certain kinds of ill-formed Python (like potentially undefined; 3551 # variables) in combination with SSA can make things look like; 3552 # reductions except that they don't have reduction operators.; 3553 # If we get to this point but don't find a reduction operator; 3554 # then assume it is this situation and just don't treat this; 3555 # variable as a reduction.; 3556 if reduce_nodes is not None:. File",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:9179,Validat,Validate,9179,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['Validat'],['Validate']
Security,"l_adata, labels_key=LABELS_KEY); 206 return cls(full_adata, **classifier_kwargs). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/anndata/_core/anndata.py:1808, in AnnData.concatenate(self, join, batch_key, batch_categories, uns_merge, index_unique, fill_value, *adatas); 1799 pat = rf""-({'|'.join(batch_categories)})$""; 1800 out.var = merge_dataframes(; 1801 [a.var for a in all_adatas],; 1802 out.var_names,; 1803 partial(merge_outer, batch_keys=batch_categories, merge=merge_same),; 1804 ); 1805 out.var = out.var.iloc[; 1806 :,; 1807 (; -> 1808 out.var.columns.str.extract(pat, expand=False); 1809 .fillna(""""); 1810 .argsort(kind=""stable""); 1811 ),; 1812 ]; 1814 return out. File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/accessor.py:224, in CachedAccessor.__get__(self, obj, cls); 221 if obj is None:; 222 # we're accessing the attribute of the class, i.e., Dataset.geo; 223 return self._accessor; --> 224 accessor_obj = self._accessor(obj); 225 # Replace the property with the accessor object. Inspired by:; 226 # https://www.pydanny.com/cached-property.html; 227 # We need to use object.__setattr__ because we overwrite __setattr__ on; 228 # NDFrame; 229 object.__setattr__(obj, self._name, accessor_obj). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:181, in StringMethods.__init__(self, data); 178 def __init__(self, data) -> None:; 179 from pandas.core.arrays.string_ import StringDtype; --> 181 self._inferred_dtype = self._validate(data); 182 self._is_categorical = is_categorical_dtype(data.dtype); 183 self._is_string = isinstance(data.dtype, StringDtype). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:235, in StringMethods._validate(data); 232 inferred_dtype = lib.infer_dtype(values, skipna=True); 234 if inferred_dtype not in allowed_types:; --> 235 raise AttributeError(""Can only use .str accessor with string values!""); 236 return inferred_dtype. Attribut",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:2113,access,accessor,2113,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessor']
Security,"metrics/pairwise.py in _parallel_pairwise(X, Y, func, n_jobs, **kwds); 1204 ; 1205 if effective_n_jobs(n_jobs) == 1:; -> 1206 return func(X, Y, **kwds); 1207 ; 1208 # enforce a threading backend to prevent data communication overhead. ~/.local/miniconda3/envs/reprog/lib/python3.6/site-packages/sklearn/metrics/pairwise.py in euclidean_distances(X, Y, Y_norm_squared, squared, X_norm_squared); 230 paired_distances : distances betweens pairs of elements of X and Y.; 231 """"""; --> 232 X, Y = check_pairwise_arrays(X, Y); 233 ; 234 # If norms are passed as float32, they are unused. If arrays are passed as. ~/.local/miniconda3/envs/reprog/lib/python3.6/site-packages/sklearn/metrics/pairwise.py in check_pairwise_arrays(X, Y, precomputed, dtype); 107 if Y is X or Y is None:; 108 X = Y = check_array(X, accept_sparse='csr', dtype=dtype,; --> 109 estimator=estimator); 110 else:; 111 X = check_array(X, accept_sparse='csr', dtype=dtype,. ~/.local/miniconda3/envs/reprog/lib/python3.6/site-packages/sklearn/utils/validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, warn_on_dtype, estimator); 519 ""Reshape your data either using array.reshape(-1, 1) if ""; 520 ""your data has a single feature or array.reshape(1, -1) ""; --> 521 ""if it contains a single sample."".format(array)); 522 ; 523 # in the future np.flexible dtypes will be handled like object dtypes. ValueError: Expected 2D array, got 1D array instead:; array=[0. 0. 1. ... 0. 3. 0.].; Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.; ```. To reproduce:; ```python; import scanpy as sc. adata = sc.datasets.paul15(); sc.pp.neighbors(adata[:, 0]); ```; Not using `.copy()` doesn't seem to be the cause of the problem, since I've tried that and it still crashes.; My versions are:; ```python; scanpy==1.4.4.post1 anndata==0.6.22.post1 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/837:2601,validat,validation,2601,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/837,1,['validat'],['validation']
Security,"n the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.pl.pca(adata, color='CST3'); ```. ```pytb; [Paste the error output produced by the above code here]; ```KeyError Traceback (most recent call last); D:\anaconda\lib\site-packages\pandas\core\indexes\base.py in get_loc(self, key, method, tolerance); 3628 try:; -> 3629 return self._engine.get_loc(casted_key); 3630 except KeyError as err:. D:\anaconda\lib\site-packages\pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc(). D:\anaconda\lib\site-packages\pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'CST3'. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); ~\AppData\Local\Temp\ipykernel_42228\2632014446.py in <module>; 1 # 绘制 PCA 图; ----> 2 sc.pl.pca(adata, color='CST3'). D:\anaconda\lib\site-packages\scanpy\plotting\_tools\scatterplots.py in pca(adata, annotate_var_explained, show, return_fig, save, **kwargs); 869 """"""; 870 if not annotate_var_explained:; --> 871 return embedding(; 872 adata, 'pca', show=show, return_fig=return_fig, save=save, **kwargs; 873 ). D:\anaconda\lib\site-packages\scanpy\plotting\_tools\scatterplots.py in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, neighbors_key, arrows, arrows_kwds, groups, components, dimensions, layer, projection, scale_factor, color_map, cmap, palette, na_color, na_in_legend, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, colorbar_loc, vm",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2430:1188,hash,hashtable,1188,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2430,1,['hash'],['hashtable']
Security,n-info 1.0.0 pypi_0 pypi; setuptools 69.2.0 pyhd8ed1ab_0 conda-forge; setuptools-scm 8.0.4 pypi_0 pypi; six 1.16.0 pypi_0 pypi; statsmodels 0.14.1 pypi_0 pypi; stdlib-list 0.10.0 pypi_0 pypi; texttable 1.7.0 pypi_0 pypi; threadpoolctl 3.4.0 pypi_0 pypi; tifffile 2024.2.12 pypi_0 pypi; tk 8.6.13 noxft_h4845f30_101 conda-forge; toolz 0.12.1 pypi_0 pypi; tqdm 4.66.2 pypi_0 pypi; typing-extensions 4.11.0 pypi_0 pypi; tzdata 2024.1 pypi_0 pypi; umap-learn 0.5.6 pypi_0 pypi; virtualenv 20.25.1 pypi_0 pypi; wheel 0.43.0 pyhd8ed1ab_1 conda-forge; xz 5.2.6 h166bdaf_0 conda-forge; zarr 2.17.2 pypi_0 pypi; ```. </details>. Luke's environment: MacOS Ventura 13.4.1. Intel MacBook pro. <details>; <summary> Luke's failing env </summary>. ```; # packages in environment at /Users/luke.zappia/miniconda3/envs/scanpy-dev:; #; # Name Version Build Channel; anndata 0.10.6 pypi_0 pypi; array-api-compat 1.4.1 pypi_0 pypi; asciitree 0.3.3 pypi_0 pypi; attrs 23.2.0 pypi_0 pypi; bzip2 1.0.8 h10d778d_5 conda-forge; ca-certificates 2024.2.2 h8857fd0_0 conda-forge; cfgv 3.4.0 pypi_0 pypi; click 8.1.7 pypi_0 pypi; cloudpickle 3.0.0 pypi_0 pypi; contourpy 1.2.0 pypi_0 pypi; coverage 7.4.4 pypi_0 pypi; cycler 0.12.1 pypi_0 pypi; dask 2024.3.0 pypi_0 pypi; distlib 0.3.8 pypi_0 pypi; execnet 2.1.1 pypi_0 pypi; fasteners 0.19 pypi_0 pypi; filelock 3.13.3 pypi_0 pypi; fonttools 4.49.0 pypi_0 pypi; fsspec 2024.2.0 pypi_0 pypi; h5py 3.10.0 pypi_0 pypi; identify 2.5.35 pypi_0 pypi; igraph 0.11.4 pypi_0 pypi; imageio 2.34.0 pypi_0 pypi; iniconfig 2.0.0 pypi_0 pypi; joblib 1.3.2 pypi_0 pypi; kiwisolver 1.4.5 pypi_0 pypi; lazy-loader 0.3 pypi_0 pypi; legacy-api-wrap 1.4 pypi_0 pypi; leidenalg 0.10.2 pypi_0 pypi; libexpat 2.6.2 h73e2aa4_0 conda-forge; libffi 3.4.2 h0d85af4_5 conda-forge; libsqlite 3.45.2 h92b6c6a_0 conda-forge; libzlib 1.2.13 h8a1eda9_5 conda-forge; llvmlite 0.42.0 pypi_0 pypi; locket 1.0.0 pypi_0 pypi; matplotlib 3.8.3 pypi_0 pypi; natsort 8.4.0 pypi_0 pypi; ncurses 6.4 h93d8f39_2 conda-forge,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:32506,certificate,certificates,32506,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['certificate'],['certificates']
Security,"ndex.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; >>> adata.raw.var['CD14']; Traceback (most recent call last):; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2646, in get_loc; return self._engine.get_loc(key); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; ```. #### Versions:; ```; scanpy==1.5.1 anndata==0.7.3 umap==0.4.3 numpy==1.18.4 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.23.1 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.7.0; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:5292,hash,hashtable,5292,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,2,['hash'],['hashtable']
Security,"npy/lib/python3.10/site-packages/pandas/core/accessor.py:224, in CachedAccessor.__get__(self, obj, cls); 221 if obj is None:; 222 # we're accessing the attribute of the class, i.e., Dataset.geo; 223 return self._accessor; --> 224 accessor_obj = self._accessor(obj); 225 # Replace the property with the accessor object. Inspired by:; 226 # https://www.pydanny.com/cached-property.html; 227 # We need to use object.__setattr__ because we overwrite __setattr__ on; 228 # NDFrame; 229 object.__setattr__(obj, self._name, accessor_obj). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:181, in StringMethods.__init__(self, data); 178 def __init__(self, data) -> None:; 179 from pandas.core.arrays.string_ import StringDtype; --> 181 self._inferred_dtype = self._validate(data); 182 self._is_categorical = is_categorical_dtype(data.dtype); 183 self._is_string = isinstance(data.dtype, StringDtype). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:235, in StringMethods._validate(data); 232 inferred_dtype = lib.infer_dtype(values, skipna=True); 234 if inferred_dtype not in allowed_types:; --> 235 raise AttributeError(""Can only use .str accessor with string values!""); 236 return inferred_dtype. AttributeError: Can only use .str accessor with string values!; ```; I did try to eleminate empty cells, but it didn't work; #### Versions. <details>. -----; anndata 0.9.1; scanpy 1.9.3; -----; PIL 9.4.0; absl NA; asttokens NA; attr 22.1.0; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; brotli NA; certifi 2022.12.07; cffi 1.15.1; charset_normalizer 2.0.4; chex 0.1.7; colorama 0.4.6; comm 0.1.2; contextlib2 NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; docrep 0.3.2; executing 0.8.3; flax 0.6.1; fsspec 2023.4.0; gmpy2 2.1.2; h5py 3.8.0; hypergeom_ufunc NA; idna 3.4; igraph 0.10.3; invgauss_ufunc NA; ipykernel 6.19.2; ipython_genutils 0.2.0; ipywidgets 8.0.4; j",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:2825,access,accessor,2825,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessor']
Security,numcodecs 0.12.1; numpy 1.24.4; nvtx 0.2.10; omnipath 1.0.8; openpyxl 3.1.2; orjson 3.9.15; overrides 7.7.0; packaging 24.0; pandas 1.5.3; pandocfilters 1.5.0; panel 1.3.8; param 2.0.2; parso 0.8.3; partd 1.4.1; patsy 0.5.6; pexpect 4.9.0; pickleshare 0.7.5; pillow 10.2.0; pip 24.0; pkgutil_resolve_name 1.3.10; platformdirs 4.2.0; pooch 1.8.1; prometheus_client 0.20.0; prompt-toolkit 3.0.42; protobuf 4.25.3; psutil 5.9.8; ptxcompiler 0.8.1; ptyprocess 0.7.0; pure-eval 0.2.2; pyarrow 14.0.2; pyarrow-hotfix 0.6; pycparser 2.21; pyct 0.5.0; pydantic 1.10.14; pyee 8.1.0; Pygments 2.17.2; pylibcugraph 24.2.0; pylibraft 24.2.0; pynndescent 0.5.11; pynvml 11.4.1; pyparsing 3.1.2; pyppeteer 1.0.2; pyproj 3.6.1; PySocks 1.7.1; python-dateutil 2.9.0; python-json-logger 2.0.7; pytometry 0.1.4; pytz 2024.1; pyviz_comms 3.0.1; PyWavelets 1.4.1; PyYAML 6.0.1; pyzmq 25.1.2; raft-dask 24.2.0; rapids_singlecell 0.9.6; readfcs 1.1.7; referencing 0.33.0; requests 2.31.0; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rich 13.7.1; rmm 24.2.0; rpds-py 0.18.0; Rtree 1.2.0; scanpy 1.10.0rc2; scikit-image 0.22.0; scikit-learn 1.4.1.post1; scikit-misc 0.3.1; scipy 1.12.0; seaborn 0.13.2; Send2Trash 1.8.2; session-info 1.0.0; setuptools 69.1.1; shapely 2.0.3; simpervisor 1.0.0; single_cell_helper 0.0.1 ; six 1.16.0; sniffio 1.3.1; sortedcontainers 2.4.0; soupsieve 2.5; stack-data 0.6.2; statsmodels 0.14.1; stdlib-list 0.10.0; streamz 0.6.4; tblib 3.0.0; terminado 0.18.0; texttable 1.7.0; threadpoolctl 3.3.0; tifffile 2024.2.12; tinycss2 1.2.1; tomli 2.0.1; toolz 0.12.1; tornado 6.4; tqdm 4.66.2; traitlets 5.14.1; treelite 4.0.0; types-python-dateutil 2.8.19.20240311; typing_extensions 4.10.0; typing-utils 0.1.0; uc-micro-py 1.0.3; ucx-py 0.36.0; umap-learn 0.5.5; unicodedata2 15.1.0; uri-template 1.3.0; urllib3 1.26.18; wcwidth 0.2.13; webcolors 1.13; webencodings 0.5.1; websocket-client 1.7.0; websockets 10.4; wget 3.2; wheel 0.42.0; widgetsnbextension 4.0.10; wrapt 1.16.0; xarray 2024.2.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2964:5393,validat,validator,5393,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2964,1,['validat'],['validator']
Security,"om/cached-property.html; 227 # We need to use object.__setattr__ because we overwrite __setattr__ on; 228 # NDFrame; 229 object.__setattr__(obj, self._name, accessor_obj). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:181, in StringMethods.__init__(self, data); 178 def __init__(self, data) -> None:; 179 from pandas.core.arrays.string_ import StringDtype; --> 181 self._inferred_dtype = self._validate(data); 182 self._is_categorical = is_categorical_dtype(data.dtype); 183 self._is_string = isinstance(data.dtype, StringDtype). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/strings/accessor.py:235, in StringMethods._validate(data); 232 inferred_dtype = lib.infer_dtype(values, skipna=True); 234 if inferred_dtype not in allowed_types:; --> 235 raise AttributeError(""Can only use .str accessor with string values!""); 236 return inferred_dtype. AttributeError: Can only use .str accessor with string values!; ```; I did try to eleminate empty cells, but it didn't work; #### Versions. <details>. -----; anndata 0.9.1; scanpy 1.9.3; -----; PIL 9.4.0; absl NA; asttokens NA; attr 22.1.0; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; brotli NA; certifi 2022.12.07; cffi 1.15.1; charset_normalizer 2.0.4; chex 0.1.7; colorama 0.4.6; comm 0.1.2; contextlib2 NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; docrep 0.3.2; executing 0.8.3; flax 0.6.1; fsspec 2023.4.0; gmpy2 2.1.2; h5py 3.8.0; hypergeom_ufunc NA; idna 3.4; igraph 0.10.3; invgauss_ufunc NA; ipykernel 6.19.2; ipython_genutils 0.2.0; ipywidgets 8.0.4; jax 0.4.8; jaxlib 0.4.7; jedi 0.18.1; joblib 1.2.0; jupyter_server 1.23.4; kiwisolver 1.4.4; leidenalg 0.9.1; lightning_fabric 1.9.4; lightning_utilities 0.8.0; llvmlite 0.39.1; matplotlib 3.7.1; matplotlib_inline 0.1.6; mkl 2.4.0; ml_collections NA; ml_dtypes 0.1.0; mpl_toolkits NA; mpmath 1.2.1; msgpack 1.0.5; mudata 0.2.2; multipledispatch 0.6.0; natsort 8.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:3121,access,accessor,3121,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['access'],['accessor']
Security,"onents` is no longer used once it can be transformed into dimensions. What does this do?. * Let's us delete `_get_data_points`, an awful function; * Get rid of `data_points` a list of coordinates that most code assumed would only ever have one element; * Move spatial specific code to spatial specific functions; * Gets rid of edge cases where `components` was either `None` or `[None]` (not sure how). Side note, also made a modification to a testing fixture that had been making tests fail when run out of order. ## Some questions:. ### Should `dimensions` be exposed? If so, should `components` be deprecated?. I think it's weird to pass the dimensions as strings `""1,2""` as opposed to dimensions `(0, 1)`. * Why is it one indexed?; * Isn't it the same amount of keystrokes?; * How useful is `""all""`?. I also think it's weird that the amount of plots generated is the product of `components` and `color`. This differs from every other ""vectorized"" argument to `embedding`. Changing arguments and deprecating `components` would be an opportunity to change this. ### If dimensions should be exposed, how many places does this need to be implemented?. We use `components` as an argument in a number of places in the codebase. Should we think about doing a large-scale replacement?. ### I broke a plotting test. I can't tell the difference. @giovp, does this look fine to you? It's the spatial plots with no image. <details>; <summary> </summary>. Expected. ![master_spatial_visium_empty_image](https://user-images.githubusercontent.com/8238804/101748159-4f475800-3b20-11eb-9007-5a987a881828.png). Actual. ![master_spatial_visium_empty_image](https://user-images.githubusercontent.com/8238804/101748219-64bc8200-3b20-11eb-9313-23c04a1c537f.png). Diff. ![master_spatial_visium_empty_image-failed-diff](https://user-images.githubusercontent.com/8238804/101748266-73a33480-3b20-11eb-9a92-2be5f45da300.png). </details>. TODO:. - [ ] Deprecate components repeated behaviour; - [x] Finalize `dimensions` arg",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1538:1369,expose,exposed,1369,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1538,1,['expose'],['exposed']
Security,"ontsize, legend_fontweight, color_map, palette, right_margin, left_margin, size, title, show, save, ax); 281 ax=None):; 282 """"""See docstring of scatter.""""""; --> 283 sanitize_anndata(adata); 284 if legend_loc not in VALID_LEGENDLOCS:; 285 raise ValueError(. ~/scanpy/scanpy/utils.py in sanitize_anndata(adata); 481 # backwards compat... remove this in the future; 482 def sanitize_anndata(adata):; --> 483 adata._sanitize(); 484 ; 485 . ~/anndata/anndata/base.py in _sanitize(self); 1284 if len(c.categories) < len(c):; 1285 df[key] = c; -> 1286 df[key].cat.categories = df[key].cat.categories.astype('U'); 1287 logg.info(; 1288 '... storing \'{}\' as categorical'. ~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in __getattr__(self, name); 3608 if (name in self._internal_names_set or name in self._metadata or; 3609 name in self._accessors):; -> 3610 return object.__getattribute__(self, name); 3611 else:; 3612 if name in self._info_axis:. ~/anaconda3/lib/python3.6/site-packages/pandas/core/accessor.py in __get__(self, instance, owner); 52 # this ensures that Series.str.<method> is well defined; 53 return self.accessor_cls; ---> 54 return self.construct_accessor(instance); 55 ; 56 def __set__(self, instance, value):. ~/anaconda3/lib/python3.6/site-packages/pandas/core/categorical.py in _make_accessor(cls, data); 2209 def _make_accessor(cls, data):; 2210 if not is_categorical_dtype(data.dtype):; -> 2211 raise AttributeError(""Can only use .cat accessor with a ""; 2212 ""'category' dtype""); 2213 return CategoricalAccessor(data.values, data.index,. AttributeError: Can only use .cat accessor with a 'category' dtype; ```. Then, I comment out the respective line of code, run the whole thing again, and it works. And when I uncomment the line it works fine again. When I comment the line for the first time, I get a couple of lines displayed in the output saying:; > ... 'donor' was turned into a categorical variable; > ... 'gene_symbols' was turned into a categorical variable",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/166:2415,access,accessor,2415,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/166,1,['access'],['accessor']
Security,"otime analysis; initialized `.distances` `.connectivities` `.eigen_values` `.eigen_basis` `.distances_dpt`; eigenvalues of transition matrix; [1. 0.87799305 0.74851424 0.7235198 0.5982796 0.5652917; 0.45321003 0.35327435 0.33786523 0.29598442]; finished (0:01:09.57) --> added; 'dpt_pseudotime', the pseudotime (adata.obs); ```. But calling pl.dpt on this object yields an error, looking at the above outout of tl.dpt it seems that dpt_groups was not created in adata.obs if n_branchings=0?. ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /usr/local/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 2524 try:; -> 2525 return self._engine.get_loc(key); 2526 except KeyError:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'dpt_groups'. During handling of the above exception, another exception occurred:. KeyError Traceback (most recent call last); <ipython-input-102-eb7d1d859c99> in <module>(); ----> 1 sc.pl.dpt(adata, groups=None). ~/gitDevelopment/scanpy/scanpy/plotting/tools/__init__.py in dpt(adata, basis, color, alpha, groups, components, projection, legend_loc, legend_fontsize, legend_fontweight, color_map, palette, right_margin, size, title, show, save); 677 """"""; 678 colors = ['dpt_pseudotime']; --> 679 if len(np.unique(adata.obs['dpt_groups'].values)) > 1: colors += ['dpt_groups']; 680 if color is not None: colors = color; 681 dpt_scatter(. /usr/local/lib/python3.6/site-packages/pandas/core/frame.py in __getitem__(self, key); 2137 return self._getitem_multilevel(key); 2138 else:; -> 2139 return self._getitem_column(key); 2140 ; 2141 def _getitem_column(self,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/129:1169,hash,hashtable,1169,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/129,1,['hash'],['hashtable']
Security,"paga.py:911: in _paga_graph; sct = ax.scatter(; ../../../../anaconda3/envs/scanpy-dev/lib/python3.8/site-packages/matplotlib/__init__.py:1442: in inner; return func(ax, *map(sanitize_sequence, args), **kwargs); ../../../../anaconda3/envs/scanpy-dev/lib/python3.8/site-packages/matplotlib/axes/_axes.py:4602: in scatter; self._parse_scatter_color_args(; ../../../../anaconda3/envs/scanpy-dev/lib/python3.8/site-packages/matplotlib/axes/_axes.py:4400: in _parse_scatter_color_args; and isinstance(cbook._safe_first_finite(c), str))); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. obj = [nan, nan, nan, nan, nan, nan, ...]. def _safe_first_finite(obj, *, skip_nonfinite=True):; """"""; Return the first non-None (and optionally finite) element in *obj*.; ; This is a method for internal use.; ; This is a type-independent way of obtaining the first non-None element,; supporting both index access and the iterator protocol.; The first non-None element will be obtained when skip_none is True.; """"""; def safe_isfinite(val):; if val is None:; return False; try:; return np.isfinite(val) if np.isscalar(val) else True; except TypeError:; # This is something that numpy can not make heads or tails; # of, assume ""finite""; return True; if skip_nonfinite is False:; if isinstance(obj, collections.abc.Iterator):; # needed to accept `array.flat` as input.; # np.flatiter reports as an instance of collections.Iterator; # but can still be indexed via [].; # This has the side effect of re-setting the iterator, but; # that is acceptable.; try:; return obj[0]; except TypeError:; pass; raise RuntimeError(""matplotlib does not support generators ""; ""as input""); return next(iter(obj)); elif isinstance(obj, np.flatiter):; # TODO do the finite filtering on this; return obj[0]; elif isinstance(obj, collections.abc.Iterator):; raise RuntimeError(""matplotlib does not """,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2459:4139,access,access,4139,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2459,1,['access'],['access']
Security,"portError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); =========================================================== 8 failed, 670 passed, 40 skipped, 3 xfailed, 400 warnings, 130 errors in 44.70s ============================================================; ```. </details> . Now we get a ton of failures due to a failure to import test dataset helpers. -----. Pinning `pytest<8` seems to resolve the issue. @flying-sheep any ideas? Any idea why CI is working with pytest 8.1.1 while we get failures locally?. ### Environment info. My environments are both using ubuntu. <details>; <summary> My working env </summary>. ```; # packages in environment at /mnt/workspace/mambaforge/envs/scanpy-dev2:; #; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 2_gnu conda-forge; anndata 0.10.7 pypi_0 pypi; array-api-compat 1.6 pypi_0 pypi; asciitree 0.3.3 pypi_0 pypi; attrs 23.2.0 pypi_0 pypi; bzip2 1.0.8 hd590300_5 conda-forge; ca-certificates 2024.2.2 hbcca054_0 conda-forge; cfgv 3.4.0 pypi_0 pypi; click 8.1.7 pypi_0 pypi; cloudpickle 3.0.0 pypi_0 pypi; contourpy 1.2.1 pypi_0 pypi; coverage 7.4.4 pypi_0 pypi; cycler 0.12.1 pypi_0 pypi; dask 2024.4.1 pypi_0 pypi; dask-expr 1.0.10 pypi_0 pypi; distlib 0.3.8 pypi_0 pypi; execnet 2.1.1 pypi_0 pypi; fasteners 0.19 pypi_0 pypi; filelock 3.13.3 pypi_0 pypi; fonttools 4.51.0 pypi_0 pypi; fsspec 2024.3.1 pypi_0 pypi; h5py 3.10.0 pypi_0 pypi; identify 2.5.35 pypi_0 pypi; igraph 0.11.4 pypi_0 pypi; imageio 2.34.0 pypi_0 pypi; iniconfig 2.0.0 pypi_0 pypi; joblib 1.4.0 pypi_0 pypi; kiwisolver 1.4.5 pypi_0 pypi; lazy-loader 0.4 pypi_0 pypi; ld_impl_linux-64 2.40 h41732ed_0 conda-forge; legacy-api-wrap 1.4 pypi_0 pypi; leidenalg 0.10.2 pypi_0 pypi; libexpat 2.6.2 h59595ed_0 conda-forge; libffi 3.4.2 h7f98852_5 conda-forge; libgcc-ng 13.2.0 h807b86a_5 conda-forge; libgomp 13.2.0 h807b86a_5 conda-forge; libnsl 2.0.1 hd590300_0 conda-forge; libsqlite 3.45.2 h2797004_0 conda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:25786,certificate,certificates,25786,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['certificate'],['certificates']
Security,"pper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positional:]. File /opt/miniconda3/envs/scanpyenvt/lib/python3.12/site-packages/scanpy/preprocessing/_highly_variable_genes.py:655, in highly_variable_genes(adata, layer, n_top_genes, min_disp, max_disp, min_mean, max_mean, span, n_bins, flavor, subset, inplace, batch_key, check_values); 653 sig = signature(_highly_variable_genes_seurat_v3); 654 n_top_genes = cast(int, sig.parameters[""n_top_genes""].default); --> 655 return _highly_variable_genes_seurat_v3(; 656 adata,; 657 flavor=flavor,; 658 layer=layer,; 659 n_top_genes=n_top_genes,; 660 batch_key=batch_key,; 661 check_values=check_values,; 662 span=span,; 663 subset=subset,; 664 inplace=inplace,; 665 ); 667 cutoff = _Cutoffs.validate(; 668 n_top_genes=n_top_genes,; 669 min_disp=min_disp,; (...); 672 max_mean=max_mean,; 673 ); 674 del min_disp, max_disp, min_mean, max_mean, n_top_genes. File /opt/miniconda3/envs/scanpyenvt/lib/python3.12/site-packages/scanpy/preprocessing/_highly_variable_genes.py:68, in _highly_variable_genes_seurat_v3(adata, flavor, layer, n_top_genes, batch_key, check_values, span, subset, inplace); 66 from skmisc.loess import loess; 67 except ImportError:; ---> 68 raise ImportError(; 69 ""Please install skmisc package via `pip install --user scikit-misc""; 70 ); 71 df = pd.DataFrame(index=adata.var_names); 72 data = _get_obs_rep(adata, layer=layer). ImportError: Please install skmisc package via `pip install --user scikit-misc; ```. error when attempting install w/ conda; ```python. (scanpy_env) user@Mac ~ % conda install conda-forge::scikit-misc; Channels:; - defaults; - conda-forge; Platform: osx-arm64; Collecting package metadata (repodata.json): done; Solving environment: failed. PackagesNotFoundError: The following p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3144:3669,validat,validate,3669,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3144,1,['validat'],['validate']
Security,pre_existing_clusters argument for hashsolo doesn't work,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1482:35,hash,hashsolo,35,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1482,1,['hash'],['hashsolo']
Security,"proj077/backup/public_data/scanpy_tutorials_data/PBMC3K/filtered_gene_bc_matrices/hg19/barcodes.tsv'; ----> 4 adata = sc.read(filename_data, cache=True).transpose(); 5 adata.var_names = np.genfromtxt(filename_genes, dtype=str)[:, 1]; 6 adata.smp_names = np.genfromtxt(filename_barcodes, dtype=str). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read(filename_or_filekey, sheet, ext, delimiter, first_column_names, backup_url, return_dict, cache); 73 if is_filename(filename_or_filekey):; 74 data = read_file(filename_or_filekey, sheet, ext, delimiter,; ---> 75 first_column_names, backup_url, cache); 76 if isinstance(data, dict):; 77 return data if return_dict else AnnData(data). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read_file(filename, sheet, ext, delimiter, first_column_names, backup_url, cache); 364 os.makedirs(os.path.dirname(filename_cache)); 365 # write for faster reading when calling the next time; --> 366 write_dict_to_file(filename_cache, ddata, sett.file_format_data); 367 return ddata; 368 . /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in write_dict_to_file(filename, d, ext); 771 d_write[key] = value; 772 # now open the file; --> 773 wait_until_file_unused(filename) # thread-safe writing; 774 if ext == 'h5':; 775 with h5py.File(filename, 'w') as f:. /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in wait_until_file_unused(filename); 935 ; 936 def wait_until_file_unused(filename):; --> 937 while (filename in get_used_files()):; 938 time.sleep(1); 939 . /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in get_used_files(); 919 def get_used_files():; 920 """"""Get files used by processes with name scanpy.""""""; --> 921 loop_over_scanpy_processes = (proc for proc in psutil.process_iter(); 922 if proc.name() == 'scanpy'); 923 filenames = []. AttributeError: module 'psutil' has no attribute 'process_iter'. `",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/35:1605,hash,hashem,1605,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/35,3,['hash'],['hashem']
Security,"ptr = np.empty(M + 1, dtype=idx_dtype); 461 indptr[0] = 0; --> 462 _csparsetools.lil_get_lengths(self.rows, indptr[1:]); 463 np.cumsum(indptr, out=indptr); 464 nnz = indptr[-1]. _csparsetools.pyx in scipy.sparse._csparsetools.lil_get_lengths(). ~/miniconda3/envs/python_env/lib/python3.6/site-packages/scipy/sparse/_csparsetools.cpython-36m-x86_64-linux-gnu.so in View.MemoryView.memoryview_cwrapper(). ~/miniconda3/envs/python_env/lib/python3.6/site-packages/scipy/sparse/_csparsetools.cpython-36m-x86_64-linux-gnu.so in View.MemoryView.memoryview.__cinit__(). TypeError: a bytes-like object is required, not 'list'; ```. Conda list output. ```; # packages in environment at /wynton/home/state/alkhairohr/miniconda3/envs/python_env:; #; # Name Version Build Channel; _libgcc_mutex 0.1 main ; anndata 0.7.3 pypi_0 pypi; attrs 19.3.0 py_0 conda-forge; backcall 0.2.0 pyh9f0ad1d_0 conda-forge; blas 1.0 mkl ; bleach 3.1.5 pyh9f0ad1d_0 conda-forge; blosc 1.19.0 hd408876_0 ; bzip2 1.0.8 h7b6447c_0 ; ca-certificates 2020.1.1 0 ; certifi 2020.6.20 py36_0 ; colorlover 0.3.0 py_0 conda-forge; cycler 0.10.0 py36_0 ; dbus 1.13.6 he372182_0 conda-forge; decorator 4.4.2 py_0 conda-forge; defusedxml 0.6.0 py_0 conda-forge; entrypoints 0.3 py36h9f0ad1d_1001 conda-forge; expat 2.2.9 he1b5a44_2 conda-forge; fontconfig 2.13.1 he4413a7_1000 conda-forge; freetype 2.10.2 he06d7ca_0 conda-forge; get-version 2.1 pypi_0 pypi; glib 2.63.1 h3eb4bd4_1 ; gst-plugins-base 1.14.0 hbbd80ab_1 ; gstreamer 1.14.0 hb31296c_0 ; h5py 2.10.0 pypi_0 pypi; hdf5 1.10.4 hb1b8bf9_0 ; icu 58.2 hf484d3e_1000 conda-forge; importlib-metadata 1.6.1 py36h9f0ad1d_0 conda-forge; importlib_metadata 1.6.1 0 conda-forge; intel-openmp 2020.1 217 ; ipyevents 0.7.1 py_0 conda-forge; ipykernel 5.3.0 py36h95af2a2_0 conda-forge; ipython 7.15.0 py36h9f0ad1d_0 conda-forge; ipython_genutils 0.2.0 py_1 conda-forge; ipywidgets 7.5.1 py_0 conda-forge; jedi 0.17.1 py36h9f0ad1d_0 conda-forge; jinja2 2.11.2 pyh9f0ad1d_0 conda-forge; joblib 0.15.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1293:5761,certificate,certificates,5761,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1293,1,['certificate'],['certificates']
Security,"ranch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. Hello Scanpy,; It's very smooth to subset the adata by HVGs when doing `adata = adata[:, adata.var.highly_variable]` in the Scanpy pipeline. But when using the same coding to subeset a new raw adata, it generate errors. Could you please help me to check this issue?; Thanks!; Best,; YJ. ### Minimal code sample (that we can copy&paste without having any data). ```python; ACT_sub2 = sc.read('C:/Users/Park_Lab/Documents/ACT_sub2.h5ad') # Scanpy proceeded data; ACT_sub2; AnnData object with n_obs × n_vars = 2636 × 5000; obs: 'leiden', 'n_genes', 'n_genes_by_counts', 'total_counts', 'total_counts_mt', 'pct_counts_mt', 'total_counts_rpl', 'pct_counts_rpl', 'total_counts_rps', 'pct_counts_rps'; var: 'Accession', 'Chromosome', 'End', 'Start', 'Strand', 'n_cells', 'mt', 'rpl', 'rps', 'n_cells_by_counts', 'mean_counts', 'pct_dropout_by_counts', 'total_counts', 'highly_variable', 'means', 'dispersions', 'dispersions_norm', 'mean', 'std'; uns: 'hvg', 'leiden', 'leiden_colors', 'neighbors', 'pca', 'rank_genes_groups', 'umap'; obsm: 'X_pca', 'X_umap'; varm: 'PCs'; layers: 'ambiguous', 'matrix', 'spliced', 'unspliced'; obsp: 'connectivities', 'distances'. adata = sc.read_loom(filename='C:/Users/Park_Lab/Documents/cellsorted_Apc_Cracd_Tumor_KPVDV.loom') # raw data; adata.var_names_make_unique(); adata; AnnData object with n_obs × n_vars = 13499 × 32285; var: 'Accession', 'Chromosome', 'End', 'Start', 'Strand'; layers: 'matrix', 'ambiguous', 'spliced', 'unspliced'. adata.var['highly_variable']=ACT_sub2.var['highly_variable']; adata = adata[:, adata.var.highly_variable] # subset the raw data by ACT_sub2's highly variable genes. KeyError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_9544/4098982234.py in <module>; ----> 1 adata = adata[:, adata.var.highly_variabl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2095:1116,Access,Accession,1116,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2095,1,['Access'],['Accession']
Security,rge; pyparsing 3.1.2 pyhd8ed1ab_0 conda-forge; pyqt 5.15.10 py39h313beb8_0 ; pyqt5-sip 12.13.0 py39h80987f9_0 ; pyro-api 0.1.2 pyhd8ed1ab_0 conda-forge; pyro-ppl 1.8.6 pyhd8ed1ab_0 conda-forge; pysocks 1.7.1 py39hca03da5_0 ; python 3.9.18 hd7ebdb9_1_cpython conda-forge; python-dateutil 2.9.0 pyhd8ed1ab_0 conda-forge; python-fastjsonschema 2.16.2 py39hca03da5_0 ; python-igraph 0.11.5 py39hd012b80_1 conda-forge; python-json-logger 2.0.7 py39hca03da5_0 ; python-tzdata 2024.1 pyhd8ed1ab_0 conda-forge; python_abi 3.9 4_cp39 conda-forge; pytorch 1.12.1 cpu_py39h6ba7f14_0 ; pytorch-lightning 1.9.4 pyhd8ed1ab_1 conda-forge; pytz 2024.1 py39hca03da5_0 ; pyyaml 6.0.1 py39h0f82c59_1 conda-forge; pyzmq 25.1.2 py39h313beb8_0 ; qt-main 5.15.8 hf679f28_21 conda-forge; qtconsole 5.5.1 py39hca03da5_0 ; qtpy 2.4.1 py39hca03da5_0 ; re2 2023.02.01 hb7217d7_0 conda-forge; readline 8.2 h1a28f6b_0 ; referencing 0.30.2 py39hca03da5_0 ; requests 2.32.2 py39hca03da5_0 ; rfc3339-validator 0.1.4 py39hca03da5_0 ; rfc3986-validator 0.1.1 py39hca03da5_0 ; rich 13.7.1 pyhd8ed1ab_0 conda-forge; rpds-py 0.10.6 py39hf0e4da2_0 ; scanpy 1.8.1 pypi_0 pypi; scikit-learn 1.1.2 py39h598ef33_0 conda-forge; scikit-misc 0.3.1 pypi_0 pypi; scipy 1.13.1 py39h3d5391c_0 conda-forge; scvi-tools 0.20.3 pyhd8ed1ab_0 conda-forge; seaborn 0.12.2 hd8ed1ab_0 conda-forge; seaborn-base 0.12.2 pyhd8ed1ab_0 conda-forge; send2trash 1.8.2 py39hca03da5_0 ; session-info 1.0.0 pyhd8ed1ab_0 conda-forge; setuptools 69.5.1 py39hca03da5_0 ; sinfo 0.3.4 pypi_0 pypi; sip 6.7.12 py39h313beb8_0 ; six 1.16.0 pyh6c4a22f_0 conda-forge; sniffio 1.3.0 py39hca03da5_0 ; soupsieve 2.5 py39hca03da5_0 ; sqlite 3.45.3 h80987f9_0 ; stack_data 0.2.0 pyhd3eb1b0_0 ; statsmodels 0.14.2 py39h161d348_0 conda-forge; stdlib-list 0.10.0 pyhd8ed1ab_0 conda-forge; tbb 2021.8.0 h48ca7d4_0 ; terminado 0.17.1 py39hca03da5_0 ; texttable 1.7.0 pyhd8ed1ab_0 conda-forge; threadpoolctl 3.5.0 pyhc1e730c_0 conda-forge; tinycss2 1.2.1 py39hca03da5_0 ; tk 8.6.14 h6ba3021_,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3144:14344,validat,validator,14344,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3144,1,['validat'],['validator']
Security,"ributeError Traceback (most recent call last); <ipython-input-3-ef7315cdb8ff> in <module>(); 2 filename_genes = '/ifs/projects/proj077/backup/public_data/scanpy_tutorials_data/PBMC3K/filtered_gene_bc_matrices/hg19/genes.tsv'; 3 filename_barcodes = '/ifs/projects/proj077/backup/public_data/scanpy_tutorials_data/PBMC3K/filtered_gene_bc_matrices/hg19/barcodes.tsv'; ----> 4 adata = sc.read(filename_data, cache=True).transpose(); 5 adata.var_names = np.genfromtxt(filename_genes, dtype=str)[:, 1]; 6 adata.smp_names = np.genfromtxt(filename_barcodes, dtype=str). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read(filename_or_filekey, sheet, ext, delimiter, first_column_names, backup_url, return_dict, cache); 73 if is_filename(filename_or_filekey):; 74 data = read_file(filename_or_filekey, sheet, ext, delimiter,; ---> 75 first_column_names, backup_url, cache); 76 if isinstance(data, dict):; 77 return data if return_dict else AnnData(data). /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in read_file(filename, sheet, ext, delimiter, first_column_names, backup_url, cache); 364 os.makedirs(os.path.dirname(filename_cache)); 365 # write for faster reading when calling the next time; --> 366 write_dict_to_file(filename_cache, ddata, sett.file_format_data); 367 return ddata; 368 . /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in write_dict_to_file(filename, d, ext); 771 d_write[key] = value; 772 # now open the file; --> 773 wait_until_file_unused(filename) # thread-safe writing; 774 if ext == 'h5':; 775 with h5py.File(filename, 'w') as f:. /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in wait_until_file_unused(filename); 935 ; 936 def wait_until_file_unused(filename):; --> 937 while (filename in get_used_files()):; 938 time.sleep(1); 939 . /ifs/devel/hashem/sw-v1/conda/lib/python3.6/site-packages/scanpy/readwrite.py in get_used_files(); 919 def get_used_fi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/35:1234,hash,hashem,1234,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/35,1,['hash'],['hashem']
Security,"s/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'; >>> adata.raw.var['CD14']; Traceback (most recent call last):; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2646, in get_loc; return self._engine.get_loc(key); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item; KeyError: 'CD14'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/frame.py"", line 2800, in __getitem__; indexer = self.columns.get_loc(key); File ""/Users/marcellp/Code/biomage/worker/venv/lib/python3.7/site-packages/pandas/core/indexes/base.py"", line 2648, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1627, in p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:4388,hash,hashtable,4388,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,1,['hash'],['hashtable']
Security,"s_mt'); sc.pl.scatter(Rajbhandari, x='total_counts', y='n_genes_by_counts'). sc.pl.scatter(Sun, x='total_counts', y='pct_counts_mt'); sc.pl.scatter(Sun, x='total_counts', y='n_genes_by_counts'). ```. And this is the error. ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3360 try:; -> 3361 return self._engine.get_loc(casted_key); 3362 except KeyError as err:. /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'total_counts'. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/core/frame.py in _set_item_mgr(self, key, value); 3745 try:; -> 3746 loc = self._info_axis.get_loc(key); 3747 except KeyError:. /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3362 except KeyError as err:; -> 3363 raise KeyError(key) from err; 3364 . KeyError: 'total_counts'. During handling of the above exception, another exception occurred:. ValueError Traceback (most recent call last); <ipython-input-3-69925a75d466> in <module>; 1 #calcular e visualizar metricas de QC por estudo; ----> 2 sc.pp.ca",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1925:2515,hash,hashtable,2515,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1925,1,['hash'],['hashtable']
Security,scikit-misc_c6914ced8cef4877a07998e75e28ca3e/.mesonpy-ykxq6c1e/meson-python-native-file.ini; Preparing metadata (pyproject.toml) did not run successfully.; ```. ### Error output. _No response_. ### Versions. <details>. ```; # Name Version Build Channel; absl-py 2.1.0 pyhd8ed1ab_0 conda-forge; anndata 0.10.8 pypi_0 pypi; anyio 4.2.0 py39hca03da5_0 ; appnope 0.1.2 py39hca03da5_1001 ; argon2-cffi 21.3.0 pyhd3eb1b0_0 ; argon2-cffi-bindings 21.2.0 py39h1a28f6b_0 ; arpack 3.9.1 nompi_h593882a_101 conda-forge; array-api-compat 1.7.1 pyhd8ed1ab_0 conda-forge; asttokens 2.0.5 pyhd3eb1b0_0 ; async-lru 2.0.4 py39hca03da5_0 ; attrs 23.1.0 py39hca03da5_0 ; babel 2.11.0 py39hca03da5_0 ; backcall 0.2.0 pyhd3eb1b0_0 ; beautifulsoup4 4.12.3 py39hca03da5_0 ; blas 1.0 openblas ; bleach 4.1.0 pyhd3eb1b0_0 ; blosc2 2.0.0 pypi_0 pypi; brotli 1.1.0 hb547adb_1 conda-forge; brotli-bin 1.1.0 hb547adb_1 conda-forge; brotli-python 1.0.9 py39h313beb8_8 ; bzip2 1.0.8 h80987f9_6 ; c-ares 1.28.1 h93a5062_0 conda-forge; ca-certificates 2024.7.4 hf0a4a13_0 conda-forge; cached-property 1.5.2 hd8ed1ab_1 conda-forge; cached_property 1.5.2 pyha770c72_1 conda-forge; certifi 2024.6.2 py39hca03da5_0 ; cffi 1.16.0 py39he153c15_0 conda-forge; charset-normalizer 2.0.4 pyhd3eb1b0_0 ; chex 0.1.81 pyhd8ed1ab_0 conda-forge; colorama 0.4.6 pyhd8ed1ab_0 conda-forge; comm 0.2.1 py39hca03da5_0 ; contextlib2 21.6.0 pyhd8ed1ab_0 conda-forge; cycler 0.12.1 pyhd8ed1ab_0 conda-forge; cython 3.0.10 pypi_0 pypi; debugpy 1.6.7 py39h313beb8_0 ; decorator 5.1.1 pyhd3eb1b0_0 ; defusedxml 0.7.1 pyhd3eb1b0_0 ; dm-tree 0.1.7 py39h2666b31_0 conda-forge; docrep 0.3.2 pyh44b312d_0 conda-forge; et_xmlfile 1.1.0 pyhd8ed1ab_0 conda-forge; etils 1.6.0 pyhd8ed1ab_0 conda-forge; exceptiongroup 1.2.1 pypi_0 pypi; executing 0.8.3 pyhd3eb1b0_0 ; flax 0.6.1 pyhd8ed1ab_1 conda-forge; fonttools 4.53.0 py39hfea33bf_0 conda-forge; freetype 2.12.1 hadb7bae_2 conda-forge; fsspec 2024.6.1 pyhff2d567_0 conda-forge; future 1.0.0 pyhd8ed1ab_0 conda-forge,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3144:6742,certificate,certificates,6742,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3144,1,['certificate'],['certificates']
Security,"self._compute_connectivities_v1_2(); 129 elif self._model == 'v1.0':; 130 return self._compute_connectivities_v1_0(). C:\Anaconda\lib\site-packages\scanpy\tools\_paga.py in _compute_connectivities_v1_2(self); 141 g = utils.get_igraph_from_adjacency(ones, directed=True); 142 vc = igraph.VertexClustering(; --> 143 g, membership=self._adata.obs[self._groups_key].cat.codes.values); 144 ns = vc.sizes(); 145 n = sum(ns). C:\Anaconda\lib\site-packages\pandas\core\frame.py in __getitem__(self, key); 2925 if self.columns.nlevels > 1:; 2926 return self._getitem_multilevel(key); -> 2927 indexer = self.columns.get_loc(key); 2928 if is_integer(indexer):; 2929 indexer = [indexer]. C:\Anaconda\lib\site-packages\pandas\core\indexes\base.py in get_loc(self, key, method, tolerance); 2657 return self._engine.get_loc(key); 2658 except KeyError:; -> 2659 return self._engine.get_loc(self._maybe_cast_indexer(key)); 2660 indexer = self.get_indexer([key], method=method, tolerance=tolerance); 2661 if indexer.ndim > 1 or indexer.size > 1:. pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'louvain'; ```. </details>. I am a beginner in Python, so I fully realise that the background information may not be complete. Below is my system info:; ```; {'commit_hash': 'd774f565b',; 'commit_source': 'installation',; 'default_encoding': 'cp1252',; 'ipython_path': 'C:\\Anaconda\\lib\\site-packages\\IPython',; 'ipython_version': '7.4.0',; 'os_name': 'nt',; 'platform': 'Windows-10-10.0.18362-SP0',; 'sys_executable': 'C:\\Anaconda\\python.exe',; 'sys_platform': 'win32',; 'sys_version': '3.7.3 (default, Mar 27 2019, 17:13:21) [MSC v.1915 64 bit '; '(AMD64)]'}; ```. Thank you very much for your response. Best regards,; Mikhael",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/755:2862,hash,hashtable,2862,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/755,2,['hash'],['hashtable']
Security,"ssues/1916#issuecomment-927497782). `Carraro=sc.read_10x_mtx('/mnt/Carraro',var_names='gene_ids')`. Switching to `gene_symbols` didn't work. Error messages:; ```; --> This might be very slow. Consider passing `cache=True`, which enables much faster reading from a cache file. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3360 try:; -> 3361 return self._engine.get_loc(casted_key); 3362 except KeyError as err:. ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). KeyError: 1. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); /tmp/ipykernel_29519/245170133.py in <module>; ----> 1 Carraro=sc.read_10x_mtx('/mnt/Carraro',var_names='gene_ids'). ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/readwrite.py in read_10x_mtx(path, var_names, make_unique, cache, cache_compression, gex_only); 452 genefile_exists = (path / 'genes.tsv').is_file(); 453 read = _read_legacy_10x_mtx if genefile_exists else _read_v3_10x_mtx; --> 454 adata = read(; 455 str(path),; 456 var_names=var_names,. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/readwrite.py in _read_legacy_10x_mtx(path, var_names, make_unique, cache, cache_compression); 491 elif var_names == 'gene_ids':; 492 adata.var_names = genes[0].values; --> 493 adata.var['gene_symbols'] = genes[1].values; 494 else:; 495 raise ValueError(""`var_names` needs to be 'gene_symbols' or 'gene_ids'""). ~/minicon",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2053:1072,hash,hashtable,1072,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2053,1,['hash'],['hashtable']
Security,"sue has not already been reported.; - [x ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. Hello. I installed scanpy with no errors or warnings. When I tried to import it, I get the error. ```python; import scanpy as sc; ```. ```pytb; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-0074c9bc0b31> in <module>; ----> 1 import scanpy as sc. path/lib/python3.9/site-packages/scanpy/__init__.py in <module>; 6 from ._utils import check_versions; 7 ; ----> 8 check_versions(); 9 del check_versions, within_flit; 10 . path/lib/python3.9/site-packages/scanpy/_utils/__init__.py in check_versions(); 47 umap_version = pkg_version(""umap-learn""); 48 ; ---> 49 if version.parse(anndata_version) < version.parse('0.6.10'):; 50 from .. import __version__; 51 . path/lib/python3.9/site-packages/packaging/version.py in parse(version); 47 """"""; 48 try:; ---> 49 return Version(version); 50 except InvalidVersion:; 51 return LegacyVersion(version). path/lib/python3.9/site-packages/packaging/version.py in __init__(self, version); 262 ; 263 # Validate the version and parse it into pieces; --> 264 match = self._regex.search(version); 265 if not match:; 266 raise InvalidVersion(f""Invalid version: '{version}'""). TypeError: expected string or bytes-like object. ```. #### Versions. linux. ```. ! cat /etc/os-release. NAME=""CentOS Linux""; VERSION=""7 (Core)""; ID=""centos""; ID_LIKE=""rhel fedora""; VERSION_ID=""7""; PRETTY_NAME=""CentOS Linux 7 (Core)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:centos:centos:7""; HOME_URL=""https://www.centos.org/""; BUG_REPORT_URL=""https://bugs.centos.org/"". CENTOS_MANTISBT_PROJECT=""CentOS-7""; CENTOS_MANTISBT_PROJECT_VERSION=""7""; REDHAT_SUPPORT_PRODUCT=""centos""; REDHAT_SUPPORT_PRODUCT_VERSION=""7"". ```. python. ```; sys.version_info(major=3, minor=9, micro=2, releaselevel='final', serial=0); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2306:1257,Validat,Validate,1257,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2306,1,['Validat'],['Validate']
Security,"t loompy version? Thanks so much for any help! -Orr; ```; import scanpy.api as sc ; sc.read_loom('./Thienpont_T-cell_v4_R_fixed.loom'). ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-2-3e86e297513a> in <module>; 1 import scanpy.api as sc; ----> 2 sc.read_loom('./Thienpont_T-cell_v4_R_fixed.loom'). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/anndata/readwrite/read.py in read_loom(filename, sparse, cleanup, X_name, obs_names, var_names); 142 filename = fspath(filename) # allow passing pathlib.Path objects; 143 from loompy import connect; --> 144 with connect(filename, 'r') as lc:; 145 ; 146 if X_name not in lc.layers.keys(): X_name = ''. ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in connect(filename, mode, validate, spec_version); 1151 Note: if validation is requested, an exception is raised if validation fails.; 1152 	""""""; -> 1153 return LoomConnection(filename, mode, validate=validate, spec_version=spec_version). ~/miniconda3/envs/scanpy/lib/python3.6/site-packages/loompy/loompy.py in __init__(self, filename, mode, validate, spec_version); 82 lv = loompy.LoomValidator(version=spec_version); 83 if not lv.validate(filename):; ---> 84 raise ValueError(""\n"".join(lv.errors) + f""\n{filename} does not appead to be a valid Loom file according to Loom spec version '{spec_version}'""); 85 ; 86 self._file = h5py.File(filename, mode). ValueError: Row attribute 'Gene' dtype object is not allowed; Row attribute 'Regulons' dtype [('SPI1_extended_(1805g)', 'u1'), ('SPI1_(1756g)', 'u1'), ('KLF5_extended_(1521g)', 'u1'), ('EHF_extended_(1513g)', 'u1'), ('STAT1_extended_(1443g)', 'u1'), ('ELF3_extended_(1249g)', 'u1'), ('STAT1_(1212g)', 'u1'), ('CEBPB_extended_(1162g)', 'u1'), ('CEBPB_(1045g)', 'u1'), ('KLF5_(1038g)', 'u1'), ('ELF1_extended_(987g)', 'u1'), ('ETS2_extended_(932g)', 'u1'), ('IRF8_extended_(923g)', 'u1'), ('JUND_extended_(789g)', 'u1'), ('EHF_(762g",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/320:1543,validat,validate,1543,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/320,2,['validat'],['validate']
Security,tego 0.1.16; psutil 5.9.0; ptyprocess 0.7.0; pure-eval 0.2.2; py-cpuinfo 8.0.0; pyarrow 11.0.0; pyasn1 0.4.8; pyasn1-modules 0.2.8; pycodestyle 2.10.0; pycosat 0.6.4; pycparser 2.21; pyct 0.5.0; pycurl 7.45.2; pydantic 1.10.8; PyDispatcher 2.0.5; pydocstyle 6.3.0; pyerfa 2.0.0; pyflakes 3.0.1; Pygments 2.15.1; PyJWT 2.4.0; pylint 2.16.2; pylint-venv 2.3.0; pyls-spyder 0.4.0; pyodbc 4.0.34; pyOpenSSL 23.2.0; pyparsing 3.0.9; PyQt5-sip 12.11.0; pyrsistent 0.18.0; PySocks 1.7.1; pytest 7.4.0; python-dateutil 2.8.2; python-dotenv 0.21.0; python-json-logger 2.0.7; python-lsp-black 1.2.1; python-lsp-jsonrpc 1.0.0; python-lsp-server 1.7.2; python-slugify 5.0.2; python-snappy 0.6.1; pytoolconfig 1.2.5; pytz 2023.3.post1; pyviz-comms 2.3.0; PyWavelets 1.4.1; pyxdg 0.27; PyYAML 6.0; pyzmq 23.2.0; QDarkStyle 3.0.2; qstylizer 0.2.2; QtAwesome 1.2.2; qtconsole 5.4.2; QtPy 2.2.0; queuelib 1.5.0; regex 2022.7.9; requests 2.31.0; requests-file 1.5.1; requests-toolbelt 1.0.0; responses 0.13.3; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rope 1.7.0; Rtree 1.0.1; ruamel.yaml 0.17.21; ruamel-yaml-conda 0.17.21; s3fs 2023.4.0; safetensors 0.3.2; scikit-image 0.20.0; scikit-learn 1.3.0; scikit-learn-intelex 20230426.111612; scipy 1.11.1; Scrapy 2.8.0; seaborn 0.12.2; SecretStorage 3.3.1; Send2Trash 1.8.0; service-identity 18.1.0; setuptools 68.0.0; sip 6.6.2; six 1.16.0; smart-open 5.2.1; sniffio 1.2.0; snowballstemmer 2.2.0; sortedcontainers 2.4.0; soupsieve 2.4; Sphinx 5.0.2; sphinxcontrib-applehelp 1.0.2; sphinxcontrib-devhelp 1.0.2; sphinxcontrib-htmlhelp 2.0.0; sphinxcontrib-jsmath 1.0.1; sphinxcontrib-qthelp 1.0.3; sphinxcontrib-serializinghtml 1.1.5; spyder 5.4.3; spyder-kernels 2.4.4; SQLAlchemy 1.4.39; stack-data 0.2.0; statsmodels 0.14.0; sympy 1.11.1; tables 3.8.0; tabulate 0.8.10; TBB 0.2; tblib 1.7.0; TELR 1.0; tenacity 8.2.2; terminado 0.17.1; text-unidecode 1.3; textdistance 4.2.1; texttable 1.7.0; threadpoolctl 2.2.0; three-merge 0.1.1; tifffile 2023.4.12; tinycss2 1,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2706:6321,validat,validator,6321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2706,1,['validat'],['validator']
Security,"uces a family of plots to validate gene markers obtained using `scanpy.api.tl.rank_genes_groups`. The plots work similarly as `scanpy.api.pl.rank_genes_groups`:; ; ![image](https://user-images.githubusercontent.com/4964309/43768141-efa3633a-9a36-11e8-856f-3970352c33a8.png). ![image](https://user-images.githubusercontent.com/4964309/43768035-b8ba9082-9a36-11e8-91e6-8c828f456981.png). ![image](https://user-images.githubusercontent.com/4964309/43768064-c78dc64c-9a36-11e8-95ed-351ef6fff99e.png). ![image](https://user-images.githubusercontent.com/4964309/43768099-d776a510-9a36-11e8-9708-959d5d0afe92.png). Those functions are wrappers around `scanpy.api.pl.heatmap`, `scanpy.api.pl.stacked_violin`, `scanpy.api.pl.dotplot` and `scanpy.api.pl.matrixplot`. `heatmap` and `dotplot` were modified to allow the 'brackets' on top of the images. This functionality can be used directly from those plots. E.g.:. ![image](https://user-images.githubusercontent.com/4964309/43771788-83bbb604-9a40-11e8-90d6-51f084343a98.png). The `pl.stacked_violin` plot was before part of `pl.violin` but I thought that the code is cleaner by separating the two plots. Also, this PR adds the new plot `scanpy.api.pl.matrixplot` that plots the average gene expression per category. E.g.:. ![image](https://user-images.githubusercontent.com/4964309/43771966-07c9bd92-9a41-11e8-818e-263dfae69b7f.png). This PR also updates several test for the plotting options and adds new ones. . I tried to update the documentation to reflect the changes. Also a new dataset called `pbmc68k_reduced` was added. This dataset is used for tests and for the example notebook [here](https://gist.github.com/fidelram/2289b7a8d6da055fb058ac9a79ed485c). This dataset contains around 700 cells and 200 genes from the original 68k 10x genomics dataset and is saved as a small anndata object. It contains cell type annotations, UMAP coordinates and rank_gene_groups. The dataset can be accessed as; ```python; adata = sc.datasets.pbmc68k_reduced(); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/228:1948,access,accessed,1948,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/228,1,['access'],['accessed']
Security,"x='total_counts', y='pct_counts_mt'); sc.pl.scatter(Sun, x='total_counts', y='n_genes_by_counts'). ```. And this is the error. ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3360 try:; -> 3361 return self._engine.get_loc(casted_key); 3362 except KeyError as err:. /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item(). KeyError: 'total_counts'. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/core/frame.py in _set_item_mgr(self, key, value); 3745 try:; -> 3746 loc = self._info_axis.get_loc(key); 3747 except KeyError:. /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3362 except KeyError as err:; -> 3363 raise KeyError(key) from err; 3364 . KeyError: 'total_counts'. During handling of the above exception, another exception occurred:. ValueError Traceback (most recent call last); <ipython-input-3-69925a75d466> in <module>; 1 #calcular e visualizar metricas de QC por estudo; ----> 2 sc.pp.calculate_qc_metrics(adata, expr_type='counts', var_type='genes', qc_vars=(), ; 3 percent_top=None",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1925:2611,hash,hashtable,2611,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1925,1,['hash'],['hashtable']
Security,"y data). ```python; np.random.seed(seed=0); df = pd.DataFrame(np.random.randn(50,50)); fake = sc.AnnData(df). fake.obs[""groups""] = np.random.choice(a=""a.b.c"".split("".""), size=50); fake.obs[""groups""] = fake.obs[""groups""].astype(""category""). sc.tl.dendrogram(fake, groupby = ""groups""); sc.pl.dendrogram(fake, groupby = ""groups""); ```. ```pytb; using data matrix X directly; Storing dendrogram info using `.uns[""dendrogram_['groups']""]`; WARNING: dendrogram data not found (using key=dendrogram_groups). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.; using data matrix X directly; Storing dendrogram info using `.uns['dendrogram_groups']`; ```. ### Description. So as you can see in the reproduction, it looks like `sc.tl.dendrogram(fake, groupby = ""groups"")` **stores** the created dendrogram like this `.uns[""dendrogram_['groups']""] = dendro_data`. But it looks like `sc.pl.dendrogram(fake, groupby = ""groups"")` __expects__ to access this dendrogram like this `fake.uns['dendrogram_groups']` and when it can't find it, it creates a new dendrogram and stores it in `fake.uns['dendrogram_groups']`. My guess is that there is a mismatch in the logic of the code that builds the names of dendros in `sc.tl.dendrogram` vs the code that builds the names in `sc.pl.dendrogram`. If I had more time i would try to track it down for you and maybe even send a PR. Sorry though, I dont. . Can anyone confirm that this is NOT the expected behavior?. #### Versions. <details>. ```; WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.5; scanpy 1.6.0; sinfo 0.3.1; -----; OpenSSL 19.1.0; PIL 8.0.1; anndata 0.7.5; annoy NA; autoreload NA; backcall 0.2.0; botocore 1.19.22; brotli NA; certifi 2020.11.08; cffi 1.14.3; colorama 0.4.3; cryptography 3.2.1; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; defusedxml 0.6.0; fbpca NA; fsspec 0.8.4; get_version 2.1; h5py 3.1.0; igraph 0.8.3",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1521:1301,access,access,1301,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1521,1,['access'],['access']
Security,yprocess 0.7.0; PuLP 2.7.0; pure-eval 0.2.2; py-cpuinfo 9.0.0; pyarrow 13.0.0; pyasn1 0.5.0; pyasn1-modules 0.3.0; pycodestyle 2.10.0; pycosat 0.6.6; pycparser 2.21; pyct 0.4.6; pycurl 7.45.1; pydantic 1.10.13; pydeseq2 0.4.1; PyDispatcher 2.0.5; pydocstyle 6.3.0; pyerfa 2.0.0.3; pyflakes 3.0.1; Pygments 2.16.1; PyJWT 2.8.0; pylint 2.17.5; pylint-venv 3.0.2; pyls-spyder 0.4.0; pynndescent 0.5.10; pyodbc 4.0.39; pyOpenSSL 23.2.0; pyparsing 3.1.1; PyQt5-sip 12.11.0; PySocks 1.7.1; pytest 7.4.2; python-dateutil 2.8.2; python-dotenv 1.0.0; python-json-logger 2.0.7; python-lsp-black 1.3.0; python-lsp-jsonrpc 1.1.2; python-lsp-server 1.7.2; python-slugify 8.0.1; pytoolconfig 1.2.5; pytz 2023.3.post1; pyviz_comms 3.0.0; PyWavelets 1.4.1; pyxdg 0.28; PyYAML 6.0.1; pyzmq 25.1.1; QDarkStyle 3.1; qstylizer 0.2.2; QtAwesome 1.2.3; qtconsole 5.4.4; QtPy 2.4.0; queuelib 1.6.2; referencing 0.30.2; regex 2023.10.3; requests 2.31.0; requests-file 1.5.1; requests-toolbelt 1.0.0; reretry 0.11.8; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rich 13.6.0; rope 1.10.0; rpds-py 0.10.4; Rtree 1.0.1; ruamel.yaml 0.17.35; ruamel.yaml.clib 0.2.7; ruamel-yaml-conda 0.15.80; s3fs 0.5.1; sacremoses 0.0.53; safetensors 0.3.3; scanpy 1.9.5; scikit-image 0.21.0; scikit-learn 1.3.1; scikit-learn-intelex 20230725.122106; scipy 1.11.3; Scrapy 2.11.0; scrublet 0.2.3; scTE 1.0; scTE 1.0; seaborn 0.13.0; SecretStorage 3.3.3; semver 3.0.1; Send2Trash 1.8.2; service-identity 18.1.0; session-info 1.0.0; setuptools 68.0.0; sip 6.6.2; six 1.16.0; smart-open 6.4.0; smmap 5.0.0; snakemake 7.32.3; sniffio 1.3.0; snowballstemmer 2.2.0; sortedcontainers 2.4.0; soupsieve 2.5; Sphinx 7.2.6; sphinxcontrib-applehelp 1.0.7; sphinxcontrib-devhelp 1.0.5; sphinxcontrib-htmlhelp 2.0.4; sphinxcontrib-jsmath 1.0.1; sphinxcontrib-qthelp 1.0.6; sphinxcontrib-serializinghtml 1.1.9; spyder 5.4.3; spyder-kernels 2.4.4; SQLAlchemy 2.0.21; stack-data 0.6.2; statsmodels 0.14.0; stdlib-list 0.8.0; stopit 1.1.2; sympy 1.12; tables ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2680:8759,validat,validator,8759,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2680,1,['validat'],['validator']
Testability, 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearso,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:2001,test,tests,2001,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability," 'total_counts_ribo', 'pct_counts_ribo', 'total_counts_hb', 'pct_counts_hb', 'percent_mt2', 'n_counts', 'sample', 'group', 'disease_status', 'leiden'; var: 'gene_ids', 'mt', 'ribo', 'hb', 'n_cells_by_counts', 'mean_counts', 'pct_dropout_by_counts', 'total_counts', 'highly_variable', 'means', 'dispersions', 'dispersions_norm', 'mean', 'std'; uns: 'hvg', 'log1p', 'pca', 'neighbors', 'umap', 'leiden', 'leiden_colors'; obsm: 'X_pca', 'X_umap'; varm: 'PCs'; obsp: 'distances', 'connectivities'. ```. Ive tried to check whether the data is maybe different or something, but i dont see anything that could be causing these differences, could you please help trying to figure out why the leiden clustering suddenly produces different results? . ### Minimal code sample. ```python; sc.pp.neighbors(adata, n_pcs = 30, n_neighbors = 20); sc.tl.umap(adata); sc.tl.leiden(adata, resolution = 0.2) ; sc.pl.umap(adata, color='leiden'); ```. ### Error output. _No response_. ### Versions. <details>. ```; sc.logging.print_versions(); -----; anndata 0.10.5.post1; scanpy 1.9.8; -----; PIL 9.4.0; PyQt5 NA; adjustText 1.0.4; asttokens NA; atomicwrites 1.4.1; bottleneck 1.3.5; brotli NA; bs4 4.12.2; certifi 2024.02.02; cffi 1.15.1; chardet 4.0.0; charset_normalizer 2.0.4; cloudpickle 2.2.1; colorama 0.4.6; comm 0.2.1; cycler 0.10.0; cython_runtime NA; cytoolz 0.12.0; dask 2023.6.0; dateutil 2.8.2; debugpy 1.8.1; decorator 5.1.1; defusedxml 0.7.1; dill 0.3.8; executing 2.0.1; gseapy 1.1.2; h5py 3.9.0; html5lib 1.1; idna 3.4; igraph 0.11.3; ipykernel 6.29.2; jedi 0.19.1; jinja2 3.1.2; joblib 1.3.2; kiwisolver 1.4.4; leidenalg 0.10.2; llvmlite 0.42.0; lxml 5.1.0; lz4 4.3.2; markupsafe 2.1.1; matplotlib 3.7.2; matplotlib_inline 0.1.6; mkl 2.4.1; mpl_toolkits NA; natsort 8.4.0; numba 0.59.0; numexpr 2.8.4; numpy 1.24.3; packaging 23.1; pandas 2.0.3; parso 0.8.3; patsy 0.5.3; pickleshare 0.7.5; platformdirs 3.10.0; prompt_toolkit 3.0.42; psutil 5.9.0; pure_eval 0.2.2; pyarrow 11.0.0; pycparser 2.21; pyde",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2956:2765,log,logging,2765,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2956,1,['log'],['logging']
Testability," (optional) I have confirmed this bug exists on the master branch of scanpy. ---. After running sc.tl.rank_genes_groups and sc.get.rank_genes_groups_df using the same data and python/scanpy code, Spider and Jupyter (both installed in the same environment of Anaconda) generate two different values for the ""names"" column. Whereas Spider gives the expected adata.var_names (e.g. Rpl5; see below), Jupyter gives a numerical code (15721, which is not included in adata.var). ### Minimal code sample (that we can copy&paste without having any data). In Spider:; ```python; de_df.head(5); ```; ```pytb; Out[34]: ; scores names logfoldchanges pvals pvals_adj; 0 9.194006 Rpl15 0.815534 3.784770e-20 1.006711e-15; 1 8.427418 Rps28 0.653911 3.533771e-17 4.699739e-13; 2 7.989542 Rps21 0.676462 1.354418e-15 1.200872e-11; 3 7.871397 Rps27 0.483027 3.507037e-15 2.055341e-11; 4 7.859277 Rps24 0.507071 3.863569e-15 2.055341e-11; ```. In Jupyter:; ```python; de_df.head(5); ```; ```pytb; Out[34]: ;   | scores | names | logfoldchanges | pvals | pvals_adj; 9.194006 | 15721 | 0.815534 | 3.784770e-20 | 1.006711e-15; 8.427418 | 23746 | 0.653911 | 3.533771e-17 | 4.699739e-13; 7.989542 | 3910 | 0.676462 | 1.354418e-15 | 1.200872e-11; 7.871397 | 5571 | 0.483027 | 3.507037e-15 | 2.055341e-11; 7.859277 | 15774 | 0.507071 | 3.863569e-15 | 2.055341e-11. In both cases, Spider and Jupyter; ```python; adata.var_names; ```; ```pytb; Index(['Xkr4', 'Gm1992', 'Gm37381', 'Rp1', 'Sox17', 'Gm37323', 'Mrpl15',; 'Lypla1', 'Gm37988', 'Tcea1',; ```. If I try to specify a different column in Jupyter I get this. ```python; de_df = sc.get.rank_genes_groups_df(database, group=groupA, gene_symbols=""symbol""); ```; ```pytb; You are trying to merge on object and int64 columns. If you wish to proceed you should use pd.concat; ```. #### Versions; [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]; In Spider:; scanpy==1.5.1 anndata==0.7.4 umap==0.4.6 numpy==1.18.5 scipy==1.5.0 panda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1426:1156,log,logfoldchanges,1156,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1426,1,['log'],['logfoldchanges']
Testability, (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:17768,test,testing,17768,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability, (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.d,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:2530,test,tests,2530,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability, - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csr-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csr-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-None] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-10] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_compare_to_upstream[seurat-hvg] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_sparse - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[numpy_ndarray] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csr] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csc] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[dask_array_dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_chunked - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_p,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:1684,test,tests,1684,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability, - mathjax=2.7.7; - matplotlib=3.7.2; - matplotlib-base=3.7.2; - matplotlib-inline=0.1.6; - mistune=3.0.1; - mpc=1.3.1; - mpfr=4.2.0; - mpmath=1.3.0; - mudata=0.2.3; - multiprocess=0.70.15; - munkres=1.1.4; - muon=0.1.6; - natsort=8.4.0; - nbclient=0.8.0; - nbconvert-core=7.7.4; - nbformat=5.9.2; - ncurses=6.4; - nest-asyncio=1.5.6; - nettle=3.8.1; - networkx=3.1; - nodejs=20.9.0; - notebook=7.0.2; - notebook-shim=0.2.3; - numba=0.57.1; - numexpr=2.8.4; - openh264=2.3.1; - openjpeg=2.5.0; - openpyxl=3.1.2; - openssl=3.3.1; - overrides=7.4.0; - p11-kit=0.24.1; - packaging=23.1; - pandas=2.0.3; - pandocfilters=1.5.0; - param=2.0.2; - parso=0.8.3; - patsy=0.5.3; - pcre2=10.43; - pexpect=4.8.0; - pickleshare=0.7.5; - pillow=9.4.0; - pip=23.2.1; - pixman=0.43.4; - pkgutil-resolve-name=1.3.10; - platformdirs=3.10.0; - plotly=5.16.1; - plotly-orca=3.4.2; - pooch=1.7.0; - prettyprinter=0.18.0; - prometheus_client=0.17.1; - prompt-toolkit=3.0.39; - prompt_toolkit=3.0.39; - psutil=5.9.5; - pthread-stubs=0.4; - ptyprocess=0.7.0; - pure_eval=0.2.2; - py-cpuinfo=9.0.0; - pycparser=2.21; - pyct=0.5.0; - pyfaidx=0.8.1.1; - pygments=2.16.1; - pymde=0.1.18; - pymongo=4.5.0; - pynndescent=0.5.11; - pyobjc-core=9.2; - pyobjc-framework-cocoa=9.2; - pyparsing=3.0.9; - pysocks=1.7.1; - pytables=3.8.0; - python=3.11.4; - python-dateutil=2.8.2; - python-fastjsonschema=2.18.0; - python-igraph=0.11.3; - python-json-logger=2.0.7; - python-kaleido=0.2.1; - python-tzdata=2023.3; - python_abi=3.11; - pytorch=2.0.1; - pytz=2023.3; - pyvcf3=1.0.3; - pyyaml=6.0.1; - pyzmq=25.1.1; - radian=0.6.7; - rchitect=0.4.1; - readline=8.2; - referencing=0.30.2; - requests=2.31.0; - rfc3339-validator=0.1.4; - rfc3986-validator=0.1.1; - rpds-py=0.9.2; - scanpy=1.10.1; - scikit-learn=1.3.0; - scipy=1.11.2; - seaborn=0.13.2; - seaborn-base=0.13.2; - send2trash=1.8.2; - session-info=1.0.0; - setuptools=68.1.2; - simplejson=3.19.2; - six=1.16.0; - snappy=1.1.10; - sniffio=1.3.0; - soupsieve=2.3.2.post1; - stack_data,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3116:12925,stub,stubs,12925,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3116,1,['stub'],['stubs']
Testability," 0.3.1; -----; PIL 8.2.0; anndata 0.7.7.dev4+g49739eb; anyio NA; appnope 0.1.0; argon2 20.1.0; asciitree NA; attr 20.3.0; babel 2.8.0; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; brotli 1.0.9; certifi 2020.06.20; cffi 1.14.0; chardet 3.0.4; cloudpickle 1.6.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dask 2021.05.0; dateutil 2.8.1; decorator 4.4.2; fasteners NA; fsspec 2021.06.0; google NA; h5py 3.2.1; idna 2.10; igraph 0.9.6; ipykernel 5.5.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; jinja2 2.11.2; joblib 1.0.1; json5 NA; jsonschema 3.2.0; jupyter_server 1.8.0; jupyterlab_server 2.6.0; kiwisolver 1.2.0; leidenalg 0.8.3; llvmlite 0.36.0; louvain 0.7.0; markupsafe 1.1.1; matplotlib 3.4.2; monotonic NA; mpl_toolkits NA; msgpack 1.0.0; natsort 7.1.1; nbclassic NA; nbformat 5.1.2; nbinom_ufunc NA; numba 0.53.1; numcodecs 0.8.0; numexpr 2.7.2; numpy 1.21.0; packaging 20.9; pandas 1.2.4; parso 0.7.1; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prometheus_client NA; prompt_toolkit 3.0.18; psutil 5.8.0; ptyprocess 0.6.0; pvectorc NA; pycparser 2.20; pygments 2.7.0; pyparsing 2.4.7; pyrsistent NA; pytoml NA; pytz 2020.1; requests 2.25.1; scanpy 1.9.0.dev7+g092376d2; scipy 1.7.0; send2trash NA; setuptools_scm NA; sinfo 0.3.1; sitecustomize NA; six 1.15.0; sklearn 0.24.2; snappy NA; sniffio 1.2.0; socks 1.7.1; sparse 0.12.0+21.gc96cc1a; sphinxcontrib NA; statsmodels 0.12.2; storemagic NA; tables 3.6.1; tblib 1.6.0; terminado 0.8.3; texttable 1.6.3; tlz 0.11.1; toolz 0.11.1; tornado 6.1; tqdm 4.61.1; traitlets 5.0.5; typing_extensions NA; urllib3 1.26.4; wcwidth 0.2.5; websocket 1.1.0; yaml 5.3.1; zappy NA; zarr 2.8.3; zmq 19.0.2; -----; IPython 7.23.1; jupyter_client 6.1.12; jupyter_core 4.7.1; jupyterlab 3.0.16; notebook 6.4.0; -----; Python 3.8.10 (default, May 4 2021, 03:05:50) [Clang 12.0.0 (clang-1200.0.32.29)]; macOS-10.16-x86_64-i386-64bit; 16 logical CPU cores, i386; -----; Session information updated at 2021-07-01 15:01; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1915:4543,log,logical,4543,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1915,1,['log'],['logical']
Testability," 0; assert result[""hyperplanes""][""start""][1] == 2; assert np.array_equal(result[""hyperplanes""][""data""], np.vstack((tree1.hyperplanes, tree2.hyperplanes))). # Test with an empty forest; def test_empty_forest():; forest = []; with pytest.raises(IndexError):; _make_forest_dict(forest). # Test with trees having properties with zero elements; def test_trees_with_zero_elements():; tree = MockTree(hyperplanes=[], offsets=[], children=[], indices=[]); forest = [tree]; result = _make_forest_dict(forest); assert result[""hyperplanes""][""data""].size == 0. # Test with trees having properties with different data types; def test_trees_with_different_data_types():; tree1 = MockTree(hyperplanes=[[1.0, 2.0]], offsets=[3], children=[[4, 5]], indices=[[6, 7]]); tree2 = MockTree(hyperplanes=[[8, 9]], offsets=[10], children=[[11, 12]], indices=[[13, 14]]); forest = [tree1, tree2]; result = _make_forest_dict(forest); assert result[""hyperplanes""][""data""].dtype == np.float64. # Test with trees that have properties with NaN or inf values; @pytest.mark.parametrize(""value"", [np.nan, np.inf, -np.inf]); def test_trees_with_special_values(value):; tree = MockTree(hyperplanes=[[value, value]], offsets=[value], children=[[value, value]], indices=[[value, value]]); forest = [tree]; result = _make_forest_dict(forest); assert np.isnan(result[""hyperplanes""][""data""]).all() or np.isinf(result[""hyperplanes""][""data""]).all(). # Test with a large number of trees; def test_large_number_of_trees():; trees = [MockTree(hyperplanes=[[i, i+1]], offsets=[i+2], children=[[i+3, i+4]], indices=[[i+5, i+6]]) for i in range(1000)]; forest = trees; result = _make_forest_dict(forest); assert len(result[""hyperplanes""][""start""]) == 1000; assert result[""hyperplanes""][""data""].shape == (2000, 2). # Test with trees missing one of the expected properties; def test_trees_missing_properties():; class IncompleteTree:; def __init__(self, hyperplanes, children, indices):; self.hyperplanes = np.array(hyperplanes); self.children = np.ar",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2971:3192,Test,Test,3192,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2971,1,['Test'],['Test']
Testability," 20.2.0; backcall 0.2.0; brotli NA; cellrank 1.0.0-rc.10; certifi 2020.06.20; cffi 1.14.3; chardet 3.0.4; colorama 0.4.3; cycler 0.10.0; cython_runtime NA; datacache 1.1.5; dateutil 2.8.1; decorator 4.4.2; docrep 0.3.1; fcsparser 0.2.1; future_fstrings NA; get_version 2.1; google NA; gtfparse 1.2.0; h5py 2.10.0; idna 2.10; igraph 0.8.2; importlib_metadata 0.23; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; jinja2 2.11.2; joblib 0.14.0; jsonschema 3.2.0; kiwisolver 1.1.0; legacy_api_wrap 1.2; leidenalg 0.8.1; libpetsc4py NA; llvmlite 0.34.0; louvain 0.6.1+2.g8073db7; markupsafe 1.1.1; matplotlib 3.3.2; memoized_property NA; more_itertools NA; mpl_toolkits NA; natsort 6.0.0; nbformat 5.0.7; networkx 2.3; numba 0.51.2; numexpr 2.7.0; numpy 1.19.1; packaging 20.4; palantir 1.0.0; pandas 1.1.2; parso 0.7.1; petsc4py 3.13.0; pexpect 4.8.0; phenograph 1.5.6; pickleshare 0.7.5; pkg_resources NA; pluggy 0.13.0; progressbar 3.53.1; prometheus_client NA; prompt_toolkit 3.0.7; psutil 5.7.2; ptyprocess 0.6.0; pvectorc NA; py 1.8.0; pyensembl 1.8.7; pygam 0.8.0; pygments 2.7.1; pyparsing 2.4.2; pyrsistent NA; pytest 5.2.1; python_utils NA; pytz 2019.2; requests 2.24.0; rpy2 3.3.5; scanpy 1.6.0; scipy 1.5.2; scvelo 0.2.2; seaborn 0.11.0; send2trash NA; serializable 0.2.1; setuptools_scm NA; simplejson 3.17.2; sinfo 0.3.1; six 1.15.0; sklearn 0.21.3; slepc4py 3.13.0; socks 1.7.1; sphinxcontrib NA; statsmodels 0.10.1; storemagic NA; tables 3.5.2; terminado 0.9.1; texttable 1.6.3; tornado 6.0.4; traitlets 4.3.3; typechecks NA; typing_extensions NA; tzlocal NA; urllib3 1.25.10; wcwidth 0.2.5; wrapt 1.12.1; yaml 5.1.2; zipp NA; zmq 19.0.2; -----; IPython 7.18.1; jupyter_client 6.1.7; jupyter_core 4.6.3; notebook 6.1.4; -----; Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:25:08) [GCC 7.5.0]; Linux-4.4.0-189-generic-x86_64-with-debian-buster-sid; 24 logical CPU cores, x86_64; -----; Session information updated at 2020-09-30 12:20. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1438:3990,log,logical,3990,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1438,1,['log'],['logical']
Testability," 4 sc.pl.rank_genes_groups_heatmap(adata, groups=""5"", n_genes=10, groupby=""clusters""). ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_heatmap(adata, groups, n_genes, groupby, key, show, save, **kwds); 454 show=show,; 455 save=save,; --> 456 **kwds,; 457 ); 458 . ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/scanpy/plotting/_tools/__init__.py in _rank_genes_groups_plot(adata, plot_type, groups, n_genes, groupby, key, show, save, **kwds); 392 from .._anndata import heatmap; 393 heatmap(adata, gene_names, groupby, var_group_labels=group_names,; --> 394 var_group_positions=group_positions, show=show, save=save, **kwds); 395 ; 396 elif plot_type == 'stacked_violin':. ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in heatmap(adata, var_names, groupby, use_raw, log, num_categories, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, standard_scale, swap_axes, show_gene_labels, show, save, figsize, **kwds); 1454 var_names=var_names,; 1455 var_group_labels=var_group_labels,; -> 1456 var_group_positions=var_group_positions,; 1457 ); 1458 . ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in _reorder_categories_after_dendrogram(adata, groupby, dendrogram, var_names, var_group_labels, var_group_positions); 3109 """"""; 3110 ; -> 3111 key = _get_dendrogram_key(adata, dendrogram, groupby); 3112 ; 3113 dendro_info = adata.uns[key]. ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in _get_dendrogram_key(adata, dendrogram_key, groupby); 3195 ""tuning it is recommended to run `sc.tl.dendrogram` independently.""; 3196 ); -> 3197 dendrogram(adata, groupby, key_added=dendrogram_key); 3198 ; 3199 if 'dendrogram_info' not in adata.uns[dendrogram_key]:. ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/scanpy/tools/_dendrogram.py in dendrogram(adata, groupby, n_pcs, use_rep, var_names, use_raw,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1313:2492,log,log,2492,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1313,1,['log'],['log']
Testability," 671 Parameter; (...); 689 compiler pipeline; 690 """"""; 691 pipeline = pipeline_class(typingctx, targetctx, library,; 692 args, return_type, flags, locals); --> 693 return pipeline.compile_extra(func). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:429, in CompilerBase.compile_extra(self, func); 427 self.state.lifted = (); 428 self.state.lifted_from = None; --> 429 return self._compile_bytecode(). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:497, in CompilerBase._compile_bytecode(self); 493 """"""; 494 Populate and run pipeline for bytecode input; 495 """"""; 496 assert self.state.func_ir is None; --> 497 return self._compile_core(). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:476, in CompilerBase._compile_core(self); 474 self.state.status.fail_reason = e; 475 if is_final_pipeline:; --> 476 raise e; 477 else:; 478 raise CompilerError(""All available pipelines exhausted""). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:463, in CompilerBase._compile_core(self); 461 res = None; 462 try:; --> 463 pm.run(self.state); 464 if self.state.cr is not None:; 465 break. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler_machinery.py:353, in PassManager.run(self, state); 350 msg = ""Failed in %s mode pipeline (step: %s)"" % \; 351 (self.pipeline_name, pass_desc); 352 patched_exception = self._patch_error(msg, e); --> 353 raise patched_exception. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler_machinery.py:341, in PassManager.run(self, state); 339 pass_inst = _pass_registry.get(pss).pass_inst; 340 if isinstance(pass_inst, CompilerPass):; --> 341 self._runPass(idx, pass_inst, state); 342 else:; 343 raise BaseException(""Legacy pass in use""). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler_lock.py:35, in _CompilerLock.__call__.<locals>._acquire_compile_lock(*args, **kwargs); 32",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:6725,test,test,6725,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability," <ipython-input-17-15b8850a67a5> in <module>; 1 #New dot plot (12 weeks feature genes); ----> 2 sc.pl.dotplot(adata, genes, groupby = ""louvain"", figsize = (20, 6), dendrogram = True, use_raw= False, dot_max = 1). c:\users\pawandeep\appdata\local\programs\python\python37\lib\site-packages\scanpy\plotting\_dotplot.py in dotplot(adata, var_names, groupby, use_raw, log, num_categories, expression_cutoff, mean_only_expressed, cmap, dot_max, dot_min, standard_scale, smallest_dot, title, colorbar_title, size_title, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, swap_axes, dot_color_df, show, save, ax, return_fig, **kwds); 930 dot_color_df=dot_color_df,; 931 ax=ax,; --> 932 **kwds,; 933 ); 934 . c:\users\pawandeep\appdata\local\programs\python\python37\lib\site-packages\scanpy\plotting\_dotplot.py in __init__(self, adata, var_names, groupby, use_raw, log, num_categories, categories_order, title, figsize, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, expression_cutoff, mean_only_expressed, standard_scale, dot_color_df, dot_size_df, ax, **kwds); 151 # 1. compute fraction of cells having value > expression_cutoff; 152 # transform obs_tidy into boolean matrix using the expression_cutoff; --> 153 obs_bool = self.obs_tidy > expression_cutoff; 154 ; 155 # compute the sum per group which in the boolean matrix this is the number. c:\users\pawandeep\appdata\local\programs\python\python37\lib\site-packages\pandas\core\ops\common.py in new_method(self, other); 63 other = item_from_zerodim(other); 64 ; ---> 65 return method(self, other); 66 ; 67 return new_method. c:\users\pawandeep\appdata\local\programs\python\python37\lib\site-packages\pandas\core\arraylike.py in __gt__(self, other); 43 @unpack_zerodim_and_defer(""__gt__""); 44 def __gt__(self, other):; ---> 45 return self._cmp_method(other, operator.gt); 46 ; 47 @unpack_zerodim_and_defer(""__ge__""). c:\users\pawandeep\appdata\local\programs\python\p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1932:1708,log,log,1708,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1932,1,['log'],['log']
Testability, ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:2875,test,tests,2875,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability, ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:8473,test,testing,8473,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability, FAILED scanpy/tests/test_highly_variable_genes.py::test_compare_to_upstream[seurat-hvg] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_sparse - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[numpy_ndarray] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csr] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csc] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[dask_array_dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_chunked - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_n_pcs - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_layer - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_no_threshold] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_with_batches] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_preprocessing_distributed.py::test_write_zarr[dask] - ValueError: buffer source array is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[sparse] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:2835,test,tests,2835,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability," File ~/miniconda3/envs/test/lib/python3.10/site-packages/pynndescent/pynndescent_.py:1595, in NNDescent.query(self, query_data, k, epsilon); 1564 """"""Query the training graph_data for the k nearest neighbors; 1565 ; 1566 Parameters; (...); 1592 training graph_data.; 1593 """"""; 1594 if not hasattr(self, ""_search_graph""):; -> 1595 self._init_search_graph(); 1597 if not self._is_sparse:; 1598 # Standard case; 1599 if not hasattr(self, ""_search_function""):. File ~/miniconda3/envs/test/lib/python3.10/site-packages/pynndescent/pynndescent_.py:967, in NNDescent._init_search_graph(self); 961 self._search_forest = [; 962 convert_tree_format(tree, self._raw_data.shape[0]); 963 for tree in rp_forest; 964 ]; 965 else:; 966 # convert the best trees into a search forest; --> 967 tree_scores = [; 968 score_linked_tree(tree, self._neighbor_graph[0]); 969 for tree in self._rp_forest; 970 ]; 971 if self.verbose:; 972 print(ts(), ""Worst tree score: {:.8f}"".format(np.min(tree_scores))). File ~/miniconda3/envs/test/lib/python3.10/site-packages/pynndescent/pynndescent_.py:968, in <listcomp>(.0); 961 self._search_forest = [; 962 convert_tree_format(tree, self._raw_data.shape[0]); 963 for tree in rp_forest; 964 ]; 965 else:; 966 # convert the best trees into a search forest; 967 tree_scores = [; --> 968 score_linked_tree(tree, self._neighbor_graph[0]); 969 for tree in self._rp_forest; 970 ]; 971 if self.verbose:; 972 print(ts(), ""Worst tree score: {:.8f}"".format(np.min(tree_scores))). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:487, in _DispatcherBase._compile_for_args(self, *args, **kws); 485 e.patch_message('\n'.join((str(e).rstrip(), help_msg))); 486 # ignore the FULL_TRACEBACKS config, this needs reporting!; --> 487 raise e; 488 finally:; 489 self._types_active_call = []. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:420, in _DispatcherBase._compile_for_args(self, *args, **kws); 418 return_val = None; 419 try:; -->",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:2639,test,test,2639,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability," Gm37988 False ... -1.059987 0.036154 0.246548; ENSMUSG00000033813 ENSMUSG00000033813 Tcea1 False ... -0.342200 0.578174 1.001880; ... ... ... ... ... ... ... ...; ENSMUSG00000094915 ENSMUSG00000094915 AC168977.2 False ... -3.593359 0.000265 0.015330; ENSMUSG00000079808 ENSMUSG00000079808 AC168977.1 False ... -0.756427 0.023002 0.199670; ENSMUSG00000095041 ENSMUSG00000095041 AC149090.1 False ... 0.816554 0.149080 0.578574; ENSMUSG00000063897 ENSMUSG00000063897 CAAA01118383.1 False ... 0.403835 0.041207 0.304460; ENSMUSG00000095742 ENSMUSG00000095742 CAAA01147332.1 False ... -0.307310 0.001870 0.058347; ```. So when `pl.rank_genes_groups` is being called, some adequate mapping is being done from the index of `adata.var` to Symbol, whereas when the other methods are called, this mapping is skipped, hence the error. I would expect the different `pl.rank_genes_groups_*` methods to behave as `pl.rank_genes_groups` when it comes to symbols not being used as indexes. Thanks!. #### Versions. <details>. >>> sc.logging.print_versions(); WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.5; scanpy 1.7.2; sinfo 0.3.1; -----; PIL 8.1.2; anndata 0.7.5; cairo 1.20.0; cffi 1.14.5; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; get_version 2.1; h5py 2.10.0; igraph 0.8.3; joblib 1.0.1; kiwisolver 1.3.1; legacy_api_wrap 0.0.0; leidenalg 0.8.3; llvmlite 0.36.0; louvain 0.7.0; matplotlib 3.3.4; mpl_toolkits NA; natsort 7.1.1; numba 0.53.1; numexpr 2.7.3; numpy 1.19.5; packaging 20.9; pandas 1.1.5; pkg_resources NA; pyparsing 2.4.7; pytz 2021.1; scanpy 1.7.2; scipy 1.5.3; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.24.1; sphinxcontrib NA; tables 3.6.1; texttable 1.6.3; typing_extensions NA; zipp NA; -----; Python 3.6.13 | packaged by conda-forge | (default, Feb 19 2021, 05:36:01) [GCC 9.3.0]; Linux-4.19.121-linuxkit-x86_64-with-debian-10.8; 2 logical CPU cores; -----; Session information updated at 2021-04-12 15:14. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1796:5992,log,logging,5992,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1796,2,['log'],"['logging', 'logical']"
Testability," I can then save the object as an h5ad file and read it back without a problem. However, if I run the rank_genes_groups function, even though I can perfectly fine save my object as an h5ad file I get an error when I am attempting to read it back. I have to say that this exact piece of code used to work with my older modules before updating it. Also, some people seem to have spotted a similar error in the newest numpy package:; https://github.com/numpy/numpy/issues/13431. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; # I have already read in an Ann data object from an h5ad existing file; sc.tl.pca(adata, n_comps=30, svd_solver='arpack'); sc.pp.neighbors(adata, n_neighbors=15); sc.tl.umap(adata). k = 15; communities, graph, Q = sc.external.tl.phenograph(pd.DataFrame(adata.obsm['X_pca']),k=k); adata.obs['PhenoGraph_clusters'] = pd.Categorical(communities); adata.uns['PhenoGraph_Q'] = Q; adata.uns['PhenoGraph_k'] = k. path_to_h5ad_file = '~/test.h5ad'; adata.write_h5ad(path_to_h5ad_file) # works. # but if I run; sc.tl.rank_genes_groups(adata, n_genes=21515,groupby='PhenoGraph_clusters', method='wilcoxon'); rcParams['figure.figsize'] = 4,4; rcParams['axes.grid'] = True; sc.pl.rank_genes_groups(adata); pd.DataFrame(adata.uns['rank_genes_groups']['names']).head(5). path_to_h5ad_file = '~/test.h5ad' # works; adata.write_h5ad(path_to_h5ad_file) # gives ERROR bellow. ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-23-cb0bc3c267ae> in <module>; ----> 1 adata = sc.read(path_to_h5ad_file). ~/miniconda3/lib/python3.7/site-packages/scanpy/readwrite.py in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, **kwargs); 95 filename, backed=backed, sheet=sheet, ext=ext,; 96 delimiter=delimiter, first_colu",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/937:1299,test,test,1299,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/937,1,['test'],['test']
Testability," I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. As the title says. A specific set of combinations of keywords to rank gene groups and plotting throws an error unexpectedly. ### Minimal code sample (that we can copy&paste without having any data). ```python; adata = sc.datasets.paul15(); sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', key_added='GG', use_raw=False, reference='1Ery'); rax = sc.pl.rank_genes_groups_dotplot(adata, key='GG', # , rankby_abs= None,; n_genes=3, cmap='PiYG_r', swap_axes=True,; show=False, values_to_plot='logfoldchanges',; vmin=None, vmax=None); ```. ```pytb; WARNING: In Scanpy 0.*, this returned logarithmized data. Now it returns non-logarithmized data.; ... storing 'paul15_clusters' as categorical; Trying to set attribute `.uns` of view, copying.; WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'; WARNING: It seems you use rank_genes_groups on the raw count data. Please logarithmize your data before calling rank_genes_groups.; ERROR: the given dot_color_df data frame has a different shape thanthe data frame used for the dot size. Both data frames needto have the same index and columns; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-110-708ec3ea001f> in <module>; 1 adata = sc.datasets.paul15(); 2 sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', key_added='GG', use_raw=False, reference='1Ery'); ----> 3 rax = sc.pl.rank_genes_groups_dotplot(adata, key='GG', # , rankby_abs= None,; 4 n_genes=3, cmap='PiYG_r', swap_axes=True,; 5 show=False, values_t",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2078:1004,log,logarithmized,1004,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2078,1,['log'],['logarithmized']
Testability, ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_prin_comps-10] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_neighbors-2] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[threshold-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-30-200] ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:21097,test,testing,21097,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability, ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:9425,test,tests,9425,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability," See below. ```python; import scanpy as sc; x=sc.read('merges2.h5ad', backup_url='https://ndownloader.figshare.com/files/27854286?private_link=8cd07dabcde5a773defd'); x.var_names_make_unique(); print(x); sc.pp.highly_variable_genes(x, flavor='seurat_v3', n_top_genes=50, batch_key='sampleid', subset=True); ```. ```pytb; AnnData object with n_obs × n_vars = 600 × 32838; obs: 'orig.ident', 'nCount_RNA', 'nFeature_RNA', 'sampleid'; var: 'features'; Traceback (most recent call last):; File ""./main.py"", line 8, in <module>; sc.pp.highly_variable_genes(x, flavor='seurat_v3', n_top_genes=50, batch_key='sampleid', subset=True); File ""/usr/local/lib/python3.8/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 419, in highly_variable_genes; return _highly_variable_genes_seurat_v3(; File ""/usr/local/lib/python3.8/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 85, in _highly_variable_genes_seurat_v3; model.fit(); File ""_loess.pyx"", line 899, in _loess.loess.fit; ValueError: b'reciprocal condition number 3.9554e-16\n'; ```. #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.7.2; sinfo 0.3.1; -----; PIL 8.1.0; anndata 0.7.5; cffi 1.14.4; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; get_version 2.1; google NA; h5py 2.10.0; igraph 0.8.3; joblib 1.0.0; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.3; llvmlite 0.35.0; louvain 0.6.1; matplotlib 3.3.3; mpl_toolkits NA; natsort 7.1.0; numba 0.52.0; numexpr 2.7.2; numpy 1.18.1; packaging 20.8; pandas 1.0.1; pkg_resources NA; psutil 5.8.0; pyparsing 2.4.7; pytz 2020.1; scanpy 1.7.2; scipy 1.4.1; setuptools_scm NA; sinfo 0.3.1; sitecustomize NA; six 1.15.0; sklearn 0.22.2.post1; tables 3.6.1; texttable 1.6.3; typing_extensions NA; wcwidth 0.2.5; yaml 5.3.1; -----; Python 3.8.8 (default, Feb 26 2021, 23:59:43) [Clang 12.0.0 (clang-1200.0.32.29)]; macOS-10.15.7-x86_64-i386-64bit; 4 logical CPU cores, i386; -----; Session information updated at 2021-05-03 11:41. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1825:2195,log,logical,2195,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1825,1,['log'],['logical']
Testability," ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. I'm getting an OSerror when reading in visium data because my folder only has tissue_positions.csv. OSError: Could not find '/bgfs/alee/shared/alee_rfe4_wam30/Lee_Visium_GEX-PEX_2_2024_Neil/SpaceRanger_OUT/MWS-7945/outs/spatial/tissue_positions_list.csv'. This is caused by a change in SpaceRanger output - as seen here:. tissue_positions.csv: This text file contains a table with rows that correspond to spots. From Space Ranger v2.0 onwards this file, which was previously named tissue_positions_list.csv, is renamed and includes a header column. . I think the code would be best fixed by an or check for either file name. . ### Minimal code sample. ```python; adata = sc.read_visium(path, count_file='filtered_feature_bc_matrix.h5', load_images=True, ); ```. ### Error output. ```pytb; OSError Traceback (most recent call last); Cell In[2], line 6; 4 #path = '/bgfs/alee/LO_LAB/General/Lab_Data/20240510_Neil_SpatialSequencing_AgePatients/Lee_Visium_GEX-PEX_2_2024_Neil/SpaceRanger_OUT/MWS19-10502/outs'; 5 path = '/bgfs/alee/shared/alee_rfe4_wam30/Lee_Visium_GEX-PEX_2_2024_Neil/SpaceRanger_OUT/MWS-7945/outs'; ----> 6 adata = sc.read_visium(path, count_file='filtered_feature_bc_matrix.h5', load_images=True). File /bgfs/alee/LO_LAB/Personal/Alexander_Chang/alc376/envs/SpatialSequencing/lib/python3.8/site-packages/scanpy/readwrite.py:392, in read_visium(path, genome, count_file, library_id, load_images, source_image_path); 387 logg.warning(; 388 f""You seem to be missing an image file.\n""; 389 f""Could not find '{f}'.""; 390 ); 391 else:; --> 392 raise OSError(f""Could not find '{f}'""); 394 adata.uns[""spatial""][library_id][""images""] = dict(); 395 for res in [""hires"", ""lowres""]:. OSError: Could not find '/bgfs/alee/shared/alee_rfe4_wam30/Lee_Visium_GEX-PEX_2_2024_Neil/SpaceRanger_OUT/MWS-7945/outs/spatial/tissue_positions_list.csv'; ```. ### Versions. <details>. ```; 1.10.1; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3085:1725,log,logg,1725,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3085,1,['log'],['logg']
Testability," _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. basename = 'master_paga_pie', tolerance = 30. def save_and_compare(basename, tolerance=None):; path_actual.mkdir(parents=True, exist_ok=True); out_path = path_actual / f'{basename}.png'; pyplot.savefig(out_path, dpi=40); pyplot.close(); if tolerance is None:; tolerance = tol; res = compare_images(; str(path_expected / f'{basename}.png'), str(out_path), tolerance; ); > assert res is None, res; E AssertionError: Error: Image files did not match.; E RMS Value: 36.26034272194439; E Expected: ; E /Users/philipp/Documents/python/scanpy/scanpy/tests/_images/master_paga_pie.png; E Actual: ; E /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie.png; E Difference:; E /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie-failed-diff.png; E Tolerance: ; E 30; E assert 'Error: Image files did not match.\n RMS Value: 36.26034272194439\n Expected: \n /Users/philipp/Documents/python... /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie-failed-diff.png\n Tolerance: \n 30' is None. scanpy/tests/conftest.py:35: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call ------------------------------------------------------------------------------------------------------; running PAGA; finished: added; 'paga/connectivities', connectivities adjacency (adata.uns); 'paga/connectivities_tree', connectivities subtree (adata.uns) (0:00:00); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (ada",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1418:3700,assert,assert,3700,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1418,1,['assert'],['assert']
Testability," _ _ _ _ _ _ _ _ _ _ _ _ _. basename = 'master_paga_pie', tolerance = 30. def save_and_compare(basename, tolerance=None):; path_actual.mkdir(parents=True, exist_ok=True); out_path = path_actual / f'{basename}.png'; pyplot.savefig(out_path, dpi=40); pyplot.close(); if tolerance is None:; tolerance = tol; res = compare_images(; str(path_expected / f'{basename}.png'), str(out_path), tolerance; ); > assert res is None, res; E AssertionError: Error: Image files did not match.; E RMS Value: 36.26034272194439; E Expected: ; E /Users/philipp/Documents/python/scanpy/scanpy/tests/_images/master_paga_pie.png; E Actual: ; E /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie.png; E Difference:; E /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie-failed-diff.png; E Tolerance: ; E 30; E assert 'Error: Image files did not match.\n RMS Value: 36.26034272194439\n Expected: \n /Users/philipp/Documents/python... /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie-failed-diff.png\n Tolerance: \n 30' is None. scanpy/tests/conftest.py:35: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call ------------------------------------------------------------------------------------------------------; running PAGA; finished: added; 'paga/connectivities', connectivities adjacency (adata.uns); 'paga/connectivities_tree', connectivities subtree (adata.uns) (0:00:00); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); ```. #### Versions. <details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1418:3869,test,tests,3869,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1418,1,['test'],['tests']
Testability," ```. After this, when I tried running the command:; `sc.pl.highest_expr_genes(adata_orig, n_top=20, )`. I get the following output:; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-22-c4ab6dadfa42> in <module>; ----> 1 sc.pl.highest_expr_genes(adata_orig ). C:\ProgramData\Anaconda3\lib\site-packages\scanpy\plotting\_qc.py in highest_expr_genes(adata, n_top, show, save, ax, gene_symbols, log, **kwds); 65 ; 66 # compute the percentage of each gene per cell; ---> 67 norm_dict = normalize_total(adata, target_sum=100, inplace=False); 68 ; 69 # identify the genes with the highest mean. C:\ProgramData\Anaconda3\lib\site-packages\scanpy\preprocessing\_normalization.py in normalize_total(adata, target_sum, exclude_highly_expressed, max_fraction, key_added, layer, layers, layer_norm, inplace, copy); 174 counts_per_cell = X[:, gene_subset].sum(1); 175 else:; --> 176 counts_per_cell = X.sum(1); 177 start = logg.info(msg); 178 counts_per_cell = np.ravel(counts_per_cell). AttributeError: 'SparseDataset' object has no attribute 'sum'; ```; And when I run the command:; `type(adata_orig.X)`; I get the output as:; `anndata._core.sparse_dataset.SparseDataset`. After reading your comment, I feel that earlier the scanpy module was expecting the sparse dataset as the input, but you have changed it to expect the dense format , and maybe that's the reason for this error? I am just two days into the world of scanpy and any help would be highly appreciated, in order to make this error go away. Also, to help you in debugging, I'd like to mention that the raw data in this dataset is present in the layer, which has the name 'raw' and the adata_orig.raw is set to null as of now. and when i try to run : `adata_orig.layers['raw'].sum(1)` it runs with no error. While running: `adata_orig.X.sum(1)` gives me the error as : ; ```; --------------------------------------------------------------------------",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2147:2090,log,logg,2090,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2147,1,['log'],['logg']
Testability," ```. ```pytb; WARNING: In Scanpy 0.*, this returned logarithmized data. Now it returns non-logarithmized data.; ... storing 'paul15_clusters' as categorical; Trying to set attribute `.uns` of view, copying.; WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'; WARNING: It seems you use rank_genes_groups on the raw count data. Please logarithmize your data before calling rank_genes_groups.; ERROR: the given dot_color_df data frame has a different shape thanthe data frame used for the dot size. Both data frames needto have the same index and columns; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-110-708ec3ea001f> in <module>; 1 adata = sc.datasets.paul15(); 2 sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', key_added='GG', use_raw=False, reference='1Ery'); ----> 3 rax = sc.pl.rank_genes_groups_dotplot(adata, key='GG', # , rankby_abs= None,; 4 n_genes=3, cmap='PiYG_r', swap_axes=True,; 5 show=False, values_to_plot='logfoldchanges',. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_dotplot(adata, groups, n_genes, groupby, values_to_plot, var_names, gene_symbols, min_logfoldchange, key, show, save, return_fig, **kwds); 861 tl.rank_genes_groups; 862 """"""; --> 863 return _rank_genes_groups_plot(; 864 adata,; 865 plot_type='dotplot',. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py in _rank_genes_groups_plot(adata, plot_type, groups, n_genes, groupby, values_to_plot, var_names, min_logfoldchange, key, show, save, return_fig, gene_symbols, **kwds); 534 from .._dotplot import dotplot; 535 ; --> 536 _pl = dotplot(; 537 adata,; 538 var_names,. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/scanpy/plotting/_dotplot.py in dotplot(adata, var_names, groupby, use_raw, log, num_categories, expression_cutoff, mean_only_expressed, cma",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2078:2013,log,logfoldchanges,2013,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2078,1,['log'],['logfoldchanges']
Testability," ```standard_scale``` are missing. So I created a new conda environment and tried to install a new version of scanpy, but this did not solve the issue (i.e. the problem is not with my old environment) as these lines are still missing. . When I tried to replace the file and re-run my heatmap I got a different error:. ```; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); <ipython-input-5-49e0357ed731> in <module>; ----> 1 sc.pl.matrixplot(pbmc, marker_genes, groupby='bulk_labels', dendrogram=True, standard_scale='var'). /anaconda3/envs/test/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in matrixplot(adata, var_names, groupby, use_raw, log, num_categories, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, standard_scale, swap_axes, show, save, **kwds); 1644 var_names=var_names,; 1645 var_group_labels=var_group_labels,; -> 1646 var_group_positions=var_group_positions); 1647 ; 1648 var_group_labels = dendro_data['var_group_labels']. /anaconda3/envs/test/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in _reorder_categories_after_dendrogram(adata, groupby, dendrogram, var_names, var_group_labels, var_group_positions); 2332 """"""; 2333 ; -> 2334 key = _get_dendrogram_key(adata, dendrogram, groupby); 2335 ; 2336 dendro_info = adata.uns[key]. /anaconda3/envs/test/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in _get_dendrogram_key(adata, dendrogram_key, groupby); 2406 ; 2407 if dendrogram_key not in adata.uns:; -> 2408 from ..tools._dendrogram import dendrogram; 2409 logg.warn(""dendrogram data not found (using key={}). Running `sc.tl.dendrogram` ""; 2410 ""with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` "". ModuleNotFoundError: No module named 'scanpy.tools._dendrogram'; ```; And indeed, in my scanpy this dendrogram tool is missing. . Is the PyPi version missing something?. Thank you!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/560:1389,test,test,1389,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/560,3,"['log', 'test']","['logg', 'test']"
Testability," ago and never upgrade the packages. They were running very smoothly until I reimage my PC and reinstall Scanpy in anaconda today (Anaconda3-2021.05-Windows-x86_64, python3.8.12).; I tired `pip install scanpy[leiden]`. Tried `conda install seaborn scikit-learn statsmodels numba pytables`, `conda install -c conda-forge python-igraph leidenalg`. Tried installing `Java` and `visual C++ 2012-2022 redistributable`. Also tried rebuilding a new environment and reinstalled everything. Whatever I try, this bug still exists when I import Scanpy.; I guess it may be the incompatibility issue of packages. Some dependency packages which were upgraded by the developer in these months caused this incompatibility issue. Could you please help me with this bug?; Thanks!; Best,; YJ. ### Minimal code sample (that we can copy&paste without having any data). ```python; import numpy as np; import pandas as pd; import scanpy as sc; import scanpy.external as sce; import scipy; sc.settings.verbosity = 3; sc.logging.print_header(); sc.set_figure_params(dpi=100, dpi_save=600); ; import matplotlib.pyplot as pl; from matplotlib import rcParams; ```. ```pytb; ImportError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_7844/2696797780.py in <module>; 1 import numpy as np; 2 import pandas as pd; ----> 3 import scanpy as sc; 4 import scanpy.external as sce; 5 import scipy. ~\.conda\envs\Python38\lib\site-packages\scanpy\__init__.py in <module>; 12 # (start with settings as several tools are using it); 13 from ._settings import settings, Verbosity; ---> 14 from . import tools as tl; 15 from . import preprocessing as pp; 16 from . import plotting as pl. ~\.conda\envs\Python38\lib\site-packages\scanpy\tools\__init__.py in <module>; 15 from ._leiden import leiden; 16 from ._louvain import louvain; ---> 17 from ._sim import sim; 18 from ._score_genes import score_genes, score_genes_cell_cycle; 19 from ._dendrogram import dendrogram. ~\.conda\envs\Python38\lib\site-packages\scanpy\tools\_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2108:1479,log,logging,1479,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2108,1,['log'],['logging']
Testability," any data). ```python; from skmisc.loess import loess; ```. ```pytb; sc.pp.highly_variable_genes(all_exp_merged_bins_ad, n_top_genes=2000, flavor='seurat_v3', span=1.0); File ""/ldfssz1/ST_BI/USER/ywu/.conda/envs/scs/lib/python3.9/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 419, in highly_variable_genes; return _highly_variable_genes_seurat_v3(; File ""/ldfssz1/ST_BI/USER/ywu/.conda/envs/scs/lib/python3.9/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 55, in _highly_variable_genes_seurat_v3; raise ImportError(; ImportError: Please install skmisc package via `pip install --user scikit-misc. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/wyu/.local/lib/python3.9/site-packages/skmisc/loess/__init__.py"", line 51, in <module>; from ._loess import (loess, loess_model, loess_inputs, loess_control,; ImportError: /home/wyu/.local/lib/python3.9/site-packages/skmisc/loess/../../scikit_misc.libs/libopenblasp-r0-085ca80a.3.9.so: cannot read file data; ```. #### Versions. <details>. WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.5; scanpy 1.8.2; sinfo 0.3.1; -----; PIL 9.4.0; anndata 0.7.5; beta_ufunc NA; binom_ufunc NA; cffi 1.15.1; colorama 0.4.6; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; defusedxml 0.7.1; google NA; h5py 3.8.0; hypergeom_ufunc NA; joblib 1.2.0; kiwisolver 1.4.4; llvmlite 0.39.1; matplotlib 3.5.0; mpl_toolkits NA; natsort 8.3.1; nbinom_ufunc NA; numba 0.56.4; numexpr 2.8.3; numpy 1.22.4; packaging 23.0; pandas 1.5.3; pkg_resources NA; psutil 5.9.4; pyexpat NA; pyparsing 3.0.9; pytz 2022.7.1; scanpy 1.8.2; scipy 1.8.0; setuptools_scm NA; sinfo 0.3.1; six 1.16.0; sklearn 1.0.1; skmisc 0.1.4; tables 3.6.1; threadpoolctl 3.1.0; typing_extensions NA; yaml 6.0; -----; Python 3.9.7 | packaged by conda-forge | (default, Sep 29 2021, 19:20:46) [GCC 9.4.0]; Linux-3.10.0-1127.el7.x86_64-x86_64-with-glibc2.17; 8 logical CPU cores, x86_64. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2441:2667,log,logical,2667,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2441,1,['log'],['logical']
Testability," applied, would sum to `k` for each row. However, when inspecting these results, it is not true. The number of non-zero elements in a row varies between both higher as well as lower values than the specified `n_neighbors` (obviously, sometimes it's also the expected `n_neighbors` value). Perhaps I'm misunderstanding something, but this behavior is somewhat counterintuitive to me and not what I expect; happy to be corrected though!. /Alma. ### Minimal code sample. ```python; # Import packages. import scanpy as sc; import anndata as ad; import numpy as np. # set random seed; np.random.seed(42). # create dummy data. adata = ad.AnnData(shape=(1000,1)); adata.obsm['rep'] = np.random.random(size = (1000,2)). # get spatial connectivities; k = 10; sc.pp.neighbors(adata, n_neighbors=k, use_rep = 'rep', knn = True). # get and count connectivities for each cell; gr = adata.obsp['connectivities']; nn = (np.array(gr.todense()) > 0).sum(axis=1).flatten(). # check if neighbors are equal to k; np.testing.assert_equal(nn,k); ```. ### Error output. _No response_. ### Versions. <details>. ```; -----; anndata 0.9.1; scanpy 1.9.3; -----; PIL 9.4.0; anyio NA; arrow 1.2.3; asciitree NA; asttokens NA; attr 23.1.0; babel 2.12.1; backcall 0.2.0; brotli NA; certifi 2022.12.07; cffi 1.15.1; charset_normalizer 2.0.4; cloudpickle 2.2.1; comm 0.1.3; cycler 0.10.0; cython_runtime NA; dask 2023.5.1; dateutil 2.8.2; debugpy 1.6.7; decorator 5.1.1; defusedxml 0.7.1; entrypoints 0.4; executing 1.2.0; fasteners 0.18; fastjsonschema NA; fqdn NA; h5py 3.8.0; idna 3.4; igraph 0.10.4; ipykernel 6.23.1; isoduration NA; jedi 0.18.2; jinja2 3.1.2; joblib 1.2.0; json5 NA; jsonpointer 2.3; jsonschema 4.17.3; jupyter_events 0.6.3; jupyter_server 2.6.0; jupyterlab_server 2.22.1; kiwisolver 1.4.4; leidenalg 0.9.1; llvmlite 0.40.1; markupsafe 2.1.2; matplotlib 3.7.1; mpl_toolkits NA; msgpack 1.0.5; natsort 8.3.1; nbformat 5.8.0; numba 0.57.1; numcodecs 0.11.0; numpy 1.23.4; overrides NA; packaging 23.1; pandas 2.0.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2587:2805,test,testing,2805,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2587,1,['test'],['testing']
Testability," are met. - [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Basically I am creating a stacked violin plot that uses a list of marker genes for the ""var_names"" argument. But whenever I create the plot, it has extra whitespace at the top of the plot where the marker gene labels should go. This is very evident when you add a figure title, which gets place above the padding whitespace. I have not really found a way around this, and am currently looking through the scanpy internal code to see if there is some padding setting that I can undo. If there is a workaround to this or some option that I am missing I would like to know. Thanks!. ### Minimal code sample. ```py; # I have an AnnData object that has undergone the Seurat analysis. I named the Leiden clustering output ""spatial_clusters"" since I was testing a spatial dataset read in via spatialdata then converted to AnnData with ""spatialdata_io.experimental.to_legacy_anndata"". marker_genes = [""Pou4f3"", ""Calb2"", ""Pvalb"", ""Smpx"", ""Mlf1"", ""Sox2""] # 5 random Cochlear HCs P7 + Sox2. sc.pl.stacked_violin(adata, marker_genes, title=""Marker gene expression per cluster"", groupby=""spatial_clusters"", cmap=""YlOrRd"", show=False, return_fig=True). ### COMPARISON TO MARKER GENES WITH LABELS; marker_genes = {""IHC"": [""Pou4f3"", ""Calb2"", ""Pvalb"", ""Smpx"", ""Mlf1""], ""Random"": [""Sox2""]}. sc.pl.stacked_violin(adata, marker_genes, title=""Marker gene expression per cluster"", groupby=""spatial_clusters"", cmap=""YlOrRd"", show=False, return_fig=True). ```. ### Error output. Will post in the next comment on this thread. Seems I cannot drag-n-drop images into this block. ### Versions. <details>. I am including relevant package versions. Can provide more if needed. Python 3.12.7. ```; anndata==0.10.6; matplotlib==3.9.0; pandas==2.2.1; scanpy-1.10.3; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3320:1036,test,testing,1036,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3320,1,['test'],['testing']
Testability," as np; import pandas as pd; import anndata as ad. # Create a small data matrix; data = np.random.rand(10, 5). # Create observation (cell) and variable (gene) annotations; obs = pd.DataFrame(index=[f'Cell_{i}' for i in range(data.shape[0])]); var = pd.DataFrame(index=[f'Gene_{i}' for i in range(data.shape[1])]). # Create the AnnData object; adata = ad.AnnData(X=data, obs=obs, var=var). # Test layer call function; adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test; sc.pl.highest_expr_genes(adata, layer='normalised'); ```. ### Error output. ```pytb; Output exceeds the size limit. Open the full output data in a text editor; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[32], line 17; 15 # Test layer call function; 16 adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test; ---> 17 sc.pl.highest_expr_genes(adata, layer='normalised'); 19 # Test layer call function; 20 adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test. File c:\Users\U062951\Miniconda3\envs\imc_ome_v1_spatial\lib\site-packages\legacy_api_wrap\__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positional:]. File c:\Users\U062951\Miniconda3\envs\imc_ome_v1_spatial\lib\site-packages\scanpy\plotting\_qc.py:100, in highest_expr_genes(adata, n_top, show, save, ax, gene_symbols, log, **kwds); 98 height = (n_top * 0.2) + 1.5; 99 fig, ax = plt.subplots(figsize=(5, height)); --> 100 sns.boxplot(data=counts_top_genes, orient=""h"", ax=ax, fliersize=1, **kwds); 101 ax.set_xlabel(""% of total counts""); 102 if log:. File c:\Users\U062951\Miniconda3\envs\imc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3318:1509,Test,Test,1509,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3318,1,['Test'],['Test']
Testability," available optional dependencies we run our tests with:. https://github.com/scverse/scanpy/blob/06802b459648a219a10f74243efe4d6c2f912016/scanpy/tests/test_preprocessing_distributed.py#L15-L22. now, the dask tests are enabled and only the zappy tests are disabled:. https://github.com/scverse/scanpy/blob/6b9e734f4979a8ba450c0eaa052451f98b000753/scanpy/tests/test_preprocessing_distributed.py#L18-L31. ### Minimal code sample. ```bash; pytest -v --disable-warnings -k test_normalize_per_cell[dask] --runxfail; ```. ### Error output. ```pytb; ===================================================================================================== test session starts ======================================================================================================; platform linux -- Python 3.8.17, pytest-7.3.1, pluggy-1.0.0 -- /home/phil/Dev/Python/venvs/single-cell/bin/python; cachedir: .pytest_cache; rootdir: /home/phil/Dev/Python/Single Cell/scanpy; configfile: pyproject.toml; testpaths: scanpy; plugins: cov-4.1.0, nunit-1.0.3, memray-1.4.0, xdist-3.3.1; collected 986 items / 985 deselected / 1 selected . scanpy/tests/test_preprocessing_distributed.py::TestPreprocessingDistributed::test_normalize_per_cell[dask] FAILED [100%]. =========================================================================================================== FAILURES ===========================================================================================================; __________________________________________________________________________________ TestPreprocessingDistributed.test_normalize_per_cell[dask] __________________________________________________________________________________. self = <scanpy.tests.test_preprocessing_distributed.TestPreprocessingDistributed object at 0x7fdd21f2e9d0>, adata = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; adata_dist = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; uns: 'dist-",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:1412,test,testpaths,1412,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,1,['test'],['testpaths']
Testability," exists on the latest version of scanpy. (Well released version); - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. Hello, I was trying to build a Debian package for scanpy 1.8.2, and unsurprisingly ran into problems with the plot tests. Most of the problems were just slight plot layout differences, but the test_embedding_plots::test_visium_default test ends up generating a blank plot. ![master_spatial_visium_default](https://user-images.githubusercontent.com/975038/141199384-3696067f-c8ed-475d-b077-80bb2a0280a0.png). I can get something where the dots are visible by setting a color, but the color bar doesn't match the default.; ![master_spatial_visium_default](https://user-images.githubusercontent.com/975038/141200671-6bbb5dd3-17ac-44ac-a9d1-28549e4c90a9.png). I also tried add_outline=True which got me closer but is still not right, and still pretty hard to see. ; ![showspatial_visium_add_outline](https://user-images.githubusercontent.com/975038/141201784-4eeb070c-9be2-4db7-85c2-274f34bec6d3.png). I tried adjusting the marker size but didn't get very far. do you have any guesses what might be wrong?. Thanks. anndata 0.7.5+ds; scanpy 1.8.2; sinfo 0.3.1. PIL 8.3.2; anndata 0.7.5+ds; asciitree NA; beta_ufunc NA; binom_ufunc NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; fasteners NA; h5py 3.3.0; igraph 0.9.6; joblib 0.17.0; kiwisolver 1.3.2; leidenalg 0.8.8; llvmlite 0.35.0; matplotlib 3.3.4; monotonic NA; mpl_toolkits NA; natsort 7.1.0; nbinom_ufunc NA; numba 0.52.0; numcodecs 0.8.1+ds; numexpr 2.7.3; numpy 1.19.5; packaging 21.0; pandas 1.1.5; pkg_resources NA; pyexpat NA; pyparsing 2.4.7; pytoml NA; pytz 2021.3; scanpy 1.8.2; scipy 1.7.1; setuptools_scm NA; sinfo 0.3.1; sitecustomize NA; six 1.16.0; sklearn 0.23.2; tables 3.6.1; texttable 1.6.3; zarr 2.10.2+ds. Python 3.9.8 (main, Nov 7 2021, 15:47:09) [GCC 11.2.0]; Linux-5.14.0-2-amd64-x86_64-with-glibc2.32; 4 logical CPU cores. Session information updated at 2021-11-10 22:03",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2048:2034,log,logical,2034,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2048,1,['log'],['logical']
Testability," expression vector; of a root cell. Either add; adata.add['iroot'] = root_cell_index; or (robust to subsampling); adata.var['xroot'] = adata.X[root_cell_index, :]; where ""root_cell_index"" is the integer index of the root cell, or; adata.var['xroot'] = adata[root_cell_name, :].X; where ""root_cell_name"" is the name (a string) of the root cell.; perform Diffusion Pseudotime analysis; using ""X_pca"" for building graph; using stored data graph with n_neighbors = 30 and spectrum; [ 1. 0.9944264293 0.9934666753 0.9925051928 0.9899699688; 0.9893597364 0.9855745435 0.9840251803 0.981688261 0.9806631804]; detect 1 branching; do not consider groups with less than 2742 points for splitting; branching 1: split group 0; WARNING: detected group with only [] cells. ValueError Traceback (most recent call last); <ipython-input-3-b1749d943ac4> in <module>(); ----> 1 get_ipython().run_cell_magic('time', '', 'sc.tl.dpt(adata_corrected,n_jobs=48,n_pcs=30,allow_kendall_tau_shift=False,n_branchings=1)\nsc.logging.print_memory_usage()'). /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/IPython/core/interactiveshell.py in run_cell_magic(self, magic_name, line, cell); 2113 magic_arg_s = self.var_expand(line, stack_depth); 2114 with self.builtin_trap:; -> 2115 result = fn(magic_arg_s, cell); 2116 return result; 2117 . <decorator-gen-59> in time(self, line, cell, local_ns). /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k); 186 # but it's overkill for just that one bit of state.; 187 def magic_deco(arg):; --> 188 call = lambda f, *a, **k: f(*a, **k); 189 ; 190 if callable(arg):. /public/bioapps/ana/anaconda3/envs/python35/lib/python3.5/site-packages/IPython/core/magics/execution.py in time(self, line, cell, local_ns); 1178 else:; 1179 st = clock2(); -> 1180 exec(code, glob, local_ns); 1181 end = clock2(); 1182 out = None. <timed exec> in <module>(). /public/workspace/jiping/scanpy-master/scanpy/tools/dpt.p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/33:1327,log,logging,1327,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/33,1,['log'],['logging']
Testability," fix it?; Look forward to your response, thanks a lot!. ### Minimal code sample. ```python; sc.tl.rank_genes_groups(adata_sc, groupby=""Manuscript_Identity"", use_raw=False). adata_sc.obs['CellType_Category'].cat.categories; Index(['Endothelial', 'Epithelial', 'Lymphoid', 'Multiplet', 'Myeloid',; 'Stromal'],; dtype='object'); adata_sc.obs['Manuscript_Identity'].cat.categories; Index(['ATI', 'ATII', 'Aberrant_Basaloid', 'B', 'B_Plasma', 'Basal',; 'Ciliated', 'Club', 'DC_Langerhans', 'DC_Mature', 'Fibroblast',; 'Goblet', 'ILC_A', 'ILC_B', 'Ionocyte', 'Lymphatic', 'Macrophage',; 'Macrophage_Alveolar', 'Mast', 'Mesothelial', 'Multiplet',; 'Myofibroblast', 'NK', 'PNEC', 'Pericyte', 'SMC', 'T', 'T_Cytotoxic',; 'T_Regulatory', 'VE_Arterial', 'VE_Capillary_A', 'VE_Capillary_B',; 'VE_Peribronchial', 'VE_Venous', 'cDC1', 'cDC2', 'cMonocyte',; 'ncMonocyte', 'pDC'],; dtype='object'); ```. ### Error output. ```pytb; WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 592, in rank_genes_groups; test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts); File ""/udd/rekso/.conda/envs/rekso_tangram_env/lib/python3.9/site-packages/scanpy/tools/_rank_genes_groups.py"", line 106, in __init__; raise ValueError(; ValueError: Could not calculate statistics for groups Ionocyte since they only contain one sample.; ```. ### Versions. <details>. ```; setuptools 69.0.3; shapely 2.0.2; six 1.16.0; skimage 0.20.0; sklearn 1.3.2; socks 1.7.1; spatial_image 0.3.0; spatialdata 0.0.15; squidpy 1.3.1; stack_data 0.6.2; statsmodels 0.14.1; sympy 1.12; tangram 1.0.4; tblib 3.0.0; texttable 1.7.0; threadpoolctl 3.2.0; tifffile 2023.12.9; tlz 0.12.0; toolz 0.12.0; torch 2.1.2+cu121; torchgen NA; tqdm 4.66.1; traitlets 5.14.1; typing_extensions NA; umap 0.5.5; ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2821:1536,test,test,1536,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2821,1,['test'],['test']
Testability, from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:1834,test,testing,1834,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability," from matplotlib import rcParams; ```. ```pytb; ImportError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_7844/2696797780.py in <module>; 1 import numpy as np; 2 import pandas as pd; ----> 3 import scanpy as sc; 4 import scanpy.external as sce; 5 import scipy. ~\.conda\envs\Python38\lib\site-packages\scanpy\__init__.py in <module>; 12 # (start with settings as several tools are using it); 13 from ._settings import settings, Verbosity; ---> 14 from . import tools as tl; 15 from . import preprocessing as pp; 16 from . import plotting as pl. ~\.conda\envs\Python38\lib\site-packages\scanpy\tools\__init__.py in <module>; 15 from ._leiden import leiden; 16 from ._louvain import louvain; ---> 17 from ._sim import sim; 18 from ._score_genes import score_genes, score_genes_cell_cycle; 19 from ._dendrogram import dendrogram. ~\.conda\envs\Python38\lib\site-packages\scanpy\tools\_sim.py in <module>; 21 from anndata import AnnData; 22 ; ---> 23 from .. import _utils, readwrite, logging as logg; 24 from .._settings import settings; 25 from .._compat import Literal. ~\.conda\envs\Python38\lib\site-packages\scanpy\readwrite.py in <module>; 8 import pandas as pd; 9 from matplotlib.image import imread; ---> 10 import tables; 11 import anndata; 12 from anndata import (. ~\.conda\envs\Python38\lib\site-packages\tables\__init__.py in <module>; 43 ; 44 # Necessary imports to get versions stored on the cython extension; ---> 45 from .utilsextension import get_hdf5_version as _get_hdf5_version; 46 ; 47 . ImportError: DLL load failed while importing utilsextension; ```. #### Versions. <details>. Package Version; ------------------- ---------; anndata 0.7.8; anyio 2.2.0; argon2-cffi 20.1.0; async-generator 1.10; attrs 21.2.0; Babel 2.9.1; backcall 0.2.0; bleach 4.1.0; Bottleneck 1.3.2; brotlipy 0.7.0; certifi 2021.10.8; cffi 1.15.0; charset-normalizer 2.0.4; colorama 0.4.4; cryptography 36.0.0; cycler 0.11.0; debugpy 1.5.1; decorator 5.1.0; defusedxml 0.7.1; entrypoints 0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2108:2582,log,logging,2582,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2108,2,['log'],"['logg', 'logging']"
Testability, h807b86a_5 conda-forge; libnsl 2.0.1 hd590300_0 conda-forge; libsqlite 3.45.2 h2797004_0 conda-forge; libuuid 2.38.1 h0b41bf4_0 conda-forge; libxcrypt 4.4.36 hd590300_1 conda-forge; libzlib 1.2.13 hd590300_5 conda-forge; llvmlite 0.42.0 pypi_0 pypi; locket 1.0.0 pypi_0 pypi; matplotlib 3.8.4 pypi_0 pypi; natsort 8.4.0 pypi_0 pypi; ncurses 6.4.20240210 h59595ed_0 conda-forge; networkx 3.3 pypi_0 pypi; nodeenv 1.8.0 pypi_0 pypi; numba 0.59.1 pypi_0 pypi; numcodecs 0.12.1 pypi_0 pypi; numpy 1.26.4 pypi_0 pypi; openssl 3.2.1 hd590300_1 conda-forge; packaging 24.0 pypi_0 pypi; pandas 2.2.1 pypi_0 pypi; partd 1.4.1 pypi_0 pypi; patsy 0.5.6 pypi_0 pypi; pbr 6.0.0 pypi_0 pypi; pillow 10.3.0 pypi_0 pypi; pip 24.0 pyhd8ed1ab_0 conda-forge; platformdirs 4.2.0 pypi_0 pypi; pluggy 1.4.0 pypi_0 pypi; pre-commit 3.7.0 pypi_0 pypi; profimp 0.1.0 pypi_0 pypi; pyarrow 15.0.2 pypi_0 pypi; pynndescent 0.5.12 pypi_0 pypi; pyparsing 3.1.2 pypi_0 pypi; pytest 7.4.4 pypi_0 pypi; pytest-cov 5.0.0 pypi_0 pypi; pytest-mock 3.14.0 pypi_0 pypi; pytest-nunit 1.0.7 pypi_0 pypi; pytest-xdist 3.5.0 pypi_0 pypi; python 3.12.2 hab00c5b_0_cpython conda-forge; python-dateutil 2.9.0.post0 pypi_0 pypi; pytz 2024.1 pypi_0 pypi; pyyaml 6.0.1 pypi_0 pypi; readline 8.2 h8228510_1 conda-forge; scanpy 1.10.0rc2.dev33+g9c8c095d pypi_0 pypi; scikit-image 0.22.0 pypi_0 pypi; scikit-learn 1.4.1.post1 pypi_0 pypi; scipy 1.13.0 pypi_0 pypi; seaborn 0.13.2 pypi_0 pypi; session-info 1.0.0 pypi_0 pypi; setuptools 69.2.0 pyhd8ed1ab_0 conda-forge; setuptools-scm 8.0.4 pypi_0 pypi; six 1.16.0 pypi_0 pypi; statsmodels 0.14.1 pypi_0 pypi; stdlib-list 0.10.0 pypi_0 pypi; texttable 1.7.0 pypi_0 pypi; threadpoolctl 3.4.0 pypi_0 pypi; tifffile 2024.2.12 pypi_0 pypi; tk 8.6.13 noxft_h4845f30_101 conda-forge; toolz 0.12.1 pypi_0 pypi; tqdm 4.66.2 pypi_0 pypi; typing-extensions 4.11.0 pypi_0 pypi; tzdata 2024.1 pypi_0 pypi; umap-learn 0.5.6 pypi_0 pypi; virtualenv 20.25.1 pypi_0 pypi; wheel 0.43.0 pyhd8ed1ab_1 conda-forge; xz 5.2.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:27694,mock,mock,27694,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['mock'],['mock']
Testability, h807b86a_5 conda-forge; libnsl 2.0.1 hd590300_0 conda-forge; libsqlite 3.45.2 h2797004_0 conda-forge; libuuid 2.38.1 h0b41bf4_0 conda-forge; libxcrypt 4.4.36 hd590300_1 conda-forge; libzlib 1.2.13 hd590300_5 conda-forge; llvmlite 0.42.0 pypi_0 pypi; locket 1.0.0 pypi_0 pypi; matplotlib 3.8.4 pypi_0 pypi; natsort 8.4.0 pypi_0 pypi; ncurses 6.4.20240210 h59595ed_0 conda-forge; networkx 3.3 pypi_0 pypi; nodeenv 1.8.0 pypi_0 pypi; numba 0.59.1 pypi_0 pypi; numcodecs 0.12.1 pypi_0 pypi; numpy 1.26.4 pypi_0 pypi; openssl 3.2.1 hd590300_1 conda-forge; packaging 24.0 pypi_0 pypi; pandas 2.2.1 pypi_0 pypi; partd 1.4.1 pypi_0 pypi; patsy 0.5.6 pypi_0 pypi; pbr 6.0.0 pypi_0 pypi; pillow 10.3.0 pypi_0 pypi; pip 24.0 pyhd8ed1ab_0 conda-forge; platformdirs 4.2.0 pypi_0 pypi; pluggy 1.4.0 pypi_0 pypi; pre-commit 3.7.0 pypi_0 pypi; profimp 0.1.0 pypi_0 pypi; pyarrow 15.0.2 pypi_0 pypi; pynndescent 0.5.12 pypi_0 pypi; pyparsing 3.1.2 pypi_0 pypi; pytest 8.1.1 pypi_0 pypi; pytest-cov 5.0.0 pypi_0 pypi; pytest-mock 3.14.0 pypi_0 pypi; pytest-nunit 1.0.7 pypi_0 pypi; pytest-xdist 3.5.0 pypi_0 pypi; python 3.12.2 hab00c5b_0_cpython conda-forge; python-dateutil 2.9.0.post0 pypi_0 pypi; pytz 2024.1 pypi_0 pypi; pyyaml 6.0.1 pypi_0 pypi; readline 8.2 h8228510_1 conda-forge; scanpy 1.10.0rc2.dev33+g9c8c095d pypi_0 pypi; scikit-image 0.22.0 pypi_0 pypi; scikit-learn 1.4.1.post1 pypi_0 pypi; scipy 1.13.0 pypi_0 pypi; seaborn 0.13.2 pypi_0 pypi; session-info 1.0.0 pypi_0 pypi; setuptools 69.2.0 pyhd8ed1ab_0 conda-forge; setuptools-scm 8.0.4 pypi_0 pypi; six 1.16.0 pypi_0 pypi; statsmodels 0.14.1 pypi_0 pypi; stdlib-list 0.10.0 pypi_0 pypi; texttable 1.7.0 pypi_0 pypi; threadpoolctl 3.4.0 pypi_0 pypi; tifffile 2024.2.12 pypi_0 pypi; tk 8.6.13 noxft_h4845f30_101 conda-forge; toolz 0.12.1 pypi_0 pypi; tqdm 4.66.2 pypi_0 pypi; typing-extensions 4.11.0 pypi_0 pypi; tzdata 2024.1 pypi_0 pypi; umap-learn 0.5.6 pypi_0 pypi; virtualenv 20.25.1 pypi_0 pypi; wheel 0.43.0 pyhd8ed1ab_1 conda-forge; xz 5.2.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:31059,mock,mock,31059,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['mock'],['mock']
Testability, import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testin,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:2308,test,tests,2308,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability," in build_main; app.build(args.force_all, filenames); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/application.py"", line 348, in build; self.builder.build_update(); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 299, in build_update; len(to_build)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 311, in build; updated_docnames = set(self.read()); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/util/logging.py"", line 213, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/util/logging.py"", line 178, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/util/logging.py"", line 415, in filter; raise SphinxWarning(location + "":"" + str(message)); sphinx.errors.SphinxWarning: /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/1204/scanpy/plotting/_dotplot.py:docstring of scanpy.pl.dotplot:122:Inline strong start-string without end-string. Warning, treated as err",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1307:2205,log,logging,2205,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1307,1,['log'],['logging']
Testability," install -e "".[dev,test]"" pytest-xdist # pytest-xdist isn't required, but makes this faster; conda deactivate scanpy-dev; conda activate scanpy-dev; pytest -n auto; ```. First everything fails since `dask-expr` isn't installed. This must be someone upstream pinning dask, but is easily solvable by adding dask-expr to the environment. ```; pip install dask-expr; pytest -n auto; ```. <details>; <summary> Failures </summary>. ```; FAILED scanpy/tests/test_score_genes.py::test_score_with_reference - TypeError: 'module' object is not callable; FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR sc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:1182,test,testing,1182,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability," line 361, in build; self.write(docnames, list(updated_docnames), method); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 535, in write; self._write_serial(sorted(docnames)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 545, in _write_serial; self.write_doc(docname, doctree); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 219, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 184, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 404, in filter; raise SphinxWarning(location + "":"" + message); sphinx.errors.SphinxWarning: /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessing/_simple.py:docstring of scanpy.pp.downsample_counts:17:py:class reference target not found: numpy.random.RandomState. Warning, treated as error:; /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessin",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1057:2426,log,logging,2426,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1057,1,['log'],['logging']
Testability," load exactly the data from seurat tutorial. pbmc = sc.datasets.pbmc3k(); # use the exact filterin from Seurat tutorial; sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw; sc.pp.filter_genes(pbmc, min_cells=3). print(pbmc). # default settings in scanpy are the same as for Seurat; sc.pp.highly_variable_genes(pbmc, flavor=""seurat_v3""). # this has been prepared in the R script ""scanpy/scanpy/tests/_scripts/seurat_extract_hvg_v3.R"" (adapted from https://satijalab.org/seurat/articles/pbmc3k_tutorial); pbmc3k_tutorial_FindVariableGenes_seurat = pd.read_csv(""scanpy/scanpy/scanpy/tests/_scripts/seurat_hvg_v3.csv.gz"", index_col=0). # This is used to order and rank the hvg when no batch information used; assert np.allclose(; pbmc3k_tutorial_FindVariableGenes_seurat[""variance.standardized""],; pbmc.var[""variances_norm""],; ). # Another quantity reported by both; assert np.allclose(; pbmc3k_tutorial_FindVariableGenes_seurat[""mean""],; pbmc.var[""means""],; ). # Another quantity reported by both; assert np.allclose(; pbmc3k_tutorial_FindVariableGenes_seurat[""variance""],; pbmc.var[""variances""]),; ); ```. - Discrepancy when `batch_key` is used: The flavor `'seurat_v3'` shows 764/2000 genes overlap with Seurat. The new suggested flavors `'seurat_v3_paper'` and `'seurat_v3_implementation'` show a 1990/2000 selected genes overlap with Seurat. The 10 non-matching genes contain 1 gene renamed by Seurat and therefore not found matching, some corner cases where numerics might have turned narrow outcomes, so actually 1991/2000. ```py; pmbc = sc.datasets.pbmc3k(); # use the exact filterin from Seurat tutorial; sc.pp.filter_cells(pbmc, min_genes=200) # this doesnt do anything btw; sc.pp.filter_genes(pbmc, min_cells=3). # introduce a dummy ""technical covariate""; this is used in Seurat's SelectIntegrationFeatures; pbmc.obs[""dummy_tech""] = ""source_1""; pbmc.obs.loc[pbmc.obs.index[500:1000], ""dummy_tech""] = ""source_2""; pbmc.obs.loc[pbmc.obs.index[1000:1500], ""dummy_tech""] = ""sourc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2792:4122,assert,assert,4122,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792,1,['assert'],['assert']
Testability, location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-3,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:17570,test,testing,17570,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability," message:. ```pytb; ValueError Traceback (most recent call last); <ipython-input-141-159082f1696f> in <module>; 1 results_file = os.path.join(adir, '{project}.count_{count}.gene_{gene}.mito_{mito}.HVGs_{nhvgs}.TPT.{log}.scale.TEST.h5ad'.format(project=project_name, count=count_thresh, gene=gene_thresh, mito=mitothresh, nhvgs=nhvgs, log=logstatus)); 2 print(results_file); ----> 3 adata = sc.read(results_file). /opt/miniconda3/envs/py37/lib/python3.7/site-packages/scanpy/readwrite.py in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, **kwargs); 95 filename, backed=backed, sheet=sheet, ext=ext,; 96 delimiter=delimiter, first_column_names=first_column_names,; ---> 97 backup_url=backup_url, cache=cache, **kwargs,; 98 ); 99 # generate filename and read to dict. /opt/miniconda3/envs/py37/lib/python3.7/site-packages/scanpy/readwrite.py in _read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, suppress_cache_warning, **kwargs); 497 if ext in {'h5', 'h5ad'}:; 498 if sheet is None:; --> 499 return read_h5ad(filename, backed=backed); 500 else:; 501 logg.debug(f'reading sheet {sheet} from file {filename}'). /opt/miniconda3/envs/py37/lib/python3.7/site-packages/anndata/readwrite/read.py in read_h5ad(filename, backed, chunk_size); 445 else:; 446 # load everything into memory; --> 447 constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size); 448 X = constructor_args[0]; 449 dtype = None. /opt/miniconda3/envs/py37/lib/python3.7/site-packages/anndata/readwrite/read.py in _read_args_from_h5ad(adata, filename, mode, chunk_size); 484 d[key] = None; 485 else:; --> 486 _read_key_value_from_h5(f, d, key, chunk_size=chunk_size); 487 # backwards compat: save X with the correct name; 488 if 'X' not in d:. /opt/miniconda3/envs/py37/lib/python3.7/site-packages/anndata/readwrite/read.py in _read_key_value_from_h5(f, d, key, key_write, chunk_size); 508 d[key_write] = OrderedDict() if key == 'uns' else {};",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/832:1626,log,logg,1626,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/832,1,['log'],['logg']
Testability," more predictability at the expense of backwards compatibility*? Especially the “euclidean” condition makes not much sense IMHO; - Another piece of weird logic: *Where to allow`knn=False`*? It would make sense for e.g. the scipy knn transformer with `algorithm='kd_tree'` … ; https://github.com/scverse/scanpy/blob/73915b4bd0dc84108df08ad83ec28e627a9a0e0d/scanpy/neighbors/__init__.py#L614-L617; - I also changed `method` to only mean “connectivity method”. `transformer_cls` alone now determines how to calculate distances. ### TODO. - [x] split of sklearn-ann part into own issue/PR; - [x] figure out what the `_more_tags` methods are ; - [x] allow specifying algorithm and/or backend; - [x] revert 75c6670, move connectivities code out of backends; - [x] switch our stuff to KNeighborsTransformer; - [x] unify selection: algorithm+backend, metric, connectivity (maybe separate out connectivity); - [x] figure out how to do connectivities: can mode be changed after fit? *no, we just use umap connectivities as before*; - [x] check out where we have coverage; - is there paga specific stuff? *not in the parts I changed*; - gauss: dense matrix when knn=True (“build a symmetric mask”, …) *not covered, but also the logic shouldn’t have changed*; - pre-computed in umap transformer; handling of disconnected components in umap (indices == -1) *replaced with our own implementation, see below*; - add tests; - [x] pyknndescent (we already depend on it through umap). Maybe in another PR?. - [ ] maybe store index in unified way?; - [ ] for umap: use `UMAP(precomputed_knn=...)` instead of `compute_connectivities`?; - [ ] unifiy transformer args, e.g. verbose. ## Implementation. ### The way it used to be. Our default use case was basically a thin wrapper around umap’s `nearest_neighbors` function, which in turn is a thin wrapper around PyNNDescent. We did some special casing around euclidean distance and small data sizes. That special casing reduced our test coverage: . - we don’t actually tes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2536:1927,log,logic,1927,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2536,2,"['log', 'test']","['logic', 'tests']"
Testability," not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---; ### Minimal code sample (that we can copy&paste without having any data). ```bash; conda create -n Scanpy python=3.7; conda activate Scanpy; conda install -c bioconda scanpy; conda install -c bioconda anndata2ri; ```; ```; import scanpy as sc; ```. ```pytb; Traceback (most recent call last):. File ""/tmp/ipykernel_2478/912249142.py"", line 1, in <module>; import scanpy as sc. File ""/home/augustoer/miniconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/__init__.py"", line 15, in <module>; from . import tools as tl. File ""/home/augustoer/miniconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/tools/__init__.py"", line 17, in <module>; from ._sim import sim. File ""/home/augustoer/miniconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/tools/_sim.py"", line 23, in <module>; from .. import _utils, readwrite, logging as logg. File ""/home/augustoer/miniconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/readwrite.py"", line 10, in <module>; import tables. File ""/home/augustoer/miniconda3/envs/Scanpy/lib/python3.7/site-packages/tables/__init__.py"", line 62, in <module>; from .file import File, open_file, copy_file. File ""/home/augustoer/miniconda3/envs/Scanpy/lib/python3.7/site-packages/tables/file.py"", line 33, in <module>; from . import hdf5extension. ImportError: /home/augustoer/miniconda3/envs/Scanpy/lib/python3.7/site-packages/tables/hdf5extension.cpython-37m-x86_64-linux-gnu.so: undefined symbol: H5Pset_fapl_direct; ```; Removing anndata2ri with `conda remove anndata2ri` fixes the issue. Installing with `pip install anndata2ri` prevents the issue. #### Versions; After fixing the issue.; <details>; WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.8; scanpy 1.7.2; sinfo 0.3.1; -----; PIL 9.0.1; PyQt5 NA; anndata 0.7.8; atomicwrites 1.4.0; autoreloa",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2172:1046,log,logging,1046,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2172,2,['log'],"['logg', 'logging']"
Testability," not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. The URL specified for the included `pbmc3k` data is throwing a 404. URL: https://falexwolf.me/data/pbmc3k_raw.h5ad. I happen to use this data for lots of unit and regression tests (probably not the best idea on my part). . Is there by chance a backup location I could mirror the same object from?. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; adata = sc.datasets.pbmc3k(); ```. ```pytb; ... 'http', request, response, code, msg, hdrs); File ""/home/jacob/bin/anaconda/envs/scnym_public/lib/python3.7/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/home/jacob/bin/anaconda/envs/scnym_public/lib/python3.7/urllib/request.py"", line 503, in _call_chain; result = func(*args); File ""/home/jacob/bin/anaconda/envs/scnym_public/lib/python3.7/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```. #### Versions. -----; anndata 0.7.4; scanpy 1.8.2; sinfo 0.3.4; -----; PIL 8.4.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; google NA; h5py 2.10.0; igraph 0.9.7; joblib 1.1.0; kiwisolver 1.3.2; leidenalg 0.8.0; llvmlite 0.32.1; louvain 0.7.0; matplotlib 3.4.3; mpl_toolkits NA; natsort 7.1.1; numba 0.49.1; numexpr 2.7.3; numpy 1.18.2; packaging 21.0; pandas 1.0.4; pkg_resources NA; pyparsing 2.4.7; pytz 2021.3; scipy 1.4.1; setuptools_scm NA; six 1.14.0; sklearn 0.22.2.post1; tables 3.6.1; texttable 1.6.4; typing_extensions NA; wcwidth 0.2.5; yaml 5.3.1; zipp NA; -----; Python 3.7.10 | packaged by conda-forge | (default, Oct 13 2021, 21:01:18) [GCC 9.4.0]; Linux-4.15.0-142-generic-x86_64-with-debian-buster-sid; 16 logical CPU cores, x86_64; -----; Session information updated at 2022-01-28 10:52. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2124:1947,log,logical,1947,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2124,1,['log'],['logical']
Testability," of scanpy. ### What happened?. Since a few weeks ago (at least), the tests in `test_metrics.py` started failing because the exact equality tests no longer consistently returned the bit-for-bit same float. Something like it has been observed in https://github.com/scverse/scanpy/pull/1740#discussion_r596827747. #2687 disables the exact comparison, but we should figure out why it’s happening and if we can restore exact precision. ### Minimal code sample. ```console; $ git switch 1.9.5; $ pytest scanpy/tests/test_metrics.py; ```. ### Error output. ```pytb; =================================== FAILURES ===================================; __________________________ test_morans_i_consistency ___________________________. def test_morans_i_consistency():; pbmc = pbmc68k_reduced(); pbmc.layers[""raw""] = pbmc.raw.X.copy(); g = pbmc.obsp[""connectivities""]; ; > assert eq(; sc.metrics.morans_i(g, pbmc.obs[""percent_mito""]),; sc.metrics.morans_i(pbmc, vals=pbmc.obs[""percent_mito""]),; ); E AssertionError: assert False; E + where False = eq(0.13099293222276961, 0.13099293222276967); E + where 0.13099293222276961 = <function morans_i at 0x7f354779d9d0>(<700x700 sparse matrix of type '<class 'numpy.float64'>'\n	with 9992 stored elements in Compressed Sparse Row format>, index\nAAAGCCTGGCTAAC-1 0.023856\nAAATTCGATGCACA-1 0.027458\nAACACGTGGTCTTT-1 0.016819\nAAGTGCACGTGCTA-1 0.011797\nACACGAACGGAGTG-1 0.017277\n ... \nTGGCACCTCCAACA-8 0.008840\nTGTGAGTGCTTTAC-8 0.022068\nTGTTACTGGCGATT-8 0.012821\nTTCAGTACCGGGAA-8 0.014169\nTTGAGGTGGAGAGC-8 0.010886\nName: percent_mito, Length: 700, dtype: float32); E + where <function morans_i at 0x7f354779d9d0> = <module 'scanpy.metrics' from '/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/scanpy/metrics/__init__.py'>.morans_i; E + where <module 'scanpy.metrics' from '/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/scanpy/metrics/__init__.py'> = sc.metrics; E + and 0.13099293222276967 = <function morans_i at 0x7f35",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2688:1247,Assert,AssertionError,1247,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2688,2,"['Assert', 'assert']","['AssertionError', 'assert']"
Testability," on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import harmonypy as hm; h_data = hm.run_harmony(a_data.obsm['X_pca'], a_data.obs, ['donor']); har= h_data.Z_corr; har = har.T; a_data.obsm['X_harmony'] = har.copy(); sc.pp.neighbors(a_data, n_neighbors=30, n_pcs=50,use_rep='X_harmony'); res = 1; sc.tl.leiden(a_data,resolution=res,key_added = 'leiden_res_harmony%.2f'%res); a_data.write(test.h5ad); a_data = sc.read(test.h5ad); sc.tl.rank_genes_groups(a_data, 'condition', method='wilcoxon'); ```. ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-6-8d70f4e1a0fa> in <module>; ----> 1 sc.tl.rank_genes_groups(a_data, 'condition', method='wilcoxon'). /opt/conda/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 588 ); 589 ; --> 590 test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts); 591 ; 592 if check_nonnegative_integers(test_obj.X) and method != 'logreg':. /opt/conda/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in __init__(self, adata, groups, groupby, reference, use_raw, layer, comp_pts); 91 ):; 92 ; ---> 93 if 'log1p' in adata.uns_keys() and adata.uns['log1p']['base'] is not None:; 94 self.expm1_func = lambda x: np.expm1(x * np.log(adata.uns['log1p']['base'])); 95 else:. KeyError: 'base'; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2440:1599,log,logreg,1599,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2440,3,['log'],"['log', 'logging', 'logreg']"
Testability," parfors.; 2925 for p in parfors:; -> 2926 get_parfor_reductions(self.func_ir, p, p.params, self.calltypes); 2928 # Validate parameters:; 2929 for p in parfors:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3549, in get_parfor_reductions(func_ir, parfor, parfor_params, calltypes, reductions, reduce_varnames, param_uses, param_nodes, var_to_param); 3547 if param_name in used_vars and param_name not in reduce_varnames:; 3548 param_nodes[param].reverse(); -> 3549 reduce_nodes = get_reduce_nodes(param, param_nodes[param], func_ir); 3550 # Certain kinds of ill-formed Python (like potentially undefined; 3551 # variables) in combination with SSA can make things look like; 3552 # reductions except that they don't have reduction operators.; 3553 # If we get to this point but don't find a reduction operator; 3554 # then assume it is this situation and just don't treat this; 3555 # variable as a reduction.; 3556 if reduce_nodes is not None:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3637, in get_reduce_nodes(reduction_node, nodes, func_ir); 3635 defs[lhs.name] = rhs; 3636 if isinstance(rhs, ir.Var) and rhs.name in defs:; -> 3637 rhs = lookup(rhs); 3638 if isinstance(rhs, ir.Expr):; 3639 in_vars = set(lookup(v, True).name for v in rhs.list_vars()). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3627, in get_reduce_nodes.<locals>.lookup(var, varonly); 3625 val = defs.get(var.name, None); 3626 if isinstance(val, ir.Var):; -> 3627 return lookup(val); 3628 else:; 3629 return var if (varonly or val is None) else val. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3627, in get_reduce_nodes.<locals>.lookup(var, varonly); 3625 val = defs.get(var.name, None); 3626 if isinstance(val, ir.Var):; -> 3627 return lookup(val); 3628 else:; 3629 return var if (varonly or val is None) else val. [... skipping similar frames: get_reduce_nodes.<locals>.lookup ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:10204,test,test,10204,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability," release candidate for umap and get errors though out the ingest tests. It looks like `umap` now relies on `pynndescent` and some functions are no longer available. Here's an example traceback:. ```pytb; ------------------------------------------------------------------------------------------------------------------- Captured stderr call -------------------------------------------------------------------------------------------------------------------; running ingest; ______________________________________________________________________________________________________________ test_ingest_map_embedding_umap ______________________________________________________________________________________________________________. def test_ingest_map_embedding_umap():; adata_ref = sc.AnnData(X); adata_new = sc.AnnData(T); ; sc.pp.neighbors(; adata_ref, method='umap', use_rep='X', n_neighbors=4, random_state=0; ); sc.tl.umap(adata_ref, random_state=0); ; > ing = sc.tl.Ingest(adata_ref). scanpy/tests/test_ingest.py:132: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; scanpy/tools/_ingest.py:270: in __init__; self._init_neighbors(adata); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <scanpy.tools._ingest.Ingest object at 0x140357550>, adata = AnnData object with n_obs × n_vars = 6 × 5 ; uns: 'neighbors', 'umap'; obsm: 'X_umap'. def _init_neighbors(self, adata):; from umap.distances import named_distances; > from umap.nndescent import (; make_initialisations,; make_initialized_nnd_search,; ); E ImportError: cannot import name 'make_initialisations' from 'umap.nndescen",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1036:1029,test,tests,1029,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1036,1,['test'],['tests']
Testability," remove anndata2ri` fixes the issue. Installing with `pip install anndata2ri` prevents the issue. #### Versions; After fixing the issue.; <details>; WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.8; scanpy 1.7.2; sinfo 0.3.1; -----; PIL 9.0.1; PyQt5 NA; anndata 0.7.8; atomicwrites 1.4.0; autoreload NA; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; bottleneck 1.3.2; cffi 1.15.0; chardet 4.0.0; cloudpickle 2.0.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2021.10.0; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; dunamai 1.10.0; fsspec 2022.01.0; get_version 3.5.4; h5py 2.10.0; igraph 0.9.9; ipykernel 6.4.1; ipython_genutils 0.2.0; jedi 0.18.1; jinja2 2.11.3; joblib 1.1.0; kiwisolver 1.3.2; legacy_api_wrap 0.0.0; leidenalg 0.8.9; llvmlite 0.37.0; markupsafe 1.1.1; matplotlib 3.5.1; matplotlib_inline NA; mkl 2.4.0; mpl_toolkits NA; natsort 7.1.1; nbinom_ufunc NA; numba 0.54.1; numexpr 2.8.1; numpy 1.20.3; packaging 21.3; pandas 1.3.4; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.20; psutil 5.8.0; ptyprocess 0.7.0; pydev_ipython NA; pydevconsole NA; pydevd 2.6.0; pydevd_concurrency_analyser NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.11.2; pyparsing 3.0.4; pytz 2021.3; scanpy 1.7.2; scipy 1.7.3; setuptools_scm NA; sinfo 0.3.1; sip NA; six 1.16.0; sklearn 1.0.2; sphinxcontrib NA; spyder 5.1.5; spyder_kernels 2.1.3; spydercustomize NA; storemagic NA; tables 3.6.1; texttable 1.6.4; threadpoolctl 2.2.0; tlz 0.11.0; toolz 0.11.2; tornado 6.1; traitlets 5.1.1; typing_extensions NA; wcwidth 0.2.5; wurlitzer 3.0.2; yaml 6.0; zipp NA; zmq 22.3.0; -----; IPython 7.31.1; jupyter_client 6.1.12; jupyter_core 4.9.1; -----; Python 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]; Linux-5.4.0-104-generic-x86_64-with-debian-bullseye-sid; 16 logical CPU cores, x86_64; -----; Session information updated at 2022-03-09 15:40. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2172:3613,log,logical,3613,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2172,1,['log'],['logical']
Testability," reproduce your bug.; scvi does not have models class anymore to access VAE and LDVAE, please change it to use scvi.module. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; sc.external.pp.scvi(adata, train_size=0.8, batch_key='batch'); ```. ```pytb; File ""/usr/local/apps/python/3.9.4/lib/python3.9/site-packages/scanpy/external/pp/_scvi.py"", line 116, in scvi; from scvi.models import VAE, LDVAE; ModuleNotFoundError: No module named 'scvi.models'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/data/lab/MCF7/for_PAGA/MCF7_batch_attempt1.py"", line 140, in <module>; sc.external.pp.scvi(adata, train_size=0.8, batch_key='batch'); File ""/usr/local/apps/python/3.9.4/lib/python3.9/site-packages/scanpy/external/pp/_scvi.py"", line 120, in scvi; raise ImportError(; ImportError: Please install scvi package from https://github.com/YosefLab/scVI. ```. #### Versions; >>> scanpy.logging.print_versions() ; WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.5; scanpy 1.7.1; sinfo 0.3.1; -----; PIL 8.2.0; anndata 0.7.5; cffi 1.14.5; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; get_version 2.1; google NA; h5py 3.2.1; igraph 0.9.1; joblib 1.0.1; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.3; llvmlite 0.36.0; matplotlib 3.4.1; mpl_toolkits NA; natsort 7.1.1; numba 0.53.1; numexpr 2.7.3; numpy 1.20.2; packaging 20.9; pandas 1.2.3; pkg_resources NA; pyexpat NA; pyparsing 2.4.7; pytz 2021.1; scanpy 1.7.1; scipy 1.6.2; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.24.1; sphinxcontrib NA; tables 3.6.1; texttable 1.6.3; typing_extensions NA; wcwidth 0.2.5; yaml 5.3.1; -----; Python 3.9.4 (default, Apr 5 2021, 15:43:56) [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]; Linux-3.10.0-1160.11.1.el7.x86_64-x86_64-with-glibc2.17; 56 logical CPU cores, x86_64; -----; Session information updated at 2021-04-06 12:14. </detai",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1781:1391,log,logging,1391,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1781,1,['log'],['logging']
Testability," scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. The `pca_params` fixture randomly picks one of the possible solvers, but since a little while, the `""lobpcg""` solver fails for our small test data, [as explained by its docs](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.lobpcg.html):. > The LOBPCG code internally solves eigenproblems of the size 3k on every iteration by calling the dense eigensolver eigh, so if k is not small enough compared to n, it makes no sense to call the LOBPCG code. Moreover, if one calls the LOBPCG algorithm for 5k > n, it would likely break internally, so the code calls the standard function eigh instead. It is not that n should be large for the LOBPCG to work, but rather the ratio n / k should be large. It you call LOBPCG with k=1 and n=10, it works though n is small. The method is intended for extremely large n / k. The workaround was to rerun failed tests until the fixture randomly returned another solver, which isn’t great. I therefore simply `xfail` that test for now to not block PRs in https://github.com/scverse/scanpy/pull/2745. ### Minimal code sample. ```bash; # try one of the following to reproduce (if necessary multiple times); pytest --runxfail 'scanpy/tests/test_pca.py::test_pca_warnings[scipy_csr-zero_center-valid]'; pytest --runxfail 'scanpy/tests/test_pca.py::test_pca_warnings[scipy_csc-zero_center-valid]'; ```. ### Error output. (note that since the code is run with `warnings.simplefilter('error')`, the below is an error that fails the test). ```pytb; UserWarning: The problem size 5 minus the constraints size 0 is too small relative to the block size 4. Using a dense eigensolver instead of LOBPCG iterations.No output of the history of the iterations.; ```. ### Versions. <details>. ```; -----; anndata 0.10.2; scanpy 1.10.0.dev156+gd1a2c8f8.d20231110; -----; PIL 10.0.1; asciitree NA; cloudpickle 3.0.0; cycler 0.12.1; cython_runtime NA; da",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2744:1159,test,tests,1159,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2744,1,['test'],['tests']
Testability," some people seem to have spotted a similar error in the newest numpy package:; https://github.com/numpy/numpy/issues/13431. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; # I have already read in an Ann data object from an h5ad existing file; sc.tl.pca(adata, n_comps=30, svd_solver='arpack'); sc.pp.neighbors(adata, n_neighbors=15); sc.tl.umap(adata). k = 15; communities, graph, Q = sc.external.tl.phenograph(pd.DataFrame(adata.obsm['X_pca']),k=k); adata.obs['PhenoGraph_clusters'] = pd.Categorical(communities); adata.uns['PhenoGraph_Q'] = Q; adata.uns['PhenoGraph_k'] = k. path_to_h5ad_file = '~/test.h5ad'; adata.write_h5ad(path_to_h5ad_file) # works. # but if I run; sc.tl.rank_genes_groups(adata, n_genes=21515,groupby='PhenoGraph_clusters', method='wilcoxon'); rcParams['figure.figsize'] = 4,4; rcParams['axes.grid'] = True; sc.pl.rank_genes_groups(adata); pd.DataFrame(adata.uns['rank_genes_groups']['names']).head(5). path_to_h5ad_file = '~/test.h5ad' # works; adata.write_h5ad(path_to_h5ad_file) # gives ERROR bellow. ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-23-cb0bc3c267ae> in <module>; ----> 1 adata = sc.read(path_to_h5ad_file). ~/miniconda3/lib/python3.7/site-packages/scanpy/readwrite.py in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, **kwargs); 95 filename, backed=backed, sheet=sheet, ext=ext,; 96 delimiter=delimiter, first_column_names=first_column_names,; ---> 97 backup_url=backup_url, cache=cache, **kwargs,; 98 ); 99 # generate filename and read to dict. ~/miniconda3/lib/python3.7/site-packages/scanpy/readwrite.py in _read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, suppress_cache_warning, **kwargs); 497 if ext in {'h5', 'h5ad'}:; 498",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/937:1650,test,test,1650,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/937,1,['test'],['test']
Testability," such a method in its. ValueError: provided out is the wrong size for the reduction; ```. #### Versions. <details>. ```; -----; anndata 0.7.4; scanpy 1.7.0; sinfo 0.3.1; -----; MulticoreTSNE NA; PIL 7.2.0; anndata 0.7.4; appdirs 1.4.4; autoreload NA; backcall 0.2.0; bioservices 1.7.8; bs4 4.9.1; cairo 1.19.1; certifi 2020.12.05; cffi 1.14.4; chardet 3.0.4; colorama 0.4.3; colorlog NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; deprecated 1.2.10; easydev 0.9.38; fa2 NA; fcsparser 0.2.1; future 0.18.2; future_fstrings NA; get_version 2.1; graphtools 1.5.2; gseapy 0.10.1; h5py 2.10.0; idna 2.10; igraph 0.8.2; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; jinja2 2.11.2; joblib 0.16.0; kiwisolver 1.2.0; legacy_api_wrap 1.2; leidenalg 0.8.1; llvmlite 0.34.0; louvain 0.7.0; lxml 4.5.2; magic 2.0.3; markupsafe 1.1.1; matplotlib 3.3.1; mkl 2.3.0; mpl_toolkits NA; natsort 7.1.1; networkx 2.5; numba 0.51.2; numexpr 2.7.1; numpy 1.19.1; packaging 20.8; palantir 1.0.0; pandas 1.2.1; parso 0.7.1; pexpect 4.8.0; phenograph 1.5.6; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.6; psutil 5.7.2; ptyprocess 0.6.0; pycparser 2.20; pygments 2.6.1; pygsp 0.5.1; pylab NA; pyparsing 2.4.7; pytz 2020.1; requests 2.24.0; requests_cache 0.5.2; rpy2 3.4.2; sca NA; scanpy 1.7.0; scipy 1.4.1; scprep 1.0.5.post2; seaborn 0.10.1; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; soupsieve 2.0.1; statsmodels 0.11.1; storemagic NA; tables 3.6.1; tasklogger 1.0.0; texttable 1.6.2; threadpoolctl 2.1.0; tornado 6.0.4; tqdm 4.48.2; traitlets 4.3.3; tzlocal NA; umap 0.4.6; urllib3 1.25.10; wcwidth 0.2.5; wrapt 1.12.1; zmq 19.0.2; zope NA; -----; IPython 7.17.0; jupyter_client 6.1.6; jupyter_core 4.6.3; notebook 6.1.3; -----; Python 3.8.2 (default, May 7 2020, 20:00:49) [GCC 7.3.0]; Linux-3.10.0-957.12.2.el7.x86_64-x86_64-with-glibc2.10; 64 logical CPU cores, x86_64; -----; Session information updated at 2021-02-19 11:23; ```; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1670:4577,log,logical,4577,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1670,1,['log'],['logical']
Testability," the FULL_TRACEBACKS config, this needs reporting!; --> 487 raise e; 488 finally:; 489 self._types_active_call = []. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:420, in _DispatcherBase._compile_for_args(self, *args, **kws); 418 return_val = None; 419 try:; --> 420 return_val = self.compile(tuple(argtypes)); 421 except errors.ForceLiteralArg as e:; 422 # Received request for compiler re-entry with the list of arguments; 423 # indicated by e.requested_args.; 424 # First, check if any of these args are already Literal-ized; 425 already_lit_pos = [i for i in e.requested_args; 426 if isinstance(args[i], types.Literal)]. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:965, in Dispatcher.compile(self, sig); 963 with ev.trigger_event(""numba:compile"", data=ev_details):; 964 try:; --> 965 cres = self._compiler.compile(args, return_type); 966 except errors.ForceLiteralArg as e:; 967 def folded(args, kws):. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:125, in _FunctionCompiler.compile(self, args, return_type); 124 def compile(self, args, return_type):; --> 125 status, retval = self._compile_cached(args, return_type); 126 if status:; 127 return retval. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:139, in _FunctionCompiler._compile_cached(self, args, return_type); 136 pass; 138 try:; --> 139 retval = self._compile_core(args, return_type); 140 except errors.TypingError as e:; 141 self._failed_cache[key] = e. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:152, in _FunctionCompiler._compile_core(self, args, return_type); 149 flags = self._customize_flags(flags); 151 impl = self._get_implementation(args, {}); --> 152 cres = compiler.compile_extra(self.targetdescr.typing_context,; 153 self.targetdescr.target_context,; 154 impl,; 155 args=args, return_type=return_type,; 156 flags=flags, locals=self.locals,; 1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:4342,test,test,4342,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability," the exact same dependency versions in the new environment, but got the same results. ; If you need access to the data and the container please contact me and I will make it available to you.; The data is already at the ICB cluster. Code:. ```; from os import path; import numpy as np; import matplotlib.pyplot as plt; import scanpy as sc; import scanpy.external as sce; from os import listdir; import pandas as pd; import seaborn as sb; import datetime, time; import scvelo as scv. from matplotlib.colors import LinearSegmentedColormap. #Define a nice colour map for gene expression; from matplotlib import colors. def timestamp():; ts = time.time(); st = datetime.datetime.fromtimestamp(ts).strftime('%d-%m-%Y %H:%M:%S'); return st. # Exporting folder. folder = ""/output""; sc.settings.figdir = folder + ""Plots/""; sc.set_figure_params(vector_friendly = True, dpi=300). sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_version_and_date(); sc.logging.print_header(). adata = sc.read(""/data/190924_Recreated_Virus_Object_regressed.h5ad""); #adata.write(folder + ""190924_Recreated_Virus_Object_regressed.h5ad""). sc.tl.louvain(adata, resolution = 4, key_added = ""louvain_2""); sc.tl.louvain(adata, resolution = 5, key_added = ""louvain_3""); sc.tl.louvain(adata, resolution = 6, key_added = ""louvain_4""); sc.tl.louvain(adata, resolution = 7, key_added = ""louvain_5""). sc.pl.umap(adata, color = [""louvain_2"", ""louvain_3"", ""louvain_4"", ""louvain_5""], wspace = 0.45). #select resolution; print(adata.obs[""louvain_5""].value_counts()). sc.tl.rank_genes_groups(adata, groupby = ""louvain_5""). # read all arkers table from known annotated data; marker_folder = ""/marker/""; marker_table = pd.read_csv(marker_folder + ""Particle_AllMarkers.txt"", sep = ""\t"", index_col = None); marker_table.head(2). ## Restrict to Foldchange and P value; marker_table = marker_table[(marker_table.logfoldchange > 2) & (marker_table.pval_adj < 0.05)].copy(); print(marker_table.shape)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1625:6380,log,logging,6380,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1625,1,['log'],['logging']
Testability," to create mock trees with properties; class MockTree:; def __init__(self, hyperplanes, offsets, children, indices):; self.hyperplanes = np.array(hyperplanes); self.offsets = np.array(offsets); self.children = np.array(children); self.indices = np.array(indices). # unit tests. # Test with a single tree with one-dimensional properties; def test_single_tree_one_dimensional():; tree = MockTree(hyperplanes=[1, 2], offsets=[3], children=[4, 5], indices=[6, 7]); forest = [tree]; result = _make_forest_dict(forest); assert result[""hyperplanes""][""start""][0] == 0; assert result[""offsets""][""start""][0] == 0; assert np.array_equal(result[""hyperplanes""][""data""], tree.hyperplanes); assert np.array_equal(result[""offsets""][""data""], tree.offsets). # Test with multiple trees with two-dimensional properties; def test_multiple_trees_two_dimensional():; tree1 = MockTree(hyperplanes=[[1, 2], [3, 4]], offsets=[5, 6], children=[[7, 8], [9, 10]], indices=[[11, 12], [13, 14]]); tree2 = MockTree(hyperplanes=[[15, 16], [17, 18]], offsets=[19, 20], children=[[21, 22], [23, 24]], indices=[[25, 26], [27, 28]]); forest = [tree1, tree2]; result = _make_forest_dict(forest); assert result[""hyperplanes""][""start""][0] == 0; assert result[""hyperplanes""][""start""][1] == 2; assert np.array_equal(result[""hyperplanes""][""data""], np.vstack((tree1.hyperplanes, tree2.hyperplanes))). # Test with an empty forest; def test_empty_forest():; forest = []; with pytest.raises(IndexError):; _make_forest_dict(forest). # Test with trees having properties with zero elements; def test_trees_with_zero_elements():; tree = MockTree(hyperplanes=[], offsets=[], children=[], indices=[]); forest = [tree]; result = _make_forest_dict(forest); assert result[""hyperplanes""][""data""].size == 0. # Test with trees having properties with different data types; def test_trees_with_different_data_types():; tree1 = MockTree(hyperplanes=[[1.0, 2.0]], offsets=[3], children=[[4, 5]], indices=[[6, 7]]); tree2 = MockTree(hyperplanes=[[8, 9]], offsets=[1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2971:1766,Test,Test,1766,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2971,6,"['Mock', 'Test', 'assert']","['MockTree', 'Test', 'assert']"
Testability," version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. This is probably a bug in my thinking, but naively I thought that `sc.pp.normalize_total()` normalizes counts per cell, thus allowing comparison of different cells by correcting for variable sequencing depth. However, the log transformation applied after normalisation seems to upset this relationship, example below. Why is this not problematic?. Incidentally, I first noticed this on my real biological dataset, not the toy example below. Edit: [relevant paper](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6215955/). > We can show, mathematically, that if we normalize expression profiles to have the same mean across cells, the mean after the equation [log] transformation used for RNA-Seq data will not be the same, and it will depend on the detection rate... And this [one](https://www.biorxiv.org/content/10.1101/404962v1.full):. > One issue of particular interest is that the mean of the log-counts is not generally the same as the log-mean count [1]. This is problematic in scRNA-seq contexts where the log-transformation is applied to normalized expression data. ---. ### Minimal code sample. ```python; >>> from anndata import AnnData; >>> import scanpy as sc; >>> import numpy as np; >>> adata = AnnData(np.array([[3, 3, 3, 6, 6],[1, 1, 1, 2, 2],[1, 22, 1, 2, 2], ])); >>> X_norm = sc.pp.normalize_total(adata, target_sum=1, inplace=False)['X']; >>> X_norm_log = np.log1p(X_norm); >>> X_norm_again = np.expm1(X_norm_log); >>> adata.X.sum(axis=1); array([21., 7., 28.], dtype=float32) # Different counts for each cell; >>> X_norm.sum(axis=1); array([1., 1., 1.], dtype=float32) # Normalisation means same counts for each cell; >>> X_norm_log.sum(axis=1); array([0.90322304, 0.90322304, 0.7879869 ], dtype=float32) # <<< Interested in this! Different counts for each cell; >>> X_norm_again.sum(axis=1); array([1., 1., 1.], dtype=float32) # Counts the same again; ```. #### Versions. I'm n",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1364:1120,log,log-counts,1120,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1364,2,['log'],"['log-counts', 'log-mean']"
Testability," ~/miniconda3/lib/python3.7/site-packages/scanpy/external/pp/_mnn_correct.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs); 152 save_raw=save_raw,; 153 n_jobs=n_jobs,; --> 154 **kwargs,; 155 ); 156 return datas, mnn_list, angle_list. ~/miniconda3/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs); 124 cos_norm_out=cos_norm_out, svd_dim=svd_dim, var_adj=var_adj,; 125 compute_angle=compute_angle, mnn_order=mnn_order,; --> 126 svd_mode=svd_mode, do_concatenate=do_concatenate, **kwargs); 127 print('Packing AnnData object...'); 128 if do_concatenate:. ~/miniconda3/lib/python3.7/site-packages/mnnpy/mnn.py in mnn_correct(var_index, var_subset, batch_key, index_unique, batch_categories, k, sigma, cos_norm_in, cos_norm_out, svd_dim, var_adj, compute_angle, mnn_order, svd_mode, do_concatenate, save_raw, n_jobs, *datas, **kwargs); 180 print(' Computing correction vectors...'); 181 correction_in = compute_correction(ref_batch_in, new_batch_in, mnn_ref, mnn_new,; --> 182 new_batch_in, sigma); 183 if not same_set:; 184 correction_out = compute_correction(ref_batch_out, new_batch_out, mnn_ref, mnn_new,. IndexError: arrays used as indices must be of integer (or boolean) type. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; ...; ```; sce.pp.mnn_correct(*[scdata[scdata.obs['batch']==batch] for batch in batch_]); #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...; scanpy==1.4.5 anndata==0.7rc1 umap==0.3.7 numpy==1.18.0 scipy==1.3.1 pandas==0.23.4 scikit-learn==0.19.1 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/973:2174,log,logging,2174,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/973,1,['log'],['logging']
Testability,"""""""; 341 if isinstance(moduleOrReq, Requirement):; --> 342 return working_set.find(moduleOrReq) or require(str(moduleOrReq))[0]; 343 try:; 344 module = sys.modules[moduleOrReq]. /opt/conda/lib/python3.9/site-packages/pkg_resources/__init__.py in require(self, *requirements); 884 included, even if they were already activated in this working set.; 885 """"""; --> 886 needed = self.resolve(parse_requirements(requirements)); 887 ; 888 for dist in needed:. /opt/conda/lib/python3.9/site-packages/pkg_resources/__init__.py in resolve(self, requirements, env, installer, replace_conflicting, extras); 770 if dist is None:; 771 requirers = required_by.get(req, None); --> 772 raise DistributionNotFound(req, requirers); 773 to_activate.append(dist); 774 if dist not in req:. DistributionNotFound: The 'pynndescent' distribution was not found and is required by the application; ```. #### Versions; latest version of scipy as well as pynndescent. strangely enough, if I try to print the versions I get this error as well:; ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /tmp/955352.tmpdir/ipykernel_5496/3375110566.py in <module>; ----> 1 print(sc.logging.print_versions()). /storage1/fs1/leyao.wang/Active/conda/envs/velocyto3.9/lib/python3.9/site-packages/scanpy/logging.py in print_versions(file); 167 try:; 168 buf = sys.stdout = io.StringIO(); --> 169 sinfo(; 170 dependencies=True,; 171 excludes=[. /storage1/fs1/leyao.wang/Active/conda/envs/velocyto3.9/lib/python3.9/site-packages/sinfo/main.py in sinfo(na, os, cpu, jupyter, dependencies, std_lib, private, write_req_file, req_file_name, html, excludes); 208 for mod_name in clean_modules:; 209 mod_names.append(mod_name); --> 210 mod = sys.modules[mod_name]; 211 # Since modules use different attribute names to store version info,; 212 # try the most common ones. KeyError: 'umap'; ```. I should note that I uninstalled and reinstalled the latest version of umap-learn.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2169:4601,log,logging,4601,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2169,2,['log'],['logging']
Testability,"""ConvergenceWarning"" in sklearn when calling ”sc.tl.rank_genes_groups“ with method='logreg'",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2195:84,log,logreg,84,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2195,1,['log'],['logreg']
Testability,"""category""). sc.tl.dendrogram(fake, groupby = ""groups""); sc.pl.dendrogram(fake, groupby = ""groups""); ```. ```pytb; using data matrix X directly; Storing dendrogram info using `.uns[""dendrogram_['groups']""]`; WARNING: dendrogram data not found (using key=dendrogram_groups). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.; using data matrix X directly; Storing dendrogram info using `.uns['dendrogram_groups']`; ```. ### Description. So as you can see in the reproduction, it looks like `sc.tl.dendrogram(fake, groupby = ""groups"")` **stores** the created dendrogram like this `.uns[""dendrogram_['groups']""] = dendro_data`. But it looks like `sc.pl.dendrogram(fake, groupby = ""groups"")` __expects__ to access this dendrogram like this `fake.uns['dendrogram_groups']` and when it can't find it, it creates a new dendrogram and stores it in `fake.uns['dendrogram_groups']`. My guess is that there is a mismatch in the logic of the code that builds the names of dendros in `sc.tl.dendrogram` vs the code that builds the names in `sc.pl.dendrogram`. If I had more time i would try to track it down for you and maybe even send a PR. Sorry though, I dont. . Can anyone confirm that this is NOT the expected behavior?. #### Versions. <details>. ```; WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.5; scanpy 1.6.0; sinfo 0.3.1; -----; OpenSSL 19.1.0; PIL 8.0.1; anndata 0.7.5; annoy NA; autoreload NA; backcall 0.2.0; botocore 1.19.22; brotli NA; certifi 2020.11.08; cffi 1.14.3; colorama 0.4.3; cryptography 3.2.1; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; defusedxml 0.6.0; fbpca NA; fsspec 0.8.4; get_version 2.1; h5py 3.1.0; igraph 0.8.3; intervaltree NA; invoke 1.4.1; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; jinja2 2.11.2; jmespath 0.10.0; joblib 0.17.0; kiwisolver 1.3.1; legacy_api_wrap 0.0.0; leidenalg 0.8.3; llvmlite 0.34.0; l",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1521:1515,log,logic,1515,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1521,1,['log'],['logic']
Testability,"## Changes / Fixes. * Change / fix `pip install scanpy[test]` to `pip install ""scanpy[test]""`. ## Related issues. Closes #1442.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1442:55,test,test,55,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1442,2,['test'],['test']
Testability,"## Description. As briefly outlined in #1420, using `seaborn==0.11` causes the unit tests `scanpy/tests/test_plotting.py:test_violin` and `scanpy/tests/notebooks/test_pbmc3k.py` fail as the violin plots are no longer vertically oriented. ## Changes. * Rely on `seaborn.catplot` and `seaborn.stripplot` instead of `seaborn.FacetGrid` in `scanpy/plotting/_anndata.py`. ## Related issues. Closes #1420.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1422:84,test,tests,84,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1422,3,['test'],['tests']
Testability,"## Description. For an easier start of potential contributors, it might be helpful to add a file such as `requirements-dev.txt` including all packages required to e.g. run unit tests locally. Otherwise, several packages (e.g. `leidenalg`, `louvain`, `scikit-misc`, `harmonypy`, `python-igraph`) have to be installed manually which is rather tedious:. ```txt; -r requirements.txt. harmonypy; leidenalg; louvain; scitkit-misc; python-igraph; ```. The wheels to install `python-igraph` under Windows can, for example, be found [here](https://www.lfd.uci.edu/~gohlke/pythonlibs/#python-igraph).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1419:177,test,tests,177,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1419,1,['test'],['tests']
Testability,"## Description. Running the scanpy tests locally (see system information and package versions below), I noticed the test `scanpy/tests/test_plotting.py::test_paga` sometimes failing due to `AssertionError: Error: Image files did not match` but passing on a consecutive run. Did anyone encounter similar problems or does anyone know why this is happening?. ### Failure message. ```bash; >>> pytest scanpy/tests/test_plotting.py; scanpy/tests/test_plotting.py .............................................x............F.... [100%]. =========================================================================================================== FAILURES ============================================================================================================; ___________________________________________________________________________________________________________ test_paga ___________________________________________________________________________________________________________. image_comparer = <function make_comparer at 0x7fbce4ade8c0>. def test_paga(image_comparer):; # Sometimes things shift a pixel or so, resulting in diffs up to ~27; # The 1px-edges aren’t that good actually as they’re ignored at this tol …; save_and_compare_images = image_comparer(ROOT, FIGS, tol=30); ; pbmc = sc.datasets.pbmc68k_reduced(); sc.tl.paga(pbmc, groups='bulk_labels'); ; common = dict(threshold=0.5, max_edge_width=1.0, random_state=0, show=False); ; # delete bulk_labels_colors to test the creation of color list by paga; del pbmc.uns['bulk_labels_colors']; sc.pl.paga(pbmc, **common); save_and_compare_images('master_paga'); ; sc.pl.paga(pbmc, color='CST3', **common); save_and_compare_images('master_paga_continuous'); ; pbmc.obs['cool_feature'] = pbmc[:, 'CST3'].X.squeeze(); sc.pl.paga(pbmc, color='cool_feature', **common); save_and_compare_images('master_paga_continuous_obs'); ; sc.pl.paga(pbmc, color=['CST3', 'GATA2'], **common); save_and_compare_images('master_paga_continuous_multiple'); ; sc.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1418:35,test,tests,35,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1418,6,"['Assert', 'test']","['AssertionError', 'test', 'tests']"
Testability,"## Description. The documentation in `CONTRIBUTING.md` states that all dependencies required for testing can be installed via `pip install scanpy[test]`. It should, however, be `pip install ""scanpy[test]""`. ### Minimal code sample. ```zsh; pip install scanpy[test]; zsh: no matches found: scanpy[test]; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1441:97,test,testing,97,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1441,5,['test'],"['test', 'testing']"
Testability,"## Description. Using the `seaborn==0.11` makes `scanpy/tests/test_plotting.py:test_violin` and `scanpy/tests/notebooks/test_pbmc3k.py` fail. The warning. ```bash; UserWarning: Vertical orientation ignored with only `x` specified.; ```. is thrown by `seaborn` in the stack trace for the failed tests. The problem seems to originate from [here](https://github.com/theislab/scanpy/blob/f704f724529def21769ee6407f9b47b5c161564c/scanpy/plotting/_anndata.py#L745) and [here](https://github.com/theislab/scanpy/blob/f704f724529def21769ee6407f9b47b5c161564c/scanpy/plotting/_anndata.py#L747), where `x` and `y` are not both specified. See #1417 and especially [this](https://github.com/theislab/scanpy/pull/1417#issuecomment-693488428) comment by @fidelram for more details.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1420:56,test,tests,56,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1420,3,['test'],['tests']
Testability,"## Description. `scanpy==1.6` cannot be used with `anndata<=0.7.3` due to an import error in `scanpy/__init__.py` as `concat` cannot be imported from `anndata`. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; ```. ```pytb; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/anaconda3/envs/scanpy_bug/lib/python3.8/site-packages/scanpy/__init__.py"", line 41, in <module>; from anndata import AnnData, concat; ImportError: cannot import name 'concat' from 'anndata' (/opt/anaconda3/envs/scanpy_bug/lib/python3.8/site-packages/anndata/__init__.py); ```. #### Versions. <details>. ```; -----; anndata 0.7.3; scanpy 1.6.0; sinfo 0.3.1; -----; anndata 0.7.3; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; get_version 2.1; h5py 2.10.0; igraph 0.8.2; joblib 0.15.1; kiwisolver 1.2.0; legacy_api_wrap 1.2; leidenalg 0.8.2; llvmlite 0.33.0; louvain 0.7.0; matplotlib 3.2.1; mpl_toolkits NA; natsort 7.0.1; numba 0.50.0; numexpr 2.7.1; numpy 1.18.5; packaging 20.4; pandas 1.1.2; pkg_resources NA; pyparsing 2.4.7; pytz 2020.1; scanpy 1.6.0; scipy 1.4.1; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.1; tables 3.6.1; texttable 1.6.2; wcwidth 0.2.4; yaml 5.3.1; -----; Python 3.8.3 (default, May 19 2020, 13:54:14) [Clang 10.0.0 ]; macOS-10.15.7-x86_64-i386-64bit; 12 logical CPU cores, i386; -----; Session information updated at 2020-10-03 14:22; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1439:1363,log,logical,1363,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1439,1,['log'],['logical']
Testability,"## Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. I have a bunch of matrix.mtx, barcode.tsv and genes.tsv. When I want to read in the files with:; `data1 = sc.read_10x_mtx(""GSE212966"", prefix=""GSM6567159_PDAC2_"", var_names='gene_symbols', cache=True)`. I get the following error:; `FileNotFoundError: [Errno 2] No such file or directory: 'GSE212966\\GSM6567159_PDAC2_features.tsv.gz'`. The thing is that the file exist here:; ![kép](https://github.com/user-attachments/assets/a3ee8f51-833d-4adb-ab9f-f6ff5b19387f). I have changed the *genes.tsv.gz file's name to *features.tsv.gz but still got the same error. Here is the full error log:; ```; ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); Cell In[62], [line 1](vscode-notebook-cell:?execution_count=62&line=1); ----> [1](vscode-notebook-cell:?execution_count=62&line=1) data1 = sc.read_10x_mtx(""GSE212966"", prefix=""GSM6567159_PDAC2_"", var_names='gene_symbols', cache=True); [2](vscode-notebook-cell:?execution_count=62&line=2) data1.var_names_make_unique(). File ~\AppData\Roaming\Python\Python312\site-packages\legacy_api_wrap\__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); [77](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/legacy_api_wrap/__init__.py:77) @wraps(fn); [78](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/legacy_api_wrap/__init__.py:78) def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; [79](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/Pipe",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3214:872,log,log,872,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3214,1,['log'],['log']
Testability,"### Minimal code sample (that we can copy&paste without having any data). when I follow your tutorial on https://nbisweden.github.io/workshop-scRNAseq/labs/compiled/scanpy/scanpy_03_integration.html; to the ; ```python; cdata = sc.external.pp.mnn_correct(alldata['covid_1'],alldata['covid_15'],alldata['covid_17'],; alldata['ctrl_5'],alldata['ctrl_13'],alldata['ctrl_14'], ; svd_dim = 50, batch_key = 'sample', save_raw = True, var_subset = var_genes); ```; line, then it said; `[1] 1764091 illegal hardware instruction (core dumped`. #### Versions. <details>. -----; anndata 0.7.6; scanpy 1.8.2; sinfo 0.3.4; -----; PIL 8.2.0; bottleneck 1.3.2; cffi 1.14.5; cloudpickle 1.6.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2021.04.0; dateutil 2.8.1; fsspec 0.9.0; h5py 2.10.0; igraph 0.9.8; joblib 1.0.1; kiwisolver 1.3.1; leidenalg 0.8.8; llvmlite 0.36.0; matplotlib 3.3.4; mkl 2.3.0; mpl_toolkits NA; natsort 8.0.0; numba 0.53.1; numexpr 2.7.3; numpy 1.20.1; packaging 20.9; pandas 1.2.4; pkg_resources NA; psutil 5.8.0; pyparsing 2.4.7; pytz 2021.1; scipy 1.6.2; six 1.15.0; sklearn 0.24.1; sphinxcontrib NA; tables 3.6.1; tblib 1.7.0; texttable 1.6.4; tlz 0.11.0; toolz 0.11.1; typing_extensions NA; wcwidth 0.2.5; yaml 5.4.1; zope NA; -----; Python 3.8.8 (default, Apr 13 2021, 19:58:26) [GCC 7.3.0]; Linux-5.11.0-38-generic-x86_64-with-glibc2.10; 64 logical CPU cores; -----. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2044:1382,log,logical,1382,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2044,1,['log'],['logical']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Attempted label transfer using `ingest`, using the example code on the [docs page](https://scanpy.readthedocs.io/en/1.10.x/generated/scanpy.tl.ingest.html). The fix is trivial (you must run `sc.pp.pca(adata_ref)` as well), but the error message is cryptic so I got stuck for a bit! I'll create the PR too. ### Minimal code sample. ```python; import scanpy as sc; import pandas as pd. sc.settings.verbosity = 1 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_versions(); sc.settings.set_figure_params(dpi=80, frameon=False, figsize=(3, 3), facecolor=""white""). adata_ref = sc.datasets.pbmc3k_processed(); adata = sc.datasets.pbmc68k_reduced(). var_names = adata_ref.var_names.intersection(adata.var_names); adata_ref = adata_ref[:, var_names]; adata = adata[:, var_names]. # start from scratch; del adata.obs[""louvain""]; adata.uns = {}; adata_ref.uns = {}. # example code for ingest function:; sc.pp.neighbors(adata_ref); sc.tl.umap(adata_ref); sc.tl.ingest(adata, adata_ref, obs=""louvain""); ```. ### Error output. ```pytb; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); Cell In[11], line 23; 21 sc.pp.neighbors(adata_ref); 22 sc.tl.umap(adata_ref); ---> 23 sc.tl.ingest(adata, adata_ref, obs=""louvain""). File ~/miniconda3/envs/sc/lib/python3.12/site-packages/legacy_api_wrap/__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positio",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3074:762,log,logging,762,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3074,1,['log'],['logging']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. I am working with a set of 2 10x scRNA samples. I read them, concatenated them and then I did basic filtering. I then used ""adata.raw = adata"" to freeze the counts on adata.raw before proceding. Then I ran: ; ```; sc.pp.normalize_total(adata, target_sum=1e4); sc.pp.log1p(adata); ```. To my surprise, when I check the adata.raw I see that the values have been also lognormized (and not only adata). ; Is that how it is supposed to be? Is there any way to avoid this behavior ? I know I can store the raw counts in layers, I just want to understand how it works. . To check the data I used : ; `print(adata.raw.X[1:10,1:10]) `. ### Minimal code sample. ```python; #read the data; Data1_adata= sc.read_10x_mtx(; '/Data_1/filtered_feature_bc_matrix', ; var_names='gene_symbols', index); cache=True) ; #concatenate; adata = Data1_adata.concatenate(Data2_adata); # save raw counts in raw slot.; adata.raw = adata ; # normalize to depth 10 000; sc.pp.normalize_total(adata, target_sum=1e4). # logaritmize; sc.pp.log1p(adata). #check adata.raw ; print(adata.raw.X[1:10,1:10]); ```. ### Error output. _No response_. ### Versions. <details>. ```; anndata 0.10.7; scanpy 1.10.0; -----; PIL 8.4.0; anyio NA; arrow 1.3.0; asttokens NA; attr 23.2.0; attrs 23.2.0; babel 2.14.0; backcall 0.2.0; bottleneck 1.3.7; brotli NA; certifi 2024.02.02; cffi 1.16.0; chardet 5.2.0; charset_normalizer 3.3.2; cloudpickle 3.0.0; colorama 0.4.6; comm 0.2.1; cycler 0.12.1; cython_runtime NA; cytoolz 0.12.3; dask 2024.2.0; dateutil 2.8.2; debugpy 1.8.1; decorator 5.1.1; defusedxml 0.7.1; exceptiongroup 1.2.0; executing 2.0.1; fastjsonschema NA; fqdn NA; h5py 3.7.0; idna 3.6; igraph 0.11.4; importlib_resources NA; ipykernel 6.29.2; ipyw",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3073:654,log,lognormized,654,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3073,1,['log'],['lognormized']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. I have an AnnData object, and I try to slice it with . `adata[adata.obs.Phenotype == 'CON']`. But I get an error: . ```; AssertionError: Don’t call _normalize_index with non-categorical/string names; ```. Curiously, `adata.obs[adata.obs.Phenotype == 'CON']` works just fine. . I verified that both `adata.obs.index` and `(adata.obs.Phenotype == 'CON').index` are both regular Int64Indexes. . What might be going wrong? . I noticed a similar issue in the past (xref https://github.com/scverse/scanpy/issues/747) but the solutions listed didn't work for me. . ### Minimal code sample. ```python; `adata[adata.obs.Phenotype == 'CON']`; ```. ### Error output. _No response_. ### Versions. <details>. ```; scanpy version 1.9.1; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2979:410,Assert,AssertionError,410,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2979,1,['Assert'],['AssertionError']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. I tried to do dpt trajectory analysis but constantly reminded of lacking this and that attributes. When I print out the components in the scanpy directory, it does seem to lack lots of components as shown below:. ```; >>> print(dir(sc)); ['AnnData', 'Neighbors', 'Verbosity', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', '__version__', '_compat', '_metadata', '_settings', '_utils', 'concat', 'datasets', 'experimental', 'external', 'get', 'logging', 'metrics', 'neighbors', 'pl', 'plotting', 'pp', 'preprocessing', 'queries', 'read', 'read_10x_h5', 'read_10x_mtx', 'read_csv', 'read_excel', 'read_h5ad', 'read_hdf', 'read_loom', 'read_mtx', 'read_text', 'read_umi_tools', 'read_visium', 'readwrite', 'set_figure_params', 'settings', 'tl', 'tools', 'write']; ```. I installed the latest version of scanpy 1.9.3 and python 3.9, my computer is MacBook Pro 2020. ### Minimal code sample. ```python; >>> print(dir(sc)); ['AnnData', 'Neighbors', 'Verbosity', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', '__version__', '_compat', '_metadata', '_settings', '_utils', 'concat', 'datasets', 'experimental', 'external', 'get', 'logging', 'metrics', 'neighbors', 'pl', 'plotting', 'pp', 'preprocessing', 'queries', 'read', 'read_10x_h5', 'read_10x_mtx', 'read_csv', 'read_excel', 'read_h5ad', 'read_hdf', 'read_loom', 'read_mtx', 'read_text', 'read_umi_tools', 'read_visium', 'readwrite', 'set_figure_params', 'settings', 'tl', 'tools', 'write']; ```. ### Error output. ```pytb; >>> print(dir(sc)); ['AnnData', 'Neighbors', 'Verbosity', '__builtins__', '__cached__', '__doc__'",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2949:803,log,logging,803,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2949,1,['log'],['logging']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. In #3048 we started raising errors for functions that don’t support backed mode, but seems like a tutorial used `dendrogram` in backed mode: https://scverse-tutorials.readthedocs.io/en/latest/notebooks/scverse_data_backed.html. ![grafik](https://github.com/user-attachments/assets/0317c570-0af8-4c5e-8f3f-7831335763af). That was probably a mistake and the data just got loaded to memory, but since `dendrogram` can be reimplemented using `.get.aggregate`, we should do that!. ### Minimal code sample. ```python; import scanpy as sc. adata = sc.datasets.pbmc3k(); adata.filename = ""test.h5ad""; sc.pl.dotplot(adata, [""FCN1""], groupby=""index"", dendrogram=True); ```. ### Error output. ```pytb; ---------------------------------------------------------------------------; NotImplementedError Traceback (most recent call last); Cell In[44], line 1; ----> 1 sc.pl.dotplot(mdata[""rna""], var_names=[""CD2""], groupby=""leiden"", figsize=(10, 3), dendrogram=True, swap_axes=True). File ~/.local/share/hatch/env/virtual/scverse-tutorials/_YRPCeuX/basic-scrna/lib/python3.12/site-packages/legacy_api_wrap/__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positional:]. File ~/.local/share/hatch/env/virtual/scverse-tutorials/_YRPCeuX/basic-scrna/lib/python3.12/site-packages/scanpy/plotting/_dotplot.py:1046, in dotplot(adata, var_names, groupby, use_raw, log, num_categories, expression_cutoff, mean_only_expressed, cmap, dot_max, dot_min, standard_scale",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3199:870,test,test,870,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3199,1,['test'],['test']
Testability,### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Our pre-release tests started failing. ```; FAILED scanpy/tests/notebooks/test_pbmc3k.py::test_pbmc3k - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[seurat-None] - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[seurat-10] - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-None] - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-10] - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_paga.py::test_paga_path - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_score_genes.py::test_sparse_nanmean - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_score_genes.py::test_score_genes_sparse_vs_dense - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_score_genes.py::test_score_genes_deplete - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_score_genes.py::test_npnanmean_vs_sparsemean - AttributeError: 'csr_matrix' object has no attribute 'A'; ```. ### Minimal code sample. ```python; pip install scipy==1.14.0rc1; pytest; ```. ### Error output. _No response_. ### Versions. <details>. ```; + anndata==0.11.0.dev116+g1bff5fb (from git+https://github.com/scverse/anndata@1bff5fbf0894185c0759b61d78c6df66d6dfeeba); + annoy==1.17.3; + anyio==4.4.0; + array-api-compat==1.7.1; + pillow==10.3.0; + platformdirs==4,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3083:305,test,tests,305,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3083,7,['test'],['tests']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Somewhere, we broke zappy tests. This diff is the start of fixing this: https://github.com/scverse/scanpy/compare/d3a8c7981321e4f0afa3290dd84c06fed3654b0a..fd90edb71b6f5fc4cc58638583ea4ff37b34e660. ### Minimal code sample. ```python; pip install zappy; pytest scanpy/tests/test_preprocessing_distributed.py; ```. ### Error output. ```pytb; ____________________________________________________________________________________________________________________________________ test_normalize_total[direct] ____________________________________________________________________________________________________________________________________. adata = AnnData object with n_obs × n_vars = 10000 × 1000; var: 'gene_ids', adata_dist = AnnData object with n_obs × n_vars = 10000 × 1000; var: 'gene_ids'; uns: 'dist-mode'. def test_normalize_total(adata: AnnData, adata_dist: AnnData):; > normalize_total(adata_dist). scanpy/tests/test_preprocessing_distributed.py:93: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; /home/phil/.local/share/hatch/env/virtual/scanpy/q4In3tK-/hatch-test.stable/lib/python3.12/site-packages/legacy_api_wrap/__init__.py:80: in fn_compatible; return fn(*args_all, **kw); scanpy/preprocessing/_normalization.py:240: in normalize_total; adata, _normalize_data(X, counts_per_cell, target_sum), layer=layer; scanpy/preprocessing/_normalization.py:49: in _normalize_data; return axis_mul_or_truediv(; /usr/lib/python3.12/functools.py:909: in wrapper;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3087:315,test,tests,315,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3087,2,['test'],['tests']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. After upgrading annData to 0.10.4 I tried to read in some Visium data with read_10x_mtx(); The resulting table only had one variable (/gene/column), and had it over and over again. ### Minimal code sample. ```python; S = scanpy.read_10x_mtx(mydata); ```. ### Error output. ```pytb; /home/lhw/pkgs/mambaforge/envs/env2/lib/python3.11/site-packages/anndata/_core/anndata.py:1908: UserWarning: Variable names are not unique. To make them unique, call `.var_names_make_unique`.; utils.warn_names_duplicates(""var""). In [6]: S.var_names; Out[6]: ; Index(['NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',; 'NOC2L', 'NOC2L',; ...; 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L', 'NOC2L',; 'NOC2L', 'NOC2L'],; dtype='object', length=18085). To test, I ran in another environment with scanpy 1.9.6 but annData 0.10.3.; Below are the results:. In [4]: S = scanpy.read_10x_mtx(mydata). In [5]: S.var_names; Out[5]: ; Index(['SAMD11', 'NOC2L', 'KLHL17', 'PLEKHN1', 'PERM1', 'HES4', 'ISG15',; 'AGRN', 'RNF223', 'C1orf159',; ...; 'MT-ND2', 'MT-CO2', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',; 'MT-ND5', 'MT-ND6', 'MT-CYB'],; dtype='object', length=18085); ```. ### Versions; Scanpy 1.9.6; annData 0.10.3 works, annData 0.10.4 does not; <details>. ```. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2825:1064,test,test,1064,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2825,1,['test'],['test']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Hello, I'm a new ScanPy user and have been working through the great tutorials. Recently, I've been encountering an error after I import ScanPy that causes the kernel I'm using to die and restart. After this happens, I can no longer call sc.- commands and have to import the library again. And then the kernel quickly dies again. . ### Minimal code sample. ```python; import numpy as np. import pandas as pd. import scanpy as sc. sc.settings.verbosity = 3 . sc.logging.print_header(). sc.settings.set_figure_params(dpi=80, facecolor='white'); ```. ### Error output. ```pytb; ---------------------------------------------------------------------------; NameError Traceback (most recent call last); /var/folders/jt/m9v9k7dd4f31m5pl8v_g8m3m0000gn/T/ipykernel_3816/1026803476.py in <module>; ----> 1 sc.settings.set_figure_params(dpi=80, facecolor='white'). NameError: name 'sc' is not defined; ```. ### Versions. <details>. ```. -----; anndata 0.9.2; scanpy 1.9.4; -----; PIL 9.2.0; PyObjCTools NA; appnope 0.1.2; astunparse 1.6.3; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; bottleneck 1.3.5; cffi 1.15.1; cloudpickle 2.0.0; colorama 0.4.5; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2022.7.0; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; dill 0.3.7; entrypoints 0.4; fsspec 2022.7.1; gmpy2 2.1.2; google NA; h5py 3.7.0; hypergeom_ufunc NA; igraph 0.10.1; ipykernel 6.15.2; ipython_genutils 0.2.0; jedi 0.18.1; jinja2 2.11.3; joblib 1.1.0; jupyter_server 1.18.1; kiwisolver 1.4.2; leidenalg 0.9.1; llvmlite 0.38.0; lz4 3.1.3; markupsafe 2.0.1; matplotlib 3.5.2; mpl_toolkits NA; mpmath 1.2.1; natsort 7.1.1; nbinom_ufunc NA; ncf_ufunc NA; numba 0.55.1; numexpr 2.8.4; numpy 1.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2675:752,log,logging,752,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2675,1,['log'],['logging']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. I am following the tutorial but everytime I try to run a violin plot the kernel crashes, this doesnt happen with other seaborn graphs. I have tried updating packeges, changing environment, etc, etc & nothing works any help would be great !!. ![image](https://github.com/scverse/scanpy/assets/127498480/b5cc12b1-00af-4919-abd0-7ea99b72cade). ### Minimal code sample. ```python; import scanpy as sc; import pandas as pd; import numpy as np; sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_header(); sc.settings.set_figure_params(dpi=80, facecolor='white'); results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results; adata = sc.read_10x_mtx(; 'data/', # the directory with the `.mtx` file; var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index); cache=True) # write a cache file for faster subsequent reading; adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`; adata; sc.pl.highest_expr_genes(adata, n_top=20, ); sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3); adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'; sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True); sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'); sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'); sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'], jitter=0-4, multi_panel=True); ```. ### Error output. ```pytb; Kernel Restarting; The kernel for Tests/scanpytutorial/Untitled.ipynb appears to ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2840:819,log,logging,819,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2840,1,['log'],['logging']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. I defined groups of cells with a custom filter. After I run rank_gene_groups with pts=True in order to get the precent of cells infected, the results don't make sense: ; upregulated genes with lfc values and adjusted pvalues that make sense, have a pts value of 0 - which does not make sense because if this gene is upregulated in this group, it has to exist in more than 0 cells. I would appreciate any help with his, thank you in advance. ![image](https://github.com/scverse/scanpy/assets/36629785/55431851-9836-44e3-a9f9-a4680ddc9d96). ### Minimal code sample. ```python; sc.tl.rank_genes_groups(adata, method='t-test', groupby='barcodes', groups=['infected', 'unknown'], reference='uninfected', key_added='group_DE_results', pts=True). results = adata.uns[""group_DE_results""]. groups = results['names'].dtype.names; result = pd.DataFrame(; {group + '_' + key: results[key][group]; for group in groups for key in ['names', 'pvals', 'pvals_adj', 'logfoldchanges', 'pts']}). de_results = []; for i in groups:; group = result[[c for c in result.columns.tolist() if c.startswith(str(i) + '_')]]; group = group.rename(columns={f'{i}_names':'names', f'{i}_pvals':'pvals', f'{i}_pvals_adj':'pvals_adj', f'{i}_logfoldchanges':'lfc', f'{i}_pts':'pts', f'{i}_pts_rest':'pts_rest'}); group['group'] = i; de_results.append(group); de_results = pd.concat(de_results). de_results.reset_index(drop=True, inplace=True); de_results; ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2628:907,test,test,907,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2628,2,"['log', 'test']","['logfoldchanges', 'test']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. I just made a new environment with the latest version of scanpy (1.9.3), and was trying to run some basic analysis and the pca function is hanging and taking forever, when it used to be basically instantaneous. I tried reproducing it with the the simple tutorial and it is still hanging when I try to run PCA (takes longer than 10 minutes on the simple example dataset in the tutorial, I eventually just have to kill the process). . Not sure at all what the issue is, but wanted to bring it to your attention. This does not happen when using scanpy 1.9.1. Here is the output from the header logger:. scanpy==1.9.3 anndata==0.9.1 umap==0.5.3 numpy==1.24.3 scipy==1.9.1 pandas==2.0.2 scikit-learn==1.2.2 statsmodels==0.14.0 python-igraph==0.10.4 louvain==0.8.0 pynndescent==0.5.10. ### Minimal code sample. ```python; #Follow the same as the tutorial, or as a minimum example:. import numpy as np; import pandas as pd; import scanpy as sc. adata = sc.datasets.pbmc3k(); adata.var_names_make_unique() ; sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3); adata.var['mt'] = adata.var_names.str.startswith('MT-'); sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True); adata = adata[adata.obs.n_genes_by_counts < 2500, :]; adata = adata[adata.obs.pct_counts_mt < 5, :]; sc.pp.normalize_total(adata, target_sum=1e4); sc.pp.log1p(adata); sc.pp.highly_variable_genes(adata, min_mean=0.0125, max_mean=3, min_disp=0.5); sc.tl.pca(adata, svd_solver='arpack'); ```. ### Error output; No error output, it just hangs; ```pytb. ```. ### Versions. <details>. ```; -----; anndata 0.9.1; scanpy 1.9.3; -----; CoreFoundation NA; Foundation NA; PIL 9.5.0; PyO",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2531:882,log,logger,882,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2531,1,['log'],['logger']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. In #2235, more gradually enabled some so far disabled tests. Before, all tests in `TestPreprocessingDistributed` were disabled with the available optional dependencies we run our tests with:. https://github.com/scverse/scanpy/blob/06802b459648a219a10f74243efe4d6c2f912016/scanpy/tests/test_preprocessing_distributed.py#L15-L22. now, the dask tests are enabled and only the zappy tests are disabled:. https://github.com/scverse/scanpy/blob/6b9e734f4979a8ba450c0eaa052451f98b000753/scanpy/tests/test_preprocessing_distributed.py#L18-L31. ### Minimal code sample. ```bash; pytest -v --disable-warnings -k test_normalize_per_cell[dask] --runxfail; ```. ### Error output. ```pytb; ===================================================================================================== test session starts ======================================================================================================; platform linux -- Python 3.8.17, pytest-7.3.1, pluggy-1.0.0 -- /home/phil/Dev/Python/venvs/single-cell/bin/python; cachedir: .pytest_cache; rootdir: /home/phil/Dev/Python/Single Cell/scanpy; configfile: pyproject.toml; testpaths: scanpy; plugins: cov-4.1.0, nunit-1.0.3, memray-1.4.0, xdist-3.3.1; collected 986 items / 985 deselected / 1 selected . scanpy/tests/test_preprocessing_distributed.py::TestPreprocessingDistributed::test_normalize_per_cell[dask] FAILED [100%]. =========================================================================================================== FAILURES ===========================================================================================================; __________________________________________________________________________________ TestPreprocessingDistribut",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:345,test,tests,345,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,8,"['Test', 'test']","['TestPreprocessingDistributed', 'tests']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Installation using pip & installation from github repository. ### Minimal code sample. ```python; pip install scanpy; ```. ### Error output. ```pytb; Installing collected packages: tbb, distlib, asciitree, stdlib-list, setuptools-scm, pbr, numcodecs, nodeenv, natsort, igraph, identify, filelock, fasteners, docutils, cfgv, array-api-compat, accessible-pygments, zarr, virtualenv, sphinx, session-info, pytest-nunit, pytest-mock, profimp, mdit-py-plugins, leidenalg, sphinxext-opengraph, sphinx-design, sphinx-copybutton, sphinx-autodoc-typehints, scanpydoc, pynndescent, pydata-sphinx-theme, pre-commit, myst-parser, anndata, umap-learn, sphinx-book-theme, jupyter-cache, scanpy, nbsphinx, myst-nb; Attempting uninstall: tbb; Found existing installation: TBB 0.2; ERROR: Cannot uninstall 'TBB'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.; ```. ### Versions. <details>. ```; Package Version; ----------------------------- ---------------; aiobotocore 2.5.0; aiofiles 22.1.0; aiohttp 3.8.5; aioitertools 0.7.1; aiosignal 1.2.0; aiosqlite 0.18.0; alabaster 0.7.12; anaconda-anon-usage 0.4.2; anaconda-catalogs 0.2.0; anaconda-client 1.12.1; anaconda-cloud-auth 0.1.3; anaconda-navigator 2.5.0; anaconda-project 0.11.1; anyio 3.5.0; appdirs 1.4.4; argon2-cffi 21.3.0; argon2-cffi-bindings 21.2.0; arrow 1.2.3; astroid 2.14.2; astropy 5.1; asttokens 2.0.5; async-timeout 4.0.2; atomicwrites 1.4.0; attrs 22.1.0; Automat 20.2.0; autopep8 1.6.0; Babel 2.11.0; backcall 0.2.0; backports.functools-lru-cache 1.6.4; backports.tempfile 1.0; backports.weakref 1.0.post1; bcrypt 3.2.0; beautifulsoup4 4.12.2; binaryorn",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2706:715,mock,mock,715,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2706,1,['mock'],['mock']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Since the most recent matplotlib release (3.8.1), the `_get_signature` function seems to have issues. I am not sure why this is the case. I am opening the issue for now and will dig a bit. Could be on my end. ### Minimal code sample. ```python; `pip install ehrapy`. `>>> import ehrapy as ep`; ```. ### Error output. ```pytb; tests/tools/causal/test_dowhy.py:10: in <module>; import ehrapy as ep; ehrapy/__init__.py:14: in <module>; from ehrapy import plot as pl; ehrapy/plot/__init__.py:3: in <module>; from ehrapy.plot._scanpy_pl_api import * # noqa: F403; ehrapy/plot/_scanpy_pl_api.py:1134: in <module>; @_wraps_plot_scatter; ../../miniconda3/envs/ehrapy/lib/python3.11/site-packages/scanpy/plotting/_tools/scatterplots.py:605: in _wraps_plot_scatter; wrapper_sig = _get_signature(wrapper, eval_str=True); ../../miniconda3/envs/ehrapy/lib/python3.11/site-packages/scanpy/plotting/_tools/scatterplots.py:590: in _get_signature; lambda: inspect.Signature.empty, get_annotations(obj, eval_str=eval_str); ../../miniconda3/envs/ehrapy/lib/python3.11/inspect.py:276: in get_annotations; return_value = {key:; ../../miniconda3/envs/ehrapy/lib/python3.11/inspect.py:277: in <dictcomp>; value if not isinstance(value, str) else eval(value, globals, locals); <string>:1: in <module>; ???; E NameError: name 'Axes' is not defined; ```. ### Versions. <details>. ```; matplotlib 3.8.1; scanpy 1.9.6; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2747:617,test,tests,617,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2747,1,['test'],['tests']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. The `pca_params` fixture randomly picks one of the possible solvers, but since a little while, the `""lobpcg""` solver fails for our small test data, [as explained by its docs](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.lobpcg.html):. > The LOBPCG code internally solves eigenproblems of the size 3k on every iteration by calling the dense eigensolver eigh, so if k is not small enough compared to n, it makes no sense to call the LOBPCG code. Moreover, if one calls the LOBPCG algorithm for 5k > n, it would likely break internally, so the code calls the standard function eigh instead. It is not that n should be large for the LOBPCG to work, but rather the ratio n / k should be large. It you call LOBPCG with k=1 and n=10, it works though n is small. The method is intended for extremely large n / k. The workaround was to rerun failed tests until the fixture randomly returned another solver, which isn’t great. I therefore simply `xfail` that test for now to not block PRs in https://github.com/scverse/scanpy/pull/2745. ### Minimal code sample. ```bash; # try one of the following to reproduce (if necessary multiple times); pytest --runxfail 'scanpy/tests/test_pca.py::test_pca_warnings[scipy_csr-zero_center-valid]'; pytest --runxfail 'scanpy/tests/test_pca.py::test_pca_warnings[scipy_csc-zero_center-valid]'; ```. ### Error output. (note that since the code is run with `warnings.simplefilter('error')`, the below is an error that fails the test). ```pytb; UserWarning: The problem size 5 minus the constraints size 0 is too small relative to the block size 4. Using a dense eigensolver instead of LOBPCG iterations.No output of the history of the iterations.; ```. ### V",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2744:428,test,test,428,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2744,1,['test'],['test']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. When I install scanpy==1.9.6 with pip (anndata==0.10.4), something wrong and adata.X.nnz is 0.; I changed the version of anndata to 0.9.2, it works normal. ### Minimal code sample. ```python; import numpy as np; import pandas as pd; import scanpy as sc; sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_header(); sc.settings.set_figure_params(dpi=80, facecolor='white'); results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results; adata = sc.read_10x_mtx(my_sample, # the directory with the `.mtx` file; var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index); cache=False) # write a cache file for faster subsequent reading; # sc.pl.highest_expr_genes(adata, n_top=20, ); adata.X.nnz; ```. ### Error output. _No response_. ### Versions. <details>. ```. -----; anndata 0.9.2; scanpy 1.9.5; -----; PIL 9.5.0; asttokens NA; backcall 0.2.0; bottleneck 1.3.5; cffi 1.16.0; comm 0.1.2; cycler 0.12.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.6.7; decorator 4.4.2; defusedxml 0.7.1; entrypoints 0.4; executing 1.2.0; google NA; h5py 3.7.0; hurry NA; ipykernel 6.25.0; ipython_genutils 0.2.0; ipywidgets 8.0.4; jedi 0.18.1; joblib 1.2.0; kiwisolver 1.4.5; llvmlite 0.41.1; matplotlib 3.8.0; matplotlib_inline 0.1.6; mpl_toolkits NA; natsort 8.4.0; numba 0.58.1; numexpr 2.8.7; numpy 1.26.0; packaging 23.2; pandas 1.5.3; parso 0.8.3; patsy 0.5.6; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; platformdirs 3.10.0; prompt_toolkit 3.0.36; psutil 5.9.0; ptyprocess 0.7.0; pure_eval 0.2.2; pyarrow 13.0.0; pycparser 2.21; pydev_ipython NA; pydevconsole NA; pydevd 2.9.5; pydevd_file_utils NA; pydev",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2822:634,log,logging,634,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2822,1,['log'],['logging']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Both https://github.com/scverse/scanpy/commit/23c20bc4dd3b1a1e5432ad4e23f56cf5efcf7ebe and https://dev.azure.com/scverse/scanpy/_build/results?buildId=6733&view=logs&j=cb4d9293-b492-5d67-02b0-e6a595893958&t=99aeec2e-a40e-57fc-1ab3-27c1a626c3e0&s=96ac2280-8cb4-5df5-99de-dd2da759617d show errors from scrublet which I cannot reproduce locally. ### Minimal code sample. ```python; See `test_scrublet_data` under `anndata_dev`; ```. ### Error output. ```pytb; E AssertionError: ; E Not equal to tolerance rtol=1e-15, atol=1e-15; E ; E Mismatched elements: 1 / 200 (0.5%); E Max absolute difference: 0.0126501664; E Max relative difference: 0.1823112224; E x: array([0.033079, 0.039326, 0.047022, 0.069388, 0.047022, 0.033079,; E 0.069388, 0.019841, 0.069388, 0.069388, 0.069388, 0.039326,; E 0.033079, 0.149254, 0.047022, 0.056738, 0.047022, 0.023555,...; E y: array([0.033079, 0.039326, 0.047022, 0.069388, 0.047022, 0.033079,; E 0.069388, 0.019841, 0.069388, 0.069388, 0.069388, 0.039326,; E 0.033079, 0.149254, 0.047022, 0.056738, 0.047022, 0.023555,...; ```. ### Versions. <details>. ```; Package Version; ----------------- -------------------------; anndata 0.11.0.dev114+g105f354; annoy 1.17.3; scipy 1.13.0; scprep 1.1.0; seaborn 0.13.2; session-info 1.0.0; setuptools 69.5.1; setuptools-scm 8.1.0; six 1.16.0; sniffio 1.3.1; sortedcontainers 2.4.0; sparse 0.16.0a6; statsmodels 0.14.2; stdlib-list 0.10.0; tasklogger 1.2.0; tblib 3.0.0; texttable 1.7.0; textual 0.60.1; threadpoolctl 3.5.0; tifffile 2024.5.10; toolz 0.12.1; tornado 6.4; tqdm 4.66.4; typing-extensions 4.12.0rc1; tzdata 2024.1; uc-micro-py 1.0.3; umap-learn 0.5.6; urllib3 2.2.1; uv 0.1.44; virtualenv 20.26.2; wrapt 1.16.0; zarr 2.18.1; zi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3068:450,log,logs,450,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3068,2,"['Assert', 'log']","['AssertionError', 'logs']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. HVG can produce more than the number of genes asked for as highly variable. This occurs on these two datasets:. ```; wget https://datasets.cellxgene.cziscience.com/e00ab1f4-28cd-497d-b889-94d45840f423.h5ad; ```. ### Minimal code sample. ```python; import scanpy as sc. adata1 = sc.read('e00ab1f4-28cd-497d-b889-94d45840f423.h5ad'). sc.pp.normalize_total(adata1, target_sum=1e4). sc.pp.log1p(adata1). n_top_gene = 10000; sc.pp.highly_variable_genes(adata1, n_top_genes = n_top_gene). hvg_system1 = set(adata1.var[adata1.var['highly_variable']].index); assert len(hvg_system1) == n_top_gene, f""found {len(hvg_system1)} instead of {n_top_gene}"". ```. ### Error output. ```pytb; AssertionError Traceback (most recent call last); Cell In[12], line 1; ----> 1 assert len(hvg_system1) == n_top_gene, f""found {len(hvg_system1)} instead of {n_top_gene}"". AssertionError: found 13355 instead of 10000; ```. ### Versions. <details>. ```; import scanpy; scanpy.logging.print_versions(); -----; anndata 0.10.8; scanpy 1.10.0rc2.dev85+gb918a23e; -----; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3157:840,assert,assert,840,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3157,5,"['Assert', 'assert', 'log']","['AssertionError', 'assert', 'logging']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Leiden and Louvain clustering params are not saved to matching `key_added` key in `uns` dictionary but are ovewritten to hardcoded key instead. One use case is that a user may want to run Leiden/Louvain clustering multiple times with different resolutions / parameters. One may specify different keys to store results under. However, if you do so, the metadata for the parameterization of the clustering algorithms are overwritten because the lines below do not respect the user provided `key_added` parameter. I think the desired behavior is to store data under `adata.uns[key_added][""params""]`. I think I've found the pertinent lines below. Happy to submit a PR if maintainers agree :D.; - https://github.com/scverse/scanpy/blob/91ea0fbb03392795d1506d297d4b4847c646db04/scanpy/tools/_leiden.py#L206; - https://github.com/scverse/scanpy/blob/91ea0fbb03392795d1506d297d4b4847c646db04/scanpy/tools/_louvain.py#L259. ### Minimal code sample. ```python; sc.tl.leiden(adata, resolution=0.8, key_added=""leiden_0.8""); assert ""leiden_0.8"" not in adata.uns; params = adata.uns[""leiden""] . sc.tl.leiden(adata, resolution=1.2, key_added=""leiden_1.2""); assert ""leiden_1.2"" not in adata.uns; overwritten_params = adata.uns[""leiden""] ; assert params == overwritten_params # should fail; ```. ### Error output. _No response_. ### Versions. <details>; Confirmed that params are overwritten in source in main branch. (see permalinks); </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2887:1301,assert,assert,1301,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2887,3,['assert'],['assert']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. 导入scanpy1.9.1时，matplotlib在3.7版本以下然后发生元类错误. ### Minimal code sample. ```python; import scanpy as sc; ```. ### Error output. ```pytb; Traceback (most recent call last):; File ""G:/stmgcn-main/stmgcn-main/STMGCN/DLPFC.py"", line 15, in <module>; from util import *; File ""G:\stmgcn-main\stmgcn-main\STMGCN\util.py"", line 1, in <module>; import scanpy as sc; File ""E:\Anaconda3\envs\stmgcn\lib\site-packages\scanpy\__init__.py"", line 16, in <module>; from . import plotting as pl; File ""E:\Anaconda3\envs\stmgcn\lib\site-packages\scanpy\plotting\__init__.py"", line 1, in <module>; from ._anndata import (; File ""E:\Anaconda3\envs\stmgcn\lib\site-packages\scanpy\plotting\_anndata.py"", line 28, in <module>; from . import _utils; File ""E:\Anaconda3\envs\stmgcn\lib\site-packages\scanpy\plotting\_utils.py"", line 35, in <module>; class _AxesSubplot(Axes, axes.SubplotBase, ABC):; TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases. 进程已结束,退出代码1; ```. ### Versions. You can't get to on account of the crash.scanpy.logging.print_versions()",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3029:1374,log,logging,1374,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3029,1,['log'],['logging']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Hi,. this recent preprint https://www.biorxiv.org/content/biorxiv/early/2023/08/20/2023.07.20.549945/DC1/embed/media-1.pdf?download=true. claims that there is an issue with ; https://github.com/scverse/scanpy/blob/master/scanpy/tools/_rank_genes_groups.py#L419C1-L423C48. that reportedly leads to log-fold changes of 30 or -30 when gene expression is 0 in a cluster. What do you think about this?. ### Minimal code sample. ```python; https://github.com/scverse/scanpy/blob/master/scanpy/tools/_rank_genes_groups.py#L419C1-L423C48; ```. ### Error output. _No response_. ### Versions. master",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2634:588,log,log-fold,588,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2634,1,['log'],['log-fold']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. I was running an older jupyter notebook based on a scanpy tutorial. I had included a call to `scanpy.logging.print_versions()` for debugging purposes. I just ran the code using the the current main branch of scanpy, and it errored out. See below for output. ### Minimal code sample. ```python; import scanpy; scanpy.logging.print_versions(); ```. ### Error output. ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); Cell In[44], line 1; ----> 1 sc.logging.print_versions(). File ~/Documents/Projects/githubPackages/scanpy/scanpy/logging.py:180, in print_versions(file); 178 print_versions(); 179 else:; --> 180 session_info.show(; 181 dependencies=True,; 182 html=False,; 183 excludes=[; 184 'builtins',; 185 'stdlib_list',; 186 'importlib_metadata',; 187 # Special module present if test coverage being calculated; 188 # https://gitlab.com/joelostblom/session_info/-/issues/10; 189 ""$coverage"",; 190 ],; 191 ). File ~/Desktop/data/env/lib/python3.11/site-packages/session_info/main.py:209, in show(na, os, cpu, jupyter, dependencies, std_lib, private, write_req_file, req_file_name, html, excludes); 207 for mod_name in clean_modules:; 208 mod_names.append(mod_name); --> 209 mod = sys.modules[mod_name]; 210 # Since modules use different attribute names to store version info,; 211 # try the most common ones.; 212 try:. KeyError: 'numcodecs'; ```. ### Versions. <details>. The function we are asked to run here is the one that produces the error. As an alternative, I'm pasting the output of `scanpy.settings.set_figure_params(dpi=80, facecolor='white')`, which includes several versions in the output. ```; scanpy==1.10.0.dev88",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2580:392,log,logging,392,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2580,4,['log'],['logging']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. I was trying to install `scanpy=1.9.6` using conda in a `python=3.9` environment that had 1.9.5 working with `seaborn=0.13`.; Conda raised a solving issue due to ; `package scanpy-1.9.6-pyhd8ed1ab_0 requires seaborn !=0.13.0, but none of the providers can be installed`; I tried the second build (1ab_1) and the error stayed:; ` package scanpy-1.9.6-pyhd8ed1ab_1 requires seaborn !=0.13.0, but none of the providers can be installed`. I checked github and saw that the dependency in `pyproject.toml` is `""seaborn>=0.13.0""` but when i checked the conda package's `index.json` i saw `""seaborn !=0.13.0""`. The discrepancy between the dependencies is unclear. the full `index.json`:; ```json; {; ""arch"": null,; ""build"": ""pyhd8ed1ab_1"",; ""build_number"": 1,; ""depends"": [; ""anndata >=0.7.4"",; ""get-annotations"",; ""h5py >=3"",; ""joblib"",; ""matplotlib-base >=3.6"",; ""natsort"",; ""networkx >=2.3"",; ""numba >=0.41"",; ""numpy >=1.17"",; ""packaging"",; ""pandas >=1.1.1,!=2.1.2"",; ""patsy"",; ""python >=3.8"",; ""scikit-learn >=0.24"",; ""scipy >=1.4"",; ""seaborn !=0.13.0"",; ""session-info"",; ""statsmodels >=0.11"",; ""tqdm"",; ""umap-learn >=0.3.10""; ],; ""license"": ""BSD-3-Clause"",; ""license_family"": ""BSD"",; ""name"": ""scanpy"",; ""noarch"": ""python"",; ""platform"": null,; ""subdir"": ""noarch"",; ""timestamp"": 1699376683854,; ""version"": ""1.9.6""; }; ```. ### Minimal code sample. ```python; conda create -n test ""python=3.9"" ""scanpy=1.9.6"" ""seaborn=0.13"" -c conda-forge; ```. ### Error output. _No response_. ### Versions. <details>. ```. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2791:1661,test,test,1661,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2791,1,['test'],['test']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Many different calls in scanpy emit warnings that are currently suppressed by our testing framework (I think). . ### Minimal code sample. I discovered this unrelatedly by editing the notebooks, see for example: https://github.com/scverse/scanpy-tutorials/blob/master/spatial/integration-scanorama.ipynb. @flying-sheep mentioned that the scanpy tests filter out warnings and indeed you can reproduce these by e.g.,:; ```sh; pytest -W error::FutureWarning -n auto scanpy/tests/test_plotting.py; ```. ### Error output. - [x] `…/scanpy/plotting/_tools/scatterplots.py:401:`. > UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored. - [x] `…/scanpy/plotting/_tools/__init__.py:1269:`. > FutureWarning: The `scale` parameter has been renamed and will be removed in v0.15.0. Pass `density_norm='width'` for the same effect. ; > `_ax = sns.violinplot(`. - [x] `…/scanpy/preprocessing/_simple.py:274:`. > ImplicitModificationWarning: Trying to modify attribute `.var` of view, initializing view as actual.; > `adata.var[""n_cells""] = number`. - [x] `…/scanpy/plotting/_stacked_violin.py:503: FutureWarning:`. > Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect. ; > `row_ax = sns.violinplot(`. ### Versions. <details>. ```; -----; anndata 0.10.4; scanpy 1.10.0.dev191+gf7f5d5c6; -----; IPython 8.20.0; PIL 10.2.0; asciitree NA; asttokens NA; cffi 1.16.0; cloudpickle 3.0.0; cycler 0.12.1; cython_runtime NA; dask 2024.1.0; dateutil 2.8.2; decorator 5.1.1; defusedxml 0.7.1; executing 2.0.1; fasteners 0.19; h5py 3.10.0; igraph 0.10.8; iniconfig NA; jedi 0.19.1; jinja2 3",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2839:373,test,testing,373,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2839,3,['test'],"['testing', 'tests']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Since a few weeks ago (at least), the tests in `test_metrics.py` started failing because the exact equality tests no longer consistently returned the bit-for-bit same float. Something like it has been observed in https://github.com/scverse/scanpy/pull/1740#discussion_r596827747. #2687 disables the exact comparison, but we should figure out why it’s happening and if we can restore exact precision. ### Minimal code sample. ```console; $ git switch 1.9.5; $ pytest scanpy/tests/test_metrics.py; ```. ### Error output. ```pytb; =================================== FAILURES ===================================; __________________________ test_morans_i_consistency ___________________________. def test_morans_i_consistency():; pbmc = pbmc68k_reduced(); pbmc.layers[""raw""] = pbmc.raw.X.copy(); g = pbmc.obsp[""connectivities""]; ; > assert eq(; sc.metrics.morans_i(g, pbmc.obs[""percent_mito""]),; sc.metrics.morans_i(pbmc, vals=pbmc.obs[""percent_mito""]),; ); E AssertionError: assert False; E + where False = eq(0.13099293222276961, 0.13099293222276967); E + where 0.13099293222276961 = <function morans_i at 0x7f354779d9d0>(<700x700 sparse matrix of type '<class 'numpy.float64'>'\n	with 9992 stored elements in Compressed Sparse Row format>, index\nAAAGCCTGGCTAAC-1 0.023856\nAAATTCGATGCACA-1 0.027458\nAACACGTGGTCTTT-1 0.016819\nAAGTGCACGTGCTA-1 0.011797\nACACGAACGGAGTG-1 0.017277\n ... \nTGGCACCTCCAACA-8 0.008840\nTGTGAGTGCTTTAC-8 0.022068\nTGTTACTGGCGATT-8 0.012821\nTTCAGTACCGGGAA-8 0.014169\nTTGAGGTGGAGAGC-8 0.010886\nName: percent_mito, Length: 700, dtype: float32); E + where <function morans_i at 0x7f354779d9d0> = <module 'scanpy.metrics' from '/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/sit",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2688:329,test,tests,329,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2688,3,['test'],['tests']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. The test suite keeps failing with a segfault on the `python=3.9` build. I haven't been able to reproduce locally. Interestingly, I haven't seen it error when I rerun the check. It looks like this always happens during the call to `nn_approx`. ### Minimal code sample. ```python; NA; ```. ### Error output. ```pytb; platform linux -- Python 3.9.18, pytest-8.0.1, pluggy-1.4.0 -- /opt/hostedtoolcache/Python/3.9.18/x64/bin/python; cachedir: .pytest_cache; rootdir: /home/vsts/work/1/s; configfile: pyproject.toml; testpaths: scanpy; plugins: nunit-1.0.6, mock-3.12.0; [1mcollecting ... [0mcollected 1474 items. scanpy/_utils/compute/is_constant.py::scanpy._utils.compute.is_constant.is_constant [32mPASSED[0m[32m [ 0%][0m; scanpy/datasets/_ebi_expression_atlas.py::scanpy.datasets._ebi_expression_atlas.ebi_expression_atlas [32mPASSED[0m[32m [ 0%][0m; scanpy/external/pl.py::scanpy.external.pl.phate [33mSKIPPED[0m (needs modul...)[32m [ 0%][0m; scanpy/external/pp/_bbknn.py::scanpy.external.pp._bbknn.bbknn [33mSKIPPED[0m[32m [ 0%][0m; scanpy/external/pp/_harmony_integrate.py::scanpy.external.pp._harmony_integrate.harmony_integrate [32mPASSED[0m[32m [ 0%][0m; scanpy/external/pp/_hashsolo.py::scanpy.external.pp._hashsolo.hashsolo [33mSKIPPED[0m[32m [ 0%][0m; scanpy/external/pp/_magic.py::scanpy.external.pp._magic.magic [32mPASSED[0m[32m [ 0%][0m; scanpy/external/pp/_scanorama_integrate.py::scanpy.external.pp._scanorama_integrate.scanorama_integrate Fatal Python error: Illegal instruction. Thread 0x00007f00347c4640 (most recent call first):; File ""/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/threading.py"", line 316 in wait; File ""/opt/hostedtoolcache/Python/3.9.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2866:295,test,test,295,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2866,3,"['mock', 'test']","['mock-', 'test', 'testpaths']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. When running the tests with pytest<=8, the doctest for `scanpy.preprocessing._simple.filter_cells` errors in a way I can't quite figure out how to fix. . I think what's happening is that the ""error on warning"" isn't being overridden correctly when we expect the test to warn. Possibly related to https://github.com/pytest-dev/pytest/issues/11759. @flying-sheep any ideas how to fix? I will just pin pytest for now. ### Minimal code sample. ```python; Examples; --------; >>> import scanpy as sc; >>> adata = sc.datasets.krumsiek11(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); ```. ### Error output. ```pytb; ======================================================================================================================= FAILURES =======================================================================================================================; _________________________________________________________________________________________________ [doctest] scanpy.preprocessing._simple.filter_cells __________________________________________________________________________________________________; 081 Boolean index mask that does filtering. `True` means that the; 082 cell is kept. `False` means the cell is removed.; 083 number_per_cell; 084 Depending on what was thresholded (`counts` or `genes`),; 085 the array stores `n_counts` or `n_cells` per gene.; 086 ; 087 Examples; 088 --------; 089 >>> import scanpy as sc; 090 >>> adata = sc.datasets.krumsiek11(); UNEXPECTED EXCEPTION: UserWarning('Observation names are not unique. To make them unique, call `.obs_names_make_unique`.'); Traceback (most rec",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2836:308,test,tests,308,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2836,2,['test'],"['test', 'tests']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. `@doctest_needs` decorator causes test failures on scanpy import in anndata test suite. https://dev.azure.com/scverse/anndata/_build/results?buildId=5802&view=logs&jobId=0497d03e-5796-547f-cc56-989f8152a63c&j=0497d03e-5796-547f-cc56-989f8152a63c&t=ea3acdad-0250-5b8b-a1da-6cd02463cf17. ### Minimal code sample. ```python; NA; ```. ### Error output. ```pytb; else:; enum_member = enum_class._new_member_(enum_class, *args); if not hasattr(enum_member, '_value_'):; if enum_class._member_type_ is object:; enum_member._value_ = value; else:; try:; enum_member._value_ = enum_class._member_type_(*args); except Exception as exc:; new_exc = TypeError(; '_value_ not set in __new__, unable to create it'; ); new_exc.__cause__ = exc; > raise new_exc; E TypeError: _value_ not set in __new__, unable to create it; ```. ### Versions. <details>. ```; See anndata test failure; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2878:325,test,test,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2878,4,"['log', 'test']","['logs', 'test']"
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Tried to run this function:; sc.tl.leiden(test, resolution = 0.1, restrict_to = ('leiden', ['5'])). and instead it is subsetting cluster 5 into over 400 new subsets, even with my resolution set to 0.1. I've also tried different resolutions and none of them work, it ignores the resolution altogether. ; ![leiden](https://github.com/scverse/scanpy/assets/88872118/7fa7114e-d8ae-4e91-94b6-ece1f9505594). ### Minimal code sample. ```python; sc.tl.leiden(test, resolution = 0.1, restrict_to = ('leiden', ['5'])); ```. ### Error output. _No response_. ### Versions. <details>. ```; -----; anndata 0.10.3; scanpy 1.9.6; -----; PIL 10.0.1; appnope 0.1.2; asttokens NA; attr 23.1.0; bottleneck 1.3.5; brotli NA; celltypist 1.6.2; certifi 2023.11.17; cffi 1.16.0; chardet 4.0.0; charset_normalizer 2.0.4; cloudpickle 2.2.1; colorama 0.4.6; comm 0.1.2; cycler 0.10.0; cython_runtime NA; cytoolz 0.12.2; dask 2022.7.0; dateutil 2.8.2; debugpy 1.6.7; decorator 5.1.1; decoupler 1.5.0; defusedxml 0.7.1; dill 0.3.7; docrep 0.3.2; entrypoints 0.4; exceptiongroup 1.2.0; executing 0.8.3; fsspec 2023.10.0; h5py 3.7.0; idna 3.4; igraph 0.10.8; inflect NA; ipykernel 6.28.0; ipython_genutils 0.2.0; jedi 0.18.1; jinja2 3.1.3; joblib 1.3.2; jupyter_server 1.23.4; kiwisolver 1.4.4; leidenalg 0.10.1; llvmlite 0.42.0; louvain 0.8.1; lz4 4.3.2; markupsafe 2.1.3; matplotlib 3.8.0; matplotlib_inline 0.1.6; mpl_toolkits NA; natsort 8.4.0; numba 0.59.0; numexpr 2.8.7; numpy 1.26.3; omnipath 1.0.8; packaging 23.1; pandas 2.1.4; parso 0.8.3; patsy 0.5.6; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; platformdirs 3.10.0; plotly 5.9.0; prompt_toolkit 3.0.43; psutil 5.9.0; ptyprocess 0.7.0; pure_eval 0.2.2; pycparser 2.21; pyda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2906:331,test,test,331,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2906,2,['test'],['test']
Testability,"### Please make sure these conditions are met. - [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Hi,. When I try to run the code in https://www.sc-best-practices.org/preprocessing_visualization/quality_control.html# I get an error. ### Minimal code sample. ```python; import numpy as np; import scanpy as sc; import seaborn as sns; from scipy.stats import median_abs_deviation. sc.settings.verbosity = 0; sc.settings.set_figure_params(; dpi=80,; facecolor=""white"",; frameon=False,; ). adata = sc.read_10x_h5(; filename=""filtered_feature_bc_matrix.h5"",; backup_url=""https://figshare.com/ndownloader/files/39546196"",; ). import anndata2ri; import logging. import rpy2.rinterface_lib.callbacks as rcb; import rpy2.robjects as ro. rcb.logger.setLevel(logging.ERROR); ro.pandas2ri.activate(); anndata2ri.activate(). %load_ext rpy2.ipython. %%R; library(SoupX). adata_pp = adata.copy(); sc.pp.normalize_per_cell(adata_pp); sc.pp.log1p(adata_pp). sc.pp.pca(adata_pp); sc.pp.neighbors(adata_pp); sc.tl.leiden(adata_pp, key_added=""soupx_groups""). # Preprocess variables for SoupX; soupx_groups = adata_pp.obs[""soupx_groups""]. cells = adata.obs_names; genes = adata.var_names; data = adata.X.T. adata_raw = sc.read_10x_h5(; filename=""raw_feature_bc_matrix.h5"",; backup_url=""https://figshare.com/ndownloader/files/39546217"",; ); adata_raw.var_names_make_unique(); data_tod = adata_raw.X.T. %%R -i data -i data_tod -i genes -i cells -i soupx_groups -o out . # specify row and column names of data; rownames(data) = genes; colnames(data) = cells; # ensure correct sparse format for table of counts and table of droplets; data <- as(data, ""sparseMatrix""); data_tod <- as(data_tod, ""sparseMatrix""). # Generate SoupChannel Object for SoupX ; sc = SoupChannel(data_tod, data, calcSoupProfile = FALSE). # Add extra meta data ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2685:839,log,logging,839,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2685,3,['log'],"['logger', 'logging']"
Testability,"### Please make sure these conditions are met. - [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the main branch of scanpy. ### What happened?. Trying to store normalised values in a layer 'normalised', then plot from that layer with sc.pl.highest_expr_genes(). But the function fails with the layer parameter. ### Minimal code sample. ```py; import numpy as np; import pandas as pd; import anndata as ad. # Create a small data matrix; data = np.random.rand(10, 5). # Create observation (cell) and variable (gene) annotations; obs = pd.DataFrame(index=[f'Cell_{i}' for i in range(data.shape[0])]); var = pd.DataFrame(index=[f'Gene_{i}' for i in range(data.shape[1])]). # Create the AnnData object; adata = ad.AnnData(X=data, obs=obs, var=var). # Test layer call function; adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test; sc.pl.highest_expr_genes(adata, layer='normalised'); ```. ### Error output. ```pytb; Output exceeds the size limit. Open the full output data in a text editor; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[32], line 17; 15 # Test layer call function; 16 adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test; ---> 17 sc.pl.highest_expr_genes(adata, layer='normalised'); 19 # Test layer call function; 20 adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test. File c:\Users\U062951\Miniconda3\envs\imc_ome_v1_spatial\lib\site-packages\legacy_api_wrap\__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3318:891,Test,Test,891,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3318,2,"['Test', 'test']","['Test', 'test']"
Testability,"### What kind of feature would you like to request?. Additional function parameters . ### Please describe your wishes. Recently I ran `sc.tl.rank_genes_groups(adata_t, 'leiden_res1', method='wilcoxon', pts=True)` on my datasets, then I plot `sc.pl.rank_genes_groups(adata_t, n_genes=25, sharey=False, ncols=3, )`. . I found ribo genes rank top in some groups. Then I want to filtering results by logfoldchanges, pvals_adj, like Seurat's `FindAllMarkers` did, so I ran `sc.get.rank_genes_groups_df(adata_t, group=None, pval_cutoff=0.01, log2fc_min=1)`, and the ribo genes are filtered successfully. Can function `sc.pl.rank_genes_groups` add filtering params lilke pvals_adj, pct_nt_group, pct_nz_reference which are really useful to filter meaningless genes?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2550:396,log,logfoldchanges,396,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2550,1,['log'],['logfoldchanges']
Testability,"### What kind of feature would you like to request?. Additional function parameters / changed functionality / changed defaults?. ### Please describe your wishes. ### Issue Description; In examining the `MatrixPlot` class within the provided code, it appears that the documentation for some parameters could be enhanced for clarity and completeness. This improvement is crucial for users to understand how to effectively utilize the class and its functionalities. ### Specific Areas for Improvement; While the overall structure of the documentation is good, certain parameters are not described in detail, which might lead to ambiguity in their application. Notably:. - **Parameters like `use_raw`, `log`, `num_categories`, `categories_order`, etc.**: The existing documentation does not provide enough context or explanation about what each of these parameters does, their expected data types, default values, and how they influence the behavior of the plot. - **Complex Parameters**: Parameters that involve more complex concepts or data structures, such as `var_names`, `groupby`, `var_group_positions`, and `values_df`, would benefit significantly from more detailed descriptions and examples. - **Method `style` and Its Parameters**: The `style` method within the `MatrixPlot` class modifies plot visual parameters, but the implications and use cases of changing parameters like `cmap`, `edge_color`, and `edge_lw` are not well-explained. ### Suggested Improvements; To address these issues, I recommend the following enhancements:. 1. **Detailed Parameter Explanations**: Expand on the description of each parameter, especially those that are complex or not self-explanatory. This should include the type of data expected, default values, and a clear explanation of the parameter’s role and impact. 2. **Include Examples and Use Cases**: For complex parameters, providing examples or typical use cases can be extremely helpful. This could be in the form of small code snippets or scenarios illust",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2766:699,log,log,699,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2766,1,['log'],['log']
Testability,"### What kind of feature would you like to request?. Additional function parameters / changed functionality / changed defaults?. ### Please describe your wishes. If these methods are supposed to be similar, and I am normalizing and taking the log of the count matrices in both cases to produce the same log-normalized count matrix, then why am I getting super different results?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2780:243,log,log,243,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2780,2,['log'],"['log', 'log-normalized']"
Testability,"### What kind of feature would you like to request?. Additional function parameters / changed functionality / changed defaults?. ### Please describe your wishes. It would be extremely helpful if the embedding manifold tools had scikit-learn style API. . For example, https://pydiffmap.readthedocs.io/en/master/reference/diffusion_map.html. Having the .fit, .transform, and .fit_transform would make the robust implementations in the backend of ScanPy a lot more accessible for users. Right now, the usage feels a bit restrictive and I'm having difficulty leveraging the power of the methods if it's not part of some similar workflow that is in the tutorials. . I'm trying to use the code in the backend of ScanPy implement this API myself but ScanPy is an extremely confusing package from an outside developer. There are nested functions and tests for even simple steps (many of which handle edge cases making the package robust). More specifically, I'm trying to use the ScanPy implementation of Diffusion Maps as I would use those from pyDiffMap or the spectral clustering from Sklearn. I would like to be able to fit a model with data. Pickle it. Then transform new samples based on the fitted model. This would provide a useful interface for users looking for a non linear alternative to pca.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3054:842,test,tests,842,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3054,1,['test'],['tests']
Testability,"### What kind of feature would you like to request?. Additional function parameters / changed functionality / changed defaults?. ### Please describe your wishes. Meta issue tracking scanpy functions without dask support. Related #921. First we should test things more generically:. - [x] add global `array_type` fixture to use in all tests for features below; - #2595. @ivirshup came up with places where we should prioritize dask support:. - [x] `normalize_total`; - seems to work: scverse/scanpy#2466; - has tests: scverse/scanpy#1663; - [x] `log1p`, `normalize_per_cell`, `filter_cells`/`*_genes`:; - [x] accept Dask arrays: scverse/scanpy#283; - [x] Test that they are kept as Dask arrays throughout: scverse/scanpy#2814; - [x] `sc.pp.pca`: scverse/scanpy#2563 scanpy/scanpy#3263; - [ ] `sc.pp.calculate_qc_metrics` #3307; - `sc.pp.highly_variable_genes`:; - [x] scverse/scanpy#2777; - [x] scverse/scanpy#2807; - [ ] scverse/scanpy#2808; - [ ] experimental “pearson_residuals” flavor; - [x] `sc.tl.rank_genes_groups`: scverse/scanpy#2621; - [ ] Subsample; - [ ] Aggregate: https://flox.readthedocs.io/en/latest/. Later:. - [x] scale; - [ ] nearest-neighbors: https://github.com/dask/dask-ml/issues/982 may need to implement ourselves...; - [ ] umap: implement ourselves?; - [ ] metrics: depednent on squidpy decisions but should be dask-ifiable",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2578:251,test,test,251,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2578,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"### What kind of feature would you like to request?. Additional function parameters / changed functionality / changed defaults?. ### Please describe your wishes. The sc.tl.rank_gene_groups function needs additional arguments to filter some genes before running a test on them, just like Seurat's `FindMarkers` function. . 1. `minc_pct`: Only test genes detected in a minimum fraction of min_pct cells in either of the two comparison groups. It is beneficial for comparing cluster A to cluster B.; 2. `min_cells`: Minimum number of cells expressing the feature in at least one of the two comparison groups.; 3. `min_pct_difference`: Only test genes showing a minimum difference in the detection fraction between the two comparison groups. I will also try to implement these changes.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3159:263,test,test,263,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3159,3,['test'],['test']
Testability,"### What kind of feature would you like to request?. Additional function parameters. ### Please describe your wishes. All the plotting functions in the `pl.rank_genes_groups_<plot-type>` group are able to pass additional keywords to their parent plot type for extra tuning, apart from `pl.rank_genes_groups_violin`. Was this by design, or is it an omission? If the latter, I'm happy to work on a PR to fix it (I found myself today wanting to pass `log=True`, only to get an error).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2954:448,log,log,448,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2954,1,['log'],['log']
Testability,"### What kind of feature would you like to request?. New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?. ### Please describe your wishes. As previously attempted (#823), it would be amazing to have scran normalisation implemented in scanpy.; It's one of the [best practices](https://www.sc-best-practices.org/preprocessing_visualization/normalization.html#shifted-logarithm) and for many simple analysis workflows, it might even be the only step currently requiring to switch to R.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3255:406,log,logarithm,406,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3255,1,['log'],['logarithm']
Testability,### What kind of feature would you like to request?. Other?. ### Please describe your wishes. - maybe use [`cache.mkdir()`](https://docs.pytest.org/en/7.1.x/reference/reference.html#std-fixture-cache) for persistent files (data); - set directory to read only in CI during test run,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2555:272,test,test,272,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2555,1,['test'],['test']
Testability,"### What kind of feature would you like to request?. Other?. ### Please describe your wishes. As a continuation of #1772, we should simplify how this is done. - [ ] Decide on fixture api; - [ ] Decide how generated outputs are handled (`.gitignore`-d, deleted each time that test is run, both?). My proposal for the first TODO is as follows. In order to test the image files. - ./_images/some_plot/expected.png; - ./_images/some_plot_x_context/expected.png. … against their `actual.png` counterparts, we currently do. ```py; # per module setup; ROOT = HERE / '_images'. # individual test; def test_some_plot(image_comparer):; save_and_compare_images = partial(image_comparer, ROOT, tol=15); ...; save_and_compare_images('some_plot'); ... # and maybe; save_and_compare_images('some_plot_x_context'); ```. I propose we arrive here (with `--strict-markers` on):. ```py; # per module setup; @pytest.fixture(scope='module'); def compare_images_root():; """"""Set image root for save_and_compare_images.""""""; return HERE / '_images'. # individual test; @pytest.mark.compare_images_tol(15); def test_some_plot(save_and_compare_images):; ...; save_and_compare_images(); ... # and maybe; save_and_compare_images('x_context'); ```. for that we can make `save_and_compare_images`. 1. use the [`request`](https://docs.pytest.org/en/7.1.x/reference/reference.html#request) fixture to retrieve tol and test name; 2. use the test name for the png directory name used.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2649:275,test,test,275,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2649,6,['test'],['test']
Testability,"### What kind of feature would you like to request?. Other?. ### Please describe your wishes. Currently, `score_genes()`/`score_genes_cell_cycle()` do not have any examples and specifically no documentation of what the input transformation of the data should be, just a link to a (very old) notebook. The notebook says ""Log-transformation of data and scaling should always be performed before scoring"" but I suspect many users (like me) have missed this (especially the scaling step!). It would be great if this was stated in the function documentation with an example.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2909:320,Log,Log-transformation,320,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2909,1,['Log'],['Log-transformation']
Testability,"### What kind of feature would you like to request?. Other?. ### Please describe your wishes. Hi! I [tried](https://github.com/VPetukhov/ngschool2023-bayesian) running scanpy using [JupyterLite](https://jupyterlite.readthedocs.io/en/stable/) for teaching purposes. However, it fails, as only `noarch` packages are currently supported in [xeus](https://jupyterlite.readthedocs.io/en/stable/howto/xeus-python/preinstalled_packages.html). From my error log it seems the only non-`noarch` dependency is [h5py](https://beta.mamba.pm/channels/conda-forge/packages/h5py), which is not really needed for teaching. . Would it be possible to make `h5py` an optional dependency on conda-forge somehow? It would be really helpful for many students to be able to try scanpy without the need to install anything locally.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2667:450,log,log,450,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2667,1,['log'],['log']
Testability,"### 📄 `_make_forest_dict()` in `scanpy/neighbors/__init__.py`. 📈 Performance improved by **`77%`** (**`0.77x` faster**). ⏱️ Runtime went down from **`5670.84μs`** to **`3195.82μs`**; ### Explanation and details. I have used `numpy.array` and `numpy.concatenate` for your sizes and dat object which are much faster than `numpy.fromiter` and assignation respectively, especially when dealing with a large dataset. The sizes of your data_list are computed only once and used where needed. Which results in runtime improvements compared to previous code, where data sizes were computed multiple times in different parts of the code. ### Correctness verification. The new optimized code was tested for correctness. The results are listed below. #### ✅ 8 Passed − 🌀 Generated Regression Tests; <details>; <summary>(click to show generated tests)</summary>. ```python; # imports; import numpy as np; import pytest. # function to test; # (The function definition is omitted as it was provided in the original prompt). # helper class to create mock trees with properties; class MockTree:; def __init__(self, hyperplanes, offsets, children, indices):; self.hyperplanes = np.array(hyperplanes); self.offsets = np.array(offsets); self.children = np.array(children); self.indices = np.array(indices). # unit tests. # Test with a single tree with one-dimensional properties; def test_single_tree_one_dimensional():; tree = MockTree(hyperplanes=[1, 2], offsets=[3], children=[4, 5], indices=[6, 7]); forest = [tree]; result = _make_forest_dict(forest); assert result[""hyperplanes""][""start""][0] == 0; assert result[""offsets""][""start""][0] == 0; assert np.array_equal(result[""hyperplanes""][""data""], tree.hyperplanes); assert np.array_equal(result[""offsets""][""data""], tree.offsets). # Test with multiple trees with two-dimensional properties; def test_multiple_trees_two_dimensional():; tree1 = MockTree(hyperplanes=[[1, 2], [3, 4]], offsets=[5, 6], children=[[7, 8], [9, 10]], indices=[[11, 12], [13, 14]]); tree2 = Moc",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2971:686,test,tested,686,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2971,4,"['Test', 'test']","['Tests', 'test', 'tested', 'tests']"
Testability,#2210 is triggered by not having dask installed. Our current CI setup can't test for this. This should be addressed with a CI run that uses minimal dependencies.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2211:76,test,test,76,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2211,1,['test'],['test']
Testability,"#3B5DFF', '#4A3B53', '#FF2F80', '#61615A', '#BA0900', '#6B7900', '#00C2A0', '#FFAA92', '#FF90C9', '#B903AA', '#D16100', '#DDEFFF', '#000035'])]); ```. Then I tried to plot some markers using the dotplot function, but then I got this error: . ``` python; marker_genes = ['PERM1', 'GAB3', 'G6PD']; combined_bbknn.var_names_make_unique(); sc.pl.dotplot(combined_bbknn, marker_genes, groupby = 'scNym'); ```; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-17-3392793686cd> in <module>; 1 marker_genes = ['PERM1', 'GAB3', 'G6PD']; 2 combined_bbknn.var_names_make_unique(); ----> 3 sc.pl.dotplot(combined_bbknn, marker_genes, groupby = 'scNym'). /opt/conda/lib/python3.8/site-packages/scanpy/plotting/_dotplot.py in dotplot(adata, var_names, groupby, use_raw, log, num_categories, expression_cutoff, mean_only_expressed, cmap, dot_max, dot_min, standard_scale, smallest_dot, title, colorbar_title, size_title, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, swap_axes, dot_color_df, show, save, ax, return_fig, **kwds); 949 return dp; 950 else:; --> 951 dp.make_figure(); 952 savefig_or_show(DotPlot.DEFAULT_SAVE_PREFIX, show=show, save=save); 953 show = settings.autoshow if show is None else show. /opt/conda/lib/python3.8/site-packages/scanpy/plotting/_baseplot_class.py in make_figure(self); 730 if self.legends_width > 0:; 731 legend_ax = self.fig.add_subplot(gs[0, 1]); --> 732 self._plot_legend(legend_ax, return_ax_dict, normalize); 733 ; 734 self.ax_dict = return_ax_dict. /opt/conda/lib/python3.8/site-packages/scanpy/plotting/_dotplot.py in _plot_legend(self, legend_ax, return_ax_dict, normalize); 490 if self.show_size_legend:; 491 size_legend_ax = fig.add_subplot(legend_gs[1]); --> 492 self._plot_size_legend(size_legend_ax); 493 return_ax_dict['size_legend_ax'] = size_legend_ax; 494 . /opt/conda/lib/python3.8/site-packages/scanpy/plotting/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1701:2833,log,log,2833,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1701,1,['log'],['log']
Testability,"' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); =========================================================== 8 failed, 670 passed, 40 skipped, 3 xfailed, 400 warnings, 130 errors in 44.70s ============================================================; ```. </details> . Now we get a ton of failures due to a failure to import test dataset helpers. -----. Pinning `pytest<8` seems to resolve t",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:24213,test,testing,24213,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[mean_center-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_prin_comps-10] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_neighbors-2] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[threshold-0.1] -,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:19618,test,testing,19618,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"'], n_genes=20); ```. ```pytb; KeyError Traceback (most recent call last); Input In [57], in <cell line: 1>(); ----> 1 sc.tl.rank_genes_groups(adata, 'leiden', groups=['0'], reference='1', method='wilcoxon'); 2 sc.pl.rank_genes_groups(adata, groups=['0'], n_genes=20). File /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/scanpy/tools/_rank_genes_groups.py:590, in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 580 adata.uns[key_added] = {}; 581 adata.uns[key_added]['params'] = dict(; 582 groupby=groupby,; 583 reference=reference,; (...); 587 corr_method=corr_method,; 588 ); --> 590 test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts); 592 if check_nonnegative_integers(test_obj.X) and method != 'logreg':; 593 logg.warning(; 594 ""It seems you use rank_genes_groups on the raw count data. ""; 595 ""Please logarithmize your data before calling rank_genes_groups.""; 596 ). File /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/scanpy/tools/_rank_genes_groups.py:93, in _RankGenes.__init__(self, adata, groups, groupby, reference, use_raw, layer, comp_pts); 82 def __init__(; 83 self,; 84 adata,; (...); 90 comp_pts=False,; 91 ):; ---> 93 if 'log1p' in adata.uns_keys() and adata.uns['log1p']['base'] is not None:; 94 self.expm1_func = lambda x: np.expm1(x * np.log(adata.uns['log1p']['base'])); 95 else:. KeyError: 'base'; ```. #### Versions. <details>. ```; -----; anndata 0.9.1; scanpy 1.9.3; -----; PIL 9.2.0; appnope 0.1.3; asttokens NA; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.6.0; decorator 5.1.1; defusedxml 0.7.1; entrypoints 0.4; executing 0.8.3; h5py 3.7.0; hypergeom_ufunc NA; igraph 0.9.11; ipykernel 6.13.0; ipython_genutils 0.2.0; ipywidgets 8.0.2; jedi 0.18.1; joblib 1.2.0; kiwisolver 1.4.4; leidenal",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2497:2180,log,logarithmize,2180,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2497,1,['log'],['logarithmize']
Testability,"'cat_key', use_rep='X'); ```. ```pytb; Traceback (most recent call last):; File ""/Applications/miniconda3/envs/gep-dynamics/lib/python3.9/site-packages/IPython/core/interactiveshell.py"", line 3442, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-8-1616c771d0da>"", line 1, in <module>; sc.tl.dendrogram(adata, 'cat_key', use_rep='X'); File ""/Applications/miniconda3/envs/gep-dynamics/lib/python3.9/site-packages/scanpy/tools/_dendrogram.py"", line 139, in dendrogram; corr_condensed = distance.squareform(1 - corr_matrix); File ""/Applications/miniconda3/envs/gep-dynamics/lib/python3.9/site-packages/scipy/spatial/distance.py"", line 2354, in squareform; is_valid_dm(X, throw=True, name='X'); File ""/Applications/miniconda3/envs/gep-dynamics/lib/python3.9/site-packages/scipy/spatial/distance.py"", line 2429, in is_valid_dm; raise ValueError(('Distance matrix \'%s\' must be '; ValueError: Distance matrix 'X' must be symmetric.```. #### Versions. <details>. sc.logging.print_versions() ; -----; anndata 0.8.0; scanpy 1.9.1; -----; PIL 9.4.0; PyQt5 NA; anyio NA; asttokens NA; attr 22.2.0; babel 2.11.0; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; bottleneck 1.3.6; brotli NA; certifi 2022.12.07; cffi 1.15.1; charset_normalizer 2.1.1; cloudpickle 2.2.1; colorama 0.4.6; comm 0.1.2; cycler 0.10.0; cython_runtime NA; cytoolz 0.12.0; dask 2023.1.1; dateutil 2.8.2; decorator 5.1.1; defusedxml 0.7.1; executing 1.2.0; fastcluster 1.2.6; fastjsonschema NA; gepdynamics NA; h5py 3.8.0; hypergeom_ufunc NA; idna 3.4; igraph 0.10.4; invgauss_ufunc NA; ipykernel 6.21.1; ipython_genutils 0.2.0; ipywidgets 8.0.4; jedi 0.18.2; jinja2 3.1.2; joblib 1.2.0; json5 NA; jsonschema 4.17.3; jupyter_events 0.5.0; jupyter_server 2.2.1; jupyterlab_server 2.19.0; kiwisolver 1.4.4; leidenalg 0.9.1; llvmlite 0.39.1; louvain 0.8.0; markupsafe 2.1.2; matplotlib 3.6.3; mpl_toolkits NA; natsort 8.2.0; nbformat 5.7.3; nbinom_ufunc NA; ncf_ufunc NA; nct_ufunc NA; ncx2_ufunc NA; numba ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2418:2072,log,logging,2072,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2418,1,['log'],['logging']
Testability,"'gene_symbols':. File ~/virtualenvs/scellai2/lib/python3.9/site-packages/scanpy/readwrite.py:112, in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, cache_compression, **kwargs); 110 filename = Path(filename) # allow passing strings; 111 if is_valid_filename(filename):; --> 112 return _read(; 113 filename,; 114 backed=backed,; 115 sheet=sheet,; 116 ext=ext,; 117 delimiter=delimiter,; 118 first_column_names=first_column_names,; 119 backup_url=backup_url,; 120 cache=cache,; 121 cache_compression=cache_compression,; 122 **kwargs,; 123 ); 124 # generate filename and read to dict; 125 filekey = str(filename). File ~/virtualenvs/scellai2/lib/python3.9/site-packages/scanpy/readwrite.py:737, in _read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, cache_compression, suppress_cache_warning, **kwargs); 734 return read_h5ad(path_cache); 736 if not is_present:; --> 737 raise FileNotFoundError(f'Did not find file {filename}.'); 738 logg.debug(f'reading {filename}'); 739 if not cache and not suppress_cache_warning:. FileNotFoundError: Did not find file GSE123366_Combined/matrix.mtx.gz.; ```. ### Versions. <details>. ```; -----; anndata 0.9.1; scanpy 1.9.3; -----; PIL 10.0.0; appnope 0.1.3; asttokens NA; attr 23.1.0; backcall 0.2.0; boltons NA; cffi 1.15.1; cloudpickle 2.2.1; comm 0.1.3; ctxcore 0.2.0; cycler 0.10.0; cython_runtime NA; cytoolz 0.12.1; dask 2023.7.0; dateutil 2.8.2; debugpy 1.6.7; decorator 5.1.1; defusedxml 0.7.1; executing 1.2.0; frozendict 2.3.8; h5py 3.9.0; ikarus NA; importlib_resources NA; ipykernel 6.24.0; ipython_genutils 0.2.0; jedi 0.18.2; jinja2 3.1.2; joblib 1.3.1; kiwisolver 1.4.4; llvmlite 0.40.1; lz4 4.3.2; markupsafe 2.1.3; matplotlib 3.7.2; mpl_toolkits NA; natsort 8.4.0; numba 0.57.1; numexpr 2.8.4; numpy 1.24.4; packaging 23.1; pandas 2.0.3; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; platformdirs 3.8.1; prompt_toolkit 3.0.39; psutil 5.9.5; ptyprocess 0.7.0; ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2570:2842,log,logg,2842,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2570,1,['log'],['logg']
Testability,"'louvain'\n var: 'n_counts', 'means', 'dispersions', 'dispersions_norm', 'highly_variable'\n uns: 'bulk_labels_colors', 'louvain', 'louvain_colors', 'neighbors', 'pca', 'rank_genes_groups'\n obsm: 'X_pca', 'X_umap'\n varm: 'PCs'\n layers: 'raw'\n obsp: 'distances', 'connectivities', vals=index\nAAAGCCTGGCTAAC-1 0.023856\nAAATTCGATGCACA-1 0.027458\nAACACGTGGTCTTT-1 0.016819\nAAGTGCACGTGCTA-1 0.011797\nACACGAACGGAGTG-1 0.017277\n ... \nTGGCACCTCCAACA-8 0.008840\nTGTGAGTGCTTTAC-8 0.022068\nTGTTACTGGCGATT-8 0.012821\nTTCAGTACCGGGAA-8 0.014169\nTTGAGGTGGAGAGC-8 0.010886\nName: percent_mito, Length: 700, dtype: float32); E + where <function morans_i at 0x7f354779d9d0> = <module 'scanpy.metrics' from '/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/scanpy/metrics/__init__.py'>.morans_i; E + where <module 'scanpy.metrics' from '/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/scanpy/metrics/__init__.py'> = sc.metrics. scanpy/tests/test_metrics.py:78: AssertionError; ```. ### Versions. <details>. ```; Package Version; ------------------- --------------------; anndata 0.10.2; array-api-compat 1.4; docutils 0.20.1; exceptiongroup 1.1.3; fonttools 4.43.1; h5py 3.10.0; importlib-resources 6.1.0; iniconfig 2.0.0; joblib 1.3.2; kiwisolver 1.4.5; llvmlite 0.41.0; matplotlib 3.8.0; mypy-extensions 1.0.0; natsort 8.4.0; networkx 3.1; numba 0.58.0; numpy 1.25.2; packaging 23.2; pandas 2.1.1; pathspec 0.11.2; patsy 0.5.3; pbr 5.11.1; Pillow 10.1.0; pip 23.2.1; platformdirs 3.11.0; pluggy 1.3.0; profimp 0.1.0; pynndescent 0.5.10; pyparsing 3.1.1; pytest 7.4.2; pytest-nunit 1.0.4; python-dateutil 2.8.2; pytz 2023.3.post1; scanpy 1.9.6.dev4+g6c7dd46e; scikit-learn 1.3.1; scipy 1.11.3; seaborn 0.12.2; session-info 1.0.0; setuptools 58.1.0; setuptools-scm 8.0.4; six 1.16.0; statsmodels 0.14.0; stdlib-list 0.9.0; tbb 2021.10.0; threadpoolctl 3.2.0; tomli 2.0.1; tqdm 4.66.1; typing_extensions 4.8.0; tzdata 2023.3; umap-learn 0.5.4; wheel 0.41.2; zipp 3.17.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2688:3405,Assert,AssertionError,3405,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2688,1,['Assert'],['AssertionError']
Testability,"(); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 299, in build_update; len(to_build)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 361, in build; self.write(docnames, list(updated_docnames), method); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 535, in write; self._write_serial(sorted(docnames)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 545, in _write_serial; self.write_doc(docname, doctree); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 219, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 184, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 404, in filter; raise SphinxWarning(location + "":"" + message); sphinx.errors.SphinxWarning: /home/docs/checkouts/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1057:2125,log,logging,2125,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1057,1,['log'],['logging']
Testability,"(10, 5). # Create observation (cell) and variable (gene) annotations; obs = pd.DataFrame(index=[f'Cell_{i}' for i in range(data.shape[0])]); var = pd.DataFrame(index=[f'Gene_{i}' for i in range(data.shape[1])]). # Create the AnnData object; adata = ad.AnnData(X=data, obs=obs, var=var). # Test layer call function; adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test; sc.pl.highest_expr_genes(adata, layer='normalised'); ```. ### Error output. ```pytb; Output exceeds the size limit. Open the full output data in a text editor; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[32], line 17; 15 # Test layer call function; 16 adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test; ---> 17 sc.pl.highest_expr_genes(adata, layer='normalised'); 19 # Test layer call function; 20 adata.layers['normalised'] = adata.X # not doing any manipulation of X at the moment to test. File c:\Users\U062951\Miniconda3\envs\imc_ome_v1_spatial\lib\site-packages\legacy_api_wrap\__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positional:]. File c:\Users\U062951\Miniconda3\envs\imc_ome_v1_spatial\lib\site-packages\scanpy\plotting\_qc.py:100, in highest_expr_genes(adata, n_top, show, save, ax, gene_symbols, log, **kwds); 98 height = (n_top * 0.2) + 1.5; 99 fig, ax = plt.subplots(figsize=(5, height)); --> 100 sns.boxplot(data=counts_top_genes, orient=""h"", ax=ax, fliersize=1, **kwds); 101 ax.set_xlabel(""% of total counts""); 102 if log:. File c:\Users\U062951\Miniconda3\envs\imc_ome_v1_spatial\lib\site-packages\seaborn\categorical.py:1634, in boxplot(data, x, y, hue, order, hue",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3318:1626,test,test,1626,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3318,1,['test'],['test']
Testability,(fix): sort pca test args,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3333:16,test,test,16,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3333,1,['test'],['test']
Testability,"(unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); =========================================================== 8 failed, 670 passed, 40 skipped, 3 xfailed, 400 warnings, 130 errors in 44.70s",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:24010,test,testing,24010,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"(url, data, timeout, cafile, capath, cadefault, context); 221 else:; 222 opener = _opener; --> 223 return opener.open(url, data, timeout); 224 ; 225 def install_opener(opener):. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in open(self, fullurl, data, timeout); 530 for processor in self.process_response.get(protocol, []):; 531 meth = getattr(processor, meth_name); --> 532 response = meth(req, response); 533 ; 534 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in http_response(self, request, response); 640 if not (200 <= code < 300):; 641 response = self.parent.error(; --> 642 'http', request, response, code, msg, hdrs); 643 ; 644 return response. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in error(self, proto, *args); 568 if http_err:; 569 args = (dict, 'default', 'http_error_default') + orig_args; --> 570 return self._call_chain(*args); 571 ; 572 # XXX probably also want an abstract factory that knows when it makes. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in _call_chain(self, chain, kind, meth_name, *args); 502 for handler in handlers:; 503 func = getattr(handler, meth_name); --> 504 result = func(*args); 505 if result is not None:; 506 return result. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in http_error_default(self, req, fp, code, msg, hdrs); 648 class HTTPDefaultErrorHandler(BaseHandler):; 649 def http_error_default(self, req, fp, code, msg, hdrs):; --> 650 raise HTTPError(req.full_url, code, msg, hdrs, fp); 651 ; 652 class HTTPRedirectHandler(BaseHandler):. HTTPError: HTTP Error 500: ; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; My local version:; > scanpy==1.4.6 anndata==0.7.1 umap==0.4.2 numpy==1.18.4 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.23.0 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.6.1. Google Colab version:; > scanpy==1.4.6 anndata==0.7.1 umap==0.4.2 numpy==1.18.4 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.10.2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1221:3476,log,logging,3476,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1221,1,['log'],['logging']
Testability,"), hints (3); sc.logging.print_versions(). results_file = './write/pbmc3k.h5ad' # the file that will store the analysis result. sc.settings.set_figure_params(dpi=80). adata = sc.read_10x_mtx( 'filtered_gene_bc_matrices/hg19/', var_names='gene_symbols', cache=True) . adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; print(adata). sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3). pdb.set_trace(); ```. It sadly spits out the following output (see below), it seems like a mismatch of data structures somewhere inside the code. Or I hope I am trying to run an out of date example file. Thanks for all your help in advance.; Cheers. ```pytb; > scanpy==1.4.3 anndata==0.6.22.post1 umap==0.3.9 numpy==1.16.4 scipy==1.3.0 pandas==0.24.2 scikit-learn==0.21.2 statsmodels==0.10.0 ; ... reading from cache file cache/filtered_gene_bc_matrices-hg19-matrix.h5ad; AnnData object with n_obs × n_vars = 2700 × 32738 ; var: 'gene_ids'. Traceback (most recent call last):; File ""test.py"", line 23, in <module>; sc.pp.filter_cells(adata, min_genes=200); File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/preprocessing/_simple.py"", line 126, in filter_cells; adata._inplace_subset_obs(cell_subset); File ""/Users/Person/Library/Python/3.6/lib/python/site-packages/anndata-0.6.22.post1-py3.6.egg/anndata/core/anndata.py"", line 1372, in _inplace_subset_obs; adata_subset = self[index].copy(); File ""/Users/Person/Library/Python/3.6/lib/python/site-packages/anndata-0.6.22.post1-py3.6.egg/anndata/core/anndata.py"", line 1230, in __getitem__; return self._getitem_view(index); File ""/Users/Person/Library/Python/3.6/lib/python/site-packages/anndata-0.6.22.post1-py3.6.egg/anndata/core/anndata.py"", line 1234, in _getitem_view; return AnnData(self, oidx=oidx, vidx=vidx, asview=True); File ""/Users/Person/Library/Python/3.6/lib/python/site-packages/anndata-0.6.22.post1-py3.6.egg/anndata/core/anndata.py"", line 561, in __init__",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/734:1373,test,test,1373,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/734,1,['test'],['test']
Testability,"). ~/anaconda3/lib/python3.7/site-packages/scanpy/preprocessing/_utils.py in sparse_mean_variance_axis(mtx, axis); 40 ); 41 else:; ---> 42 return sparse_mean_var_minor_axis(mtx.data, mtx.indices, *shape, np.float64); 43 ; 44 . SystemError: CPUDispatcher(<function sparse_mean_var_minor_axis at 0x7fcea12550e0>) returned a result with an error set; ```. #### Versions. <details>. -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 6.2.0; absl NA; attr 19.2.0; backcall 0.1.0; beta_ufunc NA; binom_ufunc NA; bottleneck 1.2.1; cffi 1.12.3; cloudpickle 1.2.2; colorama 0.4.1; cycler 0.10.0; cython_runtime NA; cytoolz 0.10.0; dask 2.5.2; dateutil 2.8.0; decorator 4.4.0; deprecate 0.3.0; fsspec 2021.08.1; google NA; h5py 2.10.0; ipykernel 5.1.2; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.15.1; joblib 0.13.2; kiwisolver 1.1.0; llvmlite 0.29.0; matplotlib 3.4.3; more_itertools NA; mpl_toolkits NA; natsort 7.0.1; nbinom_ufunc NA; numba 0.45.1; numexpr 2.7.0; numpy 1.21.2; opt_einsum v3.3.0; packaging 21.0; pandas 1.3.2; parso 0.5.1; pexpect 4.7.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 2.0.10; psutil 5.6.3; ptyprocess 0.6.0; pycparser 2.19; pygments 2.10.0; pyparsing 2.4.2; pyro 1.7.0; pytorch_lightning 1.3.8; pytz 2019.3; rich NA; scipy 1.7.1; scvi 0.13.0; seaborn 0.9.0; setuptools 41.4.0; setuptools_scm NA; simplejson 3.17.2; six 1.12.0; sklearn 0.24.2; skmisc 0.1.4; sphinxcontrib NA; statsmodels 0.10.1; storemagic NA; tables 3.5.2; tblib 1.4.0; tensorboard 2.6.0; threadpoolctl 2.2.0; toolz 0.10.0; torch 1.9.0; torchmetrics 0.5.1; tornado 6.0.3; tqdm 4.56.0; traitlets 4.3.3; typing_extensions NA; wcwidth NA; yaml 5.1.2; zipp NA; zmq 18.1.0; -----; IPython 7.8.0; jupyter_client 5.3.3; jupyter_core 4.5.0; jupyterlab 1.1.4; notebook 6.0.1; -----; Python 3.7.4 (default, Aug 13 2019, 15:17:50) [Clang 4.0.1 (tags/RELEASE_401/final)]; Darwin-20.5.0-x86_64-i386-64bit; 8 logical CPU cores, i386; -----; Session information updated at 2021-09-08 10:28. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1995:3934,log,logical,3934,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1995,1,['log'],['logical']
Testability,"); 428 return _highly_variable_genes_seurat_v3(; 429 adata,; 430 layer=layer,; (...); 436 inplace=inplace,; 437 ); 439 if batch_key is None:; --> 440 df = _highly_variable_genes_single_batch(; 441 adata,; 442 layer=layer,; 443 min_disp=min_disp,; 444 max_disp=max_disp,; 445 min_mean=min_mean,; 446 max_mean=max_mean,; 447 n_top_genes=n_top_genes,; 448 n_bins=n_bins,; 449 flavor=flavor,; 450 ); 451 else:; 452 sanitize_anndata(adata). File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/scanpy/preprocessing/_highly_variable_genes.py:223, in _highly_variable_genes_single_batch(adata, layer, min_disp, max_disp, min_mean, max_mean, n_top_genes, n_bins, flavor); 219 # retrieve those genes that have nan std, these are the ones where; 220 # only a single gene fell in the bin and implicitly set them to have; 221 # a normalized disperion of 1; 222 one_gene_per_bin = disp_std_bin.isnull(); --> 223 gen_indices = np.where(one_gene_per_bin[df['mean_bin'].values])[0].tolist(); 224 if len(gen_indices) > 0:; 225 logg.debug(; 226 f'Gene indices {gen_indices} fell into a single bin: their '; 227 'normalized dispersion was set to 1.\n '; 228 'Decreasing `n_bins` will likely avoid this effect.'; 229 ). File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/pandas/core/series.py:1033, in Series.__getitem__(self, key); 1030 key = np.asarray(key, dtype=bool); 1031 return self._get_values(key); -> 1033 return self._get_with(key). File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/pandas/core/series.py:1073, in Series._get_with(self, key); 1070 return self.iloc[key]; 1072 # handle the dup indexing case GH#4246; -> 1073 return self.loc[key]. File /opt/conda/envs/cell2loc_env/lib/python3.11/site-packages/pandas/core/indexing.py:1103, in _LocationIndexer.__getitem__(self, key); 1100 axis = self.axis or 0; 1102 maybe_callable = com.apply_if_callable(key, self.obj); -> 1103 return self._getitem_axis(maybe_callable, axis=axis). File /opt/conda/envs/cell2loc_env/lib/pyth",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2547:2076,log,logg,2076,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2547,1,['log'],['logg']
Testability,"); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/python.py"", line 183, in pytest_pyfunc_call; result = testfunction(**testargs); File ""/home/vsts/work/1/s/scanpy/tests/notebooks/test_paga_paul15_subsampled.py"", line 39, in test_paga_paul15_subsampled; sc.tl.draw_graph(adata); File ""/home/vsts/work/1/s/scanpy/tools/_draw_graph.py"", line 181, in draw_graph; logg.info(; File ""/home/vsts/work/1/s/scanpy/logging.py"", line 244, in info; return settings._root_logger.info(msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 56, in info; return self.log(INFO, msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 43, in log; super().log(level, msg, extra=extra); Message: "" finished: added\n 'X_draw_graph_fr', graph_drawing coordinates (adata.obsm)""; Arguments: (); --- Logging error ---; Traceback (most recent call last):; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/logging/__init__.py"", line 1084, in emit; stream.write(msg + self.terminator); ValueError: I/O operation on closed file.; Call stack:; File ""/opt/hostedtoolcache/Python/3.8.8/x64/bin/pytest"", line 8, in <module>; sys.exit(console_main()); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185, in console_main; code = main(); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162, in main; ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/hooks.py"", line 286, in __call__; return self._hookexec(self, self.get_hookimpls(), kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 93, in _hookexec; return self._inner_hookexec(hook, methods, kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 84, in <",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1736:2552,log,logging,2552,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1736,1,['log'],['logging']
Testability,"); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 84, in <lambda>; self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/callers.py"", line 187, in _multicall; res = hook_impl.function(*args); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/python.py"", line 183, in pytest_pyfunc_call; result = testfunction(**testargs); File ""/home/vsts/work/1/s/scanpy/tests/notebooks/test_paga_paul15_subsampled.py"", line 39, in test_paga_paul15_subsampled; sc.tl.draw_graph(adata); File ""/home/vsts/work/1/s/scanpy/tools/_draw_graph.py"", line 181, in draw_graph; logg.info(; File ""/home/vsts/work/1/s/scanpy/logging.py"", line 244, in info; return settings._root_logger.info(msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 56, in info; return self.log(INFO, msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 43, in log; super().log(level, msg, extra=extra); Message: "" finished: added\n 'X_draw_graph_fr', graph_drawing coordinates (adata.obsm)""; Arguments: (); --- Logging error ---; Traceback (most recent call last):; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/logging/__init__.py"", line 1084, in emit; stream.write(msg + self.terminator); ValueError: I/O operation on closed file.; Call stack:; File ""/opt/hostedtoolcache/Python/3.8.8/x64/bin/pytest"", line 8, in <module>; sys.exit(console_main()); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185, in console_main; code = main(); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162, in main; ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/hooks.py"", line 286, in __call",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1736:2179,log,log,2179,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1736,2,['log'],"['log', 'logging']"
Testability,* Minor kwarg fixes in pl.correlation_matrix; * Update test correlation image; * Skip correlation matrix plotting test on python 3.6. Minor conflict due to centered color map changes.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1769:55,test,test,55,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1769,2,['test'],['test']
Testability,"* `struct_dict['k']` should return a simple 1D ndarray, not a `StructDict`; * `struct_dict[['a', 'b']]` should return a proper `StructDict` including all additional fields like `_keys`. both problems are visible in this test: https://travis-ci.org/theislab/scanpy/jobs/227216146#L224. but a test should be added for the second point once the first point is fixed. ---. i would have fixed it, but i don’t have the slightest idea what all the “multicolumn” fields are for. also i don’t believe in too many caches and private fields, they get out of sync too easily. recomputing tiny things is fast, e.g. `self._keys` could simply be replaced with `self.dtype.names`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/14:220,test,test,220,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/14,2,['test'],['test']
Testability,* fixed vmin/vmax for categorical data #800 ; * added error message when vmin is not valid to point out how to format it; * updated test to cover categorical data,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/804:132,test,test,132,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/804,1,['test'],['test']
Testability,"***); 253 for chunk, _, _ in adata_comp.chunked_X(chunk_size):; 254 chunk = chunk.toarray() if issparse(chunk) else chunk; --> 255 pca_.partial_fit(chunk); 257 for chunk, start, end in adata_comp.chunked_X(chunk_size):; 258 chunk = chunk.toarray() if issparse(chunk) else chunk. File /anvil/projects/x-mcb130189/Wubin/Software/miniconda3/envs/m3c/lib/python3.9/site-packages/sklearn/base.py:1473, in _fit_context.<locals>.decorator.<locals>.wrapper(estimator, *args, **kwargs); 1466 estimator._validate_params(); 1468 with config_context(; 1469 skip_parameter_validation=(; 1470 prefer_skip_nested_validation or global_skip_validation; 1471 ); 1472 ):; -> 1473 return fit_method(estimator, *args, **kwargs). File /anvil/projects/x-mcb130189/Wubin/Software/miniconda3/envs/m3c/lib/python3.9/site-packages/sklearn/decomposition/_incremental_pca.py:304, in IncrementalPCA.partial_fit(self, X, y, check_input); 298 raise ValueError(; 299 ""n_components=%r invalid for n_features=%d, need ""; 300 ""more rows than columns for IncrementalPCA ""; 301 ""processing"" % (self.n_components, n_features); 302 ); 303 elif not self.n_components <= n_samples:; --> 304 raise ValueError(; 305 ""n_components=%r must be less or equal to ""; 306 ""the batch number of samples ""; 307 ""%d."" % (self.n_components, n_samples); 308 ); 309 else:; 310 self.n_components_ = self.n_components. ValueError: n_components=100 must be less or equal to the batch number of samples 77; ```. To fix this bug, I added a `try` and `except` to line 255 of _pca.py. <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3227:2701,Test,Tests,2701,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3227,1,['Test'],['Tests']
Testability,**Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```. ```pytb; [Paste the error output produced by the above code here]; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2104:419,log,logging,419,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2104,1,['log'],['logging']
Testability,"**The following is what this function does (we can see it with ?sc.pp.recipe_zheng17):**; ```; sc.pp.filter_genes(adata, min_counts=1) # only consider genes with more than 1 count; sc.pp.normalize_per_cell( # normalize with total UMI count per cell; adata, key_n_counts='n_counts_all'); filter_result = sc.pp.filter_genes_dispersion( # select highly-variable genes; adata.X, flavor='cell_ranger', n_top_genes=n_top_genes, log=False); adata = adata[:, filter_result.gene_subset] # subset the genes; sc.pp.normalize_per_cell(adata) # renormalize after filtering; if log: sc.pp.log1p(adata) # log transform: adata.X = log(adata.X + 1); sc.pp.scale(adata) # scale to unit variance and shift to zero mean; ```. **But in the original paper Zheng et al. (2017 (https://www.nature.com/articles/ncomms14049#Sec11), it said:**; Only genes with at least one UMI count detected in at least one cell are used. UMI normalization was performed by first dividing UMI counts by the total UMI counts in each cell, **followed by multiplication with the median of the total UMI counts across cells**. Then, we took the natural log of the UMI counts. Finally, each gene was normalized such that the mean signal for each gene is 0, and standard deviation is 1. **So, comparing these two pipelines, the pipeline implemented in scanpy is not the same with the method described in the original paper, in the paper, there is a step**: _multiplication with the median of the total UMI counts across cells_, but this step was skipped inside the function sc.pp.recipe_zheng17. **Is there anyone who can tell me why they are different?** @flying-sheep",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/905:422,log,log,422,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/905,5,['log'],['log']
Testability,"**Update** Note sure if it is a problem with our script. However, if colors are not found, can it use default color-map and let us plot after raising a warning?. Log is following. ~Working on a PR.~ This issue is for reference. Could not upload source file since it depends on data file which are huge. ```; (Py36) pragati@wasabi-simons ~/Work/scanpy_exp $ python planaria.py ; scanpy==1.3.2+4.g7c9fb1a anndata==0.6.11 numpy==1.14.6 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.20.0 statsmodels==0.9.0 ; ... storing 'clusters' as categorical; computing tSNE; using data matrix X directly; using the 'MulticoreTSNE' package by Ulyanov (2017); finished (0:02:39.15); Traceback (most recent call last):; File ""/home/pragati/Py36/lib/python3.6/site-packages/matplotlib/colors.py"", line 158, in to_rgba; rgba = _colors_full_map.cache[c, alpha]; KeyError: ('grey80', None). During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/pragati/Py36/lib/python3.6/site-packages/matplotlib/axes/_axes.py"", line 4210, in scatter; colors = mcolors.to_rgba_array(c); File ""/home/pragati/Py36/lib/python3.6/site-packages/matplotlib/colors.py"", line 259, in to_rgba_array; result[i] = to_rgba(cc, alpha); File ""/home/pragati/Py36/lib/python3.6/site-packages/matplotlib/colors.py"", line 160, in to_rgba; rgba = _to_rgba_no_colorcycle(c, alpha); File ""/home/pragati/Py36/lib/python3.6/site-packages/matplotlib/colors.py"", line 204, in _to_rgba_no_colorcycle; raise ValueError(""Invalid RGBA argument: {!r}"".format(orig_c)); ValueError: Invalid RGBA argument: 'grey80'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""planaria.py"", line 47, in <module>; sc.pl.tsne(adata, color='clusters', legend_loc='on data', legend_fontsize=5, save='_full'); File ""/home/pragati/Py36/lib/python3.6/site-packages/scanpy/plotting/tools/scatterplots.py"", line 47, in tsne; return plot_scatter(adata, basis='tsne', **k",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/286:162,Log,Log,162,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/286,1,['Log'],['Log']
Testability,"*: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. As the title says. A specific set of combinations of keywords to rank gene groups and plotting throws an error unexpectedly. ### Minimal code sample (that we can copy&paste without having any data). ```python; adata = sc.datasets.paul15(); sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', key_added='GG', use_raw=False, reference='1Ery'); rax = sc.pl.rank_genes_groups_dotplot(adata, key='GG', # , rankby_abs= None,; n_genes=3, cmap='PiYG_r', swap_axes=True,; show=False, values_to_plot='logfoldchanges',; vmin=None, vmax=None); ```. ```pytb; WARNING: In Scanpy 0.*, this returned logarithmized data. Now it returns non-logarithmized data.; ... storing 'paul15_clusters' as categorical; Trying to set attribute `.uns` of view, copying.; WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'; WARNING: It seems you use rank_genes_groups on the raw count data. Please logarithmize your data before calling rank_genes_groups.; ERROR: the given dot_color_df data frame has a different shape thanthe data frame used for the dot size. Both data frames needto have the same index and columns; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-110-708ec3ea001f> in <module>; 1 adata = sc.datasets.paul15(); 2 sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', key_added='GG', use_raw=False, reference='1Ery'); ----> 3 rax = sc.pl.rank_genes_groups_dotplot(adata, key='GG', # , rankby_abs= None,; 4 n_genes=3, cmap='PiYG_r', swap_axes=True,; 5 show=False, values_to_plot='logfoldchanges',. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_dotplot(adata, groups, n_genes, groupby, values_to_plot, var_names, gene_symbols, min_logfol",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2078:1214,test,test,1214,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2078,1,['test'],['test']
Testability,", -13.793954, -5.828585 ),; (-27.61369 , -31.664293, -16.766815, -20.83902 , -14.882286, -5.9672713)],; dtype=[('0', '<f4'), ('1', '<f4'), ('2', '<f4'), ('3', '<f4'), ('4', '<f4'), ('5', '<f4')]), 'pvals': rec.array([(5.76757182e-213, 1.70978363e-252, 6.59163276e-208, 4.99861075e-188, 7.91707478e-61, 2.17405930e-09),; (5.30272154e-171, 1.27177903e-235, 2.38824940e-153, 2.68829460e-181, 2.67790267e-58, 2.17405930e-09),; (3.40236053e-161, 7.94325574e-233, 8.36374334e-147, 1.96443112e-166, 9.50323353e-57, 2.17933501e-09),; ...,; (5.70224910e-158, 2.16463296e-132, 7.54533758e-047, 1.13797729e-068, 8.33159464e-43, 9.46726154e-09),; (2.41092484e-164, 7.73129397e-167, 2.11823139e-048, 5.05610163e-085, 2.77143736e-43, 5.58993361e-09),; (7.62160014e-168, 4.82099981e-220, 4.26779582e-063, 1.91722780e-096, 4.29568606e-50, 2.41253723e-09)],; dtype=[('0', '<f8'), ('1', '<f8'), ('2', '<f8'), ('3', '<f8'), ('4', '<f8'), ('5', '<f8')]), 'pvals_adj': rec.array([(7.14083067e-209, 2.11688312e-248, 8.16110052e-204, 6.18877997e-184, 9.80213028e-57, 2.99072523e-06),; (3.28264977e-167, 7.87294806e-232, 1.47844579e-149, 1.66418877e-177, 1.65775565e-54, 2.99072523e-06),; (8.42492515e-158, 3.27818164e-229, 3.45171688e-143, 8.10720722e-163, 3.92198448e-53, 2.99072523e-06),; ...,; (1.17665910e-154, 1.11668003e-129, 5.18993470e-044, 8.28782167e-066, 8.59612277e-40, 6.51189806e-06),; (7.46241510e-161, 5.63065592e-164, 1.63911392e-045, 4.17330628e-082, 3.43131660e-40, 4.94349772e-06),; (3.14543438e-164, 9.94813310e-217, 4.80359819e-060, 1.82593826e-093, 8.86414818e-47, 2.99072523e-06)],; dtype=[('0', '<f8'), ('1', '<f8'), ('2', '<f8'), ('3', '<f8'), ('4', '<f8'), ('5', '<f8')]), 'logfoldchanges': rec.array([(nan, nan, nan, nan, nan, nan), (nan, nan, nan, nan, nan, nan),; (nan, nan, nan, nan, nan, nan), ...,; (nan, nan, nan, nan, nan, nan), (nan, nan, nan, nan, nan, nan),; (nan, nan, nan, nan, nan, nan)],; dtype=[('0', '<f4'), ('1', '<f4'), ('2', '<f4'), ('3', '<f4'), ('4', '<f4'), ('5', '<f4')])}",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2338:4009,log,logfoldchanges,4009,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2338,1,['log'],['logfoldchanges']
Testability,", ax); 745 plotter = _DendrogramPlotter(data, linkage=linkage, axis=axis,; 746 metric=metric, method=method,; --> 747 label=label, rotate=rotate); 748 if ax is None:; 749 ax = plt.gca(). /usr/local/lib/python3.6/site-packages/seaborn/matrix.py in __init__(self, data, linkage, metric, method, axis, label, rotate); 562 ; 563 if linkage is None:; --> 564 self.linkage = self.calculated_linkage; 565 else:; 566 self.linkage = linkage. /usr/local/lib/python3.6/site-packages/seaborn/matrix.py in calculated_linkage(self); 624 def calculated_linkage(self):; 625 try:; --> 626 return self._calculate_linkage_fastcluster(); 627 except ImportError:; 628 return self._calculate_linkage_scipy(). /usr/local/lib/python3.6/site-packages/seaborn/matrix.py in _calculate_linkage_fastcluster(self); 618 else:; 619 linkage = fastcluster.linkage(self.array, method=self.method,; --> 620 metric=self.metric); 621 return linkage; 622 . /usr/local/lib/python3.6/site-packages/fastcluster.py in linkage(X, method, metric, preserve_input); 241 assert X.ndim==2; 242 N = len(X); --> 243 X = pdist(X, metric); 244 X = array(X, dtype=double, copy=False, order='C', subok=True); 245 Z = empty((N-1,4)). /usr/local/lib/python3.6/site-packages/scipy/spatial/distance.py in pdist(X, metric, *args, **kwargs); 1932 if metric_name is not None:; 1933 X, typ, kwargs = _validate_pdist_input(X, m, n,; -> 1934 metric_name, **kwargs); 1935 ; 1936 # get pdist wrapper. /usr/local/lib/python3.6/site-packages/scipy/spatial/distance.py in _validate_pdist_input(X, m, n, metric_name, **kwargs); 287 typ = types[types.index(X.dtype)] if X.dtype in types else types[0]; 288 # validate data; --> 289 X = _convert_to_type(X, out_type=typ); 290 ; 291 # validate kwargs. /usr/local/lib/python3.6/site-packages/scipy/spatial/distance.py in _convert_to_type(X, out_type); 182 ; 183 def _convert_to_type(X, out_type):; --> 184 return np.ascontiguousarray(X, dtype=out_type); 185 ; 186 . /usr/local/lib/python3.6/site-packages/numpy/core/numeric.py ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/356:3199,assert,assert,3199,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/356,1,['assert'],['assert']
Testability,", delimiter, first_column_names, backup_url, cache, cache_compression, suppress_cache_warning, **kwargs); 698 if ext in {'h5', 'h5ad'}:; 699 if sheet is None:; --> 700 return read_h5ad(filename, backed=backed); 701 else:; 702 logg.debug(f'reading sheet {sheet} from file {filename}'). ~/.miniconda3/envs/cellrank2/lib/python3.8/site-packages/anndata/_io/h5ad.py in read_h5ad(filename, backed, as_sparse, as_sparse_fmt, chunk_size); 427 _clean_uns(d) # backwards compat; 428 ; --> 429 return AnnData(**d); 430 ; 431 . TypeError: __init__() got an unexpected keyword argument 'batch.names'. ```. #### Versions. <details>. -----; anndata 0.7.4; scanpy 1.6.0; sinfo 0.3.1; -----; PIL 8.0.1; absl NA; anndata 0.7.4; autoreload NA; backcall 0.2.0; cellrank 1.0.0; cffi 1.14.3; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; docrep 0.3.1; future_fstrings NA; get_version 2.1; h5py 2.10.0; igraph 0.8.3; ipykernel 5.3.4; ipython_genutils 0.2.0; jax 0.2.5; jaxlib 0.1.56; jedi 0.17.2; joblib 0.17.0; kiwisolver 1.3.1; lapack NA; legacy_api_wrap 1.2; leidenalg 0.8.1; llvmlite 0.34.0; louvain 0.7.0; matplotlib 3.3.2; mpl_toolkits NA; natsort 7.0.1; numba 0.51.2; numexpr 2.7.1; numpy 1.19.4; opt_einsum v3.3.0; packaging 20.4; pandas 1.1.4; parso 0.7.1; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; progressbar 3.53.1; prompt_toolkit 3.0.8; psutil 5.7.3; ptyprocess 0.6.0; pygam 0.8.0; pygments 2.7.2; pyparsing 2.4.7; python_utils NA; pytz 2020.4; scanpy 1.6.0; scipy 1.5.3; scvelo 0.2.2; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; sphinxcontrib NA; storemagic NA; tables 3.6.1; texttable 1.6.3; threadpoolctl 2.1.0; tornado 6.1; traitlets 5.0.5; wcwidth 0.2.5; wrapt 1.12.1; zmq 19.0.2; -----; IPython 7.19.0; jupyter_client 6.1.7; jupyter_core 4.6.3; notebook 6.1.4; -----; Python 3.8.5 (default, Sep 4 2020, 07:30:14) [GCC 7.3.0]; Linux-5.8.0-3-amd64-x86_64-with-glibc2.10; 8 logical CPU cores; -----; Session information updated at 2020-11-03 13:36. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1480:3829,log,logical,3829,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1480,1,['log'],['logical']
Testability,", n_jobs, force_all_finite, **kwds); 1738 raise ValueError(""Unknown metric %s. ""; 1739 ""Valid metrics are %s, or 'precomputed', or a ""; -> 1740 ""callable"" % (metric, _VALID_METRICS)); 1741 ; 1742 if metric == ""precomputed"":. ValueError: Unknown metric angular. Valid metrics are ['euclidean', 'l2', 'l1', 'manhattan', 'cityblock', 'braycurtis', 'canberra', 'chebyshev', 'correlation', 'cosine', 'dice', 'hamming', 'jaccard', 'kulsinski', 'mahalanobis', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule', 'wminkowski', 'nan_euclidean', 'haversine'], or 'precomputed', or a callable; ```. #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.7.2; sinfo 0.3.1; -----; PIL 8.0.1; anndata 0.7.5; annoy NA; bbknn NA; cached_property 1.5.1; cairo 1.20.0; cffi 1.14.4; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; get_version 2.1; h5py 3.1.0; igraph 0.8.3; ipykernel 5.3.4; ipython_genutils 0.2.0; joblib 0.17.0; kiwisolver 1.3.1; legacy_api_wrap 0.0.0; leidenalg 0.8.3; llvmlite 0.34.0; louvain 0.6.1; matplotlib 3.3.3; mpl_toolkits NA; natsort 7.1.0; numba 0.51.2; numexpr 2.7.1; numpy 1.19.4; packaging 20.4; pandas 1.1.4; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 1.0.15; psutil 5.8.0; ptyprocess 0.6.0; pycparser 2.20; pygments 2.7.2; pyparsing 2.4.7; pytz 2020.4; scanpy 1.7.2; scipy 1.5.3; seaborn 0.11.0; setuptools_scm NA; simplegeneric NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; sphinxcontrib NA; statsmodels 0.12.1; storemagic NA; tables 3.6.1; texttable 1.6.3; tornado 6.1; traitlets 5.0.5; typing_extensions NA; umap 0.4.6; wcwidth 0.2.5; zipp NA; zmq 20.0.0; -----; IPython 5.8.0; jupyter_client 6.1.7; jupyter_core 4.7.0; -----; Python 3.7.8 | packaged by conda-forge | (default, Nov 27 2020, 19:24:58) [GCC 9.3.0]; Linux-4.9.0-16-amd64-x86_64-with-debian-9.13; 8 logical CPU cores; -----; Session information updated at 2021-09-01 08:49; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1989:5007,log,logical,5007,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1989,1,['log'],['logical']
Testability,", save, ax, return_fig, **kwargs); 447 return fig; 448 axs = axs if grid else ax; --> 449 _utils.savefig_or_show(basis, show=show, save=save); 450 if show is False:; 451 return axs. ~/opt/anaconda3/lib/python3.8/site-packages/scanpy/plotting/_utils.py in savefig_or_show(writekey, show, dpi, ext, save); 310 show = settings.autoshow if show is None else show; 311 if save:; --> 312 savefig(writekey, dpi=dpi, ext=ext); 313 if show:; 314 pl.show(). ~/opt/anaconda3/lib/python3.8/site-packages/scanpy/plotting/_utils.py in savefig(writekey, dpi, ext); 280 else:; 281 dpi = rcParams['savefig.dpi']; --> 282 settings.figdir.mkdir(parents=True, exist_ok=True); 283 if ext is None:; 284 ext = settings.file_format_figs. AttributeError: 'str' object has no attribute 'mkdir'; ```. #### Versions. scanpy==1.8.1 anndata==0.7.6 umap==0.5.1 numpy==1.18.5 scipy==1.6.2 pandas==1.1.5 scikit-learn==0.24.2 statsmodels==0.12.2 python-igraph==0.9.4 louvain==0.7.0 pynndescent==0.5.2. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 8.3.1; anyio NA; appdirs 1.4.4; appnope 0.1.2; attr 21.2.0; babel 2.9.1; backcall 0.2.0; bioservices 1.7.12; bottleneck 1.3.2; brotli NA; bs4 4.9.3; certifi 2021.05.30; cffi 1.14.6; chardet 4.0.0; cloudpickle 1.6.0; colorama 0.4.4; colorlog NA; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2021.07.2; dateutil 2.8",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1981:3154,log,logging,3154,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1981,1,['log'],['logging']
Testability,", use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 580 adata.uns[key_added] = {}; 581 adata.uns[key_added]['params'] = dict(; 582 groupby=groupby,; 583 reference=reference,; (...); 587 corr_method=corr_method,; 588 ); --> 590 test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts); 592 if check_nonnegative_integers(test_obj.X) and method != 'logreg':; 593 logg.warning(; 594 ""It seems you use rank_genes_groups on the raw count data. ""; 595 ""Please logarithmize your data before calling rank_genes_groups.""; 596 ). File /usr/local/lib/python3.8/dist-packages/scanpy/tools/_rank_genes_groups.py:93, in _RankGenes.__init__(self, adata, groups, groupby, reference, use_raw, layer, comp_pts); 82 def __init__(; 83 self,; 84 adata,; (...); 90 comp_pts=False,; 91 ):; ---> 93 if 'log1p' in adata.uns_keys() and adata.uns['log1p']['base'] is not None:; 94 self.expm1_func = lambda x: np.expm1(x * np.log(adata.uns['log1p']['base'])); 95 else:. KeyError: 'base'; ```. #### Versions. <details>. -----; anndata 0.8.0rc1; scanpy 1.8.2; sinfo 0.3.4; -----; PIL 9.0.1; anndata2ri 1.0.6; annoy NA; asttokens NA; backcall 0.2.0; backports NA; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; dunamai 1.11.0; entrypoints 0.4; executing 0.8.3; get_version 3.5.4; h5py 3.6.0; hypergeom_ufunc NA; igraph 0.9.9; ipykernel 6.9.1; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.18.1; jinja2 3.0.3; joblib 1.1.0; jupyter_server 1.13.5; kiwisolver 1.4.0; leidenalg 0.8.9; llvmlite 0.38.0; markupsafe 2.1.1; matplotlib 3.5.1; matplotlib_inline NA; mpl_toolkits NA; natsort 8.1.0; nbinom_ufunc NA; numba 0.55.1; numexpr 2.8.1; numpy 1.21.0; packaging 21.3; pandas 1.4.1; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.28; ptyprocess 0.7.0; pure_eval 0.2.2; pycparser 2.21; pydev_ipython NA;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2181:4824,log,log,4824,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2181,1,['log'],['log']
Testability,",'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax2, show=False, title=""< 1000 counts""); plt.show(); ```. Essentially the same thing but colored by the percentage of mitochondrial counts.; Only one legend seems to be drawn and this one is not looking as expected. Plus, I cannot remove the legend from the first plot. ; This is how it looks:; ![image](https://user-images.githubusercontent.com/50995210/83322257-6f838980-a256-11ea-83a5-bd0b4dfa4180.png). Why doesn't it behave in the same way like in the example above?; Is there a way I can share the same legend with a scale from 0 to 1 (0%-100%) for both plots in this case?; As you can see, the line removing the legend from `sc_ax1` is commented out because `get_legend()` returns `None` in this case, which would lead to the error below:. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-154-702da93b63cb> in <module>; 2 sc_fig, (sc_ax1, sc_ax2) = plt.subplots(1,2, figsize=(12,5)); 3 sc.pl.scatter(adata_raw, 'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax1, show=False, title=""all counts""); ----> 4 sc_ax1.get_legend().remove(); 5 sc.pl.scatter(adata_raw[adata_raw.obs['total_counts']<1000],'total_counts','n_genes_by_counts', color='pct_counts_mt', size = 10, ax=sc_ax2, show=False, title=""< 1000 counts""); 6 plt.show(). AttributeError: 'NoneType' object has no attribute 'remove'; ```; Shouldn't the legends be attached to the individual axes objects?; I cannot access them and I wonder where they are stored in this case. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.2.dev5+ge5d246aa anndata==0.7.1 umap==0.4.3 numpy==1.18.4 scipy==1.4.1 pandas==0.25.3 scikit-learn==0.23.0 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.7.0; >matplotlib==3.1.2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1258:3424,log,logging,3424,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1258,1,['log'],['logging']
Testability,",; obs=pd.DataFrame(; {""celltype"": list(chain(repeat(""a"", 10), repeat(""b"", 10)))},; index=[f""cell{i}"" for i in range(a.shape[0])]; ),; var=pd.DataFrame(index=[f""gene{i}"" for i in range(a.shape[1])]),; ). # Running differential expression with t-test:. sc.tl.rank_genes_groups(adata, groupby=""celltype""); print(adata.uns[""rank_genes_groups""][""pvals""][""a""]); # array([1., 1., 1.]) # This seems wrong. sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""t-test""); print(adata.uns[""rank_genes_groups""][""pvals""][""a""]); # array([1., 1., 1.]) # This also seems wrong. # Checking to make sure I'm not forgetting something obvious; print(stats.ttest_ind([0,0,0,0,0], [5,5,5,5,5])); # Ttest_indResult(statistic=-inf, pvalue=0.0) # This seems right. # Wilcoxon seems fine:. sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""wilcoxon""); print(adata.uns[""rank_genes_groups""][""pvals""][""a""]); # array([1.57052284e-04, 1.00000000e+00, 1.00000000e+00]) # This seems right; ```. `""logreg""` on the other hand, throws an error:. ```python; sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""logreg""); <ipython-input-7-29e46f287a31> in <module>; ----> 1 sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""logreg""). ~/github/scanpy/scanpy/tools/_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, log_transformed, **kwds); 397 adata.uns[key_added]['scores'] = np.rec.fromarrays(; 398 [n for n in rankings_gene_scores],; --> 399 dtype=[(rn, 'float32') for rn in groups_order_save]); 400 adata.uns[key_added]['names'] = np.rec.fromarrays(; 401 [n for n in rankings_gene_names],. /usr/local/lib/python3.7/site-packages/numpy/core/records.py in fromarrays(arrayList, dtype, shape, formats, names, titles, aligned, byteorder); 615 # Determine shape from data-type.; 616 if len(descr) != len(arrayList):; --> 617 raise ValueError(""mismatch between the number of fields ""; 618 ""and the number of arrays""",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/620:1371,log,logreg,1371,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/620,1,['log'],['logreg']
Testability,"- Even our `test-min` extra has `pytest-nunit`, so we don’t need a dummy version; - `--internet-tests` can just be replaced by the mark itself.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2575:12,test,test-min,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2575,2,['test'],"['test-min', 'tests']"
Testability,"- I have checked that this issue has not already been reported.; - I have confirmed this bug exists on the latest version of scanpy. ---. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy.api as sc; ```. ```pytb; File ""./scanpy_normalization.py"", line 4, in <module>; import scanpy.api as sc; File ""/usr/local/lib/python3.8/site-packages/scanpy/api/__init__.py"", line 27, in <module>; from . import pl; File ""/usr/local/lib/python3.8/site-packages/scanpy/api/pl.py"", line 1, in <module>; from ..plotting._anndata import scatter, violin, ranking, clustermap, stacked_violin, heatmap, dotplot, matrixplot, tracksplot; ImportError: cannot import name 'stacked_violin' from 'scanpy.plotting._anndata' (/usr/local/lib/python3.8/site-packages/scanpy/plotting/_anndata.py); ```. This is with the latest version of scanpy. I looked at the code and scanpy/apt/pl.py still has **from ..plotting._anndata import scatter, violin, ranking, clustermap, stacked_violin, heatmap, dotplot, matrixplot, tracksplot**, even as the plotting library has been refactored and the dotplot, matrixplot and stacked_violin are now in separate files. I tested this a few days ago and it was working fine then, the update to anndata probably happened in the last couple of days",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1397:1173,test,tested,1173,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1397,1,['test'],['tested']
Testability,"- I have checked that this issue has not already been reported.; - I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; import bbknn; sc.logging.print_header(); adata = sc.read('pancreas.h5ad', backup_url='https://www.dropbox.com/s/qj1jlm9w10wmt0u/pancreas.h5ad?dl=1') ; sc.external.pp.bbknn(adata, batch_key='batch') #error2; ```. ```pytb. tuple' object has no attribute 'tocsr'; ```. #### Versions; <bbknn : 1.5.0>; <scanpy:1.7.0>; umap: 0.1.1; umap-learn: 0.5.1. [Paste the output of scanpy. logging.print_versions() leaving a blank line after the details tag]. </scanpy==1.4.6 anndata==0.7.4 umap==0.5.1 numpy==1.20.3 scipy==1.6.3 pandas==1.2.4 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.8.2>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1872:529,log,logging,529,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1872,2,['log'],['logging']
Testability,- ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[numpy_ndarray-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csr-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csr-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-None] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-10] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_compare_to_upstream[seurat-hvg] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_sparse - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[numpy_ndarray] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csr] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csc] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[dask_array_dense] - ValueError: assignment destination i,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:1548,test,tests,1548,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability,"- [ X] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; annot = sc.queries.biomart_annotations(; ""hsapiens"",; [""external_gene_name"", ""start_position"", ""end_position"", ""chromosome_name"",""gene_biotype""],).set_index(""external_gene_name""); ```. ```pytb; 500 Server Error: Internal Server Error for url: http://www.ensembl.org:80/biomart/martservice?type=registry; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]; scanpy==1.7.0 anndata==0.7.4 umap==0.4.6 numpy==1.19.2 scipy==1.4.1 pandas==1.1.4 scikit-learn==0.23.2 statsmodels==0.12.1 python-igraph==0.8.3 louvain==0.7.0. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1660:863,log,logging,863,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1660,1,['log'],['logging']
Testability,- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```. ```pytb; [Paste the error output produced by the above code here]; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1481:648,log,logging,648,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1481,2,['log'],['logging']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; ## save command; adata.write(folder + ""before_regression.h5ad""); ```. ```pytb; [Paste the error output produced by the above code here]; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1795:695,log,logging,695,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1795,1,['log'],['logging']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; #Perform a clustering for scran normalization in clusters; adata_pp = adata.copy(); sc.pp.normalize_per_cell(adata_pp, counts_per_cell_after=1e6); sc.pp.log1p(adata_pp); sc.pp.pca(adata_pp, n_comps=15); sc.pp.neighbors(adata_pp); sc.tl.louvain(adata_pp, key_added='groups', resolution=0.5); ```. ```pytb; ModuleNotFoundError Traceback (most recent call last); <ipython-input-11-785c54721f17> in <module>; 8 sc.pp.pca(adata_pp, n_comps=15); 9 sc.pp.neighbors(adata_pp); ---> 10 sc.tl.louvain(adata_pp, key_added='groups', resolution=0.5). ~\anaconda3\lib\site-packages\scanpy\tools\_louvain.py in louvain(adata, resolution, random_state, restrict_to, key_added, adjacency, flavor, directed, use_weights, partition_type, partition_kwargs, neighbors_key, obsp, copy); 135 weights = None; 136 if flavor == 'vtraag':; --> 137 import louvain; 138 if partition_type is None:; 139 partition_type = louvain.RBConfigurationVertexPartition. ModuleNotFoundError: No module named 'louvain'; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1566:1536,log,logging,1536,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1566,1,['log'],['logging']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import harmonypy as hm; h_data = hm.run_harmony(a_data.obsm['X_pca'], a_data.obs, ['donor']); har= h_data.Z_corr; har = har.T; a_data.obsm['X_harmony'] = har.copy(); sc.pp.neighbors(a_data, n_neighbors=30, n_pcs=50,use_rep='X_harmony'); res = 1; sc.tl.leiden(a_data,resolution=res,key_added = 'leiden_res_harmony%.2f'%res); a_data.write(test.h5ad); a_data = sc.read(test.h5ad); sc.tl.rank_genes_groups(a_data, 'condition', method='wilcoxon'); ```. ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-6-8d70f4e1a0fa> in <module>; ----> 1 sc.tl.rank_genes_groups(a_data, 'condition', method='wilcoxon'). /opt/conda/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 588 ); 589 ; --> 590 test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts); 591 ; 592 if check_nonnegative_integers(test_obj.X) and method != 'logreg':. /opt/conda/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in __init__(self, adata, groups, groupby, reference, use_raw, layer, comp_pts); 91 ):; 92 ; ---> 93 if 'log1p' in adata.uns_keys() and adata.uns['log1p']['base'] is not None:; 94 self.expm1_func = lambda x: np.expm1(x * np.log(adata.uns['log1p']['base'])); 95 else:. KeyError: 'base'; ```. #### Versions. <details>. [P",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2440:836,test,test,836,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2440,2,['test'],['test']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.tl.rank_genes_groups(adata,'leiden', n_genes=10000,use_raw=False); sc.tl.filter_rank_genes_groups(adata, min_fold_change=2,min_in_group_fraction=0.3,use_raw=False,key='rank_genes_groups'); sc.pl.rank_genes_groups_heatmap(adata, swap_axes=True, use_raw=False, cmap='bwr', dendrogram=True,n_genes=1000,; standard_scale='var',key='rank_genes_groups_filtered'). df1=pd.DataFrame( {group + '_' + key[:1]: adata.uns['rank_genes_groups'][key][group] for group in ['0','1'] for key in ['names','logfoldchanges']}); df2=pd.DataFrame( {group + '_' + key[:1]: adata.uns['rank_genes_groups_filtered'][key][group] for group in ['0','1'] for key in ['names','logfoldchanges']}); ```. <img width=""721"" alt=""image"" src=""https://user-images.githubusercontent.com/34993687/95295823-56e14b00-08aa-11eb-9b8d-6bbbd4221d10.png"">. Hi,. I have run sc.tl.filter_rank_genes_groups() succssfully, but I find some gene names in adata.uns['rank_genes_groups_filtered']['names'] is nan, but all gene names in adata.uns['rank_genes_groups']['names'] are correct. So, how could this happern?. Thanks,; Jphe. #### Versions. <details>. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1446:989,log,logfoldchanges,989,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1446,2,['log'],['logfoldchanges']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data); ```; the simple simulation dataset(filter_gene_dis.h5,which is the adata in the simulation code) is; AnnData object with n_obs × n_vars = 3 × 50; [[ 8. 10. 7. 11. 14. 12. 11. 9. 14. 11. 8. 2. 8. 10. 7. 12. 11. 12.; 12. 10. 3. 11. 13. 7. 8. 11. 14. 9. 11. 9. 5. 13. 8. 13. 9. 15.; 11. 8. 7. 7. 5. 12. 9. 12. 11. 8. 11. 6. 10. 11.]; [19. 22. 19. 23. 20. 16. 13. 26. 20. 29. 22. 16. 19. 22. 24. 20. 19. 15.; 17. 25. 23. 19. 18. 18. 24. 18. 25. 22. 25. 16. 25. 23. 27. 22. 14. 21.; 24. 23. 16. 15. 14. 27. 23. 24. 21. 27. 17. 20. 20. 12.]; [27. 31. 32. 30. 29. 31. 24. 29. 29. 33. 29. 29. 26. 38. 27. 32. 21. 24.; 28. 27. 25. 19. 28. 24. 23. 23. 30. 39. 29. 42. 34. 28. 25. 26. 27. 32.; 28. 35. 34. 26. 27. 22. 24. 42. 30. 32. 29. 28. 29. 34.]]```; ```. ```python; import scanpy as sc; import logging; sc.settings.verbosity = 3 ; adata=sc.read(""filter_gene_dis.h5"")#a simulation dataset; #when n_top_genes=10,it returns 3*10; #when n_top_genes=20,it returns 3*19; sc.pp.filter_genes_dispersion(adata,n_top_genes=20); print(adata); ```. ```pytb; If you pass `n_top_genes`, all cutoffs are ignored.; extracting highly variable genes; finished (0:00:00); AnnData object with n_obs × n_vars = 3 × 19; var: 'means', 'dispersions', 'dispersions_norm'; ```. #### Versions. <details>; scanpy==1.6.0 anndata==0.7.4 umap==0.4.6 numpy==1.18.5 scipy==1.5.0 pandas==1.0.5 scikit-learn==0.23.1 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.7.0 leidenalg==0.8.1; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1457:1277,log,logging,1277,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1457,1,['log'],['logging']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. I just use the function sc.pp.downsample_counts() to downsample the data, but after that I can't see any output from the Spyder IPython console.; ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```; import numpy as np; import scanpy as sc; import h5py. data = h5py.File('10X_PBMC.h5'). x = np.array(data['X']); adata = sc.AnnData(x). sc.pp.downsample_counts(adata, counts_per_cell=1000). ```pytb; [Paste the error output produced by the above code here]; ```; after I run the above code, there isn;t any error.; But when I key in 'adata' or any other thing in the Spyder IPython console, it just shows:. /anaconda3/lib/python3.7/site-packages/ipykernel/ipkernel.py:448: DeprecationWarning: `input_splitter` is deprecated since IPython 7.0, prefer `input_transformer_manager`.; status, indent_spaces = self.shell.input_splitter.check_complete(code). and there is nothing about the output I want.; After that, my console can’t output anything, unless I exit Spyder and re-enter. ### Versions; Python 3.7.0; Scanpy 1.4.3; <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]; scanpy==1.4.3 anndata==0.6.19 umap==0.3.10 numpy==1.14.6 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.20.1 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 ; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1368:1527,log,logging,1527,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1368,1,['log'],['logging']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. in the last months there's been several people raising issues about `sc.pp.neighbors` being very slow. After pointing them to installing `pynndescent` they noticed considerable improvements in run times.; pynndescent is still top of the benchmarks afaik https://github.com/lmcinnes/pynndescent. Problems are that:; - afaik there's nowhere in the docs where this is documented; - it might be a good idea to just add it as default?. pinging @Koncopd @ivirshup , happy to add a line about pynndescent, just need to know where.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1675:466,benchmark,benchmarks,466,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1675,1,['benchmark'],['benchmarks']
Testability,"- [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy.; How can I export umap location csv file（Barcodes，X,Y）from AnnData object after sc.tl.umap？; thanks; ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```. ```pytb; [Paste the error output produced by the above code here]; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2171:749,log,logging,749,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2171,1,['log'],['logging']
Testability,"- [ x] I have checked that this issue has not already been reported.; - [ x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). The data looks like this. ```pytb. AnnData object with n_obs × n_vars = 17928 × 3101; obs: 'n_genes_by_counts', 'total_counts'; var: 'n_cells_by_counts', 'mean_counts', 'pct_dropout_by_counts', 'total_counts'; uns: 'log1p', 'pca'; obsm: 'X_pca'; varm: 'PCs'; ```; This is the command that leads to error:; ```python; sc.pp.neighbors(adata ); ```; ` sc.logging.print_versions()` doesn't produce the correct output (see bellow), but scanpy's version is 1.9.3. ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-79-c7d46fa554b4> in <module>; ----> 1 sc.pp.neighbors(adata,n_pcs = num_comp,n_neighbors = 100 ). ~/.local/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in neighbors(adata, n_neighbors, n_pcs, use_rep, knn, random_state, method, metric, metric_kwds, key_added, copy); 137 adata._init_as_actual(adata.copy()); 138 neighbors = Neighbors(adata); --> 139 neighbors.compute_neighbors(; 140 n_neighbors=n_neighbors,; 141 knn=knn,. ~/.local/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in compute_neighbors(self, n_neighbors, knn, n_pcs, use_rep, method, random_state, write_knn_indices, metric, metric_kwds); 792 X = pairwise_distances(X, metric=metric, **metric_kwds); 793 metric = 'precomputed'; --> 794 knn_indices, knn_distances, forest = compute_neighbors_umap(; 795 X, n_neighbors, random_state, metric=metric, metric_kwds=metric_kwds; 796 ). ~/.local/lib/python3.8/site-packages/sca",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2472:842,log,logging,842,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2472,1,['log'],['logging']
Testability,"- [ x] I have checked that this issue has not already been reported.; - [x ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). This is exactly the code on https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html using the dataset downloaded per the instructions. The umap step does not produce the correct result. tsne however produces sensible results.; ```python; import numpy as np; import pandas as pd; import scanpy as sc. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_header(); sc.settings.set_figure_params(dpi=80, facecolor='white'). results_file = 'write/pbmc3k.h5ad' # the file that will store the analysis results. adata = sc.read_10x_mtx(; 'data/filtered_gene_bc_matrices/hg19/', # the directory with the `.mtx` file; var_names='gene_symbols', # use gene symbols for the variable names (variables-axis index); cache=True) . adata.var_names_make_unique() # this is unnecessary if using `var_names='gene_ids'` in `sc.read_10x_mtx`. sc.pl.highest_expr_genes(adata, n_top=20, ). sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3). adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'; sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True). sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_mt'],; jitter=0.4, multi_panel=True). sc.pl.scatter(adata, x='total_counts', y='pct_counts_mt'); sc.pl.scatter(adata, x='total_counts', y='n_genes_by_counts'). adata = adata[adata.obs.n_genes_by_counts < 2500, :]; adata = adata[adat",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2178:885,log,logging,885,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2178,1,['log'],['logging']
Testability,"- [X ] I have checked that this issue has not already been reported.; - [ X] I have confirmed this bug exists on the latest version of scanpy.; - [ X] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. I believe this may be a bug in documentation. It says that scanpy.pp.highly_variable_genes expects logarithmized data, except when flavor='seurat_v3'. However, after reading the reference Zheng17 for the cellRanger method (in particular, Supplementary Figure 5c), it appears that non-logarithmized data was used for calculating the dispersion. And examining the highly_variable_genes source code, I note that for method='seurat', the data is transformed back out of logspace using X=np.expm1(X) before computing dispersions, but this is not done when method='cell_ranger'. My conclusion is that the documentation should be updated to reflect that when flavor='cell_ranger', non-logarithmized data is expected. But I would very much appreciate clarification on the issue, it has been a long-standing source of confusion in our lab. Thank you.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1545:331,log,logarithmized,331,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1545,4,['log'],"['logarithmized', 'logspace']"
Testability,"- [X ] I have checked that this issue has not already been reported.; - [X ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---; Having NaN in my rank_gene_groups for some genes in some groups and plotting with `rank_genes_groups_matrixplot` does not set the NaN values =0 ; I only see two places in the code where nan gets set to 0 for matrix plots; ```python; ./_matrixplot.py:148: values_df = values_df.div(values_df.max(1), axis=0).fillna(0); ./_matrixplot.py:151: values_df = (values_df / values_df.max(0)).fillna(0); ```; and that is when using `standard_scale` which doesn't seem to have an effect for `logfoldchanges` (naturally). I'm just not sure where or why my nan takes the color of values >0 in my matrix plot. #### Versions; `sc.__version__`; '1.9.1'. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]; <details>. ```; -----; anndata 0.8.0; scanpy 1.9.1; -----; PIL 9.1.0; asttokens NA; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; certifi 2021.10.08; cffi 1.15.0; charset_normalizer 2.0.12; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.6.0; decorator 5.1.1; defusedxml 0.7.1; entrypoints 0.4; executing 0.8.3; gprofiler 1.0.0; h5py 3.6.0; hypergeom_ufunc NA; idna 3.3; igraph 0.9.10; ipykernel 6.12.1; ipython_genutils 0.2.0; ipywidgets 7.7.0; jedi 0.18.1; joblib 1.1.0; jupyter_server 1.16.0; kiwisolver 1.4.2; leidenalg 0.8.9; llvmlite 0.38.0; matplotlib 3.6.2; matplotlib_inline NA; mpl_toolkits NA; natsort 8.1.0; nbinom_ufunc NA; numba 0.55.1; numpy 1.21.4; packaging 21.3; pandas 1.5.1; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.29; psutil 5.9.0; ptyprocess 0.7.0; pure_eval 0.2.2; pydev_ipython NA; pydevconsole NA; pydevd 2.8.0; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.11.2; pyparsing 3.0.9; pytz 2022.1; requests 2.27.1; scipy 1.8.1; sea",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2368:712,log,logfoldchanges,712,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2368,2,['log'],"['logfoldchanges', 'logging']"
Testability,"- [X ] I have checked that this issue has not already been reported.; - [X ] I have confirmed this bug exists on the latest version of scanpy.; - [X ] (optional) I have confirmed this bug exists on the master branch of scanpy. I'm working on comit `63b42e4b` (latest master).; I'm not sure if intended or not but it seems like it would be usefull if one were able to ingest data that don't share 100% of all features. ### Minimal code sample (that we can copy&paste without having any data). ```python; adata = sc.datasets.paul15(); sc.pp.pca(adata_ref); sc.pp.neighbors(adata_ref); sc.tl.leiden(adata_ref); adata = adata_ref[:, :1000].copy() # assume adata_ref has more than 1000 genes.; sc.tl.ingest(adata, adata_ref, obs='leiden'); ```. Error message; ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-37-b3cd11e67810> in <module>; ----> 1 sc.tl.ingest(adata, adata_ref, obs='leiden'). ~/projects/scanpy/scanpy/tools/_ingest.py in ingest(adata, adata_ref, obs, embedding_method, labeling_method, neighbors_key, inplace, **kwargs); 125 ; 126 ing = Ingest(adata_ref, neighbors_key); --> 127 ing.fit(adata); 128 ; 129 for method in embedding_method:. ~/projects/scanpy/scanpy/tools/_ingest.py in fit(self, adata_new); 437 ; 438 if not ref_var_names.equals(new_var_names):; --> 439 raise ValueError(; 440 'Variables in the new adata are different '; 441 'from variables in the reference adata'. ValueError: Variables in the new adata are different from variables in the reference adata; ```. --- . #### Versions. <details>. sc.logging.print_header(); scanpy==1.8.0.dev78+gc488909a anndata==0.7.6 umap==0.5.0 numpy==1.19.4 scipy==1.5.4 pandas==1.1.4 scikit-learn==0.23.2 statsmodels==0.12.1 python-igraph==0.8.3 leidenalg==0.8.3 pynndescent==0.5.1. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2001:1623,log,logging,1623,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2001,1,['log'],['logging']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy. (Well released version); - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. Hello, I was trying to build a Debian package for scanpy 1.8.2, and unsurprisingly ran into problems with the plot tests. Most of the problems were just slight plot layout differences, but the test_embedding_plots::test_visium_default test ends up generating a blank plot. ![master_spatial_visium_default](https://user-images.githubusercontent.com/975038/141199384-3696067f-c8ed-475d-b077-80bb2a0280a0.png). I can get something where the dots are visible by setting a color, but the color bar doesn't match the default.; ![master_spatial_visium_default](https://user-images.githubusercontent.com/975038/141200671-6bbb5dd3-17ac-44ac-a9d1-28549e4c90a9.png). I also tried add_outline=True which got me closer but is still not right, and still pretty hard to see. ; ![showspatial_visium_add_outline](https://user-images.githubusercontent.com/975038/141201784-4eeb070c-9be2-4db7-85c2-274f34bec6d3.png). I tried adjusting the marker size but didn't get very far. do you have any guesses what might be wrong?. Thanks. anndata 0.7.5+ds; scanpy 1.8.2; sinfo 0.3.1. PIL 8.3.2; anndata 0.7.5+ds; asciitree NA; beta_ufunc NA; binom_ufunc NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; fasteners NA; h5py 3.3.0; igraph 0.9.6; joblib 0.17.0; kiwisolver 1.3.2; leidenalg 0.8.8; llvmlite 0.35.0; matplotlib 3.3.4; monotonic NA; mpl_toolkits NA; natsort 7.1.0; nbinom_ufunc NA; numba 0.52.0; numcodecs 0.8.1+ds; numexpr 2.7.3; numpy 1.19.5; packaging 21.0; pandas 1.1.5; pkg_resources NA; pyexpat NA; pyparsing 2.4.7; pytoml NA; pytz 2021.3; scanpy 1.8.2; scipy 1.7.1; setuptools_scm NA; sinfo 0.3.1; sitecustomize NA; six 1.16.0; sklearn 0.23.2; tables 3.6.1; texttable 1.6.3; zarr 2.10.2+ds. Python 3.9.8 (main, Nov 7 2021, 15:47:09) [GCC 11.2.0]; Linux-5.14.0-",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2048:363,test,tests,363,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2048,2,['test'],"['test', 'tests']"
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; adata = sc.datasets.pbmc3k(); out = sc.pl.violin(adata, keys=['CD8A', 'CD8B'], ax=None); assert out is None; ```. Should return an axis, as stated in the docs. ```; Returns; -------; A :class:`~matplotlib.axes.Axes` object if `ax` is `None` else `None`.; ```. Temporary workaround for those wanting a solution: . ```; ax = sc.pl.violin(adata, keys=['CD8A', 'CD8B'], ax=None, show=False); ```. #### Versions. <details>. ```; WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.8; scanpy 1.8.2; sinfo 0.3.1; -----; PIL 8.4.0; anndata 0.7.8; asttokens NA; backcall 0.2.0; cffi 1.15.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.0; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; django 4.0; executing 0.8.2; google NA; h5py 2.10.0; igraph 0.9.8; ipykernel 6.7.0; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.18.1; joblib 1.1.0; jupyter_server 1.13.3; kiwisolver 1.3.2; leidenalg 0.8.8; llvmlite 0.37.0; matplotlib 3.5.1; matplotlib_inline NA; mpl_toolkits NA; natsort 8.0.2; numba 0.54.1; numexpr 2.8.0; numpy 1.19.5; packaging 21.3; pandas 1.1.5; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.24; psutil 5.8.0; ptyprocess 0.7.0; pure_eval 0.2.1; pydev_ipython NA; pydevconsole NA; pydevd 2.6.0; pydevd_concurrency_analyser NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.10.0; pyparsing 3.0.6; pytz 2021.3; scanpy 1.8.2; scipy 1.5.3; scprep 1.1.0; seaborn 0.11.2; setuptools 58.0.4; setuptools_scm NA; sinfo 0.3.1; six 1.16.0; sklearn 0.24.2; sphinxcontrib NA; stack_data 0.1.4; statsmodels 0.13.1; tables 3.6.1; texttable 1.6.4; tornado 6.1; tq",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2135:424,assert,assert,424,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2135,1,['assert'],['assert']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). Download HCA loom dataset (tested with data from: https://data.humancellatlas.org/explore/projects/0c3b7785-f74d-4091-8616-a68757e4c2a8/m/project-matrices). ```python; import scanpy; loomdata = scanpy.read_loom(""path/bone-marrow-myeloma-human-hematopoeitic-10XV2.loom""). #I also tried:; loomdata=scanpy.read_loom(""path/bone-marrow-myeloma-human-hematopoeitic-10XV2.loom"", obs_names='CellID', var_names='ensembl_ids'. ```. ```pytb; scanpy.read_loom(""/Users/acastanza/Downloads/bone-marrow-myeloma-human-hematopoeitic-10XV2.loom""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/local/anaconda3/lib/python3.8/site-packages/anndata/compat/__init__.py"", line 253, in inner_f; return f(*args, **kwargs); File ""/usr/local/anaconda3/lib/python3.8/site-packages/anndata/_io/read.py"", line 261, in read_loom; with connect(filename, ""r"", **kwargs) as lc:; File ""/usr/local/anaconda3/lib/python3.8/site-packages/loompy/loompy.py"", line 1140, in connect; return LoomConnection(filename, mode, validate=validate, spec_version=spec_version); File ""/usr/local/anaconda3/lib/python3.8/site-packages/loompy/loompy.py"", line 84, in __init__; raise ValueError(""\n"".join(lv.errors) + f""\n{filename} does not appead to be a valid Loom file according to Loom spec version '{spec_version}'""); ValueError: Row attribute 'Gene' dtype object is not allowed; Row attribute 'ensembl_ids' dtype object is not allowed; Row attribute 'gene_names' dtype object is not allowed; Column attribute 'CellID' dtype",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2040:515,test,tested,515,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2040,1,['test'],['tested']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; ```. ```pytb; Illegal instruction (core dumped); ```. #### Versions. <details>. Python 3.9.7 and scanpy 1.8.2. CPU flags including instruction sets are pasted below. fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb hw_pstate ssbd ibpb vmmcall bmi1 arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold. I unfortunately cannot call scanpy.logging as I cannot import scanpy. I can, however, list the versions of all packages installed alongside scanpy. anndata 0.7.8; cycler 0.11.0; fonttools 4.28.2; h5py 3.6.0; joblib 1.1.0; kiwisolver 1.3.2; llvmlite 0.37.0; matplotlib 3.5.0; natsort 8.0.0; networkx 2.6.0; numba 0.54.1; numexpr 2.7.3; numpy 1.20.3; pandas 1.3.4; patsy 0.5.2; pillow 8.4.0; pynndescent 0.5.5; python-dateutil 2.8.2; pytz 2021.3; scikit-learn 1.0.1; scipy 1.7.3; seaborn 0.11.2; setuptools-scm 6.3.2; sinfo 0.3.4; statsmodels 0.13.1; stdlib-list 0.8.0; tables 3.6.1; threadpoolctl 3.0.0; tqdm 4.62.3; umap-learn 0.5.2; xlrd-1.2.0. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2062:1316,log,logging,1316,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2062,1,['log'],['logging']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---; Hello, . I would like to derive the transition matrix with the following input:. ```python; sc.Neighbors.compute_transitions(adata); ```. The error below was produced. The anndata object was fine with sc.pp.neighbors(adata) and sc.tl.umap(adata) for UMAP plotting. Thanks. ```pytb; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/root/miniconda3/envs/scVI/lib/python3.8/site-packages/scanpy/neighbors/__init__.py"", line 911, in compute_transitions; W = self._connectivities; AttributeError: 'AnnData' object has no attribute '_connectivities'; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.5; scanpy 1.8.2; sinfo 0.3.1; -----; PIL 8.0.1; absl NA; anndata 0.7.5; attr 20.3.0; cffi 1.14.4; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; deprecate 0.3.0; docrep 0.3.2; fsspec 2022.01.0; google NA; h5py 3.1.0; igraph 0.9.1; joblib 0.17.0; kiwisolver 1.3.1; leidenalg 0.8.3; llvmlite 0.37.0; matplotlib 3.3.3; mkl 2.3.0; mpl_toolkits NA; natsort 7.1.0; numba 0.54.1; numexpr 2.7.1; numpy 1.19.2; opt_einsum v3.3.0; packaging 20.7; pandas 1.1.5; pkg_resources NA; pycparser 2.20; pygments 2.7.3; pynndescent 0.5.5; pyparsing 2.4.7; pyro 1.8.0+0ec1e87; pytorch_lightning 1.3.8; pytz 2020.4; rich NA; scanpy 1.8.2; scipy 1.5.2; scvi 0.14.5; setuptools 49.6.0.post20201009; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 1.0.1; sphinxcontrib NA; tables 3.6.1; tensorboard 2.7.0; texttable 1.6.3; threadpoolctl 2.1.0; torch 1.9.0; torchmetrics 0.6.2; tqdm 4.62.3; typing_extensions NA; umap 0.5.2; wcwidth 0.2.5; yaml 5.4.1; -----; Python 3.8.6 | packaged by",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2109:864,log,logging,864,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2109,1,['log'],['logging']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. This is probably a bug in my thinking, but naively I thought that `sc.pp.normalize_total()` normalizes counts per cell, thus allowing comparison of different cells by correcting for variable sequencing depth. However, the log transformation applied after normalisation seems to upset this relationship, example below. Why is this not problematic?. Incidentally, I first noticed this on my real biological dataset, not the toy example below. Edit: [relevant paper](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6215955/). > We can show, mathematically, that if we normalize expression profiles to have the same mean across cells, the mean after the equation [log] transformation used for RNA-Seq data will not be the same, and it will depend on the detection rate... And this [one](https://www.biorxiv.org/content/10.1101/404962v1.full):. > One issue of particular interest is that the mean of the log-counts is not generally the same as the log-mean count [1]. This is problematic in scRNA-seq contexts where the log-transformation is applied to normalized expression data. ---. ### Minimal code sample. ```python; >>> from anndata import AnnData; >>> import scanpy as sc; >>> import numpy as np; >>> adata = AnnData(np.array([[3, 3, 3, 6, 6],[1, 1, 1, 2, 2],[1, 22, 1, 2, 2], ])); >>> X_norm = sc.pp.normalize_total(adata, target_sum=1, inplace=False)['X']; >>> X_norm_log = np.log1p(X_norm); >>> X_norm_again = np.expm1(X_norm_log); >>> adata.X.sum(axis=1); array([21., 7., 28.], dtype=float32) # Different counts for each cell; >>> X_norm.sum(axis=1); array([1., 1., 1.], dtype=float32) # Normalisation means same counts for each cell; >>> X_norm_log.sum(axis=1); array([0.90322304, 0.90322304, 0.7879869 ], dtype=float32) # <<< Interested in this! Different counts for each ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1364:446,log,log,446,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1364,2,['log'],['log']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here. sc.pp.pca(adata, svd_solver = 'lobpcg'); ```. ```pytb; [Paste the error output produced by the above code here]. ValueError: Unrecognized svd_solver='lobpcg'; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2487:735,log,logging,735,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2487,1,['log'],['logging']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. If you us rank_genes_group with a subset of groups and change the order the reported output is messed up. In the example below the second result is like the fist result. However in the plot so cluster 2 has now the genes of cluster 1 and vice versa. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.tl.rank_genes_groups(adata, groupby=""louvain"",groups=[""0"",""1"",""2""], method=""logreg"", use_raw= False); sc.tl.rank_genes_groups(adata, groupby=""louvain"",groups=[""0"",""2"",""1""], method=""logreg"", use_raw= False); ```. #### Versions. <details>; anndata==0.7.8; scanpy==1.8.2; sinfo==0.3.4; IPython==7.30.1; jupyter_client==7.1.0; jupyter_core==4.9.1; notebook==6.4.6. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2126:643,log,logreg,643,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2126,2,['log'],['logreg']
Testability,"- [X] I have checked that this issue has not already been reported.; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ```python; import warnings; warnings.simplefilter('always'); import scanpy; ```. ```pytb; /home/scottgigante/.local/lib/python3.6/site-packages/scanpy/tools/_louvain.py:17: DeprecationWarning: This package has been superseded by the `leidenalg` package and will no longer be maintained. Please upgrade to the `leidenalg` package.; from louvain.VertexPartition import MutableVertexPartition; ```. #### Versions. <details>. ```; -----; anndata 0.7.3; scanpy 1.6.0; sinfo 0.3.1; -----; PIL 7.2.0; anndata 0.7.3; apport_python_hook NA; cffi 1.14.1; colorama 0.3.7; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; get_version 2.1; h5py 2.10.0; igraph 0.8.2; importlib_metadata 1.6.1; joblib 0.16.0; kiwisolver 1.2.0; legacy_api_wrap 1.2; llvmlite 0.33.0; louvain 0.7.0; matplotlib 3.3.0; mpl_toolkits NA; natsort 7.0.1; numba 0.50.1; numexpr 2.7.1; numpy 1.19.1; packaging 20.4; pandas 1.0.5; pkg_resources NA; psutil 5.7.2; pyparsing 2.4.7; pytz 2020.1; scanpy 1.6.0; scipy 1.5.2; setuptools_scm NA; sinfo 0.3.1; sitecustomize NA; six 1.15.0; sklearn 0.23.1; tables 3.6.1; texttable 1.6.2; wcwidth 0.2.5; yaml 3.12; zipp NA; zope NA; -----; Python 3.6.9 (default, Nov 7 2019, 10:44:02) [GCC 8.3.0]; Linux-4.4.0-18362-Microsoft-x86_64-with-Ubuntu-18.04-bionic; 8 logical CPU cores, x86_64; -----; Session information updated at 2020-08-18 15:10; ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1379:1489,log,logical,1489,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1379,1,['log'],['logical']
Testability,- [X] Tests included or not required because it's minor; - [x] Release notes not necessary because it's minor. I'm pretty sure that we've had this warning for a looooong time and it keeps showing up in a lot of downstream packages. People are either aware of it now or don't care (with the latter probably being more likely ^_^).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2798:6,Test,Tests,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798,1,['Test'],['Tests']
Testability,"- [x ] I have checked that this issue has not already been reported.; - [x ] I have confirmed this bug exists on the latest version of scanpy. ---. Hi, I am using scanpy rank gene function and always get NAN as gene names in the data frame results. . (I might have seen this bug before in this repo but I cant find it in today.). ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.tl.rank_genes_groups(ad,groupby='tissue.id',use_raw=False,method='wilcoxon'); sc.tl.filter_rank_genes_groups(ad, min_fold_change=1,min_in_group_fraction=0.25,max_out_group_fraction=0.25,use_raw=False,key='rank_genes_groups'); sc.get.rank_genes_groups_df(ad,group=['Liver_Met'],key='rank_genes_groups_filtered')[:20]; ```. ```pytb. names | scores | logfoldchanges | pvals | pvals_adj; -- | -- | -- | -- | --; HBB | 94.312996 | 4.962673 | 0.0 | 0.0; HBA2 | 86.154396 | 4.713093 | 0.0 | 0.0; NaN | 83.383812 | 3.280355 | 0.0 | 0.0; NaN | 77.977989 | 3.548592 | 0.0 | 0.0; S100A2 | 73.550644 | 3.764067 | 0.0 | 0.0; NaN | 66.913872 | 2.049016 | 0.0 | 0.0; NaN | 66.620399 | 1.637823 | 0.0 | 0.0; NaN | 66.236443 | 1.807056 | 0.0 | 0.0; NaN | 64.112152 | 2.446921 | 0.0 | 0.0; NaN | 64.083160 | 2.495992 | 0.0 | 0.0; HBA1 | 63.376114 | 4.161097 | 0.0 | 0.0; NaN | 63.009491 | 2.059168 | 0.0 | 0.0; NaN | 58.142750 | 2.201216 | 0.0 | 0. ```. #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.7.0; sinfo 0.3.1; -----; PIL 7.2.0; anndata 0.7.5; appdirs 1.4.4; autoreload NA; backcall 0.2.0; bioservices 1.7.8; bs4 4.9.1; cairo 1.19.1; certifi 2020.12.05; cffi 1.14.4; chardet 3.0.4; colorama 0.4.3; colorlog NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; deprecated 1.2.10; easydev 0.9.38; future 0.18.2; future_fstrings NA; get_version 2.1; graphtools 1.5.2; gseapy 0.10.1; h5py 2.10.0; idna 2.10; igraph 0.8.2; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; joblib 0.16.0; kiwisolver 1.2.0; legacy_api_wrap 1.2; leidenalg 0.8.1; llvm",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1748:766,log,logfoldchanges,766,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1748,1,['log'],['logfoldchanges']
Testability,- [x] #2866; - [ ] #3068; - [x] https://github.com/scverse/anndata/pull/1537; - [ ] Maybe also mark the frequently broken `ebi_expression_atlas` test as `xfail(strict=False)` to effectively disable it. Scanpy is getting hard to maintain due to this,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3124:145,test,test,145,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3124,1,['test'],['test']
Testability,"- [x] Additional function parameters / changed functionality / changed defaults?. I recently wrote up a parallelized implementation of the Mann-Whitney U test, for my own use ([gist is here](https://gist.github.com/jamestwebber/38ab26d281f97feb8196b3d93edeeb7b)). For the types of tests we tend to do in scRNAseq (lots of different features, 2d arrays) it basically scales with the number of cores you can throw at it. When you're doing a lot of tests this is very nice!. Given that `scanpy` already has a dependency on `numba` this would be a pretty simple thing to add, if you want to do so. Thought I would just point it out!. - James",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2060:154,test,test,154,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2060,3,['test'],"['test', 'tests']"
Testability,- [x] Closes [#1876](https://github.com/scverse/scanpy/issues/1876) and reimplements stale [PR #2055](https://github.com/scverse/scanpy/pull/2055) zhangguy:dotplot2d; - [ ] Empty group currently breaks; - [ ] dendrogram doesn't work with all plots; - [ ] I don't think anything would break if you just removed var_name reordering from the dendrogram entirely; - [ ] add tests using `groupby_cols` params; - [ ] Docs!,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2769:370,test,tests,370,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2769,1,['test'],['tests']
Testability,"- [x] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.tl.rank_genes_groups(adata, 'leiden', method='logreg'); ```. ```pytb; ~/miniconda3/envs/tangram-env/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):; STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in:; https://scikit-learn.org/stable/modules/preprocessing.html; Please also refer to the documentation for alternative solver options:; https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression; n_iter_i = _check_optimize_result(; finished (0:07:47). ```. #### Versions. scikit-learn=1.0.2; scanpy=1.8.2. <details>. It seems the result was still not converged when using the maximal iteration parameter (max_iter=100) in LogisticRegression function of sklearn. I'd like to ask are there any possibilities to pass any parameters from scanpy to sklearn to increase the max_iter value?. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2195:548,log,logreg,548,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2195,3,"['Log', 'log']","['LogisticRegression', 'logistic-regression', 'logreg']"
Testability,"- [x] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ```python; sc.tl.pca(adata, svd_solver='arpack', use_highly_variable=True, chunked=True, chunk_size=1000); ```. ```pytb; TypeError: unsupported operand type(s) for -: 'datetime.datetime' and 'int'; ```. I believe the error is due overwriting of `start` variable.; It is declared in [line 116](https://github.com/theislab/scanpy/blob/master/scanpy/preprocessing/_pca.py#L116) but is overwritten by loop variable of same name in [line 172](https://github.com/theislab/scanpy/blob/master/scanpy/preprocessing/_pca.py#L172). #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.6.0; sinfo 0.3.1; -----; PIL 8.1.0; anndata 0.7.5; asciitree NA; cffi 1.14.3; cloudpickle 1.6.0; constants NA; cycler 0.10.0; cython_runtime NA; dask 2020.12.0; dateutil 2.8.1; fasteners NA; get_version 2.1; h5py 3.1.0; highs_wrapper NA; igraph 0.8.3; joblib 1.0.0; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.3; llvmlite 0.35.0; matplotlib 3.3.3; mpl_toolkits NA; msgpack 1.0.2; natsort 7.1.0; numba 0.52.0; numcodecs 0.7.2; numexpr 2.7.2; numpy 1.19.4; packaging 20.8; pandas 1.2.0; pkg_resources NA; psutil 5.8.0; pyparsing 2.4.7; pytz 2020.5; scanpy 1.6.0; scipy 1.6.0; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.24.0; sparse 0.11.2; tables 3.6.1; tblib 1.7.0; texttable 1.6.3; tlz 0.11.1; toolz 0.11.1; typing_extensions NA; yaml 5.3.1; zarr 2.6.1; -----; Python 3.8.5 (default, Sep 4 2020, 07:30:14) [GCC 7.3.0]; Linux-3.10.0-1062.4.1.el7.x86_64-x86_64-with-glibc2.10; 2 logical CPU cores, x86_64; -----. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1590:1704,log,logical,1704,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1590,1,['log'],['logical']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy. ---; I can't apply the sc.pl.spatial function because of a type error. The most weird thing here is that i could do this yesterday but it all failed today. I install a new package into this environment during this time, is that possible the new package would interfere the function of scanpy? . **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; adata_rna.obs['thing']= 'a'; plt.rcParams[""figure.figsize""] = (8, 8); sc.pl.spatial(adata_rna, color = 'thing'); ```. ```pytb; ![image](https://github.com/scverse/scanpy/assets/117483585/60431b58-cafd-4cb0-8bd9-ac7ca1810526). ![image](https://github.com/scverse/scanpy/assets/117483585/9b54d05a-b240-4ae0-adba-a4f9a25b991d). ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>. ![image](https://github.com/scverse/scanpy/assets/117483585/c74bf37c-a8fc-42f3-9c44-d0de34a9bf18)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2494:1090,log,logging,1090,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2494,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; adata = sc.datasets.paul15(); sc.external.pp.scrublet(adata, threshold=0.1); ```. ```pytb; WARNING: In Scanpy 0.*, this returned logarithmized data. Now it returns non-logarithmized data.; ... storing 'paul15_clusters' as categorical; /opt/conda/lib/python3.7/site-packages/pandas/core/arrays/categorical.py:2487: FutureWarning: The `inplace` parameter in pandas.Categorical.remove_unused_categories is deprecated and will be removed in a future version.; res = method(*args, **kwargs); Trying to set attribute `.uns` of view, copying.; /opt/conda/lib/python3.7/site-packages/scanpy/preprocessing/_normalization.py:138: UserWarning: Revieved a view of an AnnData. Making a copy.; view_to_actual(adata). ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-21-3dabe52b6132> in <module>; 1 import scanpy as sc; 2 adata = sc.datasets.paul15(); ----> 3 sc.external.pp.scrublet(adata, threshold=0.1). /opt/conda/lib/python3.7/site-packages/scanpy/external/pp/_scrublet.py in scrublet(adata, adata_sim, sim_doublet_ratio, expected_doublet_rate, stdev_doublet_rate, synthetic_doublet_umi_subsampling, knn_dist_metric, normalize_variance, log_transform, mean_center, n_prin_comps, use_approx_neighbors, get_doublet_neighbor_parents, n_neighbors, threshold, verbose, copy, random_state); 208 expected_doublet_rate=expected_doublet_rate,; 209 stdev_doublet_rate=stdev_doublet_rate,; --> 210 random_state=random_state,; 211 ); 212 . /opt/conda/lib/python3.7/site-packages/scanpy/external/pp/_scrublet.py in _scrublet_call_doublets(adata_obs, adata_sim, n_neighbors, expected_doublet_rate,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1645:464,log,logarithmized,464,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1645,2,['log'],['logarithmized']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ### Minimal code sample. RecursionError when using sc.tl.ingest with Python 3.10. Downgrading to Python 3.8 or 3.9 fixes the issue. . Recreate by just running scanpy's own [Integrating data using ingest and BBKNN](https://scanpy-tutorials.readthedocs.io/en/latest/integrating-data-using-ingest.html#Integrating-data-using-ingest-and-BBKNN) tutorial. ![image](https://user-images.githubusercontent.com/4848896/160018184-7609a89a-adc5-4094-9bc3-7f2d894355f4.png). ```pytb; ---------------------------------------------------------------------------; RecursionError Traceback (most recent call last); Input In [6], in <cell line: 1>(); ----> 1 sc.tl.ingest(adata, adata_ref, obs='louvain'). File ~/miniconda3/envs/test/lib/python3.10/site-packages/scanpy/tools/_ingest.py:133, in ingest(adata, adata_ref, obs, embedding_method, labeling_method, neighbors_key, inplace, **kwargs); 130 ing.map_embedding(method); 132 if obs is not None:; --> 133 ing.neighbors(**kwargs); 134 for i, col in enumerate(obs):; 135 ing.map_labels(col, labeling_method[i]). File ~/miniconda3/envs/test/lib/python3.10/site-packages/scanpy/tools/_ingest.py:472, in Ingest.neighbors(self, k, queue_size, epsilon, random_state); 469 if self._use_pynndescent:; 470 self._nnd_idx.search_rng_state = rng_state; --> 472 self._indices, self._distances = self._nnd_idx.query(test, k, epsilon); 474 else:; 475 from umap.utils import deheap_sort. File ~/miniconda3/envs/test/lib/python3.10/site-packages/pynndescent/pynndescent_.py:1595, in NNDescent.query(self, query_data, k, epsilon); 1564 """"""Query the training graph_data for the k nearest neighbors; 1565 ; 1566 Parameters; (...); 1592 training graph_data.; 1593 """"""; 1594 if not hasattr(self, ""_search_graph""):; -> 1595 self._init_search_graph(); 1597 if n",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:940,test,test,940,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import numpy as np; import pandas as pd; import scanpy as sc; import os; import sys. data = sc.read(""data_bbknn_umap.h5ad""); sc.tl.louvain(data,resolution=res); ```. ```pytb; Traceback (most recent call last):; File ""/home/scanpy/12.bbknn0814-4/bbknn2.py"", line 27, in <module>; sc.tl.louvain(dat_merge,resolution=res); File ""/home/scanpy/miniconda3/envs/SC2/lib/python3.9/site-packages/scanpy/tools/_louvain.py"", line 132, in louvain; g = _utils.get_igraph_from_adjacency(adjacency, directed=directed); File ""/home/scanpy/miniconda3/envs/SC2/lib/python3.9/site-packages/scanpy/_utils/__init__.py"", line 219, in get_igraph_from_adjacency; g.es['weight'] = weights; SystemError: /home/conda/feedstock_root/build_artifacts/python-split_1625973859697/work/Objects/listobject.c:138: bad argument to internal function. ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1980:1372,log,logging,1372,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1980,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; import pandas as pd; import numpy as np; import urllib.request; ; url = ""https://humancellatlas.usegalaxy.eu/datasets/11ac94870d0bb33a8d1d2e6bc37a120e/display?to_ext=h5ad""; # 75 MB anndata; urllib.request.urlretrieve(url, '11ac94.h5ad'). adata = sc.read('11ac94.h5ad'). sc.settings.figdir = '.'. sc.pl.rank_genes_groups_dotplot(; adata,; save='.png',; show=False,; gene_symbols='Symbol',; n_genes=10,; log=False,; use_raw=False,; ); ```. ```pytb; Traceback (most recent call last):; File ""/private/var/folders/23/wwh84vd95rncnf5mx753cpgh0000gp/T/tmpenni0vju/job_working_directory/000/11/configs/tmp4tnm4xxb"", line 15, in <module>; sc.pl.rank_genes_groups_dotplot(; File ""/usr/local/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 647, in rank_genes_groups_dotplot; return _rank_genes_groups_plot(; File ""/usr/local/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py"", line 426, in _rank_genes_groups_plot; _pl = dotplot(; File ""/usr/local/lib/python3.8/site-packages/scanpy/plotting/_dotplot.py"", line 913, in dotplot; dp = DotPlot(; File ""/usr/local/lib/python3.8/site-packages/scanpy/plotting/_dotplot.py"", line 127, in __init__; BasePlot.__init__(; File ""/usr/local/lib/python3.8/site-packages/scanpy/plotting/_baseplot_class.py"", line 105, in __init__; self.categories, self.obs_tidy = _prepare_dataframe(; File ""/usr/local/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 1845, in _prepare_dataframe; obs_tidy = get.obs_df(; Fil",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1796:922,log,log,922,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1796,1,['log'],['log']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; pbmc = sc.datasets.pbmc3k(); log_anndata = sc.pp.log1p(pbmc, copy=True); pbmc.layers['log_transformed'] = log_anndata.X.copy(). # This errors, because X is not normalized and flavor=""seurat"" requires normalizes data.; # ValueError: cannot specify integer `bins` when input data contains infinity; sc.pp.highly_variable_genes(pbmc, flavor=""seurat"", subset=False, inplace=False). # This works, we pass log tranformed data; pbmc.uns['log1p'] = log_anndata.uns['log1p']; sc.pp.highly_variable_genes(pbmc, layer=""log_transformed"", flavor=""seurat"", subset=False, inplace=False). # This raises ValueError again; pbmc.obs['batch'] = 'A'; column_index = pbmc.obs.columns.get_indexer(['batch']); pbmc.obs.iloc[slice(pbmc.n_obs//2, None), column_index] = 'B'; sc.pp.highly_variable_genes(pbmc, layer=""log_transformed"", flavor=""seurat"", subset=False, inplace=False, batch_key=""batch""); ```. ```pytb; >>> import scanpy as sc; g_anndata = sc.pp.log1p(pbmc, copy=True); pbmc.layers['log_transformed'] = log_anndata.X.copy(). # This errors, because X is not normalized and flavor=""seurat"" requires normalizes data.; # ValueError: cannot specify integer `bins` when input data contains infinity; sc.pp.highly_variable_genes(pbmc, flavor=""seurat"", subset=False, inplace=False). # This works, we pass log tranformed data; pbmc.uns['log1p'] = log_anndata.uns['log1p']; sc.pp.highly_variable_genes(pbmc, layer=""log_transformed"", flavor=""seurat"", subset=False, inplace=False). # This raises ValueError a",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2396:920,log,log,920,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2396,1,['log'],['log']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; sc.logging.print_header(); adata = sc.datasets.pbmc68k_reduced(); sc.tl.dendrogram(adata, groupby='bulk_labels'); sc.pl.dendrogram(adata); markers = ['C1QA', 'PSAP', 'CD79A', 'CD79B', 'CST3', 'LYZ']; sc.pl.dotplot(adata, markers, groupby='bulk_labels', dendrogram=True); ```. ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Input In [3], in <module>; 2 sc.logging.print_header(); 3 adata = sc.datasets.pbmc68k_reduced(); ----> 4 sc.tl.dendrogram(adata, groupby='bulk_labels'); 5 sc.pl.dendrogram(adata); 6 markers = ['C1QA', 'PSAP', 'CD79A', 'CD79B', 'CST3', 'LYZ']. File ~/miniconda3/envs/scanpy/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py:139, in dendrogram(adata, groupby, n_pcs, use_rep, var_names, use_raw, cor_method, linkage_method, optimal_ordering, key_added, inplace); 136 from scipy.spatial import distance; 138 corr_matrix = mean_df.T.corr(method=cor_method); --> 139 corr_condensed = distance.squareform(1 - corr_matrix); 140 z_var = sch.linkage(; 141 corr_condensed, method=linkage_method, optimal_ordering=optimal_ordering; 142 ); 143 dendro_info = sch.dendrogram(z_var, labels=list(categories), no_plot=True). File ~/miniconda3/envs/scanpy/lib/python3.8/site-packages/scipy/spatial/distance.py:2362, in squareform(X, force, checks); 2360 raise ValueError('The matrix argument must be square.'); 2361 if checks:; -> 2362 is_valid_dm(X, throw=True, name='X'); 2364 # One-",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2125:523,log,logging,523,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2125,2,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. As the title says. A specific set of combinations of keywords to rank gene groups and plotting throws an error unexpectedly. ### Minimal code sample (that we can copy&paste without having any data). ```python; adata = sc.datasets.paul15(); sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', key_added='GG', use_raw=False, reference='1Ery'); rax = sc.pl.rank_genes_groups_dotplot(adata, key='GG', # , rankby_abs= None,; n_genes=3, cmap='PiYG_r', swap_axes=True,; show=False, values_to_plot='logfoldchanges',; vmin=None, vmax=None); ```. ```pytb; WARNING: In Scanpy 0.*, this returned logarithmized data. Now it returns non-logarithmized data.; ... storing 'paul15_clusters' as categorical; Trying to set attribute `.uns` of view, copying.; WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'; WARNING: It seems you use rank_genes_groups on the raw count data. Please logarithmize your data before calling rank_genes_groups.; ERROR: the given dot_color_df data frame has a different shape thanthe data frame used for the dot size. Both data frames needto have the same index and columns; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-110-708ec3ea001f> in <module>; 1 adata = sc.datasets.paul15(); 2 sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', key_added='GG', use_raw=False, reference='1Ery'); ----> 3 rax = sc.pl.rank_genes_groups_dotplot(adata, key='GG', # , rankby_abs= None,; 4 n_genes=3, cmap='PiYG_r', swap_axes=True,; 5 show=False, valu",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2078:911,log,logfoldchanges,911,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2078,1,['log'],['logfoldchanges']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. After running sc.tl.rank_genes_groups and sc.get.rank_genes_groups_df using the same data and python/scanpy code, Spider and Jupyter (both installed in the same environment of Anaconda) generate two different values for the ""names"" column. Whereas Spider gives the expected adata.var_names (e.g. Rpl5; see below), Jupyter gives a numerical code (15721, which is not included in adata.var). ### Minimal code sample (that we can copy&paste without having any data). In Spider:; ```python; de_df.head(5); ```; ```pytb; Out[34]: ; scores names logfoldchanges pvals pvals_adj; 0 9.194006 Rpl15 0.815534 3.784770e-20 1.006711e-15; 1 8.427418 Rps28 0.653911 3.533771e-17 4.699739e-13; 2 7.989542 Rps21 0.676462 1.354418e-15 1.200872e-11; 3 7.871397 Rps27 0.483027 3.507037e-15 2.055341e-11; 4 7.859277 Rps24 0.507071 3.863569e-15 2.055341e-11; ```. In Jupyter:; ```python; de_df.head(5); ```; ```pytb; Out[34]: ;   | scores | names | logfoldchanges | pvals | pvals_adj; 9.194006 | 15721 | 0.815534 | 3.784770e-20 | 1.006711e-15; 8.427418 | 23746 | 0.653911 | 3.533771e-17 | 4.699739e-13; 7.989542 | 3910 | 0.676462 | 1.354418e-15 | 1.200872e-11; 7.871397 | 5571 | 0.483027 | 3.507037e-15 | 2.055341e-11; 7.859277 | 15774 | 0.507071 | 3.863569e-15 | 2.055341e-11. In both cases, Spider and Jupyter; ```python; adata.var_names; ```; ```pytb; Index(['Xkr4', 'Gm1992', 'Gm37381', 'Rp1', 'Sox17', 'Gm37323', 'Mrpl15',; 'Lypla1', 'Gm37988', 'Tcea1',; ```. If I try to specify a different column in Jupyter I get this. ```python; de_df = sc.get.rank_genes_groups_df(database, group=groupA, gene_symbols=""symbol""); ```; ```pytb; You are trying to merge on object and int64 columns. If you wish to proceed you should use pd.concat; ```. #### Versions; [Paste the output of scanpy.logging.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1426:769,log,logfoldchanges,769,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1426,1,['log'],['logfoldchanges']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. Apologies for all the edits, but I'm stuck on this so have been playing around with it. Basically I'm getting weird errors when running scanpy on scvelo objects. I first had this issue when running `sc.pp.pca(adata_panc, n_comps=50)`, but managed to solve it by previously setting `adata_panc.X = np.array(adata_panc.X.todense())`. However, I'm now getting the exact same error when running `sc.pp.neighbors(adata_panc)` and I'm not sure which matrix to test. Any advice would be very much appreciated!. ### Minimal code sample (that we can copy&paste without having any data). ```python; adata_panc = scv.datasets.pancreas(); scv.pp.filter_and_normalize(adata_panc, n_top_genes=3000, min_shared_counts=20); del adata_panc.obsm['X_pca']; del adata_panc.obsm['X_umap']; del adata_panc.obsp['distances']; del adata_panc.obsp['connectivities']; adata_panc.X = np.array(adata_panc.X.todense()); sc.pp.pca(adata_panc, n_comps=50); sc.pp.neighbors(adata_panc); ```. ```pytb; Filtered out 20801 genes that are detected 20 counts (shared).; Normalized count data: X, spliced, unspliced.; Extracted 3000 highly variable genes.; Logarithmized X.; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); TypeError: expected dtype object, got 'numpy.dtype[float32]'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /hps/scratch/lsf_tmpdir/hl-codon-10-04/ipykernel_2322052/531027197.py in <module>; 7 adata_panc.X = np.array(adata_panc.X.todense()); 8 sc.pp.pca(adata_panc, n_comps=50); ----> 9 sc.pp.neighbors(adata_panc). /hps/software/users/marioni/Leah/miniconda3/envs/scvelo/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in neighbors(",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1983:683,test,test,683,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1983,1,['test'],['test']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. I did create model with adata; ```python; import scvi; scvi.model.SCVI.setup_anndata(adata); vae = scvi.model.SCVI(adata); vae.train(); ```. initialize the model using the scvi.model.SCVI object. ```python; solo = scvi.external.SOLO.from_scvi_model(vae); ```; And I got AttributeError; ```pytb; AttributeError Traceback (most recent call last); Cell In[29], line 1; ----> 1 solo = scvi.external.SOLO.from_scvi_model(vae). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/scvi/external/solo/_model.py:204, in SOLO.from_scvi_model(cls, scvi_model, adata, restrict_to_batch, doublet_ratio, **classifier_kwargs); 199 doublet_adata = AnnData(; 200 np.concatenate([doublet_latent_rep, np.log(doublet_lib_size)], axis=1); 201 ); 202 doublet_adata.obs[LABELS_KEY] = ""doublet""; --> 204 full_adata = latent_adata.concatenate(doublet_adata); 205 cls.setup_anndata(full_adata, labels_key=LABELS_KEY); 206 return cls(full_adata, **classifier_kwargs). File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/anndata/_core/anndata.py:1808, in AnnData.concatenate(self, join, batch_key, batch_categories, uns_merge, index_unique, fill_value, *adatas); 1799 pat = rf""-({'|'.join(batch_categories)})$""; 1800 out.var = merge_dataframes(; 1801 [a.var for a in all_adatas],; 1802 out.var_names,; 1803 partial(merge_outer, batch_keys=batch_categories, merge=merge_same),; 1804 ); 1805 out.var = out.var.iloc[; 1806 :,; 1807 (; -> 1808 out.var.columns.str.extract(pat, expand=False); 1809 .fillna(""""); 1810 .argsort(kind=""stable""); 1811 ),; 1812 ]; 1814 return out. File ~/miniconda3/envs/scanpy/lib/python3.10/site-packages/pandas/core/accessor.py:224, in CachedAccessor.__get__(self, obj, cls); 221 if obj is None:; 222 # we're accessing the attribute of the class, i.e., Dataset.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2474:921,log,log,921,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2474,1,['log'],['log']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---; Hello; This block seemed to be running fine a few weeks ago. I tested on the same AnnData file. I couldn't find other issue related to this and not sure how to work around it. Code:; ```; #use this; sc.pl.rank_genes_groups_heatmap(adata, n_genes=200, standard_scale='var', key='rank_genes_groups_filtered', swap_axes=True); sc.pl.correlation_matrix(adata, 'leiden_0.8', figsize=(14,6)); sc.pl.rank_genes_groups_stacked_violin(adata, groupby = 'leiden_0.8', n_genes=2, key='rank_genes_groups_filtered'); ```. Error:. ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-16-30381f660d76> in <module>; 1 #use this; ----> 2 sc.pl.rank_genes_groups_heatmap(adata, n_genes=200, standard_scale='var', key='rank_genes_groups_filtered', swap_axes=True); 3 sc.pl.correlation_matrix(adata, 'leiden_0.8', figsize=(14,6)); 4 sc.pl.rank_genes_groups_stacked_violin(adata, groupby = 'leiden_0.8', n_genes=2, key='rank_genes_groups_filtered'). /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_heatmap(adata, groups, n_genes, groupby, gene_symbols, var_names, min_logfoldchange, key, show, save, **kwds); 659 tl.dendrogram; 660 """"""; --> 661 return _rank_genes_groups_plot(; 662 adata,; 663 plot_type='heatmap',. /data04/projects04/MarianaBoroni/lbbc_members/lib/conda_envs/diogoamb/lib/python3.9/site-packages/scanpy/plotting/_tools/__init__.py in _rank_genes_groups_plot(adata, plot_type, groups, n_genes, groupby, values_to_plot, var_names, min_logfoldchange, key, show, save, return_fig, gene_symbols, **kwds); 578 from .._anndata import heatmap; 579 ; --> 580 return heatmap(; 581 adata,; 582",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1941:292,test,tested,292,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1941,1,['test'],['tested']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ### Description. I was installing the dev version of scanpy following the instructions [here](https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html#working-with-git) and [here](https://scanpy.readthedocs.io/en/stable/installation.html#development-version). However two tests : `test_paga_plots[master_paga_continuous_obs-func2]` and `test_pca_chunked` seem to fail on master. . ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```bash; git clone https://github.com/scverse/scanpy.git; cd scanpy; git submodule update --init --recursive; conda create --name scanpy-dev python=3.8; conda activate scanpy-dev; pip install -e '.[dev,doc,test]'; pytest; ```. ```pytb; =========================================================================================== FAILURES ============================================================================================; _______________________________________________________________________ test_paga_plots[master_paga_continuous_obs-func2] _______________________________________________________________________. image_comparer = <function image_comparer.<locals>.make_comparer at 0x7fbbf032dc10>; pbmc = AnnData object with n_obs × n_vars = 700 × 765; obs: 'bulk_labels', 'n_genes', 'percent_mito', 'n_counts', 'S_score...roups', 'paga', 'bulk_labels_sizes'; obsm: 'X_pca', 'X_umap'; varm: 'PCs'; obsp: 'distances', 'connectivities'; test_id = 'master_paga_continuous_obs', func = functools.partial(<function paga at 0x7fc009276e50>, color='cool_feature'). @needs_igraph; @pytest.mark.parametrize(; ""test_id,fun",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2459:503,test,tests,503,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2459,1,['test'],['tests']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ------it is easy for v1.9.1 out of memory.; I have the same data(200000x20000), the RAM of my compute is 64 GB, and the v1.8 can cope it easy, but the v1.9.1 is easy to occur the memoryError from the sc.read('./xxx.h5ad'). **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data); sc.read('./xxx.h5ad'); ```python; # Your code here; ```. ```pytb; [Paste the error output produced by the above code here]; ```. #### Versions; v1.9.1; <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>; ![image](https://user-images.githubusercontent.com/50618480/170998448-db4300d9-54f0-4f03-b2be-7f6880006b29.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2266:897,log,logging,897,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2266,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ### Minimal code sample (that we can copy&paste without having any data). This issue is not yet visible in any builds, since the error fixed by https://github.com/scverse/anndata/pull/970 prevents running the tests properly. Once that PR’s fix is released in a stable anndata version, we’ll start seeing this error unless we fix it first. (the minimal tests + anndata dev don’t have dask, so we don’t see the error there either). ```console; $ pip install dask; $ pytest -k test_normalize_total; ```. The error happens in this line:. https://github.com/scverse/scanpy/blob/3e3427d0072e82144711b581113ee10b873a1ba3/scanpy/preprocessing/_normalization.py#L186. i.e. in this expression: `adata.var_names[~gene_subset]`, where `gene_subset` is a `dask.array<invert, shape=(3,), dtype=bool, chunksize=(3,), chunktype=numpy.ndarray>`. ```pytb; IndexError: too many indices for array: array is 1-dimensional, but 3 were indexed; ```. The traceback pytest shows is a bit incorrect and shows this line instead:. https://github.com/scverse/scanpy/blob/3e3427d0072e82144711b581113ee10b873a1ba3/scanpy/preprocessing/_normalization.py#L185. ```pytb; ./scanpy/tests/test_normalization.py::test_normalize_total[dask-array-int64] Failed: [undefined]IndexError: too many indices for array: array is 1-dimensional, but 3 were indexed; typ = <function from_array at 0x7f6c35f8d940>, dtype = 'int64'. @pytest.mark.parametrize('dtype', ['float32', 'int64']); def test_normalize_total(typ, dtype):; adata = AnnData(typ(X_total), dtype=dtype); sc.pp.normalize_total(adata, key_added='n_counts'); assert np.allclose(np.ravel(adata.X.sum(axis=1)), [3.0, 3.0, 3.0]); sc.pp.normalize_total(adata, target_sum=1, key_added='n_counts2'); assert np.allclose(np.ravel(adata.X.sum(axis=1)), [1.0, 1.0, 1.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2465:438,test,tests,438,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2465,2,['test'],['tests']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; ax = sc.pl.tracksplot(adata, markers, groupby = ""seurat_clusters"") ; adata.obs[""seurat_clusters""].dtype.name != 'category'; ```. ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-33-097156e92bcf> in <module>; ----> 1 ax = sc.pl.tracksplot(adata, markers, groupby = ""seurat_clusters""). D:\python\empty for python\lib\site-packages\scanpy\plotting\_anndata.py in tracksplot(adata, var_names, groupby, use_raw, log, dendrogram, gene_symbols, var_group_positions, var_group_labels, layer, show, save, figsize, **kwds); 1304 if groupby not in adata.obs_keys() or adata.obs[groupby].dtype.name != 'category':; 1305 raise ValueError(; -> 1306 'groupby has to be a valid categorical observation. '; 1307 f'Given value: {groupby}, valid categorical observations: '; 1308 f'{[x for x in adata.obs_keys() if adata.obs[x].dtype.name == ""category""]}'. ValueError: groupby has to be a valid categorical observation. Given value: seurat_clusters, valid categorical observations: []. Ture; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1414:1004,log,log,1004,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1414,2,['log'],"['log', 'logging']"
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; categories_order=['0','1','9','8','2','5','4','7','3','6']; sc.pl.tracksplot(adata,markers,groupby='leiden',vmax=3,categories_order=categories_order); ```. ```pytb; [Paste the error output produced by the above code here]; ```; ![image](https://user-images.githubusercontent.com/50618480/166931336-26e4431a-7bdb-41b4-a575-69aa5e9ef948.png); I can not get the order as ['0','1','9','8','2','5','4','7','3','6']; #### Versions; 1.9.1; <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2250:971,log,logging,971,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2250,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.experimental.pp.highly_variable_genes(; placenta, flavor=""pearson_residuals"", n_top_genes=2000, layer='raw', batch_key='sample'; ); ```. ```pytb; AttributeError: module 'scanpy' has no attribute 'experimental'; ```. #### Versions. <details>. scanpy==1.9.1 anndata==0.8.0 umap==0.5.2 numpy==1.21.5 scipy==1.8.0 pandas==1.4.1 scikit-learn==1.0.2 statsmodels==0.13.2 python-igraph==0.9.9 pynndescent==0.5.6. </details>. I have used sc.experimental for a time and it went well with version 1.7.2. ; Today I got this error, I thought it could be the version problem and I checked the experimental is in the main branch of version 1.9.1 on github, so I updated it to version 1.9.1. ; But it still gets the same error. Would this be due to the jupyterlab? (But I didn't change anything in the environment, it went well with this jupyter before). And I have the full set of files from the main branch like this; ```; /mnt/data/hong/anaconda3/envs/scanpy/lib/python3.10/site-packages/scanpy/; ├── cli.py; ├── _compat.py; ├── datasets; ├── experimental; ├── external; ├── get; ├── __init__.py; ├── logging.py; ├── __main__.py; ├── _metadata.py; ├── metrics; ├── neighbors; ├── plotting; ├── preprocessing; ├── __pycache__; ├── queries; ├── readwrite.py; ├── _settings.py; ├── sim_models; ├── tools; └── _utils; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2378:1590,log,logging,1590,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2378,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. pre_existing_clusters argument doesn't work. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```. ```pytb; KeyError Traceback (most recent call last); <ipython-input-207-326a4b3ee327> in <module>(); 1 sce.pp.hashsolo(adata, sample_to_column.keys(),; 2 number_of_noise_barcodes=1, pre_existing_clusters='leiden',; ----> 3 priors = [0.01, 0.6, 0.39],). /home/nicholas/repos/scanpy/scanpy/external/pp/_hashsolo.py in hashsolo(cell_hashing_adata, cell_hashing_columns, priors, pre_existing_clusters, clustering_data, resolutions, number_of_noise_barcodes, inplace); 249 unique_cluster_features = np.unique(cell_hashing_adata.obs[cluster_features]); 250 for cluster_feature in unique_cluster_features:; --> 251 cluster_feature_bool_vector = cell_hashing_adata.obs[cluster_features == cluster_feature]```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1482:1323,log,logging,1323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1482,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. 1. The documentation of `sc.tl.tsne` and `sc.external.tl.phate` weren't updated to indicate that `X_{tsne,phate}` are `obs*m*` fields; 2. The documentation of both `sc.tl.tsne` and `sc.tl.umap` don't indicate the addition of the `uns` dictionary with the details of the embedding parameters; 3. The `uns` dictionaries returned by `sc.tl.tsne` and `sc.tl.umap` don't seem to follow the same logic: tsne's param dictionary holds most of the adjustable parameters (even irrelevant ones like `n_jobs`), while the umap dictionary holds only a and b parameters.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2408:619,log,logic,619,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2408,1,['log'],['logic']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. Hi,. My understanding of the ""groups"" argument in sc.tl.rank_genes_groups is that it subsets the data and then performs the differential expression testing. I.e. if I have clusters 1 to 10, and I set groups=[1,2], the output will give me the genes differentially expressed in cluster 1 as compared to cluster 2 (and 2 vs 1).; However, the current function still compares to all other clusters (see below). ; Is that the intention? If so, we should update the readthedocs I think.; If this is a bug, let's try to fix it :) I can take a look myself in that case. Just wanted to check if I misinterpreted the readthedocs. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc. # load data; adata = sc.datasets.pbmc68k_reduced(); # cluster; sc.tl.leiden(adata, key_added=""clusters"", resolution=0.5); print(""Clusters:"", sorted(set(adata.obs[""clusters""]))); # do test with groups=""all""; sc.tl.rank_genes_groups(adata, groupby=""clusters"", groups=""all""); # store results, sorting genes by logfc; genes_cluster_0_vs_all = [; (name, logfc); for logfc, name in sorted(; zip(; adata.uns[""rank_genes_groups""][""logfoldchanges""][""0""],; adata.uns[""rank_genes_groups""][""names""][""0""],; ),; reverse=True,; ); ]; # do test with groups=[""0"",""1""], i.e. only a subset of the clusters; sc.tl.rank_genes_groups(adata, groupby=""clusters"", groups=[""0"", ""1""]); # store result; genes_cluster_0_vs_1 = [; (name, logfc); for logfc, name in sorted(; zip(; adata.uns[""rank_genes_groups""][""logfoldchanges""][""0""],; adata.uns[""rank_genes_groups""][""names""][""0""],; ),; reverse=True,; ); ]; # print top 5 genes and logfcs for both,; # they're the same and should not be; print(""Top genes cluster 0 versus all:\n"", genes_cluster_0_vs_all[:5]); print(""Top genes ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1519:377,test,testing,377,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1519,1,['test'],['testing']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. The URL specified for the included `pbmc3k` data is throwing a 404. URL: https://falexwolf.me/data/pbmc3k_raw.h5ad. I happen to use this data for lots of unit and regression tests (probably not the best idea on my part). . Is there by chance a backup location I could mirror the same object from?. ### Minimal code sample (that we can copy&paste without having any data). ```python; import scanpy as sc; adata = sc.datasets.pbmc3k(); ```. ```pytb; ... 'http', request, response, code, msg, hdrs); File ""/home/jacob/bin/anaconda/envs/scnym_public/lib/python3.7/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/home/jacob/bin/anaconda/envs/scnym_public/lib/python3.7/urllib/request.py"", line 503, in _call_chain; result = func(*args); File ""/home/jacob/bin/anaconda/envs/scnym_public/lib/python3.7/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```. #### Versions. -----; anndata 0.7.4; scanpy 1.8.2; sinfo 0.3.4; -----; PIL 8.4.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; google NA; h5py 2.10.0; igraph 0.9.7; joblib 1.1.0; kiwisolver 1.3.2; leidenalg 0.8.0; llvmlite 0.32.1; louvain 0.7.0; matplotlib 3.4.3; mpl_toolkits NA; natsort 7.1.1; numba 0.49.1; numexpr 2.7.3; numpy 1.18.2; packaging 21.0; pandas 1.0.4; pkg_resources NA; pyparsing 2.4.7; pytz 2021.3; scipy 1.4.1; setuptools_scm NA; six 1.14.0; sklearn 0.22.2.post1; tables 3.6.1; texttable 1.6.4; typing_extensions NA; wcwidth 0.2.5; yaml 5.3.1; zipp NA; -----; Python 3.7.10 | packaged by conda-forge | (default, Oct 13 2021, 21:01:18) [GCC 9.4.0]; Linux-4.15.0-142-generic-x86_64-with-debian-buster-sid; 16 logical CPU cores, x86_64; -----; Session information ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2124:403,test,tests,403,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2124,1,['test'],['tests']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. To reproduce this issue:; 1. download the public 10x dataset here (https://cf.10xgenomics.com/samples/cell-exp/2.1.0/hgmm_12k/hgmm_12k_raw_gene_bc_matrices_h5.h5) ; 2. run the following. ```python; import scanpy as sc. adata_human = sc.read_10x_h5('hgmm_12k_raw_gene_bc_matrices_h5.h5', genome='hg19'); adata_mouse = sc.read_10x_h5('hgmm_12k_raw_gene_bc_matrices_h5.h5', genome='mm10'). assert (adata_human.X != adata_mouse.X).sum() > 0, 'these count matrices are equal'; ```. which produces the assertion error. We see that the loaded data is the same regardless of `'genome'` argument. A look at the file itself shows this is not the case (notice the number of gene names, which are different for hg19 and mm10):. ![image](https://user-images.githubusercontent.com/10214815/165848884-0ef5c172-83f9-4ead-9687-0acadb496e87.png). #### Versions. Also I think I can say confidently that this was working fine as of scanpy 1.8.1. <details>. -----; anndata 0.8.0; scanpy 1.9.1; -----; PIL 8.1.0; appnope 0.1.2; backcall 0.2.0; cached_property 1.5.2; cellbender NA; cffi 1.14.5; colorcet 3.0.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 5.0.9; fontTools 4.33.3; h5py 3.2.0; igraph 0.9.10; ipykernel 5.5.5; ipython_genutils 0.2.0; ipywidgets 7.6.3; jedi 0.18.0; joblib 1.0.1; kiwisolver 1.3.1; leidenalg 0.8.10; llvmlite 0.38.0; lxml 4.8.0; matplotlib 3.5.1; matplotlib_inline NA; mkl 2.3.0; mpl_toolkits NA; natsort 7.1.1; numba 0.55.1; numexpr 2.7.3; numpy 1.19.2; packaging 20.9; pandas 1.2.3; param 1.12.1; parso 0.8.2; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.18; psutil 5.8.0; ptyprocess 0.7.0; pycparser 2.20; pygments 2.8.0; pynndescent 0.5.6; pyparsing 2.4.7; pytz 2021.1; scipy 1.6.1; seaborn 0.11.2; session_info 1.0.0; ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2246:616,assert,assert,616,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2246,2,['assert'],"['assert', 'assertion']"
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. When scanpy gets installed with the latest version of `importlib_metadata` (2.0), the ; command `sc.logging.print_versions()` fails with the following error: . ```pytb; WARNING: If you miss a compact list, please try `print_header`!; Traceback (most recent call last):; File ""/home/sturm/anaconda3/envs/scanpy_test/lib/python3.7/site-packages/sinfo/main.py"", line 195, in sinfo; mod_version = _find_version(mod.__version__); AttributeError: module 'importlib_metadata' has no attribute '__version__'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/sturm/anaconda3/envs/scanpy_test/lib/python3.7/site-packages/scanpy/logging.py"", line 161, in print_versions; sinfo(dependencies=True); File ""/home/sturm/anaconda3/envs/scanpy_test/lib/python3.7/site-packages/sinfo/main.py"", line 198, in sinfo; mod_version = _find_version(mod.version); File ""/home/sturm/anaconda3/envs/scanpy_test/lib/python3.7/site-packages/sinfo/main.py"", line 42, in _find_version; return mod_version_attr(); TypeError: version() missing 1 required positional argument: 'distribution_name'; ```. According to the `importlib_metadata` changelog, the `__version__` attribute has been removed from the package: . ```; =========================; importlib_metadata NEWS; =========================. v2.0.0; ======. * ``importlib_metadata`` no longer presents a; ``__version__`` attribute. Consumers wishing to; resolve the version of the package should query it; directly with; ``importlib_metadata.version('importlib-metadata')``.; Closes #71.; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1437:329,log,logging,329,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1437,2,['log'],['logging']
Testability,- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. When sorting the adata object using adata.var.sort_index(inplace=True) the adata.X is not sorting accordingly (see example below). ![Capture](https://user-images.githubusercontent.com/104442627/208289144-0572dca3-7a36-435a-955c-3ec33250f105.PNG). ```python. import numpy as np; import pandas as pd; import scanpy as sc; import matplotlib.pyplot as plt; sc.settings.verbosity = 3; sc.logging.print_header(). adata = sc.datasets.pbmc3k(); adata.to_df()['MPO'].sum(); adata.var.sort_index(inplace=True); adata.to_df()['MPO'].sum(). ```. #### Versions. <details>. -----; anndata 0.8.0; scanpy 1.9.1; -----; PIL 9.2.0; asttokens NA; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; cffi 1.15.1; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; entrypoints 0.4; executing 0.8.3; google NA; h5py 3.7.0; hypergeom_ufunc NA; igraph 0.9.11; ipykernel 6.17.1; ipython_genutils 0.2.0; ipywidgets 8.0.2; jedi 0.18.1; joblib 1.2.0; kiwisolver 1.4.4; leidenalg 0.8.10; llvmlite 0.39.1; loompy 3.0.7; matplotlib 3.6.0; matplotlib_inline NA; mpl_toolkits NA; natsort 8.2.0; nbinom_ufunc NA; ncf_ufunc NA; numba 0.56.2; numpy 1.23.3; numpy_groupies 0.9.19; packaging 21.3; pandas 1.4.4; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; platformdirs 2.6.0; prompt_toolkit 3.0.20; psutil 5.9.4; ptyprocess 0.7.0; pure_eval 0.2.2; pycparser 2.21; pydev_ipython NA; pydevconsole NA; pydevd 2.6.0; pydevd_concurrency_analyser NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.11.2; pynndescent 0.5.7; pyparsing 3.0.9; pytz 2022.2.1; scipy 1.9.1; scvelo 0.2.4; session_info 1.0.0; setuptools_scm NA; six 1.16.0; sklearn 1.1.2; stack_data 0.2.0; statsmodels 0.13.2; texttable 1.6.4; threadpoolctl 3.1.0; tor,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2382:612,log,logging,612,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2382,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. when running `sc.tl.rank_genes_groups` with `method='logreg'` the `logfoldchanges` are not generated. However, this field is; required by `sc.get.rank_genes_groups_df`. . ```python; adata = sc.datasets.pbmc68k_reduced(); sc.tl.rank_genes_groups(adata, 'bulk_labels', method='logreg'); sc.get.rank_genes_groups_df(adata, 'Dendritic'); ```. ```pytb; /scanpy/scanpy/get.py in rank_genes_groups_df(adata, group, key, pval_cutoff, log2fc_min, log2fc_max, gene_symbols); 56 d = pd.DataFrame(); 57 for k in ['scores', 'names', 'logfoldchanges', 'pvals', 'pvals_adj']:; ---> 58 d[k] = adata.uns[key][k][group]; 59 if pval_cutoff is not None:; 60 d = d[d[""pvals_adj""] < pval_cutoff]; KeyError: 'logfoldchanges'; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1530:282,log,logreg,282,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1530,6,['log'],"['logfoldchanges', 'logging', 'logreg']"
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---; **Hello Scanpy,; When I'm running sc.pp.highly_variable_genes(adata, n_top_genes=5000, flavor='seurat_v3'), it asks me to install scikit-misc, which is already installed. Please see the picture below.; Could you please help me to solve this issue?; Thanks!; Best,; YJ**; **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```; ![image](https://user-images.githubusercontent.com/75048821/145125005-64f8607e-9cb0-4740-8dca-7c80e35d30ef.png). ```pytb; [Paste the error output produced by the above code here]; ```. #### Versions. <details>3.8. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>scanpy==1.8.2 anndata==0.7.8 umap==0.5.2 numpy==1.20.3 scipy==1.7.2 pandas==1.3.4 scikit-learn==1.0.1 statsmodels==0.13.1 python-igraph==0.9.8 pynndescent==0.5.5; scvelo==0.2.4 scanpy==1.8.2 anndata==0.7.8 loompy==3.0.6 numpy==1.20.3 scipy==1.7.2 matplotlib==3.5.0 sklearn==1.0.1 pandas==1.3.4 ; cellrank==1.5.0 scanpy==1.8.2 anndata==0.7.8 numpy==1.20.3 numba==0.54.1 scipy==1.7.2 pandas==1.3.4 pygpcca==1.0.2 scikit-learn==1.0.1 statsmodels==0.13.1 python-igraph==0.9.8 scvelo==0.2.4 pygam==0.8.0 matplotlib==3.5.0 seaborn==0.11.2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2073:1035,log,logging,1035,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2073,1,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. ---; module 'scanpy' has no attribute 'tl'. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```; adata_sc=diopy.input.read_h5(file ='/home/shpc_100862/xyh_desktop/2022918mouse_data/Reference/st_CTXmd.h5'); scanpy.tl.rank_genes_groups(adata_sc,groupby=""annotation"",use_raw=False); markers_df=pd.DataFrame(adata_sc.uns[""rank_genes_groups""][""names""]).iloc[0:100,:]; markers=list(np.unique(markers_df.melt().value.values)); ```pytb; [Paste the error output produced by the above code here]; ```; AttributeError Traceback (most recent call last); Input In [18], in <cell line: 4>(); 8 adata_st=diopy.input.read_h5(file = path); 9 adata_sc=diopy.input.read_h5(file ='/home/shpc_100862/xyh_desktop/2022918mouse_data/Reference/st_CTXmd.h5'); ---> 10 scanpy.tl.rank_genes_groups(adata_sc,groupby=""annotation"",use_raw=False); 11 markers_df=pd.DataFrame(adata_sc.uns[""rank_genes_groups""][""names""]).iloc[0:100,:]; 12 markers=list(np.unique(markers_df.melt().value.values)). AttributeError: module 'scanpy' has no attribute 'tl'; #### Versions; 1.9.1; <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]; AttributeError: module 'scanpy' has no attribute 'logging'; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2343:1542,log,logging,1542,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2343,2,['log'],['logging']
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] (optional) I have confirmed this bug exists on the master branch of scanpy. In the test of the flavor, the sorting over batches is correct with respect to how Seurat actually does it:. https://github.com/theislab/scanpy/blob/83f90141fd18943a1795772d3d39f4e9eefd65c3/scanpy/tests/test_highly_variable_genes.py#L138-L142. First sort by number of batches it's called a HVG and then second break ties by the median rank. In the actual function, it's the reverse:. https://github.com/theislab/scanpy/blob/83f90141fd18943a1795772d3d39f4e9eefd65c3/scanpy/preprocessing/_highly_variable_genes.py#L136-L143. I propose we put in the fix (which is currently being tested with high accuracy). The simplest solution would be to call it a new flavor. Ideally this would get in as soon as possible as this is a high volume function from what I understand.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2088:231,test,test,231,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2088,3,['test'],"['test', 'tested', 'tests']"
Testability,"- [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [x] **Updated:** I have confirmed this bug exists on the master branch of scanpy. ### Minimal code sample. Start from a fresh venv. (Tested on Python 3.9.2 on Debian Bullseye.). ```; (new-venv) $ pip install scanpy==1.9.1; ```. Then from within that venv:. ```python; import scanpy; ```. ```pytb; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File "".../site-packages/scanpy/__init__.py"", line 16, in <module>; from . import plotting as pl; File "".../site-packages/scanpy/plotting/__init__.py"", line 1, in <module>; from ._anndata import (; File "".../site-packages/scanpy/plotting/_anndata.py"", line 28, in <module>; from . import _utils; File "".../site-packages/scanpy/plotting/_utils.py"", line 35, in <module>; class _AxesSubplot(Axes, axes.SubplotBase, ABC):; TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases; ```. ### Versions. You can't get to `scanpy.logging.print_versions()` on account of the crash.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2411:277,Test,Tested,277,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2411,2,"['Test', 'log']","['Tested', 'logging']"
Testability,"- [x] It would be better to refer to the anndata docs for the AnnData class (http://anndata.readthedocs.io/en/latest/anndata.AnnData.html) whenever `:class:~scanpy.api.AnnData` appears. `:class:AnnData <http://anndata.readthedocs.io/en/latest/anndata.AnnData.html>` has the correct css style, but does not hyperlink. Probably a solution via http://www.sphinx-doc.org/en/1.5.1/ext/extlinks.html together with the definition of an `:extclass:` role that inherits the `:class:` properties would be the correct way to do it.; - [x] A few references, like ""[Traag1723]"" are not rendered correctly... Who knows what's going on there. I couldn't figure it out with a few tests... Let's see.; - [x] the Neighbors class docstring doesn't render properly; - [ ] changing to the slim docstring style from the numpy docstring style messes up readability when calling the docstring lookup in jupyter or other IDEs, hence I'd advocate for maintaining this information. ## AnnData; - [x] `__init__` method appears in `AnnData`; - [x] `attributes` appear after `methods`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/58:664,test,tests,664,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/58,1,['test'],['tests']
Testability,- [x] Tests included or not required because: comment/docstring nits; - [x] Release notes not necessary because: comment/docstring nits,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3311:6,Test,Tests,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3311,1,['Test'],['Tests']
Testability,- [x] leiden/louvain tests are fixed by 71fbae4 circumventing pandas-dev/pandas#31499; - [x] `test_read_10x[mtx_path1-h5_path1]` fixed by theislab/anndata#313; - [x] `test_plotting.test_clustermap` is caused by seaborn mwaskom/seaborn#1953,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1015:21,test,tests,21,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015,1,['test'],['tests']
Testability,"- [√] I have checked that this issue has not already been reported.; - [√] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---; small bug report:; https://github.com/theislab/scanpy/blob/fb9e12f36b5c600913fa6243819d1575906c384e/scanpy/tools/_rank_genes_groups.py; line 538 wrong error raised when `use_raw=True`; ```python; if use_raw is None:; use_raw = adata.raw is not None; elif use_raw is True and adata.raw is not None:; raise ValueError(""Received `use_raw=True`, but `adata.raw` is empty.""); ```; Second `not` should be removed ,Corrected codes should be; ```python; if use_raw is None:; use_raw = adata.raw is not None; elif use_raw is True and adata.raw is None:; raise ValueError(""Received `use_raw=True`, but `adata.raw` is empty.""); ```; **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. #### Versions; this bug appeard in v1.8.0. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1929:1118,log,logging,1118,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1929,1,['log'],['logging']
Testability,"------ Captured stderr call -----------------------------------------------------------------------------------------------------; normalizing by total count per cell; filtered out dask.array<sum-aggregate, shape=(), dtype=int64, chunksize=(), chunktype=numpy.ndarray> cells that have less than 1 counts; finished (0:00:00): normalized adata.X and added 'n_counts', counts per cell before normalization (adata.obs); normalizing by total count per cell; filtered out 1 cells that have less than 1 counts; finished (0:00:00): normalized adata.X and added 'n_counts', counts per cell before normalization (adata.obs); =================================================================================================== short test summary info ====================================================================================================; FAILED scanpy/tests/test_preprocessing_distributed.py::TestPreprocessingDistributed::test_normalize_per_cell[dask] - AssertionError: ; ======================================================================================== 1 failed, 985 deselected, 11 warnings in 3.74s ========================================================================================; ```. ### Versions. <details>. ```; -----; anndata 0.9.0rc2.dev43+g21a76088; scanpy 1.10.0.dev117+g6b9e734f; -----; PIL 9.1.1; asciitree NA; awkward 2.2.1; awkward_cpp NA; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; cloudpickle 2.2.1; cycler 0.10.0; cython_runtime NA; dask 2023.5.0; dateutil 2.8.2; defusedxml 0.7.1; entrypoints 0.4; fasteners 0.17.3; h5py 3.7.0; hypergeom_ufunc NA; igraph 0.10.4; importlib_resources NA; jinja2 3.1.2; joblib 1.1.0; kiwisolver 1.4.3; leidenalg 0.9.1; llvmlite 0.38.1; markupsafe 2.1.1; matplotlib 3.7.1; mpl_toolkits NA; natsort 8.1.0; nbinom_ufunc NA; numba 0.55.2; numcodecs 0.10.2; numpy 1.22.4; packaging 21.3; pandas 2.0.2; pkg_resources NA; psutil 5.9.1; pyparsing 3.0.9; pytz 2022.1; scipy 1.8.1; session_info 1.0.0; setuptools 67.8.0; setuptools_scm NA; s",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:4289,Test,TestPreprocessingDistributed,4289,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,2,"['Assert', 'Test']","['AssertionError', 'TestPreprocessingDistributed']"
Testability,"---------------------------------------------------------------------------; KeyError Traceback (most recent call last); Input In [13], in <cell line: 2>(); 1 # Calculate marker genes; ----> 2 sc.tl.rank_genes_groups(adata, groupby='leiden_r1.0', key_added='rank_genes_all', method='wilcoxon', use_raw=False). File /usr/local/lib/python3.8/dist-packages/scanpy/tools/_rank_genes_groups.py:590, in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 580 adata.uns[key_added] = {}; 581 adata.uns[key_added]['params'] = dict(; 582 groupby=groupby,; 583 reference=reference,; (...); 587 corr_method=corr_method,; 588 ); --> 590 test_obj = _RankGenes(adata, groups_order, groupby, reference, use_raw, layer, pts); 592 if check_nonnegative_integers(test_obj.X) and method != 'logreg':; 593 logg.warning(; 594 ""It seems you use rank_genes_groups on the raw count data. ""; 595 ""Please logarithmize your data before calling rank_genes_groups.""; 596 ). File /usr/local/lib/python3.8/dist-packages/scanpy/tools/_rank_genes_groups.py:93, in _RankGenes.__init__(self, adata, groups, groupby, reference, use_raw, layer, comp_pts); 82 def __init__(; 83 self,; 84 adata,; (...); 90 comp_pts=False,; 91 ):; ---> 93 if 'log1p' in adata.uns_keys() and adata.uns['log1p']['base'] is not None:; 94 self.expm1_func = lambda x: np.expm1(x * np.log(adata.uns['log1p']['base'])); 95 else:. KeyError: 'base'; ```. #### Versions. <details>. -----; anndata 0.8.0rc1; scanpy 1.8.2; sinfo 0.3.4; -----; PIL 9.0.1; anndata2ri 1.0.6; annoy NA; asttokens NA; backcall 0.2.0; backports NA; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; debugpy 1.5.1; decorator 5.1.1; defusedxml 0.7.1; dunamai 1.11.0; entrypoints 0.4; executing 0.8.3; get_version 3.5.4; h5py 3.6.0; hypergeom_ufunc NA; igraph 0.9.9; ipykernel 6.9.1; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.18.1; jinja2 3.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2181:4380,log,logarithmize,4380,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2181,1,['log'],['logarithmize']
Testability,"------------------; AxisError Traceback (most recent call last); <ipython-input-55-c0d016811ded> in <module>; ----> 1 sc.pp.regress_out(adata, ['n_counts', 'percent_mito']). ~/anaconda3/envs/scanpy/lib/python3.6/site-packages/scanpy/preprocessing/_simple.py in regress_out(adata, keys, n_jobs, copy); 817 # split the adata.X matrix by columns in chunks of size n_chunk; 818 # (the last chunk could be of smaller size than the others); --> 819 chunk_list = np.array_split(adata.X, n_chunks, axis=1); 820 if variable_is_categorical:; 821 regressors_chunk = np.array_split(regressors, n_chunks, axis=1). <__array_function__ internals> in array_split(*args, **kwargs). ~/anaconda3/envs/scanpy/lib/python3.6/site-packages/numpy/lib/shape_base.py in array_split(ary, indices_or_sections, axis); 782 ; 783 sub_arys = []; --> 784 sary = _nx.swapaxes(ary, axis, 0); 785 for i in range(Nsections):; 786 st = div_points[i]. <__array_function__ internals> in swapaxes(*args, **kwargs). ~/anaconda3/envs/scanpy/lib/python3.6/site-packages/numpy/core/fromnumeric.py in swapaxes(a, axis1, axis2); 595 ; 596 """"""; --> 597 return _wrapfunc(a, 'swapaxes', axis1, axis2); 598 ; 599 . ~/anaconda3/envs/scanpy/lib/python3.6/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds); 56 bound = getattr(obj, method, None); 57 if bound is None:; ---> 58 return _wrapit(obj, method, *args, **kwds); 59 ; 60 try:. ~/anaconda3/envs/scanpy/lib/python3.6/site-packages/numpy/core/fromnumeric.py in _wrapit(obj, method, *args, **kwds); 45 except AttributeError:; 46 wrap = None; ---> 47 result = getattr(asarray(obj), method)(*args, **kwds); 48 if wrap:; 49 if not isinstance(result, mu.ndarray):. AxisError: axis1: axis 1 is out of bounds for array of dimension 0; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.5.post3 anndata==0.7.1 umap==0.3.10 numpy==1.18.1 scipy==1.4.1 pandas==0.25.3 scikit-learn==0.22.1 statsmodels==0.11.0 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1010:2332,log,logging,2332,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1010,1,['log'],['logging']
Testability,"---; anndata 0.7.8; scanpy 1.8.2; sinfo 0.3.1; -----; PIL 8.4.0; anndata 0.7.8; asciitree NA; attr 21.2.0; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; cloudpickle 2.0.0; colorama 0.4.4; concurrent NA; cycler 0.10.0; cython_runtime NA; dask 2021.11.1; dateutil 2.8.0; debugpy 1.5.1; decorator 5.1.0; defusedxml 0.7.1; encodings NA; entrypoints 0.3; fasteners NA; fsspec 2021.11.0; genericpath NA; h5py 3.4.0; idna 3.1; igraph 0.9.8; ipykernel 6.5.0; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.18.0; jinja2 3.0.3; joblib 1.1.0; jsonschema 4.2.1; kiwisolver 1.3.2; leidenalg 0.8.8; llvmlite 0.36.0; louvain 0.7.0; markupsafe 2.0.1; matplotlib 3.4.3; mpl_toolkits NA; natsort 8.0.0; nbformat 5.1.3; nbinom_ufunc NA; ntpath NA; numba 0.53.1; numcodecs 0.9.1; numexpr 2.7.3; numpy 1.21.4; opcode NA; packaging 21.0; pandas 1.3.4; parso 0.8.2; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; posixpath NA; prometheus_client NA; prompt_toolkit 3.0.22; psutil 5.8.0; ptyprocess 0.7.0; pvectorc NA; pyarrow 9.0.0; pydev_ipython NA; pydevconsole NA; pydevd 2.6.0; pydevd_concurrency_analyser NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pydoc_data NA; pyexpat NA; pygments 2.10.0; pyparsing 3.0.6; pyrsistent NA; pytz 2021.3; scanpy 1.8.2; scipy 1.7.2; seaborn 0.11.2; send2trash NA; setuptools_scm NA; sinfo 0.3.1; six 1.16.0; sklearn 1.0.1; sphinxcontrib NA; sre_compile NA; sre_constants NA; sre_parse NA; statsmodels 0.13.1; tables 3.6.1; terminado 0.12.1; texttable 1.6.4; threadpoolctl 3.0.0; tlz 0.11.2; toolz 0.11.2; tornado 6.1; traitlets 5.1.1; typing_extensions NA; wcwidth 0.2.5; xmlrpc NA; yaml 6.0; zarr 2.10.2; zmq 22.3.0; -----; IPython 7.29.0; jupyter_client 7.0.6; jupyter_core 4.9.1; notebook 6.4.5; -----; Python 3.9.7 | packaged by conda-forge | (default, Sep 29 2021, 19:20:46) [GCC 9.4.0]; Linux-4.18.0-80.7.1.el8_0.x86_64-x86_64-with-glibc2.17; 224 logical CPU cores, x86_64; -----; Session information updated at 2022-10-24 15:07. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2361:2674,log,logical,2674,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2361,1,['log'],['logical']
Testability,"-0.14190508, -0.20776471, ..., -0.20877847,; -0.10354204, 0.14313072],; [ 0.1960011 , 0.06290449, -0.07691702, ..., -0.34954828,; 2.5718384 , 2.468825 ],; [-0.53571457, -0.13106212, -0.20085879, ..., -0.21621887,; -0.10943384, 0.05686853]], dtype=float32); ```. ### Minimal code sample (that we can copy&paste without having any data). ```python; # find marker genes; sc.tl.rank_genes_groups(adata, 'louvain', method='t-test', reference = 'rest'); ```. ```pytb; ranking genes; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-50-04ed1c1ca569> in <module>; 1 # find marker genes; 2 #pdb.set_trace(); ----> 3 sc.tl.rank_genes_groups(adata, 'louvain', method='t-test', reference = 'rest'); 4 sc.pl.rank_genes_groups(adata, n_genes=25, sharey=False); 5 . /usr/local/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 581 logg.debug(f'with sizes: {np.count_nonzero(test_obj.groups_masks, axis=1)}'); 582 ; --> 583 test_obj.compute_statistics(; 584 method, corr_method, n_genes_user, rankby_abs, tie_correct, **kwds; 585 ). /usr/local/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in compute_statistics(self, method, corr_method, n_genes_user, rankby_abs, tie_correct, **kwds); 376 if self.stats is None:; 377 idx = pd.MultiIndex.from_tuples([(group_name, first_col)]); --> 378 self.stats = pd.DataFrame(columns=idx); 379 ; 380 if n_genes_user is not None:. /usr/local/lib/python3.8/site-packages/pandas/core/frame.py in __init__(self, data, index, columns, dtype, copy); 433 ); 434 elif isinstance(data, dict):; --> 435 mgr = init_dict(data, index, columns, dtype=dtype); 436 elif isinstance(data, ma.MaskedArray):; 437 import numpy.ma.mrecords as mrecords. /usr/local/lib/python3.8/site-packages/pandas/core/internals/constr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2121:2516,log,logg,2516,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2121,1,['log'],['logg']
Testability,-1.8.0/scanpy/external/exporting.py; scanpy-1.8.0/scanpy/external/pl.py; scanpy-1.8.0/scanpy/external/pp/__init__.py; scanpy-1.8.0/scanpy/external/pp/_bbknn.py; scanpy-1.8.0/scanpy/external/pp/_dca.py; scanpy-1.8.0/scanpy/external/pp/_harmony_integrate.py; scanpy-1.8.0/scanpy/external/pp/_hashsolo.py; scanpy-1.8.0/scanpy/external/pp/_magic.py; scanpy-1.8.0/scanpy/external/pp/_mnn_correct.py; scanpy-1.8.0/scanpy/external/pp/_scanorama_integrate.py; scanpy-1.8.0/scanpy/external/pp/_scrublet.py; scanpy-1.8.0/scanpy/external/tl/__init__.py; scanpy-1.8.0/scanpy/external/tl/_harmony_timeseries.py; scanpy-1.8.0/scanpy/external/tl/_palantir.py; scanpy-1.8.0/scanpy/external/tl/_phate.py; scanpy-1.8.0/scanpy/external/tl/_phenograph.py; scanpy-1.8.0/scanpy/external/tl/_pypairs.py; scanpy-1.8.0/scanpy/external/tl/_sam.py; scanpy-1.8.0/scanpy/external/tl/_trimap.py; scanpy-1.8.0/scanpy/external/tl/_wishbone.py; scanpy-1.8.0/scanpy/get/__init__.py; scanpy-1.8.0/scanpy/get/get.py; scanpy-1.8.0/scanpy/logging.py; scanpy-1.8.0/scanpy/metrics/__init__.py; scanpy-1.8.0/scanpy/metrics/_gearys_c.py; scanpy-1.8.0/scanpy/metrics/_metrics.py; scanpy-1.8.0/scanpy/metrics/_morans_i.py; scanpy-1.8.0/scanpy/neighbors/__init__.py; scanpy-1.8.0/scanpy/plotting/__init__.py; scanpy-1.8.0/scanpy/plotting/_anndata.py; scanpy-1.8.0/scanpy/plotting/_baseplot_class.py; scanpy-1.8.0/scanpy/plotting/_docs.py; scanpy-1.8.0/scanpy/plotting/_dotplot.py; scanpy-1.8.0/scanpy/plotting/_matrixplot.py; scanpy-1.8.0/scanpy/plotting/_preprocessing.py; scanpy-1.8.0/scanpy/plotting/_qc.py; scanpy-1.8.0/scanpy/plotting/_rcmod.py; scanpy-1.8.0/scanpy/plotting/_stacked_violin.py; scanpy-1.8.0/scanpy/plotting/_tools/__init__.py; scanpy-1.8.0/scanpy/plotting/_tools/paga.py; scanpy-1.8.0/scanpy/plotting/_tools/scatterplots.py; scanpy-1.8.0/scanpy/plotting/_utils.py; scanpy-1.8.0/scanpy/plotting/palettes.py; scanpy-1.8.0/scanpy/preprocessing/__init__.py; scanpy-1.8.0/scanpy/preprocessing/_combat.py; scanpy-1.8.0/scanpy/prep,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1909:2042,log,logging,2042,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1909,1,['log'],['logging']
Testability,"-12 NaN (-0.00411, 0.205] 0.0 False; 32737 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False. [32738 rows x 5 columns]; >>> ; >>> # This raises ValueError again; >>> pbmc.obs['batch'] = 'A'; >>> column_index = pbmc.obs.columns.get_indexer(['batch']); >>> pbmc.obs.iloc[slice(pbmc.n_obs//2, None), column_index] = 'B'; >>> sc.pp.highly_variable_genes(pbmc, layer=""log_transformed"", flavor=""seurat"", subset=False, inplace=False, batch_key=""batch""); .venv/lib/python3.10/site-packages/scipy/sparse/_data.py:133: RuntimeWarning: overflow encountered in expm1; result = op(self._deduped_data()); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File "".venv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 459, in highly_variable_genes; hvg = _highly_variable_genes_single_batch(; File "".venv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 215, in _highly_variable_genes_single_batch; df['mean_bin'] = pd.cut(df['means'], bins=n_bins); File "".venv/lib/python3.10/site-packages/pandas/core/reshape/tile.py"", line 263, in cut; raise ValueError(; ValueError: cannot specify integer `bins` when input data contains infinity. ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. -----; anndata 0.8.0; scanpy 1.9.1; -----; PIL 9.3.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; google NA; h5py 3.7.0; joblib 1.2.0; kiwisolver 1.4.4; llvmlite 0.39.1; matplotlib 3.6.2; mpl_toolkits NA; natsort 8.2.0; numba 0.56.4; numpy 1.23.5; packaging 22.0; pandas 1.5.2; psutil 5.9.4; pyarrow 10.0.1; pyparsing 3.0.9; pytz 2022.7; scipy 1.9.3; session_info 1.0.0; sitecustomize NA; six 1.16.0; sklearn 1.2.0; threadpoolctl 3.1.0; typing_extensions NA; yaml 6.0; zoneinfo NA; -----; Python 3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]; Linux-5.15.0-57-generic-x86_64-with-glibc2.35; -----; Session information updated at 2023-01-09 18:53. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2396:5417,log,logging,5417,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2396,1,['log'],['logging']
Testability,"-packages/pynndescent/pynndescent_.py:967, in NNDescent._init_search_graph(self); 961 self._search_forest = [; 962 convert_tree_format(tree, self._raw_data.shape[0]); 963 for tree in rp_forest; 964 ]; 965 else:; 966 # convert the best trees into a search forest; --> 967 tree_scores = [; 968 score_linked_tree(tree, self._neighbor_graph[0]); 969 for tree in self._rp_forest; 970 ]; 971 if self.verbose:; 972 print(ts(), ""Worst tree score: {:.8f}"".format(np.min(tree_scores))). File ~/miniconda3/envs/test/lib/python3.10/site-packages/pynndescent/pynndescent_.py:968, in <listcomp>(.0); 961 self._search_forest = [; 962 convert_tree_format(tree, self._raw_data.shape[0]); 963 for tree in rp_forest; 964 ]; 965 else:; 966 # convert the best trees into a search forest; 967 tree_scores = [; --> 968 score_linked_tree(tree, self._neighbor_graph[0]); 969 for tree in self._rp_forest; 970 ]; 971 if self.verbose:; 972 print(ts(), ""Worst tree score: {:.8f}"".format(np.min(tree_scores))). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:487, in _DispatcherBase._compile_for_args(self, *args, **kws); 485 e.patch_message('\n'.join((str(e).rstrip(), help_msg))); 486 # ignore the FULL_TRACEBACKS config, this needs reporting!; --> 487 raise e; 488 finally:; 489 self._types_active_call = []. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:420, in _DispatcherBase._compile_for_args(self, *args, **kws); 418 return_val = None; 419 try:; --> 420 return_val = self.compile(tuple(argtypes)); 421 except errors.ForceLiteralArg as e:; 422 # Received request for compiler re-entry with the list of arguments; 423 # indicated by e.requested_args.; 424 # First, check if any of these args are already Literal-ized; 425 already_lit_pos = [i for i in e.requested_args; 426 if isinstance(args[i], types.Literal)]. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:965, in Dispatcher.compile(self, sig); 963 with ev.trigger_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:3143,test,test,3143,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,"-packages\scanpy\preprocessing\simple.py in regress_out(adata, keys, n_jobs, copy); 781 ; 782 else:; --> 783 res = list(map(_regress_out_chunk, tasks)); 784 ; 785 # res is a list of vectors (each corresponding to a regressed gene column). ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\scanpy\preprocessing\simple.py in _regress_out_chunk(data); 798 ; 799 responses_chunk_list = []; --> 800 import statsmodels.api as sm; 801 from statsmodels.tools.sm_exceptions import PerfectSeparationError; 802 . ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\statsmodels\api.py in <module>(); 3 from . import tools; 4 from .tools.tools import add_constant, categorical; ----> 5 from . import regression; 6 from .regression.linear_model import OLS, GLS, WLS, GLSAR; 7 from .regression.recursive_ls import RecursiveLS. ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\statsmodels\regression\__init__.py in <module>(); ----> 1 from .linear_model import yule_walker; 2 ; 3 from statsmodels import PytestTester; 4 test = PytestTester(); 5 . ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\statsmodels\regression\linear_model.py in <module>(); 46 cache_readonly,; 47 cache_writable); ---> 48 import statsmodels.base.model as base; 49 import statsmodels.base.wrapper as wrap; 50 from statsmodels.emplike.elregress import _ELRegOpts. ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\statsmodels\base\model.py in <module>(); 13 from statsmodels.tools.sm_exceptions import ValueWarning, \; 14 HessianInversionWarning; ---> 15 from statsmodels.formula import handle_formula_data; 16 from statsmodels.compat.numpy import np_matrix_rank; 17 from statsmodels.base.optimizer import Optimizer. ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\statsmodels\formula\__init__.py in <module>(); 3 ; 4 ; ----> 5 from .formulatools import handle_formula_data. ~\AppData\Local\conda\conda\envs\scanpy\lib\site-packages\statsmodels\formula\formulatools.py in <module>(); 1 from st",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/212:2955,test,test,2955,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/212,1,['test'],['test']
Testability,". # t-SNE; tsne_n_pcs = 20 # Number of principal components to use for t-SNE. # k-means; k = 35 # Number of clusters for k-means. # Gene ranking. ranking_n_top_genes = 50 # Number of differential genes to compute for each cluster. # Number of parallel jobs; sc._settings.ScanpyConfig.n_jobs = os.cpu_count(). start=time.time(); tr=time.time(); adata = sc.read(input_file); adata.var_names_make_unique(); adata.shape; print(""Total read time : %s"" % (time.time()-tr)). tr=time.time(); # To reduce the number of cells:; USE_FIRST_N_CELLS = 1300000; adata = adata[0:USE_FIRST_N_CELLS]; adata.shape. sc.pp.filter_cells(adata, min_genes=min_genes_per_cell); sc.pp.filter_cells(adata, max_genes=max_genes_per_cell); sc.pp.filter_genes(adata, min_cells=min_cells_per_gene); sc.pp.normalize_total(adata, target_sum=1e4); print(""Total filter and normalize time : %s"" % (time.time()-tr)). tr=time.time(); sc.pp.log1p(adata); print(""Total log time : %s"" % (time.time()-tr)). # Select highly variable genes; sc.pp.highly_variable_genes(adata, n_top_genes=n_top_genes, flavor = ""cell_ranger""). # Retain marker gene expression; for marker in markers:; adata.obs[marker + ""_raw""] = adata.X[:, adata.var.index == marker].toarray().ravel(). # Filter matrix to only variable genes; adata = adata[:, adata.var.highly_variable]. #Regress out confounding factors (number of counts, mitochondrial gene expression); mito_genes = adata.var_names.str.startswith(MITO_GENE_PREFIX); n_counts = np.array(adata.X.sum(axis=1)); adata.obs['percent_mito'] = np.array(np.sum(adata[:, mito_genes].X, axis=1)) / n_counts; adata.obs['n_counts'] = n_counts. ts=time.time(); sc.pp.regress_out(adata, ['n_counts', 'percent_mito']); print(""Total regress out time : %s"" % (time.time()-ts)); ```; <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3284:3325,Test,Tests,3325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3284,1,['Test'],['Tests']
Testability,".., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],... scanpy/tests/test_preprocessing_distributed.py:64: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------------------------------------------; normalizing by total count per cell; filtered out dask.array<sum-aggregate, shape=(), dtype=int64, chunksize=(), chunktype=numpy.ndarray> cells that have less than 1 counts; finished (0:00:00): normalized adata.X and added 'n_counts', counts per cell before normalization (adata.obs); normalizing by total count per cell; filtered out 1 cells that have less than 1 counts; finished (0:00:00): normalized adata.X and added 'n_counts', counts per cell before normalization (adata.obs); =================================================================================================== short test summary info ====================================================================================================; FAILED scanpy/tests/test_preprocessing_distributed.py::TestPreprocessingDistributed::test_normalize_per_cell[dask] - AssertionError: ; ======================================================================================== 1 failed, 985 deselected, 11 warnings in 3.74s ========================================================================================; ```. ### Versions. <details>. ```; -----; anndata 0.9.0rc2.dev43+g21a76088; scanpy 1.10.0.dev117+g6b9e734f; -----; PIL 9.1.1; asciitree NA; awkward 2.2.1; awkward_cpp NA; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; cloudpickle 2.2.1; cycler 0.10.0; cython_runtime NA; dask 2023.5.0; dateutil 2.8.2; defusedxml 0.7.1; entrypoints 0.4; fasteners 0.17.3; h5py 3.7.0; hypergeom_ufunc NA; igraph 0.10.4; importlib_resources NA; jinja2 3.1.2; joblib 1.1.0; kiwisolver 1.4.3; leidenalg 0.9.1; llvmlite 0.38.1; markupsafe 2.1.1; matplotlib 3.7.1; mpl_toolki",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:4114,test,test,4114,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,2,['test'],"['test', 'tests']"
Testability,".................................x............F.... [100%]. =========================================================================================================== FAILURES ============================================================================================================; ___________________________________________________________________________________________________________ test_paga ___________________________________________________________________________________________________________. image_comparer = <function make_comparer at 0x7fbce4ade8c0>. def test_paga(image_comparer):; # Sometimes things shift a pixel or so, resulting in diffs up to ~27; # The 1px-edges aren’t that good actually as they’re ignored at this tol …; save_and_compare_images = image_comparer(ROOT, FIGS, tol=30); ; pbmc = sc.datasets.pbmc68k_reduced(); sc.tl.paga(pbmc, groups='bulk_labels'); ; common = dict(threshold=0.5, max_edge_width=1.0, random_state=0, show=False); ; # delete bulk_labels_colors to test the creation of color list by paga; del pbmc.uns['bulk_labels_colors']; sc.pl.paga(pbmc, **common); save_and_compare_images('master_paga'); ; sc.pl.paga(pbmc, color='CST3', **common); save_and_compare_images('master_paga_continuous'); ; pbmc.obs['cool_feature'] = pbmc[:, 'CST3'].X.squeeze(); sc.pl.paga(pbmc, color='cool_feature', **common); save_and_compare_images('master_paga_continuous_obs'); ; sc.pl.paga(pbmc, color=['CST3', 'GATA2'], **common); save_and_compare_images('master_paga_continuous_multiple'); ; sc.pl.paga_compare(pbmc, legend_fontoutline=2, **common); save_and_compare_images('master_paga_compare'); ; sc.pl.paga_compare(pbmc, color='CST3', legend_fontsize=5, **common); save_and_compare_images('master_paga_compare_continuous'); ; sc.pl.paga_compare(pbmc, basis='X_pca', legend_fontweight='normal', **common); save_and_compare_images('master_paga_compare_pca'); ; colors = {; c: {cm.Set1(_): 0.33 for _ in range(3)}; for c in pbmc.obs[""bulk_labels""].cat.categories; ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1418:1478,test,test,1478,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1418,1,['test'],['test']
Testability,.0 py36h9f0ad1d_1 conda-forge; jupyter 1.0.0 py_2 conda-forge; jupyter_client 6.1.3 py_0 conda-forge; jupyter_console 6.1.0 py_1 conda-forge; jupyter_core 4.6.3 py36h9f0ad1d_1 conda-forge; kiwisolver 1.2.0 py36hfd86e86_0 ; ld_impl_linux-64 2.33.1 h53a641e_7 ; legacy-api-wrap 1.2 pypi_0 pypi; leidenalg 0.8.0 pypi_0 pypi; libedit 3.1.20191231 h7b6447c_0 ; libffi 3.3 he6710b0_1 ; libgcc-ng 9.1.0 hdf63c60_0 ; libgfortran-ng 7.3.0 hdf63c60_0 ; libpng 1.6.37 hed695b0_1 conda-forge; libsodium 1.0.17 h516909a_0 conda-forge; libstdcxx-ng 9.1.0 hdf63c60_0 ; libuuid 2.32.1 h14c3975_1000 conda-forge; libxcb 1.13 h14c3975_1002 conda-forge; libxml2 2.9.10 he19cac6_1 ; llvmlite 0.33.0 pypi_0 pypi; lz4-c 1.9.2 he6710b0_0 ; lzo 2.10 h7b6447c_2 ; markupsafe 1.1.1 py36h8c4c3a4_1 conda-forge; matplotlib 3.2.2 0 ; matplotlib-base 3.2.2 py36hef1b27d_0 ; mistune 0.8.4 py36h8c4c3a4_1001 conda-forge; mkl 2020.1 217 ; mkl-service 2.3.0 py36he904b0f_0 ; mkl_fft 1.1.0 py36h23d657b_0 ; mkl_random 1.1.1 py36h0573a6f_0 ; mock 4.0.2 py_0 ; natsort 7.0.1 pypi_0 pypi; nbconvert 5.6.1 py36h9f0ad1d_1 conda-forge; nbformat 5.0.6 py_0 conda-forge; ncurses 6.2 he6710b0_1 ; networkx 2.4 pypi_0 pypi; notebook 6.0.3 py36h9f0ad1d_0 conda-forge; numba 0.50.0 pypi_0 pypi; numexpr 2.7.1 py36h423224d_0 ; numpy 1.19.0 pypi_0 pypi; numpy-base 1.18.5 py36hde5b4d6_0 ; openssl 1.1.1g h7b6447c_0 ; packaging 20.4 pyh9f0ad1d_0 conda-forge; pandas 1.0.5 py36h0573a6f_0 ; pandoc 2.9.2.1 0 conda-forge; pandocfilters 1.4.2 py_1 conda-forge; parso 0.7.0 pyh9f0ad1d_0 conda-forge; patsy 0.5.1 py36_0 ; pcre 8.44 he1b5a44_0 conda-forge; pexpect 4.8.0 py36h9f0ad1d_1 conda-forge; pickleshare 0.7.5 py36h9f0ad1d_1001 conda-forge; pip 20.1.1 py36_1 ; plotly 4.0.0 py_0 plotly; prometheus_client 0.8.0 pyh9f0ad1d_0 conda-forge; prompt-toolkit 3.0.5 py_1 conda-forge; prompt_toolkit 3.0.5 1 conda-forge; pthread-stubs 0.4 h14c3975_1001 conda-forge; ptyprocess 0.6.0 py_1001 conda-forge; pygments 2.6.1 py_0 conda-forge; pyparsing 2.4.7 pyh9f0,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1293:7821,mock,mock,7821,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1293,1,['mock'],['mock']
Testability,.0.8 py39hca03da5_0 ; notebook-shim 0.2.3 py39hca03da5_0 ; nspr 4.35 h313beb8_0 ; nss 3.100 hc6e9f88_0 conda-forge; numba 0.60.0 pypi_0 pypi; numpy 2.0.0 pypi_0 pypi; numpyro 0.13.2 pyhd8ed1ab_0 conda-forge; openjpeg 2.5.2 h9f1df11_0 conda-forge; openpyxl 3.1.4 py39hfb846b4_0 conda-forge; openssl 3.3.1 hfb2fe0b_1 conda-forge; opt_einsum 3.3.0 pyhc1e730c_2 conda-forge; optax 0.2.2 pyhd8ed1ab_0 conda-forge; overrides 7.4.0 py39hca03da5_0 ; packaging 24.1 pyhd8ed1ab_0 conda-forge; pandas 2.2.2 py39h998126f_1 conda-forge; pandocfilters 1.5.0 pyhd3eb1b0_0 ; parso 0.8.3 pyhd3eb1b0_0 ; patsy 0.5.6 pyhd8ed1ab_0 conda-forge; pcre2 10.43 h26f9a81_0 conda-forge; pexpect 4.8.0 pyhd3eb1b0_3 ; pickleshare 0.7.5 pyhd3eb1b0_1003 ; pillow 10.3.0 py39h3352c98_0 conda-forge; pip 24.0 py39hca03da5_0 ; platformdirs 3.10.0 py39hca03da5_0 ; ply 3.11 py39hca03da5_0 ; prometheus_client 0.14.1 py39hca03da5_0 ; prompt-toolkit 3.0.43 py39hca03da5_0 ; prompt_toolkit 3.0.43 hd3eb1b0_0 ; psutil 5.9.0 py39h1a28f6b_0 ; pthread-stubs 0.4 h27ca646_1001 conda-forge; ptyprocess 0.7.0 pyhd3eb1b0_2 ; pure_eval 0.2.2 pyhd3eb1b0_0 ; pycparser 2.22 pyhd8ed1ab_0 conda-forge; pygments 2.18.0 pyhd8ed1ab_0 conda-forge; pynndescent 0.5.13 pyhff2d567_0 conda-forge; pyparsing 3.1.2 pyhd8ed1ab_0 conda-forge; pyqt 5.15.10 py39h313beb8_0 ; pyqt5-sip 12.13.0 py39h80987f9_0 ; pyro-api 0.1.2 pyhd8ed1ab_0 conda-forge; pyro-ppl 1.8.6 pyhd8ed1ab_0 conda-forge; pysocks 1.7.1 py39hca03da5_0 ; python 3.9.18 hd7ebdb9_1_cpython conda-forge; python-dateutil 2.9.0 pyhd8ed1ab_0 conda-forge; python-fastjsonschema 2.16.2 py39hca03da5_0 ; python-igraph 0.11.5 py39hd012b80_1 conda-forge; python-json-logger 2.0.7 py39hca03da5_0 ; python-tzdata 2024.1 pyhd8ed1ab_0 conda-forge; python_abi 3.9 4_cp39 conda-forge; pytorch 1.12.1 cpu_py39h6ba7f14_0 ; pytorch-lightning 1.9.4 pyhd8ed1ab_1 conda-forge; pytz 2024.1 py39hca03da5_0 ; pyyaml 6.0.1 py39h0f82c59_1 conda-forge; pyzmq 25.1.2 py39h313beb8_0 ; qt-main 5.15.8 hf679f28_21 conda-forge; qtco,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3144:13113,stub,stubs,13113,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3144,1,['stub'],['stubs']
Testability,.1; numexpr 2.8.4; numpy 1.24.3; numpydoc 1.5.0; openpyxl 3.0.10; packaging 23.1; pandas 2.0.3; pandocfilters 1.5.0; panel 1.2.3; param 1.13.0; parsel 1.6.0; parso 0.8.3; partd 1.4.0; pathlib 1.0.1; pathspec 0.10.3; patsy 0.5.3; pep8 1.7.1; pexpect 4.8.0; pickleshare 0.7.5; Pillow 9.4.0; pip 23.2.1; pkce 1.0.3; pkginfo 1.9.6; platformdirs 3.10.0; plotly 5.9.0; pluggy 1.0.0; ply 3.11; poyo 0.5.0; prometheus-client 0.14.1; prompt-toolkit 3.0.36; Protego 0.1.16; psutil 5.9.0; ptyprocess 0.7.0; pure-eval 0.2.2; py-cpuinfo 8.0.0; pyarrow 11.0.0; pyasn1 0.4.8; pyasn1-modules 0.2.8; pycodestyle 2.10.0; pycosat 0.6.4; pycparser 2.21; pyct 0.5.0; pycurl 7.45.2; pydantic 1.10.8; PyDispatcher 2.0.5; pydocstyle 6.3.0; pyerfa 2.0.0; pyflakes 3.0.1; Pygments 2.15.1; PyJWT 2.4.0; pylint 2.16.2; pylint-venv 2.3.0; pyls-spyder 0.4.0; pyodbc 4.0.34; pyOpenSSL 23.2.0; pyparsing 3.0.9; PyQt5-sip 12.11.0; pyrsistent 0.18.0; PySocks 1.7.1; pytest 7.4.0; python-dateutil 2.8.2; python-dotenv 0.21.0; python-json-logger 2.0.7; python-lsp-black 1.2.1; python-lsp-jsonrpc 1.0.0; python-lsp-server 1.7.2; python-slugify 5.0.2; python-snappy 0.6.1; pytoolconfig 1.2.5; pytz 2023.3.post1; pyviz-comms 2.3.0; PyWavelets 1.4.1; pyxdg 0.27; PyYAML 6.0; pyzmq 23.2.0; QDarkStyle 3.0.2; qstylizer 0.2.2; QtAwesome 1.2.2; qtconsole 5.4.2; QtPy 2.2.0; queuelib 1.5.0; regex 2022.7.9; requests 2.31.0; requests-file 1.5.1; requests-toolbelt 1.0.0; responses 0.13.3; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rope 1.7.0; Rtree 1.0.1; ruamel.yaml 0.17.21; ruamel-yaml-conda 0.17.21; s3fs 2023.4.0; safetensors 0.3.2; scikit-image 0.20.0; scikit-learn 1.3.0; scikit-learn-intelex 20230426.111612; scipy 1.11.1; Scrapy 2.8.0; seaborn 0.12.2; SecretStorage 3.3.1; Send2Trash 1.8.0; service-identity 18.1.0; setuptools 68.0.0; sip 6.6.2; six 1.16.0; smart-open 5.2.1; sniffio 1.2.0; snowballstemmer 2.2.0; sortedcontainers 2.4.0; soupsieve 2.4; Sphinx 5.0.2; sphinxcontrib-applehelp 1.0.2; sphinxcontrib-devhelp 1.0.2; sp,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2706:5873,log,logger,5873,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2706,1,['log'],['logger']
Testability,.27.1; scanpy | 1.8.2 | scanpy | 1.8.2 | scanpy | 1.8.2; scikit-learn | 1.0.2 | scikit-learn | 1.0.2 | scikit-learn | 1.0.2;   |   | scikit-misc | 0.1.4 |   |  ; scipy | 1.7.3 | scipy | 1.7.3 | scipy | 1.7.3; scvelo | 0.2.4 | scvelo | 0.2.4 | scvelo | 0.2.4; seaborn | 0.11.2 | seaborn | 0.11.2 | seaborn | 0.11.2; Send2Trash | 1.8.0 | Send2Trash | 1.8.0 | Send2Trash | 1.8.0; setuptools | 58.0.4 | setuptools | 58.0.4 | setuptools | 58.0.4;   |   | setuptools-scm | 6.3.2 |   |  ; sinfo | 0.3.4 | sinfo | 0.3.4 | sinfo | 0.3.4; six | 1.16.0 | six | 1.16.0 | six | 1.16.0; sniffio | 1.2.0 | sniffio | 1.2.0 | sniffio | 1.2.0; sortedcontainers | 2.4.0 | sortedcontainers | 2.4.0 | sortedcontainers | 2.4.0; statsmodels | 0.13.1 | statsmodels | 0.13.1 | statsmodels | 0.13.1; stdlib-list | 0.8.0 | stdlib-list | 0.8.0 | stdlib-list | 0.8.0; tables | 3.6.1 | tables | 3.6.1 | tables | 3.6.1; tblib | 1.7.0 | tblib | 1.7.0 | tblib | 1.7.0; terminado | 0.9.4 | terminado | 0.9.4 | terminado | 0.9.4; testpath | 0.5.0 | testpath | 0.5.0 | testpath | 0.5.0; texttable | 1.6.4 | texttable | 1.6.4 | texttable | 1.6.4; threadpoolctl | 3.0.0 | threadpoolctl | 3.0.0 | threadpoolctl | 3.0.0;   |   | tomli | 2.0.0 |   |  ; toolz | 0.11.1 | toolz | 0.11.1 | toolz | 0.11.1; tornado | 6.1 | tornado | 6.1 | tornado | 6.1; tqdm | 4.62.3 | tqdm | 4.62.3 | tqdm | 4.62.3; traitlets | 5.1.1 | traitlets | 5.1.1 | traitlets | 5.1.1; typing_extensions | 4.0.1 | typing_extensions | 4.0.1 | typing_extensions | 4.0.1; umap-learn | 0.5.2 | umap-learn | 0.5.2 | umap-learn | 0.5.2; urllib3 | 1.26.7 | urllib3 | 1.26.7 | urllib3 | 1.26.7; wcwidth | 0.2.5 | wcwidth | 0.2.5 | wcwidth | 0.2.5; webencodings | 0.5.1 | webencodings | 0.5.1 | webencodings | 0.5.1; wheel | 0.37.1 | wheel | 0.37.1 | wheel | 0.37.1; widgetsnbextension | 3.5.2 | widgetsnbextension | 3.5.2 | widgetsnbextension | 3.5.2; win-inet-pton | 1.1.0 | win-inet-pton | 1.1.0 | win-inet-pton | 1.1.0; wincertstore | 0.2 | wincertstore | 0.2 | wincertstore |,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2114:14087,test,testpath,14087,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2114,1,['test'],['testpath']
Testability,".3.2; ipython_genutils 0.2.0; jedi 0.17.1; jinja2 2.11.2; joblib 0.16.0; kiwisolver 1.2.0; leidenalg 0.8.0; llvmlite 0.38.1; louvain 0.7.0; markupsafe 1.1.1; matplotlib 3.5.2; mpl_toolkits NA; natsort 8.1.0; numba 0.55.2; numexpr 2.7.1; numpy 1.21.6; packaging 21.3; pandas 1.4.0; parso 0.7.0; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.5; psutil 5.7.0; ptyprocess 0.6.0; pyarrow 8.0.0; pygments 2.6.1; pyparsing 2.4.7; pytoml NA; pytz 2020.1; scipy 1.5.0; setuptools_scm NA; six 1.14.0; sklearn 1.0.2; sphinxcontrib NA; storemagic NA; tables 3.6.1; tblib 1.6.0; texttable 1.6.4; threadpoolctl 2.1.0; tlz 0.10.1; toolz 0.10.0; tornado 6.0.4; traitlets 4.3.3; typing_extensions NA; wcwidth 0.2.5; yaml 5.3.1; zmq 19.0.1; zope NA; -----; IPython 7.16.1; jupyter_client 6.1.6; jupyter_core 4.6.3; jupyterlab 2.1.5; notebook 6.0.3; -----; Python 3.8.3 (default, Jul 2 2020, 16:21:59) [GCC 7.3.0]; Linux-3.10.0-1160.76.1.el7.x86_64-x86_64-with-glibc2.10; 52 logical CPU cores, x86_64; -----; </details>. The following is my package version list. <details>. -----; anndata 0.8.0; scanpy 1.7.0; sinfo 0.3.4; -----; OpenSSL 21.0.0; PIL 8.4.0; absl NA; anyio NA; appdirs 1.4.4; appnope 0.1.2; attr 21.2.0; babel 2.9.1; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; bioservices 1.9.0; bottleneck 1.3.2; brotli NA; bs4 4.10.0; bson NA; cairo NA; cattr NA; certifi 2021.10.08; cffi 1.14.6; chardet 4.0.0; charset_normalizer 2.0.4; cloudpickle 2.0.0; colorama 0.4.4; colorlog NA; cryptography 3.4.8; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2021.10.0; dateutil 2.8.2; debugpy 1.4.1; decorator 5.1.0; defusedxml 0.7.1; deprecate 0.3.1; dill 0.3.5.1; docutils 0.17.1; dunamai 1.11.1; easydev 0.12.0; entrypoints 0.3; fsspec 2021.08.1; get_version 3.5.4; google NA; gridfs NA; gseapy 0.10.8; h5py 3.6.0; html5lib 1.1; idna 3.2; igraph 0.9.11; importlib_metadata NA; ipykernel 6.4.1; ipython_genutils 0.2.0; ipywidgets 7.6.5; itsdangerous 2.0.1; jedi 0.18.0; jinja2 2.11.3; ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2310:4258,log,logical,4258,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2310,1,['log'],['logical']
Testability,".6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 219, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 184, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 404, in filter; raise SphinxWarning(location + "":"" + message); sphinx.errors.SphinxWarning: /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessing/_simple.py:docstring of scanpy.pp.downsample_counts:17:py:class reference target not found: numpy.random.RandomState. Warning, treated as error:; /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessing/_simple.py:docstring of scanpy.pp.downsample_counts:17:py:class reference target not found: numpy.random.RandomState; ```. </details>. It looks like readthedocs is failing due to `numpy.random.RandomState` not being rewritten to `numpy.random.mtrand.RandomState`. I think the transform isn't happening in the right order when the docs are built from scratch since I can reproduce the warnings locally with:. ```; make clean; make html; ```. But if I run `make html` again, I don't get the warnings.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1057:2984,log,logging,2984,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1057,1,['log'],['logging']
Testability,".6/site-packages/sphinx/builders/__init__.py"", line 299, in build_update; len(to_build)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 361, in build; self.write(docnames, list(updated_docnames), method); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 535, in write; self._write_serial(sorted(docnames)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 545, in _write_serial; self.write_doc(docname, doctree); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 219, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 184, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 404, in filter; raise SphinxWarning(location + "":"" + message); sphinx.errors.SphinxWarning: /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessing/_simple.py:docst",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1057:2188,log,logger,2188,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1057,1,['log'],['logger']
Testability,".6218119e-04]]; ```. #### Versions. I am running scanpy in this singularity container: https://singularity-hub.org/collections/5095. <details>. ```. -----; anndata 0.7.5; scanpy 1.7.1; sinfo 0.3.1; -----; PIL 8.1.2; anndata 0.7.5; anyio NA; attr 20.3.0; babel 2.9.0; backcall 0.2.0; bottleneck 1.3.2; brotli NA; cairo 1.20.0; certifi 2020.12.05; cffi 1.14.5; chardet 4.0.0; cloudpickle 1.6.0; colorama 0.4.4; constants NA; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2021.03.0; dateutil 2.8.1; decorator 4.4.2; future_fstrings NA; get_version 2.1; google NA; h5py 3.1.0; highs_wrapper NA; idna 2.10; igraph 0.8.3; ipykernel 5.5.0; ipython_genutils 0.2.0; jedi 0.18.0; jinja2 2.11.3; joblib 1.0.1; json5 NA; jsonschema 3.2.0; jupyter_server 1.4.1; jupyterlab_server 2.3.0; kiwisolver 1.3.1; legacy_api_wrap 0.0.0; leidenalg 0.8.3; llvmlite 0.35.0; louvain 0.7.0; markupsafe 1.1.1; matplotlib 3.3.4; mpl_toolkits NA; natsort 7.1.1; nbclassic NA; nbformat 5.1.2; numba 0.52.0; numexpr 2.7.3; numpy 1.20.1; packaging 20.9; pandas 1.2.3; parso 0.8.1; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prometheus_client NA; prompt_toolkit 3.0.17; psutil 5.8.0; ptyprocess 0.7.0; pvectorc NA; pycparser 2.20; pygments 2.8.1; pynndescent 0.5.2; pyparsing 2.4.7; pyrsistent NA; pytz 2021.1; requests 2.25.1; scanpy 1.7.1; scipy 1.6.0; send2trash NA; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.24.1; sniffio 1.2.0; socks 1.7.1; sparse 0.11.2; sphinxcontrib NA; statsmodels 0.12.2; storemagic NA; tables 3.6.1; texttable 1.6.3; tlz 0.11.0; toolz 0.11.1; tornado 6.1; traitlets 5.0.5; typing_extensions NA; umap 0.4.6; urllib3 1.26.3; wcwidth 0.2.5; yaml 5.4.1; zmq 22.0.3; zope NA; -----; IPython 7.21.0; jupyter_client 6.1.11; jupyter_core 4.7.1; jupyterlab 3.0.10; notebook 6.2.0; -----; Python 3.8.5 (default, Sep 4 2020, 07:30:14) [GCC 7.3.0]; Linux-5.8.0-44-generic-x86_64-with-glibc2.10; 28 logical CPU cores; -----; Session information updated at 2021-03-18 12:37. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1749:3470,log,logical,3470,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1749,1,['log'],['logical']
Testability,".8/site-packages/IPython/core/interactiveshell.py"", line 3441, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-52-9844c466c985>"", line 1, in <module>; sc.pl.scatter(adata, x='X', y='Y', color=['paul15_clusters', 'batch']); File ""/home/mumichae/miniconda3/envs/opsca/lib/python3.8/site-packages/scanpy/plotting/_anndata.py"", line 131, in scatter; and (color is None or color in adata.obs.keys() or color in adata.var.index); File ""/home/mumichae/miniconda3/envs/opsca/lib/python3.8/site-packages/pandas/core/indexes/base.py"", line 4572, in __contains__; hash(key); TypeError: unhashable type: 'list'; ```. #### Versions. <details>. ```; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.1; -----; IPython 7.25.0; PIL 8.3.1; anndata 0.7.6; backcall 0.2.0; backend_interagg NA; beta_ufunc NA; binom_ufunc NA; cffi 1.14.6; colorama 0.4.4; console_thrift NA; cycler 0.10.0; cython_runtime NA; datalore NA; dateutil 2.8.1; decorator 4.4.2; defusedxml 0.7.1; h5py 2.10.0; igraph 0.9.6; ipython_genutils 0.2.0; jedi 0.18.0; joblib 1.0.1; kiwisolver 1.3.1; llvmlite 0.36.0; louvain 0.7.0; matplotlib 3.4.2; mpl_toolkits NA; natsort 7.1.1; nbinom_ufunc NA; numba 0.53.1; numexpr 2.7.3; numpy 1.18.1; packaging 20.9; pandas 1.3.1; parso 0.8.2; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.19; psutil 5.8.0; ptyprocess 0.7.0; pycparser 2.20; pydev_console NA; pydev_ipython NA; pydevconsole NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.9.0; pynndescent 0.5.4; pyparsing 2.4.7; pytz 2021.1; scanpy 1.8.1; scipy 1.7.0; sinfo 0.3.1; sitecustomize NA; six 1.16.0; sklearn 0.24.2; sphinxcontrib NA; tables 3.6.1; texttable 1.6.4; tqdm 4.61.2; traitlets 5.0.5; umap 0.5.1; wcwidth 0.2.5; -----; Python 3.8.10 | packaged by conda-forge | (default, May 11 2021, 07:01:05) [GCC 9.3.0]; Linux-5.13.10-200.fc34.x86_64-x86_64-with-glibc2.10; 16 logical CPU cores; -----; Session information updated at 2021-08-26 10:01. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1986:2607,log,logical,2607,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1986,1,['log'],['logical']
Testability,".; - [X] I have confirmed this bug exists on the latest version of scanpy.; - [X] (optional) I have confirmed this bug exists on the master branch of scanpy. ### What happened?. Since a few weeks ago (at least), the tests in `test_metrics.py` started failing because the exact equality tests no longer consistently returned the bit-for-bit same float. Something like it has been observed in https://github.com/scverse/scanpy/pull/1740#discussion_r596827747. #2687 disables the exact comparison, but we should figure out why it’s happening and if we can restore exact precision. ### Minimal code sample. ```console; $ git switch 1.9.5; $ pytest scanpy/tests/test_metrics.py; ```. ### Error output. ```pytb; =================================== FAILURES ===================================; __________________________ test_morans_i_consistency ___________________________. def test_morans_i_consistency():; pbmc = pbmc68k_reduced(); pbmc.layers[""raw""] = pbmc.raw.X.copy(); g = pbmc.obsp[""connectivities""]; ; > assert eq(; sc.metrics.morans_i(g, pbmc.obs[""percent_mito""]),; sc.metrics.morans_i(pbmc, vals=pbmc.obs[""percent_mito""]),; ); E AssertionError: assert False; E + where False = eq(0.13099293222276961, 0.13099293222276967); E + where 0.13099293222276961 = <function morans_i at 0x7f354779d9d0>(<700x700 sparse matrix of type '<class 'numpy.float64'>'\n	with 9992 stored elements in Compressed Sparse Row format>, index\nAAAGCCTGGCTAAC-1 0.023856\nAAATTCGATGCACA-1 0.027458\nAACACGTGGTCTTT-1 0.016819\nAAGTGCACGTGCTA-1 0.011797\nACACGAACGGAGTG-1 0.017277\n ... \nTGGCACCTCCAACA-8 0.008840\nTGTGAGTGCTTTAC-8 0.022068\nTGTTACTGGCGATT-8 0.012821\nTTCAGTACCGGGAA-8 0.014169\nTTGAGGTGGAGAGC-8 0.010886\nName: percent_mito, Length: 700, dtype: float32); E + where <function morans_i at 0x7f354779d9d0> = <module 'scanpy.metrics' from '/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/scanpy/metrics/__init__.py'>.morans_i; E + where <module 'scanpy.metrics' from '/opt/hostedtoolcache/P",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2688:1120,assert,assert,1120,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2688,1,['assert'],['assert']
Testability,".X); ```. ```pytb; #Output:; Run 1: initial values after simple processing: ; sum of count layer in designated cell: 4903.0; obs[total_counts] value in cell: 4903.0; .X.sum() value in cell: 4903.0; sum of count layer of MALAT1 in cell: (0, 0)	142.0; .X value of MALAT1 in cell: (0, 0)	142.0. Run 2: after sc.pp.normalize_total: ; normalizing counts per cell; finished (0:00:00); sum of count layer in designated cell: 10000.049; obs[total_counts] value in cell: 4903.0; .X.sum() value in cell: 10000.049; sum of count layer of MALAT1 in cell: (0, 0)	289.61862; .X value of MALAT1 in cell: (0, 0)	289.61862. Run 3: normalization, specifing argument layer=None; normalizing counts per cell; finished (0:00:00); sum of count layer in designated cell: 10000.049; obs[total_counts] value in cell: 4903.0; .X.sum() value in cell: 10000.049; sum of count layer of MALAT1 in cell: (0, 0)	289.61862; .X value of MALAT1 in cell: (0, 0)	289.61862; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]; -----; anndata 0.8.0; scanpy 1.9.1; -----; PIL 9.2.0; anndata2ri 1.1; annoy NA; backcall 0.2.0; backports NA; bbknn NA; beta_ufunc NA; binom_ufunc NA; cffi 1.15.1; cloudpickle 2.2.0; colorama 0.4.6; cycler 0.10.0; cython_runtime NA; cytoolz 0.12.0; dask 2022.02.0; dateutil 2.8.2; debugpy 1.6.3; decorator 5.1.1; defusedxml 0.7.1; deprecated 1.2.13; entrypoints 0.4; fsspec 2022.11.0; future_fstrings NA; google NA; h5py 3.7.0; igraph 0.9.1; ipykernel 6.14.0; ipython_genutils 0.2.0; ipywidgets 8.0.2; jedi 0.18.1; jinja2 3.1.2; joblib 1.2.0; kiwisolver 1.4.4; leidenalg 0.8.10; llvmlite 0.39.1; louvain 0.7.2; markupsafe 2.1.1; matplotlib 3.5.3; matplotlib_inline 0.1.6; mpl_toolkits NA; natsort 8.2.0; nbinom_ufunc NA; numba 0.56.3; numpy 1.21.6; packaging 21.3; pandas 1.3.5; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.31; psutil 5.9.3; ptyprocess 0.7.0; pycparser 2.21; pydev_ipython NA; p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2389:3994,log,logging,3994,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2389,1,['log'],['logging']
Testability,._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[mean_center-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_prin_comps-10] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_ne,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:19433,test,testing,19433,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,".get_loc(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item(). KeyError: 2. The above exception was the direct cause of the following exception:. KeyError Traceback (most recent call last); <ipython-input-20-26443e0aed95> in <module>; ----> 1 rnaseq1 = sc.read_10x_mtx(""GSE145328_RAW""). ~/anaconda3/lib/python3.8/site-packages/scanpy/readwrite.py in read_10x_mtx(path, var_names, make_unique, cache, cache_compression, gex_only, prefix); 479 genefile_exists = (path / f'{prefix}genes.tsv').is_file(); 480 read = _read_legacy_10x_mtx if genefile_exists else _read_v3_10x_mtx; --> 481 adata = read(; 482 str(path),; 483 var_names=var_names,. ~/anaconda3/lib/python3.8/site-packages/scanpy/readwrite.py in _read_v3_10x_mtx(path, var_names, make_unique, cache, cache_compression, prefix); 560 else:; 561 raise ValueError(""`var_names` needs to be 'gene_symbols' or 'gene_ids'""); --> 562 adata.var['feature_types'] = genes[2].values; 563 adata.obs_names = pd.read_csv(path / f'{prefix}barcodes.tsv.gz', header=None)[; 564 0. ~/anaconda3/lib/python3.8/site-packages/pandas/core/frame.py in __getitem__(self, key); 3022 if self.columns.nlevels > 1:; 3023 return self._getitem_multilevel(key); -> 3024 indexer = self.columns.get_loc(key); 3025 if is_integer(indexer):; 3026 indexer = [indexer]. ~/anaconda3/lib/python3.8/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance); 3080 return self._engine.get_loc(casted_key); 3081 except KeyError as err:; -> 3082 raise KeyError(key) from err; 3083 ; 3084 if tolerance is not None:. KeyError: 2; ```. #### Versions; scanpy==1.8.0 anndata==0.7.6 umap==0.5.1 numpy==1.19.2 scipy==1.6.3 pandas==1.2.4 scikit-learn==0.24.2 statsmodels==0.12.2 python-igraph==0.9.1 pynndescent==0.5.2. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1916:2710,log,logging,2710,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1916,1,['log'],['logging']
Testability,.py::test_normalize_pearson_residuals_errors[toarray-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERR,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:18844,test,testing,18844,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:7435,test,testing,7435,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown loc,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:17216,test,tests,17216,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,.py::test_pca_reproducible[scipy_csc] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[dask_array_dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_chunked - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_n_pcs - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_layer - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_no_threshold] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_with_batches] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_preprocessing_distributed.py::test_write_zarr[dask] - ValueError: buffer source array is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[sparse] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ValueError: assignment destination is read-only;,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:3343,test,tests,3343,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability,".score_genes(adata, ['0']). ~/miniconda3/envs/spols200618/lib/python3.7/site-packages/scanpy/tools/_score_genes.py in score_genes(adata, gene_list, ctrl_size, gene_pool, n_bins, score_name, random_state, copy, use_raw); 174 elif len(gene_list) == 1:; 175 if _adata[:, gene_list].X.ndim == 2:; --> 176 vector = _adata[:, gene_list].X.toarray()[:, 0] # new anndata; 177 else:; 178 vector = _adata[:, gene_list].X # old anndata. AttributeError: 'numpy.ndarray' object has no attribute 'toarray'; ```. #### Versions. <details>. WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.4; scanpy 1.6.0; sinfo 0.3.1; -----; PIL 7.1.2; anndata 0.7.4; backcall 0.2.0; bottleneck 1.3.2; cairo 1.19.1; cffi 1.14.0; cloudpickle 1.3.0; colorama 0.4.3; cycler 0.10.0; cython_runtime NA; dask 2.18.1; dateutil 2.8.1; decorator 4.4.2; get_version 2.1; google NA; h5py 2.10.0; igraph 0.8.2; importlib_metadata 1.6.1; ipykernel 5.3.0; ipyparallel 6.3.0; ipython_genutils 0.2.0; jedi 0.17.0; joblib 0.15.1; kiwisolver 1.2.0; legacy_api_wrap 0.0.0; leidenalg 0.8.0; llvmlite 0.32.1; louvain 0.7.0; matplotlib 3.2.1; mpl_toolkits NA; natsort 7.0.1; numba 0.49.1; numexpr 2.7.1; numpy 1.17.5; packaging 20.4; pandas 1.0.5; parso 0.7.0; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.5; psutil 5.7.0; ptyprocess 0.6.0; pygments 2.6.1; pyparsing 2.4.7; pytz 2020.1; scanpy 1.6.0; scipy 1.4.1; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.1; storemagic NA; tables 3.6.1; texttable 1.6.2; tlz 0.10.0; toolz 0.10.0; tornado 6.0.4; traitlets 4.3.3; typing_extensions NA; wcwidth 0.2.4; yaml 5.3.1; zipp NA; zmq 19.0.1; -----; IPython 7.15.0; jupyter_client 6.1.3; jupyter_core 4.6.3; jupyterlab 2.1.4; notebook 6.0.3; -----; Python 3.7.6 | packaged by conda-forge | (default, Jun 1 2020, 18:57:50) [GCC 7.5.0]; Linux-4.12.14-lp151.28.44-default-x86_64-with-glibc2.10; 16 logical CPU cores, x86_64; -----; Session information updated at 2020-08-28 14:42. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1395:2700,log,logical,2700,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1395,1,['log'],['logical']
Testability,/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-200] - ImportError: cann,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:3157,test,tests,3157,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/parsers/readers.py:1886) is_text=is_text,; [1887](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/parsers/readers.py:1887) errors=self.options.get(""encoding_errors"", ""strict""),; [1888](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/parsers/readers.py:1888) storage_options=self.options.get(""storage_options"", None),; [1889](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/parsers/readers.py:1889) ); [1890](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/parsers/readers.py:1890) assert self.handles is not None; [1891](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/parsers/readers.py:1891) f = self.handles.handle. File ~\AppData\Roaming\Python\Python312\site-packages\pandas\io\common.py:765, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options); [761](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/common.py:761) if compression == ""gzip"":; [762](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/common.py:762) if isinstance(handle, str):; [763](https://file+.vscode-resource.vscode-cdn.net/c%3A/Users/pmbm1/MEGA/PhD/PipelineDevelope/scRNA/~/AppData/Roaming/Python/Python312/site-packages/pandas/io/common.py:763)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3214:15480,assert,assert,15480,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3214,1,['assert'],['assert']
Testability,/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-100] ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:10006,test,testing,10006,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:10216,test,testing,10216,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-30-10,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:15066,test,testing,15066,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residual,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:7844,test,testing,7844,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residual,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:8061,test,testing,8061,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 361, in build; self.write(docnames, list(updated_docnames), method); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 535, in write; self._write_serial(sorted(docnames)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 545, in _write_serial; self.write_doc(docname, doctree); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 219, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 184, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 404, in filter; raise SphinxWarning(location + "":"" + message); sphinx.errors.SphinxWarning: /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessing/_simple.py:docstring of scanpy.pp.downsample_counts:17:py:class reference target not found: numpy.random.RandomState. Warning, treated as error:; /h",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1057:2350,log,logger,2350,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1057,1,['log'],['logger']
Testability,"/usr/common/lib/python3.6/site-packages/pkg_resources/__init__.py"", line 2862, in load_entry_point; return ep.load(); File ""/usr/common/lib/python3.6/site-packages/pkg_resources/__init__.py"", line 2462, in load; return self.resolve(); File ""/usr/common/lib/python3.6/site-packages/pkg_resources/__init__.py"", line 2468, in resolve; module = __import__(self.module_name, fromlist=['__name__'], level=0); File ""/home/common/lib/python3.6/site-packages/scanpy-1.5.2.dev7+ge33a2f33-py3.6.egg/scanpy/__init__.py"", line 3, in <module>; from ._utils import pkg_version, check_versions, annotate_doc_types; File ""/home/common/lib/python3.6/site-packages/scanpy-1.5.2.dev7+ge33a2f33-py3.6.egg/scanpy/_utils.py"", line 17, in <module>; from anndata import AnnData; File ""/home/common/lib/python3.6/site-packages/anndata/__init__.py"", line 1, in <module>; from .base import AnnData; File ""/home/common/lib/python3.6/site-packages/anndata/base.py"", line 21, in <module>; from scipy.sparse.sputils import IndexMixin; ImportError: cannot import name 'IndexMixin'; ```. ```bash; #pip3 install works any better?; pip3 install scanpy --target $PYTHONPATH --upgrade; pip3 install scanpy-scripts --target $PYTHONPATH --upgrade; scanpy; #same thing; ```. There are multiple versions of many packages in PYTHONPATH and at some point it seems to be picking the wrong ones. Examples:. ```bash; ls -1 $PYTHONPATH | grep scanpy; scanpy; scanpy-1.4.3.dist-info; scanpy-1.4.3-py3.6.egg; scanpy-1.4.6.dist-info; scanpy-1.5.1.dist-info; scanpy-1.5.2.dev7+ge33a2f33-py3.6.egg; scanpy_scripts; scanpy_scripts-0.2.10.dist-info; scanpy_scripts-0.2.10-py3.6.egg; ls -1 $PYTHONPATH | grep scipy; scipy; scipy-1.2.3.dist-info; scipy-1.2.3-py3.6-linux-x86_64.egg; scipy-1.4.1.dist-info; ls -1 $PYTHONPATH | grep anndata; anndata; anndata-0.6.19.dist-info; anndata-0.6.19-py3.6.egg; anndata-0.7.1.dist-info; anndata-0.7.3.dist-info; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...; current git (plus others).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1273:3137,log,logging,3137,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1273,1,['log'],['logging']
Testability,"/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 93, in _hookexec; return self._inner_hookexec(hook, methods, kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 84, in <lambda>; self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/callers.py"", line 187, in _multicall; res = hook_impl.function(*args); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/python.py"", line 183, in pytest_pyfunc_call; result = testfunction(**testargs); File ""/home/vsts/work/1/s/scanpy/tests/notebooks/test_paga_paul15_subsampled.py"", line 39, in test_paga_paul15_subsampled; sc.tl.draw_graph(adata); File ""/home/vsts/work/1/s/scanpy/tools/_draw_graph.py"", line 181, in draw_graph; logg.info(; File ""/home/vsts/work/1/s/scanpy/logging.py"", line 244, in info; return settings._root_logger.info(msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 56, in info; return self.log(INFO, msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 43, in log; super().log(level, msg, extra=extra); Message: "" finished: added\n 'X_draw_graph_fr', graph_drawing coordinates (adata.obsm)""; Arguments: (); --- Logging error ---; Traceback (most recent call last):; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/logging/__init__.py"", line 1084, in emit; stream.write(msg + self.terminator); ValueError: I/O operation on closed file.; Call stack:; File ""/opt/hostedtoolcache/Python/3.8.8/x64/bin/pytest"", line 8, in <module>; sys.exit(console_main()); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185, in console_main; code = main(); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162, in main; ret: Union[ExitCode, int] = config.hook.pytest_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1736:2136,log,logging,2136,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1736,1,['log'],['logging']
Testability,0 conda-forge; pexpect 4.8.0 py36h9f0ad1d_1 conda-forge; pickleshare 0.7.5 py36h9f0ad1d_1001 conda-forge; pip 20.1.1 py36_1 ; plotly 4.0.0 py_0 plotly; prometheus_client 0.8.0 pyh9f0ad1d_0 conda-forge; prompt-toolkit 3.0.5 py_1 conda-forge; prompt_toolkit 3.0.5 1 conda-forge; pthread-stubs 0.4 h14c3975_1001 conda-forge; ptyprocess 0.6.0 py_1001 conda-forge; pygments 2.6.1 py_0 conda-forge; pyparsing 2.4.7 pyh9f0ad1d_0 conda-forge; pyqt 5.9.2 py36hcca6a23_4 conda-forge; pyrsistent 0.16.0 py36h8c4c3a4_0 conda-forge; pytables 3.6.1 py36h71ec239_0 ; python 3.6.10 h7579374_2 ; python-dateutil 2.8.1 py_0 conda-forge; python-igraph 0.8.2 pypi_0 pypi; python_abi 3.6 1_cp36m conda-forge; pytz 2020.1 py_0 ; pyzmq 19.0.1 py36h9947dbf_0 conda-forge; qt 5.9.7 h5867ecd_1 ; qtconsole 4.7.5 pyh9f0ad1d_0 conda-forge; qtpy 1.9.0 py_0 conda-forge; readline 8.0 h7b6447c_0 ; retrying 1.3.3 py_2 conda-forge; sam-algorithm 0.7.3 pypi_0 pypi; scanpy 1.5.1 pypi_0 pypi; scikit-learn 0.23.1 py36h423224d_0 ; scipy 1.5.0 py36h0b6359f_0 ; seaborn 0.10.1 py_0 ; send2trash 1.5.0 py_0 conda-forge; setuptools 47.3.1 py36_0 ; setuptools-scm 4.1.2 pypi_0 pypi; sip 4.19.8 py36hf484d3e_0 ; six 1.15.0 pyh9f0ad1d_0 conda-forge; snappy 1.1.8 he6710b0_0 ; sqlite 3.32.3 h62c20be_0 ; statsmodels 0.11.1 py36h7b6447c_0 ; tbb 2020.0.133 pypi_0 pypi; terminado 0.8.3 py36h9f0ad1d_1 conda-forge; testpath 0.4.4 py_0 conda-forge; texttable 1.6.2 pypi_0 pypi; threadpoolctl 2.1.0 pyh5ca1d4c_0 ; tk 8.6.10 hbc83047_0 ; tornado 6.0.4 py36h8c4c3a4_1 conda-forge; tqdm 4.46.1 pypi_0 pypi; traitlets 4.3.3 py36h9f0ad1d_1 conda-forge; umap-learn 0.4.4 pypi_0 pypi; wcwidth 0.2.5 pyh9f0ad1d_0 conda-forge; webencodings 0.5.1 py_1 conda-forge; wheel 0.34.2 py36_0 ; widgetsnbextension 3.5.1 py36_0 conda-forge; xorg-libxau 1.0.9 h14c3975_0 conda-forge; xorg-libxdmcp 1.1.3 h516909a_0 conda-forge; xz 5.2.5 h7b6447c_0 ; zeromq 4.3.2 he1b5a44_2 conda-forge; zipp 3.1.0 py_0 conda-forge; zlib 1.2.11 h7b6447c_3 ; zstd 1.4.4 h0b5b093_3 ; ```,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1293:9769,test,testpath,9769,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1293,1,['test'],['testpath']
Testability,0-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:9005,test,tests,9005,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,0.13 h2bbff1b_0 ; overrides 7.7.0 pypi_0 pypi; packaging 24.0 pypi_0 pypi; pandas 2.2.1 pypi_0 pypi; pandocfilters 1.5.1 pypi_0 pypi; parso 0.8.3 pyhd3eb1b0_0 ; patsy 0.5.6 pypi_0 pypi; pillow 10.2.0 pypi_0 pypi; pip 23.3.1 py311haa95532_0 ; platformdirs 4.2.0 pypi_0 pypi; plotly 5.20.0 pypi_0 pypi; prometheus-client 0.20.0 pypi_0 pypi; prometheus_client 0.14.1 py311haa95532_0 ; prompt-toolkit 3.0.43 py311haa95532_0 ; prompt_toolkit 3.0.43 hd3eb1b0_0 ; psutil 5.9.8 pypi_0 pypi; pure_eval 0.2.2 pyhd3eb1b0_0 ; pycparser 2.21 pyhd3eb1b0_0 ; pygments 2.17.2 pypi_0 pypi; pynndescent 0.5.11 pypi_0 pypi; pyparsing 3.1.2 pypi_0 pypi; pysocks 1.7.1 py311haa95532_0 ; python 3.11.8 he1021f5_0 ; python-dateutil 2.9.0.post0 pypi_0 pypi; python-fastjsonschema 2.16.2 py311haa95532_0 ; python-json-logger 2.0.7 py311haa95532_0 ; pytz 2023.3.post1 py311haa95532_0 ; pywin32 306 pypi_0 pypi; pywinpty 2.0.13 pypi_0 pypi; pyyaml 6.0.1 py311h2bbff1b_0 ; pyzmq 25.1.2 py311hd77b12b_0 ; r-askpass 1.0 r36_0 ; r-assertthat 0.2.1 r36h6115d3f_0 ; r-backports 1.1.4 r36h6115d3f_0 ; r-base 3.6.1 hf18239d_1 ; r-base64enc 0.1_3 r36h6115d3f_4 ; r-bh 1.69.0_1 r36h6115d3f_0 ; r-boot 1.3_20 r36h6115d3f_0 ; r-broom 0.5.2 r36h6115d3f_0 ; r-callr 3.2.0 r36h6115d3f_0 ; r-caret 6.0_83 r36h6115d3f_0 ; r-cellranger 1.1.0 r36h6115d3f_0 ; r-class 7.3_15 r36h6115d3f_0 ; r-cli 1.1.0 r36h6115d3f_0 ; r-clipr 0.6.0 r36h6115d3f_0 ; r-cluster 2.0.8 r36h6115d3f_0 ; r-codetools 0.2_16 r36h6115d3f_0 ; r-colorspace 1.4_1 r36h6115d3f_0 ; r-crayon 1.3.4 r36h6115d3f_0 ; r-curl 3.3 r36h6115d3f_0 ; r-data.table 1.12.2 r36h6115d3f_0 ; r-dbi 1.0.0 r36h6115d3f_0 ; r-dbplyr 1.4.0 r36h6115d3f_0 ; r-dichromat 2.0_0 r36h6115d3f_4 ; r-digest 0.6.18 r36h6115d3f_0 ; r-dplyr 0.8.0.1 r36h6115d3f_0 ; r-ellipsis 0.1.0 r36h6115d3f_0 ; r-essentials 3.6.0 r36_0 ; r-evaluate 0.13 r36h6115d3f_0 ; r-fansi 0.4.0 r36h6115d3f_0 ; r-forcats 0.4.0 r36h6115d3f_0 ; r-foreach 1.4.4 r36h6115d3f_0 ; r-foreign 0.8_71 r36h6115d3f_0 ; r-formatr 1.6 r36h6115d3f_0,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2969:9363,assert,assertthat,9363,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2969,1,['assert'],['assertthat']
Testability,"02 self.group_extra_size = size; 304 # to correctly plot the dendrogram the categories need to be ordered; 305 # according to the dendrogram ordering.; --> 306 self._reorder_categories_after_dendrogram(dendrogram_key); 308 dendro_ticks = np.arange(len(self.categories)) + 0.5; 310 self.group_extra_size = size. File ~/.local/share/hatch/env/virtual/scverse-tutorials/_YRPCeuX/basic-scrna/lib/python3.12/site-packages/scanpy/plotting/_baseplot_class.py:897, in BasePlot._reorder_categories_after_dendrogram(self, dendrogram); 894 _categories = _categories[:3] + [""etc.""]; 895 return "", "".join(_categories); --> 897 key = _get_dendrogram_key(self.adata, dendrogram, self.groupby); 899 dendro_info = self.adata.uns[key]; 900 if self.groupby != dendro_info[""groupby""]:. File ~/.local/share/hatch/env/virtual/scverse-tutorials/_YRPCeuX/basic-scrna/lib/python3.12/site-packages/scanpy/plotting/_anndata.py:2384, in _get_dendrogram_key(adata, dendrogram_key, groupby); 2377 from ..tools._dendrogram import dendrogram; 2379 logg.warning(; 2380 f""dendrogram data not found (using key={dendrogram_key}). ""; 2381 ""Running `sc.tl.dendrogram` with default parameters. For fine ""; 2382 ""tuning it is recommended to run `sc.tl.dendrogram` independently.""; 2383 ); -> 2384 dendrogram(adata, groupby, key_added=dendrogram_key); 2386 if ""dendrogram_info"" not in adata.uns[dendrogram_key]:; 2387 raise ValueError(; 2388 f""The given dendrogram key ({dendrogram_key!r}) does not contain ""; 2389 ""valid dendrogram information.""; 2390 ). File ~/.local/share/hatch/env/virtual/scverse-tutorials/_YRPCeuX/basic-scrna/lib/python3.12/site-packages/legacy_api_wrap/__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positional:]. File ~/.local/share/hatch/en",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3199:3662,log,logg,3662,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3199,1,['log'],['logg']
Testability,0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:9215,test,tests,9215,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"1-dimensional'); 4162 else:. Exception: Data must be 1-dimensional. During handling of the above exception, another exception occurred:. ValueError Traceback (most recent call last); <ipython-input-23-ccdbf8b7836c> in <module>; ----> 1 sc.pl.rank_genes_groups_violin(adata, groups='2', n_genes=8) ## 200316 error fix later, also when I run the entire script from the start. ~/anaconda3/lib/python3.7/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_violin(adata, groups, n_genes, gene_names, gene_symbols, use_raw, key, split, scale, strip, jitter, size, ax, show, save); 727 if issparse(X_col): X_col = X_col.toarray().flatten(); 728 new_gene_names.append(g); --> 729 df[g] = X_col; 730 df['hue'] = adata.obs[groups_key].astype(str).values; 731 if reference == 'rest':. ~/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py in __setitem__(self, key, value); 3114 else:; 3115 # set column; -> 3116 self._set_item(key, value); 3117 ; 3118 def _setitem_slice(self, key, value):. ~/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py in _set_item(self, key, value); 3188 """"""; 3189 ; -> 3190 self._ensure_valid_index(value); 3191 value = self._sanitize_column(key, value); 3192 NDFrame._set_item(self, key, value). ~/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py in _ensure_valid_index(self, value); 3170 value = Series(value); 3171 except:; -> 3172 raise ValueError('Cannot set a frame with no defined index '; 3173 'and a value that cannot be converted to a '; 3174 'Series'). ValueError: Cannot set a frame with no defined index and a value that cannot be converted to a Series; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.5.1 anndata==0.7.1 umap==0.3.10 numpy==1.18.1 scipy==1.4.1 pandas==0.23.0 scikit-learn==0.21.3 statsmodels==0.11.0 python-igraph==0.7.1 louvain==0.6.1; scvelo==0.1.25 scanpy==1.4.5.1 anndata==0.7.1 loompy==3.0.6 numpy==1.18.1 scipy==1.4.1 matplotlib==3.1.3 sklearn==0.21.3 pandas==0.23.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1114:3330,log,logging,3330,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1114,1,['log'],['logging']
Testability,"1.1; easydev 0.12.0; entrypoints 0.3; fsspec 2021.08.1; get_version 3.5.4; google NA; gridfs NA; gseapy 0.10.8; h5py 3.6.0; html5lib 1.1; idna 3.2; igraph 0.9.11; importlib_metadata NA; ipykernel 6.4.1; ipython_genutils 0.2.0; ipywidgets 7.6.5; itsdangerous 2.0.1; jedi 0.18.0; jinja2 2.11.3; joblib 1.1.0; json5 NA; jsonschema 3.2.0; jupyter_server 1.4.1; jupyterlab_server 2.8.2; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.9; llvmlite 0.36.0; lxml 4.6.3; markupsafe 1.1.1; matplotlib 3.4.3; matplotlib_inline NA; mpl_toolkits NA; natsort 8.1.0; nbclassic NA; nbformat 5.1.3; nbinom_ufunc NA; numba 0.53.0; numexpr 2.7.3; numpy 1.22.3; opt_einsum v3.3.0; packaging 21.0; pandas 1.4.3; parso 0.8.2; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prometheus_client NA; prompt_toolkit 3.0.20; psutil 5.8.0; ptyprocess 0.7.0; pvectorc NA; pyarrow 8.0.0; pycparser 2.20; pydev_ipython NA; pydevconsole NA; pydevd 2.4.1; pydevd_concurrency_analyser NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pyexpat NA; pygments 2.10.0; pylab NA; pymongo 4.1.0; pyparsing 3.0.4; pyro 1.8.1; pyrsistent NA; pytorch_lightning 1.5.10; pytz 2021.3; regex 2.5.97; requests 2.26.0; requests_cache 0.9.4; rich NA; scipy 1.7.1; scvelo 0.2.4; scvi 0.12.0; send2trash NA; setuptools_scm NA; six 1.16.0; sklearn 1.0.2; sniffio 1.2.0; socks 1.7.1; soupsieve 2.2.1; sphinxcontrib NA; storemagic NA; tables 3.6.1; tblib 1.7.0; tensorboard 2.8.0; texttable 1.6.4; threadpoolctl 2.2.0; tlz 0.11.0; toolz 0.11.1; torch 1.11.0; torchmetrics 0.8.1; tornado 6.1; tqdm 4.62.3; traitlets 5.1.0; typing_extensions NA; ujson 4.0.2; url_normalize 1.4.3; urllib3 1.26.7; utils NA; wcwidth 0.2.5; webencodings 0.5.1; wrapt 1.12.1; yaml 5.4.1; zipp NA; zmq 22.2.1; zope NA; -----; IPython 7.29.0; jupyter_client 6.1.12; jupyter_core 4.8.1; jupyterlab 3.2.1; notebook 6.4.5; -----; Python 3.9.7 (default, Sep 16 2021, 08:50:36) [Clang 10.0.0 ]; macOS-10.16-x86_64-i386-64bit; 10 logical CPU cores, i386. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2310:6949,log,logical,6949,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2310,1,['log'],['logical']
Testability,"10/site-packages/numba/core/dispatcher.py:152, in _FunctionCompiler._compile_core(self, args, return_type); 149 flags = self._customize_flags(flags); 151 impl = self._get_implementation(args, {}); --> 152 cres = compiler.compile_extra(self.targetdescr.typing_context,; 153 self.targetdescr.target_context,; 154 impl,; 155 args=args, return_type=return_type,; 156 flags=flags, locals=self.locals,; 157 pipeline_class=self.pipeline_class); 158 # Check typing error if object mode is used; 159 if cres.typing_error is not None and not flags.enable_pyobject:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:693, in compile_extra(typingctx, targetctx, func, args, return_type, flags, locals, library, pipeline_class); 669 """"""Compiler entry point; 670 ; 671 Parameter; (...); 689 compiler pipeline; 690 """"""; 691 pipeline = pipeline_class(typingctx, targetctx, library,; 692 args, return_type, flags, locals); --> 693 return pipeline.compile_extra(func). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:429, in CompilerBase.compile_extra(self, func); 427 self.state.lifted = (); 428 self.state.lifted_from = None; --> 429 return self._compile_bytecode(). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:497, in CompilerBase._compile_bytecode(self); 493 """"""; 494 Populate and run pipeline for bytecode input; 495 """"""; 496 assert self.state.func_ir is None; --> 497 return self._compile_core(). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:476, in CompilerBase._compile_core(self); 474 self.state.status.fail_reason = e; 475 if is_final_pipeline:; --> 476 raise e; 477 else:; 478 raise CompilerError(""All available pipelines exhausted""). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:463, in CompilerBase._compile_core(self); 461 res = None; 462 try:; --> 463 pm.run(self.state); 464 if self.state.cr is not None:; 465 break. File ~/miniconda3/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:5945,test,test,5945,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,"19 try:; --> 420 return_val = self.compile(tuple(argtypes)); 421 except errors.ForceLiteralArg as e:; 422 # Received request for compiler re-entry with the list of arguments; 423 # indicated by e.requested_args.; 424 # First, check if any of these args are already Literal-ized; 425 already_lit_pos = [i for i in e.requested_args; 426 if isinstance(args[i], types.Literal)]. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:965, in Dispatcher.compile(self, sig); 963 with ev.trigger_event(""numba:compile"", data=ev_details):; 964 try:; --> 965 cres = self._compiler.compile(args, return_type); 966 except errors.ForceLiteralArg as e:; 967 def folded(args, kws):. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:125, in _FunctionCompiler.compile(self, args, return_type); 124 def compile(self, args, return_type):; --> 125 status, retval = self._compile_cached(args, return_type); 126 if status:; 127 return retval. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:139, in _FunctionCompiler._compile_cached(self, args, return_type); 136 pass; 138 try:; --> 139 retval = self._compile_core(args, return_type); 140 except errors.TypingError as e:; 141 self._failed_cache[key] = e. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:152, in _FunctionCompiler._compile_core(self, args, return_type); 149 flags = self._customize_flags(flags); 151 impl = self._get_implementation(args, {}); --> 152 cres = compiler.compile_extra(self.targetdescr.typing_context,; 153 self.targetdescr.target_context,; 154 impl,; 155 args=args, return_type=return_type,; 156 flags=flags, locals=self.locals,; 157 pipeline_class=self.pipeline_class); 158 # Check typing error if object mode is used; 159 if cres.typing_error is not None and not flags.enable_pyobject:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:693, in compile_extra(typingctx, targetctx, func",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:4628,test,test,4628,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,2 | scanpy | 1.8.2; scikit-learn | 1.0.2 | scikit-learn | 1.0.2 | scikit-learn | 1.0.2;   |   | scikit-misc | 0.1.4 |   |  ; scipy | 1.7.3 | scipy | 1.7.3 | scipy | 1.7.3; scvelo | 0.2.4 | scvelo | 0.2.4 | scvelo | 0.2.4; seaborn | 0.11.2 | seaborn | 0.11.2 | seaborn | 0.11.2; Send2Trash | 1.8.0 | Send2Trash | 1.8.0 | Send2Trash | 1.8.0; setuptools | 58.0.4 | setuptools | 58.0.4 | setuptools | 58.0.4;   |   | setuptools-scm | 6.3.2 |   |  ; sinfo | 0.3.4 | sinfo | 0.3.4 | sinfo | 0.3.4; six | 1.16.0 | six | 1.16.0 | six | 1.16.0; sniffio | 1.2.0 | sniffio | 1.2.0 | sniffio | 1.2.0; sortedcontainers | 2.4.0 | sortedcontainers | 2.4.0 | sortedcontainers | 2.4.0; statsmodels | 0.13.1 | statsmodels | 0.13.1 | statsmodels | 0.13.1; stdlib-list | 0.8.0 | stdlib-list | 0.8.0 | stdlib-list | 0.8.0; tables | 3.6.1 | tables | 3.6.1 | tables | 3.6.1; tblib | 1.7.0 | tblib | 1.7.0 | tblib | 1.7.0; terminado | 0.9.4 | terminado | 0.9.4 | terminado | 0.9.4; testpath | 0.5.0 | testpath | 0.5.0 | testpath | 0.5.0; texttable | 1.6.4 | texttable | 1.6.4 | texttable | 1.6.4; threadpoolctl | 3.0.0 | threadpoolctl | 3.0.0 | threadpoolctl | 3.0.0;   |   | tomli | 2.0.0 |   |  ; toolz | 0.11.1 | toolz | 0.11.1 | toolz | 0.11.1; tornado | 6.1 | tornado | 6.1 | tornado | 6.1; tqdm | 4.62.3 | tqdm | 4.62.3 | tqdm | 4.62.3; traitlets | 5.1.1 | traitlets | 5.1.1 | traitlets | 5.1.1; typing_extensions | 4.0.1 | typing_extensions | 4.0.1 | typing_extensions | 4.0.1; umap-learn | 0.5.2 | umap-learn | 0.5.2 | umap-learn | 0.5.2; urllib3 | 1.26.7 | urllib3 | 1.26.7 | urllib3 | 1.26.7; wcwidth | 0.2.5 | wcwidth | 0.2.5 | wcwidth | 0.2.5; webencodings | 0.5.1 | webencodings | 0.5.1 | webencodings | 0.5.1; wheel | 0.37.1 | wheel | 0.37.1 | wheel | 0.37.1; widgetsnbextension | 3.5.2 | widgetsnbextension | 3.5.2 | widgetsnbextension | 3.5.2; win-inet-pton | 1.1.0 | win-inet-pton | 1.1.0 | win-inet-pton | 1.1.0; wincertstore | 0.2 | wincertstore | 0.2 | wincertstore | 0.2; wrapt | 1.13.3 | wrapt | 1.13.3 ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2114:14125,test,testpath,14125,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2114,1,['test'],['testpath']
Testability,2-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:4452,test,tests,4452,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,206-3 ENSMUSG00000064842 Gene Expression; Gm26206-4 ENSMUSG00000064842 Gene Expression; ... ... ...; Gm26206-55445 ENSMUSG00000064842 Gene Expression; Gm26206-55446 ENSMUSG00000064842 Gene Expression; Gm26206-55447 ENSMUSG00000064842 Gene Expression; Gm26206-55448 ENSMUSG00000064842 Gene Expression; Gm26206-55449 ENSMUSG00000064842 Gene Expression. [55450 rows x 2 columns]; ```. ### Expected. ```pycon; >>> # then anndata=0.10.3; >>> print(adata.var); gene_ids feature_types; 4933401J01Rik ENSMUSG00000102693 Gene Expression; Gm26206 ENSMUSG00000064842 Gene Expression; Xkr4 ENSMUSG00000051951 Gene Expression; Gm18956 ENSMUSG00000102851 Gene Expression; Gm37180 ENSMUSG00000103377 Gene Expression; ... ... ...; mt-Nd6 ENSMUSG00000064368 Gene Expression; mt-Te ENSMUSG00000064369 Gene Expression; mt-Cytb ENSMUSG00000064370 Gene Expression; mt-Tt ENSMUSG00000064371 Gene Expression; mt-Tp ENSMUSG00000064372 Gene Expression. [55450 rows x 2 columns]; ```. ### Versions. `import scanpy; scanpy.logging.print_versions()`. # **session with an error**. <Details>. ```; -----; anndata 0.10.4; scanpy 1.9.6; -----; PIL 10.2.0; anyio NA; arrow 1.3.0; asttokens NA; attr 23.2.0; attrs 23.2.0; babel 2.14.0; brotli 1.1.0; certifi 2023.11.17; cffi 1.16.0; charset_normalizer 3.3.2; colorama 0.4.6; comm 0.2.1; cycler 0.12.1; cython_runtime NA; dateutil 2.8.2; debugpy 1.8.0; decorator 5.1.1; defusedxml 0.7.1; executing 2.0.1; fastjsonschema NA; fqdn NA; h5py 3.10.0; idna 3.6; ipykernel 6.28.0; isoduration NA; jedi 0.19.1; jinja2 3.1.3; joblib 1.3.2; json5 NA; jsonpointer 2.4; jsonschema 4.20.0; jsonschema_specifications NA; jupyter_events 0.9.0; jupyter_server 2.12.4; jupyterlab_server 2.25.2; kiwisolver 1.4.5; llvmlite 0.41.1; markupsafe 2.1.3; matplotlib 3.8.2; mpl_toolkits NA; natsort 8.4.0; nbformat 5.9.2; numba 0.58.1; numpy 1.26.3; overrides NA; packaging 23.2; pandas 2.1.4; parso 0.8.3; pexpect 4.8.0; pickleshare 0.7.5; platformdirs 4.1.0; prometheus_client NA; prompt_toolkit 3.0.42; psut,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2806:8473,log,logging,8473,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2806,1,['log'],['logging']
Testability,"4 model.fit(); 85 estimat_var[not_const] = model.outputs.fitted_values; 86 reg_std = np.sqrt(10 ** estimat_var). _loess.pyx in _loess.loess.fit(). ValueError: b'There are other near singularities as well. 0.090619\n'; ```. While looking for a solution, I came across [this](https://github.com/YosefLab/scvi-tools/issues/727#issuecomment-718717033) issue that reports a similar problem. Any ideas of what this may be? . Thanks . #### Versions. <details>. [WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.4; scanpy 1.6.0; sinfo 0.3.1; -----; PIL 8.0.1; SCCAF NA; anndata 0.7.4; backcall 0.1.0; cffi 1.14.3; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.1; get_version 2.1; google NA; h5py 2.10.0; igraph 0.8.0; importlib_metadata 1.7.0; ipykernel 5.1.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.16.0; joblib 0.17.0; kiwisolver 1.1.0; legacy_api_wrap 1.2; leidenalg 0.8.2; llvmlite 0.31.0; louvain 0.6.1; matplotlib 3.1.3; mpl_toolkits NA; natsort 7.0.1; numba 0.48.0; numexpr 2.7.1; numpy 1.19.4; packaging 20.4; pandas 1.1.4; parso 0.6.1; patsy 0.5.1; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.3; psutil 5.7.2; ptyprocess 0.6.0; pycparser 2.20; pygments 2.7.2; pyparsing 2.4.7; pytz 2020.1; rich NA; ruamel NA; scanpy 1.6.0; scipy 1.5.4; scvi 0.7.1; seaborn 0.10.0; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; statsmodels 0.11.1; storemagic NA; tables 3.6.1; texttable 1.6.2; threadpoolctl 2.1.0; torch 1.6.0; tornado 6.0.3; tqdm 4.32.2; traitlets 4.3.3; typing_extensions NA; umap 0.3.10; wcwidth NA; yaml 5.3.1; zipp NA; zmq 19.0.0; -----; IPython 7.12.0; jupyter_client 6.0.0; jupyter_core 4.6.3; jupyterlab 1.2.5; notebook 6.0.3; -----; Python 3.7.6 | packaged by conda-forge | (default, Jan 7 2020, 22:33:48) [GCC 7.3.0]; Linux-4.4.0-189-generic-x86_64-with-debian-buster-sid; 24 logical CPU cores, x86_64; -----; Session information updated at 2020-11-23 09:17. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1504:3460,log,logical,3460,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1504,1,['log'],['logical']
Testability,"4/lib/python3.6/site-packages/sphinx/application.py"", line 348, in build; self.builder.build_update(); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 299, in build_update; len(to_build)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 311, in build; updated_docnames = set(self.read()); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/util/logging.py"", line 213, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/util/logging.py"", line 178, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/util/logging.py"", line 415, in filter; raise SphinxWarning(location + "":"" + str(message)); sphinx.errors.SphinxWarning: /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/1204/scanpy/plotting/_dotplot.py:docstring of scanpy.pl.dotplot:122:Inline strong start-string without end-string. Warning, treated as error:; /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/1204/scanpy/plotting/_dotplot.py:docstring of scanpy.p",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1307:2316,log,logging,2316,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1307,1,['log'],['logging']
Testability,"64813, -0.05003222, ..., 1.4681866 ,; -0.21488723, 2.620106 ],; [ 0.09879599, 0.03607919, -0.08120057, ..., -0.3384455 ,; -0.19780253, 2.0771198 ],; [-0.5213845 , -0.1292537 , -0.1755099 , ..., -0.23126683,; -0.10592338, 0.02626752],; ...,; [ 2.4987383 , -0.14190508, -0.20776471, ..., -0.20877847,; -0.10354204, 0.14313072],; [ 0.1960011 , 0.06290449, -0.07691702, ..., -0.34954828,; 2.5718384 , 2.468825 ],; [-0.53571457, -0.13106212, -0.20085879, ..., -0.21621887,; -0.10943384, 0.05686853]], dtype=float32); ```. ### Minimal code sample (that we can copy&paste without having any data). ```python; # find marker genes; sc.tl.rank_genes_groups(adata, 'louvain', method='t-test', reference = 'rest'); ```. ```pytb; ranking genes; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-50-04ed1c1ca569> in <module>; 1 # find marker genes; 2 #pdb.set_trace(); ----> 3 sc.tl.rank_genes_groups(adata, 'louvain', method='t-test', reference = 'rest'); 4 sc.pl.rank_genes_groups(adata, n_genes=25, sharey=False); 5 . /usr/local/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 581 logg.debug(f'with sizes: {np.count_nonzero(test_obj.groups_masks, axis=1)}'); 582 ; --> 583 test_obj.compute_statistics(; 584 method, corr_method, n_genes_user, rankby_abs, tie_correct, **kwds; 585 ). /usr/local/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in compute_statistics(self, method, corr_method, n_genes_user, rankby_abs, tie_correct, **kwds); 376 if self.stats is None:; 377 idx = pd.MultiIndex.from_tuples([(group_name, first_col)]); --> 378 self.stats = pd.DataFrame(columns=idx); 379 ; 380 if n_genes_user is not None:. /usr/local/lib/python3.8/site-packages/pandas/core/frame.py in __init__(self, data, index, columns, dtype, copy); ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2121:2188,test,test,2188,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2121,1,['test'],['test']
Testability,6h8c4c3a4_1001 conda-forge; mkl 2020.1 217 ; mkl-service 2.3.0 py36he904b0f_0 ; mkl_fft 1.1.0 py36h23d657b_0 ; mkl_random 1.1.1 py36h0573a6f_0 ; mock 4.0.2 py_0 ; natsort 7.0.1 pypi_0 pypi; nbconvert 5.6.1 py36h9f0ad1d_1 conda-forge; nbformat 5.0.6 py_0 conda-forge; ncurses 6.2 he6710b0_1 ; networkx 2.4 pypi_0 pypi; notebook 6.0.3 py36h9f0ad1d_0 conda-forge; numba 0.50.0 pypi_0 pypi; numexpr 2.7.1 py36h423224d_0 ; numpy 1.19.0 pypi_0 pypi; numpy-base 1.18.5 py36hde5b4d6_0 ; openssl 1.1.1g h7b6447c_0 ; packaging 20.4 pyh9f0ad1d_0 conda-forge; pandas 1.0.5 py36h0573a6f_0 ; pandoc 2.9.2.1 0 conda-forge; pandocfilters 1.4.2 py_1 conda-forge; parso 0.7.0 pyh9f0ad1d_0 conda-forge; patsy 0.5.1 py36_0 ; pcre 8.44 he1b5a44_0 conda-forge; pexpect 4.8.0 py36h9f0ad1d_1 conda-forge; pickleshare 0.7.5 py36h9f0ad1d_1001 conda-forge; pip 20.1.1 py36_1 ; plotly 4.0.0 py_0 plotly; prometheus_client 0.8.0 pyh9f0ad1d_0 conda-forge; prompt-toolkit 3.0.5 py_1 conda-forge; prompt_toolkit 3.0.5 1 conda-forge; pthread-stubs 0.4 h14c3975_1001 conda-forge; ptyprocess 0.6.0 py_1001 conda-forge; pygments 2.6.1 py_0 conda-forge; pyparsing 2.4.7 pyh9f0ad1d_0 conda-forge; pyqt 5.9.2 py36hcca6a23_4 conda-forge; pyrsistent 0.16.0 py36h8c4c3a4_0 conda-forge; pytables 3.6.1 py36h71ec239_0 ; python 3.6.10 h7579374_2 ; python-dateutil 2.8.1 py_0 conda-forge; python-igraph 0.8.2 pypi_0 pypi; python_abi 3.6 1_cp36m conda-forge; pytz 2020.1 py_0 ; pyzmq 19.0.1 py36h9947dbf_0 conda-forge; qt 5.9.7 h5867ecd_1 ; qtconsole 4.7.5 pyh9f0ad1d_0 conda-forge; qtpy 1.9.0 py_0 conda-forge; readline 8.0 h7b6447c_0 ; retrying 1.3.3 py_2 conda-forge; sam-algorithm 0.7.3 pypi_0 pypi; scanpy 1.5.1 pypi_0 pypi; scikit-learn 0.23.1 py36h423224d_0 ; scipy 1.5.0 py36h0b6359f_0 ; seaborn 0.10.1 py_0 ; send2trash 1.5.0 py_0 conda-forge; setuptools 47.3.1 py36_0 ; setuptools-scm 4.1.2 pypi_0 pypi; sip 4.19.8 py36hf484d3e_0 ; six 1.15.0 pyh9f0ad1d_0 conda-forge; snappy 1.1.8 he6710b0_0 ; sqlite 3.32.3 h62c20be_0 ; statsmodels 0.11,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1293:8685,stub,stubs,8685,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1293,1,['stub'],['stubs']
Testability,"72 | 2.049016 | 0.0 | 0.0; NaN | 66.620399 | 1.637823 | 0.0 | 0.0; NaN | 66.236443 | 1.807056 | 0.0 | 0.0; NaN | 64.112152 | 2.446921 | 0.0 | 0.0; NaN | 64.083160 | 2.495992 | 0.0 | 0.0; HBA1 | 63.376114 | 4.161097 | 0.0 | 0.0; NaN | 63.009491 | 2.059168 | 0.0 | 0.0; NaN | 58.142750 | 2.201216 | 0.0 | 0. ```. #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.7.0; sinfo 0.3.1; -----; PIL 7.2.0; anndata 0.7.5; appdirs 1.4.4; autoreload NA; backcall 0.2.0; bioservices 1.7.8; bs4 4.9.1; cairo 1.19.1; certifi 2020.12.05; cffi 1.14.4; chardet 3.0.4; colorama 0.4.3; colorlog NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; deprecated 1.2.10; easydev 0.9.38; future 0.18.2; future_fstrings NA; get_version 2.1; graphtools 1.5.2; gseapy 0.10.1; h5py 2.10.0; idna 2.10; igraph 0.8.2; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; joblib 0.16.0; kiwisolver 1.2.0; legacy_api_wrap 1.2; leidenalg 0.8.1; llvmlite 0.34.0; louvain 0.7.0; lxml 4.5.2; magic 2.0.3; matplotlib 3.3.1; mkl 2.3.0; mpl_toolkits NA; natsort 7.1.1; numba 0.51.2; numexpr 2.7.1; numpy 1.19.1; packaging 20.8; pandas 1.2.1; parso 0.7.1; pexpect 4.8.0; phenograph 1.5.7; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.6; psutil 5.7.2; ptyprocess 0.6.0; pycparser 2.20; pygments 2.6.1; pygsp 0.5.1; pylab NA; pyparsing 2.4.7; pytz 2020.1; requests 2.24.0; requests_cache 0.5.2; sca NA; scanpy 1.7.0; scipy 1.6.1; scprep 1.0.5.post2; seaborn 0.10.1; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; soupsieve 2.0.1; statsmodels 0.11.1; storemagic NA; tables 3.6.1; tasklogger 1.0.0; texttable 1.6.2; threadpoolctl 2.1.0; tornado 6.0.4; traitlets 4.3.3; urllib3 1.25.10; wcwidth 0.2.5; wrapt 1.12.1; zmq 19.0.2; zope NA; -----; IPython 7.17.0; jupyter_client 6.1.6; jupyter_core 4.6.3; notebook 6.1.3; -----; Python 3.8.2 (default, May 7 2020, 20:00:49) [GCC 7.3.0]; Linux-3.10.0-957.12.2.el7.x86_64-x86_64-with-glibc2.10; 64 logical CPU cores, x86_64; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1748:3006,log,logical,3006,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1748,1,['log'],['logical']
Testability,8.2 | scanpy | 1.8.2 | scanpy | 1.8.2; scikit-learn | 1.0.2 | scikit-learn | 1.0.2 | scikit-learn | 1.0.2;   |   | scikit-misc | 0.1.4 |   |  ; scipy | 1.7.3 | scipy | 1.7.3 | scipy | 1.7.3; scvelo | 0.2.4 | scvelo | 0.2.4 | scvelo | 0.2.4; seaborn | 0.11.2 | seaborn | 0.11.2 | seaborn | 0.11.2; Send2Trash | 1.8.0 | Send2Trash | 1.8.0 | Send2Trash | 1.8.0; setuptools | 58.0.4 | setuptools | 58.0.4 | setuptools | 58.0.4;   |   | setuptools-scm | 6.3.2 |   |  ; sinfo | 0.3.4 | sinfo | 0.3.4 | sinfo | 0.3.4; six | 1.16.0 | six | 1.16.0 | six | 1.16.0; sniffio | 1.2.0 | sniffio | 1.2.0 | sniffio | 1.2.0; sortedcontainers | 2.4.0 | sortedcontainers | 2.4.0 | sortedcontainers | 2.4.0; statsmodels | 0.13.1 | statsmodels | 0.13.1 | statsmodels | 0.13.1; stdlib-list | 0.8.0 | stdlib-list | 0.8.0 | stdlib-list | 0.8.0; tables | 3.6.1 | tables | 3.6.1 | tables | 3.6.1; tblib | 1.7.0 | tblib | 1.7.0 | tblib | 1.7.0; terminado | 0.9.4 | terminado | 0.9.4 | terminado | 0.9.4; testpath | 0.5.0 | testpath | 0.5.0 | testpath | 0.5.0; texttable | 1.6.4 | texttable | 1.6.4 | texttable | 1.6.4; threadpoolctl | 3.0.0 | threadpoolctl | 3.0.0 | threadpoolctl | 3.0.0;   |   | tomli | 2.0.0 |   |  ; toolz | 0.11.1 | toolz | 0.11.1 | toolz | 0.11.1; tornado | 6.1 | tornado | 6.1 | tornado | 6.1; tqdm | 4.62.3 | tqdm | 4.62.3 | tqdm | 4.62.3; traitlets | 5.1.1 | traitlets | 5.1.1 | traitlets | 5.1.1; typing_extensions | 4.0.1 | typing_extensions | 4.0.1 | typing_extensions | 4.0.1; umap-learn | 0.5.2 | umap-learn | 0.5.2 | umap-learn | 0.5.2; urllib3 | 1.26.7 | urllib3 | 1.26.7 | urllib3 | 1.26.7; wcwidth | 0.2.5 | wcwidth | 0.2.5 | wcwidth | 0.2.5; webencodings | 0.5.1 | webencodings | 0.5.1 | webencodings | 0.5.1; wheel | 0.37.1 | wheel | 0.37.1 | wheel | 0.37.1; widgetsnbextension | 3.5.2 | widgetsnbextension | 3.5.2 | widgetsnbextension | 3.5.2; win-inet-pton | 1.1.0 | win-inet-pton | 1.1.0 | win-inet-pton | 1.1.0; wincertstore | 0.2 | wincertstore | 0.2 | wincertstore | 0.2; wrapt | 1.13.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2114:14106,test,testpath,14106,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2114,1,['test'],['testpath']
Testability,"8/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_dotplot(adata, groups, n_genes, groupby, values_to_plot, var_names, gene_symbols, min_logfoldchange, key, show, save, return_fig, **kwds); 861 tl.rank_genes_groups; 862 """"""; --> 863 return _rank_genes_groups_plot(; 864 adata,; 865 plot_type='dotplot',. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py in _rank_genes_groups_plot(adata, plot_type, groups, n_genes, groupby, values_to_plot, var_names, min_logfoldchange, key, show, save, return_fig, gene_symbols, **kwds); 534 from .._dotplot import dotplot; 535 ; --> 536 _pl = dotplot(; 537 adata,; 538 var_names,. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/scanpy/plotting/_dotplot.py in dotplot(adata, var_names, groupby, use_raw, log, num_categories, expression_cutoff, mean_only_expressed, cmap, dot_max, dot_min, standard_scale, smallest_dot, title, colorbar_title, size_title, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, swap_axes, dot_color_df, show, save, ax, return_fig, vmin, vmax, vcenter, norm, **kwds); 940 del kwds['color_map']; 941 ; --> 942 dp = DotPlot(; 943 adata,; 944 var_names,. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/scanpy/plotting/_dotplot.py in __init__(self, adata, var_names, groupby, use_raw, log, num_categories, categories_order, title, figsize, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, expression_cutoff, mean_only_expressed, standard_scale, dot_color_df, dot_size_df, ax, vmin, vmax, vcenter, norm, **kwds); 215 # get the same order for rows and columns in the dot_color_df; 216 # using the order from the doc_size_df; --> 217 dot_color_df = dot_color_df.loc[dot_size_df.index][dot_size_df.columns]; 218 ; 219 self.dot_color_df = dot_color_df. ~/.virtualenvs/pytorch_latest/lib/python3.8/site-packages/pandas/core/indexing.py in __getitem__(self, key); 893 ; 894 maybe_call",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2078:2887,log,log,2887,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2078,1,['log'],['log']
Testability,81_0 conda-forge; pexpect 4.8.0 pyhd3eb1b0_3 ; pickleshare 0.7.5 pyhd3eb1b0_1003 ; pillow 10.3.0 py39h3352c98_0 conda-forge; pip 24.0 py39hca03da5_0 ; platformdirs 3.10.0 py39hca03da5_0 ; ply 3.11 py39hca03da5_0 ; prometheus_client 0.14.1 py39hca03da5_0 ; prompt-toolkit 3.0.43 py39hca03da5_0 ; prompt_toolkit 3.0.43 hd3eb1b0_0 ; psutil 5.9.0 py39h1a28f6b_0 ; pthread-stubs 0.4 h27ca646_1001 conda-forge; ptyprocess 0.7.0 pyhd3eb1b0_2 ; pure_eval 0.2.2 pyhd3eb1b0_0 ; pycparser 2.22 pyhd8ed1ab_0 conda-forge; pygments 2.18.0 pyhd8ed1ab_0 conda-forge; pynndescent 0.5.13 pyhff2d567_0 conda-forge; pyparsing 3.1.2 pyhd8ed1ab_0 conda-forge; pyqt 5.15.10 py39h313beb8_0 ; pyqt5-sip 12.13.0 py39h80987f9_0 ; pyro-api 0.1.2 pyhd8ed1ab_0 conda-forge; pyro-ppl 1.8.6 pyhd8ed1ab_0 conda-forge; pysocks 1.7.1 py39hca03da5_0 ; python 3.9.18 hd7ebdb9_1_cpython conda-forge; python-dateutil 2.9.0 pyhd8ed1ab_0 conda-forge; python-fastjsonschema 2.16.2 py39hca03da5_0 ; python-igraph 0.11.5 py39hd012b80_1 conda-forge; python-json-logger 2.0.7 py39hca03da5_0 ; python-tzdata 2024.1 pyhd8ed1ab_0 conda-forge; python_abi 3.9 4_cp39 conda-forge; pytorch 1.12.1 cpu_py39h6ba7f14_0 ; pytorch-lightning 1.9.4 pyhd8ed1ab_1 conda-forge; pytz 2024.1 py39hca03da5_0 ; pyyaml 6.0.1 py39h0f82c59_1 conda-forge; pyzmq 25.1.2 py39h313beb8_0 ; qt-main 5.15.8 hf679f28_21 conda-forge; qtconsole 5.5.1 py39hca03da5_0 ; qtpy 2.4.1 py39hca03da5_0 ; re2 2023.02.01 hb7217d7_0 conda-forge; readline 8.2 h1a28f6b_0 ; referencing 0.30.2 py39hca03da5_0 ; requests 2.32.2 py39hca03da5_0 ; rfc3339-validator 0.1.4 py39hca03da5_0 ; rfc3986-validator 0.1.1 py39hca03da5_0 ; rich 13.7.1 pyhd8ed1ab_0 conda-forge; rpds-py 0.10.6 py39hf0e4da2_0 ; scanpy 1.8.1 pypi_0 pypi; scikit-learn 1.1.2 py39h598ef33_0 conda-forge; scikit-misc 0.3.1 pypi_0 pypi; scipy 1.13.1 py39h3d5391c_0 conda-forge; scvi-tools 0.20.3 pyhd8ed1ab_0 conda-forge; seaborn 0.12.2 hd8ed1ab_0 conda-forge; seaborn-base 0.12.2 pyhd8ed1ab_0 conda-forge; send2trash 1.8.2 py39hca0,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3144:13762,log,logger,13762,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3144,1,['log'],['logger']
Testability,"92bd46023> in <module>; ----> 1 adata=sc.read_10x_mtx(path,; 2 var_names='gene_symbols',; 3 make_unique=True,; 4 cache=False,; 5 cache_compression=None,. ~/miniconda3/envs/rpy2_3/lib/python3.8/site-packages/scanpy/readwrite.py in read_10x_mtx(path, var_names, make_unique, cache, cache_compression, gex_only, prefix); 468 genefile_exists = (path / f'{prefix}genes.tsv').is_file(); 469 read = _read_legacy_10x_mtx if genefile_exists else _read_v3_10x_mtx; --> 470 adata = read(; 471 str(path),; 472 var_names=var_names,. ~/miniconda3/envs/rpy2_3/lib/python3.8/site-packages/scanpy/readwrite.py in _read_v3_10x_mtx(path, var_names, make_unique, cache, cache_compression, prefix); 530 """"""; 531 path = Path(path); --> 532 adata = read(; 533 path / f'{prefix}matrix.mtx.gz',; 534 cache=cache,. ~/miniconda3/envs/rpy2_3/lib/python3.8/site-packages/scanpy/readwrite.py in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, cache_compression, **kwargs); 110 filename = Path(filename) # allow passing strings; 111 if is_valid_filename(filename):; --> 112 return _read(; 113 filename,; 114 backed=backed,. ~/miniconda3/envs/rpy2_3/lib/python3.8/site-packages/scanpy/readwrite.py in _read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, cache_compression, suppress_cache_warning, **kwargs); 713 ; 714 if not is_present:; --> 715 raise FileNotFoundError(f'Did not find file {filename}.'); 716 logg.debug(f'reading {filename}'); 717 if not cache and not suppress_cache_warning:. FileNotFoundError: Did not find file /storage/groups/ml01/projects/2020_pancreas_karin.hrovatin/data/pancreas/scRNA/islets_aged_fltp_iCre/rev6/cellranger/MUC13974/count_matrices/filtered_feature_bc_matrix/matrix.mtx.gz. ```; But I have 10x files there:; ```; ls /storage/groups/ml01/projects/2020_pancreas_karin.hrovatin/data/pancreas/scRNA/islets_aged_fltp_iCre/rev6/cellranger/MUC13974/count_matrices/filtered_feature_bc_matrix/; barcodes.tsv features.tsv matrix.mtx",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1731:2304,log,logg,2304,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1731,1,['log'],['logg']
Testability,"970 ]; 971 if self.verbose:; 972 print(ts(), ""Worst tree score: {:.8f}"".format(np.min(tree_scores))). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:487, in _DispatcherBase._compile_for_args(self, *args, **kws); 485 e.patch_message('\n'.join((str(e).rstrip(), help_msg))); 486 # ignore the FULL_TRACEBACKS config, this needs reporting!; --> 487 raise e; 488 finally:; 489 self._types_active_call = []. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:420, in _DispatcherBase._compile_for_args(self, *args, **kws); 418 return_val = None; 419 try:; --> 420 return_val = self.compile(tuple(argtypes)); 421 except errors.ForceLiteralArg as e:; 422 # Received request for compiler re-entry with the list of arguments; 423 # indicated by e.requested_args.; 424 # First, check if any of these args are already Literal-ized; 425 already_lit_pos = [i for i in e.requested_args; 426 if isinstance(args[i], types.Literal)]. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:965, in Dispatcher.compile(self, sig); 963 with ev.trigger_event(""numba:compile"", data=ev_details):; 964 try:; --> 965 cres = self._compiler.compile(args, return_type); 966 except errors.ForceLiteralArg as e:; 967 def folded(args, kws):. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:125, in _FunctionCompiler.compile(self, args, return_type); 124 def compile(self, args, return_type):; --> 125 status, retval = self._compile_cached(args, return_type); 126 if status:; 127 return retval. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:139, in _FunctionCompiler._compile_cached(self, args, return_type); 136 pass; 138 try:; --> 139 retval = self._compile_core(args, return_type); 140 except errors.TypingError as e:; 141 self._failed_cache[key] = e. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/dispatcher.py:152, in _FunctionCompiler._compile_c",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:4022,test,test,4022,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,9hf0e4da2_0 ; scanpy 1.8.1 pypi_0 pypi; scikit-learn 1.1.2 py39h598ef33_0 conda-forge; scikit-misc 0.3.1 pypi_0 pypi; scipy 1.13.1 py39h3d5391c_0 conda-forge; scvi-tools 0.20.3 pyhd8ed1ab_0 conda-forge; seaborn 0.12.2 hd8ed1ab_0 conda-forge; seaborn-base 0.12.2 pyhd8ed1ab_0 conda-forge; send2trash 1.8.2 py39hca03da5_0 ; session-info 1.0.0 pyhd8ed1ab_0 conda-forge; setuptools 69.5.1 py39hca03da5_0 ; sinfo 0.3.4 pypi_0 pypi; sip 6.7.12 py39h313beb8_0 ; six 1.16.0 pyh6c4a22f_0 conda-forge; sniffio 1.3.0 py39hca03da5_0 ; soupsieve 2.5 py39hca03da5_0 ; sqlite 3.45.3 h80987f9_0 ; stack_data 0.2.0 pyhd3eb1b0_0 ; statsmodels 0.14.2 py39h161d348_0 conda-forge; stdlib-list 0.10.0 pyhd8ed1ab_0 conda-forge; tbb 2021.8.0 h48ca7d4_0 ; terminado 0.17.1 py39hca03da5_0 ; texttable 1.7.0 pyhd8ed1ab_0 conda-forge; threadpoolctl 3.5.0 pyhc1e730c_0 conda-forge; tinycss2 1.2.1 py39hca03da5_0 ; tk 8.6.14 h6ba3021_0 ; tomli 2.0.1 py39hca03da5_0 ; toolz 0.12.1 pyhd8ed1ab_0 conda-forge; torchmetrics 1.0.3 pyhd8ed1ab_0 conda-forge; tornado 6.4.1 py39h80987f9_0 ; tqdm 4.66.4 pyhd8ed1ab_0 conda-forge; traitlets 5.14.3 py39hca03da5_0 ; typing-extensions 4.12.2 hd8ed1ab_0 conda-forge; typing_extensions 4.12.2 pyha770c72_0 conda-forge; tzdata 2024a h04d1e81_0 ; umap-learn 0.5.6 pypi_0 pypi; unicodedata2 15.1.0 py39h0f82c59_0 conda-forge; urllib3 2.2.2 py39hca03da5_0 ; wcwidth 0.2.5 pyhd3eb1b0_0 ; webencodings 0.5.1 py39hca03da5_1 ; websocket-client 1.8.0 py39hca03da5_0 ; wheel 0.43.0 py39hca03da5_0 ; widgetsnbextension 4.0.10 py39hca03da5_0 ; xlrd 1.2.0 pyh9f0ad1d_1 conda-forge; xorg-libxau 1.0.11 hb547adb_0 conda-forge; xorg-libxdmcp 1.1.3 h27ca646_0 conda-forge; xz 5.4.6 h80987f9_1 ; yaml 0.2.5 h3422bc3_2 conda-forge; zeromq 4.3.5 h313beb8_0 ; zipp 3.19.2 pyhd8ed1ab_0 conda-forge; zlib 1.2.13 hfb2fe0b_6 conda-forge; zstd 1.5.6 hb46c0d2_0 conda-forge; ```; Im so sorry somethine else is wrong so scanpy.logging.print_versions() doesn't work at the moment. I'll fix it and update the post; </details>,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3144:16337,log,logging,16337,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3144,1,['log'],['logging']
Testability,": \n 30' is None. scanpy/tests/conftest.py:35: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call ------------------------------------------------------------------------------------------------------; running PAGA; finished: added; 'paga/connectivities', connectivities adjacency (adata.uns); 'paga/connectivities_tree', connectivities subtree (adata.uns) (0:00:00); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>. ```pytb; -----; anndata 0.7.4; scanpy 1.6.1.dev25+g74ac4d37; sinfo 0.3.1; -----; PIL 7.2.0; anndata 0.7.4; asciitree NA; cycler 0.10.0; cython_runtime NA; dask 2.26.0; dateutil 2.8.1; fasteners NA; get_version 2.1; h5py 2.10.0; igraph 0.8.2; importlib_metadata 1.7.0; joblib 0.16.0; kiwisolver 1.2.0; legacy_api_wrap 1.2; leidenalg 0.8.1; llvmlite 0.34.0; louvain 0.7.0; matplotlib 3.3.2; monotonic NA; mpl_toolkits NA; natsort 7.0.1; numba 0.51.2; numcodecs 0.7.2; numexpr 2.7.1; numpy 1.19.2; packaging 20.4; pandas 1.1.2; pkg_resources NA; pyparsing 2.4.7; pytz 2020.1; scanpy 1.6.1.dev25+g74ac4d37; scipy 1.5.2; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; tables 3.6.1; texttable 1.6.3; tlz 0.10.0; toolz 0.10.0; yaml 5.3.1; zappy NA; zarr 2.4.0; zipp NA; -----; Python 3.7.9 (default, Aug 31 2020, 07:22:35) [Clang 10.0.0 ]; Darwin-19.6.0-x86_64-i386-64bit; 12 logical CPU cores, i386; -----; Session information updated at 2020-09-16 13:37. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1418:5842,log,logical,5842,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1418,1,['log'],['logical']
Testability,": `adata.var_names[~gene_subset]`, where `gene_subset` is a `dask.array<invert, shape=(3,), dtype=bool, chunksize=(3,), chunktype=numpy.ndarray>`. ```pytb; IndexError: too many indices for array: array is 1-dimensional, but 3 were indexed; ```. The traceback pytest shows is a bit incorrect and shows this line instead:. https://github.com/scverse/scanpy/blob/3e3427d0072e82144711b581113ee10b873a1ba3/scanpy/preprocessing/_normalization.py#L185. ```pytb; ./scanpy/tests/test_normalization.py::test_normalize_total[dask-array-int64] Failed: [undefined]IndexError: too many indices for array: array is 1-dimensional, but 3 were indexed; typ = <function from_array at 0x7f6c35f8d940>, dtype = 'int64'. @pytest.mark.parametrize('dtype', ['float32', 'int64']); def test_normalize_total(typ, dtype):; adata = AnnData(typ(X_total), dtype=dtype); sc.pp.normalize_total(adata, key_added='n_counts'); assert np.allclose(np.ravel(adata.X.sum(axis=1)), [3.0, 3.0, 3.0]); sc.pp.normalize_total(adata, target_sum=1, key_added='n_counts2'); assert np.allclose(np.ravel(adata.X.sum(axis=1)), [1.0, 1.0, 1.0]); ; adata = AnnData(typ(X_frac), dtype=dtype); > sc.pp.normalize_total(adata, exclude_highly_expressed=True, max_fraction=0.7). scanpy/tests/test_normalization.py:45: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; scanpy/preprocessing/_normalization.py:185: in normalize_total; ' The following highly-expressed genes are not considered during '; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = Index(['0', '1', '2'], dtype='object'); key = dask.array<invert, shape=(3,), dtype=bool, chunksize=(3,), chunktype=numpy.ndarray>. def __getitem__(self, key):; """"""; Override numpy.ndarray's __getitem__ method to work as desired.; ; This function adds lists and Series as valid boolean indexers; (ndarrays only supports ndarray with dtype=bool).; ; If resulting ndim != 1, plain ndarray is returned instead of; corresponding `Index` subcl",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2465:1937,assert,assert,1937,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2465,1,['assert'],['assert']
Testability,::test_sparse_nanmean - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_score_genes.py::test_score_genes_sparse_vs_dense - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_score_genes.py::test_score_genes_deplete - AttributeError: 'csr_matrix' object has no attribute 'A'; FAILED scanpy/tests/test_score_genes.py::test_npnanmean_vs_sparsemean - AttributeError: 'csr_matrix' object has no attribute 'A'; ```. ### Minimal code sample. ```python; pip install scipy==1.14.0rc1; pytest; ```. ### Error output. _No response_. ### Versions. <details>. ```; + anndata==0.11.0.dev116+g1bff5fb (from git+https://github.com/scverse/anndata@1bff5fbf0894185c0759b61d78c6df66d6dfeeba); + annoy==1.17.3; + anyio==4.4.0; + array-api-compat==1.7.1; + pillow==10.3.0; + platformdirs==4.2.2; + pluggy==1.5.0; + pre-commit==3.7.1; + profimp==0.1.0; + psutil==5.9.8; + pyarrow==16.1.0; + pygments==2.18.0; + pygsp==0.5.1; + pynndescent==0.5.12; + pyparsing==3.1.2; + pytest==8.2.1; + pytest-cov==5.0.0; + pytest-memray==1.6.0; + pytest-mock==3.14.0; + pytest-nunit==1.0.7; + pytest-xdist==3.6.1; + python-dateutil==2.9.0.post0; + pytz==2024.1; + pyyaml==6.0.1; + rich==13.7.1; + scanorama==1.7.4; + scanpy==1.10.2.dev25+gf5a62eee (from file:///home/vsts/work/1/s); + scikit-image==0.23.2; + scikit-learn==1.5.0; + scikit-misc==0.3.1; + scipy==1.14.0rc1; + scprep==1.1.0; + seaborn==0.13.2; + session-info==1.0.0; + setuptools==70.0.0; + setuptools-scm==8.1.0; + six==1.16.0; + sniffio==1.3.1; + sortedcontainers==2.4.0; + sparse==0.16.0a7; + statsmodels==0.14.2; + stdlib-list==0.10.0; + tasklogger==1.2.0; + tblib==3.0.0; + texttable==1.7.0; + textual==0.63.6; + threadpoolctl==3.5.0; + tifffile==2024.5.22; + toolz==0.12.1; + tornado==6.4; + tqdm==4.66.4; + typing-extensions==4.12.0; + tzdata==2024.1; + uc-micro-py==1.0.3; + umap-learn==0.5.6; + urllib3==2.2.1; + virtualenv==20.26.2; + wrapt==1.16.0; + zarr==2.18.2; + zict==3.0.0; ```. </details>,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3083:2249,mock,mock,2249,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3083,1,['mock'],['mock']
Testability,:test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:19051,test,testing,19051,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,:test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportE,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:7010,test,testing,7010,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"; # of, assume ""finite""; return True; if skip_nonfinite is False:; if isinstance(obj, collections.abc.Iterator):; # needed to accept `array.flat` as input.; # np.flatiter reports as an instance of collections.Iterator; # but can still be indexed via [].; # This has the side effect of re-setting the iterator, but; # that is acceptable.; try:; return obj[0]; except TypeError:; pass; raise RuntimeError(""matplotlib does not support generators ""; ""as input""); return next(iter(obj)); elif isinstance(obj, np.flatiter):; # TODO do the finite filtering on this; return obj[0]; elif isinstance(obj, collections.abc.Iterator):; raise RuntimeError(""matplotlib does not ""; ""support generators as input""); else:; > return next(val for val in obj if safe_isfinite(val)); E StopIteration. ../../../../anaconda3/envs/scanpy-dev/lib/python3.8/site-packages/matplotlib/cbook/__init__.py:1715: StopIteration; ...; ======================================================================== short test summary info =========================================================================; FAILED scanpy/tests/test_paga.py::test_paga_plots[master_paga_continuous_obs-func2] - StopIteration; FAILED scanpy/tests/test_pca.py::test_pca_chunked - AssertionError: ; ======================================= 2 failed, 929 passed, 50 skipped, 1 xfailed, 1 xpassed, 814 warnings in 482.45s (0:08:02) ========================================; ```. #### Versions. <details>. ```; -----; anndata 0.8.0; scanpy 1.10.0.dev47+g99697347; -----; PIL 9.5.0; asciitree NA; cloudpickle 2.2.1; cycler 0.10.0; cython_runtime NA; dask 2023.3.2; dateutil 2.8.2; defusedxml 0.7.1; entrypoints 0.4; fasteners 0.18; h5py 3.8.0; igraph 0.10.4; importlib_resources NA; jinja2 3.1.2; joblib 1.2.0; kiwisolver 1.4.4; leidenalg 0.9.1; llvmlite 0.39.1; markupsafe 2.1.2; matplotlib 3.7.1; mpl_toolkits NA; natsort 8.3.1; numba 0.56.4; numcodecs 0.11.0; numpy 1.23.5; packaging 23.0; pandas 1.5.3; pkg_resources NA; psutil 5.9.4; pyparsing 3.0.9; pytz ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2459:5421,test,test,5421,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2459,2,['test'],"['test', 'tests']"
Testability,"; - Neighbor querying API; - Harmonize storage of backends’ querying indices. 	- use it in doublet detection and scanorama reimplementations. Current solution: `method` arg. https://github.com/scverse/scanpy/blob/ed8e1401d39068782f2435d258b33fce4f7b4a9e/scanpy/neighbors/__init__.py#L32. - if `use_dense_distances`: [`sklearn.metrics.pairwise_distances`](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise_distances.html); - if `method == 'rapids'`: [`cuml.neighbors.NearestNeighbors`](https://docs.rapids.ai/api/cuml/stable/api/#cuml.neighbors.NearestNeighbors); - otherwise: [`umap.umap_.nearest_neighbors`](https://umap-learn.readthedocs.io/en/latest/api.html#umap.umap_.nearest_neighbors); - if `method == 'gauss'`: use umap distances, overwrite its connectivities. ## Evaluating options. See [ann-benchmarks.com](https://ann-benchmarks.com/index.html#datasets). Build time vs query time is not straightforward, see https://github.com/erikbern/ann-benchmarks/issues/207#issuecomment-1180389432 and https://github.com/erikbern/ann-benchmarks/issues/207#issuecomment-1180747770. > If, however, you are simply interested in knn-graph construction then you can get that from pynndescent in less time than even the index construction time (since the prepare phase isn't required, but is a non-trivial part of the index construction time). Plots for index building are on individual dataset pages, like [glove-100-angular](https://ann-benchmarks.com/glove-100-angular_10_angular.html). <details>; <summary>Used metrics</summary>. https://github.com/scverse/scanpy/blob/ed8e1401d39068782f2435d258b33fce4f7b4a9e/scanpy/neighbors/__init__.py#L35-L56. </details>. Interesting:. Name | Demo | wheels: Platforms | wheels: Python | Search speed | Index build; --- | --- | --- | --- | --- | ---; [NMSLIB](https://github.com/nmslib/nmslib) | [6 notebooks](https://github.com/nmslib/nmslib/blob/master/python_bindings/notebooks/README.md) | [Linux wheels](https://pypi.org/project/nmslib/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2519:1009,benchmark,benchmarks,1009,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2519,1,['benchmark'],['benchmarks']
Testability,"; <img width=""281"" alt=""Screen Shot 2022-10-22 at 3 13 47 PM"" src=""https://user-images.githubusercontent.com/99854950/197326001-b8dbd92d-332a-40c6-a9b1-e6c3c0f68a6f.png"">. Below is my basic workflow:; ```python; def pp(adata):; sc.pp.filter_cells(adata, min_genes=200) #get rid of cells with fewer than 200 genes; sc.pp.filter_genes(adata, min_cells=3) #get rid of genes that are found in fewer than 3 cells; adata.var['mt'] = adata.var_names.str.startswith('MT-') # annotate the group of mitochondrial genes as 'mt'; sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True); upper_lim = np.quantile(adata.obs.n_genes_by_counts.values, .98); lower_lim = np.quantile(adata.obs.n_genes_by_counts.values, .02); adata = adata[(adata.obs.n_genes_by_counts < upper_lim) & (adata.obs.n_genes_by_counts > lower_lim)]; adata = adata[adata.obs.pct_counts_mt < 25]; sc.pp.normalize_total(adata, target_sum=1e4) #normalize every cell to 10,000 UMI; sc.pp.log1p(adata) #change to log counts; sc.pp.highly_variable_genes(adata, min_mean=0.0125, max_mean=3, min_disp=0.5) #these are default values; adata.raw = adata #save raw data before processing values and further filtering; adata = adata[:, adata.var.highly_variable] #filter highly variable; sc.pp.regress_out(adata, ['total_counts', 'pct_counts_mt']) #Regress out effects of total counts per cell and the percentage of mitochondrial genes expressed; sc.pp.scale(adata, max_value=10) #scale each gene to unit variance; sc.tl.pca(adata, svd_solver='arpack'); sc.pp.neighbors(adata, n_neighbors=10, n_pcs=20); sc.tl.umap(adata); return adata. adata = sc.read_csv(""./myfile.csv"", first_column_names=True); adata = pp(adata); ```. My computer is Mac book Intel i5. Thanks!; #### Versions. <details>. -----; anndata 0.8.0; scanpy 1.9.1; -----; OpenSSL 22.0.0; PIL 9.2.0; PyObjCTools NA; absl NA; appnope 0.1.2; astunparse 1.6.3; attr 21.4.0; backcall 0.2.0; bcrypt 3.2.0; beta_ufunc NA; binom_ufunc NA; boto3 1.24.28; botocore",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2359:1479,log,log,1479,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2359,1,['log'],['log']
Testability,; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_p,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:3511,test,testing,3511,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:3825,test,tests,3825,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/python.py"", line 1641, in runtest; self.ihook.pytest_pyfunc_call(pyfuncitem=self); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/hooks.py"", line 286, in __call__; return self._hookexec(self, self.get_hookimpls(), kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 93, in _hookexec; return self._inner_hookexec(hook, methods, kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 84, in <lambda>; self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/callers.py"", line 187, in _multicall; res = hook_impl.function(*args); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/python.py"", line 183, in pytest_pyfunc_call; result = testfunction(**testargs); File ""/home/vsts/work/1/s/scanpy/tests/notebooks/test_paga_paul15_subsampled.py"", line 39, in test_paga_paul15_subsampled; sc.tl.draw_graph(adata); File ""/home/vsts/work/1/s/scanpy/tools/_draw_graph.py"", line 181, in draw_graph; logg.info(; File ""/home/vsts/work/1/s/scanpy/logging.py"", line 244, in info; return settings._root_logger.info(msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 56, in info; return self.log(INFO, msg, time=time, deep=deep, extra=extra); File ""/home/vsts/work/1/s/scanpy/logging.py"", line 43, in log; super().log(level, msg, extra=extra); Message: "" finished: added\n 'X_draw_graph_fr', graph_drawing coordinates (adata.obsm)""; Arguments: (); --- Logging error ---; Traceback (most recent call last):; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/logging/__init__.py"", line 1084, in emit; stream.write(msg + self.terminator); ValueError: I/O operation on closed file.; Call stack:; File ""/opt/hostedtoolcache/Python/3.8",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1736:1696,test,testfunction,1696,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1736,3,['test'],"['testargs', 'testfunction', 'tests']"
Testability,"; RUNNING SAM; Iteration: 0, Convergence: 0.022868878389371346. ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-17-4514ae92b370> in <module>; 1 import scanpy.external as sce; 2 for adata in adatalist:; ----> 3 sam_obj = sce.tl.sam(adata); 4 sce.pl.sam(adata,projection='X_umap'). ~/.local/lib/python3.7/site-packages/scanpy/external/tl/_sam.py in sam(adata, max_iter, num_norm_avg, k, distance, standardization, weight_pcs, sparse_pca, n_pcs, n_genes, projection, inplace, verbose); 216 projection=projection,; 217 sparse_pca=sparse_pca,; --> 218 verbose=verbose,; 219 ); 220 . ~/anaconda3/lib/python3.7/site-packages/samalg/__init__.py in run(self, max_iter, verbose, projection, stopping_condition, num_norm_avg, k, distance, preprocessing, npcs, n_genes, weight_PCs, sparse_pca, proj_kwargs); 1014 ; 1015 W, wPCA_data, EDM, = self.calculate_nnm(; -> 1016 n_genes, preprocessing, npcs, nnas, weight_PCs, sparse_pca,; 1017 ); 1018 new = W. ~/anaconda3/lib/python3.7/site-packages/samalg/__init__.py in calculate_nnm(self, n_genes, preprocessing, npcs, num_norm_avg, weight_PCs, sparse_pca, update_manifold); 1117 ; 1118 if update_manifold:; -> 1119 edm = ut.calc_nnm(g_weighted, k, distance); 1120 self.adata.uns[""nnm""] = edm; 1121 EDM = edm.copy(). ~/anaconda3/lib/python3.7/site-packages/samalg/utilities.py in calc_nnm(g_weighted, k, distance); 448 if g_weighted.shape[0] > 8000:; 449 # only uses cosine; --> 450 nnm, dists = nearest_neighbors(g_weighted, n_neighbors=k, metric=distance); 451 EDM = gen_sparse_knn(nnm, dists); 452 EDM = EDM.tocsr(). ~/anaconda3/lib/python3.7/site-packages/samalg/utilities.py in nearest_neighbors(X, n_neighbors, metric, metric_kwds, angular, seed, low_memory); 175 leaf_array=leaf_array,; 176 n_iters=n_iters,; --> 177 verbose=False,; 178 ); 179 . TypeError: some keyword arguments unexpected; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1157:3399,log,logging,3399,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1157,1,['log'],['logging']
Testability,"; batch_categories = [""TI-P2"", ""TM-P2"",; ""TI1-P3"", 'TM1-P3', 'TI2-P3', 'TM2-P3',; ""TI-P4"",'TS1-P4','TS2-P4',; 'lung_P2', 'lung_P5', 'lung_P8', 'lung_P9',; 'lung_P13', 'lung_P16',; 'lung_P20', 'lung_P21', 'lung_P24', 'lung_P28', 'lung_P29',; 'lung_P32', 'lung_P33', 'lung_P34', 'lung_P35', 'lung_P38', 'lung_P39'],; join='outer'). print('Begin of post doublets removal and QC plot'); sc.pp.scrublet(alldata, n_neighbors=10); alldata = alldata[alldata.obs['predicted_doublet']==False, :].copy(); n1 = alldata.shape[0]; print(f'Cells retained after scrublet: {n1}, {n0-n1} removed.'); print(f'End of post doublets removal and QC plots.'); ```. ### Error output. ```pytb; Begin of post doublets removal and QC plot; Running Scrublet; normalizing counts per cell. C:\ProgramData\Anaconda3\envs\dl\lib\site-packages\scanpy\preprocessing\_normalization.py:233: UserWarning: Some cells have zero counts; warn(UserWarning(""Some cells have zero counts"")). finished (0:00:00); WARNING: adata.X seems to be already log-transformed.; extracting highly variable genes. C:\ProgramData\Anaconda3\envs\dl\lib\site-packages\scanpy\preprocessing\_simple.py:377: RuntimeWarning: invalid value encountered in log1p; np.log1p(X, out=X). ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[59], line 2; 1 print('Begin of post doublets removal and QC plot'); ----> 2 sc.pp.scrublet(alldata, n_neighbors=10); 3 alldata = alldata[alldata.obs['predicted_doublet']==False, :].copy(); 4 n1 = alldata.shape[0]. File C:\ProgramData\Anaconda3\envs\dl\lib\site-packages\legacy_api_wrap\__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positional:]. File C:\ProgramData\Anaconda3\env",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3070:6463,log,log-transformed,6463,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3070,1,['log'],['log-transformed']
Testability,"; charset_normalizer 2.0.7; cloudpickle 2.0.0; colorama 0.4.3; cycler 0.10.0; cython_runtime NA; dask 2021.10.0; dateutil 2.8.0; debugpy 1.4.1; decorator 5.0.9; defusedxml 0.7.1; entrypoints 0.3; fasteners NA; fsspec 2021.10.1; gi 3.36.0; gio NA; glib NA; gobject NA; gtk NA; h5py 3.5.0; idna 2.8; igraph 0.9.9; ipykernel 6.3.1; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.18.0; jinja2 2.10.1; joblib 1.0.1; json5 NA; jsonpointer 2.0; jsonschema 3.2.0; jupyter_server 1.10.2; jupyterlab_server 2.7.2; kiwisolver 1.3.2; leidenalg 0.8.8; llvmlite 0.37.0; louvain 0.7.1; markupsafe 1.1.0; matplotlib 3.4.3; matplotlib_inline NA; mpl_toolkits NA; natsort 7.1.1; nbclassic NA; nbformat 5.1.3; nbinom_ufunc NA; netifaces 0.10.4; numba 0.54.0; numcodecs 0.9.1; numexpr 2.7.3; numpy 1.20.3; packaging 21.0; pandas 1.3.2; parso 0.8.2; patsy 0.5.1; pexpect 4.6.0; pickleshare 0.7.5; pkg_resources NA; prometheus_client NA; prompt_toolkit 3.0.20; psutil 5.8.0; ptyprocess 0.7.0; pvectorc NA; pycparser 2.20; pydev_ipython NA; pydevconsole NA; pydevd 2.4.1; pydevd_concurrency_analyser NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.10.0; pynndescent 0.5.5; pyparsing 2.4.7; pyrsistent NA; pytz 2021.1; requests 2.26.0; roifile 2021.6.6; scipy 1.7.1; seaborn 0.11.2; send2trash NA; shapely 1.7.1; simplejson 3.16.0; sitecustomize NA; six 1.14.0; sklearn 1.0.2; sniffio 1.2.0; sparse 0.13.0; sphinxcontrib NA; statsmodels 0.12.2; storemagic NA; tables 3.6.1; terminado 0.11.1; texttable 1.6.4; threadpoolctl 2.2.0; tlz 0.11.1; toolz 0.11.1; torch 1.6.0; tornado 6.1; tqdm 4.62.2; traitlets 5.1.0; typing_extensions NA; umap 0.5.1; urllib3 1.26.6; wcwidth 0.2.5; websocket 1.2.1; yaml 6.0; zarr 2.10.2; zmq 22.2.1; zope NA; -----; IPython 7.27.0; jupyter_client 7.0.2; jupyter_core 4.7.1; jupyterlab 3.1.12; notebook 6.4.3; -----; Python 3.8.10 (default, Sep 28 2021, 16:10:42) [GCC 9.3.0]; Linux-4.4.0-19041-Microsoft-x86_64-with-glibc2.29; 8 logical CPU cores, x86_64. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2244:4031,log,logical,4031,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2244,1,['log'],['logical']
Testability,; multidict 6.0.5; multipledispatch 0.6.0; munkres 1.1.4; muon 0.1.5; natsort 8.4.0; nbclient 0.8.0; nbconvert 7.16.2; nbformat 5.9.2; nbproject 0.10.1; nest_asyncio 1.6.0; networkx 3.2.1; notebook 7.1.1; notebook_shim 0.2.4; numba 0.59.0; numcodecs 0.12.1; numpy 1.24.4; nvtx 0.2.10; omnipath 1.0.8; openpyxl 3.1.2; orjson 3.9.15; overrides 7.7.0; packaging 24.0; pandas 1.5.3; pandocfilters 1.5.0; panel 1.3.8; param 2.0.2; parso 0.8.3; partd 1.4.1; patsy 0.5.6; pexpect 4.9.0; pickleshare 0.7.5; pillow 10.2.0; pip 24.0; pkgutil_resolve_name 1.3.10; platformdirs 4.2.0; pooch 1.8.1; prometheus_client 0.20.0; prompt-toolkit 3.0.42; protobuf 4.25.3; psutil 5.9.8; ptxcompiler 0.8.1; ptyprocess 0.7.0; pure-eval 0.2.2; pyarrow 14.0.2; pyarrow-hotfix 0.6; pycparser 2.21; pyct 0.5.0; pydantic 1.10.14; pyee 8.1.0; Pygments 2.17.2; pylibcugraph 24.2.0; pylibraft 24.2.0; pynndescent 0.5.11; pynvml 11.4.1; pyparsing 3.1.2; pyppeteer 1.0.2; pyproj 3.6.1; PySocks 1.7.1; python-dateutil 2.9.0; python-json-logger 2.0.7; pytometry 0.1.4; pytz 2024.1; pyviz_comms 3.0.1; PyWavelets 1.4.1; PyYAML 6.0.1; pyzmq 25.1.2; raft-dask 24.2.0; rapids_singlecell 0.9.6; readfcs 1.1.7; referencing 0.33.0; requests 2.31.0; rfc3339-validator 0.1.4; rfc3986-validator 0.1.1; rich 13.7.1; rmm 24.2.0; rpds-py 0.18.0; Rtree 1.2.0; scanpy 1.10.0rc2; scikit-image 0.22.0; scikit-learn 1.4.1.post1; scikit-misc 0.3.1; scipy 1.12.0; seaborn 0.13.2; Send2Trash 1.8.2; session-info 1.0.0; setuptools 69.1.1; shapely 2.0.3; simpervisor 1.0.0; single_cell_helper 0.0.1 ; six 1.16.0; sniffio 1.3.1; sortedcontainers 2.4.0; soupsieve 2.5; stack-data 0.6.2; statsmodels 0.14.1; stdlib-list 0.10.0; streamz 0.6.4; tblib 3.0.0; terminado 0.18.0; texttable 1.7.0; threadpoolctl 3.3.0; tifffile 2024.2.12; tinycss2 1.2.1; tomli 2.0.1; toolz 0.12.1; tornado 6.4; tqdm 4.66.2; traitlets 5.14.1; treelite 4.0.0; types-python-dateutil 2.8.19.20240311; typing_extensions 4.10.0; typing-utils 0.1.0; uc-micro-py 1.0.3; ucx-py 0.36.0; umap-le,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2964:5156,log,logger,5156,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2964,1,['log'],['logger']
Testability,; nbformat 5.10.3 pypi_0 pypi; nest-asyncio 1.6.0 py311haa95532_0 ; networkx 3.2.1 pypi_0 pypi; notebook 7.1.2 pypi_0 pypi; notebook-shim 0.2.4 pypi_0 pypi; numba 0.59.1 pypi_0 pypi; numpy 1.26.4 pypi_0 pypi; openssl 3.0.13 h2bbff1b_0 ; overrides 7.7.0 pypi_0 pypi; packaging 24.0 pypi_0 pypi; pandas 2.2.1 pypi_0 pypi; pandocfilters 1.5.1 pypi_0 pypi; parso 0.8.3 pyhd3eb1b0_0 ; patsy 0.5.6 pypi_0 pypi; pillow 10.2.0 pypi_0 pypi; pip 23.3.1 py311haa95532_0 ; platformdirs 4.2.0 pypi_0 pypi; plotly 5.20.0 pypi_0 pypi; prometheus-client 0.20.0 pypi_0 pypi; prometheus_client 0.14.1 py311haa95532_0 ; prompt-toolkit 3.0.43 py311haa95532_0 ; prompt_toolkit 3.0.43 hd3eb1b0_0 ; psutil 5.9.8 pypi_0 pypi; pure_eval 0.2.2 pyhd3eb1b0_0 ; pycparser 2.21 pyhd3eb1b0_0 ; pygments 2.17.2 pypi_0 pypi; pynndescent 0.5.11 pypi_0 pypi; pyparsing 3.1.2 pypi_0 pypi; pysocks 1.7.1 py311haa95532_0 ; python 3.11.8 he1021f5_0 ; python-dateutil 2.9.0.post0 pypi_0 pypi; python-fastjsonschema 2.16.2 py311haa95532_0 ; python-json-logger 2.0.7 py311haa95532_0 ; pytz 2023.3.post1 py311haa95532_0 ; pywin32 306 pypi_0 pypi; pywinpty 2.0.13 pypi_0 pypi; pyyaml 6.0.1 py311h2bbff1b_0 ; pyzmq 25.1.2 py311hd77b12b_0 ; r-askpass 1.0 r36_0 ; r-assertthat 0.2.1 r36h6115d3f_0 ; r-backports 1.1.4 r36h6115d3f_0 ; r-base 3.6.1 hf18239d_1 ; r-base64enc 0.1_3 r36h6115d3f_4 ; r-bh 1.69.0_1 r36h6115d3f_0 ; r-boot 1.3_20 r36h6115d3f_0 ; r-broom 0.5.2 r36h6115d3f_0 ; r-callr 3.2.0 r36h6115d3f_0 ; r-caret 6.0_83 r36h6115d3f_0 ; r-cellranger 1.1.0 r36h6115d3f_0 ; r-class 7.3_15 r36h6115d3f_0 ; r-cli 1.1.0 r36h6115d3f_0 ; r-clipr 0.6.0 r36h6115d3f_0 ; r-cluster 2.0.8 r36h6115d3f_0 ; r-codetools 0.2_16 r36h6115d3f_0 ; r-colorspace 1.4_1 r36h6115d3f_0 ; r-crayon 1.3.4 r36h6115d3f_0 ; r-curl 3.3 r36h6115d3f_0 ; r-data.table 1.12.2 r36h6115d3f_0 ; r-dbi 1.0.0 r36h6115d3f_0 ; r-dbplyr 1.4.0 r36h6115d3f_0 ; r-dichromat 2.0_0 r36h6115d3f_4 ; r-digest 0.6.18 r36h6115d3f_0 ; r-dplyr 0.8.0.1 r36h6115d3f_0 ; r-ellipsis 0.1.0 r36h6115d3,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2969:9156,log,logger,9156,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2969,1,['log'],['logger']
Testability,"; sc.pl.umap(adata2, color = 'sample'); ```; ![image](https://user-images.githubusercontent.com/26215587/118843486-04492200-b8c2-11eb-8e2b-6aaf59564721.png). #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.7.1; sinfo 0.3.1; -----; Bio 1.78; PIL 8.2.0; adjustText NA; anndata 0.7.5; annoy NA; backcall 0.2.0; brotli NA; cachecontrol 0.12.6; cairo 1.19.1; certifi 2020.06.20; cffi 1.14.5; changeo 1.0.2; chardet 4.0.0; cloudpickle 1.6.0; cycler 0.10.0; cython_runtime NA; dandelion 0.1.2; dask 2021.03.0; dateutil 2.8.1; decorator 5.0.6; descartes NA; distance NA; get_version 2.1; google NA; h5py 2.10.0; harmonypy NA; hdmedians NA; idna 2.10; igraph 0.8.3; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.6.3; jedi 0.17.0; joblib 1.0.1; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.3; llvmlite 0.34.0; matplotlib 3.3.4; mizani 0.7.2; mpl_toolkits NA; msgpack 1.0.2; natsort 7.1.1; networkx 2.5; numba 0.51.2; numexpr 2.7.1; numpy 1.20.2; packaging 20.9; palettable 3.3.0; pandas 1.2.4; parso 0.8.2; patsy 0.5.1; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; plotnine 0.7.1; polyleven NA; presto 0.6.2; prompt_toolkit 3.0.17; ptyprocess 0.7.0; pycparser 2.20; pygments 2.8.1; pynndescent 0.5.2; pyparsing 2.4.7; pytoml NA; pytz 2021.1; pywt 1.1.1; requests 2.25.1; scanpy 1.7.1; scipy 1.6.3; scrublet NA; seaborn 0.11.1; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; skbio 0.5.6; skimage 0.18.1; sklearn 0.23.2; socks 1.7.1; sparse 0.11.2; sphinxcontrib NA; statsmodels 0.12.1; storemagic NA; tables 3.6.1; texttable 1.6.3; tlz 0.11.1; toolz 0.11.1; tornado 6.1; tqdm 4.59.0; traitlets 5.0.5; typing_extensions NA; umap 0.5.1; urllib3 1.26.4; wcwidth 0.2.5; yaml 5.4.1; zmq 20.0.0; -----; IPython 7.22.0; jupyter_client 6.1.12; jupyter_core 4.7.1; notebook 6.3.0; -----; Python 3.8.8 (default, Feb 24 2021, 21:46:12) [GCC 7.3.0]; Linux-4.15.0-142-generic-x86_64-with-glibc2.10; 64 logical CPU cores, x86_64; -----; Session information updated at 2021-05-19 16:44. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1846:3827,log,logical,3827,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1846,1,['log'],['logical']
Testability,<!-- ; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Add pynndescent to `sc.logging.print_header()`. Close #1613,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1807:258,log,logging,258,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1807,1,['log'],['logging']
Testability,"<!-- Describe the bug -->. I followed the tutorial on [Preprocessing and clustering 3k PBMCs](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html). The first steps worked quit well, but when I want to run PCA the following error occurs (see below). <!-- To reproduce -->; Follow the tutorial ([pbmc3k.ipynb](https://github.com/scverse/scanpy-tutorials/blob/75c5ebb5b63769aee65f38842a34b7f7e1bbd476/pbmc3k.ipynb)) until the following line:. ```python; sc.tl.pca(adata, svd_solver='arpack'); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->. ```pytb; Traceback (most recent call last):; File ""/Users/pbinder/Nextcloud/projects/memory-tcell-scRNA-seq/tutorials/scanpy/scanpy-tutorials-master/test.py"", line 51, in <module>; sc.tl.pca(adata, svd_solver='arpack'); File ""/Users/pbinder/opt/anaconda3/envs/scRNA/lib/python3.9/site-packages/scanpy/preprocessing/_pca.py"", line 188, in pca; X_pca = pca_.fit_transform(X); File ""/Users/pbinder/opt/anaconda3/envs/scRNA/lib/python3.9/site-packages/sklearn/utils/_set_output.py"", line 140, in wrapped; data_to_wrap = f(self, X, *args, **kwargs); File ""/Users/pbinder/opt/anaconda3/envs/scRNA/lib/python3.9/site-packages/sklearn/decomposition/_pca.py"", line 462, in fit_transform; U, S, Vt = self._fit(X); File ""/Users/pbinder/opt/anaconda3/envs/scRNA/lib/python3.9/site-packages/sklearn/decomposition/_pca.py"", line 514, in _fit; return self._fit_truncated(X, n_components, self._fit_svd_solver); File ""/Users/pbinder/opt/anaconda3/envs/scRNA/lib/python3.9/site-packages/sklearn/decomposition/_pca.py"", line 609, in _fit_truncated; U, S, Vt = svds(X, k=n_components, tol=self.tol, v0=v0); File ""/Users/pbinder/opt/anaconda3/envs/scRNA/lib/python3.9/site-packages/scipy/sparse/linalg/_eigen/_svds.py"", line 532, in svds; _, eigvec = eigsh(XH_X, k=k, tol=tol ** 2, maxiter=maxiter,; File ""/Users/pbinder/opt/anaconda3/envs/scRNA/lib/python3.9/site-packages/scipy/sparse/linalg/_eigen/arpack/arpack.py"", line ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2473:745,test,test,745,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2473,1,['test'],['test']
Testability,"<!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2813; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: only dev changes. this tests that `log1p`, `normalize_per_cell`, `filter_cells`, and `filter_genes` return dask arrays when handed dask arrays.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2814:91,Test,Tests,91,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814,2,"['Test', 'test']","['Tests', 'tests']"
Testability,<!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2774:89,Test,Tests,89,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2774,1,['Test'],['Tests']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->. Ingest tries to search for the metric used when neighbors was called. When this information is not available it fails. Is there a workaround for this? . <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; adata = sc.datasets.pbmc68k_reduced(); adata_ref = sc.datasets.pbmc3k_processed(). var_names = adata_ref.var_names.intersection(adata.var_names); adata_ref = adata_ref[:, var_names]; adata = adata[:, var_names]. # add fake batch; adata_ref.obs['batch'] = pd.Categorical(np.random.choice(a=[0, 1, 2], size=adata_ref.shape[0])). sc.pp.pca(adata_ref); sc.external.pp.bbknn(adata_ref, batch_key='batch'); sc.tl.umap(adata_ref); sc.tl.ingest(adata, adata_ref, obs='louvain', embedding_method='umap'); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; scanpy/scanpy/tools/_ingest.py in _init_neighbors(self, adata, neighbors_key); 283 dist_args = (); 284 ; --> 285 self._metric = neighbors['params']['metric']; 286 dist_func = named_distances[self._metric]; 287 . KeyError: 'metric'; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.7.dev83+g5345a50.d20200506",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1201:1208,log,logging,1208,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1201,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->. y-axis range of sc.pl.rank_genes_groups seems unnecessarily long:. ![image](https://user-images.githubusercontent.com/1140359/88754278-41bea200-d12c-11ea-9d8c-aeb013ea6a02.png). <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc. sc.set_figure_params(dpi=72); adata = sc.datasets.paul15(); sc.pp.log1p(adata); sc.tl.rank_genes_groups(adata, groupby='paul15_clusters', method='t-test'); sc.pl.rank_genes_groups(adata, sharey=False); ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->. scanpy==1.5.2.dev52+g10937f5f anndata==0.7.4 umap==0.4.6 numpy==1.19.0 scipy==1.5.1 pandas==1.0.5 scikit-learn==0.23.1 statsmodels==0.11.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1335:526,test,test,526,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1335,2,"['log', 'test']","['logging', 'test']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; ... <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1136:341,log,logging,341,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1136,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; ... AttributeError: 'AnnData' object has no attribute 'obs_vector', when `pl.umap`, `pl.violin`. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; ...sc.pl.violin(adata, ['n_genes', 'n_counts', 'percent_mito'],jitter=0.4, multi_panel=True); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...AttributeError Traceback (most recent call last); <ipython-input-41-ed9365d2081e> in <module>; ----> 1 sc.pl.violin(adata, ['n_genes', 'n_counts', 'percent_mito'],jitter=0.4, multi_panel=True). ~/anaconda3/envs/myenv/lib/python3.7/site-packages/scanpy/plotting/_anndata.py in violin(adata, keys, groupby, log, use_raw, stripplot, jitter, size, scale, order, multi_panel, show, xlabel, rotation, save, ax, **kwds); 636 obs_df = get.obs_df(adata, keys=[groupby] + keys, use_raw=use_raw); 637 else:; --> 638 obs_df = get.obs_df(adata, keys=keys, use_raw=use_raw); 639 if groupby is None:; 640 obs_tidy = pd.melt(obs_df, value_vars=keys). ~/anaconda3/envs/myenv/lib/python3.7/site-packages/scanpy/get.py in obs_df(adata, keys, obsm_keys, layer, gene_symbols, use_raw); 160 for k, l in zip(keys, lookup_keys):; 161 if not use_raw or k in adata.obs.columns:; --> 162 df[k] = adata.obs_vector(l, layer=layer); 163 else:; 164 df[k] = adata.raw.obs_vector(l). AttributeError: 'AnnData' object has no attribute 'obs_vector'. ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...scanpy==1.4.3 anndata==0.6.20 umap==0.3.9 numpy==1.17.0 scipy==1.3.0 pandas==0.23.4 scikit-learn==0.21.3 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/942:783,log,log,783,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/942,2,['log'],"['log', 'logging']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; ... I am not sure it's bug or package error. I am getting Segmentation fault error with sc.pp.calculate_qc_metrics with my data. I tried running this on eg. data, and have the same error. I think this might be related to numba issue, but not sure. I did ran python debugger on the script, also attaching the output i got. ; [scanpylog.txt](https://github.com/theislab/scanpy/files/4567012/scanpylog.txt). <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; #!/usr/bin/env python; import os, sys ; import scanpy as sc; import scanpy.external as sce; import scipy as sp; import numpy as np; import pandas as pd; os.getcwd(). #sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); #sc.logging.print_versions() #this also give segmentation fault error . #1102 external eg file ; #curl -o pbmc_1k_v2_filtered_feature_bc_matrix.h5 -O http://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_v2/pbmc_1k_v2_filtered_feature_bc_matrix.h5. #load file; ext_AD = sc.read_10x_h5('/home/pjb40/scratch/KimCarla_Timeseries_scRNAseq_lung_cancer_organoids_hbc03856_scrathDir/data/TimeSeries_epithelial_ScanpyNotebook/ext_data/pbmc_1k_v2_filtered_feature_bc_matrix.h5', gex_only = True). ext_AD.var_names_make_unique(). print(ext_AD). sc.pp.calculate_qc_metrics(ext_AD, inplace=True). print (ext_AD). ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; Traceback (most recent call last):; File ""timeseriesScanpy.py"", line 65, in <module>; sc.pp.calculate_qc_metrics(ext_AD, inplace=True); File ""/home/pjb40/jupytervenv/lib/python3.7/site-packages/scanpy/preprocessing/_qc.py"", line 274, in calculate_qc_metrics; parallel=parallel; File ""/home/pjb40/jupytervenv/lib/python3.7/site-packages/scanpy/preprocessing/_qc.py"", line 102, in describe_obs; proportions = top_segment_proportions(X, percent_top, par",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1193:841,log,logging,841,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1193,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; ... I am running into an error when I try to create PAGA plots using the pl.paga() function. I get the error: ""AttributeError: module 'matplotlib.cbook' has no attribute 'is_numlike' "". After looking through matplotlib documentation is_numlike appears to be deprecated. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; import scanpy.external as sce; import pandas as pd; import numpy as np; import matplotlib as mpl; import matplotlib.pyplot as pl; from scipy.stats import mode; from collections import Counter; import loompy. sc.settings.verbosity = 3; sc.set_figure_params(color_map='viridis'); sc.logging.print_versions(). adata_sim = sc.tl.sim('krumsiek11'); adata_sim.var_names_make_unique(). sc.pp.neighbors(adata_sim, n_neighbors=7, n_pcs=20); sc.tl.louvain(adata_sim). sc.tl.paga(adata_sim); sc.pl.paga(adata_sim, color=['louvain'], edge_width_scale=0.2, threshold=0.2); ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-10-973f72fa2eb5> in <module>; ----> 1 sc.pl.paga(adata_sim, color=['louvain'], edge_width_scale=0.2, threshold=0.2). ~/.local/lib/python3.6/site-packages/scanpy/plotting/_tools/paga.py in paga(adata, threshold, color, layout, layout_kwds, init_pos, root, labels, single_component, solid_edges, dashed_edges, transitions, fontsize, fontweight, fontoutline, text_kwds, node_size_scale, node_size_power, edge_width_scale, min_edge_width, max_edge_width, arrowsize, title, left_margin, random_state, pos, normalize_to_color, cmap, cax, colorbar, cb_kwds, frameon, add_pos, export_to_gexf, use_raw, colors, groups, plot, show, save, ax); 541 single_component=single_component,; 542 arrowsize=arrowsize,; --> 543 pos=pos,; 54",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1094:751,log,logging,751,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1094,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; .../usr/local/lib/python3.6/site-packages/joblib/externals/loky/backend/semaphore_tracker.py:198: UserWarning: semaphore_tracker: There appear to be 6 leaked semaphores to clean up at shutdown; len(cache)). <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; ...gene_trends = d.palantir.presults.compute_gene_trends(pr_res, ; ...: d.imp_df.iloc[:, 0:1000], ['RG']) ; ...: . ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...Segmentation fault (core dumped); ```; it made me out of the python environment.; #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...; Scanpy version: 1.4.3",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1223:729,log,logging,729,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1223,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; ...; ![image](https://user-images.githubusercontent.com/39158851/82787725-a09c3c80-9e99-11ea-9a09-94e43c114185.png); with adata like this:; ![image](https://user-images.githubusercontent.com/39158851/82787817-d6412580-9e99-11ea-9fc6-2866402b668e.png). and adata.X:; ![image](https://user-images.githubusercontent.com/39158851/82787794-cc1f2700-9e99-11ea-9957-a1b37cbd7881.png). <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...; 1.5.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1246:715,log,logging,715,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1246,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; ...Trying to use `adata.write()` to save a results file - running into the same issue over and over. I tried uninstalling and reinstall both scanpy as well as h5py. . <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```; results_file = 'NG2019_MCF10A2.h5ad'; adata.write(results_file); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```; OSError: Unable to create link (name already exists). Above error raised while writing key 'genes' of <class 'h5py._hl.group.Group'> from /. Above error raised while writing key 'genes' of <class 'h5py._hl.group.Group'> from /. Above error raised while writing key 'raw/var' of <class 'h5py._hl.files.File'> from /.; ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1275:871,log,logging,871,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1275,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; ...when I did combat batch correction, it outputs errors. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; # ComBat batch correction; sc.pp.combat(adata, key='sample'); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-5-350690ae55dc> in <module>; 1 # ComBat batch correction; ----> 2 sc.pp.combat(adata, key='sample'). ~/anaconda2/envs/scanpy/lib/python3.6/site-packages/scanpy/preprocessing/_combat.py in combat(adata, key, covariates, inplace); 266 denom = np.dot(dsq, np.ones((1, n_batches[j]))); 267 numer = np.array(bayesdata[batch_idxs] - np.dot(batch_design.loc[batch_idxs], gamma_star).T); --> 268 bayesdata[batch_idxs] = numer / denom; 269 ; 270 vpsq = np.sqrt(var_pooled).reshape((len(var_pooled), 1)). ValueError: operands could not be broadcast together with shapes (23259,18243) (23259,15479) ; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.6 anndata==0.7.1 umap==0.3.10 numpy==1.17.3 scipy==1.3.1 pandas==0.25.2 scikit-learn==0.21.3 statsmodels==0.11.1 python-igraph==0.8.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1170:1175,log,logging,1175,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1170,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Hey!; The color bar and legend don't seem to align well... might be because i'm subsetting the object. Here is what happens (reproducible example and my plot, which is even stranger with legend overlap):. <img width=""623"" alt=""Screenshot 2020-03-15 at 13 09 33"" src=""https://user-images.githubusercontent.com/13019956/76701118-73bff200-66be-11ea-9c99-ee4e0427bbfa.png"">; <img width=""580"" alt=""Screenshot 2020-03-15 at 13 02 52"" src=""https://user-images.githubusercontent.com/13019956/76701119-76224c00-66be-11ea-9b45-b94c1d9a57bd.png"">. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; adata = sc.datasets.pbmc68k_reduced(); sc.pl.dotplot(adata[adata.obs.bulk_labels.isin(['Dendritic', 'CD14+ Monocyte', 'CD4+/CD25 T Reg']),], var_names=['HES4', 'TNFRSF4', 'SSU72'], groupby='bulk_labels', figsize=(8,8)). ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.5.1 anndata==0.7.1 umap==0.3.10 numpy==1.18.1 scipy==1.4.1 pandas==1.0.1 scikit-learn==0.22.2 statsmodels==0.11.1 python-igraph==0.8.0 louvain==0.6.1. Also, matplotlib is 3.1.3",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1103:1000,log,logging,1000,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1103,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Hi I'm trying to run Louvain clustering but I'm getting a module not found error. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; sc.tl.louvain(dge_E, flavor='vtraag', resolution=0.5; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ModuleNotFoundError Traceback (most recent call last); <ipython-input-43-d2a2f7b009fa> in <module>; ----> 1 sc.tl.louvain(dge_E, flavor='vtraag', resolution=0.5). c:\users\jamie\appdata\local\programs\python\python37\lib\site-packages\scanpy\tools\_louvain.py in louvain(adata, resolution, random_state, restrict_to, key_added, adjacency, flavor, directed, use_weights, partition_type, partition_kwargs, neighbors_key, obsp, copy); 135 weights = None; 136 if flavor == 'vtraag':; --> 137 import louvain; 138 if partition_type is None:; 139 partition_type = louvain.RBConfigurationVertexPartition. ModuleNotFoundError: No module named 'louvain'; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1283:1108,log,logging,1108,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1283,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Hi Scanpy team,; I am trying to analyse CTE-seq data. At the nomalization step of the protein data, the attibute normalize_geometric is not recognize. Could this be a version issue?; Thank you for your help!. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; sc.pp.normalize_geometric(protein). <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...AttributeError Traceback (most recent call last); <ipython-input-80-db93ca6d0f1d> in <module>; ----> 1 sc.pp.normalize_geometric(protein). AttributeError: module 'scanpy.preprocessing' has no attribute 'normalize_geometric'. ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.7.dev30+g668b6776 anndata==0.7.1 umap==0.3.10 numpy==1.16.2 scipy==1.3.0 pandas==0.24.2 scikit-learn==0.22.2.post1 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1208:795,log,logging,795,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1208,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Hi,. I am new to python and have no idea what this could imply but thought I could report it. I am reading a file convert from `seurat` using `as.loom`. This file works fine if I open it in `scvelo` using `scv.read`, however, when starting from scanpy using; ```; adata = sc.read_loom(""seu.loom""); ```; I get the following:; ```; /Users/rmvl/miniconda3/envs/scanpy_env/lib/python3.7/site-packages/loompy/loom_layer.py:123: RuntimeWarning: invalid value encountered in not_equal; nonzeros = np.where(vals != 0); ```; I have tried closing all kernels, reinstalling loompy, scanpy, but nothing changed. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.5.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.18.1 scipy==1.4.1 pandas==1.0.1 scikit-learn==0.22.1 statsmodels==0.11.1 python-igraph==0.8.0 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1074:712,log,logging,712,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1074,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Hi,. not really a bug, more of a documentation issue: ; `sc.tl.rank_genes_groups` seems to expect log-transformed data (be it in `.X` or `.raw.X`).; To my knowledge this is **not mentioned in the docs**. I just ran into trouble and then found out via #671 and #517 . . It's not a problem for the p-values (if the data is not log-transformed it just does the t-test etc on the counts), but the resulting fold-changes are wrong (it essentially tries to undo the expected log-transform):; ```python; foldchanges = (np.expm1(mean_group) + 1e-9) / (np.expm1(mean_rest) + 1e-9); ```; I was totally unaware of this (been using scanpy for quite a while), especially since I usually store the plain raw counts in the `adata.raw` field, which is used *by default* in `rank_genes_groups`. We should at least mention it in the docstring, but these things are easy to overlook too...; Is there any way that scanpy records the transformations you've done to the data (and if the log is missing, just spits out an error in rank_genes_groups)?. Also, is there a ""best-practice"" guide of what data to store in which parts of the AnnData objects?; `.raw` and the `.layer` dont have a lot of documentation. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.4.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.17.3 scipy==1.3.1 pandas==0.25.2 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/967:172,log,log-transformed,172,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/967,6,"['log', 'test']","['log', 'log-transform', 'log-transformed', 'logging', 'test']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; I am looking for the expression of 'NCAM1'. It works when I am plotting my data (umap, violin plot, matrix plot) but I cant find it in the adata.var and I am not able to subset adata for this particular gene while it is working with the other genes. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; #what works:; marker_genes = ['NCAM1']; ax = sc.pl.violin(adata, marker_genes, groupby='timepoint'). # what doesnt work:; subset_NCAM = adata[:, 'NCAM1']. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ""None of [Index(['NCAM1'], dtype='object', name='index')] are in the [index]"". #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > 1.4.4",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/999:781,log,logging,781,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/999,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; I am trying to integrate data using ingest. I followed exactly the same steps and scripts as described in the scanpy tutorial. However, I got the error message that ‘UMAP’ object has no attribute ‘_input_distance_func’ every time when I ran the command of sc.tl.ingest(adata, adata_ref, obs=‘louvain’). I have the same problem even with using the example pbmc3k_processed and pbmc3k_processed as in the tutorial. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```; adata_ref = sc.datasets.pbmc3k_processed(); adata = sc.datasets.pbmc68k_reduced(); var_names = adata_ref.var_names.intersection(adata.var_names); adata_ref = adata_ref[:, var_names]; adata = adata[:, var_names]; sc.pp.pca(adata_ref); sc.pp.neighbors(adata_ref); sc.tl.umap(adata_ref). # problem occurs here; sc.tl.ingest(adata, adata_ref, obs='louvain'); ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```; AttributeError Traceback (most recent call last); <ipython-input-12-27e22cc8f823> in <module>(); ----> 1 sc.tl.ingest(adata, adata_ref, obs='louvain'). 3 frames; /usr/local/lib/python3.6/dist-packages/umap/umap_.py in transform(self, X); 2006 try:; 2007 # sklearn pairwise_distances fails for callable metric on sparse data; -> 2008 _m = self.metric if self._sparse_data else self._input_distance_func; 2009 dmat = pairwise_distances(; 2010 X, self._raw_data, metric=_m, **self._metric_kwds. AttributeError: 'UMAP' object has no attribute '_input_distance_func'; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.6 anndata==0.7.1 umap==0.4.1 numpy==1.18.2 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.10.2 python-igraph==0.8.0 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1181:1653,log,logging,1653,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1181,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; I am using scanpy with pyscenic. I am able to use tsne with rep ""X_pca"", but when I try to use a custom rep (X_aucell) to create a tsne plot, the kernel dies and Python also crashes. I can also use U-map with rep X_aucell. I have been able to use tsne with rep aucell on larger datasets in the past, so I have a hard time believing it's a memory issue. I'm really lost on what is causing this. I have restarted my computer and jupyter multiple times. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; sc.tl.tsne(adata, use_rep='X_aucell'); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; computing tSNE; using the 'MulticoreTSNE' package by Ulyanov (2017). Kernel Restarting ; The kernel appears to have died. It will restart automatically; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.1 anndata==0.7.3 umap==0.4.3 numpy==1.18.4 scipy==1.4.1 pandas==0.25.3 scikit-learn==0.23.1 statsmodels==0.11.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1291:970,log,logging,970,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1291,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; I have `pytorch` and `scanpy` installed inside a conda environment. When I want to import scanpy **after** torch, the import won't finish. The interesting part is that importing scanpy before torch is possible! For example, this code takes a long time and probably does not finish:. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import torch; import scanpy; ```. But the following example works:. ```python; import scanpy; import torch; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.1 anndata==0.7.3 umap==0.4.4 numpy==1.18.5 scipy==1.4.1 pandas==1.0.5 scikit-learn==0.23.1 statsmodels==0.11.1 pytorch==1.1.0 torchvision==0.3.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1286:704,log,logging,704,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1286,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; I installed the package by `pip install scanpy`. When I imported it, there was such an error. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/sibcb1/mxqianlab1/common/anaconda/envs/cnmf_env/lib/python3.6/site-packages/scanpy/__init__.py"", line 36, in <module>; from . import tools as tl; File ""/sibcb1/mxqianlab1/common/anaconda/envs/cnmf_env/lib/python3.6/site-packages/scanpy/tools/__init__.py"", line 17, in <module>; from ._sim import sim; File ""/sibcb1/mxqianlab1/common/anaconda/envs/cnmf_env/lib/python3.6/site-packages/scanpy/tools/_sim.py"", line 23, in <module>; from .. import _utils, readwrite, logging as logg; File ""/sibcb1/mxqianlab1/common/anaconda/envs/cnmf_env/lib/python3.6/site-packages/scanpy/readwrite.py"", line 10, in <module>; import tables; File ""/sibcb1/mxqianlab1/common/anaconda/envs/cnmf_env/lib/python3.6/site-packages/tables/__init__.py"", line 93, in <module>; from .utilsextension import (; ImportError: libblosc.so.1: cannot open shared object file: No such file or directory. ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > version 1.5.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1284:942,log,logging,942,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1284,3,['log'],"['logg', 'logging']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; I ran filter_cells but still get a zero column. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3); sc.pp.filter_cells(adata, min_counts=300); sc.pp.filter_genes(adata, min_counts=1); sc.pp.filter_cells(adata,max_counts=15000). sc.pl.scatter(adata, x='nCount_RNA', y='percent.mt'); sc.pl.scatter(adata, x='nCount_RNA', y='nFeature_RNA'); sc.pl.highest_expr_genes(adata, n_top=20 ). print(np.any(adata.X.sum(axis=0) == 0)) # A gene's total UMI across all cells; print(np.any(adata.X.sum(axis=1) == 0)) # nUMI. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```; True; False; ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; Running scvelo 0.1.25 (python 3.7.3) on 2020-03-04 08:24.; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1083:864,log,logging,864,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1083,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; I'm trying to run an enrichment analysis after filtering out certain genes via `sc.tl.filter_rank_genes_groups`, so I use `key='rank_genes_groups_filtered'` as an argument for `sc.queries.enrich`. Since the filtered values are replaced with `nan` I hoped they'd by ignored in the enrichment analysis, but it actually leads to an uninformative `AssertionError`. My suggestion here is simply to filter `nan` values from the gene list around here and 2 lines later: https://github.com/theislab/scanpy/blob/249fc572471683357b86b8bbf41d3284118bc8f8/scanpy/queries/_queries.py#L296. I can make a little PR if we agree with this simple fix. Note you can reproduce this very simply without an adata object (but of course the likely use case is with an adata object as outlined above):. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```; sc.queries.enrich([float('nan')]); ```; Output:; <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; AssertionError: query failed with error 500; ```. #### Versions:; ```; scanpy==1.4.5.post2 anndata==0.6.22.post1 umap==0.3.10 numpy==1.18.1 scipy==1.2.1 pandas==1.0.1 scikit-learn==0.22.1 statsmodels==0.11.0 python-igraph==0.8.0; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1043:418,Assert,AssertionError,418,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1043,2,['Assert'],['AssertionError']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; In the `sc.tl.dendrogram` module, I noticed that the correlation matrix was directly inputted into the `scipy.cluster.hierarchy.linkage`. That results in calculating the distance between samples by the Euclidean(X1_cor_with_others, X2_cor_with_others). Shouldn't the distance be the pure correlation value here? Please correct me if I didn't understand it correctly. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; The one I would perfer; ```python; df = 1-adata.uns['dendrogram_sample']['correlation_matrix']; data_linkage = hierarchy.linkage(ssd.squareform(; df); ...; ```; The one currently in sc.tl.dendrogram; ```python; data_linkage = hierarchy.linkage(adata.uns['dendrogram_sample']['correlation_matrix']); ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1288:992,log,logging,992,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1288,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; It seems the sc.tl.draw_graph() method fix the layout to 'fr' regardless of the input parameter? So I'm unable to use other method to produce the layout. . I'm using an example data from your tutorial. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import numpy as np; import pandas as pd; import matplotlib.pyplot as pl; from matplotlib import rcParams; import scanpy as sc. adata = sc.datasets.paul15(); sc.pp.recipe_zheng17(adata); sc.tl.pca(adata, svd_solver='arpack'); sc.pp.neighbors(adata, n_neighbors=4, n_pcs=20); sc.tl.draw_graph(adata, layout='fa'); adata.obsm; ```. Although I set layout to 'fa', the output is still a 'fr' layout?. ```; AxisArrays with keys: X_pca, X_draw_graph_fr; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.1 anndata==0.7.3 umap==0.3.10 numpy==1.17.4 scipy==1.4.1 pandas==1.0.0 scikit-learn==0.21.3 statsmodels==0.11.1 python-igraph==0.8.0 leidenalg==0.7.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1299:871,log,logging,871,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1299,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Running Python 3.7 on Jupyter lab, with version 1.4.6 and also with 1.4.4.post1 (the version my friend can successfully run). When creating an AnnData object, and trying to run calculate_qc_metrics, I get the following error:. ```pytb; AssertionError: Sizes of partitioned, $174.6 do not match on /home/$USER/miniconda3/lib/python3.7/site-packages/scanpy/preprocessing/_qc.py (397). ```. What I find most interesting, is that the adata.X object is a **CSR** matrix, whereas for my friend whose code works, adata.X is a **SparseCSRView**. Why is this the case? (same scanpy versions). <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; batch='pool1'. adata = sc.read_mtx(folder.format(batch)+'matrix.mtx'); adata = adata.transpose(); adata.obs['barcodes'] = pd.read_csv(folder.format(batch)+'barcodes.tsv', sep = '\t', header = None).values; adata.var_names = pd.read_csv(folder.format(batch)+'features.tsv', sep = '\t', header = None)[0].values. sc.pp.calculate_qc_metrics(adata). ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...; **EDIT: Creating another environment with Python 3.6.1 fixes the issue... What could be wrong?**",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1143:310,Assert,AssertionError,310,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1143,2,"['Assert', 'log']","['AssertionError', 'logging']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; The bug is just like the title of issue, _AttributeError: module 'scanpy' has no attribute 'anndata'_, for I just wanna to load a h5ad file from Tabula-Muris dataset; <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc. data = sc.anndata.read_h5ad(''tabula-muris-senis-facs-processed-official-annotations-Bladder.h5ad'); ```; <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; Traceback (most recent call last):. File ""<ipython-input-91-67a79760d7cb>"", line 1, in <module>; sc.anndata.read_h5ad('tabula-muris-senis-facs-processed-official-annotations-Bladder.h5ad'). AttributeError: module 'scanpy' has no attribute 'anndata'; ```; #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.3 anndata==0.6.19 umap==0.3.10 numpy==1.14.6 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.20.1 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1322:866,log,logging,866,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1322,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; The y-scale label on the right of the stacked_violin is missing in the version of 1.5.2.dev. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; pbmc = sc.datasets.pbmc68k_reduced(); marker_genes = ['S100A8', 'GNLY', 'NKG7', 'KLRB1', 'FCGR3A', 'FCER1A', 'CST3']; sc.pl.stacked_violin(pbmc,marker_genes,groupby='louvain',row_palette='muted',figsize=(7,4),log=False); sc.logging.print_versions(); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ![download](https://user-images.githubusercontent.com/30639029/87759504-434ea880-c7c3-11ea-9c3a-b59e027ffeb6.png). #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.2.dev123+g0cf308c anndata==0.7.3 umap==0.4.4 numpy==1.18.5 scipy==1.4.1 pandas==1.0.4 scikit-learn==0.23.1 statsmodels==0.11.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1321:502,log,log,502,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1321,3,['log'],"['log', 'logging']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Trying for the first time the tutorial notebook and I stumble onto the error below. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; pip install git+https://github.com/theislab/scanpy.git@spatial; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; Collecting git+https://github.com/theislab/scanpy.git@spatial; Cloning https://github.com/theislab/scanpy.git (to revision spatial) to /tmp/pip-req-build-1aajpyr3; Running command git clone -q https://github.com/theislab/scanpy.git /tmp/pip-req-build-1aajpyr3; WARNING: Did not find branch or tag 'spatial', assuming revision or ref.; Running command git checkout -q spatial; error: pathspec 'spatial' did not match any file(s) known to git.; ERROR: Command errored out with exit status 1: git checkout -q spatial Check the logs for full command output.; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1104:956,log,logs,956,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1104,1,['log'],['logs']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; Trying to make a violin plot adding the seaborn hue argument will result in ValueError.; In adata, 'timepoint' and 'replicate' are categorical adata.obs containing floats and ints, respectively. 'timepoint' is the age of the embryo from which cells were isolated (9.5, 10.5, etc) and 'replicate' the number of the replica (1, 2, 3). <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```; sc.pl.violin(adata, 'n_genes', jitter=0.4, groupby = 'timepoint', stripplot=False, hue='replicate'); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```; sc.pl.violin(adata, 'n_genes', jitter=0.4, groupby = 'timepoint', stripplot=False, hue='replicate'); Traceback (most recent call last):. File ""<ipython-input-5-756b321177a2>"", line 1, in <module>; sc.pl.violin(adata, 'n_genes', jitter=0.4, groupby = 'timepoint', stripplot=False, hue='replicate'). File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/plotting/_anndata.py"", line 759, in violin; **kwds,. File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/seaborn/categorical.py"", line 2393, in violinplot; color, palette, saturation). File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/seaborn/categorical.py"", line 559, in __init__; self.establish_variables(x, y, hue, data, orient, order, hue_order). File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/seaborn/categorical.py"", line 152, in establish_variables; raise ValueError(err). ValueError: Could not interpret input 'replicate'; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.6 anndata==0.7.1 umap==0.4.1 numpy==1.18.1 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.8.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1174:1715,log,logging,1715,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1174,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; When I use `sc.pp.log1p(adata)` and then `sc.pp.log1p(adata, layer='other')` it warns me that the data has already been logged even though I am logging a layer as opposed to adata.X. Would be nice to flag logging for each layer instead of when anything is logged. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc. adata = sc.datasets.pbmc3k_processed(); adata.layers['other'] = adata.X; sc.pp.log1p(adata, layer='other'); sc.pp.log1p(adata); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; WARNING: adata.X seems to be already log-transformed.; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.2.dev5+ge5d246aa anndata==0.7.3 umap==0.3.10 numpy==1.18.5 scipy==1.5.0 pandas==1.0.5 scikit-learn==0.23.1 statsmodels==0.11.1 python-igraph==0.7.1 louvain==0.6.1 leidenalg==0.7.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1333:194,log,logged,194,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1333,6,['log'],"['log-transformed', 'logged', 'logging']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; When I use the `scanpy.datasets.ebi_expression_atlas`, I got an error `HTTP Error 500: `. My python version is 3.6.10, and I also reproduced it on google colab. ; <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import scanpy as sc; adata = sc.datasets.ebi_expression_atlas(""E-MTAB-4888""); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; HTTPError Traceback (most recent call last); <ipython-input-6-0ae186d1a0d7> in <module>; ----> 1 adata = sc.datasets.ebi_expression_atlas(""E-MTAB-4888""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in ebi_expression_atlas(accession, filter_boring); 117 pass; 118 ; --> 119 download_experiment(accession); 120 ; 121 logg.info(f""Downloaded {accession} to {experiment_dir.absolute()}""). ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/datasets/_ebi_expression_atlas.py in download_experiment(accession); 41 ; 42 _download(; ---> 43 download_url + ""experiment-design"", experiment_dir / ""experimental_design.tsv"",; 44 ); 45 _download(. ~/anaconda3/envs/sc-py/lib/python3.6/site-packages/scanpy/readwrite.py in _download(url, path); 877 ; 878 try:; --> 879 urlretrieve(url, str(path), reporthook=update_to); 880 except Exception:; 881 # Make sure file doesn’t exist half-downloaded. ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlretrieve(url, filename, reporthook, data); 246 url_type, path = splittype(url); 247 ; --> 248 with contextlib.closing(urlopen(url, data)) as fp:; 249 headers = fp.info(); 250 . ~/anaconda3/envs/sc-py/lib/python3.6/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context); 221 else:; 222 opener = _opener; --> 223 return opener.open(url, data, timeout); 224 ; 225 def install_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1221:965,log,logg,965,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1221,1,['log'],['logg']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; When i use umap with the parameter init_pos='paga', I got a strange result.; ![image](https://user-images.githubusercontent.com/20806068/68834273-5703b580-06f0-11ea-9d05-76a66ea9e943.png). <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; sc.pl.umap(adata,color='louvain'); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; no error; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.4 anndata==0.6.22.post1 umap==0.3.9 numpy==1.17.3 scipy==1.3.1 pandas==0.25.0 scikit-learn==0.21.2 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/918:561,log,logging,561,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/918,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; When trying to get the obs_df or the var_df, the function throws an error when there is a single key. In this case it iterates through the letters in the given key and causes a KeyError. . <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```; pbmc = sc.datasets.pbmc68k_reduced(); sc.get.obs_df(pbmc, keys=('HES4')); sc.get.var_df(pbmc, keys=('AAAGCCTGGCTAAC-1')); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-60-663347265b80> in <module>; ----> 1 sc.get.var_df(pbmc, keys=('AAAGCCTGGCTAAC-1')). ~/.conda/envs/scvelo_updated/lib/python3.8/site-packages/scanpy/get.py in var_df(adata, keys, varm_keys, layer); 223 not_found.append(key); 224 if len(not_found) > 0:; --> 225 raise KeyError(; 226 f""Could not find keys '{not_found}' in columns of `adata.var` or""; 227 "" in `adata.obs_names`."". KeyError: ""Could not find keys '['A', 'A', 'A', 'G', 'C', 'C', 'T', 'G', 'G', 'C', 'T', 'A', 'A', 'C', '-', '1']' in columns of `adata.var` or in `adata.obs_names`.""; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.5.1 anndata==0.7 umap==0.4.4 numpy==1.19.0 scipy==1.5.0 pandas==1.0.5 scikit-learn==0.23.1 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.7.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1315:1311,log,logging,1311,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1315,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; _ingest.py tries to import the UMAP function like so:; `from umap import UMAP`; I believe this is wrong, and it should be replaced with:; `from umap.umap_ import UMAP`. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ImportError: cannot import name 'UMAP' from 'umap' (/opt/anaconda3/lib/python3.7/site-packages/umap/__init__.py); ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.6 anndata==0.7.1 numpy==1.17.4 scipy==1.3.1 pandas==0.25.3 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.8.2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1202:500,log,logging,500,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1202,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; here is the code for marker filter; I think the 3 condition need to be OR instead of AND; gene_names = gene_names[; (fraction_in_cluster_matrix > min_in_group_fraction) &; (fraction_out_cluster_matrix < max_out_group_fraction) &; (fold_change_matrix > min_fold_change); ]. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1213:610,log,logging,610,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1213,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; sc.pl.tracksplot, produce a wrong highlight bar without brackets. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; pbmc = sc.datasets.pbmc68k_reduced(); marker_genes = ['S100A8', 'GNLY', 'NKG7', 'KLRB1', 'FCGR3A', 'FCER1A', 'CST3']; ax = sc.pl.tracksplot(pbmc,marker_genes, groupby='louvain',; var_group_positions=[(0,2),(4,5)],var_group_labels=['set1','set2']); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ![image](https://user-images.githubusercontent.com/30639029/83604801-9dedb700-a52b-11ea-9c32-fc35ea959d61.png). #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; scanpy==1.4.7.dev136+g7f5c907 anndata==0.7.1 umap==0.4.1 numpy==1.18.3 scipy==1.4.1 pandas==1.0.3; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1265:739,log,logging,739,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1265,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; scanpy.pp.pca fails if n_samples < 50 < n_features. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; import numpy as np; import scanpy as sc; import anndata. adata = anndata.AnnData(np.random.normal(0, 1, (40, 100))); sc.pp.pca(adata); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/scottgigante/.local/lib/python3.8/site-packages/scanpy/preprocessing/_simple.py"", line 531, in pca; X_pca = pca_.fit_transform(X); File ""/usr/lib/python3.8/site-packages/sklearn/decomposition/_pca.py"", line 369, in fit_transform; U, S, V = self._fit(X); File ""/usr/lib/python3.8/site-packages/sklearn/decomposition/_pca.py"", line 418, in _fit; return self._fit_truncated(X, n_components, self._fit_svd_solver); File ""/usr/lib/python3.8/site-packages/sklearn/decomposition/_pca.py"", line 497, in _fit_truncated; raise ValueError(""n_components=%r must be between 1 and ""; ValueError: n_components=50 must be between 1 and min(n_samples, n_features)=40 with svd_solver='arpack'; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.2.3.dev1409+g7ca201d.d20200112 anndata==0.6.22.post1 umap==0.3.10 numpy==1.18.0 scipy==1.4.1 pandas==0.25.3 scikit-learn==0.22 statsmodels==0.11.0rc1 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1051:1275,log,logging,1275,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1051,1,['log'],['logging']
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; scanpy.pp.recipe_seurat and scanpy.pp.recipe_zheng17 indicate that they expect non log-transformed data. This leads both functions to do by default the highly variable gene (HVG) selection on non log-transformed data. This seems contrary to the scanpy and seurat clustering tutorials, which perform HVG selection after log-transform. It also seems contrary to the new function scanpy.pp.highly_variable_genes which expects log-transformed inputs. scanpy version : 1.5.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1251:157,log,log-transformed,157,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1251,4,['log'],"['log-transform', 'log-transformed']"
Testability,"<!-- Please give a clear and concise description of what the bug is: -->; trying to run louvain clustering but got the error:. ```pytb; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-22-fe1390cdc24a> in <module>; ----> 1 sc.tl.louvain(adata, resolution=1.0). ~/miniconda3/envs/scrna/lib/python3.7/site-packages/scanpy/tools/_louvain.py in louvain(adata, resolution, random_state, restrict_to, key_added, adjacency, flavor, directed, use_weights, partition_type, partition_kwargs, copy); 136 partition_kwargs[""weights""] = weights; 137 logg.info(' using the ""louvain"" package of Traag (2017)'); --> 138 louvain.set_rng_seed(random_state); 139 part = louvain.find_partition(; 140 g, partition_type,. ~/miniconda3/envs/scrna/lib/python3.7/site-packages/louvain/functions.py in set_rng_seed(seed); 23 def set_rng_seed(seed):; 24 """""" Set seed for internal random number generator. """"""; ---> 25 _c_louvain._set_rng_seed(seed); 26 ; 27 def find_partition(graph, partition_type, initial_membership=None, weights=None, **kwargs):. AttributeError: module 'louvain._c_louvain' has no attribute '_set_rng_seed'; ```. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; sc.tl.louvain(adata, resolution=1.0); ```. Python 3.7. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.6 anndata==0.7.1 umap==0.4.2 numpy==1.18.3 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.6.2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1191:629,log,logg,629,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1191,2,['log'],"['logg', 'logging']"
Testability,"<!-- What kind of feature would you like to request? -->; - [ ] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; Hi, ; If this is frequency table per cohort; which test to use to identify significant cell type per group? ; ![image](https://user-images.githubusercontent.com/23288387/117582425-efa1a880-b0cf-11eb-8095-2f7ecacaf7b0.png). ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1831:520,test,test,520,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1831,1,['test'],['test']
Testability,"<!-- What kind of feature would you like to request? -->; - [ ] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [x] Other?. <!-- Please describe your wishes below: -->. I recently ported [SCTransform](https://github.com/ChristophH/sctransform) from R into python. Any interest in getting it onto Scanpy?. The original paper is [here](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1874-1). It's a variance-stabilizing transformation that overcomes some key drawbacks of previous, similar methods (e.g. overfitting caused by building regression models from individual genes as opposed to groups of similar genes). It also eliminates the need for pseudocounts, log transformations, or library size normalization. . My code is [here](https://github.com/atarashansky/SCTransformPy). Implementation notes (from the SCTransformPy README):; - Poisson regression is done using the `statsmodels` package and parallelized with `multiprocessing`. ; - Improved Sheather & Jones bandwidth calculation is implemented by the `KDEpy` package.; - Estimating the negative binomial dispersion factor, `theta`, using MLE was translated from the `theta.ml` function in R.; - Pearson residuals are automatically clipped to be non-negative. This ensures that sparsity structure can be preserved in the data. Practically, the results do not change much when allowing for dense, negative values. Anecdotally, it produces very similar results to the R implementation, though the code itself is still a little rough around the edges. I also have to do more formal quantitative benchmarking to ensure results are similar to those of the original package. I thought I'd gauge interest here prior to working on",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1643:980,log,log,980,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1643,1,['log'],['log']
Testability,"<!-- What kind of feature would you like to request? -->; - [ ] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [x] Other?. <!-- Please describe your wishes below: -->; ... I'm adapting ScanPy for my compositional data analysis (CoDA) methodologies in the same vein as https://github.com/scverse/scanpy/issues/2475 . In this, I would like to perform Aitchison PCA but I'd also like to keep my Anndata object in counts form instead of creating another one. . For example: . ```python; import numpy as np; import pandas as pd; from typing import Union. def clr(x:Union[np.ndarray, pd.Series], multiplicative_replacement:Union[None,str,float,int]=""auto"") -> Union[np.ndarray, pd.Series]:; """"""; http://scikit-bio.org/docs/latest/generated/skbio.stats.composition.clr.html#skbio.stats.composition.clr; """"""; assert np.all(x >= 0); if multiplicative_replacement == ""auto"":; if np.any(x == 0):; multiplicative_replacement = 1/(len(x)**2); if multiplicative_replacement is None:; multiplicative_replacement = 0; x = x.copy() + multiplicative_replacement; x = x/x.sum(); log_x = np.log(x); geometric_mean = log_x.mean(); return log_x - geometric_mean. # Add CLR to layers; adata.layers[""clr""] = adata.to_df().apply(clr, axis=1) # Not the fastest way but just to show example. sc.tl.pca(adata, svd_solver='arpack', layer=""clr"") # -> Return addata object where PCA is performed on CLR. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2476:1102,assert,assert,1102,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2476,2,"['assert', 'log']","['assert', 'log']"
Testability,"<!-- What kind of feature would you like to request? -->; - [ ] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [x] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; Hey @fidelram !. I just wrote something to create small multiples to plot cells in a clustering category. Pretty simple and very useful if you have too many clusters. What do you think of this:; ```; def cluster_small_multiples(adata, clust_key, size=60, frameon=False, legend_loc=None, **kwargs):; tmp = adata.copy(). for i,clust in enumerate(adata.obs[clust_key].cat.categories):; tmp.obs[clust] = adata.obs[clust_key].isin([clust]).astype('category'); tmp.uns[clust+'_colors'] = ['#d3d3d3', adata.uns[clust_key+'_colors'][i]]. sc.pl.umap(tmp, groups=tmp.obs[clust].cat.categories[1:].values, color=adata.obs[clust_key].cat.categories.tolist(), size=size, frameon=frameon, legend_loc=legend_loc, **kwargs); ```. Example output from:; ```; test = sc.datasets.pbmc68k_reduced(); sc.pp.pca(test); sc.pp.neighbors(test); sc.tl.umap(test); cluster_small_multiples(test, 'bulk_labels'); ```. ![umap_bulk_lab_sm](https://user-images.githubusercontent.com/13019956/70931843-a19e8780-2038-11ea-8549-2f7820636c41.png). Could generalize this to different bases via `sc.pl.scatter()`. Or is this already implemented somewhere that I'm not aware of? Or maybe it's too simple to have as a small helper function?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/955:1210,test,test,1210,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/955,5,['test'],['test']
Testability,<!-- What kind of feature would you like to request? -->; - [X ] Additional function parameters / changed functionality / changed defaults?; <!-- Please describe your wishes below: -->; Could the function add a boolean parameter to make it work for non-log transformed data?. if [boolean depending on whether data is log transformed or not]:; foldchanges = (self.expm1_func(mean_group) + 1e-9) / (self.expm1_func(mean_rest) + 1e-9); else:; foldchanges = (mean_group+ 1e-9) / (mean_rest + 1e-9),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1454:253,log,log,253,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1454,2,['log'],['log']
Testability,"<!-- What kind of feature would you like to request? -->; - [x] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; As more and more technologies allow multimodal characterization of single cells it could be useful to exploit some functionalities of scanpy's toolkit to perform, at least, some rough integrative analysis. Assuming we have to modalities on different layers (say RNA and ATAC), one could create two knn graphs for both layers and use `leidenalg.find_partition_multiplex` to perform a joint call of partitions handling the two (or more) graphs as a multiplex. I have tested myself this approach, described in [leidenalg documentation](https://leidenalg.readthedocs.io/en/latest/multiplex.html), it works and it is highly configurable. ; We can take care of the implementation of enhancement (as `leiden_multiplex()` function?), I just want to be sure that it is not already on the development roadmap and that it is ok to have it into scanpy and not as an external tool.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1107:934,test,tested,934,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1107,1,['test'],['tested']
Testability,"<!-- What kind of feature would you like to request? -->; - [x] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; Hi,. Thanks for developing scanpy, which is quite handy. I am just wondering would it be possible to add a parameter like `sort_by` in `tl.rank_genes_groups()`, so sorting by logfoldchanges could be feasible for each group. Or I will appreciate it if you can help me with alternatives. . I understand this might be a minor thing, so please feel free to say no :). Thanks,; Nan",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2247:644,log,logfoldchanges,644,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2247,1,['log'],['logfoldchanges']
Testability,"<!-- What kind of feature would you like to request? -->; - [x] Additional function parameters / changed functionality / changed defaults?; - [ ] New analysis tool: A simple analysis tool you have been using and are missing in `sc.tools`?; - [ ] New plotting function: A kind of plot you would like to seein `sc.pl`?; - [ ] External tools: Do you know an existing package that should go into `sc.external.*`?; - [ ] Other?. <!-- Please describe your wishes below: -->; When testing for differential genes among groups with `rank_genes_groups` function, two options are available for `reference`: `'rest'` or any other single group. It would be helpful to have the possibility to choose different groups as reference (`reference: Union[Literal['rest'], Iterable[str]] = 'rest'`).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/984:474,test,testing,474,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984,1,['test'],['testing']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. - Depends on #2814. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2777, closes #2807; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. TODO:. - [x] batched. <table>; <thead>; <tr>; <th scope=row>. `flavor=`. <th>. `""seurat""`. <th>. `""cell_ranger""`. <tbody>; <tr>; <th scope=row>. `n_top_genes=n`. <td>. - [x] &zwnj;. <td>. - [x] (https://github.com/dask/dask/issues/10853). <tr>; <th scope=row>. `{min,max}_{disp,mean}`. <td>. - [x] &zwnj;. <td>. - [x] &zwnj;. </table>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2809:359,Test,Tests,359,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2809,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Only check the following box if you did not include release notes -->. ## TODO:. - [x] Fix tests; - [x] Figure out PCA test case with anndata 0.8.0; - [x] Add CI job; - [x] Rename CI job to be less similar to minimal dependencies, this will probably be `MinVer`; - [x] Bump anndata requirement back down to 0.7.3 (breaks dask tests); - Maybe 0.8 is low enough?; - [x] Bump pandas requirement back down to 1.5 (breaks grouped plots ordering). ## Some thoughts. * Sibling PR to: https://github.com/scverse/anndata/pull/1314; * Not completley sure what to do about plotting tests yet. Possible we just ignore any comparison failures, but ideally we could still know if these are broken.; * Metric consistency test failure is from https://github.com/scverse/scanpy/issues/2688; * Test updates in https://github.com/scverse/scanpy/pull/2705 (plus bumping one test a little lower) fixes it. <!-- Please check (“- [x]”) and fill in the following boxes -->",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2816:330,test,tests,330,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816,7,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ X] Closes # (New Feature); - [ X] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [X ] Release notes not necessary because:. I thought I would give a shot at contributing to this awesome tool! I added a function to Scanpy's plotting API that I use in my own research for creating stacked barplots for visualizing compositions of cell groups. An example is depicted below:. ![image](https://github.com/scverse/scanpy/assets/5004419/21885a72-e15f-4f94-b1e5-84c1de8ca954). Specifically, this function enables one to plot the fraction of each cell group (e.g., cluster) that are labelled with a specific categorical variable. For example, if the cell groups are clusters, then one might be interested in examining the fraction of each cluster that originates from each ""batch"" of cells or each patient sample. This function also enables ordering of the groups according to a specific value (e.g., a patient number or batch ID) or by agglomerative clustering. An example of ordering the groups based on agglomerative clustering is shown below:. ![image](https://github.com/scverse/scanpy/assets/5004419/bfde8173-4f0d-483f-b37e-849446b65153). The function supplies an argument to specify whether the dendrogram should or should not be plotted. Please let me know if this feature is of interest and if so, what else needs to be adjusted or fixed prior to merging. Thanks!. Matt",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2873:337,Test,Tests,337,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2873,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes # _no existing issue_; - [ ] Tests included or not required because: _No new tests_; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because: _I did not write release notes_. Hi :). I am proposing a change that speeds up `filter_cells` (x1000 speedup) and `filter_genes` (x2 speedup) for CSR sparse matrices. On my personal machine for 1M cells, `sc.pp.filter_cells(adata, min_genes=xx)` runs in 1ms instead of 10s currently. The speedup should be even stronger on sparser modalities like ATAC. In spirit, this simply replaces `np.sum(X > 0, axis=axis)` with `X.getnnz(axis=axis)`, which is much more efficient. But the axis argument in `getnnz` in `csr_array` may be deprecated. I think it should still be fine with `csr_matrix`, but since I don't know for sure I manually implemented it for the CSR case as in https://github.com/scipy/scipy/issues/19405 . What do you think?. Regarding `getnnz`: Of course it would be nicer to be able to write `.getnnz(axis=axis)`, which extends beyond CSR to other sparse matrices. Can we assume that we're getting sparse matrices and not sparse arrays ?. Pinging @dschult from the Scipy issue liked above, who mentioned: . > I'm pretty sure that a reasonable and commonly occuring use-case would be enough to make the developers include this feature somehow. (edited because I confused `csr_array` and `csr_matrix`)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2772:341,Test,Tests,341,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2772,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #1263; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Implements something close to what is described here:. * https://github.com/scverse/scanpy/issues/1263#issuecomment-776508554. Doesn't:. * Use ""current"", instead that's just `None`; * Include random, instead lets the user pass an array to order by, so random can be `rng.permutation(adata.n_obs)`; * Do broadcasting. Can either be added later or we can tell people to do this themselves. ## TODO:. - [ ] Check when input order array has repeated values; - [ ] Test sort_order argument deprecation; - [ ] Add support for `pd.Series` array values.; - [ ] Maybe `list`s?; - [ ] ""How to"" or modify existing advanced plotting tutorial; - [ ] Tests for; - [ ] Categorical ordering; - [ ] None is same as `np.arange(N)`; - [ ] direct overlap + ordering is equivalent to masking; - [ ] Continuous ordering; - [ ] ""ascending"" is like `np.argsort(values)` and vice versa; - [ ] ""ascending"" is like ""descending"" for inverted values; - [ ] Check masking for both; - [ ] Errors; - [ ] For incorrectly sized input array; - [ ] incorrect non-array input; - [ ] ""ascending"" is when the highest value goes on top, right?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2998:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2998,3,['Test'],"['Test', 'Tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2872:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2872,11,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Hi,; We are submitting PR for speed up of the clipping part of scaling function. ; | | Time(sec)|; | -----------| ----- |; | Original | 11.82 |; | Updated | 1.59 |; | Speedup | 7.433962264 |. experiment setup : AWS r7i.24xlarge. ```python; import time; import numpy as np. import pandas as pd. import scanpy as sc; from sklearn.cluster import KMeans. import os; import wget. import warnings. warnings.filterwarnings('ignore', 'Expected '); warnings.simplefilter('ignore'); input_file = ""./1M_brain_cells_10X.sparse.h5ad"". if not os.path.exists(input_file):; print('Downloading import file...'); wget.download('https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/1M_brain_cells_10X.sparse.h5ad',input_file). # marker genes; MITO_GENE_PREFIX = ""mt-"" # Prefix for mitochondrial genes to regress out; markers = [""Stmn2"", ""Hes1"", ""Olig1""] # Marker genes for visualization. # filtering cells; min_genes_per_cell = 200 # Filter out cells with fewer genes than this expressed; max_genes_per_cell = 6000 # Filter out cells with more genes than this expressed. # filtering genes; min_cells_per_gene = 1 # Filter out genes expressed in fewer cells than this; n_top_genes = 4000 # Number of highly variable genes to retain. # PCA; n_components = 50 # Number of principal components to compute. # t-SNE; tsne_n_pcs = 20 # Number of principal components to use for t-SNE. # k-means; k = 35 # Number of clusters for k-means. # Gene ranking. ranking_n_top_genes = 50 # Number of differential genes to compute for each cluste",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3100:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3100,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because: docs; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3001:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3001,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because: n_components must be less or equal to the number of samples, otherwise it would throw an error, for example, ValueError: n_components=100 must be less or equal to the batch number of samples 40. This error usually happens on the last chunk of the partial_fit.; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:. For example, my adata.shape[0] is 1041 and I run IncrementalPCA `sc.tl.pca(adata, n_comps=100, chunked=True,chunk_size=1000)`, and I got an error: ValueError: n_components=100 must be less or equal to the batch number of samples 40 on scanpy/preprocessing/_pca.py:256",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3313:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3313,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2779:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2779,2,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. @Intron7 . This adds benchmarks for the off axis for all parameters. The off axis peak memory is lower since we `.pop` that layer. If you think that’s confusing I could change it. Regarding big datasets for `_get_mean_var`, I already added that benchmark. You could maybe check if there’s anything else that should go into the `FastSuite`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3147:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3147,3,"['Test', 'benchmark']","['Tests', 'benchmark', 'benchmarks']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Builds on and supersedes #2482,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2977:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2977,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] See https://github.com/scverse/scanpy/pull/3216/checks?check_run_id=29482422648; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3217:392,Test,Tests,392,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3217,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Testing for #2969; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2976:305,Test,Testing,305,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2976,2,['Test'],"['Testing', 'Tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [X] #1549; - [X] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2770:318,Test,Tests,318,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2770,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [X] Closes #1549; - [X] Tests included or not required because:; - Added regression test for subsetting var_names; - Added test for when groupby is None; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2771:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2771,3,"['Test', 'test']","['Tests', 'test']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [X] Fixes #1867; - [X] Tests included or not required because: New tests included which catch the failure mode described in #1867. Current implementation fails these.; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because: Added entry in release notes. Addresses issue #1867 with a fix as outlined by @jlause and tests which catch the failure mode detected and nicely demonstrated by @jlause.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2757:324,Test,Tests,324,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2757,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Adresses #2088 and adresses #1733; <!-- Only check the following box if you did not include release notes -->; - [x] Tests included or not required because: They are required and some suggested; - [x] Release notes; - [x] Doc update - depending on feedback here; - [x] Doc update - guidance scanpy vs seurat. **Context**; As discussed in issues #2088 and #1733, `sc.pp.highly_variable_genes(adata, flavor=""seurat_v3"", batch_key=SOME_KEY)` potentially differs in the implementation of how HVGs are ranked from its Seurat counterpart:; - either by sorting by number-of-batches-in-which-genes-are-highly-variable and then breaking ties with median-rank-in-batches (this is described in [Stuart et al. 2019](https://www.cell.com/cell/pdf/S0092-8674(19)30559-8.pdf), and implemented in Seurat's [`SelectIntegrationFeatures`](https://satijalab.org/seurat/reference/selectintegrationfeatures)*).; - OR by sorting first by median-rank-in-batches and breaking ties with number-of-batches-in-which-genes-are-highly-variable (this is how `""seurat_v3""` in scanpy is currently implemented); ; causing quite some discrepancy in the results. *I am not an R expert, so this might not be correct: Digging into the code of `SelectIntegrationFeatures`, I suspect the genes _above_ a treshold level of batches in which they are HVGs are [ordered by their median rank](https://github.com/satijalab/seurat/blob/41d19a8a55350bff444340d6ae7d7e03417d4173/R/integration.R#L2988), in contrary to the textual description in Stuart et al.; and only the genes displaying this threshold of number of batches in which they are highly variable are ranked by their median rank - to decide which are kept as highly variable. This w",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2792:422,Test,Tests,422,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2792,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #1053; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2815:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2815,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #1633; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. This adds relies on `_empty` to check which parameters have been specified, and only changes those",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3206:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3206,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #173; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Docs:; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/release-notes/index.html#version-1-10; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/api/generated/scanpy.pp.scrublet.html; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/api/generated/scanpy.pp.scrublet_simulate_doublets.html; - https://icb-scanpy--2703.com.readthedocs.build/en/2703/api/generated/scanpy.pl.scrublet_score_distribution.html. ### How to review this PR. I made tests quantitative before this PR, so note that the only change that modified tests is 42143d88a0d499130fac8e5ca60eef0c19163734. In that PR, I make it so there are no longer any duplicate simulated doublets being created. This is necessary to be able to support any neighborhood detection algorithm. I also feel like it makes more sense. This is the only algorithmic change to upstream. Please use your own judgement to check if this makes sense to you. ### TODO:. - [x] remove unused utils (plotting, preprocessing); - [ ] figure out what remaining utils to replace with ours; - [x] PCA/SVD: https://github.com/scverse/scanpy/blob/bf5f1f9343f5729df6f90f7c68363682022e0480/scanpy/preprocessing/_scrublet/__init__.py#L415-L417; - [x] mean_center, normalize_variance, zscore: small enough to be left alone I think; - [ ] get_knn_graph: no need to have multiple implementations here, but our current implementation automatically calculates connectivities, which this doesn’t need https://github.com/scverse/scanpy/pull/2723; - [ ] refactor so the class API ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2703:324,Test,Tests,324,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2703,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #1861; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3183:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3183,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #1861; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3184:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3184,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #1986; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. This PR moves conversion from `str` to `list[str]` up and changes the check if `color` is in `obs.columns`/`var_names` to a check that can handle collections instead of just a single `color` value.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3299:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3299,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2012; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. TODO:. - [ ] Figure out and fix this: https://github.com/scverse/scanpy/blob/4fb3dc7d11f1b067f0aea1008cd3e7fbc3e5d54c/scanpy/metrics/_gearys_c.py#L128-L131 (related to https://github.com/numba/numba/issues/6976?); - [x] Maybe remove these: https://github.com/scverse/scanpy/blob/4fb3dc7d11f1b067f0aea1008cd3e7fbc3e5d54c/scanpy/tools/_umap.py#L167-L171 https://github.com/scverse/scanpy/blob/4fb3dc7d11f1b067f0aea1008cd3e7fbc3e5d54c/scanpy/neighbors/_connectivity.py#L120-L123; - [x] release notes,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2870:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2870,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2236; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3286:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3286,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2427; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2782:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2782,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2644; - [x] Tests included or not required because: dev workflow; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev workflow. Very simple, following https://docs.pypi.org/trusted-publishers/adding-a-publisher/. The change removes most of the technical parts of making a release including `twine check` which is just done by default by the GH action. The only parts I’m not 100% sure about removing are; - “When to make a pre-release” – I feel like “if UR unsure, make one of these” wasn’t helping here either, so maybe that should just be fleshed out as a section now we’re down a few sections; - “Check the file contents of the wheel” should probably go into “how to code review a PR that touches the build process”, and we don’t have any other guides on how to do code reviews, so …",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2720:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2720,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2680; - [x] Tests included or not required because: this is a longterm fix - failing of this functionality would be captured by existing tests; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2739:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2739,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2688; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: just modifying tests. Fixes tests for metrics. Some notes on an in progress PR:. * Previously xfail tests didn't actually fail because nothing was asserted; * This behavior changes with version of numba.; * numba .56<= seems more reproducible, but differences are greater when they occur (e.g. calculating on sparse vs dense); * Ideally want per metric, per calculation tolerances; * Both threading options can differer; * ~~I think single threaded + `fastmath=False` is reproducible, but need to confirm~~ – still no",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2705:453,test,tests,453,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2705,4,"['assert', 'test']","['asserted', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2730; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2734:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2734,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2741, Closes #2276; - [x] Tests included or not required because: Only docstring changes; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because: Added. **Notes**. - [x] How does `sc.pp.combat` return `None`? A: when `inplace=True`: it never returns an `AnnData` object though. Hence removed `AnnData` from the return type list. - `sc.pp.normalize` has both `inplace` and `copy` so did not force to harmonize with others; - `sc.pp.pca` allows adata and array/sparsematrix input, so did not force to harmonize with others; - `sc.pp.filter_cells`, `sc.pp.filter_genes` , `sc.pp.subsample` acts on data in different manner (changing dims), so did not force to harmonize with others; - `sc.pp.log1p` , `sc.pp.sqrt` seem to be understandable enough without bloating this up",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2742:339,Test,Tests,339,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2742,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2746; - [x] Tests included or not required because: this is a minor fix; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: the related code has not been released by scanpy,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2743:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2743,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2762; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev process change. All changes were automatic, except for:. - removing unused imports or replacing them with `__all__`. Much more uncontroversial than AnnData as scanpy’s public modules were more well defined from the start. There were no ambiguous cases except for `sc.get` re-exporting `""_check_mask""`, `""_get_obs_rep""`, and `""_set_obs_rep""`. But since those aren’t documented, we can decide over their fate at a later date.; - Fixing circular imports like `sc.{pp,tl}.pca`. I only needed to create a `neighbors/_doc.py` file for shared neighbors/tools doc parts, and put the `pca` import in `tools` in `__getattr__` (supported since 3.7); - replacing some `with open(p) as f: x = json.loads(f.read())`s with `x = json.loads(Path(p).read_text())`. All in all surprisingly easy",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2761:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2761,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2788; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2789:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2789,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2804; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2928:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2928,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2808; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3340:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3340,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2836; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change. Changes:; - Removes import-time change to globals:; 	- `matplotlib.testing:setup` should be called before each (plotting) test; 	- `sc.set_figure_params(dpi=40, color_map=""viridis"")` seems to be overwritten. When calling it inline, it messes up the figure params; 	- `sc.pl.set_rcParams_defaults()` is redundant, `setup` from above does that.; - Use workaround from https://github.com/pytest-dev/pytest/issues/11759#issuecomment-1888888146",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2838:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2838,3,"['Test', 'test']","['Tests', 'test', 'testing']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2839; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. How to review:. 1. https://github.com/scverse/scanpy/compare/585f58c9e4dd82dd7809a831538c4e230b008818...60804430db089f1887085e537ad946b7f691a8b4; 2. 5710a1de4f091db607d76b790676b56f988638f8; 3. https://github.com/scverse/scanpy/compare/5710a1de4f091db607d76b790676b56f988638f8...2cbe106328bcb9585c13def47ac3e1bf9629e448,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2844:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2844,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2842; - [x] Tests included or not required because: it's docs; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2849:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2849,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2858 ; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: this is a minor quality of life change, and could be tacked onto any other release as opposed to creating a dedicated release",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2859:326,Test,Tests,326,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2859,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2866; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: technical fix,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3125:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3125,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2878 ; - [x] Tests included or not required because: dev change; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because: dev change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2879:326,Test,Tests,326,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2879,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2902; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2905:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2905,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2910 ; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2921:326,Test,Tests,326,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2921,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2929; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: Fixes a bug that wasn't in a release,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2934:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2934,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2930; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: Fixing something that never made it to a release,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2950:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2950,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2931; - [x] Tests included or not required because: doc change; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: No release yet,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2932:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2932,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2935; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: Code has not been in a release,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2951:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2951,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2937; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3307:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3307,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2969; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Seems like this code is super performance sensitive: Having a Python implementation of `getrandbits` in 8572ecb1b38616f98f2af6462aa4fe5a3a8871ae resulted in a slowdown:. | Change | Before [0d4554b4] | After [1b2d9dd5] | Ratio | Benchmark (Parameter) |; |----------|----------------------|---------------------|---------|------------------------------------------|; | + | 15.2±0.03ms |	31.7±0.1ms |	2.09 | preprocessing.time_highly_variable_genes |,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3041:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3041,2,"['Benchmark', 'Test']","['Benchmark', 'Tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2973 ; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Visium HD stores its coordinates in a `.parquet` file. This loads said file.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2992:326,Test,Tests,326,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2992,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2993; - [x] Tests included or not required because: fixing dev install; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2994:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2994,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2993; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change. Pytest 8.2 is released and should solve the problem. /edit: it does. It’s installed in the test jobs and works.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3034:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3034,2,"['Test', 'test']","['Tests', 'test']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3010 ; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:. no need to backport github changes,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3040:326,Test,Tests,326,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3040,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3012 ; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. I added a sparse dataset to cover more code paths in most benchmarks. `regress_out` seems pretty slow with sparse data, maybe that should be tackled instead of hidden by disabling the benchmark.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3031:326,Test,Tests,326,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3031,3,"['Test', 'benchmark']","['Tests', 'benchmark', 'benchmarks']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3027; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because: they are, added. This PR fixes the bug reported in the linked issue. A new test which spots the erroneous computations has been added. I would use this chance to refactor the `_highly_variable_genes.py`, rather than using the 2-lines fix suggested in the first commit:; Doing the multi-batch hvg flagging differently for seurat_v3 and seurat/cell_ranger is what made this bug hard to spot in the first place I think.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3042:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3042,2,"['Test', 'test']","['Tests', 'test']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3051; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. TODO:. - [x] release notes; - [x] some added text explaining things; - [x] run internet tests, implement caching for datasets. Optional:. 1. continue to not run the internet tests in CI. A side effect of this PR is that our tests get less flaky by not running the flaky `ebi_expression_atlas` doctest; 2. run internet tests in CI; 1. add caching to CI; 2. make sure the dataset functions don’t download already-downloaded data; 3. validate cached data instead; 4. run the internet tests (with caching) in CI. ## [Rendered](https://icb-scanpy--3060.com.readthedocs.build/en/3060/api/datasets.html)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3060:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3060,6,"['Test', 'test']","['Tests', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3062; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3101:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3101,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3074; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: trivial change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3075:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3075,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3083; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Two different fixes:. 1. The `np.asarray` cases are when we e.g. had `spmat.sum(axis=1).A` (i.e. a dense matrix). I could also leave these as `.A`.; 2. the `.toarray()` cases are when we converted a sparse matrix to dense directly.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3084:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3084,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3087; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3089:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3089,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3114; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Other things done:. - Rename some variables and reorder functions so the diff between the metrics is minimal for a future unification; - Skip seurat v3 tests with numpy 2 because skmisc isn’t ready: https://github.com/has2k1/scikit-misc/issues/34. This will skip the seurat v3 tests for all but the minimum versions test job for now, but I think that’s OK?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3115:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3115,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3152; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3196:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3196,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3157; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3176:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3176,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3158; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3302:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3302,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3199; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3204:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3204,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3226; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. An alternative would be to subclass `PCA`, but that would involve erroring out or reimplementing all of its options. Ideally #3267 would be merged first and this one integrated into its improved decision tree.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3263:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3263,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3260; - [x] Tests included or not required because: minor change to maintain compat with `statsmodels`>=14.0. Inspired by @mwaskom's [fix for seaborn](https://github.com/mwaskom/seaborn/pull/3356), which promotes the warning to an error and catches it (in this case with the same logic `scanpy` was using for prior versions of `statsmodels`).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3275:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3275,2,"['Test', 'log']","['Tests', 'logic']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3282; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3283:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3283,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3310; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: real small change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3328:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3328,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3318; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3324:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3324,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #761, closes #2322, closes #2229, closes #2267; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Also. - documents the parameter better, see #1502; - remove duplicated tests for embedding plots with continuous variables: `legend_loc` does nothing there (yet)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3163:366,Test,Tests,366,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3163,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A (infra change for other PRs touching `external`); - [x] Tests included or not required because: works if docs build; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: see above. Adds link targets for `scanpy.external.{pp,tl,pl,…}` like they exist for `scanpy.{pp,tl,pl,…}`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2716:372,Test,Tests,372,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2716,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A (see https://github.com/scverse/scanpy/pull/2809#pullrequestreview-1864823464); - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change. Adds a consistency test before #2809 is merged. When these tests were written originally, the `.csv` file extension was used for files that aren’t comma-separated. This fixes that too without changing too many files.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2851:402,Test,Tests,402,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851,3,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: Release documentation; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2726:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2726,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: dev fix; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev fix,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2845:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2845,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: dev process; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev process,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2707:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2707,2,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: dev process; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev process. Filt resulted in the release workflow failing, as it tries to install the package’s runtime dependencies. Backporting the switch to hatch fixes that, now building only needs build deps",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2727:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2727,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: dev process; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev process. This can help us debug long running tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2786:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786,2,"['Test', 'test']","['Tests', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: format change; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: format change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2718:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2718,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: manual test: check if logo displays in rendered docs; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: unreleased bug. Seems like GitHub renders .svgs even if the namespace isn’t there, but browsers don’t.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2749:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2749,3,"['Test', 'log', 'test']","['Tests', 'logo', 'test']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because: release prep; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2724:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2724,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2728:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2728,3,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2852:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev changes. This PR contains more quantitative scrublet tests. It should be merged prior to #2703 to make sure our changes don’t change how scrublet works.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2776:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2776,2,"['Test', 'test']","['Tests', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev process,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2775:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2775,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: docs change. Also bump scanpydoc so the `[source]` links for wrapped functions work. E.g. `sc.pp.filter_cells` now links to the correct code lines):. ```diff; -<a href=""https://github.com/scverse/scanpy/tree/419c1a45aef26b5531a5b9cf1ec430e5ae67ce97/python3.11/site-packages/legacy_api_wrap/__init__.py#L49-L193"">[source]</a>; +<a href=""https://github.com/scverse/scanpy/tree/2d5bda1e45525354b9b751aa572c0b08175450cf/scanpy/preprocessing/_simple.py#L49-L193"">[source]</a>; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2800:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2800,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: fixes tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2745:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2745,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: improves an earlier unreleased change. For some reason, PyNNDescent takes >2s to import: https://github.com/lmcinnes/pynndescent/issues/111. This change makes e.g. test collection fast again",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2715:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2715,2,"['Test', 'test']","['Tests', 'test']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: internal API,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2750:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2750,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: only minor changes. some small changes before #2809,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2810:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2810,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: small change. And for broken links, I found the working location manually. The only website that doesn’t have a working HTTPS version is http://vitessce.io (https://github.com/vitessce/vitessce/issues/1121), which is impressive given the late-90s-look of some of those journal websites.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2737:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2737,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Since today, there are some test breakages:. - `adata[:, [True, True]]` now behaves like `adata[:, np.array([1, 1])]` instead of `adata[:, np.array([True, True])]` (exposed through `read_10x_mtx`); - `sc.pl.violin` now creates slightly wider plots through some dependency change. This fixes everything that broke.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2801:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2801,2,"['Test', 'test']","['Tests', 'test']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: Modifies unreleased features. I made the code and comments/docs more explicit about when the nearest-neighbor-is-cell-itself comes into play and when it doesn’t, and tested a bunch of our utilities. @mumichae this might make it fast for your code; You can install this branch using. ```bash; pip install -U 'scanpy@git+https://github.com/scverse/scanpy.git@improve-neighbors-shortcut'; ```. | | Before | After |; | --------- |--------|--------|; | small data | ![master](https://github.com/scverse/scanpy/assets/291575/d79a7bbd-548d-4aea-9cff-6ee44ca544ac) | ![shortcut](https://github.com/scverse/scanpy/assets/291575/d802b0d5-09e3-4002-862f-4ae4c368b061) |; | bigger data | ![master](https://github.com/scverse/scanpy/assets/291575/627ccd9f-7a42-44be-81d9-7796e54e54b0) | ![shortcut](https://github.com/scverse/scanpy/assets/291575/000b06a4-1c6c-496b-9fda-b479414e182c)|",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2756:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2756,2,"['Test', 'test']","['Tests', 'tested']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change. This allows us to test log entries with caplog instead of awkwardly through setting the logfile and dealing with strings,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2855:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855,4,"['Test', 'log', 'test']","['Tests', 'log', 'logfile', 'test']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: original PR not released,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2857:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2857,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: small dev change. We already use it everywhere in the lib code, this brings the tests in line",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2817:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2817,2,"['Test', 'test']","['Tests', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes N/A; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: tests only change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2785:323,Test,Tests,323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes NA; - [x] Tests included or not required because: dev change; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: dev change. This allows clickable links when developing in a path with spaces. TODO: check if nunit attachment URLs are predictable. If yes, emit them instead of paths in CI runs, i.e. instead of the Expected/Actual/Diff part, display just this URL:. display: https://dev.azure.com/scverse/scanpy/_build/results?buildId=5698&view=ms.vss-test-web.build-test-results-tab&runId=18968&resultId=100831&paneView=attachments. /edit: doesn’t seem like it’s possible. The URL contains `resultId=100831`, and I don’t see how this could be known at runtime. I assume those get assigned after the NUnit XML gets uploaded. ----. Once https://github.com/microsoft/vscode/issues/176812 is fixed, we can change this to [OSC 8](https://github.com/Alhadis/OSC8-Adoption) links",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2860:322,Test,Tests,322,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2860,3,"['Test', 'test']","['Tests', 'test-results-tab', 'test-web']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes https://github.com/scverse/anndata/issues/1210; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2719:366,Test,Tests,366,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2719,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes https://github.com/scverse/scanpy/issues/2763; - [x] Tests included or not required because: manually checked using rtd PR build; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Adds [readthedocs-sphinx-search](https://readthedocs-sphinx-search.readthedocs.io/en/latest/) support via the scanpydoc theme, which contains JS and CSS customizations to make the search extension integrate with the theme. See. - https://github.com/theislab/scanpydoc/pull/121; - https://github.com/theislab/scanpydoc/pull/125. ### [rendered](https://icb-scanpy--2805.com.readthedocs.build/en/2805/). An alternative that looks nicer would be https://github.com/readthedocs/addons, but it’s still in alpha. PS: I didn’t add the same hack as in scanpydoc that makes the search work in PR builds, so you’ll only see “No results found” in the above. Check out https://icb-scanpydoc.readthedocs-hosted.com/en/latest/?rtd_search=scanpydoc to see rendered search results. You can see that the API works for scanpy:. ```console; $ http get https://icb-scanpy.readthedocs-hosted.com/_/api/v3/search/?q=project%3Aicb-scanpy%2Flatest+filter_cells; ╭──────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮; │ count │ 2 │; │ next │ │; │ previous │ │; │ │ ╭───┬────────────┬────────────────╮ │; │ projects │ │ # │ slug │ versions │ │; │ │ ├───┼────────────┼────────────────┤ │; │ │ │ 0 │ icb-scanpy │ ╭───┬────────╮ │ │;",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2805:365,Test,Tests,365,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2805,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes scverse/anndata#1133; - [x] Tests included or not required because: docs only; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: just updates some tutorials. Mainly so we advertise anndata 0.11’s `read_elem_as_dask`: https://icb-scanpy--3216.com.readthedocs.build/en/3216/tutorials/experimental/dask.html,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3216:340,Test,Tests,340,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3216,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Fixes #2830, fixes https://github.com/scverse/spatialdata/issues/440; - [x] Tests included or not required because: Tests are in #2816; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2832:381,Test,Tests,381,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2832,2,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Fixes #2940 ; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because: tbd. @ilan-gold, I put some comments where I'm most interested in your feedback for a first step forward",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2980:325,Test,Tests,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2980,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Handle warnings from https://github.com/scverse/anndata/pull/1682; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: basically a dev change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3289:378,Test,Tests,378,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3289,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Helps debugging #3068 ; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3069:335,Test,Tests,335,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3069,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] See https://anndata.readthedocs.io/en/latest/release-notes/index.html#rc2-2024-09-24, introduced by #3289. This `io` package did not exist previously; - [x] Tests included or not required because: Tested locally, no way to really test this; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: This is a bug fix of a warning suppression",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3298:462,Test,Tests,462,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3298,3,"['Test', 'test']","['Tested', 'Tests', 'test']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Tests included or not required because: it's formating; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: it's formatting. Why did we ever configure black?,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2701:305,Test,Tests,305,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2701,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Towards #2578 and maybe others? #2764; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:. Note I did not follow:; https://gist.github.com/Intron7/bbf5058794be7b81d3953ae39c17d8b8. This is because this PR is basically very simple. I just added an `axis_sum` function for dispatching on dask arrays (with sparse chunks) which now handles the needed functionality and then it propagates up to various functions as noted in the release note: `scanpy.pp.scale`, `scanpy.pp.filter_cells`, `scanpy.pp.filter_genes`, `scanpy.pp.scale` and `scanpy.pp.highly_variable_genes`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2856:350,Test,Tests,350,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2856,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Added the ```n_components``` parameter in the tsne function, similar to the one in umap and updated docstring. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #460; - [ ] Tests included or not required because: Not included but can add tests if necessary.; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: Only minor change.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2803:435,Test,Tests,435,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2803,2,"['Test', 'test']","['Tests', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Fix for #2887. Updated and added basic tests to Leiden and Louvain clustering to check that the parameters are written to the user specified key. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2887 ; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2889:273,test,tests,273,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2889,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Fixes:. * Error caused by new matplotlib release candidate (it had been deprecated for a while, we just hadn't caught it....); * Corrects deprecation warnings in igraph leiden clustering code and pearson residuals code. <!-- Please check (“- [x]”) and fill in the following boxes -->. - [x] Tests included or not required because: just fixin' warnings; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2999:525,Test,Tests,525,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2999,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Follow up on https://github.com/scverse/scanpy/issues/2444#issuecomment-2022974986. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Tests included or not required because: it's docs; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2974:389,Test,Tests,389,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2974,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Hi there, ; I wrote a color annotation function for the Baseplot class called `add_colorblocks()`, which borrows some functionality of the `add_totals()` function and creates a colorblock for the annotation each assigned group. ```; sc.pl.dotplot(adata, [""CD79A"", ""MS4A1""], ""bulk_labels"", return_fig=True, show=False,; #swap_axes=True; ).add_colorblocks(color='Paired', size=0.1).show(); ```; ![image](https://github.com/scverse/scanpy/assets/24408322/eb50f18c-8fd7-4586-b63c-41c4e4f44a93). <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Addresses #2194; - [x] Tests included or not required because: plotting; <!-- Only check the following box if you did not include release notes -->; - [ x] Release notes not necessary because: tbd",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3043:819,Test,Tests,819,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3043,1,['Test'],['Tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. I tried to follow the feedback described in a previous PR that contributed DensMAP https://github.com/scverse/scanpy/pull/2684#issuecomment-1764564449 but re-implemented on top of the state of the current scanpy main branch. I did not add release notes because the contributor guide says to wait for PR feedback https://scanpy.readthedocs.io/en/latest/dev/documentation.html#adding-to-the-docs. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #1619 ; - [x] Closes #2684; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2946:741,Test,Tests,741,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2946,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Pandas was throwing a warning:. `FutureWarning: The previous implementation of stack is deprecated and will be removed in a future version of pandas. See the What's New notes for pandas 2.1.0 for details. Specify future_stack=True to adopt the new implementation and silence this warning.`. This fixes that warning. The fix is a little weird, but it's what pandas says to do. Pandas explanation of the new behaviour is [here](https://pandas.pydata.org/pandas-docs/stable/whatsnew/v2.1.0.html#new-implementation-of-dataframe-stack). Changes here:. `rank_genes_group_df`. * The sort order doesn't matter here since we sort again anyways; * `dropna=True` here actually doesn't drop null values from `filter_rank_genes_groups`. AFAICT, this doesn't change anything. `StackedViolin`. Here, we were already opting in to the future behaviour with `dropna=False`. ------. This also fixes a type signature for `sc.get.rank_genes_groups_df` and makes a better error reporting for a test I saw fail locally.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2864:1206,test,test,1206,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2864,1,['test'],['test']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Sibling PR to: https://github.com/scverse/anndata/pull/1339. Basically, makes sure that we are running the tests on the commits we release from.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2834:341,test,tests,341,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2834,1,['test'],['tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. Since `gen_pca_params` is a generator, not sure how we can control the order besides rolling back the use of sets. So I landed on just sorting the args based on `id` of the pytest. . I was running in to https://github.com/pytest-dev/pytest-xdist/issues/432. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: just fixing some tests",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3333:579,Test,Tests,579,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3333,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. The idea here is to raise errors where I have checked that things currently don't work, regardless of the reason why, and do not make any attempt to fix this problem. Once https://github.com/scverse/anndata/pull/1469 is merged, we can make concrete recommendations for how to handle out-of-core data. I think a decorator could work but we would have to check the type in the decorator like (instead of relying on current checks like in `filter_genes`):. ```python; if isinstance(arg1, AnnData) and arg1.isbacked:; raise NotImplementedErrror(...); ```. But then there is something like `log1p` where we quasi-support `backed` via this `chunked` kwarg, which would no really fit the above paradigm. Nonetheless, I think I need to go one-by-one through the functions to check what we support and don't. Separately, we may want to drop support where it exists already (which from my searching, is only `obs_df` and `var_df` and then `subsample_counts`). <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3004 and closes #2894; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3048:1292,Test,Tests,1292,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3048,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. This PR clarifies the docs/handling to make it clear we _only_ support this for correctly chunked CSR-dask. I think that not handling the other case is fine for a few reasons:. 1. CSC chunking would basically require multiple passes at the data. Every chunk (of size `(adata.shape[0], N)`) would need to be `X.T @ Y`-ed over the entire matrix where `X` is the chunk and `Y` is any given column-chunk from the matrix. I can't think of a way around this; 2. Given the above, I don't think there is any reason why we should implement this algorithm. People should just re-write their data to disk as CSR. I can't imagine its worse than this modulo the fact that you need to load the whole matrix into memory. This might be a good reason to change our on-disk format but at the moment, this is about all I think we should do. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Just remembered that this fact needs to be stated clearly. @Intron7 please update the RSC PR as well if you haven't already!; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: edited",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3306:1259,Test,Tests,1259,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3306,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. This PR contains commits changing fa2 to fa2_modified as the original fa2 is not maintained anymore and doesn't work with Python3.9+ . [fa2_modified](https://github.com/AminAlam/fa2_modified) has the exact same functionality as the original fa2, but its Cython codes have been modified to make it work with newer version of Python. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2067; - [x] Tests included or not required because:; No additional rests are required as the already existing tests cover these changes; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3220:657,Test,Tests,657,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3220,2,"['Test', 'test']","['Tests', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. This PR introduces benchmarking for Scanpy with airspeed-velocity (asv) ([Link](https://asv.readthedocs.io/en/stable/index.html)),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2482:253,benchmark,benchmarking,253,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2482,1,['benchmark'],['benchmarking']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. This is a very small pull request to add `str` to the possible arguments for saving a figure from [`scanpy.pl.rank_genes_groups`][rank-genes-groups]. This addition matches other `save=` arguments, such as from [`scanpy.plotting.highly_variable_genes`][highly-variable-genes], [`sc.plotting.pca_variance_ratio`][pca-variance-ratio], and [`scanpy.plotting.umap`][umap]. [rank-genes-groups]: https://github.com/scverse/scanpy/blob/main/scanpy/plotting/_tools/__init__.py; [highly-variable-genes]: https://github.com/scverse/scanpy/blob/main/scanpy/plotting/_preprocessing.py; [pca-variance-ratio]: https://github.com/scverse/scanpy/blob/main/scanpy/plotting/_tools/__init__.py; [umap]: https://github.com/scverse/scanpy/blob/main/scanpy/plotting/_tools/scatterplots.py. I have not included tests or release notes due to the single-line change nature of this pull request",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3076:1021,test,tests,1021,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3076,1,['test'],['tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->; <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. Hi,; We are submitting PR for speed up of the regress_out function. Here we finding coefficient using Linear regression (Linear Least Squares) rather then GLM for non categorical data. | | Time(sec)|; | -----------| ----- |; | Original | 297|; | Updated | 14.91 |; | Speedup | 19.91 |. experiment setup : AWS r7i.24xlarge. ```python; import time; import numpy as np. import pandas as pd. import scanpy as sc; from sklearn.cluster import KMeans. import os; import wget. import warnings. warnings.filterwarnings('ignore', 'Expected '); warnings.simplefilter('ignore'); input_file = ""./1M_brain_cells_10X.sparse.h5ad"". if not os.path.exists(input_file):; print('Downloading import file...'); wget.download('https://rapids-single-cell-examples.s3.us-east-2.amazonaws.com/1M_brain_cells_10X.sparse.h5ad',input_file). # marker genes; MITO_GENE_PREFIX = ""mt-"" # Prefix for mitochondrial genes to regress out; markers = [""Stmn2"", ""Hes1"", ""Olig1""] # Marker genes for visualization. # filtering cells; min_genes_per_cell = 200 # Filter out cells with fewer genes than this expressed; max_genes_per_cell = 6000 # Filter out cells with more genes than this expressed. # filtering genes; min_cells_per_gene = 1 # Filter out genes expressed in fewer cells than this; n_top_genes = 4000 # Number of highly variable genes to retain. # PCA; n_components = 50 # Number of principal components to compute. # t-SNE; tsne_n_pcs = 20 # Number of principal components to use for t-SNE. # k-means; k = 35 # Number of clusters for k-means. # Ge",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3110:321,Test,Tests,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3110,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->; Added the boolean argument ""add_intercept"" to regress_out, and implemented code to optionally add the intercept back to the residuals in the result of regress_out().; <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes https://github.com/theislab/single-cell-tutorial/issues/35; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2731:545,Test,Tests,545,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2731,1,['Test'],['Tests']
Testability,"<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->; Fixes #2668. `sc.pp.highly_variable_genes(adata, flavor='seurat')` modified the used `layer` in some cases, as described in #2668. This PR fixes this behaviour, and adds additional tests.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2698:415,test,tests,415,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2698,1,['test'],['tests']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->; Here I changed the `test_read_visium_counts()` function to actually test `read_visium()` function instead of `read_10x_h5()`.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2170:302,test,test,302,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2170,1,['test'],['test']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->; I think this is a better fix since we were already writing out `X_pca`. The tests seem to pass and `pca` should be idempotent so this really shouldn't break anything (hopefully).; <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3074 ; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3079:310,test,tests,310,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3079,2,"['Test', 'test']","['Tests', 'tests']"
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->; It was unclear if the `groups` argument in `rank_genes_groups()` is equivalent to subsetting when `reference='rest'`(i.e. only the selected groups are tested against each other) or if only those groups are tested but all groups are still used as the reference. This PR adds a note explaining the current behaviour (option 2).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2657:385,test,tested,385,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2657,2,['test'],['tested']
Testability,<!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->; Simple addition of the `layer` argument which is already included in `sc.tl.score_genes` so that you can use your own layer instead of being restricted to what is stored in `adata.X` . <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3138:506,Test,Tests,506,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3138,1,['Test'],['Tests']
Testability,"<!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->. In our analyses we wanted to try SCTransform normalization instead of default log-norm. I have done it quite crudely, but it works: I run SCT in Seurat and dump the counts on disk to load in scanpy.; While verifying that this approach worked, we encountered slight inconsistencies between clustering using (1) vanilla log-norm scanpy (2) SCT imported scanpy and (3) SCT in Seurat.; After investigation, it appears that vanilla scanpy sometimes better picks up some clusters than SCT+scanpy, despite the latter having more relevant genes in its HVG list. Here is the investigation: https://github.com/mxposed/notebooks/blob/master/sct-scanpy.ipynb. And here are the main questions that remain:; 1. Why Vanilla scanpy could resolve those populations, despite operating on less marker HVGs?; 2. What is the difference between kNN graph construction and clustering between Seurat and scanpy?; 3. How to be sure we did not undercluster and miss some smaller cell populations?. I would be glad for any feedback or input, and of course if someone knows the answers, that's great!. Best wishes,; Nick. PS. Thank you for scanpy!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1531:255,log,log-norm,255,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1531,2,['log'],['log-norm']
Testability,"<!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->; ...; Hello Scanpy,; In @LuckyMD 's amazing paper (https://www.embopress.org/doi/full/10.15252/msb.20188746), Table 1 shows that using raw data to calculate the maker genes of clusters is the appropriate way. But the raw data was not regressed out with mitochondrial genes, gene counts, cell cycle scores...So there will be so many mito genes ranked on the top of the marker gene list. What shall we do with these mito genes, because usually they represent the dead cell-released RNA contaminations?. In Seurat, they did every downstream analysis and plotting by using the log-transformed and scaled data (see below, the scaled dots in Seurat violin plot). Scanpy draws all plots by setting use_raw=True. I'm wondering which method is better?; ![image](https://user-images.githubusercontent.com/75048821/149461003-ed8d62d9-8aa9-4b5a-905d-e22bd10a1345.png). BTW, logFC will become negative and disappear for the marker genes of clusters when we set `use_raw=False` in `sc.tl.rank_genes_groups(adata, 'leiden', method='wilcoxon'`. Please check this https://github.com/theislab/scanpy/issues/2057. Thanks!; Best,; YJ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2110:749,log,log-transformed,749,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2110,2,['log'],"['log-transformed', 'logFC']"
Testability,"<!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->; ...; Hi ; if samples contribute a different number of cells to my object, how to control for variability among samples? ; How to make sure that any difference between conditions I found is caused by biology and not because of samples variation? . downsampling, upsampling, bootstrapping, robustness test . Appreciate any feedback and any references for this issue. ![image](https://user-images.githubusercontent.com/23288387/155648374-f0d6178f-7024-4ecd-88c0-37547c5e7e19.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2155:476,test,test,476,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2155,1,['test'],['test']
Testability,"<!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->; ...; Hi,. I'd like to look at the gene expression from WT and the mutant mice from an interesting cluster, I thought I could use ; sc.tl.rank_genes_groups(WT_Donuts, 'leiden', method='t-test', use_raw=False); sc.pl.rank_genes_groups(WT_Donuts, n_genes=5, sharey=False),. Then I realized that it's only for getting the marker genes from clusters. ; Thank you for helping me with this issue!. -Yi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1035:363,test,test,363,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1035,1,['test'],['test']
Testability,"<!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->; Hi, ; I am little confused about the parameter in pl.ump, use_raw=False. ; When you set raw=False, it takes normalized, log transformed but not corrected gene expression, while when you set user_raw=True, it takes scaled and corrected gene expression. What does corrected gene expression means here? . From tutorial it reads as below:; ""As we set the .raw attribute of adata, the previous plots showed the “raw” (normalized, logarithmized, but uncorrected) gene expression. You can also plot the scaled and corrected gene expression by explicitly stating that you don’t want to use .raw."". Trying to get some clarification on my results, in case, where i performed DE with t-test, and get top 5 genes, When i want to look them in clusters and plot ump, I do not see them with pl.ump with user_raw=True but can see them with user_raw=False. ; Any clarification will be great. . thanks, ; Preeti ; ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1266:297,log,log,297,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1266,3,"['log', 'test']","['log', 'logarithmized', 'test']"
Testability,"<!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->; https://github.com/theislab/scanpy/tree/master/scanpy/tests/_data/10x_data/3.0.0 - this h5 object is 1107 cells by 507 genes but what is the data? Is it down-sampled pbmc3k or some other dataset? How was it generated?. I'm looking for a tiny h5 object like this for our own unit testing, but want to be clear on the data source, thanks",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1908:231,test,tests,231,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1908,2,['test'],"['testing', 'tests']"
Testability,<details>; <summary> Errors look like: </summary>. ```; FAILED scanpy/tests/test_highly_variable_genes.py::test_runs - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_supports_batch - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_batch_matches_batch - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[numpy_ndarray-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[numpy_ndarray-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csr-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csr-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-None] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-10] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_compare_to_upstream[seurat-hvg] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_sparse - ValueEr,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:70,test,tests,70,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,8,['test'],['tests']
Testability,"= X[:, None]; 141 if X.shape[1] > 1:; 142 colors = palette[: X.shape[1]].by_key()[""color""]. File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\series.py:1153, in Series.__getitem__(self, key); 1150 key = np.asarray(key, dtype=bool); 1151 return self._get_rows_with_mask(key); -> 1153 return self._get_with(key). File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\series.py:1163, in Series._get_with(self, key); 1158 raise TypeError(; 1159 ""Indexing a Series with DataFrame is not ""; 1160 ""supported, use the appropriate DataFrame column""; 1161 ); 1162 elif isinstance(key, tuple):; -> 1163 return self._get_values_tuple(key); 1165 elif not is_list_like(key):; 1166 # e.g. scalars that aren't recognized by lib.is_scalar, GH#32684; 1167 return self.loc[key]. File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\series.py:1203, in Series._get_values_tuple(self, key); 1198 if com.any_none(*key):; 1199 # mpl compat if we look up e.g. ser[:, np.newaxis];; 1200 # see tests.series.timeseries.test_mpl_compat_hack; 1201 # the asarray is needed to avoid returning a 2D DatetimeArray; 1202 result = np.asarray(self._values[key]); -> 1203 disallow_ndim_indexing(result); 1204 return result; 1206 if not isinstance(self.index, MultiIndex):. File ~\AppData\Roaming\Python\Python311\site-packages\pandas\core\indexers\utils.py:341, in disallow_ndim_indexing(result); 333 """"""; 334 Helper function to disallow multi-dimensional indexing on 1D Series/Index.; 335 ; (...); 338 in GH#30588.; 339 """"""; 340 if np.ndim(result) > 1:; --> 341 raise ValueError(; 342 ""Multi-dimensional indexing (e.g. `obj[:, None]`) is no longer ""; 343 ""supported. Convert to a numpy array before indexing instead.""; 344 ). ValueError: Multi-dimensional indexing (e.g. `obj[:, None]`) is no longer supported. Convert to a numpy array before indexing instead.; ```. ### Versions. <details>. ```-----; anndata 0.10.5.post1; scanpy 1.10.1; -----; PIL 9.4.0; annoy NA; anyio NA; asttokens NA; attr ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3086:5378,test,tests,5378,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3086,1,['test'],['tests']
Testability,"=1, key=""wilcoxon"", groupby=""leiden"", show_gene_labels=True, figsize = [10,10], dendrogram = True ). ~/.local/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_heatmap(adata, groups, n_genes, groupby, gene_symbols, var_names, min_logfoldchange, key, show, save, **kwds); 671 tl.dendrogram; 672 """"""; --> 673 return _rank_genes_groups_plot(; 674 adata,; 675 plot_type='heatmap',. ~/.local/lib/python3.8/site-packages/scanpy/plotting/_tools/__init__.py in _rank_genes_groups_plot(adata, plot_type, groups, n_genes, groupby, values_to_plot, var_names, min_logfoldchange, key, show, save, return_fig, gene_symbols, **kwds); 590 from .._anndata import heatmap; 591 ; --> 592 return heatmap(; 593 adata,; 594 var_names,. ~/.local/lib/python3.8/site-packages/scanpy/plotting/_anndata.py in heatmap(adata, var_names, groupby, use_raw, log, num_categories, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, standard_scale, swap_axes, show_gene_labels, show, save, figsize, vmin, vmax, vcenter, norm, **kwds); 1085 ; 1086 if dendrogram:; -> 1087 dendro_data = _reorder_categories_after_dendrogram(; 1088 adata,; 1089 groupby,. ~/.local/lib/python3.8/site-packages/scanpy/plotting/_anndata.py in _reorder_categories_after_dendrogram(adata, groupby, dendrogram, var_names, var_group_labels, var_group_positions, categories); 2132 """"""; 2133 ; -> 2134 key = _get_dendrogram_key(adata, dendrogram, groupby); 2135 ; 2136 if isinstance(groupby, str):. ~/.local/lib/python3.8/site-packages/scanpy/plotting/_anndata.py in _get_dendrogram_key(adata, dendrogram_key, groupby); 2234 ""tuning it is recommended to run `sc.tl.dendrogram` independently.""; 2235 ); -> 2236 dendrogram(adata, groupby, key_added=dendrogram_key); 2237 ; 2238 if 'dendrogram_info' not in adata.uns[dendrogram_key]:. ~/.local/lib/python3.8/site-packages/scanpy/tools/_dendrogram.py in dendrogram(adata, groupby, n_pcs, use_rep, var_names, use_raw, cor_method, linkage_method,",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2357:1966,log,log,1966,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2357,1,['log'],['log']
Testability,"==1.18.1 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.8.0; Standardizing Data across genes. Found 11 batches. Found 0 numerical variables:; 	. Fitting L/S model and finding priors. Finding parametric adjustments. /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_combat.py:338: RuntimeWarning: divide by zero encountered in true_divide; change = max((abs(g_new - g_old) / g_old).max(), (abs(d_new - d_old) / d_old).max()); Adjusting data. In [2]: np.sum(~np.isnan(adata_Combat.X)); Out[2]: 0. In [3]: np.sum(np.isnan(adata_Combat.X)); Out[3]: 7644442. In [4]: sc.pp.highly_variable_genes(adata_Combat); extracting highly variable genes; Traceback (most recent call last):. File ""<ipython-input-4-a706aaf6f1f8>"", line 1, in <module>; sc.pp.highly_variable_genes(adata_Combat). File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 235, in highly_variable_genes; flavor=flavor,. File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 65, in _highly_variable_genes_single_batch; df['mean_bin'] = pd.cut(df['means'], bins=n_bins). File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/pandas/core/reshape/tile.py"", line 265, in cut; duplicates=duplicates,. File ""/home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/pandas/core/reshape/tile.py"", line 381, in _bins_to_cuts; f""Bin edges must be unique: {repr(bins)}.\n"". ValueError: Bin edges must be unique: array([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,; nan, nan, nan, nan, nan, nan, nan, nan]).; You can drop duplicate edges by setting the 'duplicates' kwarg; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; >scanpy==1.4.6 anndata==0.7.1 umap==0.4.1 numpy==1.18.1 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.8.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1175:3133,log,logging,3133,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1175,1,['log'],['logging']
Testability,"===========================; __________________________________________________________________________________ TestPreprocessingDistributed.test_normalize_per_cell[dask] __________________________________________________________________________________. self = <scanpy.tests.test_preprocessing_distributed.TestPreprocessingDistributed object at 0x7fdd21f2e9d0>, adata = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; adata_dist = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; uns: 'dist-mode'. def test_normalize_per_cell(self, adata, adata_dist):; if adata_dist.uns[""dist-mode""] == ""dask"":; pytest.xfail(""TODO: Test broken for dask""); normalize_per_cell(adata_dist); result = materialize_as_ndarray(adata_dist.X); normalize_per_cell(adata); assert result.shape == adata.shape; assert result.shape == (adata.n_obs, adata.n_vars); > npt.assert_allclose(result, adata.X); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0; E ; E Mismatched elements: 688287 / 9999000 (6.88%); E Max absolute difference: 573.4154; E Max relative difference: 11.335767; E x: array([[0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],...; E y: array([[0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],... scanpy/tests/test_preprocessing_distributed.py:64: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------------------------------------------; normalizing by total count per cell; filtered out dask.array<sum-aggregate, shape=(), dtype=int64, chunksize=(), chunktype=numpy.ndarray> cells that have less than 1 counts; finished (0:00:00): normalized adata.X and added 'n_counts', counts per cell before normalization (adata.obs); normalizing by total count per cell; filtered out 1 ce",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:2811,Assert,AssertionError,2811,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,1,['Assert'],['AssertionError']
Testability,"===================================================== FAILURES ===========================================================================================================; __________________________________________________________________________________ TestPreprocessingDistributed.test_normalize_per_cell[dask] __________________________________________________________________________________. self = <scanpy.tests.test_preprocessing_distributed.TestPreprocessingDistributed object at 0x7fdd21f2e9d0>, adata = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; adata_dist = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; uns: 'dist-mode'. def test_normalize_per_cell(self, adata, adata_dist):; if adata_dist.uns[""dist-mode""] == ""dask"":; pytest.xfail(""TODO: Test broken for dask""); normalize_per_cell(adata_dist); result = materialize_as_ndarray(adata_dist.X); normalize_per_cell(adata); assert result.shape == adata.shape; assert result.shape == (adata.n_obs, adata.n_vars); > npt.assert_allclose(result, adata.X); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0; E ; E Mismatched elements: 688287 / 9999000 (6.88%); E Max absolute difference: 573.4154; E Max relative difference: 11.335767; E x: array([[0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],...; E y: array([[0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],... scanpy/tests/test_preprocessing_distributed.py:64: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------------------------------------------; normalizing by total count per cell; filtered out dask.array<sum-aggregate, shape=(), dtype=int64, chunksize=(), chunktype=numpy.ndarray> cells that have less than 1 counts; finished (0:00:00): nor",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:2717,assert,assert,2717,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,1,['assert'],['assert']
Testability,"=======================================================; platform linux -- Python 3.8.17, pytest-7.3.1, pluggy-1.0.0 -- /home/phil/Dev/Python/venvs/single-cell/bin/python; cachedir: .pytest_cache; rootdir: /home/phil/Dev/Python/Single Cell/scanpy; configfile: pyproject.toml; testpaths: scanpy; plugins: cov-4.1.0, nunit-1.0.3, memray-1.4.0, xdist-3.3.1; collected 986 items / 985 deselected / 1 selected . scanpy/tests/test_preprocessing_distributed.py::TestPreprocessingDistributed::test_normalize_per_cell[dask] FAILED [100%]. =========================================================================================================== FAILURES ===========================================================================================================; __________________________________________________________________________________ TestPreprocessingDistributed.test_normalize_per_cell[dask] __________________________________________________________________________________. self = <scanpy.tests.test_preprocessing_distributed.TestPreprocessingDistributed object at 0x7fdd21f2e9d0>, adata = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; adata_dist = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; uns: 'dist-mode'. def test_normalize_per_cell(self, adata, adata_dist):; if adata_dist.uns[""dist-mode""] == ""dask"":; pytest.xfail(""TODO: Test broken for dask""); normalize_per_cell(adata_dist); result = materialize_as_ndarray(adata_dist.X); normalize_per_cell(adata); assert result.shape == adata.shape; assert result.shape == (adata.n_obs, adata.n_vars); > npt.assert_allclose(result, adata.X); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0; E ; E Mismatched elements: 688287 / 9999000 (6.88%); E Max absolute difference: 573.4154; E Max relative difference: 11.335767; E x: array([[0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],...; E y: array([[0., 0.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:2133,test,tests,2133,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,1,['test'],['tests']
Testability,"===================================================================================================== FAILURES ===========================================================================================================; __________________________________________________________________________________ TestPreprocessingDistributed.test_normalize_per_cell[dask] __________________________________________________________________________________. self = <scanpy.tests.test_preprocessing_distributed.TestPreprocessingDistributed object at 0x7fdd21f2e9d0>, adata = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; adata_dist = AnnData object with n_obs × n_vars = 9999 × 1000; obs: 'n_counts'; var: 'gene_ids'; uns: 'dist-mode'. def test_normalize_per_cell(self, adata, adata_dist):; if adata_dist.uns[""dist-mode""] == ""dask"":; pytest.xfail(""TODO: Test broken for dask""); normalize_per_cell(adata_dist); result = materialize_as_ndarray(adata_dist.X); normalize_per_cell(adata); assert result.shape == adata.shape; assert result.shape == (adata.n_obs, adata.n_vars); > npt.assert_allclose(result, adata.X); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0; E ; E Mismatched elements: 688287 / 9999000 (6.88%); E Max absolute difference: 573.4154; E Max relative difference: 11.335767; E x: array([[0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],...; E y: array([[0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],; E [0., 0., 0., ..., 0., 0., 0.],... scanpy/tests/test_preprocessing_distributed.py:64: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------------------------------------------; normalizing by total count per cell; filtered out dask.array<sum-aggregate, shape=(), dtype=int64, chunksize=(), chunktype=numpy.ndarray> cells that ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:2681,assert,assert,2681,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,1,['assert'],['assert']
Testability,"=flags, locals=self.locals,; 157 pipeline_class=self.pipeline_class); 158 # Check typing error if object mode is used; 159 if cres.typing_error is not None and not flags.enable_pyobject:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:693, in compile_extra(typingctx, targetctx, func, args, return_type, flags, locals, library, pipeline_class); 669 """"""Compiler entry point; 670 ; 671 Parameter; (...); 689 compiler pipeline; 690 """"""; 691 pipeline = pipeline_class(typingctx, targetctx, library,; 692 args, return_type, flags, locals); --> 693 return pipeline.compile_extra(func). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:429, in CompilerBase.compile_extra(self, func); 427 self.state.lifted = (); 428 self.state.lifted_from = None; --> 429 return self._compile_bytecode(). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:497, in CompilerBase._compile_bytecode(self); 493 """"""; 494 Populate and run pipeline for bytecode input; 495 """"""; 496 assert self.state.func_ir is None; --> 497 return self._compile_core(). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:476, in CompilerBase._compile_core(self); 474 self.state.status.fail_reason = e; 475 if is_final_pipeline:; --> 476 raise e; 477 else:; 478 raise CompilerError(""All available pipelines exhausted""). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler.py:463, in CompilerBase._compile_core(self); 461 res = None; 462 try:; --> 463 pm.run(self.state); 464 if self.state.cr is not None:; 465 break. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler_machinery.py:353, in PassManager.run(self, state); 350 msg = ""Failed in %s mode pipeline (step: %s)"" % \; 351 (self.pipeline_name, pass_desc); 352 patched_exception = self._patch_error(msg, e); --> 353 raise patched_exception. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler_machi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:6352,assert,assert,6352,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['assert'],['assert']
Testability,">>> ; >>> # This errors, because X is not normalized and flavor=""seurat"" requires normalizes data.; >>> # ValueError: cannot specify integer `bins` when input data contains infinity; >>> sc.pp.highly_variable_genes(pbmc, flavor=""seurat"", subset=False, inplace=False); .venv/lib/python3.10/site-packages/scipy/sparse/_data.py:133: RuntimeWarning: overflow encountered in expm1; result = op(self._deduped_data()); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""venv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 434, in highly_variable_genes; df = _highly_variable_genes_single_batch(; File "".venv/lib/python3.10/site-packages/scanpy/preprocessing/_highly_variable_genes.py"", line 215, in _highly_variable_genes_single_batch; df['mean_bin'] = pd.cut(df['means'], bins=n_bins); File "".venv/lib/python3.10/site-packages/pandas/core/reshape/tile.py"", line 263, in cut; raise ValueError(; ValueError: cannot specify integer `bins` when input data contains infinity; >>> ; >>> # This works, we pass log tranformed data; >>> pbmc.uns['log1p'] = log_anndata.uns['log1p']; >>> sc.pp.highly_variable_genes(pbmc, layer=""log_transformed"", flavor=""seurat"", subset=False, inplace=False); means dispersions mean_bin dispersions_norm highly_variable; 0 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 1 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 2 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 3 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 4 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; ... ... ... ... ... ...; 32733 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 32734 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 32735 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 32736 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False; 32737 1.000000e-12 NaN (-0.00411, 0.205] 0.0 False. [32738 rows x 5 columns]; >>> ; >>> # This raises ValueError again; >>> pbmc.obs['batch'] = 'A'; >>> column_index = pbmc.obs.columns.get_indexer(['batch']); >>> pbmc.obs.ilo",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2396:3475,log,log,3475,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2396,1,['log'],['log']
Testability,"@Koncopd, I just tried out the new release candidate for umap and get errors though out the ingest tests. It looks like `umap` now relies on `pynndescent` and some functions are no longer available. Here's an example traceback:. ```pytb; ------------------------------------------------------------------------------------------------------------------- Captured stderr call -------------------------------------------------------------------------------------------------------------------; running ingest; ______________________________________________________________________________________________________________ test_ingest_map_embedding_umap ______________________________________________________________________________________________________________. def test_ingest_map_embedding_umap():; adata_ref = sc.AnnData(X); adata_new = sc.AnnData(T); ; sc.pp.neighbors(; adata_ref, method='umap', use_rep='X', n_neighbors=4, random_state=0; ); sc.tl.umap(adata_ref, random_state=0); ; > ing = sc.tl.Ingest(adata_ref). scanpy/tests/test_ingest.py:132: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; scanpy/tools/_ingest.py:270: in __init__; self._init_neighbors(adata); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <scanpy.tools._ingest.Ingest object at 0x140357550>, adata = AnnData object with n_obs × n_vars = 6 × 5 ; uns: 'neighbors', 'umap'; obsm: 'X_umap'. def _init_neighbors(self, adata):; from umap.distances import named_distances; > from umap.nndescent import (; make_initialisations,; make_initialized_nnd_search,; ); E ImportError: cannot import name 'make_ini",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1036:99,test,tests,99,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1036,1,['test'],['tests']
Testability,"@falexwolf, @flying-sheep . From the discussion on #45, I think some more discussion should be had as to what imputation methods are to be included in scanpy. Validation of and comparisons between the currently available imputation methods are both severely lacking---I only know of [1][2][3][4][5], none of which include comprehensive benchmarks, and the updated MAGIC (#187) article at Cell doesn't include relevant comparisons between current methods. . I'd be very interested in hearing/having an open discussion about the motivation, benefits, and limitations of the various imputation methods available. [1]: Zhang and Zhang, 2017. https://www.biorxiv.org/content/early/2017/12/31/241190; [2]: Lopez et al. 2018, https://www.biorxiv.org/content/early/2018/03/30/292037; [3]: Li and Li, 2018. https://www.nature.com/articles/s41467-018-03405-7; [4]: Eraslan et al. 2018. https://www.biorxiv.org/content/early/2018/04/13/300681; [5]: Huang et al. 2018. https://www.biorxiv.org/content/early/2018/03/08/138677",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/189:336,benchmark,benchmarks,336,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/189,1,['benchmark'],['benchmarks']
Testability,"@fidelram @gokceneraslan I'm opening this issue to talk about the broken doc builds. Previously discussed in: https://github.com/theislab/scanpy/pull/1204#issuecomment-654765480 and https://github.com/theislab/scanpy/pull/1210#issuecomment-651510328. I'm able to see the errors, but that might be due to privileges for readthedocs. Are you able to look at any PR error logs?. Anyways, the docs fail with this traceback:. <details>; <summary> Traceback </summary>. ```. /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/setuptools_scm/git.py:68: UserWarning: ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/1204"" is shallow and may cause errors; warnings.warn('""{}"" is shallow and may cause errors'.format(wd.path)); /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/1204/docs/conf.py:112: RemovedInSphinx40Warning: The app.add_stylesheet() is deprecated. Please use app.add_css_file() instead.; app.add_stylesheet('css/custom.css'). Traceback (most recent call last):; File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/cmd/build.py"", line 280, in build_main; app.build(args.force_all, filenames); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/application.py"", line 348, in build; self.builder.build_update(); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 299, in build_update; len(to_build)); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packages/sphinx/builders/__init__.py"", line 311, in build; updated_docnames = set(self.read()); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/1204/lib/python3.6/site-packa",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1307:369,log,logs,369,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1307,1,['log'],['logs']
Testability,"@fidelram. Related to changes made in #794. . If a categorical column is passed in color, but maximum and minimum colors are passed as functions or strings, an error is thrown. It looks like the same error in each case. I think we just need some logic saying to only try and set vmin and vmax for numeric values. ## Example. Setup. ```python; import scanpy as sc; import numpy as np; from functools import partial. pbmc = sc.datasets.pbmc68k_reduced(); ```. Passing a function. ```python; sc.pl.umap(pbmc, color=[""bulk_labels"", ""HES4""], vmax=partial(np.quantile, q=0.99)); ```. <details>; <summary> Traceback </summary>. ```python; ---------------------------------------------------------------------------; UFuncTypeError Traceback (most recent call last); <ipython-input-13-83df06d6a2e8> in <module>; ----> 1 sc.pl.umap(pbmc, color=[""bulk_labels"",""HES4""], vmax=""p99""). ~/github/scanpy/scanpy/plotting/_tools/scatterplots.py in umap(adata, **kwargs); 436 If `show==False` a :class:`~matplotlib.axes.Axes` or a list of it.; 437 """"""; --> 438 return embedding(adata, 'umap', **kwargs); 439 ; 440 . ~/github/scanpy/scanpy/plotting/_tools/scatterplots.py in embedding(adata, basis, color, gene_symbols, use_raw, sort_order, edges, edges_width, edges_color, arrows, arrows_kwds, groups, components, layer, projection, color_map, palette, size, frameon, legend_fontsize, legend_fontweight, legend_loc, legend_fontoutline, vmax, vmin, add_outline, outline_width, outline_color, ncols, hspace, wspace, title, show, save, ax, return_fig, **kwargs); 230 ; 231 # check vmin and vmax options; --> 232 kwargs['vmin'], kwargs['vmax'] = _get_vmin_vmax(vmin, vmax, count, color_vector); 233 ; 234 # make the scatter plot. ~/github/scanpy/scanpy/plotting/_tools/scatterplots.py in _get_vmin_vmax(vmin, vmax, index, color_vector); 390 f""correct format for percentiles.""); 391 # interpret value of vmin/vmax as quantile with the following syntax 'p99.9'; --> 392 v_value = np.percentile(color_vector, q=float(v_value[1:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/800:246,log,logic,246,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/800,1,['log'],['logic']
Testability,"@fidelram. The test `test_matrixplot_obj` fails if `pandas>1.2.0` as the groups order changes. These groups are meant to be sorted with `plot.add_totals(sort='descending')`. All groups have the same value here, so my assumption is this is fine. I'm going to change the test for now, but it'd be good to hear back from you on whether this is a bug or not. It would probably be good if we could ensure a stable sort was used so this won't change in future.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1562:15,test,test,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1562,2,['test'],['test']
Testability,"@flying-sheep I'm thinking we should switch to using conda-forge for distributing scanpy. Right now, we're having trouble maintaining the bioconda builds. We already use conda-forge for anndata, so I think it would reduce the maintenance burden to consolidate our build systems. Also, I find conda-forge's tooling and documentation much easier to follow. I've started setting up a conda-forge recipe, which has gone pretty well. However I'm running into one issue with the tests. It looks like we don't bundle the `conftest.py` file at our project root with the rest of scanpy. This leads to the flaky internet tests being run when the conda package is built. Not sure how to deal with this at the moment. Update: Also `test_regress_out_ordinal` seems to hang forever when testing the build.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1169:473,test,tests,473,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1169,3,['test'],"['testing', 'tests']"
Testability,"@flying-sheep This is generally the kind of simplification I was hoping we could do with plotting. ; It's not much, and is more about the dotplot, heatmap, etc. plotting methods. Also, the test errors I was running into are still happening. Another example would using a function to choose representations of X the same way for each function. Something like:. ```python; def _choose_obs_rep(adata, *, use_raw=False, layer=None, obsm=None, obsp=None):; """"""; Choose array aligned with obs annotation.; """"""; is_layer = layer is not None; is_raw = use_raw is not False; is_obsm = obsm is not None; is_obsp = obsp is not None; choices_made = sum((is_layer, is_raw, is_obsm, is_obsp)); assert choices_made <= 1; if choices_made == 0:; return adata.X; elif is_layer:; return adata.layers[layer]; elif use_raw:; return adata.raw.X; elif is_obsm:; return adata.obsm[obsm]; elif is_obsp:; return adata.obsp[obsp]; else:; assert False, (; ""That was unexpected. Please report this bug at:\n\n\t""; "" https://github.com/theislab/scanpy/issues""; ); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1109:189,test,test,189,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1109,3,"['assert', 'test']","['assert', 'test']"
Testability,"@flying-sheep: After the recent changes I am getting the following error:. ```bash; /apps/scanpy/scanpy/logging.py in _settings_verbosity_greater_or_equal_than(v); 36 def _settings_verbosity_greater_or_equal_than(v):; 37 if isinstance(settings.verbosity, str):; ---> 38 settings_v = _VERBOSITY_LEVELS_FROM_STRINGS[settings.verbosity]; 39 else:; 40 settings_v = settings.verbosity; KeyError: 'warning'; ```. The problem is solved by setting the verbosity level. E.g. ```; sc.settings.verbosity = 3; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/496:104,log,logging,104,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/496,1,['log'],['logging']
Testability,"@ivirshup @falexwolf the new black 20 lets users manually control which parameter lists, lists, tuples, dicts, … to explode onto multiple lines. Another advantage is that the removal of e.g. a parameter doesn’t lead to long diffs because they won’t automatically get collapsed again. Finally, it’s useful for e.g. tests or so, where we can format consecutive similar lines of data consistently. I tried to figure out the cleanest version of every spot where black 20 made changes. If you want to change some, or add new spots that can now be formatted more clearly, just create a new PR. This one is supposed to quickly fix Travis.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1394:314,test,tests,314,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1394,1,['test'],['tests']
Testability,"@scottgigante @flying-sheep, on current master the tests fail for me with a MAGIC not installed error. External tests should have some mark to make sure they don't get run if the required package isn't installed.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1001:51,test,tests,51,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1001,2,['test'],['tests']
Testability,"A list for keeping track of things that we might change when breaking backwards compat at some point:. - [ ] merge sparse pca https://github.com/theislab/scanpy/pull/1066; - [x] merge https://github.com/theislab/scanpy/pull/1111; - [ ] merge #572; - [ ] make `t-test` or `wilxocon` the default of `tl.rank_genes_groups`; - [ ] set the cachdir default to `user_cache_dir(…)`, `~/.scanpy/cache/` or `~/.cache/`; - [ ] stationary states in DPT: https://github.com/theislab/scanpy/blob/b11b4abe5e16053c010e57b2dd3a27396a4b0cf2/scanpy/neighbors/__init__.py#L853-L857 thanks to @Marius1311 for pointing it out!; - [ ] rename `log2fc` or similarly: #446; - [ ] add `inplace` functionality where easily possible, that's not a simple renaming; a function that has `inplace` in it, should only return the annotation if `inplace=False`; the `copy` functions return the whole `adata`, which we don't want...; - [ ] rename `n_comps` to `n_components` everywhere; - [ ] consider merging https://github.com/theislab/scanpy/pull/403; - [ ] replace default pca solver with 'arpack'; - [ ] change default solver in logreg solver in rank_genes_groups to lbfgs; - [x] merge #621; - [ ] make `pp.highly_variable_genes` return a df instead of a recarray...; - [ ] Transition away from positional APIs: #464 (actually backwards compatible through decorator!). anndata:; - [ ] merge https://github.com/theislab/anndata/pull/130 and fix Scanpy tests",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/453:262,test,test,262,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/453,3,"['log', 'test']","['logreg', 'test', 'tests']"
Testability,"A lot of computing will be GPU accelerated in the near and distant future. ScanPy is no exception as was recently demonstrated by NVIDIA. We got a nice PR (https://github.com/theislab/scanpy/pull/1533) to get started, but we are hesitant to merge it since we cannot yet cover GPU accelerated algorithms with our CI. - [ ] Get machines with GPUs; - [ ] Set them up with CUDA etc; - [ ] Explore whether GA or Azure suits us better for a custom runner; - [ ] Hook up the custom runner with the ScanPy repository; - [ ] Investigate whether we should use custom triggers for GPU related PRs or just always run them; - [ ] Write GPU only tests",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1793:632,test,tests,632,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1793,1,['test'],['tests']
Testability,"A number of multithreaded functions and libraries we use default to `os.cpu_count()` number of threads. This is a problem when multiple processes are running in parallel, as is the case when using pytest-xdist. This oversubscription can lead to an increase in test time when multiple workers are used. This PR limits how many threads most libraries use via `threadpoolctl`, and scales this to the number of workers available on the host. I personally see improvements of ~10x when running with this setting on a server with 16 cores, using `-n auto`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2843:260,test,test,260,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843,1,['test'],['test']
Testability,Adata.raw gets modified upon log normalization of adata,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3073:29,log,log,29,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3073,1,['log'],['log']
Testability,Add benchmarks,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2977:4,benchmark,benchmarks,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2977,1,['benchmark'],['benchmarks']
Testability,"Add cell_ranger consistency test, fix test file extensions",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2851:28,test,test,28,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2851,2,['test'],['test']
Testability,Add figure closing teardown for all tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1662:36,test,tests,36,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1662,1,['test'],['tests']
Testability,Add fsspec as a test dependency due to dask,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/765:16,test,test,16,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/765,1,['test'],['test']
Testability,Add test for reading visium 2,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2532:4,test,test,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2532,1,['test'],['test']
Testability,"Added p-values output to Wilcoxon tests, as discussed in #270. Left most of the code the same (including the chunking). Wilcoxon test now outputs pvals, adjusted pvals (Bonferroni correction), and log fold changes. The change in speed should be much smaller than before:; Original time:; <img width=""468"" alt=""screen shot 2018-10-08 at 4 04 02 pm"" src=""https://user-images.githubusercontent.com/37122760/46632615-43fbda80-cb19-11e8-9a6b-9f6e06dd656c.png"">. New time:; <img width=""481"" alt=""screen shot 2018-10-08 at 4 02 47 pm"" src=""https://user-images.githubusercontent.com/37122760/46632624-4bbb7f00-cb19-11e8-916a-db518ff60791.png"">. I also fixed a bug where the Wilcoxon test would output the absolute values of the scores when rankby_abs=True, which shouldn't happen according to the function description. . As a side note, I was unable to find a quick/efficient way to rank the full sparse matrix for the wilcoxon test, which is why I kept the chunking along genes as suggested. Hope this helps!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/289:34,test,tests,34,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/289,5,"['log', 'test']","['log', 'test', 'tests']"
Testability,"Added restrict_to parameter to leiden by using louvain code as template.; Tests are not yet provided. A simple example of execution and checks:. ```python; # First split on cluster 4; sc.tl.leiden(adata, restrict_to=('leiden_res0.4', ['4']), resolution=0.6,; key_added='leiden_res0.4_4_sub'). # Additional split; sc.tl.leiden(adata, restrict_to=('leiden_res0.4_4_sub', ['1', '2', '3', '4,4']),; resolution=0.6, key_added='leiden_res0.4_4_add_sub'). # All partitions together; sc.pl.tsne(adata, color=['leiden_res0.4', 'leiden_res0.4_4_sub',; 'leiden_res0.4_4_add_sub']). # Partition size check; ## Original size of clusters; adata.obs['leiden_res0.4'].value_counts(); 0 932; 1 853; 3 676; 2 676; 4 338; 5 57; Name: leiden_res0.4, dtype: int64. # Check if first split is correct (can be iterated for subsequent splits); ## Assignment of samples in original clusters to subsplit clusters; adata.obs.loc[(adata.obs['leiden_res0.4'].isin(['4'])),; 'leiden_res0.4_4_sub'].value_counts(); 4,0 103; 4,1 68; 4,2 66; 4,3 57; 4,4 44; 5 0; 3 0; 2 0; 1 0; 0 0; Name: leiden_res0.4_4_sub, dtype: int64; ## Assignment of samples not in original clusters to subsplit clusters; adata.obs.loc[~(adata.obs['leiden_res0.4'].isin(['4'])),; 'leiden_res0.4_4_sub'].value_counts(); 0 932; 1 853; 3 676; 2 676; 5 57; 4,4 0; 4,3 0; 4,2 0; 4,1 0; 4,0 0; Name: leiden_res0.4_4_sub, dtype: int64. ...; ```; ![Image](https://user-images.githubusercontent.com/697622/55434369-7553e100-5565-11e9-91ee-0d0396ee6138.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/586:74,Test,Tests,74,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/586,1,['Test'],['Tests']
Testability,"Added test for filter_genes_dispersion, updated docs",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/343:6,test,test,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/343,1,['test'],['test']
Testability,"Added tests for normalize_total, changed quantile argument name to fraction.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/605:6,test,tests,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/605,1,['test'],['tests']
Testability,Adding test for pca.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/466:7,test,test,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/466,1,['test'],['test']
Testability,"Addresses https://github.com/theislab/scanpy/issues/698. Adds some bug fixes and optional tie correction for wilcoxon rank sum test. ```; # tie_correct=False by default; sc.tl.rank_genes_groups(adata, ..., method='wilcoxon', tie_correct=True); ```. Also the test here compares `rank_genes_groups` method `'wilcoxon'` to `scipy.stats.mannwhitneyu`. @idavydov , thanks for the `matrix_tiecorrect` code.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1330:127,test,test,127,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1330,2,['test'],['test']
Testability,"Adds median as aggregation function to https://github.com/scverse/scanpy/blob/0f3161295dbf0cf568376c31eaa5c6e148dcf9f0/src/scanpy/get/_aggregated.py; In case of a sparse matrix, it will be converted to dense matrix before calculating median. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3180:329,Test,Tests,329,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3180,1,['Test'],['Tests']
Testability,"After clustering cells with a restricted gene set, I would like to see the contribution of ""specified genes"" in subgrouping the cells. ""sc.tl.rank_genes_groups"" uses all the genes in the background for the statistical calculations. I want to test it for all the Louvain groups against the rest of the data (so, groups='all', reference='rest'). Is there a way, we can specify the gene list? (I tried using the 'use_raw' of sc.tl.rank_genes_groups to subset). I don't find any other options to restrict gene lists here. . `subset_genes = ldata[:, ['Gabrg1', 'Ntrk1', 'Htr1a', 'Plaur', 'Il31ra', 'Gabrg3', 'P2rx3', 'Oprk1', 'P2ry1', 'Cnih3']]. sc.tl.rank_genes_groups(ldata, 'louvain', method='wilcoxon', use_raw= 'subset_genes', n_genes = 100). sc.pl.rank_genes_groups(ldata, n_genes=15, sharey=False)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/748:242,test,test,242,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/748,1,['test'],['test']
Testability,"After we switch to scipy t-test, I started getting a scipy warning (`invalid value encountered`) when I run the following the code:. ```python; adata = sc.datasets.paul15(); adata.X[:, 10] = 0.0; sc.tl.rank_genes_groups(adata, 'paul15_clusters'); ```. Output:. ![image](https://user-images.githubusercontent.com/1140359/57115885-88ea9700-6d1f-11e9-8752-a865cda602b7.png). @ivirshup is having a look now.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/629:27,test,test,27,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/629,1,['test'],['test']
Testability,"All of the plotting tests are failing for me. Largely this seems based on font rendering. ![highest_expr_genes-failed-diff](https://user-images.githubusercontent.com/8238804/47278908-46c9f580-d618-11e8-99c0-ac5512994ea3.png). Though there might be something more with the violin plots. ![master_violin_multi_panel-failed-diff](https://user-images.githubusercontent.com/8238804/47278943-990b1680-d618-11e8-8e04-8e987c40b90e.png). Is there some setup required to get these tests to pass? My `matplotlibrc` is empty, so I don't think that's the issue.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/317:20,test,tests,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/317,2,['test'],['tests']
Testability,"All plotting tests failing, mostly trivially",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/317:13,test,tests,13,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/317,1,['test'],['tests']
Testability,Also do `pytest -v` for more immediate display of tests (helps to see e.g. when a test hangs),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2468:50,test,tests,50,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2468,2,['test'],"['test', 'tests']"
Testability,"Alternative to #2255. Fixes #2254, #2227. Puts all the diffmap specific logic inside the diffmap plotting function. ## TODO. - [ ] consider the components argument; - [ ] tests (cause it has none apparently)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2280:72,log,logic,72,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2280,2,"['log', 'test']","['logic', 'tests']"
Testability,"An addendum to #442, now if you try to read a 10x file and pass a genome it doesn't have, the error tells you which file it was and the genomes it does have:. ```python; In [1]: import scanpy as sc ; ...: sc.read_10x_h5(""scanpy/tests/_data/10x_data/1.2.0/filtered_gene_bc_matrices_h5.h5"", ""not a genome"") ; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last). ... ValueError: Could not find genome 'not a genome' in 'scanpy/tests/_data/10x_data/1.2.0/filtered_gene_bc_matrices_h5.h5'. Available genomes are: ['hg19_chr21']; ```. Previous behavior:. ```python; In [1]: import scanpy as sc ; ...: sc.read_10x_h5(""scanpy/tests/_data/10x_data/1.2.0/filtered_gene_bc_matrices_h5.h5"", ""not a genome"") ; ---------------------------------------------------------------------------; NoSuchNodeError Traceback (most recent call last). ... Exception: Genome not a genome does not exist in this file.; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/444:228,test,tests,228,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/444,3,['test'],['tests']
Testability,"An implementation of highly deviant gene identification from the 2019 GLMPCA paper. I'm rather fond of the method, as it's a straightforward statistical measure, and comes with significance testing as a form of data-driven cutoff. I put it in a new `highly_deviant_genes()` function, as:; - it comes with a number of unique parameters, and there's only so many different algorithms `highly_variable_genes()` can house; - the paper argues that highly deviant is different from highly variable. I acknowledge that there are no tests, I'm hoping to get some assistance with that if possible.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1765:190,test,testing,190,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1765,2,['test'],"['testing', 'tests']"
Testability,"An updated new release of [`PhenoGraph`](https://github.com/dpeerlab/PhenoGraph) package now supports `Leiden` algorithm for community detection. The suggested changes in `scanpy/external/tl/_phenograph.py` will make the new updates visible in Scanpy as well. Also, the suggested changes include a testing function in `scanpy/tests/external/test_phenograph.py`, and updated docs.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1080:298,test,testing,298,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1080,2,['test'],"['testing', 'tests']"
Testability,"Another error I get and have no idea how to solve is when using the Wilcoxon rank-sum for testing for differential gene expression:. `sc.tl.rank_genes_groups(adata, 'louvain', method='wilcoxon'); sc.pl.rank_genes_groups(adata, n_genes=25, sharey=False)`. ```; ranking genes. ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-385-c2fa7bb8ea8d> in <module>; ----> 1 sc.tl.rank_genes_groups(adata, 'louvain', method='wilcoxon'); 2 sc.pl.rank_genes_groups(adata, n_genes=25, sharey=False). ~\AppData\Local\conda\conda\envs\Scanpy\lib\site-packages\scanpy\tools\_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, **kwds); 352 ; 353 scores[imask, :] = (scores[imask, :] - (ns[imask] * (n_cells + 1) / 2)) / sqrt(; --> 354 (ns[imask] * (n_cells - ns[imask]) * (n_cells + 1) / 12)); 355 scores[np.isnan(scores)] = 0; 356 pvals = 2 * stats.distributions.norm.sf(np.abs(scores[imask,:])). ValueError: math domain error. ```. The logistic regression and t-test work fine.; I guess it is related to my data....",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/566:90,test,testing,90,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/566,3,"['log', 'test']","['logistic', 'test', 'testing']"
Testability,Argument to compare absolute values of log fold change with `min_fold_change`.; https://github.com/theislab/scanpy/issues/1325; I think `compare_abs` is a better name than `rankby_abs` for this.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1649:39,log,log,39,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1649,1,['log'],['log']
Testability,"As discussed in issue #313, score_genes function returns different values on various machines. This is due to using float32 dtype in the `np.nanmean` calls. This PR fixes this behaviour by changing the dtype to float64 in the relevant sections of code ie. functions `gene_score()` and `_sparse_nanmean`. Following the suggestion of @ivirshup the returned value is now also float64. I also adapted the tests `test_add_score` and `test_npnanmean_vs_sparsemean` to use and expect float64.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1890:401,test,tests,401,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1890,1,['test'],['tests']
Testability,"As noted in #1334, visium downloads were broken. Setting a header on downloads seems to fix them. This supersedes #1334 since that solution modifies global state around `urllib`, which is asking for trouble. This unfortunately means most of the method had to be reimplemented.; The new implementation is based on `urllib.requests.urlretrieve`, but with a modification to let us pass a header. I also included a couple minor fixes to existing dataset download stuff:. * We don't get a warning from using `@internet` test marker anymore; * One of the downloaded datasets changed, so the test got updated; * `_download` no longer creates all parent directories. That is handled upstream. @Mirkazemi @Koncopd",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1344:515,test,test,515,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1344,2,['test'],['test']
Testability,AssertionError: Don’t call _normalize_index with non-categorical/string names,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2979:0,Assert,AssertionError,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2979,1,['Assert'],['AssertionError']
Testability,"AssertionError: Sizes of partitioned, $174.6 do not match on .../_qc.py",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1143:0,Assert,AssertionError,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1143,1,['Assert'],['AssertionError']
Testability,AttributeError: module 'scanpy.api.logging' has no attribute 'msg',MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/895:35,log,logging,35,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/895,1,['log'],['logging']
Testability,Auto-metric and fix logs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3186:20,log,logs,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3186,1,['log'],['logs']
Testability,Avoid warning in rank_genes_groups if 't-test' is passed,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1303:41,test,test,41,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1303,1,['test'],['test']
Testability,"Background: ~40k cells, umap, tsne, ... all had no problem. When running diffmap:; `sc.tl.diffmap(adata,n_comps=13)`. >/fastdata/chris/bin/anaconda3/lib/python3.6/site-packages/scanpy/neighbors/__init__.py:793: RuntimeWarning: divide by zero encountered in true_divide; Q = scipy.sparse.spdiags(1.0/q, 0, W.shape[0], W.shape[0]); /fastdata/chris/bin/anaconda3/lib/python3.6/site-packages/scanpy/neighbors/__init__.py:803: RuntimeWarning: divide by zero encountered in true_divide; self.Z = scipy.sparse.spdiags(1.0/z, 0, K.shape[0], K.shape[0]); ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-7-6472f1ef45f7> in <module>(); ----> 1 sc.tl.diffmap(adata,n_comps=13). /fastdata/chris/bin/anaconda3/lib/python3.6/site-packages/scanpy/tools/diffmap.py in diffmap(adata, n_comps, copy); 49 dmap.compute_transitions(); 50 dmap.compute_eigen(n_comps=n_comps); ---> 51 adata.obsm['X_diffmap'] = dmap.eigen_basis; 52 adata.uns['diffmap_evals'] = dmap.eigen_values; 53 logg.info(' finished', time=True, end=' ' if settings.verbosity > 2 else '\n'). /fastdata/chris/bin/anaconda3/lib/python3.6/site-packages/anndata/base.py in __setitem__(self, key, arr); 104 raise ValueError('Can only assign an array of same length ({}), '; 105 'not of length {}.'; --> 106 .format(self.shape[0], arr.shape[0])); 107 # the following always allocates a new array; 108 # even if the key already exists and dimensions match. ValueError: Can only assign an array of same length (43570), not of length 2056. What might be the problem here?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/123:1049,log,logg,1049,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/123,1,['log'],['logg']
Testability,Backport PR #1384 on branch test-backports (Fix values_to_plot literal),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1535:28,test,test-backports,28,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1535,1,['test'],['test-backports']
Testability,Backport PR #1960 on branch 1.8.x (Fix plotting tests for networkx >= 2.6.2),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1961:48,test,tests,48,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1961,1,['test'],['tests']
Testability,Backport PR #1960: Fix plotting tests for networkx >= 2.6.2,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1961:32,test,tests,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1961,1,['test'],['tests']
Testability,Backport PR #2063 on branch 1.8.x (Make louvain optional for tests),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2066:61,test,tests,61,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2066,1,['test'],['tests']
Testability,Backport PR #2063: Make louvain optional for tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2066:45,test,tests,45,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2066,1,['test'],['tests']
Testability,Backport PR #2150 on branch 1.8.x (Remove global state changes in plotting tests),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2152:75,test,tests,75,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2152,1,['test'],['tests']
Testability,Backport PR #2150: Remove global state changes in plotting tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2152:59,test,tests,59,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2152,1,['test'],['tests']
Testability,Backport PR #2274 on branch 1.9.x (Fix tests),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2275:39,test,tests,39,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2275,1,['test'],['tests']
Testability,Backport PR #2274: Fix tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2275:23,test,tests,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2275,1,['test'],['tests']
Testability,Backport PR #2521 on branch 1.9.x (Fix paga tests),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2525:44,test,tests,44,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2525,1,['test'],['tests']
Testability,Backport PR #2521: Fix paga tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2525:28,test,tests,28,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2525,1,['test'],['tests']
Testability,Backport PR #2575 on branch 1.9.x (Simplify tests),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2599:44,test,tests,44,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2599,1,['test'],['tests']
Testability,Backport PR #2575: Simplify tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2599:28,test,tests,28,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2599,1,['test'],['tests']
Testability,Backport PR #2589 on branch 1.9.x (Fixed wrong order for groups with logreg),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2600:69,log,logreg,69,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2600,1,['log'],['logreg']
Testability,Backport PR #2589: Fixed wrong order for groups with logreg,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2600:53,log,logreg,53,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2600,1,['log'],['logreg']
Testability,Backport PR #2601 on branch 1.9.x (fixed `get.rank_genes_groups_df` with logreg),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2606:73,log,logreg,73,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2606,1,['log'],['logreg']
Testability,Backport PR #2601: fixed `get.rank_genes_groups_df` with logreg,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2606:57,log,logreg,57,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2606,1,['log'],['logreg']
Testability,Backport PR #2977 on branch 1.10.x (Add benchmarks),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3016:40,benchmark,benchmarks,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3016,1,['benchmark'],['benchmarks']
Testability,Backport PR #2977: Add benchmarks,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3016:23,benchmark,benchmarks,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3016,1,['benchmark'],['benchmarks']
Testability,Backport PR #3031 on branch 1.10.x (Extend benchmarks from basic tutorial),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3056:43,benchmark,benchmarks,43,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3056,1,['benchmark'],['benchmarks']
Testability,Backport PR #3031: Extend benchmarks from basic tutorial,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3056:26,benchmark,benchmarks,26,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3056,1,['benchmark'],['benchmarks']
Testability,Backport PR #3035 on branch 1.10.x (Fix benchmark test run),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3037:40,benchmark,benchmark,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3037,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,Backport PR #3035: Fix benchmark test run,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3037:23,benchmark,benchmark,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3037,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,Backport PR #3057 on branch 1.10.x (Fix testing),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3059:40,test,testing,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3059,1,['test'],['testing']
Testability,Backport PR #3057: Fix testing,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3059:23,test,testing,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3059,1,['test'],['testing']
Testability,Backport PR #3069: Upload scrublet scores on test failure,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3242:45,test,test,45,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3242,2,['test'],['test']
Testability,Backport PR #3089 on branch 1.10.x (Fix and test zappy support),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3090:44,test,test,44,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3090,1,['test'],['test']
Testability,Backport PR #3089: Fix and test zappy support,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3090:27,test,test,27,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3090,1,['test'],['test']
Testability,Backport PR #3092 on branch 1.10.x (Move to src / tests layout),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3105:50,test,tests,50,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3105,1,['test'],['tests']
Testability,Backport PR #3092: Move to src / tests layout,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3105:33,test,tests,33,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3105,1,['test'],['tests']
Testability,Backport PR #3147: Run benchmarks for off axis,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3166:23,benchmark,benchmarks,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3166,2,['benchmark'],['benchmarks']
Testability,Backport PR #3162 on branch 1.10.x (Fix tests for dask PCA),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3165:40,test,tests,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3165,1,['test'],['tests']
Testability,Backport PR #3162: Fix tests for dask PCA,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3165:23,test,tests,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3165,1,['test'],['tests']
Testability,Backport PR #3177 on branch 1.10.x (Cache data for subsequent test runs),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3179:62,test,test,62,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3179,1,['test'],['test']
Testability,Backport PR #3177: Cache data for subsequent test runs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3179:45,test,test,45,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3179,1,['test'],['test']
Testability,Backport PR #3186 on branch 1.10.x (Auto-metric and fix logs),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3187:56,log,logs,56,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3187,1,['log'],['logs']
Testability,Backport PR #3186: Auto-metric and fix logs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3187:39,log,logs,39,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3187,1,['log'],['logs']
Testability,Backport PR #3268 on branch 1.10.x (Split up PCA tests),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3269:49,test,tests,49,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3269,1,['test'],['tests']
Testability,Backport PR #3268: Split up PCA tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3269:32,test,tests,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3269,1,['test'],['tests']
Testability,Backport PR #3292 on branch 1.10.x (Fix benchmark job: Use upstream asv),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3293:40,benchmark,benchmark,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3293,1,['benchmark'],['benchmark']
Testability,Backport PR #3292: Fix benchmark job: Use upstream asv,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3293:23,benchmark,benchmark,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3293,1,['benchmark'],['benchmark']
Testability,Backport PRs #2478 and #2235 on branch 1.9.x (Separate test utils from tests),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2528:55,test,test,55,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2528,2,['test'],"['test', 'tests']"
Testability,Benchmark dask,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3319:0,Benchmark,Benchmark,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3319,1,['Benchmark'],['Benchmark']
Testability,Benchmarking support with asv,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2482:0,Benchmark,Benchmarking,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2482,1,['Benchmark'],['Benchmarking']
Testability,Benchmarks: Add all from Dask tutorial,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3013:0,Benchmark,Benchmarks,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3013,1,['Benchmark'],['Benchmarks']
Testability,Benchmarks: Add all from basic tutorial,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3012:0,Benchmark,Benchmarks,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3012,1,['Benchmark'],['Benchmarks']
Testability,Better CI test results,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1564:10,test,test,10,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1564,1,['test'],['test']
Testability,"Bioconda builds are failing for `v1.4.4`, https://github.com/bioconda/bioconda-recipes/pull/16473. From the build logs, it looks like this is related to `importlib_metadata` 😕.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/752:114,log,logs,114,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/752,1,['log'],['logs']
Testability,Branch of #1772 to check that CI reporting is made better. Makes some reference based plotting tests fail.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1773:95,test,tests,95,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1773,1,['test'],['tests']
Testability,Broken Scrublet Test,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3068:16,Test,Test,16,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3068,1,['Test'],['Test']
Testability,Broken test: PCA solver “LOBPCG” can’t handle small test data,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2744:7,test,test,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2744,2,['test'],['test']
Testability,Broken test: `TestPreprocessingDistributed::test_normalize_per_cell[dask]`,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2526:7,test,test,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2526,2,"['Test', 'test']","['TestPreprocessingDistributed', 'test']"
Testability,Broken zappy tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3087:13,test,tests,13,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3087,1,['test'],['tests']
Testability,"Bugfix for the sparse pca. It looks like we forgot to pass a random seed when this is used... But we also never had a test that checks if you run the function twice with the same random seed it returns the same result. This PR fixes both these issues. The new tests are a bit slow, but are definitely needed. I've also added a fixture for returning a copy of the pbmc3k dataset which has been normalized and had `highly_variable_genes` run on it. Preparation of the object should only happen once per run of the suite, but a new copy will be provided for each test that uses it. This was done to speed up the new tests.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1240:118,test,test,118,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1240,4,['test'],"['test', 'tests']"
Testability,"By default, Travis does `git clone --depth=50` which means the version can’t be detected from the git tag. In case we ever start relying on the version being correct in the tests, this fixes it.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1713:173,test,tests,173,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1713,1,['test'],['tests']
Testability,"CI runs that report coverage currently don't fail if the tests fail. This is because the way the coverage job is written swallows the error. I'm updating this use the same approach as anndata, which seems to be working.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2874:57,test,tests,57,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2874,1,['test'],['tests']
Testability,Cache data for subsequent test runs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3177:26,test,test,26,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3177,1,['test'],['test']
Testability,"Cache datasets so notebook tests can run without requiring an external server, since they cover realistic use cases and a good amount of the API.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/717:27,test,tests,27,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/717,1,['test'],['tests']
Testability,"Calling `sc.pp.highly_variable_genes(adata, n_top_genes=n_top_genes)` results in an error if `n_top_genes` is larger than the size of the `dispersion_norm` vector, which is the vector that we want to subset. Before this fix, scanpy just checked if `n_top_genes` was greater than `adata.n_vars`, which is unreliable since `dispersion_norm` can be smaller than that due to the subsetting in line 261: `dispersion_norm = dispersion_norm[~np.isnan(dispersion_norm)]`. This PR fixes this. All tests in `test_highly_variable_genes.py` pass, but others like `test_plotting.py::test_violin` fail. I'm not sure why -- anyone have an idea?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1985:488,test,tests,488,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1985,1,['test'],['tests']
Testability,"Came across this while investigating #1032. . ```python; import scanpy as sc; pbmc = sc.datasets.pbmc3k_processed(); sc.pp.highly_variable_genes(pbmc, inplace=False); ```. ```pytb; /Users/isaac/github/scanpy/scanpy/preprocessing/_highly_variable_genes.py:58: RuntimeWarning: invalid value encountered in log; dispersion = np.log(dispersion); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-36b7cb4d9c0f> in <module>; 1 import scanpy as sc; 2 pbmc = sc.datasets.pbmc3k_processed(); ----> 3 sc.pp.highly_variable_genes(pbmc, batch_key=""louvain"", inplace=False). ~/github/scanpy/scanpy/preprocessing/_highly_variable_genes.py in highly_variable_genes(adata, min_disp, max_disp, min_mean, max_mean, n_top_genes, n_bins, flavor, subset, inplace, batch_key); 347 ('highly_variable_intersection', np.bool_),; 348 ]); --> 349 return np.rec.fromarrays(arrays, dtype=dtypes). /usr/local/lib/python3.7/site-packages/numpy/core/records.py in fromarrays(arrayList, dtype, shape, formats, names, titles, aligned, byteorder); 615 ; 616 if dtype is not None:; --> 617 descr = sb.dtype(dtype); 618 _names = descr.names; 619 else:. TypeError: data type not understood; ````. Separately, could we return a dataframe here?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1033:304,log,log,304,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1033,2,['log'],['log']
Testability,"Can you give a dict of deprecated functions and there new analogues? ; Then we can add f""Use {new_func[deprecated_func]} instead."" for raise FutureWarning. ; ; ; <!-- Please check (“- [x]”) and fill in the following boxes --> ; - [x] Closes #2505 ; - [x] Tests included or not required because: ; Didn't add decorator to any function(don't know which are deprecated) ; <!-- Only check the following box if you did not include release notes --> ; - [x] Release notes not necessary because: ; Too small issue",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2713:255,Test,Tests,255,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2713,2,['Test'],['Tests']
Testability,"Can you give a dict of deprecated functions and there new analogues?; Then we can add f""Use {new_func[deprecated_func]} instead."" for raise FutureWarning. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ x] Closes #2505 ; - [x ] Tests included or not required because:; Didn't add decorator to any function(don't know which are deprecated); <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:; Too small issue",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2709:249,Test,Tests,249,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2709,1,['Test'],['Tests']
Testability,"Can you give a dict of deprecated functions and there new analogues?; Then we can add f""Use {new_func[deprecated_func]} instead."" for raise FutureWarning. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2505 ; - [x] Tests included or not required because:; Didn't add decorator to any function(don't know which are deprecated); <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:; Too small issue",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2710:247,Test,Tests,247,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2710,2,['Test'],['Tests']
Testability,Can't get ordinal regression test with multiple processes to run,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/182:29,test,test,29,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/182,1,['test'],['test']
Testability,Change test to actually test `read_visium`,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2130:7,test,test,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2130,2,['test'],['test']
Testability,Changeset:; * added new MAGIC parameter `knn_max`; * updated MAGIC default parameters to match KrishnaswamyLab/MAGIC; * added tests to check MAGIC implementation interacts with AnnData object correctly; * increased required version of `magic-impute` to 2.0,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/988:126,test,tests,126,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/988,1,['test'],['tests']
Testability,"Checks if current axis is colorbar before trying to set the name, see #2681.; This might not be the best solution and does not yet integrate a unit test. <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2682:148,test,test,148,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2682,1,['test'],['test']
Testability,Close figures after all tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1671:24,test,tests,24,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1671,1,['test'],['tests']
Testability,Closes #3211. Lets you run all parts of UMAP in Parallel. Default will still be False for reproducibility. ; Benchmarks (95k Cells AMD5950X); `parallel = False` 33 s; `parallel = True` 18 s. I copied the doc string from UMAP to explain the impact of parallel execution.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3295:109,Benchmark,Benchmarks,109,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3295,1,['Benchmark'],['Benchmarks']
Testability,"Collection of fixes for pandas 2.0. Interestingly enough, for is_categorical -> is_categorical_dtype we have already made this change in all but one file. I'm suspecting this file is left because this has no tests.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2434:208,test,tests,208,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2434,1,['test'],['tests']
Testability,"Companion PR to https://github.com/theislab/anndata/pull/434. Basically, I would like to deprecate the `dtype` argument of `AnnData._init_as_actual`, since it mostly just makes unexpected copies of `X`. Since other elements of an AnnData object are passed by reference, it makes sense for this to happen with `X` as well. Right now, this PR will fail CI. What I've done so far is remove all uses of that argument from the scanpy code base, while keeping the tests passing. I'm trying to figure out how to best preserve compatibility with older versions of `anndata`, without throwing too many warnings. I think the thing to do will be make code work with both (`AnnData(X.astype(dtype), dtype=dtype))` should only make one copy) and catch warnings. This can be removed once scanpy depends on `anndata 0.8`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1430:458,test,tests,458,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1430,1,['test'],['tests']
Testability,Currently output figures are often cut off at the edges. Adding bbox_inches = 'tight' to savefig no longer cuts off figure text at edges. As far as I've tested it this shouldn't cause any other problems and simply saves figures with proper padding.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/118:153,test,tested,153,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/118,1,['test'],['tested']
Testability,"Currently, if a set of cell groups has any groups with only one cell, attempting to run rank_genes_groups() gets you an error like:. ```; >>> sc.tl.rank_genes_groups(ad, 'louvain_resolution_3.0'); WARNING: Default of the method has been changed to 't-test' from 't-test_overestim_var'; ranking genes; consider 'louvain_resolution_3.0' groups:; with sizes: [28 13 13 11 10 9 9 8 8 8 8 7 6 6 6 4 3 3 1 1 1]; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/path/to/scanpy/tools/_rank_genes_groups.py"", line 584, in rank_genes_groups; method, corr_method, n_genes_user, rankby_abs, tie_correct, **kwds; File ""/path/to/scanpy/tools/_rank_genes_groups.py"", line 365, in compute_statistics; for group_index, scores, pvals in generate_test_results:; File ""/path/to/scanpy/tools/_rank_genes_groups.py"", line 187, in t_test; self._basic_stats(); File ""/path/to/scanpy/tools/_rank_genes_groups.py"", line 172, in _basic_stats; self.means[imask], self.vars[imask] = _get_mean_var(X_mask); File ""/path/to/scanpy/preprocessing/_utils.py"", line 14, in _get_mean_var; var *= X.shape[axis] / (X.shape[axis] - 1); ZeroDivisionError: division by zero; ```. The fix I've come up with is to filter groups by size when calling select_groups(), happy to help on alternate approaches if required.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1490:251,test,test,251,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1490,1,['test'],['test']
Testability,"Currently, test collection takes about 11 seconds. This seemed a little long so I played around with the config a bit, and found if all the test files names are prepended with `test_`, and I set `python_files = test_*.py`, collection takes about 1 second. Mind if I make that change?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/326:11,test,test,11,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/326,2,['test'],['test']
Testability,"DENTIAL_04022019.h5ad'); ```; ---------------------------------------------------------------------------; ```; OSErrorTraceback (most recent call last); <ipython-input-11-759ccdc7c8be> in <module>(); ----> 1 adata=sc.read('/gpfs/ysm/pi/zhao/wd262/sc/CONFIDENTIAL_04022019.h5ad'); 2 #> AnnData object with n_obs × n_vars = 312928 × 45947. /ysm-gpfs/pi/zhao/Softwares/Anaconda3/envs/py35/lib/python3.5/site-packages/scanpy/readwrite.py in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, **kwargs); 76 return _read(filename, backed=backed, sheet=sheet, ext=ext,; 77 delimiter=delimiter, first_column_names=first_column_names,; ---> 78 backup_url=backup_url, cache=cache, **kwargs); 79 # generate filename and read to dict; 80 filekey = filename. /ysm-gpfs/pi/zhao/Softwares/Anaconda3/envs/py35/lib/python3.5/site-packages/scanpy/readwrite.py in _read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, suppress_cache_warning, **kwargs); 433 if ext in {'h5', 'h5ad'}:; 434 if sheet is None:; --> 435 return read_h5ad(filename, backed=backed); 436 else:; 437 logg.msg('reading sheet', sheet, 'from file', filename, v=4). /ysm-gpfs/pi/zhao/Softwares/Anaconda3/envs/py35/lib/python3.5/site-packages/anndata/readwrite/read.py in read_h5ad(filename, backed, chunk_size); 442 else:; 443 # load everything into memory; --> 444 return AnnData(*_read_args_from_h5ad(filename=filename, chunk_size=chunk_size)); 445 ; 446 . /ysm-gpfs/pi/zhao/Softwares/Anaconda3/envs/py35/lib/python3.5/site-packages/anndata/readwrite/read.py in _read_args_from_h5ad(adata, filename, mode, chunk_size); 471 f = adata.file._file; 472 else:; --> 473 f = h5py.File(filename, 'r'); 474 for key in f.keys():; 475 if backed and key in AnnData._BACKED_ATTRS:. /ysm-gpfs/pi/zhao/Softwares/Anaconda3/envs/py35/lib/python3.5/site-packages/anndata/h5py/h5sparse.py in __init__(self, name, mode, driver, libver, userblock_size, swmr, force_dense, **kwds); 139 userblock_size=us",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/626:1148,log,logg,1148,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/626,1,['log'],['logg']
Testability,Dask no longer having fsspec as a required dependency means the dask tests fail. This should fix that.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/765:69,test,tests,69,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/765,1,['test'],['tests']
Testability,"Data object for each sample; 2 for sample in sample_list:; ----> 3 sample_adata = adata[:, adata.obs['sample_name'] == sample]. File ~/opt/anaconda3/lib/python3.9/site-packages/anndata/_core/anndata.py:1113, in AnnData.__getitem__(self, index); 1111 def __getitem__(self, index: Index) -> ""AnnData"":; 1112 """"""Returns a sliced view of the object.""""""; -> 1113 oidx, vidx = self._normalize_indices(index); 1114 return AnnData(self, oidx=oidx, vidx=vidx, asview=True). File ~/opt/anaconda3/lib/python3.9/site-packages/anndata/_core/anndata.py:1094, in AnnData._normalize_indices(self, index); 1093 def _normalize_indices(self, index: Optional[Index]) -> Tuple[slice, slice]:; -> 1094 return _normalize_indices(index, self.obs_names, self.var_names). File ~/opt/anaconda3/lib/python3.9/site-packages/anndata/_core/index.py:36, in _normalize_indices(index, names0, names1); 34 ax0, ax1 = unpack_index(index); 35 ax0 = _normalize_index(ax0, names0); ---> 36 ax1 = _normalize_index(ax1, names1); 37 return ax0, ax1. File ~/opt/anaconda3/lib/python3.9/site-packages/anndata/_core/index.py:90, in _normalize_index(indexer, index); 88 elif issubclass(indexer.dtype.type, np.bool_):; 89 if indexer.shape != index.shape:; ---> 90 raise IndexError(; 91 f""Boolean index does not match AnnData’s shape along this ""; 92 f""dimension. Boolean index has shape {indexer.shape} while ""; 93 f""AnnData index has shape {index.shape}.""; 94 ); 95 positions = np.where(indexer)[0]; 96 return positions # np.ndarray[int]. IndexError: Boolean index does not match AnnData’s shape along this dimension. Boolean index has shape (5258,) while AnnData index has shape (17143,). ```; I would appreciate any insights. Thank you so much! ; #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. this code had a error message because scanpy wasn't defined, but when I ran . from importlib.metadata import version; version('scanpy'). I got an output: '1.9.1'. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2402:3149,log,logging,3149,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2402,1,['log'],['logging']
Testability,"Dear all,. I am writing to ask you some other functionalities.; I have just moved from Seurat to Scanpy and I am finding Scanpy a very nice and well done Python package. . 1. I wrote a function to show the 3D plot of the UMAP, tSNE and PCA spaces. In the `scanpy.tl.tsne` function is not possible to change the number of components, it calculates only the first two components, even if the `scanpy.pl.tsne` function has a parameter `component`. May you add a parameter like the `n_components` of the `scanpy.tl.umap` function?. 2. In the `rank_genes_groups` function the log2FC values are provided only for ‘t-test’ based methods. May you return the log2FC values (maybe named log2FC) for all the implemented statistical methods?. 3. I think that two parameters in the `rank_genes_groups` function should be added.; - `min_pCells` to test only the genes that are detected in a minimum fraction of cells of either of the two populations (e.g., cluster 0 vs rest). For instance, min_pCells=0.3 means that at least 30% of the cells must express that gene.; - `positive`, if it is True, the function should return only positive marker genes for each population. 4. A function showing the volcano plots (based on the log2FC) can help (I can write it if the log2FC values are provided). Thank you in advance.; Best,; Andrea",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/460:610,test,test,610,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/460,2,['test'],['test']
Testability,"Dear developers, . in an attempt to instal the latest version of scanpy from GitHub (Master branch), I receive the following error:. Traceback (most recent call last):; File ""/home/vladie/PycharmProjects/PY3/RPE_MYCN_10X.py"", line 4, in <module>; import scanpy.external as sce; File ""/usr/local/lib/python3.6/dist-packages/scanpy/__init__.py"", line 33, in <module>; from . import datasets, logging, queries, external; File ""/usr/local/lib/python3.6/dist-packages/scanpy/external/__init__.py"", line 1, in <module>; from . import tl; File ""/usr/local/lib/python3.6/dist-packages/scanpy/external/tl.py"", line 4, in <module>; from ._tools._palantir import palantir; ModuleNotFoundError: No module named 'scanpy.external._tools'. I would like to run palentir through Scanpy, is this already possible ? ; Kind regards,; Vladie0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/601:390,log,logging,390,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/601,1,['log'],['logging']
Testability,"Dear everyone,. This PR adds; 1. Python 3.8 to the build matrix. We were currently only testing vs 3.6 and 3.7. 3.10 is already coming up in April, so it is in my opinion time to use the more latest Python versions. If you feel like this adds too much to the Azure/CI bill, then I would suggest to remove 3.6. ; 2. Solves #1585 . Signed-off-by: Zethson <lukas.heumos@posteo.net>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1602:88,test,testing,88,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1602,1,['test'],['testing']
Testability,"Dear scanpy Team,; I am a little bit confused regarding the counts, that are used for computing marker genes for clusters for example. In your publication :Current best practices in single-cell RNA-seq analysis: a tutorial, in Table 1 you recommend to use raw data for this instance but in the implementation of rank_gene_groups and in your notebooks for the publication, log normalized counts were used for this purpose if I'm not mistaken. Could you maybe clarify what the best practice would be? ; Thank you so much!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2180:372,log,log,372,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2180,1,['log'],['log']
Testability,"Dear scanpy team,. In your CITE-seq vignette you use the function `sc.pp.normalize_geometric(protein)` to normalize CITE-seq data. However, I think the description and motivation for the method are not detailed enogh to understand what is going on under the hood. Could you please give me a brief explanation on how that works? I've been using the centered log-ratio in Seurat, but there is definetely room for improvement. Thanks a lot for you time and help!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1469:357,log,log-ratio,357,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1469,1,['log'],['log-ratio']
Testability,"Dear scanpy-team,. thank you very much for this great package!. Similar to issues [https://github.com/scverse/scanpy/issues/1435](url) and [https://github.com/scverse/scanpy/issues/460](url) I am interested in having an n_components parameter in the sc.tl.tsne function. . Apparently, the commit was made but no pull request was opened back in 2019. I added the necessary parameter to the arguments and passed them via the params_sklearn dict to the respective function. . Documentation is also updated. If you feel there is a need for a separate test, let me know, happy to include one. Best,; Tarik",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2671:547,test,test,547,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2671,1,['test'],['test']
Testability,"Define `.uns['neighbors']['distances']` as the distance matrix instead of the weighted adjacency matrix in logg.hint. By the way, when `knn=True`, distances to non-neighbor data points are stored as zero in this matrix to keep it sparse, right? But technically these are not zeros, but rather ""unknown values"". Does it make sense to add a note in the documentation about that? Because for `knn=False`, the semantics of zeros change completely.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/441:107,log,logg,107,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/441,1,['log'],['logg']
Testability,"Does scanpy store log fold change, p-value and marker type flag (negative vs positive) somewhere? It looked at scObj.uns[""rank_genes_groups""] but found only 3 fields: params, scores and names.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/159:18,log,log,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/159,1,['log'],['log']
Testability,ED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-None] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-10] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_compare_to_upstream[seurat-hvg] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_sparse - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[numpy_ndarray] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csr] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csc] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[dask_array_dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_chunked - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_n_pcs - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_layer - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_no_threshold] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_with_batches] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_preprocessing_distribut,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:2295,test,tests,2295,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability,ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-200] - ImportError: cannot import name 'pbmc3k' ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:23196,test,testing,23196,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"Each dataset’s documentation should contain. 1. what it contains (listing obs, …); 2. what steps have been run on it; 3. better links (e.g. is pbmc68k_reduced [this one](https://www.10xgenomics.com/datasets/fresh-68-k-pbm-cs-donor-a-1-standard-1-1-0)? the docstring isn’t clear. It was added by @fidelram in https://github.com/scverse/scanpy/pull/228 …). Especially important is if its `.X` is logarithmized, normalized, and/or filtered. See also: https://github.com/orgs/scverse/projects/18/views/1?pane=issue&itemId=62702062. cc @ilan-gold",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3051:394,log,logarithmized,394,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3051,1,['log'],['logarithmized']
Testability,Enable scrublet tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2776:16,test,tests,16,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2776,1,['test'],['tests']
Testability,Enforce stable cluster order in notebook test,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2650:41,test,test,41,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2650,1,['test'],['test']
Testability,"Especially when we visualize raw counts, sometimes it's hard to see the differences between the expression of one gene across cell types in the heatmap since one value can simply dominate the dynamic range of expression. I think we can add a scaling option to matrixplot, which squashes expression values between 0 and 1 to make markers more pronounced. Heatmap of the raw values:. ![image](https://user-images.githubusercontent.com/1140359/53700880-06983200-3dc5-11e9-8bd6-e001fd3d078d.png). Heatmap of the logarithmized values (which also helps a bit but not for all genes):. ![image](https://user-images.githubusercontent.com/1140359/53700890-19ab0200-3dc5-11e9-872d-791eec295262.png). Heatmap of the col-normalized values:. ![image](https://user-images.githubusercontent.com/1140359/53700893-2c253b80-3dc5-11e9-968d-b7a89eb65fbc.png). PS: The option is actually borrowed from Seaborn (https://seaborn.pydata.org/generated/seaborn.clustermap.html). . PPS: There is an edge case such as division by zero. Also, `swap_axes` option makes 'row'/'col' naming a bit confusing. Let me know if you have suggestions about these or the standardization idea in general.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/512:508,log,logarithmized,508,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/512,1,['log'],['logarithmized']
Testability,Example of this kind of bug in https://github.com/theislab/anndata/issues/293. * Now `read_10x_mtx` does not set an integer name for obs_name/ var_name indices; * Additionally improved code re-use and things tested in 10x reading tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/989:208,test,tested,208,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/989,2,['test'],"['tested', 'tests']"
Testability,"Example using scanpy 9dd2e94846aa and anndata `762fdb924e757cdd758231`. ```python; import scanpy as sc. pbmc = sc.datasets.pbmc3k_processed(); sc.pl.umap(pbmc, color=""louvain"") # To make sure that ""louvain_colors"" has been made; bcells = pbmc[pbmc.obs[""louvain""] == ""B cells""]; # This line triggers a copy being made:; sc.pl.umap(bcells); # /Users/isaac/github/anndata/anndata/_core/anndata.py:1120: ImplicitModificationWarning: # Initializing view as actual.; # ""Initializing view as actual."", ImplicitModificationWarning,; assert not bcells.is_view; ```. Pretty sure that shouldn't be making a copy, since nothing should be modified in the view. To make sure:. ```python; from anndata.tests.helpers import assert_equal. bcells_view = pbmc[pbmc.obs[""louvain""] == ""B cells""]; assert_equal(bcells, bcells_view, exact=True); ```. This also seems to be happening with some of the other plotting functions, like `sc.pl.rank_genes_groups_dotplot`. Elaborating a bit:. To me this is an issue since it will use quite a lot of memory for cases where it isn't needed. Why copy a large number of arrays when you don't need to?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1000:525,assert,assert,525,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1000,2,"['assert', 'test']","['assert', 'tests']"
Testability,Extend benchmarks from basic tutorial,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3031:7,benchmark,benchmarks,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3031,1,['benchmark'],['benchmarks']
Testability,Extended gex_only function to visium. <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3113; - [x] Tests included or not required because: It's a straightforward argument pass from visium to read_10x_h5; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: not a big change,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3278:363,Test,Tests,363,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3278,1,['Test'],['Tests']
Testability,Figured I would try and emphasize tests a bit more in the contributing guide.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/772:34,test,tests,34,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/772,1,['test'],['tests']
Testability,Filtered warning for when all zero genes have a t-test run on them. There may be a more elegant solution for this.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/683:50,test,test,50,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/683,1,['test'],['test']
Testability,"First reported by @lazappi, but now confirmed by me. Tests error during collection for a fresh dev install. ```; mamba create -yn scanpy-dev ""python=3.12""; conda activate scanpy-dev; pip install -e "".[dev,test]"" pytest-xdist # pytest-xdist isn't required, but makes this faster; conda deactivate scanpy-dev; conda activate scanpy-dev; pytest -n auto; ```. First everything fails since `dask-expr` isn't installed. This must be someone upstream pinning dask, but is easily solvable by adding dask-expr to the environment. ```; pip install dask-expr; pytest -n auto; ```. <details>; <summary> Failures </summary>. ```; FAILED scanpy/tests/test_score_genes.py::test_score_with_reference - TypeError: 'module' object is not callable; FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:53,Test,Tests,53,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,6,"['Test', 'test']","['Tests', 'test', 'testing', 'tests']"
Testability,"Fix (sorta) #1082. Removed a call that required python 3.8 plus. The added test doesn't fully cover this case, since it wouldn't have had the same error.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1087:75,test,test,75,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1087,1,['test'],['test']
Testability,Fix / Unit tests `test_violin` and `test_pbmc3k`,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1422:11,test,tests,11,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1422,1,['test'],['tests']
Testability,Fix PCA tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3336:8,test,tests,8,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3336,1,['test'],['tests']
Testability,Fix all the various test failures,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3124:20,test,test,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3124,1,['test'],['test']
Testability,Fix and test zappy support,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3089:8,test,test,8,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3089,1,['test'],['test']
Testability,Fix benchmark job: Use upstream asv,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3292:4,benchmark,benchmark,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3292,1,['benchmark'],['benchmark']
Testability,Fix benchmark test run,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3035:4,benchmark,benchmark,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3035,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,Fix correlation plot test for new version of matplotlib,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1768:21,test,test,21,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1768,1,['test'],['test']
Testability,Fix correlation plot test for new version of matplotlib (#1768),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1769:21,test,test,21,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1769,1,['test'],['test']
Testability,Fix for double log in fold-changes and for indexing in wilcoxon test,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/519:15,log,log,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/519,2,"['log', 'test']","['log', 'test']"
Testability,Fix groupby logic if adata.uns[key]['params']['groupby'] is array,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1656:12,log,logic,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1656,1,['log'],['logic']
Testability,Fix issue #310 ; - Import sandbag and cyclone; - Align parameters to the one in `pypairs`; - Add documentation for the parameters. I wanted to add some tests but I was not sure which dataset makes sense. Any idea?. Bérénice,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/312:152,test,tests,152,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/312,1,['test'],['tests']
Testability,"Fix issue related to #890 and the reordering of stacked_violin_plots when `swap_axes=False` and for the case when `dendrogram` and `order` are given, in which case dendrogram order takes precedence. . Fix issue #891, now if `groups` is set for an embedding, the cells belonging to those groups are plotted on top. I also added missing documentation, pointing that the marker size could be a list of per-cell size. ; Added a new plotting test for the groups option.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/893:437,test,test,437,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/893,1,['test'],['test']
Testability,Fix logic in scatterplot,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/579:4,log,logic,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/579,1,['log'],['logic']
Testability,Fix long test output,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1737:9,test,test,9,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1737,1,['test'],['test']
Testability,Fix paga tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2521:9,test,tests,9,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2521,1,['test'],['tests']
Testability,Fix paga tests for new igraph(?) version,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1037:9,test,tests,9,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1037,1,['test'],['tests']
Testability,Fix plotting tests for networkx >= 2.6.2,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1960:13,test,tests,13,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1960,1,['test'],['tests']
Testability,Fix rank genes groups when log base is missing,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2283:27,log,log,27,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2283,1,['log'],['log']
Testability,Fix scrublet plot tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2785:18,test,tests,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2785,1,['test'],['tests']
Testability,Fix t-tests when variance is zero,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/621:6,test,tests,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/621,1,['test'],['tests']
Testability,Fix test breakages,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1015:4,test,test,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1015,1,['test'],['test']
Testability,Fix testing,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3057:4,test,testing,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3057,1,['test'],['testing']
Testability,Fix tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/162:4,test,tests,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/162,2,['test'],['tests']
Testability,Fix tests for dask PCA,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3162:4,test,tests,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3162,1,['test'],['tests']
Testability,Fix the dev tests. `square_distances` are not longer an argument in sklearn 1.3,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2515:12,test,tests,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2515,1,['test'],['tests']
Testability,Fix uns structure in read visium and tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1137:37,test,tests,37,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1137,1,['test'],['tests']
Testability,Fixed tests and read function,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1048:6,test,tests,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1048,1,['test'],['tests']
Testability,Fixed the adata_raw issue and added functionality beyond just binary and 1v1 logreg,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/214:77,log,logreg,77,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/214,1,['log'],['logreg']
Testability,Fixed wrong order for groups with logreg,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2589:34,log,logreg,34,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2589,1,['log'],['logreg']
Testability,Fixes #1170 by not requiring unique `obs_names` to run combat. I also ran formatting over combat and the combat tests.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1215:112,test,tests,112,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1215,1,['test'],['tests']
Testability,"Fixes #1396. Branch which I had sitting on my computer, but forgot to open a PR for (doh). Uses joblib to parallelize `regress_out` instead of `multiprocessing` in order to prevent oversubscription of threads. Not sure how to test this. Should I also allow passing more arguments to joblib?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1695:226,test,test,226,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1695,1,['test'],['test']
Testability,"Fixes #153. Fixed usage of `plot=True` for `recipe_zheng17` and `recipe_seurat`. A test was added under `tests/preprocessing.py` which just checks that no error is thrown. Style wise, I just went with changing the fewest lines of code. The test isn't exactly stateless since I've got to deactivate interactive plotting, but I wasn't sure how you'd like to handle that. Lemme know if you'd like any changes.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/155:83,test,test,83,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/155,3,['test'],"['test', 'tests']"
Testability,"Fixes #1546. I've done a couple things here:. 1. I've fixed the bug (`sc.pl.violin` being called on an `AnnData` without `.raw` would throw an error), and added a regression test; 2. I've tried to normalize how we choose what to do when `use_raw=None`, basically this is just a new utility `_check_use_raw`. The benefit of having a single function for this is that it makes it easy to globally change how we handle this argument (e.g. deprecate the `None` case).; 3. Reworded the docs for functions where `use_raw=None` can become `use_raw=True`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1548:174,test,test,174,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1548,1,['test'],['test']
Testability,Fixes #1590 and tests that chunked pca works,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1592:16,test,tests,16,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1592,1,['test'],['tests']
Testability,Fixes #1646 . Now supports coloring by boolean variables such as `True` and `False`. **Tasks to complete:** . - [x] Add test,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2460:120,test,test,120,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2460,1,['test'],['test']
Testability,"Fixes #1806. New behaviour for Moran's I and Geary's C. If one of the variables passed has constant values, the score for that variable is `nan` and the function warns the user about this. Previously, the presence of this variable would silently fail, corrupting the other outputs as well. Adds a new utility `is_constant` to check if values in an array are constant. * Could have less code repetition, since now there's some logic that is applied to any case which is 2d, but the conditional isn't structured this way.; * Performance hit pretty minor, as computing the metric itself is expensive.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1891:426,log,logic,426,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1891,1,['log'],['logic']
Testability,"Fixes #1841. It would be nice to test this, but I'm not sure we're set up for that. E.g., we can test that it doesn't work in a python session, but I'm not sure if we can test that it does work in an ipython session. TODO:. - [x] Release note; - [ ] ~~Test?~~ Not so sure how to do this, and it's useful now.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1844:33,test,test,33,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1844,4,"['Test', 'test']","['Test', 'test']"
Testability,"Fixes #1852. In a notebook, with `rich=None, file=None` or `rich=True`, we display the HTML version. I also added docs: https://icb-scanpy--2089.com.readthedocs.build/en/2089/generated/scanpy.logging.print_versions.html. It’s just plain `<details>` and `<summary>` tags, no fancy widgets and should therefore survive rendering using nbsphinx or GitHub’s notebook renderer. Looks like this:. ![unexpanded](https://user-images.githubusercontent.com/291575/146676148-ae14ea6e-7fd2-46ea-b013-f2b55669a35c.png). after a click:. ![expanded once](https://user-images.githubusercontent.com/291575/146676159-84e26f4e-8e16-4587-a3eb-145528abc353.png). after another click:. ![expanded twice](https://user-images.githubusercontent.com/291575/146676172-e38cc3f0-dd06-48d0-91b0-66708294e214.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2089:192,log,logging,192,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2089,1,['log'],['logging']
Testability,"Fixes #1859. `igraph` uses python's random state, not numpy's. TODO:. - [x] Update saved examples for tests; - [x] Release note",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1922:102,test,tests,102,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1922,1,['test'],['tests']
Testability,"Fixes #1887. Order of node coordinates used in `paga_compare` could be wrong since the group medians were not necessarily in the order of `adata.obs[group].cat.categories`. Now they are. Additionally, moved the logic for computing the group medians to `paga_compare` so the `_tmp_pos` hack can be removed. As a side effect, a number of arguments to `sc.pl.paga_compare` no longer cause errors. For example, on current master passing any value for `groups` to `sc.pl.paga_compare` causes an error (since the ""wrong"" number of medians is calculated). Now it works, but it's a bit unclear if it's doing the right thing:. ```python; import scanpy as sc. adata = sc.datasets.pbmc3k_processed(); sc.tl.paga(adata, ""louvain""); sc.pl.paga_compare(adata, groups=list(adata.obs[""louvain""].cat.categories[:4]); ```. On master:. <details>; <summary> traceback </summary>. ```python; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-13-e5188d753713> in <module>; 1 adata = sc.datasets.pbmc3k_processed(); 2 sc.tl.paga(adata, ""louvain""); ----> 3 sc.pl.paga_compare(adata, groups=list(adata.obs[""louvain""].cat.categories[:4])). ~/github/scanpy/scanpy/plotting/_tools/paga.py in paga_compare(adata, basis, edges, color, alpha, groups, components, projection, legend_loc, legend_fontsize, legend_fontweight, legend_fontoutline, color_map, palette, frameon, size, title, right_margin, left_margin, show, save, title_graph, groups_graph, **paga_graph_params); 135 if legend_fontoutline is not None:; 136 paga_graph_params['fontoutline'] = legend_fontoutline; --> 137 paga(; 138 adata,; 139 ax=axs[1],. ~/github/scanpy/scanpy/plotting/_tools/paga.py in paga(adata, threshold, color, layout, layout_kwds, init_pos, root, labels, single_component, solid_edges, dashed_edges, transitions, fontsize, fontweight, fontoutline, text_kwds, node_size_scale, node_size_power, edge_width_scale, min_edge_width, max_edge_width, arrowsize, title, ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1898:211,log,logic,211,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1898,1,['log'],['logic']
Testability,"Fixes #1892. Scipy now returns `np.nan` for Mann-Whitney U tests where there it used to error. Namely, variables for which all values are the same.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1893:59,test,tests,59,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1893,1,['test'],['tests']
Testability,Fixes #1959. Updates plots to work with how edge plotting is handled in networkx>2.6. Also moves paga plotting tests to (i) their own module (ii) their own individual tests (so we don't just see the first one that fails).,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1960:111,test,tests,111,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1960,2,['test'],['tests']
Testability,"Fixes #2211. I’ll first try with all removed. I expect the min_tests run to fail. Seeing what fails,. - If it’s not much, I’ll just refactor the fixtures a bit and so on; - Else I’ll move algorithms to the `test` extra. Then we can merge this PR and over time refactor our tests so more and more extras go from `tests` to `tests-full`. @ivirshup do you like the collection extras’ names (`io`, `speedups`, `algorithms`)? Should we add an extra named `all` that installs all the `-full` extras?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2222:207,test,test,207,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2222,4,['test'],"['test', 'tests', 'tests-full']"
Testability,"Fixes #2246 . A very small change with a small test. The new test fails for the current master branch, but passes with the fix.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2248:47,test,test,47,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2248,2,['test'],['test']
Testability,Fixes #2267 . ## TODO. - [ ] Tests; - [ ] Changelog,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2277:29,Test,Tests,29,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2277,1,['Test'],['Tests']
Testability,"Fixes #241. I've allowed the choice of metric for finding nearest neighbors when `knn=False`. I've added a small test to make sure it works, but would open to adding more. The fix I've made killed a few code paths, so I've removed the dead code. I also reorganized the test cases a bit (split one monolithic test into separate tests), as having more granular feedback helped with a little debugging.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/245:113,test,test,113,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/245,4,['test'],"['test', 'tests']"
Testability,"Fixes #356 for me. It's a pretty simple change. It's a little hard for me to add a test at the moment, but I'm pretty sure this works.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/357:83,test,test,83,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/357,1,['test'],['test']
Testability,"Fixes #435. Breaking case:. ```python; import scanpy as sc, numpy as np; sc.pp.log1p(; sc.AnnData(np.ones((100, 100)), dtype=int); ); ```. ```pytb; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-3-f3ae2b50ac50> in <module>; ----> 1 sc.pp.log1p(a). /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8/lib/python3.8/functools.py in wrapper(*args, **kw); 873 '1 positional argument'); 874 ; --> 875 return dispatch(args[0].__class__)(*args, **kw); 876 ; 877 funcname = getattr(func, '__name__', 'singledispatch function'). ~/github/scanpy/scanpy/preprocessing/_simple.py in log1p_anndata(adata, base, copy, chunked, chunk_size, layer, obsm); 348 else:; 349 X = _get_obs_rep(adata, layer=layer, obsm=obsm); --> 350 X = log1p(X, copy=False, base=base); 351 _set_obs_rep(adata, X, layer=layer, obsm=obsm); 352 . /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8/lib/python3.8/functools.py in wrapper(*args, **kw); 873 '1 positional argument'); 874 ; --> 875 return dispatch(args[0].__class__)(*args, **kw); 876 ; 877 funcname = getattr(func, '__name__', 'singledispatch function'). ~/github/scanpy/scanpy/preprocessing/_simple.py in log1p_array(X, base, copy); 316 else:; 317 X = X.copy(); --> 318 np.log1p(X, out=X); 319 if base is not None:; 320 np.divide(X, np.log(base), out=X). TypeError: ufunc 'log1p' output (typecode 'd') could not be coerced to provided output parameter (typecode 'l') according to the casting rule ''same_kind''; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1400:1398,log,log,1398,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1400,1,['log'],['log']
Testability,Fixes #699. Corrects inconsistent logic about when a copy of a view would be made by preprocessing functions. Discussed here: https://github.com/theislab/anndata/issues/171#issuecomment-508619952,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/729:34,log,logic,34,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/729,1,['log'],['logic']
Testability,Fixes #762. Update to #764. Just adding a test to make sure the `use_raw` argument does something. I'm opening this a new pull request since git didn't me using other PRs branch name.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/790:42,test,test,42,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/790,1,['test'],['test']
Testability,"Fixes #767. This is a work in progress PR adding ICA as a dimensionality reduction method. Some points:. This is faster and works with larger data than the sklearn version – entirely due to the whitening step. sklearn uses `np.linalg.svd` for whitening, which causes errors about using 32 bit lapack for large datasets since we use 32 bit floats and is slow (but exact). I've swapped that with the arpack svd. I may try and upstream this in the future, but there are a number of open PRs about ICA that I'd like to wait for a bit on: https://github.com/scikit-learn/scikit-learn/pull/11860, https://github.com/scikit-learn/scikit-learn/issues/13056. As a benchmark, I was able to compute 40 dimensions of an ICA on 50k cells (tabula muris) and 7.5k highly variable genes in about a minute (59.3s) on my laptop. As a comparison (for a smaller dataset – 10k PBMCs) here are two pair grid plots showing cell embeddings on ten components compared with the top ten components of a PCA. <details>; <summary> PCA </summary>. ![image](https://user-images.githubusercontent.com/8238804/69899041-0c9f5b80-13b5-11ea-973f-81d4c27fe3b1.png). </details>. <details>; <summary> ICA </summary>. ![image](https://user-images.githubusercontent.com/8238804/69899077-7cade180-13b5-11ea-9a0b-023868553181.png). </details>. Things left to do:. - [ ] Look into numerical stability; - [ ] Figure out if I should be be scaling the whitening matrix differently; - [ ] More in depth comparison of results with sklearn based ICA; - [ ] Documentation; - [ ] Share `_choose_obs_rep` with `sc.metrics` PR. Once this is done, I'd like to also add sklearns NMF.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/941:655,benchmark,benchmark,655,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/941,1,['benchmark'],['benchmark']
Testability,Fixes #769. Looks like I only tested my use case in #724. Not sure if this will still be needed once https://github.com/lmcinnes/umap/pull/261 is in a release.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/771:30,test,tested,30,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/771,1,['test'],['tested']
Testability,"Fixes #849. This PR updates our tests so that they expect 3d plots to work if matplotlib 3.3.3 is installed. The plots also look a bit different than they used to:. Old:. ![master_3dprojection](https://user-images.githubusercontent.com/8238804/98928524-fb038500-252d-11eb-82b8-cfb84b28f821.png). New:. ![master_3dprojection](https://user-images.githubusercontent.com/8238804/98928485-f212b380-252d-11eb-8a17-0e2d7683e51a.png). It would be nice if the legend was even more visible, but I think I'll leave it for now.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1493:32,test,tests,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1493,1,['test'],['tests']
Testability,Fixes a bug where the `groups` argument would return a wrongly sorted list for logreg in rank_gene_groups.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2589:79,log,logreg,79,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2589,1,['log'],['logreg']
Testability,"Fixes https://github.com/theislab/scanpy/issues/1326. `pca` was being imported from an old location, and there was no test. Cleaned up a bit of related code while I was at it.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1327:118,test,test,118,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1327,1,['test'],['test']
Testability,"Fixes issue #979 . Note that if you wish to modify the figure in the same jupyter notebook cell in which the plotting function is called, you should set `show=False`:. ```; fig,ax = sc.pl.dotplot(adata,var_names,show=False); ax.set_xlabel('test'); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1069:240,test,test,240,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1069,1,['test'],['test']
Testability,Fixes the current test failures. I could also do a simpler version where I just rechunk in one way instead of adding parameters here.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3162:18,test,test,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3162,1,['test'],['test']
Testability,"Fixes the doctest setup that was broken in https://github.com/scverse/scanpy/pull/2874. The goal here is to make `_modify_doctests` work again without breaking coverage. That means; 1. the plugin can’t be imported in `scanpy/tests` but has to be imported globally; 2. the plugin has to live outside of `scanpy` since importing scanpy while importing it breaks coverage; 1. The plugin can’t import scanpy at the top level (neither `import testing.scanpy` nor `import testing.scanpy._pytest` is allowed to transitively `import scanpy`). having `testing.scanpy` in `src` and `scanpy` in the root of the repo is a bit gross, but better than adding even more top level stuff",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3057:225,test,tests,225,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3057,4,['test'],"['testing', 'tests']"
Testability,"Follow up to #2420, which let the tests run, but didn't actually install anndata-dev. Current version was quoted due to my error in reading a `pre-commit` complaint about yaml syntax. Tbf, yaml syntax is complicated, and the pre-commit check gives bad error messages. ----. Additionally apply other fixes from yesterdays bug fix release to main branch",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2421:34,test,tests,34,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2421,1,['test'],['tests']
Testability,"Following up on #242. Here's my solution to the current queries being pretty unreliable for me (due to issue with bioservices module). It's all a pretty thin wrapper around `pybiomart`, which has a nice API and is well tested but has maintenance issues. . Currently I've replaced the `gene_coordinates` query with a more generic `biomart_annotations` – the example covers the functionality of `gene_coordinates`. I'm debating how to add tests given that they're network based (could fail when nothing is wrong with the code) and can take a while.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/467:219,test,tested,219,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/467,2,['test'],"['tested', 'tests']"
Testability,"For incremental PCA: `sc.tl.pca(adata, n_comps=ndim, chunked=True)`; sometimes, the number of samples for the last chunk is smaller than ndim, an error would be throw:; ```pytb; File /anvil/projects/x-mcb130189/Wubin/Software/miniconda3/envs/m3c/lib/python3.9/site-packages/pym3c/clustering.py:377, in run_dimension_reduction(***failed resolving arguments***); 375 if not downsample or obs_chunk_size > downsample or adata.n_obs < downsample:; 376 logger.info(f""Running IncrementalPCA without downsampling""); --> 377 sc.tl.pca(adata, n_comps=ndim, chunked=True,; 378 chunk_size=obs_chunk_size); 379 else: # downsample; 380 logger.info(f""Running IncrementalPCA with downsample = {downsample}""). File /anvil/projects/x-mcb130189/Wubin/Software/miniconda3/envs/m3c/lib/python3.9/site-packages/scanpy/preprocessing/_pca.py:255, in pca(***failed resolving arguments***); 253 for chunk, _, _ in adata_comp.chunked_X(chunk_size):; 254 chunk = chunk.toarray() if issparse(chunk) else chunk; --> 255 pca_.partial_fit(chunk); 257 for chunk, start, end in adata_comp.chunked_X(chunk_size):; 258 chunk = chunk.toarray() if issparse(chunk) else chunk. File /anvil/projects/x-mcb130189/Wubin/Software/miniconda3/envs/m3c/lib/python3.9/site-packages/sklearn/base.py:1473, in _fit_context.<locals>.decorator.<locals>.wrapper(estimator, *args, **kwargs); 1466 estimator._validate_params(); 1468 with config_context(; 1469 skip_parameter_validation=(; 1470 prefer_skip_nested_validation or global_skip_validation; 1471 ); 1472 ):; -> 1473 return fit_method(estimator, *args, **kwargs). File /anvil/projects/x-mcb130189/Wubin/Software/miniconda3/envs/m3c/lib/python3.9/site-packages/sklearn/decomposition/_incremental_pca.py:304, in IncrementalPCA.partial_fit(self, X, y, check_input); 298 raise ValueError(; 299 ""n_components=%r invalid for n_features=%d, need ""; 300 ""more rows than columns for IncrementalPCA ""; 301 ""processing"" % (self.n_components, n_features); 302 ); 303 elif not self.n_components <= n_samples:; ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3227:448,log,logger,448,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3227,2,['log'],['logger']
Testability,For this - https://github.com/theislab/scanpy/issues/393. Benchmarks; https://github.com/Koncopd/anndata-scanpy-benchmarks/blob/master/pca_for_sparse.ipynb,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/403:58,Benchmark,Benchmarks,58,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/403,2,"['Benchmark', 'benchmark']","['Benchmarks', 'benchmarks']"
Testability,Get rid of logging module and use our own,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/256:11,log,logging,11,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/256,1,['log'],['logging']
Testability,"Goals:. - flexibility in creation; - Neighbor querying API; - Harmonize storage of backends’ querying indices. 	- use it in doublet detection and scanorama reimplementations. Current solution: `method` arg. https://github.com/scverse/scanpy/blob/ed8e1401d39068782f2435d258b33fce4f7b4a9e/scanpy/neighbors/__init__.py#L32. - if `use_dense_distances`: [`sklearn.metrics.pairwise_distances`](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise_distances.html); - if `method == 'rapids'`: [`cuml.neighbors.NearestNeighbors`](https://docs.rapids.ai/api/cuml/stable/api/#cuml.neighbors.NearestNeighbors); - otherwise: [`umap.umap_.nearest_neighbors`](https://umap-learn.readthedocs.io/en/latest/api.html#umap.umap_.nearest_neighbors); - if `method == 'gauss'`: use umap distances, overwrite its connectivities. ## Evaluating options. See [ann-benchmarks.com](https://ann-benchmarks.com/index.html#datasets). Build time vs query time is not straightforward, see https://github.com/erikbern/ann-benchmarks/issues/207#issuecomment-1180389432 and https://github.com/erikbern/ann-benchmarks/issues/207#issuecomment-1180747770. > If, however, you are simply interested in knn-graph construction then you can get that from pynndescent in less time than even the index construction time (since the prepare phase isn't required, but is a non-trivial part of the index construction time). Plots for index building are on individual dataset pages, like [glove-100-angular](https://ann-benchmarks.com/glove-100-angular_10_angular.html). <details>; <summary>Used metrics</summary>. https://github.com/scverse/scanpy/blob/ed8e1401d39068782f2435d258b33fce4f7b4a9e/scanpy/neighbors/__init__.py#L35-L56. </details>. Interesting:. Name | Demo | wheels: Platforms | wheels: Python | Search speed | Index build; --- | --- | --- | --- | --- | ---; [NMSLIB](https://github.com/nmslib/nmslib) | [6 notebooks](https://github.com/nmslib/nmslib/blob/master/python_bindings/notebooks/README.md) | [Linux wheels](",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2519:859,benchmark,benchmarks,859,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2519,2,['benchmark'],['benchmarks']
Testability,"Hello Team,; ```; sc.__version__; '1.7.0rc2.dev6+g5fc12f4a'; ```; I just pulled the latest master to see if the issue was just in my earlier version. I'm trying to plot rank_gene_groups dot plot ; `sc.pl.rank_genes_groups_dotplot(adata, n_genes=4, values_to_plot='logfoldchanges', cmap='bwr', gene_symbols='Uniq_Name', use_raw=False)`. However it doesn't work with the following tranceback:; ```; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-43-4ca50e495f54> in <module>; ----> 1 sc.pl.rank_genes_groups_dotplot(adata, n_genes=4, values_to_plot='logfoldchanges', cmap='bwr', gene_symbols='Uniq_Name', use_raw=False) # swap_axes=True). ~/projects/scanpy/scanpy/plotting/_tools/__init__.py in rank_genes_groups_dotplot(adata, groups, n_genes, groupby, values_to_plot, min_logfoldchange, key, show, save, return_fig, **kwds); 656 """"""; 657 ; --> 658 return _rank_genes_groups_plot(; 659 adata,; 660 plot_type='dotplot',. ~/projects/scanpy/scanpy/plotting/_tools/__init__.py in _rank_genes_groups_plot(adata, plot_type, groups, n_genes, groupby, values_to_plot, min_logfoldchange, key, show, save, return_fig, **kwds); 435 from .._dotplot import dotplot; 436 ; --> 437 _pl = dotplot(; 438 adata,; 439 var_names,. ~/projects/scanpy/scanpy/plotting/_dotplot.py in dotplot(adata, var_names, groupby, use_raw, log, num_categories, expression_cutoff, mean_only_expressed, cmap, dot_max, dot_min, standard_scale, smallest_dot, title, colorbar_title, size_title, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, swap_axes, dot_color_df, show, save, ax, return_fig, vmin, vmax, vcenter, norm, **kwds); 940 del kwds['color_map']; 941 ; --> 942 dp = DotPlot(; 943 adata,; 944 var_names,. ~/projects/scanpy/scanpy/plotting/_dotplot.py in __init__(self, adata, var_names, groupby, use_raw, log, num_categories, categories_order, title, figsize, gene_symbols, var_group_positi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1758:264,log,logfoldchanges,264,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1758,2,['log'],['logfoldchanges']
Testability,"Hello all,; In the “Finding marker genes” part of PBMC3K tutorial, the authors mentioned that “For this, by default, the .raw attribute of AnnData is used in case it has been initialized before” and the fuction `sc.tl.rank_genes_groups(adata, ‘leiden’, method=‘t-test’)` setting `use_raw=True` as default.; I tried `use_raw=False` in this `sc.tl.rank_genes_groups()` function and found that the results of marker genes are quite different. So, which data is recommended for finding the marker genes, adata after scaling, which is `use_raw=False`, or `adata.raw`?; Thanks!; Best; YJ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2029:263,test,test,263,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2029,1,['test'],['test']
Testability,"Hello everyone,. In order to get eigenvalues of the PCs after running PCA, I modified the simple.py code by adding a line to return pca_.explained_variance_ and store it in adata.uns in the pca function definition. This might be useful for users wanting to access eigenvalues of the PCs, which is not possible as far as I know with only the explained_variance_ratio. Would it be a good idea to open a pull request for that?. else:; logg.m('compute PCA with n_comps =', n_comps, r=True, v=4); result = pca(adata.X, n_comps=n_comps, zero_center=zero_center,; svd_solver=svd_solver, random_state=random_state,; recompute=recompute, mute=mute, return_info=True); X_pca, components, pca_variance_ratio, pca_eigenval = result; adata.obsm['X_pca'] = X_pca; adata.varm['PCs'] = components.T; adata.uns['pca_eigenvalues']=pca_eigenval; adata.uns['pca_variance_ratio'] = pca_variance_ratio; logg.m(' finished', t=True, end=' ', v=4). ....... if False if return_info is None else return_info:. return X_pca, pca_.components_, pca_.explained_variance_ratio_, pca_.explained_variance_; else:; return X_pca. Thank you!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/86:432,log,logg,432,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/86,2,['log'],['logg']
Testability,"Hello everyone,; I have faced the below warning messages during running `sc.tl.rank_genes_groups` with parameters t-test and t-test overestimated. > RuntimeWarning: invalid value encountered in greater; return (self.a < x) & (x < self.b). > RuntimeWarning: invalid value encountered in less; return (self.a < x) & (x < self.b). > RuntimeWarning: invalid value encountered in less_equal; cond2 = cond0 & (x <= self.a). I found exactly the same warning message in a forum but there the warning message was coming from auto-sklearn package and since there is no auto-sklearn used in scanpy and instead we got scikit-learn I am wondering is it a problem with the version that I am using or is it a bug from scikit or scanpy it self. my versions are:. > scanpy==1.4.3 anndata==0.6.20 umap==0.3.8 numpy==1.16.3 scipy==1.2.1 pandas==0.23.4 scikit-learn==0.20.3 statsmodels==0.9.0 python-igraph==0.7.1+4.bed07760 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/674:116,test,test,116,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/674,2,['test'],['test']
Testability,Hello! I thought it might be useful to add [Scanorama ](https://github.com/brianhie/scanorama) to the set of integration methods in scanpy.external.pp. I've followed the example laid out in https://github.com/theislab/scanpy/pull/1306 pretty closely. I've also done some small scale integration testing on a local machine just to verify that batch effect correction indeed works when called with this API. Let me know what I can do to help get this merged!,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1332:295,test,testing,295,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1332,1,['test'],['testing']
Testability,"Hello, . I am using scanpy version 1.4 from bioconda. I am running one of the examples from the code to query datasets - . ```; import scanpy as sc. pbmc = sc.datasets.pbmc3k(); print(pbmc); plotdf = sc.get.obs_df(; pbmc,; keys=[""CD8B"", ""n_genes""],; obsm_keys=[(""X_umap"", 0), (""X_umap"", 1)]; ); plotdf.plot.scatter(""X_umap0"", ""X_umap1"", c=""CD8B""); ```. the library can read the dataset but errors out saying `scanpy` has no attribute `get`. I even tried . ```File ""test.py"", line 2, in <module>; from scanpy.get import obs_df; ModuleNotFoundError: No module named 'scanpy.get'; ```. Did the API change for any of this ? Thanks!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/851:465,test,test,465,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/851,1,['test'],['test']
Testability,"Hello, I would like to know how the scores are calculated in the case of the differential expression analysis using the wilcoxon's test.; This is what I found in the code of the function _rank_genes_groups.py:; `scores = (scores - (n_active * (n_active + m_active + 1) / 2)) / sqrt(; (n_active * m_active * (n_active + m_active + 1) / 12)); scores[np.isnan(scores)] = 0; pvals = 2 * stats.distributions.norm.sf(np.abs(scores))` . Is this the version of the test that works with not paired samples?; Thank you.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/436:131,test,test,131,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/436,2,['test'],['test']
Testability,"Hello,. I am having the same issue as issue #1246 but my version of scipy being used with scanpy is not updating. I don't know if this is related to my using an ubuntu server or what's causing this but I was wondering if there is a workaround to make scanpy use a more updated version? I have scipy 1.4.1 installed when I check the version but for some reason scanpy is using 1.01 and I don't know how to change this. I'm a bit new to python so I'm sorry if this is a novice question. I appreciate any help you can offer. I am using an ubuntu server running python 3.6 with the following versions:; sc.logging.print_versions() ; scanpy==1.5.1 anndata==0.7.3 umap==0.4-dev numpy==1.15.0 scipy==1.0.1 pandas==0.23.3 scikit-learn==0.23.1 statsmodels==0.11.1. This is the error message:. ```pytb; computing tSNE; WARNING: You’re trying to run this on 16872 dimensions of `.X`, if you really want this, set `use_rep='X'`.; Falling back to preprocessing with `sc.pp.pca` and default params.; computing PCA; with n_comps=50; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-65-c244be664e51> in <module>(); ----> 1 sc.tl.tsne(adata, n_pcs = 50); 2 # UMAP, first with neighbor calculation; 3 sc.pp.neighbors(adata, n_pcs = 50, n_neighbors = 20); 4 sc.tl.umap(adata). ~/.local/lib/python3.6/site-packages/scanpy/tools/_tsne.py in tsne(adata, n_pcs, use_rep, perplexity, early_exaggeration, learning_rate, random_state, use_fast_tsne, n_jobs, copy); 78 start = logg.info('computing tSNE'); 79 adata = adata.copy() if copy else adata; ---> 80 X = _choose_representation(adata, use_rep=use_rep, n_pcs=n_pcs); 81 # params for sklearn; 82 params_sklearn = dict(. ~/.local/lib/python3.6/site-packages/scanpy/tools/_utils.py in _choose_representation(adata, use_rep, n_pcs, silent); 41 'Falling back to preprocessing with `sc.pp.pca` and default params.'; 42 ); ---> 43 X = pca(adata.X); 44 adata.obsm['X_pca'] = X[:, :n_pcs]; 45 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1252:602,log,logging,602,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1252,1,['log'],['logging']
Testability,"Hello,. I tried to swap BBKNN over to the new logging, and while the timing aspect of it is functional, the `deep` refuses to cooperate. I checked with `sc.pp.neighbors()` just to make sure I'm not screwing things up massively, and it turns out that its deep also doesn't work. <img width=""940"" alt=""Screen Shot 2019-07-23 at 09 37 10"" src=""https://user-images.githubusercontent.com/14993986/61696691-b434bf00-ad2d-11e9-83db-1092dcc61fea.png"">. Any idea what's going on here? I'm on python 3.6.7 on Bionic, jupyter 1.0.0, and all this:. scanpy==1.4.4 anndata==0.6.22.post1 umap==0.3.9 numpy==1.16.4 scipy==1.3.0 pandas==0.25.0 scikit-learn==0.21.2 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/746:46,log,logging,46,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/746,1,['log'],['logging']
Testability,"Hello,. I'm trying out the Graph abstraction and I get this error:; ```; SetKeyError Traceback (most recent call last); <ipython-input-12-928a85d4478e> in <module>(); ----> 1 sc.tl.tsne(adata); 2 sc.tl.draw_graph(adata, random_state=5) # random_state just makes a cosmetic change; 3 sc.write('krumsiek11_blobs', adata). ~/Downloads/scanpy/scanpy/tools/tsne.py in tsne(adata, n_pcs, perplexity, early_exaggeration, learning_rate, random_state, use_fast_tsne, recompute_pca, n_jobs, copy); 108 X_tsne = tsne.fit_transform(X); 109 # update AnnData instance; --> 110 adata.smp['X_tsne'] = X_tsne # annotate samples with tSNE coordinates; 111 logg.info(' finished', t=True, end=' '); 112 logg.info('and added\n'. ~/Downloads/scanpy/scanpy/data_structs/ann_data.py in __setitem__(self, keys, values); 382 # TODO: need to reallocate memory; 383 # or allow storing objects, or use pd.dataframes; --> 384 raise SetKeyError(k, v.dtype, self.dtype[k]); 385 super(BoundStructArray, self).__setitem__(k, v); 386 . SetKeyError: Currently you cannot implicitly reallocate memory:; Setting the array for key X_tsne001of002 with dtype float64 requires too much memory, you should init AnnData with a large enough data type from the beginning.; Probably you try to assign a string of length 8 although the array can only store strings of length 4.; ```. I'm using the latest git version of scanpy.; Any ideas?; Best wishes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/40:638,log,logg,638,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/40,2,['log'],['logg']
Testability,"Hello,. I'm using the Wilcoxon method from the scanpy.tl.rank_genes_groups() function for my dataset. I am not seeing any logFC values in the output (the lowest logFC is zero). Should I be expecting to see some negative values (like we see in bulk RNAseq DE results) ?. I apologize in advance if this is a naive question. Thanks for your help.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1800:122,log,logFC,122,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1800,2,['log'],['logFC']
Testability,"Hello,. It would appear that `louvain-igraph` has been obsoleted in favour of `leidenalg`, and the author makes a [persuasive case](https://arxiv.org/abs/1810.08473) as to the superiority of the new approach. To my untrained eye, the algorithm is conceptually similar to the Louvain modification used by Seurat, but introduces an extra collapsed network refinement step. it should be easy to support this in Scanpy - the syntax appears to be identical to the old `louvain` innards, and I was able to construct a very minimal dummy function for testing by taking the key bits of `sc.tl.louvain()` and replacing `louvain.` with `leidenalg.`:. ```py; import leidenalg; import numpy as np; import pandas as pd; from scanpy import utils; from natsort import natsorted. def leiden(adata, use_weights=False, resolution=1, iterations=-1):; 	g = utils.get_igraph_from_adjacency(adata.uns['neighbors']['connectivities'], directed=True); 	weights = None; 	if use_weights:; 		weights = np.array(g.es[""weight""]).astype(np.float64); 	part = leidenalg.find_partition(; 		g, leidenalg.RBConfigurationVertexPartition, ; 		resolution_parameter = resolution, weights = weights, ; 		n_iterations = iterations,; 	); 	groups = np.array(part.membership); 	adata.obs['louvain'] = pd.Categorical(; 		values=groups.astype('U'),; 		categories=natsorted(np.unique(groups).astype('U')),; 	); ```. As such, replacing any `louvain.` with `leidenalg.` in `sc.tl.louvain()` would do most of the work. Probably the only new thing that would need support would the the `n_iterations` parameter in `leidenalg.find_partition()`. The default value is 2, positive values control how many passes of the algorithm are performed. -1 just makes it run until it fails to improve the clustering.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/350:544,test,testing,544,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/350,1,['test'],['testing']
Testability,"Hello,. Trying to use sc.tl.umap with initial positions from sc.tl.paga. Seems an error with UMAP from the error log. But it is only called when calling paga positions, UMAP works otherwise. I do see https://github.com/theislab/scanpy/issues/666, and https://github.com/lmcinnes/umap/pull/262, but I am already running scanpy 1.4.4 and umap 0.3.9 so I don't understand how to solve the issue?. Attached error. Any suggestions? ; Thanks!. <img width=""575"" alt=""Screen Shot 2019-08-05 at 19 02 18"" src=""https://user-images.githubusercontent.com/20108378/62485139-c560df80-b7b3-11e9-8333-7e511c263a79.png"">",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/769:113,log,log,113,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/769,1,['log'],['log']
Testability,"Here we go. ~~It’s not done yet~~:. - [x] The timing stuff isn’t yet implemented. I think we just do timing stuff when doing “info” level logging, correct?. If yes, we probably just need to override `RootLogger.info` so it sets `self.handlers[0].formatter.passed_time = kwargs.get('t', False)`. - [x] All the places hackily using `_settings_verbosity_greater_or_equal_than(2|3)` have to work differently. I propose that we just add a kwarg `deepinfo: str` or so which only adds the passed string to the message if the active verbosity is higher than the function’s (i.e. calling `logging.warn('foo', deepinfo='bar')` and the loglevel/verbosity is 'INFO' or noisier adds 'bar'). - [x] We now use vanilla log function syntax, so no more using it like `print`. We switched to Python 3.6+ though, so I propose f-strings everywhere! That looks better and works. Fixes #256",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/676:138,log,logging,138,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/676,4,['log'],"['log', 'logging', 'loglevel']"
Testability,"Hey! I thought plotting `.var` columns in `sc.pl.violin()` worked previously (and the error message seems to suggest this as well). I am doing the following:; ```; adata_counts.var['dropout_per_gene'] = (adata_counts.X > 0).mean(0); adata_counts.obs['dropout_per_cell'] = (adata_counts.X > 0).mean(1). sc.pl.violin(adata_counts, keys='dropout_per_gene'); ```. and I get this error:; ```; ---------------------------------------------------------------------------; IndexError Traceback (most recent call last); <ipython-input-8-463060c90a0b> in <module>(); ----> 1 sc.pl.violin(adata_counts, keys='dropout_per_gene'). ~/scanpy/scanpy/plotting/anndata.py in violin(adata, keys, groupby, log, use_raw, stripplot, jitter, size, scale, order, multi_panel, show, xlabel, rotation, save, ax, **kwds); 630 X_col = adata.raw[:, key].X; 631 else:; --> 632 X_col = adata[:, key].X; 633 obs_df[key] = X_col; 634 if groupby is None:. ~/anndata/anndata/base.py in __getitem__(self, index); 1303 def __getitem__(self, index):; 1304 """"""Returns a sliced view of the object.""""""; -> 1305 return self._getitem_view(index); 1306 ; 1307 def _getitem_view(self, index):. ~/anndata/anndata/base.py in _getitem_view(self, index); 1306 ; 1307 def _getitem_view(self, index):; -> 1308 oidx, vidx = self._normalize_indices(index); 1309 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1310 . ~/anndata/anndata/base.py in _normalize_indices(self, index); 1283 obs, var = super(AnnData, self)._unpack_index(index); 1284 obs = _normalize_index(obs, self.obs_names); -> 1285 var = _normalize_index(var, self.var_names); 1286 return obs, var; 1287 . ~/anndata/anndata/base.py in _normalize_index(index, names); 261 return slice(start, stop, step); 262 elif isinstance(index, (int, str)):; --> 263 return name_idx(index); 264 elif isinstance(index, (Sequence, np.ndarray, pd.Index)):; 265 # here, we replaced the implementation based on name_idx with this. ~/anndata/anndata/base.py in name_idx(i); 248 raise IndexError(; 249 ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/375:686,log,log,686,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/375,1,['log'],['log']
Testability,"Hey,; while writing tests for #1715 I noted the following behavior:. `output = sc.pp.highly_variable(adata,inplace=True,subset=False,n_top_genes=100)`; --> Returns nothing :heavy_check_mark: ; --> `adata.var` fields are updated but shape stays the same :heavy_check_mark: . `output = sc.pp.highly_variable(adata,inplace=True,subset=True,n_top_genes=100)`; --> Returns nothing :heavy_check_mark: ; --> `adata.var` fields are updated and shape is subsetted correctly :heavy_check_mark: . `output = sc.pp.highly_variable(adata,inplace=False,subset=False,n_top_genes=100)`; --> output is a dataframe with the original number of genes as rows :heavy_check_mark: ; --> `adata` is unchanged :heavy_check_mark: . `output = sc.pp.highly_variable(adata,inplace=False,subset=True,n_top_genes=100)`; --> Returns nothing :x: ; --> `adata` shape is changed an `var` fields are updated :x: . I think the last case is unexpected, assuming that `inplace=False` should protect `adata` from changes and results in an output. I think these parts of code are the cause (depending on the flavor):. https://github.com/theislab/scanpy/blob/4dd8de9e355ce8d59009c15522670a3d0970462c/scanpy/preprocessing/_highly_variable_genes.py#L148-L174. https://github.com/theislab/scanpy/blob/4dd8de9e355ce8d59009c15522670a3d0970462c/scanpy/preprocessing/_highly_variable_genes.py#L528-L553. To fix this, one could change `if subset or inplace:` to `if inplace:`. Then one would need to add another `if subet:` in the `else` block, like so (half-pseudocode):. ```; if inplace: ; ; #update adata; ; if batch_key is not None:; #drop batch related keys; if subset:; adata._inplace_subset_var(df['highly_variable'].values); else:; if batch_key is None:; #drop batch related keys; if subset: ; df=df.iloc[df.highly_variable.values,:]; ; return df; ```. I can make a quick PR if this is the intended behavior. :slightly_smiling_face: ; best, jan.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1867:20,test,tests,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1867,1,['test'],['tests']
Testability,"Heya,. I have been trying to get scanpy loaded and a simple example up and running. . I tried following the "" Clustering 3K PBMCs Following a Seurat Tutorial"" by trying to execute the following code:. ```py; import numpy as np; import pandas as pd; import scanpy as sc; import pdb. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_versions(). results_file = './write/pbmc3k.h5ad' # the file that will store the analysis result. sc.settings.set_figure_params(dpi=80). adata = sc.read_10x_mtx( 'filtered_gene_bc_matrices/hg19/', var_names='gene_symbols', cache=True) . adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; print(adata). sc.pp.filter_cells(adata, min_genes=200); sc.pp.filter_genes(adata, min_cells=3). pdb.set_trace(); ```. It sadly spits out the following output (see below), it seems like a mismatch of data structures somewhere inside the code. Or I hope I am trying to run an out of date example file. Thanks for all your help in advance.; Cheers. ```pytb; > scanpy==1.4.3 anndata==0.6.22.post1 umap==0.3.9 numpy==1.16.4 scipy==1.3.0 pandas==0.24.2 scikit-learn==0.21.2 statsmodels==0.10.0 ; ... reading from cache file cache/filtered_gene_bc_matrices-hg19-matrix.h5ad; AnnData object with n_obs × n_vars = 2700 × 32738 ; var: 'gene_ids'. Traceback (most recent call last):; File ""test.py"", line 23, in <module>; sc.pp.filter_cells(adata, min_genes=200); File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/preprocessing/_simple.py"", line 126, in filter_cells; adata._inplace_subset_obs(cell_subset); File ""/Users/Person/Library/Python/3.6/lib/python/site-packages/anndata-0.6.22.post1-py3.6.egg/anndata/core/anndata.py"", line 1372, in _inplace_subset_obs; adata_subset = self[index].copy(); File ""/Users/Person/Library/Python/3.6/lib/python/site-packages/anndata-0.6.22.post1-py3.6.egg/anndata/core/anndata.py"", line 1230, in __getitem__; return self._getitem_view(inde",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/734:371,log,logging,371,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/734,1,['log'],['logging']
Testability,"Hi @fidelram !. I just reintroduced the simple multi-panel violin feature that is used right in the beginning of the [introductory tutorial](https://nbviewer.jupyter.org/github/theislab/scanpy_usage/blob/master/170505_seurat/seurat.ipynb): https://github.com/theislab/scanpy/commit/2a869d6060ba0de12feaf08a809bdf745d39ef10. For now, I simply hope this didn't break anything in your https://github.com/theislab/scanpy/pull/199. For future work on the plotting part of Scanpy: I need to think about adding tests for this... In case that you have an idea for doing this in the best way, I'm happy to ready about it... As a simple solution, if you don't mind, I'd add the calls from your [gist](https://gist.github.com/fidelram/2289b7a8d6da055fb058ac9a79ed485c) to the introductory clustering notebook, so that I make sure that I don't break anything. Best,; Alex",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/204:504,test,tests,504,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/204,1,['test'],['tests']
Testability,"Hi @fidelram ,. When I try to use . ```; plt = sc.pl.matrixplot(adata, marker_genes, groupby='louvain'); ```; I get this heatmap. . ![louv1](https://user-images.githubusercontent.com/11874103/54995344-d2c8ba80-4fc6-11e9-84fe-4f659915293d.png). But as soon as I add ```standard_scale='var'```:. ```; plt = sc.pl.matrixplot(adata, marker_genes, groupby='louvain', standard_scale='var'); ```. I get the following error. ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-24-4ac38158d4d0> in <module>; ----> 1 plt = sc.pl.matrixplot(adata, marker_genes, groupby='louvain', standard_scale='var'). [...]/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in matrixplot(adata, var_names, groupby, use_raw, log, num_categories, figsize, dendrogram, var_group_positions, var_group_labels, var_group_rotation, layer, swap_axes, show, save, **kwds); 1683 _plot_dendrogram(dendro_ax, adata, ticks=y_ticks); 1684 ; -> 1685 pc = matrix_ax.pcolor(mean_obs, edgecolor='gray', **kwds); 1686 ; 1687 # invert y axis to show categories ordered from top to bottom. [...]/lib/python3.6/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs); 1803 ""the Matplotlib list!)"" % (label_namer, func.__name__),; 1804 RuntimeWarning, stacklevel=2); -> 1805 return func(ax, *args, **kwargs); 1806 ; 1807 inner.__doc__ = _add_data_doc(inner.__doc__,. [...]/lib/python3.6/site-packages/matplotlib/axes/_axes.py in pcolor(self, alpha, norm, cmap, vmin, vmax, *args, **kwargs); 5762 kwargs.setdefault('snap', False); 5763 ; -> 5764 collection = mcoll.PolyCollection(verts, **kwargs); 5765 ; 5766 collection.set_alpha(alpha). [...]/lib/python3.6/site-packages/matplotlib/collections.py in __init__(self, verts, sizes, closed, **kwargs); 931 %(Collection)s; 932 """"""; --> 933 Collection.__init__(self, **kwargs); 934 self.set_sizes(sizes); 935 self.set_verts(verts, closed). [...]/lib/python3.6/site-packages/matplotlib/c",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/559:800,log,log,800,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/559,1,['log'],['log']
Testability,"Hi Alex, . Here is an interesting bug with scanpy. For developers, it is useful to be able to reload a previously imported module within the environment containing useful variables and data for testing (a sample scRNA dataset) after changing scanpy's source code. However, scanpy cannot be reloaded. This means that to test, one has to stop the kernel, restart, reload all of the data needed for a plot and then test a plotting function that was just modified (for instance). . Here is a way to demonstrate the reload failure easily:; 1. open utils.py and add the print statement to track the descend_classes_and_funcs() function. ```py; #utils.py; def annotate_doc_types(mod: ModuleType, root: str):; for c_or_f in descend_classes_and_funcs(mod, root):; print(c_or_f) #added line to track descend_classes_and_funcs() function--TR; c_or_f.getdoc = partial(getdoc, c_or_f); ```. 2. open ipython. ```py; import scanpy as sc; # prints out a bunch of function names from the descend_classes_and_funcs() function. import importlib; importlib.reload(sc); # endless loop of function names from the descend_classes_and_funcs() function; # due to recursive yield statement; ```. So what is the purpose of this function? And can it be altered to allow reload? It is called when __init__.py is run by sc.annotate_doc_types(sys.modules[__name__], 'scanpy'). . ```py; #utils.py. def descend_classes_and_funcs(mod: ModuleType, root: str):; for obj in vars(mod).values():; if not getattr(obj, '__module__', getattr(obj, '__qualname__', getattr(obj, '__name__', ''))).startswith(root):; continue; if isinstance(obj, Callable):; yield obj; if isinstance(obj, type):; yield from (m for m in vars(obj).values() if isinstance(m, Callable)); elif isinstance(obj, ModuleType):; yield from descend_classes_and_funcs(obj, root); ```. _________________________________________________________. It is possible to remove the scanpy manually by:. ```py; import sys; sys.modules.pop('scanpy'); ```. and then import scanpy from scr",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/468:194,test,testing,194,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/468,3,['test'],"['test', 'testing']"
Testability,"Hi Alex,. UMAP throws an error if I use `scanpy.tl.ump` with initial positions from `sc.tl.paga`. Based on the error (see below) I thought it was a problem of UMAP itself. However, the error is not thrown when called without initial positions from paga. Here is the output / error:. ```pytb; sc.tl.umap(adata, init_pos='paga'). computing UMAP; using 'X_pca' with n_pcs = 50. ---------------------------------------------------------------------------; TypingError Traceback (most recent call last); <ipython-input-35-924452b37e5b> in <module>; ----> 1 sc.tl.umap(adata, init_pos='paga'). /opt/conda/lib/python3.7/site-packages/scanpy/tools/_umap.py in umap(adata, min_dist, spread, n_components, maxiter, alpha, gamma, negative_sample_rate, init_pos, random_state, a, b, copy); 137 neigh_params.get('metric', 'euclidean'),; 138 neigh_params.get('metric_kwds', {}),; --> 139 verbose=max(0, verbosity-3)); 140 adata.obsm['X_umap'] = X_umap # annotate samples with UMAP coordinates; 141 logg.info(' finished', time=True, end=' ' if _settings_verbosity_greater_or_equal_than(3) else '\n'). /opt/conda/lib/python3.7/site-packages/umap/umap_.py in simplicial_set_embedding(data, graph, n_components, initial_alpha, a, b, gamma, negative_sample_rate, n_epochs, init, random_state, metric, metric_kwds, verbose); 984 initial_alpha,; 985 negative_sample_rate,; --> 986 verbose=verbose,; 987 ); 988 . /opt/conda/lib/python3.7/site-packages/numba/dispatcher.py in _compile_for_args(self, *args, **kws); 348 e.patch_message(msg); 349 ; --> 350 error_rewrite(e, 'typing'); 351 except errors.UnsupportedError as e:; 352 # Something unsupported is present in the user code, add help info. /opt/conda/lib/python3.7/site-packages/numba/dispatcher.py in error_rewrite(e, issue_type); 315 raise e; 316 else:; --> 317 reraise(type(e), e, None); 318 ; 319 argtypes = []. /opt/conda/lib/python3.7/site-packages/numba/six.py in reraise(tp, value, tb); 656 value = tp(); 657 if value.__traceback__ is not tb:; --> 658 raise v",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/666:984,log,logg,984,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/666,1,['log'],['logg']
Testability,"Hi all, ; Following [this preprint](https://www.biorxiv.org/content/early/2018/02/14/258566) and the polemic [comment](https://liorpachter.wordpress.com/2018/02/15/watermans-egg/amp/?__twitter_impression=true) by its author, I wonder if Logistic Regression should be in scanpy environment.; I tried the `sklearn.linear_model.LogisticRegressionCV` classifier from scikit-learn. It is pretty fast and seems to do the job. Of course there is no urgent need to include in scanpy, as it can be used with two lines like. ```; clf = sklearn.linear_model.LogisticRegressionCV(); clf.fit(adata.X, adata.obs[group]); ```. among the returned elements, `clf.coef_` can be used to rank genes by their importance on each group, `clf.predict_proba` may be used to score the strength of cell/group association given the scored genes. ; Any thought?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/95:237,Log,Logistic,237,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/95,3,['Log'],"['Logistic', 'LogisticRegressionCV']"
Testability,"Hi all, we (@ste-depo) are trying to run scanpy on M1 architecture. We have created a conda environment using Miniforge for osx64-arm. However, when running `sc.pp.neighbors` we have this error. I understand that this is related to `umap-learn` and not directly to `scanpy`, but I think it's worth to mention here. ```; ---------------------------------------------------------------------------; AssertionError Traceback (most recent call last); ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/errors.py in new_error_context(fmt_, *args, **kwargs); 743 try:; --> 744 yield; 745 except NumbaError as e:; ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/lowering.py in lower_block(self, block); 229 loc=self.loc, errcls_=defaulterrcls):; --> 230 self.lower_inst(inst); 231 self.post_block(block); ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/lowering.py in lower_inst(self, inst); 327 val = self.lower_assign(ty, inst); --> 328 self.storevar(val, inst.target.name); 329 ; ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/lowering.py in storevar(self, value, name); 1277 name=name); -> 1278 raise AssertionError(msg); 1279 ; ; AssertionError: Storing i64 to ptr of i32 ('dim'). FE type int32; ; During handling of the above exception, another exception occurred:; ; LoweringError Traceback (most recent call last); <ipython-input-19-ef300851c737> in <module>; 1 n_neighbors = int(np.sqrt(adata.shape[0])/2); ----> 2 sc.pp.neighbors(adata, n_neighbors=n_neighbors, n_pcs=15); ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in neighbors(adata, n_neighbors, n_pcs, use_rep, knn, random_state, method, metric, metric_kwds, key_added, copy); 137 adata._init_as_actual(adata.copy()); 138 neighbors = Neighbors(adata); --> 139 neighbors.compute_neighbors(; 140 n_neighbors=n_neighbors,; 141 knn=knn,; ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in compute_neighb",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1799:397,Assert,AssertionError,397,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1799,1,['Assert'],['AssertionError']
Testability,"Hi all,. I am analysing some 10x samples generated in my lab and I noticed that there could be some problems with your `read_10x_mtx` function. So, I opened 4 times the `pbmc3k` dataset used in your tutorial by using the following lines of code:. `adata = sc.read_10x_mtx(sample, var_names='gene_symbols', cache=True)`; `adata.var_names_make_unique()`; `sc.pp.filter_cells(adata, min_genes=200)`; `sc.pp.filter_genes(adata, min_cells=3)`; `mito_genes = adata.var_names.str.startswith('MT-')`; `adata.obs['percent_mito'] = np.sum(adata[:, mito_genes].X, axis=1).A1 / np.sum(adata.X, axis=1).A1`; `adata.obs['n_counts'] = adata.X.sum(axis=1).A1`. I generated the violin plots showing the `n_genes`, `n_counts`, and `percent_mito` for each test and they are different in each test (see attached picture). ![Tests](https://user-images.githubusercontent.com/38785099/72088802-d7b2ec80-3302-11ea-91cd-db9d95698c00.gif). Do you have any suggestions to solve this problem?. Thank you in advance,; Simone",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/977:737,test,test,737,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/977,3,"['Test', 'test']","['Tests', 'test']"
Testability,"Hi all,. Right now we have two layers in the scanpy API. The top layer consists of the major modules like `pp,pl,tl` as well as the smaller ones like `queries,get,datasets`. In addition, we have some useful functions directly under the scanpy package like `read/read_text/read_mtx` etc. It is obvious that the field is advancing and alternative/better ways to perform fundamental tasks in downstream analysis (e.g. normalization, DE tests, gene selection) are emerging and will continue to emerge. Consequently, this necessitates an expansion of the scanpy API. However, I argue that having flat top-level modules makes it difficult to extend scanpy, while maintaining a reasonable API. . Right now there are two ways to introduce new functionality (assuming that it's not something completely unrelated). 1) add a new flavor/method to an existing function (e.g. `sc.pp.highly_variable_genes`, `sc.tl.rank_genes_groups`) or . 2) add a new function with a shared prefix e.g. `sc.pp.neighbors_tsne` (see https://github.com/theislab/scanpy/pull/1561) or `sc.pp.normalize_pearson_residuals` (see https://github.com/berenslab/umi-normalization/issues/1) or `sc.pp.normalize_pearson_residuals_pca()` (see #1715 ). . Since option 1 is more complicated in terms of managing the arguments (esp. method-specific ones), I believe we tend to switch to option 2 now. But given that we already have many functions with common prefixes and that shifting towards option 2 will likely introduce more functions with long underscored names, top layers will get even flatter and wider. Therefore, I think it's time to consider a third option which is to add another layer which makes the API a tiny bit more hierarchical. Some examples I can think of are:. ```java; sc.read.{adata,csv,text,mtx,excel,loom,h5_10x,mtx_10x,...}; sc.pp.neighbors.{umap,gauss,rapids,tsne}; sc.pp.hvg.{seurat,seurat_v3,dispersion}; sc.pp.norm.{tpm,pearson}; sc.pp.filter.{genes,cells,rank_genes,...}; sc.tl.rank_genes.{logreg,wilcoxon,ttest}; s",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1739:433,test,tests,433,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1739,1,['test'],['tests']
Testability,"Hi all,; I'm having a trouble in running a code: ; sc.tl.louvain(adata); So, when I try to run the code, it has an error saying that; ERROR: Failed building wheel for louvain; I tried to install louvain in anaconda prompt, and I can't install it.; When I use:; pip install louvain; to install louvain, I have an error that . ```pytb; ERROR: Command errored out with exit status 1:; 'c:\users\prince and jacky\anaconda3\python.exe' \; -u \; -c '; import sys, setuptools, tokenize; sys.argv[0] = "".../louvain/setup.py""; __file__="".../louvain/setup.py""; f=getattr(tokenize, ""open"", open)(__file__); code=f.read().replace(""\r\n"", ""\n""); f.close(); exec(compile(code, __file__, ""exec"")); ' \; install \; --record '.../install-record.txt' \; --single-version-externally-managed \; --compile; Check the logs for full command output.; ```. I also tried to install using different codes such as:. ```bash; conda install -c conda-forge louvain; ```. There's an error saying that:; PackagesNotFoundError: The following packages are not available from current channels:. - louvain. Can anyone help me with solving this issue? Thanks!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/786:796,log,logs,796,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/786,1,['log'],['logs']
Testability,"Hi all,; Thanks to develop the great tools for singlecell analysis.; <!-- Please give a clear and concise description of what the bug is: -->; The h5ad file was generated by scanpy workflow using function write.h5ad(), nevertheless, ; as of taking the outputed file h5ad of scanpy as file imported Seurat package using ReadH5AD triggerred error like below:; Error in file [[""obs""]] []: objects of category 'environment' cannot take a subset; What happen in this situation? ; and how to fix it?; any advices would be grateful; <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; Python 3.8.2 ; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->. ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; scanpy 1.4.6; >",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1198:785,log,logging,785,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1198,1,['log'],['logging']
Testability,"Hi all. I was looking through the `_rank_genes_groups` function and noticed that the fold-change calculations are based on the means calculated by `_get_mean_var`. The only problem with this is that (usually) the expression values at this point in the analysis are in log scale, so we are calculating the fold-changes of the log1p count values, and then further log2 transforming these fold changes. I know that different programs do it differently, but I think it's more intuitive to convert the matrix back to counts, calculate the fold change, and then report the log2 fold change. Any thoughts?. For the actual differential testing, I think it's ok to run the tests on the log1p transformed data, as that seems to be the norm for many pipelines using the types of tests we are using. However, some pipelines do use raw count data, which might be interesting to implement if we want. Either way, I think it's a little unintuitive to report a log2 fold change of log expression values. I can submit a pull request to implement this if this is something you agree with, and can add a parameter to let the user decide whether to use log-transformed or raw-count data. Let me know what you think!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/517:268,log,log,268,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/517,6,"['log', 'test']","['log', 'log-transformed', 'testing', 'tests']"
Testability,"Hi authors,. First off, love scanpy. Big fan. . I was just wondering if you have considered including an option in `scanpy.tl.rank_genes_groups` to specify which variables to select for testing, allowing users to select a subset of variables which would or would not be considered in the statistical test. For context, I'm trying to test between groups of cells while ignoring ribosomal / mitochondrial genes, but retain them in the `.var` and `.X` objects for downstream analysis/visualisation. Making a temp object with these variables removed solely for stats testing partially works, but it's confounded by having to further apply the boolean slice to the `.raw` object as well. Thanks, K",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1744:186,test,testing,186,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1744,4,['test'],"['test', 'testing']"
Testability,"Hi everyone,; at the moment, pie charts for paga are a bit brittle, see https://github.com/theislab/cellrank/issues/25.; This pull request is an attempt to fix it. Rather than using `ax.pie`, it's just a bunch of scatterplots with custom markers.; I've tested the performance; ```python; foo = {i: {c.to_hex(cm.viridis(_)): 0.001 for _ in range(255)} for i in range(8)}; sc.pl.paga(adata, color=foo, colorbar=False); ```; ![currect](https://user-images.githubusercontent.com/46717574/77180766-ad339b80-6aca-11ea-9a85-617ad122d140.png). Performancewise, it takes about ~14 seconds to produce the plot with the proposed changes,; ~4s, but I consider that the worst-case scenario.; More importantly, current version doesn't produce a correct plot, see below:; ![buggy](https://user-images.githubusercontent.com/46717574/77180621-7f4e5700-6aca-11ea-8c78-25fbba8f7c98.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1123:253,test,tested,253,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1123,1,['test'],['tested']
Testability,"Hi guys,. I am getting the following error after running this:. ```py; sc.pl.dotplot(adata, marker_genes1, groupby='louvain'); ```; ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-138-e642551f77de> in <module>(); ----> 1 sc.pl.dotplot(adata, marker_genes1, groupby='louvain'). ~\AppData\Local\Continuum\anaconda3\lib\site-packages\scanpy\plotting\_anndata.py in dotplot(adata, var_names, groupby, use_raw, log, num_categories, color_map, dot_max, dot_min, figsize, dendrogram, var_group_positions, var_group_labels, var_group_rotation, layer, show, save, **kwds); 1350 if isinstance(var_names, str):; 1351 var_names = [var_names]; -> 1352 categories, obs_tidy = _prepare_dataframe(adata, var_names, groupby, use_raw, log, num_categories, layer=layer); 1353 ; 1354 # for if category defined by groupby (if any) compute for each var_name. ~\AppData\Local\Continuum\anaconda3\lib\site-packages\scanpy\plotting\_anndata.py in _prepare_dataframe(adata, var_names, groupby, use_raw, log, num_categories, layer); 1983 matrix = adata[:, var_names].layers[layer]; 1984 elif use_raw:; -> 1985 matrix = adata.raw[:, var_names].X; 1986 else:; 1987 matrix = adata[:, var_names].X. ~\AppData\Local\Continuum\anaconda3\lib\site-packages\anndata\base.py in __getitem__(self, index); 495 ; 496 def __getitem__(self, index):; --> 497 oidx, vidx = self._normalize_indices(index); 498 if self._adata is not None or not self._adata.isbacked: X = self._X[oidx, vidx]; 499 else: X = self._adata.file['raw.X'][oidx, vidx]. ~\AppData\Local\Continuum\anaconda3\lib\site-packages\anndata\base.py in _normalize_indices(self, packed_index); 523 obs, var = super()._unpack_index(packed_index); 524 obs = _normalize_index(obs, self._adata.obs_names); --> 525 var = _normalize_index(var, self.var_names); 526 return obs, var; 527 . ~\AppData\Local\Continuum\anaconda3\lib\site-packages\anndata\base.py in _normalize_index(index, names);",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/593:503,log,log,503,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/593,2,['log'],['log']
Testability,"Hi guys,. I am trying to get the gene expression raw, log, scaled for just a couple of genes from the anndata object but i have tried doesnt seem to work. I just want a simple dataframe with the gene names as colum indexes and row info of the cells. this is waht i used to do in seurat. I am sure there is an easy way to do this in scanpy but just havent figure out. . geneX_df=as.data.frame(as.matrix(GetAssayData(object = anndata, slot = ""data"")[""geneX"",])). Thanks!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/870:54,log,log,54,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/870,1,['log'],['log']
Testability,"Hi guys,. Sorry I am new to github, I just posted this a comment on a closed thread (#530) and wasn't sure if that would be seen or not so I am just posting it up in as a new issue, just in case. I am having trouble running the rank_gene_groups test using wilcoxon, every time I try it throws a math domain error. I think this might be a duplicate of #566. As with the OP in #566 I have no trouble running the rank_genes_groups using t-test or logreg, the problem only arises when using method='wilcoxon'. For the example provided below `adata` is using one of our real data sets and I am using custom clusters but I have the same problem when replicating the tutorial workflow. My colleague has had the same experience when trying to work through the tutorial on his system, again using the most recent release of Scanpy. I've made sure 'log_transformed' was being applied to include the #519 fix provided by **a-munoz-rojas** in the hope that this might help but no such luck, I get the same error either way. Any ideas on how to solve this?. Here is what I ran:. ```; sc.tl.rank_genes_groups(adata, groupby='Custom_clusters_Leiden', groups=['NKT1','NKT2','NKT17','IL2+ aNKT1','aNKT2 & aNKT17','TNF- aNKT1'], reference='rest', method='wilcoxon', corr_method='benjamini-hochberg', log_transformed=True); sc.pl.rank_genes_groups(adata, n_genes=25, sharey=False); ```. And here is the resulting error:. ```; ValueError Traceback (most recent call last); <ipython-input-117-a5ba74ea872c> in <module>; ----> 1 sc.tl.rank_genes_groups(adata, groupby='Custom_clusters_Leiden', groups=['NKT1','NKT2','NKT17','IL2+ aNKT1','aNKT2 & aNKT17','TNF- aNKT1'], reference='rest', method='wilcoxon', corr_method='benjamini-hochberg', log_transformed=True); 2 sc.pl.rank_genes_groups(adata, n_genes=25, sharey=False). ~\Anaconda3\lib\site-packages\scanpy\tools\_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, log_transfo",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/706:245,test,test,245,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/706,3,"['log', 'test']","['logreg', 'test']"
Testability,"Hi islab,. I was wondering if there is a way to get statistical significance for a given gene expression between 2 groups on a violin plot or make a calculation separately?. for example:; here is the expression of GZMB between 2 groups and O would like to see if the difference is statistical significant with a simple t-test. <img width=""164"" alt=""image"" src=""https://user-images.githubusercontent.com/29153026/71746338-7631e000-2e21-11ea-95db-0aef5fe6dba7.png"">. Thank you fore your help,; Shen",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/970:321,test,test,321,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/970,1,['test'],['test']
Testability,"Hi scanpy folks,. This PR adds our cell identity classification model [`scnym`](https://github.com/calico/scnym) as a tool in `sc.external.tl.scnym`. The `scnym` API was inspired by `scanpy` and intended to be compatible, so the implementation in `external/_scnym.py` is simply a wrapper.; I also added a test in `tests/external/test_scnym.py` that passes.; Everything was linted with `black,flake8,autopep8` through `pre-commit`. Please let me know if there are any issues or changes you'd like to see.; Thanks for building a great ecosystem!. Best,; Jacob",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1775:305,test,test,305,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1775,2,['test'],"['test', 'tests']"
Testability,"Hi there,. I am doing a DE analysis using the functions `rank_genes_groups` and `filter_rank_genes_groups`.; I noticed that when two groups are compared (I did not check when multiple groups are compared) the parameter `min_in_group_fraction` of the function `filter_rank_genes_groups` is used only to filter the first group. I applied twice the functions `rank_genes_groups` and `filter_rank_genes_groups` to filter the calculated genes (I am asking that a gene is expressed in at least X% of cells).; There are mainly two possibilities, namely:; - a gene is expressed in at least X% of cells of **both** groups;; - a gene is expressed in at least X% of cells of **either** group1 or group2. In Seurat, the function `FindAllMarkers` has the parameter `min.pct `that is used to only test the genes that are detected in a minimum fraction of `min.pct` cells in either group1 or group2. It would be interesting to include these filtering steps in the `filter_rank_genes_groups` (maybe both strategies, i.e., **both** groups and **either** group1 or group2). What do you think? . Thanks!; Andrea",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1324:783,test,test,783,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1324,1,['test'],['test']
Testability,"Hi there,. I was trying do dig down to understand the problem in #559 , and I found out that in my ```plotting/_anndata.py``` [these lines](https://github.com/theislab/scanpy/blob/f33924011f7d0a7924fada933e1a20d7b5ceaac3/scanpy/plotting/_anndata.py#L828-L837) and all the ones related to ```standard_scale``` are missing. So I created a new conda environment and tried to install a new version of scanpy, but this did not solve the issue (i.e. the problem is not with my old environment) as these lines are still missing. . When I tried to replace the file and re-run my heatmap I got a different error:. ```; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); <ipython-input-5-49e0357ed731> in <module>; ----> 1 sc.pl.matrixplot(pbmc, marker_genes, groupby='bulk_labels', dendrogram=True, standard_scale='var'). /anaconda3/envs/test/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in matrixplot(adata, var_names, groupby, use_raw, log, num_categories, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, standard_scale, swap_axes, show, save, **kwds); 1644 var_names=var_names,; 1645 var_group_labels=var_group_labels,; -> 1646 var_group_positions=var_group_positions); 1647 ; 1648 var_group_labels = dendro_data['var_group_labels']. /anaconda3/envs/test/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in _reorder_categories_after_dendrogram(adata, groupby, dendrogram, var_names, var_group_labels, var_group_positions); 2332 """"""; 2333 ; -> 2334 key = _get_dendrogram_key(adata, dendrogram, groupby); 2335 ; 2336 dendro_info = adata.uns[key]. /anaconda3/envs/test/lib/python3.6/site-packages/scanpy/plotting/_anndata.py in _get_dendrogram_key(adata, dendrogram_key, groupby); 2406 ; 2407 if dendrogram_key not in adata.uns:; -> 2408 from ..tools._dendrogram import dendrogram; 2409 logg.warn(""dendrogram data not found (using key={}). Running `sc.tl.den",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/560:910,test,test,910,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/560,1,['test'],['test']
Testability,"Hi!. I'm having trouble getting the CI to pass on this PR: https://github.com/theislab/scanpy/pull/1476. This seems to be the issue:. ```; > raise SyntaxError(msg, (filename, lineno, 2, text)); E File ""/home/travis/build/theislab/scanpy/scanpy/external/pp/_scrublet.py"", line 9; E > <; E ^; E SyntaxError: Header of function `scanpy.external.pp._scrublet.scrub_doublets`’s docstring should start with one-line description:; E ; E ␣␣␣␣""""""\; E ␣␣␣␣My one-line␣description.; E ; E ␣␣␣␣…; E ␣␣␣␣""""""; scanpy/tests/test_docs.py:38: SyntaxError; ```. ... but the function does have that one-line description. . Would you be able to suggest to me what I'm doing wrong?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1484:503,test,tests,503,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1484,1,['test'],['tests']
Testability,"Hi!. Is it possible to do two-sided (or two-tailed) test in rank_genes_groups?. It seems like the tests you can choose from for now (t-test, wilcoxon etc.) are one-sided in that comparing group A to group B produces a list of DE genes that is not the same as in comparison of B to A. Thank you. Sincerely,; Anna Arutyunyan",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/919:52,test,test,52,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/919,3,['test'],"['test', 'tests']"
Testability,"Hi!; I've noticed that the function `rank_genes_groups` calculate logFC differently than seurat. ; https://github.com/theislab/scanpy/blob/5800db45dde0c2060ad0a9bed8ea931bd41da936/scanpy/tools/_rank_genes_groups.py#L207-L208. https://github.com/theislab/scanpy/blob/5800db45dde0c2060ad0a9bed8ea931bd41da936/scanpy/tools/_rank_genes_groups.py#L223. Thus the equation is; `log(exp(mean(values))`. while in Seurat is; https://github.com/satijalab/seurat/blob/96d07d80bc4b6513b93e9c10d8a9d57ae7016f9f/R/differential_expression.R#L175-L179 . thus; `log(mean(exp(values)))`. I was thus wondering if this was intended, since it leads to different logFC values.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/864:66,log,logFC,66,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/864,4,['log'],"['log', 'logFC']"
Testability,"Hi, . First of all, I would like to thank the developers for this awesome tool! I am new to Scanpy. I am migrating from Seurat to Scanpy as I would like to perform trajectory analysis in my data. I have single cell sequencing data from 12 samples and 3 treatments (so 4 samples per treatment). I merged the samples from the same treatment in a single matrix using ‘cellranger’ software from 10x Genomics (so I have 3 matrixes from 3 different treatments to import to Scanpy). . In ‘Seurat’, I can read the data from my three treatments separated, do quality control, and then integrate them using ‘FindIntegrationAnchors’ and ‘IntegrateData’ functions. Then, I perform cluster analysis in the integrated dataset, and test the effect of treatment on the transcriptome of each cluster. . Is there a similar function in ‘Scanpy’ to integrate different datasets which are labeled in order to perform cluster analyses in the integrated dataset and test for the effect of treatment in the transcriptome of identified cell types? If so, is there a tutorial for that?. In ‘Scanpy’ I am able to import the data and perform quality control and cluster analysis. Thus, if there was a way of integrating the 3 different matrixes in one single object that would be helpful. Any suggestions on how I should proceed to integrate my data and perform differential gene expression analysis according to treatment and cell type?. Thank you very much!. Joao",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/859:717,test,test,717,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/859,2,['test'],['test']
Testability,"Hi, . I have an issue with the standard_scale ='var' function.; Whenever I try to make any plot and scaling the data from 0 to 1 with the standard_scale = 'var' function I get the following error:. ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-432-bef389f3fd99> in <module>; ----> 1 gs = sc.pl.matrixplot(adata, marker_genes, groupby='louvain', dendrogram=True, standard_scale='var'). ~\AppData\Local\conda\conda\envs\Scanpy\lib\site-packages\scanpy\plotting\_anndata.py in matrixplot(adata, var_names, groupby, use_raw, log, num_categories, figsize, dendrogram, var_group_positions, var_group_labels, var_group_rotation, layer, swap_axes, show, save, **kwds); 1683 _plot_dendrogram(dendro_ax, adata, ticks=y_ticks); 1684 ; -> 1685 pc = matrix_ax.pcolor(mean_obs, edgecolor='gray', **kwds); 1686 ; 1687 # invert y axis to show categories ordered from top to bottom. ~\AppData\Local\conda\conda\envs\Scanpy\lib\site-packages\matplotlib\__init__.py in inner(ax, data, *args, **kwargs); 1808 ""the Matplotlib list!)"" % (label_namer, func.__name__),; 1809 RuntimeWarning, stacklevel=2); -> 1810 return func(ax, *args, **kwargs); 1811 ; 1812 inner.__doc__ = _add_data_doc(inner.__doc__,. ~\AppData\Local\conda\conda\envs\Scanpy\lib\site-packages\matplotlib\axes\_axes.py in pcolor(self, alpha, norm, cmap, vmin, vmax, *args, **kwargs); 5773 kwargs.setdefault('snap', False); 5774 ; -> 5775 collection = mcoll.PolyCollection(verts, **kwargs); 5776 ; 5777 collection.set_alpha(alpha). ~\AppData\Local\conda\conda\envs\Scanpy\lib\site-packages\matplotlib\collections.py in __init__(self, verts, sizes, closed, **kwargs); 931 %(Collection)s; 932 """"""; --> 933 Collection.__init__(self, **kwargs); 934 self.set_sizes(sizes); 935 self.set_verts(verts, closed). ~\AppData\Local\conda\conda\envs\Scanpy\lib\site-packages\matplotlib\collections.py in __init__(self, edgecolors, facecolors, linewidths, linestyles, ca",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/565:622,log,log,622,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/565,1,['log'],['log']
Testability,"Hi, . I tried to run `sc.tl.highly_variable_genes` with `flavor=CellRanger` and `n_top_genes = 2000`. I obtained the following error:; ```pytb; /home/miniconda3/envs/dev/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py in highly_variable_genes(adata, min_disp, max_disp, min_mean, max_mean, n_top_genes, n_bins, flavor, subset, inplace, batch_key); 280 n_top_genes=n_top_genes,; 281 n_bins=n_bins,; --> 282 flavor=flavor,; 283 ); 284 . /home/miniconda3/envs/dev/lib/python3.7/site-packages/scanpy/preprocessing/_highly_variable_genes.py in _highly_variable_genes_single_batch(adata, min_disp, max_disp, min_mean, max_mean, n_top_genes, n_bins, flavor); 141 dispersion_norm = dispersion_norm[~np.isnan(dispersion_norm)]; 142 dispersion_norm[::-1].sort() # interestingly, np.argpartition is slightly slower; --> 143 disp_cut_off = dispersion_norm[n_top_genes-1]; 144 gene_subset = np.nan_to_num(df['dispersions_norm'].values) >= disp_cut_off; 145 logg.debug(. IndexError: index 1999 is out of bounds for axis 0 with size 1898; ```. I run scanpy in Python 3.7 (linux machine) with the following versions:; ```; scanpy==1.4.5.dev114+gd69832a anndata==0.6.22.post1 umap==0.3.9 numpy==1.17.0 scipy==1.3.0 pandas==0.25.0 scikit-learn==0.21.2 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1; ```. I suggest to check if `n_top_genes` is larger than `len(dispersion_norm)`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/834:971,log,logg,971,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/834,1,['log'],['logg']
Testability,"Hi, . I was wondering what is a good/accepted way to calculate differential gene expression after batch alignment of multiple datasets?. After reading into it, it seems to me that the DEG are calculated on the raw (=non batch corrected values) and after all some batch correction algorithms don't even transform the data matrix (I don't understand why). See: [Mnn correct docs](https://icb-scanpy.readthedocs-hosted.com/en/stable/api/scanpy.external.pp.mnn_correct.html), [Seurat issue](https://github.com/satijalab/seurat/issues/1224#issuecomment-473416336), [Harmony preprint](https://www.biorxiv.org/content/biorxiv/early/2018/11/05/461954.full.pdf). But that means I would need to include _batch_ as an interaction in the DEG calculation, therefore I could use _logistic regression_ in scanpy with:; `scanpy.tl.rank_genes_groups(adata, use_raw=True, method='logreg')`; I am struggling though to find out how to add interactions to sklearns logistic regression via scanpy. When using sklearn directly it should work through [patsy or PolynomialFeatures()](https://stackoverflow.com/questions/45828964/how-to-add-interaction-term-in-python-sklearn). [Others](https://github.com/theislab/scanpy/issues/95) seem to use sklearn without the wrapper.; Or maybe I don't need to add interactions if the biological difference between the samples is bigger than the batch effect?. Do you think this is the right way to do this and could you point me in the right direction to solve this?; I think this might actually be not an _issue_ of scanpy but more a matter of understanding how to properly do this and how to use the tool so no worries if you decide to close this. Thanks!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/669:862,log,logreg,862,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/669,2,['log'],"['logistic', 'logreg']"
Testability,"Hi, . Thanks for the great tools included in scanpy. . I was searching to see what the logfoldchange numbers in the `rank_genes_groups` are. i.e. is it natural log/log base 10 or log2? The code in https://github.com/theislab/scanpy/blob/master/scanpy/tools/_rank_genes_groups.py shows that it is log2foldchange. . Perhaps this should be made clear in the documentation? Or `logfoldchange` should be chnaged to `log2foldchange`. . Cheers, ; S",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/446:87,log,logfoldchange,87,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/446,4,['log'],"['log', 'logfoldchange']"
Testability,"Hi, . We might start testing scanpy with umap 0.4dev branch. Today I ran `sc.pp.neighbors` with umap 0.4dev branch accidentally and got the following exception:. ![image](https://user-images.githubusercontent.com/1140359/62968014-29009380-bdd8-11e9-995f-4131ebcb19f5.png). because `fuzzy_simplicial_set` function in UMAP returns a tuple, not a sparse matrix in 0.4: https://github.com/lmcinnes/umap/blob/0.4dev/umap/umap_.py#L528-L549. It'd be great to write some tests and check if it's enough to fix this exception.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/779:21,test,testing,21,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/779,2,['test'],"['testing', 'tests']"
Testability,"Hi, . is there a possibility to calculate _downregulated_ genes between two clusters? In the function `tl.rank_genes_groups()` I did not find such option though it should be possible with the Wilcoxon test. Afaik in `Seurat.FindMarkers()` there is an option `only.pos` for the Wilcoxon test (https://www.rdocumentation.org/packages/Seurat/versions/3.0.0/topics/FindMarkers).; Following another discussion here about DEG I tried to switch to MAST to get around that but it seems to be available only through R (https://github.com/RGLab/MAST/issues/102). Also Wilcoxon did reasonable well in a recent paper (https://www.nature.com/articles/nmeth.4612).. . Thanks!; Tilo",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/625:201,test,test,201,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/625,2,['test'],['test']
Testability,"Hi, ; I am using weighted sampling data as input of . > scanpy , but i didn't find any help when i have a distinct weight for each observation. So I modified few of the . > scanpy. files. . `use_weights` is a boolean parameter either your data is weighted or not, if weighted then it will calculated weighted mean and weighted variance, in other case it will be same as previous. `Default is False`. `weights` is a 1D weight vector, where each row is weight of observation in original matrix. `Default is None`. I have attached the updated files and tested with well. But you can test again for adding into your tool. . Thanks; [Weighted_Sampling.zip](https://github.com/theislab/scanpy/files/3134213/Weighted_Sampling.zip)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/627:550,test,tested,550,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/627,2,['test'],"['test', 'tested']"
Testability,"Hi, I am reproducing this tutorial https://nbviewer.jupyter.org/github/theislab/scanpy_usage/blob/master/170503_zheng17/zheng17.ipynb. the line sc.pp.neighbors(adata) produces the following error:. Inconsistency detected by ld.so: dl-version.c: 205: _dl_check_map_versions: Assertion `needed != NULL' failed!. Ubuntu 18.04; Python 3.6.6. scanpy==1.3.1 anndata==0.6.10 numpy==1.15.2 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.19.2 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 . Can you help me? Thank You",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/280:274,Assert,Assertion,274,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/280,1,['Assert'],['Assertion']
Testability,"Hi, I am using anndata 0.6.21 and scanpy 1.4.3; I executed this code:; ```; sc.pp.highly_variable_genes(adata, min_mean=0.0001, max_mean=3, min_disp=0.5). sc.pl.highly_variable_genes(adata). adata = adata[:, adata.var['highly_variable']]; ```. and I got this error:; `AssertionError: Don’t call _normalize_index with non-categorical/string names; `; Can you help me?. Thank you.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/747:268,Assert,AssertionError,268,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/747,1,['Assert'],['AssertionError']
Testability,"Hi, I recently found that the parameter of filtering, n_genes, is determined arbitrarily. Hence, could we use the normal distribution and the threshold value (5% and 95%) to do the job?. The scanpy gives the violin plot for n_genes, but I really want a density plot (imagined as attached). Specifically, after the plot, it could automatically do the ""shapiro test"" to see if it fits the normal distribution and give the the threshold value of 5% and 95% respectively. And the users could decide whether they want to filter the data by these parameters through n_genes. ![imagine](https://user-images.githubusercontent.com/49429496/66399459-3752e080-ea12-11e9-8458-af332e620975.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/866:359,test,test,359,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/866,1,['test'],['test']
Testability,"Hi, I was doing a dataset integration on quite some datasets. . ```py; adatas = [AT1,AT2,AT3,AT4,AT5,AT6,AT7] #each is an adata object from scRNA-seq. for i in adatas:; i.layers['counts'] = i.X. adatas = [AT1,AT2,AT3,AT4,AT5,AT6,AT7]. adata = ad.concat(adatas); adata.obs_names_make_unique. sc.pp.log1p(adata); sc.pp.highly_variable_genes(; adata,; layer=""logcounts"",; batch_key=""Sample"",; subset=True; ). scvi.model.SCVI.setup_anndata(adata, layer=""counts"", batch_key=""Sample""). vae = scvi.model.SCVI(adata, n_hidden=256); vae.train(); adata.obsm[""X_scVI""] = vae.get_latent_representation(); sc.pp.neighbors(adata, use_rep=""X_scVI""); from scvi.model.utils import mde; import pymde; adata.obsm[""X_mde""] = mde(adata.obsm[""X_scVI""]); adata.obsm[""X_normalized_scVI""] = vae.get_normalized_expression(); adata.write_h5ad('Integrated.h5ad'); ```. So I did use make obs names unique after ad.concat(adatas). However, after I was finished with the integration and moving on to write_h5ad, it returns the following errors and tells me they can't write my h5ad cuz I have duplicated rows:. ```pytb; Feb 26 11:20:39 PM: Your dataset appears to contain duplicated items (rows); when embedding, you should typically have unique items.; Feb 26 11:20:39 PM: The following items have duplicates [60449 60452 60455 ... 70783 70784 70785]; Traceback (most recent call last):; File ""/home/joyzheng/.local/lib/python3.8/site-packages/anndata/_io/utils.py"", line 214, in func_wrapper; return func(elem, key, val, *args, **kwargs); File ""/home/joyzheng/.local/lib/python3.8/site-packages/anndata/_io/specs/registry.py"", line 171, in write_elem; _REGISTRY.get_writer(dest_type, (t, elem.dtype.kind), modifiers)(; File ""/home/joyzheng/.local/lib/python3.8/site-packages/anndata/_io/specs/registry.py"", line 24, in wrapper; result = func(g, k, *args, **kwargs); File ""/home/joyzheng/.local/lib/python3.8/site-packages/anndata/_io/specs/methods.py"", line 346, in write_vlen_string_array; f.create_dataset(k, data=elem.astype(st",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2432:356,log,logcounts,356,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2432,1,['log'],['logcounts']
Testability,"Hi, I'm having trouble exporting a PAGA graph as gexf format. I did a manual fix in my own installation of scanpy but it seems like a version issue with networkx2.6.2 (which is the latest of this date).; Minimal working example:; ```python; import scanpy as sc; paul15 = sc.datasets.paul15(); sc.pp.recipe_zheng17(paul15); sc.pp.neighbors(paul15, n_neighbors=4, n_pcs=20); sc.tl.paga(paul15, groups='paul15_clusters'); sc.pl.paga(paul15, labels=None, color='paul15_clusters'). gexf=sc.pl.paga(paul15, labels=None, color='paul15_clusters', export_to_gexf=True). ```. ```pytb. File ""anaconda3\lib\site-packages\scanpy\plotting\_tools\paga.py"", line 860, in _paga_graph; nx_g_solid.node[count]['label'] = str(node_labels[count]). AttributeError: 'Graph' object has no attribute 'node'```. ```; #### Versions; scanpy 1.8.1; networkx 2.6.2; matplotlib 3.4.3. <details>. sc.logging.print_versions(); WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.1; -----; PIL 8.0.1; PyQt5 NA; anndata 0.7.6; autoreload NA; backcall 0.2.0; bottleneck 1.3.2; bs4 4.9.3; cairo 1.20.1; cffi 1.14.3; chardet 3.0.4; cloudpickle 1.6.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2.30.0; dateutil 2.8.1; decorator 4.4.2; h5py 2.10.0; html5lib 1.1; igraph 0.9.6; ipykernel 5.3.4; ipython_genutils 0.2.0; jedi 0.17.1; joblib 1.0.1; kiwisolver 1.3.0; leidenalg 0.8.7; llvmlite 0.34.0; lxml 4.6.1; matplotlib 3.4.3; mpl_toolkits NA; natsort 7.1.1; networkx 2.6.2; nt NA; ntsecuritycon NA; numba 0.51.2; numexpr 2.7.1; numpy 1.20.3; packaging 20.4; pandas 1.3.2; parso 0.7.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.8; psutil 5.7.2; pyarrow 0.16.0; pycparser 2.20; pygments 2.7.2; pynndescent 0.5.2; pyparsing 2.4.7; pythoncom NA; pytz 2020.1; pywintypes NA; scanpy 1.8.1; scipy 1.5.2; sinfo 0.3.1; sip NA; six 1.15.0; sklearn 0.23.2; soupsieve 2.0.1; sphinxcontrib NA; spyder 4.1.5; spyder_kernels 1.9.4; spydercustomize NA; s",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1997:868,log,logging,868,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1997,1,['log'],['logging']
Testability,"Hi, there. I am following the tutorial [here](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html), it works perfectly with Jupyter Notebook, but I do encounter the following errors when running the code in command line or PyCharm. - [x] I have checked that this issue has not already been reported.; - [x] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. ### Minimal code sample (that we can copy&paste without having any data). from https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html; ```python; adata.var['mt'] = adata.var_names.str.startswith('MT-'); sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True); ```. ```pytb; TypeError: calculate_qc_metrics() got an unexpected keyword argument 'log1p'; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2189:928,log,logging,928,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2189,1,['log'],['logging']
Testability,"Hi,. I am specifically trying to test something with random_state in sc.tl.umap, and would like to get more info on what random number generator is used. The docs there say that np.random is used if random_state=None, but does not explicitly comment on what the random number generator is otherwise. Could you please help clarify this?. Thank you!; Byron. <!--; ⚠ If you need help using Scanpy, please ask in https://scanpy.discourse.group/ instead ⚠; If you want to know about design decisions and the like, please ask below:; -->; ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1626:33,test,test,33,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1626,1,['test'],['test']
Testability,"Hi,. I am testing `pl.scatter` and it seems that:; - `color` cannot be a list (contrary to what the documentation mentions); - `components='all'` raises the error: `ValueError: invalid literal for int() with base 10: 'all'`. Any idea how to fix that?. Bérénice",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/311:10,test,testing,10,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/311,1,['test'],['testing']
Testability,"Hi,. I am testing `sc.pl.stacked_violin` and I had an issue with running it on an AnnData variable that is imported from a `h5ad` file. I explain. If I run:. ```; >>> import scanpy.api as sc; >>> adata = sc.datasets.krumsiek11(); >>> sc.pl.stacked_violin(adata, adata.var_names, 'cell_type', use_raw=False, color='blue', show=False); ```. No problem, but if I run:. ```; >>> import scanpy.api as sc; >>> adata = sc.datasets.krumsiek11(); >>> adata.write('anndata.h5ad'); >>> adata = sc.read_h5ad('anndata.h5ad'); >>> sc.pl.stacked_violin(adata, adata.var_names, 'cell_type', use_raw=False, color='blue', show=False); ```. then I got the error:. ```; Traceback (most recent call last):; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/miniconda3/envs/scanpy/lib/python3.6/site-packages/scanpy/plotting/anndata.py"", line 896, in stacked_violin; orient='vertical', scale=scale, ax=ax, **kwds); File ""/miniconda3/envs/scanpy/lib/python3.6/site-packages/seaborn/categorical.py"", line 2387, in violinplot; color, palette, saturation); File ""/miniconda3/envs/scanpy/lib/python3.6/site-packages/seaborn/categorical.py"", line 562, in __init__; self.establish_variables(x, y, hue, data, orient, order, hue_order); File ""/miniconda3/envs/scanpy/lib/python3.6/site-packages/seaborn/categorical.py"", line 155, in establish_variables; raise ValueError(err); ValueError: Could not interpret input 'variable'; ```. I tested it with versions 1.3.1 and 1.3.2, installed with bioconda. Any idea?. Bérénice",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/318:10,test,testing,10,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/318,2,['test'],"['tested', 'testing']"
Testability,"Hi,. I am testing the `scanpy.api.tl.sandbag` and `scanpy.api.tl.cyclone` functions, after installing the latest version of `pypairs`. . 1. I got an error: `TypeError: 'module' object is not callable`. It seems that it could be solved by calling `pypairs.cyclone.cyclone` or `pypairs.sandbag.sandbag`. 2. In `sandbag`: the argument `fraction` is not used to call the `pypairs` `sandbag` function; 3. In `cyclone` and `sandbag`, `gene_names` and `sample_names` should not be `None`. I can fix these issues in a PR. Bérénice",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/310:10,test,testing,10,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/310,1,['test'],['testing']
Testability,"Hi,. I am writing the Galaxy integration for `pl.paga_path`. From the documentation, I understand that if we can provide an annotation (other than `dpt_pseudotime`) that are keys of `adata.obs`.; I tested with a dataset in which `dpt_pseudotime` is not a key of `adata.obs` and I got the error:. ```; Traceback (most recent call last):; File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/scanpy/plotting/tools/paga.py"", line 930, in paga_path; idcs_group = np.argsort(adata.obs['dpt_pseudotime'].values[; File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/frame.py"", line 2688, in __getitem__; return self._getitem_column(key); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/frame.py"", line 2695, in _getitem_column; return self._get_item_cache(key); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/generic.py"", line 2489, in _get_item_cache; values = self._data.get(item); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/internals.py"", line 4115, in get; loc = self.items.get_loc(item); File ""/miniconda3/envs/mulled-v1-9b7030900b5a2e199b0cdbb5894abd70134735de4070acfe326d220bc105c4a2/lib/python3.6/site-packages/pandas/core/indexes/base.py"", line 3080, in get_loc; return self._engine.get_loc(self._maybe_cast_indexer(key)); File ""pandas/_libs/index.pyx"", line 140, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/index.pyx"", line 162, in pandas._libs.index.IndexEngine.get_loc; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1492, in pandas._libs.hashtable.PyObjectHashTable.get_item; File ""pandas/_libs/hashtable_class_helper.pxi"", line 1500, i",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/328:198,test,tested,198,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/328,1,['test'],['tested']
Testability,"Hi,. I can't get the ordinal regression test case to run on my MacBook. The single cpu case works fine, but if I ask for multiple processes, they launch, but activity monitor has them all at 0% cpu, with the main thread locking while waiting. Sometimes (routinely if I switch out `map_async` with `map`) I will get a crash log telling me:. ```; Crashed Thread: 0 Dispatch queue: com.apple.main-thread. Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000000000000110; Exception Note: EXC_CORPSE_NOTIFY. Termination Signal: Segmentation fault: 11; Termination Reason: Namespace SIGNAL, Code 0xb; Terminating Process: exc handler [0]. VM Regions Near 0x110:; --> ; __TEXT 0000000102a16000-0000000102a18000 [ 8K] r-x/rwx SM=COW j [/usr/local/Cellar/python/3.6.5_1/Frameworks/Python.framework/Versions/3.6/Resources/Python.app/Contents/MacOS/Python]. Application Specific Information:; *** multi-threaded process forked ***; crashed on child side of fork pre-exec. Thread 0 Crashed:: Dispatch queue: com.apple.main-thread; 0 libdispatch.dylib 	0x00007fff572df8e1 _dispatch_root_queue_push + 108; 1 libBLAS.dylib 	0x00007fff2bfd0c9a rowMajorTranspose + 546; 2 libBLAS.dylib 	0x00007fff2bfd0a65 cblas_dgemv + 757; 3 multiarray.cpython-36m-darwin.so	0x00000001035c4f86 gemv + 182; 4 multiarray.cpython-36m-darwin.so	0x00000001035c4527 cblas_matrixproduct + 2807; 5 multiarray.cpython-36m-darwin.so	0x000000010358ab27 PyArray_MatrixProduct2 + 215; 6 multiarray.cpython-36m-darwin.so	0x000000010358626c array_dot + 188; 7 org.python.python 	0x0000000102a5d12e _PyCFunction_FastCallDict + 463; 8 org.python.python 	0x0000000102ac30e6 call_function + 491; 9 org.python.python 	0x0000000102abb621 _PyEval_EvalFrameDefault + 1659; 10 org.python.python 	0x0000000102ac3866 _PyEval_EvalCodeWithName + 1747; ```. Here's what I was running to cause that:. ```python; import numpy as np; import scanpy.api as sc; from anndata import AnnData; from scipy.sparse import random. adata ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/182:40,test,test,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/182,2,"['log', 'test']","['log', 'test']"
Testability,"Hi,. I have been Scanpy for a short time and I find it really great!; However, I tried recently to use it for differential expression using rank_genes_groups and I could not make it work. I have a single-cell RNA-seq dataset with cell types.; When running `rank_genes_groups(adata, groupby=""celltype"")`, I get the following error:. ```; ~/.py3Env/lib/python3.5/site-packages/scanpy/tools/rank_genes_groups.py` in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, **kwds); 374 adata.uns[key_added]['names'] = np.rec.fromarrays(; 375 [n for n in rankings_gene_names],; --> 376 dtype=[(rn, 'U50') for rn in groups_order_save]); 377; 378 if method in {'t-test', 't-test_overestim_var', 'wilcoxon'}:. ~/.py3Env/lib/python3.5/site-packages/numpy/core/records.py in fromarrays(arrayList, dtype, shape, formats, names, titles, aligned, byteorder); 632 # populate the record array (makes a copy); 633 for i in range(len(arrayList)):; --> 634 _array[_names[i]] = arrayList[i]; 635; 636 return _array. ValueError: setting an array element with a sequence; ```. Do you have any idea of what could cause this error?. Thank you",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/365:722,test,test,722,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/365,1,['test'],['test']
Testability,"Hi,. I started playing around with `vcenter` and adding support for it in plotting functions. This allows us to do things like:. ```python; import scanpy as sc. adata = sc.datasets.paul15(). sc.pp.log1p(adata); sc.pp.scale(adata); genes = ['Cst3', 'Car1', 'Cd34', 'Apoe', 'Top2a', 'Ccl5', 'Ctsw']; sc.pl.matrixplot(adata, genes, groupby='paul15_clusters', vmin=-2, vmax=5, vcenter=0, cmap='RdBu_r'); ```. ![image](https://user-images.githubusercontent.com/1140359/102667661-ebdcac00-4157-11eb-9aac-d610283511e2.png). I haven't gone further before asking you if it makes sense at all, or not. If yes, I can try to write tests too. What do you think?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1551:619,test,tests,619,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1551,1,['test'],['tests']
Testability,"Hi,. I was always a bit perplexed by Scanpy's logo (some sort of shrimp? ant?), since the name doesn't make me think of an animal. Would you mind explaining, @falexwolf? Is it, maybe, a pun on ""scampi""? Because that would explain it. thanks,; Niko",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1347:46,log,logo,46,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1347,1,['log'],['logo']
Testability,"Hi,. I was testing the different functions and found out that some requirements were missing and so in the `requirements.txt`. I tried to add the one I could find on Pypi. Bérénice",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/305:11,test,testing,11,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/305,1,['test'],['testing']
Testability,"Hi,. In scanpy 1.1, sc.pl.pca() and sc.tl.tsne() output changes (but still very similar) if they are executed more than once over an object. I have already set random_state value. I've tested that behavior in different installations in different operating systems. Is there a reason for that? I find that behavior baffling and I don't know which output should be trusted: the first time the functions are run or the following?. Thanks for your time.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/203:185,test,tested,185,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/203,1,['test'],['tested']
Testability,"Hi,. Just wanted to start the PR. Passes the tests except one. Also need to deal with solver names since they don't correspond to anything dask uses. Also refactored where the DaskArray mock class is. Pinging @ivirshup",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2563:45,test,tests,45,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2563,2,"['mock', 'test']","['mock', 'tests']"
Testability,"Hi,. Reordering the categories of groups in obs leads to shuffling of marker genes to the wrong groups when using `sc.tl.rank_genes_groups`. Interestingly, this only happens if I use `method='logreg`. It works fine with `method='t-test`. I am not sure how relevant this is. Maybe, one should not reorder categories. However, this was helpful to me when I wanted to plot the categories in a certain order. Here comes a minimal example:. ```; import pandas as pd; import scanpy.api as sc. adata = sc.datasets.blobs(640, 3); sc.tl.pca(adata); sc.pp.neighbors(adata); sc.tl.louvain(adata). method='logreg'. sc.tl.rank_genes_groups(adata, 'louvain', method=method); print(pd.DataFrame(adata.uns['rank_genes_groups']['names']).head(1)). adata.obs['louvain'].cat.reorder_categories(['2', '1', '0'], inplace = True). sc.tl.rank_genes_groups(adata, 'louvain', method=method); print(pd.DataFrame(adata.uns['rank_genes_groups']['names']).head(1)); ```; The result looks like this:; ```python; 0 1 2; 0 570 63 126; 2 1 0; 0 570 63 126; ```; The expected result would be that the marker genes end up in the same groups as above (watch the change in the lowest row):; ```python; 0 1 2; 0 570 63 126; 2 1 0; 0 126 63 570; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/273:192,log,logreg,192,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/273,3,"['log', 'test']","['logreg', 'test']"
Testability,"Hi,. Thank you for the great tool. I think this is not a bug. . Recently I upgraded some packages and found my results were different from the previous runs. I figured out that it is caused by different versions of `pynndescent` (0.4.7 vs 0.5.1), which is recommended to use in UMAP. So I think `pynndescent` should be included in the output of `sc.logging.print_header()`. #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.6.1; sinfo 0.3.1; -----; PIL 8.1.0; anndata 0.7.5; constants NA; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; get_version 2.1; h5py 3.1.0; highs_wrapper NA; igraph 0.8.3; joblib 1.0.0; kiwisolver 1.3.1; legacy_api_wrap 1.2; leidenalg 0.8.3; llvmlite 0.35.0; louvain 0.7.0; matplotlib 3.3.3; mpl_toolkits NA; natsort 7.1.1; numba 0.52.0; numexpr 2.7.2; numpy 1.19.5; packaging 20.8; pandas 1.2.1; pkg_resources NA; pynndescent 0.5.1; pyparsing 2.4.7; pytz 2020.5; scanpy 1.6.1; scipy 1.6.0; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.24.1; statsmodels 0.12.1; tables 3.6.1; texttable 1.6.3; umap 0.4.6; -----; Python 3.8.5 (default, Sep 4 2020, 07:30:14) [GCC 7.3.0]; Linux-3.10.0-1160.11.1.el7.x86_64-x86_64-with-glibc2.10; 40 logical CPU cores, x86_64. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1613:349,log,logging,349,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1613,2,['log'],"['logging', 'logical']"
Testability,"Hi,; I am trying to evaluate a PCA on a dataset with a very low number of Principal Components. I am getting the following error when trying to plot the PCA:; ```python; sc.pl.pca_variance_ratio(adata_h, log=True, save=True); ```; Result:; ```; /Users/user/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/plotting/anndata.py:530: RuntimeWarning: divide by zero encountered in log; if log: scores = np.log(scores). ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-7-48cc676a34cc> in <module>(); 1 # log is natural logarithm; ----> 2 sc.pl.pca_variance_ratio(adata_h, log=True, save=True). ~/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/plotting/tools/__init__.py in pca_variance_ratio(adata, log, show, save); 157 default filename. Infer the filetype if ending on {{'.pdf', '.png', '.svg'}}.; 158 """"""; --> 159 ranking(adata, 'uns', 'variance_ratio', dictionary='pca', labels='PC', log=log); 160 utils.savefig_or_show('pca_variance_ratio', show=show, save=save); 161 . ~/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/plotting/anndata.py in ranking(adata, attr, keys, dictionary, indices, labels, color, n_points, log, show); 555 score_min, score_max = np.min(score[indices]), np.max(score[indices]); 556 pl.ylim((0.95 if score_min > 0 else 1.05) * score_min,; --> 557 (1.05 if score_max > 0 else 0.95) * score_max); 558 if show == False: return gs; 559 . ~/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/matplotlib/pyplot.py in ylim(*args, **kwargs); 1588 if not args and not kwargs:; 1589 return ax.get_ylim(); -> 1590 ret = ax.set_ylim(*args, **kwargs); 1591 return ret; 1592 . ~/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/matplotlib/axes/_base.py in set_ylim(self, bottom, top, emit, auto, **kw); 3455 bottom, top = bot",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/264:204,log,log,204,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/264,8,['log'],"['log', 'logarithm']"
Testability,"Hi,; I couldn't import scanpy due to an error: DLL load failed. I have checked pre-existing issues, but all of them seem to be an h5py issue. My error report seems different from them.; ```; >>> import scanpy as sc; D:\Anaconda\lib\site-packages\dask\config.py:168: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.; data = yaml.load(f.read()) or {}; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\__init__.py"", line 36, in <module>; from . import tools as tl; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\tools\__init__.py"", line 17, in <module>; from ._sim import sim; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\tools\_sim.py"", line 23, in <module>; from .. import _utils, readwrite, logging as logg; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\scanpy\readwrite.py"", line 10, in <module>; import tables; File ""C:\Users\yuhong\AppData\Roaming\Python\Python37\site-packages\tables\__init__.py"", line 99, in <module>; from .utilsextension import (; ImportError: DLL load failed: The specified procedure could not be found. >>> print(sys.version); 3.7.3 (default, Mar 27 2019, 17:13:21) [MSC v.1915 64 bit (AMD64)]; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1468:961,log,logging,961,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1468,2,['log'],"['logg', 'logging']"
Testability,"Hi,; I have some problems running Louvain clustering.; The first time I tried to run, it complains about missing library `igraph`.; I installed `igraph` but now this same library throws a `DeprecationWarning` when calling Louvain clustering. ```; ---------------------------------------------------------------------------; DeprecationWarning Traceback (most recent call last); <ipython-input-17-329d7c2ac26c> in <module>(); ----> 1 sc.tl.louvain(adata). ~/.pyenv/versions/3.6.4/lib/python3.6/site-packages/scanpy/tools/louvain.py in louvain(adata, resolution, random_state, restrict_to, key_added, adjacency, flavor, directed, n_jobs, copy); 79 directed = False; 80 if not directed: logg.m(' using the undirected graph', v=4); ---> 81 g = utils.get_igraph_from_adjacency(adjacency, directed=directed); 82 if flavor == 'vtraag':; 83 import louvain. ~/.pyenv/versions/3.6.4/lib/python3.6/site-packages/scanpy/utils.py in get_igraph_from_adjacency(adjacency, directed); 92 def get_igraph_from_adjacency(adjacency, directed=None):; 93 """"""Get igraph graph from adjacency matrix.""""""; ---> 94 import igraph as ig; 95 sources, targets = adjacency.nonzero(); 96 weights = adjacency[sources, targets]. ~/.pyenv/versions/3.6.4/lib/python3.6/site-packages/igraph/__init__.py in <module>(); 6 __license__ = ""MIT""; 7 ; ----> 8 raise DeprecationWarning(""To avoid name collision with the igraph project, ""; 9 ""this visualization library has been renamed to ""; 10 ""'jgraph'. Please upgrade when convenient.""). DeprecationWarning: To avoid name collision with the igraph project, this visualization library has been renamed to 'jgraph'. Please upgrade when convenient.; ```. I can work on a PR and change line 94 of `scanpy/utils.py` to:. ```; import jgraph as ig; ```. This should solve the issue afaik (and `jgraph` should be listed in the dependencies I think). Let me know if you accept PRs. Thanks,; Francesco",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/138:684,log,logg,684,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/138,1,['log'],['logg']
Testability,"Hi,; I have two levels in my ```groupby``` variable and was trying to find the differential expression genes between the two levels using the wilcoxon rank sum test. The following two commands will give different pvals and slightly different logfoldchanges; ```; sc.tl.rank_genes_groups(adata, groupby='status', groups=['ALS'], reference='ctrl', n_genes=100000, method='wilcoxon', use_raw=False); sc.tl.rank_genes_groups(adata, groupby='status', groups=['ctrl'], reference='ALS', n_genes=100000, method='wilcoxon', use_raw=False); ```; ```; 	gene	logfoldchanges_ALS_ctrl	pvals_ALS_ctrl	logfoldchanges_ctrl_ALS	pvals_ctrl_ALS; 0	SLC11A1	2.9489155	5.91E-75	-2.9489155	2.08E-73; 1	NEAT1	1.1250153	5.11E-66	-1.1250151	6.82E-64; 2	FKBP5	2.7334108	8.94E-47	-2.7334108	1.78E-45; 3	SPP1	2.1242297	2.27E-42	-2.1242297	2.69E-41; 4	FCGR3A	2.6661332	6.95E-40	-2.6661332	5.37E-39; 5	HAMP	5.394592	1.27E-37	-5.394592	2.27E-36; 6	CD163	3.0886266	9.11E-36	-3.0886264	1.71E-34; 7	RASSF4	2.3211384	2.83E-34	-2.3211384	3.74E-33; 8	DSE	2.8529236	7.43E-33	-2.8529236	7.86E-32; 9	MAFB	2.7013724	3.67E-32	-2.7013724	6.43E-31; 10	DENND3	1.4753485	5.13E-29	-1.4753484	1.19E-27; 11	APOE	1.4111803	1.12E-28	-1.4111804	9.04E-28; 12	C1QB	1.5169998	3.53E-27	-1.5169998	1.68E-25; 13	C3	1.3675922	1.05E-25	-1.3675922	2.62E-25; ```; Am I not doing it right, or because of the tie issue mentioned here?; #698 ; Thanks for your help!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/754:160,test,test,160,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/754,2,"['log', 'test']","['logfoldchanges', 'test']"
Testability,"Hi,; I was trying to run the quick example described in the magic api cmd using datasets.paul15 but it keeps on giving me the same error. See below the code I used and the error it gives. . import numpy as np; import pandas as pd; import scanpy.api as sc; import matplotlib.pyplot as pl; import phate; import magic. sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.settings.set_figure_params(dpi=80) # low dpi (dots per inch) yields small inline figures; sc.logging.print_version_and_date(); # we will soon provide an update with more recent dependencies; sc.logging.print_versions_dependencies_numerics(). Running Scanpy 1.2.2+72.gbc6661c on 2018-07-18 19:40.; Dependencies: anndata==0.6.5 numpy==1.14.3 scipy==1.1.0 pandas==0.23.0 scikit-learn==0.19.1 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 . adata = sc.datasets.paul15(). WARNING: In Scanpy 0.*, this returned logarithmized data. Now it returns non-logarithmized data.; ... storing 'paul15_clusters' as categorical. sc.pp.normalize_per_cell(adata); sc.pp.sqrt(adata); adata_magic = sc.pp.magic(adata, name_list=['Mpo', 'Klf1', 'Ifitm1'], k=5); adata_magic.shape. computing PHATE. ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-79-129f35d34dbd> in <module>(); 2 sc.pp.normalize_per_cell(adata); 3 sc.pp.sqrt(adata); ----> 4 adata_magic = sc.pp.magic(adata.X, name_list=['Mpo', 'Klf1', 'Ifitm1'], k=5); 5 adata_magic.shape. ~/software/scanpy/scanpy/preprocessing/magic.py in magic(adata, name_list, k, a, t, n_pca, knn_dist, random_state, n_jobs, verbose, copy, **kwargs); 131 n_jobs=n_jobs,; 132 verbose=verbose,; --> 133 **kwargs).fit_transform(adata,; 134 genes=name_list); 135 logg.info(' finished', time=True,. TypeError: 'module' object is not callable",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/208:498,log,logging,498,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/208,5,['log'],"['logarithmized', 'logg', 'logging']"
Testability,"Hi,; I'd like to plot a bunch of figures using the sc.pl.xx functions.; Is there some solution to suppress the Warning message during saving the figure?; the warning looks like that:; ```; WARNING: saving figure to file /home/test/figure/umap.marker1.png; WARNING: saving figure to file /home/test/figure/umap.marker2.png; WARNING: saving figure to file /home/test/figure/umap.marker3.png; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2238:226,test,test,226,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2238,3,['test'],['test']
Testability,"Hi,; I'm encountering an error when trying to write result file, after perform cell cycle score.; After normalizing, I import cell cycle file and perform the score:. `cc_genes=[gene.strip() for gene in open('[my_cell_cycle_genes]')]; s_genes=[g for g in cc_genes[:43] if g in adata.var_names]; g2m_genes=[g for g in cc_genes[43:] if g in adata.var_names]; sc.tl.score_genes_cell_cycle(adata, s_genes=s_genes, g2m_genes=g2m_genes); `. The field 'phase' of the obs. matrix is of type object:; `adata.obs.phase.dtypes; dtype('O')`. When I write the annData object, I got the error:; `adata.write(results_file); ... storing 'phase' as categorical; TypeError: Categorical is not ordered for operation max; you can use .as_ordered() to change the Categorical to an ordered one`. and now the field 'phase' is categorical:; `adata.obs.phase.dtypes; CategoricalDtype(categories=['G1', 'G2M', 'S'], ordered=False)`. I can modify it as suggested, but it's converted into categorical when writing file again.; Following my version packages:; `sc.logging.print_versions(); scanpy==1.4.2 anndata==0.6.17 umap==0.3.7 numpy==1.16.3 scipy==1.2.1 pandas==0.24.2 scikit-learn==0.20.3 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1`. My annData, also on a subset of variables, is too big to attach here, but I could send you by email if you need it. Thanks a lot!; Raffaella",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/645:1034,log,logging,1034,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/645,1,['log'],['logging']
Testability,"Hi,; I'm using the version from the main branch ```scanpy==1.4.5.dev104+g1a5defb```, and got some warnings at start up:; ```py; import numpy as np; import pandas as pd; import matplotlib.pyplot as pl; from matplotlib import rcParams; import scanpy as sc; sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); sc.logging.print_versions(); ```. ```; /home/gzhang/packages/anaconda3/envs/monocle3/lib/python3.7/site-packages/scanpy/_utils.py:132: UserWarning: Found an util with public name: <function annotate_doc_types at 0x2ac365a5f200>; warnings.warn(f""Found an util with public name: {obj}""); /home/gzhang/packages/anaconda3/envs/monocle3/lib/python3.7/site-packages/scanpy/_utils.py:132: UserWarning: Found an util with public name: <function matrix at 0x2ac36c882950>; warnings.warn(f""Found an util with public name: {obj}""); /home/gzhang/packages/anaconda3/envs/monocle3/lib/python3.7/site-packages/scanpy/_utils.py:132: UserWarning: Found an util with public name: <function timeseries at 0x2ac36c897830>; warnings.warn(f""Found an util with public name: {obj}""); /home/gzhang/packages/anaconda3/envs/monocle3/lib/python3.7/site-packages/scanpy/_utils.py:132: UserWarning: Found an util with public name: <function timeseries_subplot at 0x2ac36c8977a0>; warnings.warn(f""Found an util with public name: {obj}""); /home/gzhang/packages/anaconda3/envs/monocle3/lib/python3.7/site-packages/scanpy/_utils.py:132: UserWarning: Found an util with public name: <function timeseries_as_heatmap at 0x2ac36c8978c0>; warnings.warn(f""Found an util with public name: {obj}""); ```. ```; scanpy==1.4.5.dev104+g1a5defb anndata==0.6.22.post1 umap==0.3.10 numpy==1.16.4 scipy==1.3.1 pandas==0.25.0 scikit-learn==0.21.2 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/840:344,log,logging,344,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/840,1,['log'],['logging']
Testability,"Hi,; Scanpy detect high variable genes with normalized (but not logarithmized) data (refer to Clustering 3k PBMCs following a Seurat Tutorial), while Seurat do this by first normalize the raw data, then logarithmize the data and finally detect high variable genes, which one is better ? or both of them works well ?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/188:64,log,logarithmized,64,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/188,2,['log'],"['logarithmize', 'logarithmized']"
Testability,"Hi,; Thank you for your amazing package!. I ran ""sc.tl.rank_genes_groups"" on Jupyter Notebook, and when I did: . `pd.DataFrame(; {group + '_' + key[:1]: result[key][group]; for group in groups for key in ['names', 'pvals_adj', 'logfoldchanges']})`. I was only able to see 0.0 for p-values and adjusted p-values for all of the 2,000 highly variable genes, while logfoldchanges showed 6 decimal places like 1.816276. . The version of Scanpy that I am using is 1.7.2, and I was wondering if there was a way to see more decimal places for p-values and adjusted p-values, like in the form of 3.642456e-222 in your tutorial. If this is not a formatting problem, do you think the Wilcoxon test gave me 0.0 for all the highly variable genes? ; Based on sc.pl.rank_genes_groups, the scores for 25 genes per cluster are pretty high though (most of them are in a range of 100-200). I am pretty new to python and scanpy, so your advice will be greatly helpful.; Thank you!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1869:228,log,logfoldchanges,228,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1869,3,"['log', 'test']","['logfoldchanges', 'test']"
Testability,"Hi,; Thanks a lot for the library. We're having some issues with Wilcoxon-Rank-Sum test in `rank_genes_groups`. And I noticed a suspicious code in the [implementation](https://github.com/theislab/scanpy/blob/9b71dab77768fe0eb8b86aed473bee76b3aefd8e/scanpy/tools/_rank_genes_groups.py#L311):; ```; scores[left:right] = np.sum(ranks.loc[0:n_active, :]); ```. Shouldn't it be `.iloc`?. Additionally, it seems there is no tie correction in the code. I think for sparse data correction this could be an issue. ![image](https://user-images.githubusercontent.com/671660/59773834-9ac3d180-92ae-11e9-9530-b8d271bd58e5.png). There is an [implementation](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.tiecorrect.html?highlight=tiecorrect#scipy.stats.tiecorrect) of `tiecorrect` in scipy. Thanks,; Iakov",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/698:83,test,test,83,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/698,1,['test'],['test']
Testability,"Hi,; currently, our notebooks tests fail (see https://travis-ci.com/github/theislab/cellrank_notebooks/jobs/357647707) because of missing `exists_ok` in `mkdir`.; `_check_datafile_present_and_download` eventually calls `_download` (where `exists_ok=True`), so I've deferred creation + logging of the directory to `_download`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1305:30,test,tests,30,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1305,2,"['log', 'test']","['logging', 'tests']"
Testability,"Hi,; the parameter `log_transformed` looks as it's not used inside the method.; Is it a stub or is it used in other ways?. https://github.com/theislab/scanpy/blob/9b71dab77768fe0eb8b86aed473bee76b3aefd8e/scanpy/tools/_rank_genes_groups.py#L28",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/671:88,stub,stub,88,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/671,1,['stub'],['stub']
Testability,"Hi. I have a question. I am using the scanorama for integrating multiple datasets. In my use-case, I will have a new dataset again. The question is, is there any way to transfer the results of scanorama to the new dataset? Or should I retrain everything again. This is also important if one has a train and test set. Ideally, you do not want to use the test set to use in the data integration training and only use the already trained transformation on the test data. . I am wondering if there is a solution for these use-cases? Would you please help us with that. Cheers; Ali",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2162:307,test,test,307,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2162,3,['test'],['test']
Testability,"Hi. I have successfully installed scanpy but ; ImportError Traceback (most recent call last); <ipython-input-5-99fcf407c387> in <module>; ----> 1 import scvelo as scv; 2 import scanpy as sc; 3 import numpy as np. ~/anaconda3/lib/python3.7/site-packages/scvelo/__init__.py in <module>; 14 del version; 15 ; ---> 16 from .read_load import AnnData, read, read_loom, load, read_csv, get_df, DataFrame; 17 from .preprocessing.neighbors import Neighbors; 18 from .tools.run import run_all, test. ~/anaconda3/lib/python3.7/site-packages/scvelo/read_load.py in <module>; 10 from scipy.sparse import issparse; 11 from anndata import AnnData; ---> 12 from scanpy import read, read_loom; 13 ; 14 . ImportError: cannot import name 'read' from 'scanpy' (unknown location). Would you please help me to fix this problem. Thank you",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1433:484,test,test,484,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1433,1,['test'],['test']
Testability,"Hia everyone, this should actually make`hatch test -i deps=min` work even on Macbooks. Maybe there’s a way to put the constraint file inside of the venv, then it’ll survive reboots on Linux. I tagged you all because I thought you might be interested in this.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3337:46,test,test,46,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3337,1,['test'],['test']
Testability,"Hi，here is a bug in the funtion named ""scanpy.tl.rank_genes_groups"". I tried to filter the genes starting with ""HLA"", then I used ""scanpy.tl.rank_genes_groups"" to check the marker genes in each group. However, the genes starting with ""HLA"" still existed. ### Minimal code sample (that we can copy&paste without having any data). ```python; no_HLA_genes =~adata.var_names.str.startswith(('HLA')); adata = adata[:, no_HLA_genes].copy(); print(adata.var_names[adata.var_names.str.startswith(('HLA'))]); ```; output: Index([], dtype='object'). ```python; sc.tl.rank_genes_groups(adata , 'leiden_r2', method='wilcoxon',n_genes=-1); pd.DataFrame(adata.uns['rank_genes_groups']['names']).head(20); result = adata.uns['rank_genes_groups']; groups = result['names'].dtype.names; pd.DataFrame(; {group + '_' + key[:1]: result[key][group]; for group in groups for key in ['names','logfoldchanges']}).head(20); ```; ![image](https://user-images.githubusercontent.com/53402047/96684056-8feee480-13ad-11eb-9aef-00858ce3394e.png). #### Versions. <details>; scanpy==1.5.1 anndata==0.7.1 umap==0.4.6 numpy==1.17.3 scipy==1.5.2 pandas==0.23.4 scikit-learn==0.23.2 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.7.0 leidenalg==0.8.0. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1461:870,log,logfoldchanges,870,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1461,1,['log'],['logfoldchanges']
Testability,"Howdy y'all, working on a tool to convert packages to JSON and noticed there were some functions missing their parameters in the docstring. I've updated a few that were missing for better pydoc accessibility. All param descriptions were either copied from other similar param or made based on their functionality. - [x] Tests included or not required because:. Docstring updates only. - [x] Release notes not necessary because:. No changes to logic",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2888:320,Test,Tests,320,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2888,2,"['Test', 'log']","['Tests', 'logic']"
Testability,"I added UMAP support for visualization \o/ Here is how MNIST ""single cells"" look like:. ![image](https://user-images.githubusercontent.com/1140359/36549038-bee9d1c4-17bf-11e8-9383-19a70c9ee018.png). ![image](https://user-images.githubusercontent.com/1140359/36549046-c74cbcb4-17bf-11e8-9d8f-595dc7be3e8c.png). I'm not so familiar with code sytle and variable naming etc. yet, and I haven't fully tested things like additional umap kwargs ~and 3d visuazliation~ etc. but let's keep PR here and resolve things along the way.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/92:396,test,tested,396,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/92,1,['test'],['tested']
Testability,"I added a method for programmatic retrieval of mitochondrial gene symbols through BioMart (instead of using a regular expression, this may be less error-prone and constantly up-to-date).; Let me know if you are interested in merging it, and if the code style is acceptable for this library.; I was unsure on how to test it, in case do you have any suggestions?. Thanks,; Francesco",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/141:315,test,test,315,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/141,1,['test'],['test']
Testability,I allowed the 'resolution' parameter to be used in Louvain clustering when flavor='rapids'. The resolution parameter works with cuGraph Louvain clustering: https://docs.rapids.ai/api/cugraph/stable/api.html#module-cugraph.community.louvain. Tested that the function works and docs are built correctly.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1805:241,Test,Tested,241,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1805,1,['Test'],['Tested']
Testability,I also re-activated tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/60:20,test,tests,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/60,1,['test'],['tests']
Testability,"I am fairly new with using scanpy, and so I may be performing this incorrectly. I encountered an error when trying to create a backed AnnData object from an h5ad file, and then logarithmizing the data matrix within the object using scanpy.pp.log1p. However I get an error within the AnnData object code because the preprocessing/_simple.py script is not passing a filename in the copy() function. Right now my current workaround is to create the AnnData object as non-backed, do the log1p, and then create a ""filename"" property to the AnnData object afterwards to make it backed for other scanpy functions. ### Example; ```python; import scanpy as sc. dataset_path = ""/path/to/test/data.h5ad"" # Subbing out actual filenames for data; adata = sc.read_h5ad(dataset_path, backed='r'); print(adata) # To ensure there is a backed filepath. adata.raw = sc.pp.log1p(adata, copy=True) # Error is here; ```. #### Error output; ```pytb; # I printed the AnnData object to ensure it was backed; AnnData object with n_obs × n_vars = 4166 × 16852 backed at '/tmp/1b12dde9-1762-7564-8fbd-1b07b750505f.h5ad'; obs: 'cell_type', 'barcode', 'tSNE_1', 'tSNE_2', 'replicate', 'louvain', 'n_genes', 'percent_mito', 'n_counts'; var: 'gene_symbol', 'n_cells'; obsm: 'X_tsne'. # Actual error after calling log1p; Traceback (most recent call last):; File ""log1p_test.cgi"", line 129, in <module>; main(); File ""log1p_test.cgi"", line 81, in main; adata.raw = sc.pp.log1p(adata, copy=True); File ""/opt/Python-3.7.3/lib/python3.7/site-packages/scanpy/preprocessing/_simple.py"", line 292, in log1p; data = data.copy(); File ""/opt/Python-3.7.3/lib/python3.7/site-packages/anndata/_core/anndata.py"", line 1457, in copy; ""To copy an AnnData object in backed mode, ""; ValueError: To copy an AnnData object in backed mode, pass a filename: `.copy(filename='myfilename.h5ad')`.; ```. #### Versions:; scanpy==1.4.6 anndata==0.7.1 umap==0.3.10 numpy==1.16.3 scipy==1.4.1 pandas==0.24.2 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1153:177,log,logarithmizing,177,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1153,2,"['log', 'test']","['logarithmizing', 'test']"
Testability,"I am not sure if it has been already addressed.; This should fix the following import error of scanpy from master, due to missing `__init__.py` in external. Probably a more clean solution would be to wrap the import for external in a try/except block. ```python; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); in ; ----> 1 import scanpy as sc; 2 sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); 3 sc.settings.set_figure_params(dpi=200) # low dpi (dots per inch) yields small inline figures; 4 sc.settings.figdir = out('fig_supp'). ~/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/__init__.py in ; 31 from . import preprocessing as pp; 32 from . import plotting as pl; ---> 33 from . import datasets, logging, queries, settings, external; 34 ; 35 from anndata import AnnData. ~/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/external/__init__.py in ; ----> 1 from . import tl; 2 from . import pl; 3 from . import pp; 4 ; 5 from .. import _exporting as exporting. ~/.pyenv/versions/3.6.5/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/external/tl.py in ; 2 from ..tools._phate import phate; 3 from ..tools._phenograph import phenograph; ----> 4 from ._tools._palantir import palantir. ModuleNotFoundError: No module named 'scanpy.external._tools'; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/585:862,log,logging,862,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/585,1,['log'],['logging']
Testability,"I can't install MulticoreTSNE, and it may not even work on python >3.6. Since we want to drop 3.6 support (#1697), it would be good to stop recommending it, and pass the n_jobs parameter to sklearn's tsne. This PR attempts to do that, along with a bunch of deprecation warnings. I've also bumped the sklearn dependency to make sure TSNE is multithreaded. Metric was added to test if n_jobs was working. Either way, it seems to be using all the cpu on my laptop. Not sure what's up with that. ## TODO:. - ~~[ ] Figure out how to get n_jobs to actually limit cpu usage~~ Leaving this up to sklearn; - [x] Test metric; - [x] Test deprecations",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1854:375,test,test,375,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1854,3,"['Test', 'test']","['Test', 'test']"
Testability,"I don't know what changes caused this, but now there are 2 problems with test_preprocessing_distributed.py. When `adata_dist.X` is a dask array, `adata_dist.X.chunks` is `((2000, 2000, 2000, 2000, 2000), (1000,))`. It leads to an error in `adata.write_zarr(temp_store, chunks)` because zarr chunks should be a tuple with an integer entry per dimension, not a tuple of tuples. The second problem is that `adata_dist.X.to_zarr(temp_store.dir_path(""X""))` causes an error because there is already `'X'` in `temp_store`, it needs to be overwritten. This pr removes these problems but maybe logic of the function should be changed somehow instead of the test.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/963:585,log,logic,585,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/963,2,"['log', 'test']","['logic', 'test']"
Testability,I expect unrelated test fails; see #162,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/161:19,test,test,19,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/161,1,['test'],['test']
Testability,"I find this method to be the most conceptually straightforward and it gives great results in my tests. I have a rough implementation in python. I see that making a PR would be more involved as the code relies on log-transformed data, while the Seurat method should be on the raw counts. I also understand that adding `rpy2` to scanpy could be a bit challenging so I have a close approximation with the stats models library. ```python; import statsmodels.api as sm; def seurat_v3_highly_variable_genes(adata, n_top_genes=4000, use_lowess=False):; norm_gene_vars = []; del_batch = False; if ""batch"" not in adata.obs_keys():; del_batch = True; adata.obs[""batch""] = np.zeros((adata.X.shape[0])); for b in np.unique(adata.obs[""batch""]):; var = adata[adata.obs[""batch""] == b].X.var(0); print(var.shape); mean = adata[adata.obs[""batch""] == b].X.mean(0); estimat_var = np.zeros((adata.X.shape[1])). y = np.log10(var); x = np.log10(mean); if use_lowess is True:; lowess = sm.nonparametric.lowess; # output is sorted by x; v = lowess(y, x, frac=0.15); estimat_var[np.argsort(x)] = v[:, 1]; else:; estimat_var = loess(y, x). norm_values = (adata[adata.obs[""batch""] == b].X - mean) / np.sqrt(10 ** estimat_var); # as in seurat paper, clip max values; norm_values = np.clip(; norm_values, None, np.sqrt(np.sum(adata.obs[""batch""] == b)); ); norm_gene_var = norm_values.var(0); norm_gene_vars.append(norm_gene_var.reshape(1, -1)). norm_gene_vars = np.concatenate(norm_gene_vars, axis=0); ranked_norm_gene_vars = np.argsort(np.argsort(norm_gene_vars, axis=1), axis=1); median_norm_gene_vars = np.median(norm_gene_vars, axis=0); median_ranked = np.median(ranked_norm_gene_vars, axis=0). num_batches_high_var = np.sum(; ranked_norm_gene_vars >= (adata.X.shape[1] - n_top_genes), axis=0; ); df = pd.DataFrame(index=np.array(adata.var_names)); df[""highly_variable_n_batches""] = num_batches_high_var; df[""highly_variable_median_rank""] = median_ranked. df[""highly_variable_median_variance""] = median_norm_gene_vars; df.sort",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/993:96,test,tests,96,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/993,2,"['log', 'test']","['log-transformed', 'tests']"
Testability,"I get inconsistent results when I use the parameter groups in `rank_genes_groups`. What I want to achieve is to focus on some groups for the DE genes computation. However, the results I get using the parameter groups, to select a subset of groups, are the same, in terms of DE genes, with respect to using the full set of groups. For example, l get different results if I run the following two snippets of code (which should provide instead the same set of DE genes).; ``` python; # Subsetting should be done by method; sc.tl.rank_genes_groups(; adata=adata,; groupby='leiden',; use_raw=False,; method='t-test',; groups=['1', '2'],; ); ```. ``` python; # Explicit subsetting; adata_f = adata[adata.obs['leiden'].isin(['1','2'])].copy(); sc.tl.rank_genes_groups(; adata=adata_f,; groupby='leiden',; use_raw=False,; method='t-test',; ); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/842:605,test,test,605,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/842,2,['test'],['test']
Testability,"I get the error below when trying to run the following:. `>>> sc.tl.rank_genes_groups(adata, 'louvain', groups=['5','16','19','30'], reference='0', method='wilcoxon')`. ```bash; C:\Users\myuser\Anaconda3\lib\site-packages\scanpy\tools\_rank_genes_groups.py:298: RuntimeWarning: overflow encountered in long_scalars; (n_active * m_active * (n_active + m_active + 1) / 12)); ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-160-dd19114ff660> in <module>; 1 #adata.obs['groups'] = ['group 1'= ['0'], 'group 2'= ['5','16','19','30']]; ----> 2 sc.tl.rank_genes_groups(adata, 'louvain', groups=['5','16','19','30'], reference='0', method='wilcoxon') # wilcoxon-rank-sum/mann-whitney u test, the default of Seurat. ~\Anaconda3\lib\site-packages\scanpy\tools\_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, **kwds); 296 ; 297 scores = (scores - (n_active * (n_active + m_active + 1) / 2)) / sqrt(; --> 298 (n_active * m_active * (n_active + m_active + 1) / 12)); 299 scores[np.isnan(scores)] = 0; 300 pvals = 2 * stats.distributions.norm.sf(np.abs(scores)). ValueError: math domain error; ```. Here `adata` is real data from our lab, not the tutorial data. Have been trying to replicate the cluster analysis tutorial. All previous steps work fine. Interestingly, if I remove group '5' from the list of groups it works. Also, this error only happens with the `wilcoxon` method, not with `t-test`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/530:768,test,test,768,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/530,2,['test'],['test']
Testability,"I have a short script which reads a tab file and writes h5 using scanpy. I've found that unless I provide a full path to the write() function or at least a relative one via ""./foo.h5"" it fails. Simplified version:. ```py; adata = sc.read(args.input_file, ext='txt', first_column_names=True).transpose(); adata.write('./test.h5') # this works; adata.write('test2.h5') # this fails; ```. Here's the stack:. ```pytb; WARNING: This might be very slow. Consider passing `cache=True`, which enables much faster reading from a cache file.; Traceback (most recent call last):; File ""./convert_gear_group_single_cell_to_hdf5.py"", line 47, in <module>; main(); File ""./convert_gear_group_single_cell_to_hdf5.py"", line 43, in main; adata.write('test2.h5'); File ""/usr/local/lib/python3.5/dist-packages/anndata/base.py"", line 1471, in write; compression=compression, compression_opts=compression_opts); File ""/usr/local/lib/python3.5/dist-packages/anndata/base.py"", line 1513, in _write_h5ad; os.makedirs(os.path.dirname(filename)); File ""/usr/lib/python3.5/os.py"", line 241, in makedirs; mkdir(name, mode); FileNotFoundError: [Errno 2] No such file or directory: ''; _____________________________. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/66:319,test,test,319,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/66,1,['test'],['test']
Testability,"I have modified the following files in `scanpy` version `1.4`. 1. _anndata.py (added support for weighted sampling data , where each row has its non-zero weight, changes made for dotPlot, violinPlot and heatmap). 2. _rank_genes_groups ( To find marker genes for data where each row has different non-zero weight, I have modified 't-test' and 'wilcoxon'). Suggestion : . For weighted sampling data one can modify the PCA as well, I used matlab pca for weighted data. Thanks; Khalid",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/644:332,test,test,332,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/644,1,['test'],['test']
Testability,I have tests which are being flaky locally which is making it quite difficult to debug other issues. This is me trying to fix some of those problems.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2106:7,test,tests,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2106,1,['test'],['tests']
Testability,"I just tried; ```python; import scanpy.api as sc; sc.queries.mitochondrial_genes('www.ensembl.org', 'strange_organism'); ```; I would expect scanpy complains that it does not know `'strange_organism'`, but I get the error ; ```python; ---------------------------------------------------------------------------; NameError Traceback (most recent call last); <ipython-input-13-6a41b361ab41> in <module>(); 1 import scanpy.api as sc; ----> 2 sc.queries.mitochondrial_genes('www.ensembl.org', 'drerio'). ~/software/scanpy/scanpy/queries/__init__.py in mitochondrial_genes(host, org); 34 s.add_attribute_to_xml('mgi_symbol'); 35 else:; ---> 36 logg.msg('organism ', str(org), ' is unavailable', v=4, no_indent=True); 37 return None; 38 s.add_attribute_to_xml('chromosome_name'). NameError: name 'logg' is not defined; ```; It seems to me like `queries/__init__.py` misses an `from .. import logging as logg` statement. Would maybe also make sense to show the the message that an organism is not available at verbosity level 1 instead of 4?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/258:639,log,logg,639,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/258,4,['log'],"['logg', 'logging']"
Testability,"I know this (quite ancient) pull request has been open (#403), but I wasn't sure on its status. I think the consensus was to wait for sklearn to integrate the necessary changes? If that's still the case, then please feel free to remove this PR. Here I make use of scipy's extremely nifty [LinearOperator](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.LinearOperator.html) class to customize the dot product functions for an input sparse matrix. In this case, the 'custom' dot product performs implicit mean centering. In my benchmarks, performing implicit mean centering in this way does not affect the runtime whatsoever. However, this approach has to use [svds](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.svds.html), for which randomized SVD is not implemented. So we have to use 'arpack', which can be significantly slower (but not intractably so.... in my hands, I could still do PCA on datasets of 200k+ cells in minutes, and it sure beats densifying the data, if you want more thorough benchmarks I am happy to generate them!). The way I incorporated this functionality into scanpy/preprocessing/_simple.py might be questionable, and would love any suggestions or advice on how to better integrate this if there is interest in pushing this PR through. Let me know!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1066:551,benchmark,benchmarks,551,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1066,2,['benchmark'],['benchmarks']
Testability,"I like the `calculateQCMetrics` function from [`scater`](https://bioconductor.org/packages/release/bioc/html/scater.html), and have had a half finished python version drifting between my notebooks for a while. Is there is interest in adding this to scanpy?. I'm aiming to mostly copy the interface of `calculateQCMetrics` while being memory efficient, since this is likely run before filtering. # Todo. - [x] Figure out how I want to deal with more types of sparse matrix; - [x] Add `feature_control` argument, possibly `variable_control`; - [x] Clean up and expand tests; - [x] Expand documentation. # Questions. * What's up with sparse matrix choice in scanpy? Is `adata.X` expected to be any of the matrix types, or is it more limited? Just trying to figure out how much effort I should put into that.; * Are there any additional metrics that could be useful?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/316:566,test,tests,566,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/316,1,['test'],['tests']
Testability,"I noticed that `pl.diffmap` interacts differently with the `show` and `save` options than most of the other plotting functions. Namely, if both `show` and `settings.autoshow` are true, `pl.diffmap` saves but does not show. Most of the other functions will both save and show. I looked in the code a bit and it looks like this is because other plotting functions use `utils.savefig_or_show` versus `pl.diffmap` has some custom plotting logic (I assume because `pl.diffmap` allows multiple plots to be generated by passing a list to `components`). Changing:; ```python; if not settings.autosave and show: pl.show(); ```; to just:; ```python; if show: pl.show(); ```; should make `pl.diffmap` more consistent with the other plotting functions.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/227:435,log,logic,435,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/227,1,['log'],['logic']
Testability,"I simplified the `_prepare_dataframe code` by using `sc.get.df`. However, this change uncovered two issues with `sc.get.obs_df` that I have now addressed in this PR. . The most relevant is the case when the call to `sc.get.obs_df` contains keys with duplicates (e.g. `keys=['gene1', 'gene1']`). This case is not rare as for example in `sc.pl.dotplot` the same gene can be visualized several times, which requires calling `sc.get.obs_df` with keys that contain duplications. An example is when `sc.pl.rank_genes_groups_dotplot` is called and, frequently, the same gene appears as top up-regulated for more than one category. To address this, `sc.get.obs_df` removes all duplicates (which correspond to DataFrame columns) and after the DataFrame is complete, the duplicates are added back. A second problem was for non-unique adata.obs indices which should be a rare situation. However, it turns out that one of the test adata object used in `test_plotting` have this issue. Also, for the goal of this PR (allow adata.obs.index as groupby option) it could be expected that the index may not be unique. . In general, non unique obs indices are ok as long as `.obs` DataFrame is not joined or merge based on index. However, because internally in `sc.get.obs_df` the DataFrames are merged using `adata.obs.index` this non-unique indices caused an increase in rows due to multiple matching. To fix this, the code now checks for unique index, and if it is not unique then a temporary index is added to allow proper join operations and then the non-unique index is put back.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1583:914,test,test,914,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1583,1,['test'],['test']
Testability,"I think this could use a consolidated effort for consistent behavior. Especially since testing whether it works will probably have some common patterns. In some cases `Raw` will need to be an option. I like the convention of having the arguments `use_raw`, `layers`, and (when appropriate) `obsm_key`/ `varm_key`. With these at most one of the values can be not None, and if all are None (the default) `X` is used. An alternative convention is `use_rep: Optional[str]`. I’m less a fan of this due to potential key collisions. Some relevant issues/ prs: #826 #801 #730",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/828:87,test,testing,87,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/828,1,['test'],['testing']
Testability,"I think this should fix it – it fixes it on my machine and the tests pass. There's no reason to access raw if `use_raw` isn't passed, right?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/578:63,test,tests,63,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/578,1,['test'],['tests']
Testability,"I think we should introduce a standardized “mask” argument to scanpy functions. This would be a boolean array (or reference to a boolean array in `obs`/ `var`) which masks out certain data entries. This can be thought of as a generalization of how highly variable genes is handled. As an example:. ```python; sc.pp.pca(adata, use_highly_variable=True); ```. Would be equivalent to:. ```python; sc.pp.pca(adata, mask=""highly_variable""); # or; sc.pp.pca(adata, mask=adata.obs[""highly_variable""]); ```. One of the big advantages of making this more widespread is that tasks which previously required using `.raw` or creating new anndata objects will be much easier. Some uses for this change:. ### Plotting. A big one is plotting. Right now if you want to show gene expression for a subset of cells, you have to manually work with the Matplotlib Axes:. ```python; ax = sc.pl.umap(pbmc, show=False); sc.pl.umap(; pbmc[pbmc.obs[""louvain""].isin(['CD4 T cells', 'B cells', 'CD8 T cells',])],; color=""LDHB"",; ax=ax,; ); ```. If a user could provide a mask, this could be reduced, and would make plotting more than one value possible:. ```python; sc.pl.umap(; pbmc,; color=['LDHB', 'LYZ', 'CD79A’],; mask=pbmc.obs[""louvain""].isin(['CD4 T cells', 'B cells', 'CD8 T cells’,]),; ); ```. ### Other uses. This has come up before in a few contexts:. * Performing normalization on just some variables https://github.com/scverse/scanpy/issues/2142#issuecomment-1046729522; * Selecting a subset of variables for DE tests: https://github.com/scverse/scanpy/issues/1744; * See also https://github.com/scverse/scanpy/issues/748; * Changing use_raw https://github.com/scverse/scanpy/issues/1798#issuecomment-819998988. ## Implementation. I think this could fit quite well into the `sc.get` getter/ validation functions (https://github.com/scverse/scanpy/issues/828#issuecomment-560072919).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2234:1497,test,tests,1497,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2234,1,['test'],['tests']
Testability,"I think with a recent numpy or Pandas update, an if clause in sc.tl.dendrogram no longer works properly. . ```python; import numpy as np; import pandas as pd; import scanpy as sc. # Use pbmc3k dataset; adata = sc.datasets.pbmc3k(); sc.pp.filter_genes(adata, min_counts=1); sc.pp.log1p(adata); sc.pp.normalize_total(adata); sc.pp.highly_variable_genes(adata); sc.tl.pca(adata); sc.pp.neighbors(adata); sc.tl.leiden(adata); sc.tl.rank_genes_groups(adata, groupby='leiden'). # Save the ranks.; results_dict = dict(); for cluster_i in adata.uns['rank_genes_groups']['names'].dtype.names:; # print(cluster_i); # Get keys that we want from the dataframe.; data_keys = list(; set(['names', 'scores', 'logfoldchanges', 'pvals', 'pvals_adj']) &; set(adata.uns['rank_genes_groups'].keys()); ); # Build a table using these keys.; key_i = data_keys.pop(); results_dict[cluster_i] = pd.DataFrame(; row[cluster_i] for row in adata.uns['rank_genes_groups'][key_i]; ); results_dict[cluster_i].columns = [key_i]; for key_i in data_keys:; results_dict[cluster_i][key_i] = [; row[cluster_i] for row in adata.uns['rank_genes_groups'][key_i]; ]; results_dict[cluster_i]['cluster'] = cluster_i; marker_df = pd.concat(results_dict, ignore_index=True). marker_df = marker_df.sort_values(by=['scores'], ascending=False); # Make dataframe of the top 3 markers per cluster; marker_df_plt = marker_df.groupby('cluster').head(3); ; # here sc.tl.dendrogram will fail; _ = sc.pl.dotplot(; adata,; var_names=marker_df_plt['names'],; groupby='leiden',; dendrogram=True,; use_raw=False,; show=False,; color_map='Blues'; save='{}.png'.format('test'); ); ```. ```pytb; /lib/python3.6/site-packages/scanpy/tools/_dendrogram.py in dendrogram(adata, groupby, n_pcs, use_rep, var_names, use_raw, cor_method, linkage_method, optimal_ordering, key_added, inplace); 130 corr_matrix, method=linkage_method, optimal_ordering=optimal_ordering; 131 ); --> 132 dendro_info = sch.dendrogram(z_var, labels=categories, no_plot=True); 133; 134 # order o",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1300:694,log,logfoldchanges,694,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1300,1,['log'],['logfoldchanges']
Testability,"I tried to keep the resulting AnnData as compatible as possible with the Visium output, but it is still going to break sc.pl.spatial due to the lack of scale factors. In theory, we could calculate the scale factors ourselves, but that's probably not useful for plotting anyway, since the current spatial plotting function also requires spot sizes, which we don't have. I tested it on the example Xenium data set from the 10x web site. The images in this data set are JPEG2000-compressed, which is not supported by Pillow. Manually creating an image with zlib compression and passing that to the reader works. I don't know if the 10x Xenium software can only output this type of image file or if it can also produce TIFFs with another compression.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2483:371,test,tested,371,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2483,1,['test'],['tested']
Testability,"I try to use `sc.pl.pca` selecting components. According to the documentation the following should work:. ```python; import scanpy.api as sc; sc.logging.print_versions(); adata = sc.datasets.blobs(); sc.tl.pca(adata); sc.pl.pca(adata, components=['1,2', '2,3']); ```. However, I get an error. The output of the code above is:. ```python; scanpy==0+unknown anndata==0.6.9 numpy==1.14.5 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.19.1 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 ; ... storing 'blobs' as categorical. ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-16-4cd21e9edf25> in <module>(); 3 adata = sc.datasets.blobs(); 4 sc.tl.pca(adata); ----> 5 sc.pl.pca(adata, components=['1,2', '2,3']). ~/software/scanpy/scanpy/plotting/tools/__init__.py in pca(adata, color, use_raw, sort_order, alpha, groups, components, projection, legend_loc, legend_fontsize, legend_fontweight, color_map, palette, right_margin, size, title, show, save, ax); 114 title=title,; 115 show=False,; --> 116 save=False, ax=ax); 117 utils.savefig_or_show('pca_scatter', show=show, save=save); 118 if show == False: return axs. ~/software/scanpy/scanpy/plotting/anndata.py in scatter(adata, x, y, color, use_raw, layers, sort_order, alpha, basis, groups, components, projection, legend_loc, legend_fontsize, legend_fontweight, color_map, palette, frameon, right_margin, left_margin, size, title, show, save, ax); 110 show=show,; 111 save=save,; --> 112 ax=ax); 113 elif x is not None and y is not None:; 114 if ((x in adata.obs.keys() or x in adata.var.index). ~/software/scanpy/scanpy/plotting/anndata.py in _scatter_obs(adata, x, y, color, use_raw, layers, sort_order, alpha, basis, groups, components, projection, legend_loc, legend_fontsize, legend_fontweight, color_map, palette, frameon, right_margin, left_margin, size, title, show, save, ax); 291 if components is None: components = '1,2' if '2d' in projection els",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/254:145,log,logging,145,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/254,1,['log'],['logging']
Testability,"I updated anndata to 0.8.0 and was not able to load my scanpy 1.8.2 properly. Any ideas?. ```; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_31935/912249142.py in <module>; ----> 1 import scanpy as sc. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/__init__.py in <module>; 12 # (start with settings as several tools are using it); 13 from ._settings import settings, Verbosity; ---> 14 from . import tools as tl; 15 from . import preprocessing as pp; 16 from . import plotting as pl. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/tools/__init__.py in <module>; 15 from ._leiden import leiden; 16 from ._louvain import louvain; ---> 17 from ._sim import sim; 18 from ._score_genes import score_genes, score_genes_cell_cycle; 19 from ._dendrogram import dendrogram. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/tools/_sim.py in <module>; 21 from anndata import AnnData; 22 ; ---> 23 from .. import _utils, readwrite, logging as logg; 24 from .._settings import settings; 25 from .._compat import Literal. ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/readwrite.py in <module>; 8 import pandas as pd; 9 from matplotlib.image import imread; ---> 10 import tables; 11 import anndata; 12 from anndata import (. ModuleNotFoundError: No module named 'tables'. ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2264:1053,log,logging,1053,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2264,2,['log'],"['logg', 'logging']"
Testability,"I updated the rank_genes_groups function to output p-values for t-tests and the wilcoxon rank-sum test, as discussed with @falexwolf in #159. ; The changes are outlined below:; - The t-test in the original file used a Welch t-test. I kept this, calculated the relevant degrees of freedom for a Welch test and then extracted the corresponding two-tailed p-value for the t-statistic (score). ; - The Wilcoxon test was originally done in chunks. To get the p-values I had to simplify this approach and use the ranksums function in scipy.stats. This caused me to loop through all of the genes being tested, which was fine for my dataset, but might need to be optimized for larger datasets.; - The adjusted p-values (pvals_adj) were calculated with a standard Bonferroni correction.; - All p-values are outputted and sorted the same way as 'names' or 'scores'. The only difference is that the p-values recarrays use float64 as a datatype to avoid converting a lot of the very small p-values to 0. Hope this is helpful!. Andrés",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/270:66,test,tests,66,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/270,7,['test'],"['test', 'tested', 'tests']"
Testability,"I was following Scanpy's tutorial for preprocessing and clustering the 3k PBMC data set, as seen [here](https://scanpy-tutorials.readthedocs.io/en/latest/pbmc3k.html). Unfortunately, many of the most informative marker genes are simply missing/discarded from the data set. Some of the genes a contributor has pointed out are missing from this set are: CD14, CD68, FTH1, SERPINA1, LYZ. Similar R tools, such as [rook/pagoda1](http://pklab.med.harvard.edu/cgi-bin/R/rook/10x.pbmc/index.html), have these genes displayed, some of them with quite high variance values (e.g. LYZ). Is this an issue with the tutorial itself, or is there a bug in scanpy that we are unaware of?. ```; >>> import anndata; >>> adata = anndata.read('./src/tests/test.h5ad'); >>> adata; AnnData object with n_obs × n_vars = 2638 × 1838; obs: 'n_genes', 'n_genes_by_counts', 'total_counts', 'total_counts_mt', 'pct_counts_mt', 'cell_ids'; var: 'gene_ids', 'n_cells', 'mt', 'n_cells_by_counts', 'mean_counts', 'pct_dropout_by_counts', 'total_counts', 'highly_variable', 'means', 'dispersions', 'dispersions_norm', 'mean', 'std', 'gene_names'; >>> adata.var; gene_ids n_cells mt n_cells_by_counts mean_counts ... dispersions dispersions_norm mean std gene_names; TNFRSF4 ENSG00000186827 155 False 155 0.077407 ... 2.086050 0.665406 -3.672069e-10 0.424481 TNFRSF4; CPSF3L ENSG00000127054 202 False 202 0.094815 ... 4.506987 2.955005 -2.372437e-10 0.460416 CPSF3L; ATAD3C ENSG00000215915 9 False 9 0.009259 ... 3.953486 4.352607 8.472988e-12 0.119465 ATAD3C; C1orf86 ENSG00000162585 501 False 501 0.227778 ... 2.713522 0.543183 3.389195e-10 0.685145 C1orf86; RER1 ENSG00000157916 608 False 608 0.298148 ... 3.447533 1.582528 7.696297e-11 0.736050 RER1; ... ... ... ... ... ... ... ... ... ... ... ...; ICOSLG ENSG00000160223 34 False 34 0.016667 ... 2.585818 1.652185 9.322493e-12 0.217672 ICOSLG; SUMO3 ENSG00000184900 570 False 570 0.292963 ... 4.046776 2.431045 -3.685750e-10 0.723121 SUMO3; SLC19A1 ENSG00000173638 31 False 31 0.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1338:729,test,tests,729,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1338,2,['test'],"['test', 'tests']"
Testability,"I was looking over normalize_total and saw some strange behaviour. Since it's such a common function, I think it's important that it has standard scanpy behaviour. To this end, this PR looks at cleanup up it's code. ### Addition. `layer` argument. A specific layer can now be normalized by itself. ### Deprecations. I've deprecated the `layers` and `layer_norm` argument. Normalizing multiple layers at once seems less useful than normalizing a specific layer. These seem like very specific use cases that are easy for user's to implement themselves, and are not common patterns in scanpy functions. ### TODO:. - [x] Tests for deprecations ; - [x] Scheduling of deprecations (deprecate in 1.8, remove in 1.9)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1667:617,Test,Tests,617,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1667,1,['Test'],['Tests']
Testability,"I was running this:; `sc.tl.filter_rank_genes_groups(adata, groupby='leiden')`; Which gave me this error:; ```; Filtering genes using: min_in_group_fraction: 0.25 min_fold_change: 2, max_out_group_fraction: 0.5. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); /tmp/ipykernel_30806/3135920018.py in <module>; ----> 1 sc.tl.filter_rank_genes_groups(adata, groupby='leiden'). ~/miniconda3/envs/flng/lib/python3.8/site-packages/scanpy/tools/_rank_genes_groups.py in filter_rank_genes_groups(adata, key, groupby, use_raw, log, key_added, min_in_group_fraction, min_fold_change, max_out_group_fraction); 586 # that is assigned *as column* to fraction_in_cluster_matrix to follow the; 587 # structure of the gene_names dataFrame; --> 588 fraction_in_cluster_matrix.loc[:, cluster] = fraction_obs.loc[True].values; 589 fraction_out_cluster_matrix.loc[:, cluster] = fraction_obs.loc[False].values; 590 . ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/core/indexing.py in __getitem__(self, key); 929 ; 930 maybe_callable = com.apply_if_callable(key, self.obj); --> 931 return self._getitem_axis(maybe_callable, axis=axis); 932 ; 933 def _is_scalar_access(self, key: tuple):. ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/core/indexing.py in _getitem_axis(self, key, axis); 1161 ; 1162 # fall thru to straight lookup; -> 1163 self._validate_key(key, axis); 1164 return self._get_label(key, axis=axis); 1165 . ~/miniconda3/envs/flng/lib/python3.8/site-packages/pandas/core/indexing.py in _validate_key(self, key, axis); 970 # boolean not in slice and with boolean index; 971 if isinstance(key, bool) and not is_bool_dtype(self.obj.index):; --> 972 raise KeyError(; 973 f""{key}: boolean label can not be used without a boolean index""; 974 ). KeyError: 'True: boolean label can not be used without a boolean index'. ```; Any ideas? I'm using Scanpy 1.5.0 and pandas 1.3.1. Thanks!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1990:590,log,log,590,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1990,1,['log'],['log']
Testability,"I would like to change the var name when plotting dotplot by setting the `gene_symbols` to the desired name. But this generates the NameError. Below is an example using the scanpy built-in dataset. ```python; adata = sc.datasets.pbmc68k_reduced(); ax = sc.pl.dotplot(adata, 'C1QA', groupby=['bulk_labels'], swap_axes=False, gene_symbols='TEST'); ```. ```pytb; ---------------------------------------------------------------------------; NameError Traceback (most recent call last); <ipython-input-45-206578ef4fd5> in <module>; 1 adata = sc.datasets.pbmc68k_reduced(); ----> 2 ax = sc.pl.dotplot(adata, 'C1QA', groupby=['bulk_labels'], swap_axes=False, gene_symbols='TEST'); 3 . ~/anaconda3/envs/scRNA/lib/python3.6/site-packages/scanpy/plotting/_dotplot.py in dotplot(adata, var_names, groupby, use_raw, log, num_categories, expression_cutoff, mean_only_expressed, cmap, dot_max, dot_min, standard_scale, smallest_dot, title, colorbar_title, size_title, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, swap_axes, dot_color_df, show, save, ax, return_fig, **kwds); 930 dot_color_df=dot_color_df,; 931 ax=ax,; --> 932 **kwds,; 933 ); 934 . ~/anaconda3/envs/scRNA/lib/python3.6/site-packages/scanpy/plotting/_dotplot.py in __init__(self, adata, var_names, groupby, use_raw, log, num_categories, categories_order, title, figsize, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, expression_cutoff, mean_only_expressed, standard_scale, dot_color_df, dot_size_df, ax, **kwds); 142 layer=layer,; 143 ax=ax,; --> 144 **kwds,; 145 ); 146 . ~/anaconda3/envs/scRNA/lib/python3.6/site-packages/scanpy/plotting/_baseplot_class.py in __init__(self, adata, var_names, groupby, use_raw, log, num_categories, categories_order, title, figsize, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, ax, **kwds); 111 num_categories,; 112 layer=layer,; --> 113 gene_symbols=gene_symbols,; 114 ); 115 . ~/anaconda",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1636:338,TEST,TEST,338,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1636,3,"['TEST', 'log']","['TEST', 'log']"
Testability,"I'm doing the same pathway I've done on hundreds of datasets but this particular one fails when I try to calculate PCA with:. ```; /opt/Python-3.7.0/lib/python3.7/site-packages/scipy/sparse/linalg/eigen/arpack/arpack.py in svds(A, k, ncv, tol, which, v0, maxiter, return_singular_vectors); 1768 ; 1769 if k <= 0 or k >= min(n, m):; -> 1770 raise ValueError(""k must be between 1 and min(A.shape), k={0}, A.shape={1}"".format(k, A.shape)); 1771 ; 1772 if isinstance(A, LinearOperator):. ValueError: k must be between 1 and min(A.shape), k=50, A.shape=(48, 2066); ```; Looking into this, I looped through adata.var['n_cells'] and no values were greater than 48, so I'm not sure why this is happening. Dropbox link with both the input test [H5AD file and notebook here](https://www.dropbox.com/sh/t2qb7ffz5msyc5e/AAD256Vs6HqLwNBjcBeCsGVGa?dl=0). Am I missing as simple error?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/331:730,test,test,730,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/331,1,['test'],['test']
Testability,"I'm going to use this PR to test some modifications to the azure pipelines. First off, can we lint in the same job as running tests.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1517:28,test,test,28,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1517,2,['test'],"['test', 'tests']"
Testability,"I'm trying to load the GSE164690 data using sc.read_10x_h5(), for which I'm including the path to the folders which contain the barcodes.tsv, features.tsv and matrix.mtx but I'm getting the IsADirectoryError every time I run the function. . `; adatas = sc.read_10x_h5('GSE164690_RAW/GSM5017021_HN01_PBL/'); reading GSE164690_RAW/GSM5017021_HN01_PBL/; ---------------------------------------------------------------------------; IsADirectoryError Traceback (most recent call last); Input In [3], in <cell line: 1>(); ----> 1 adatas = sc.read_10x_h5('GSE164690_RAW/GSM5017021_HN01_PBL/'). File ~/opt/anaconda3/lib/python3.9/site-packages/scanpy/readwrite.py:180, in read_10x_h5(filename, genome, gex_only, backup_url); 178 if not is_present:; 179 logg.debug(f'... did not find original file {filename}'); --> 180 with h5py.File(str(filename), 'r') as f:; 181 v3 = '/matrix' in f; 182 if v3:. File ~/opt/anaconda3/lib/python3.9/site-packages/h5py/_hl/files.py:507, in File.__init__(self, name, mode, driver, libver, userblock_size, swmr, rdcc_nslots, rdcc_nbytes, rdcc_w0, track_order, fs_strategy, fs_persist, fs_threshold, fs_page_size, page_buf_size, min_meta_keep, min_raw_keep, locking, **kwds); 502 fapl = make_fapl(driver, libver, rdcc_nslots, rdcc_nbytes, rdcc_w0,; 503 locking, page_buf_size, min_meta_keep, min_raw_keep, **kwds); 504 fcpl = make_fcpl(track_order=track_order, fs_strategy=fs_strategy,; 505 fs_persist=fs_persist, fs_threshold=fs_threshold,; 506 fs_page_size=fs_page_size); --> 507 fid = make_fid(name, mode, userblock_size, fapl, fcpl, swmr=swmr); 509 if isinstance(libver, tuple):; 510 self._libver = libver. File ~/opt/anaconda3/lib/python3.9/site-packages/h5py/_hl/files.py:220, in make_fid(name, mode, userblock_size, fapl, fcpl, swmr); 218 if swmr and swmr_support:; 219 flags |= h5f.ACC_SWMR_READ; --> 220 fid = h5f.open(name, flags, fapl=fapl); 221 elif mode == 'r+':; 222 fid = h5f.open(name, h5f.ACC_RDWR, fapl=fapl). File h5py/_objects.pyx:54, in h5py._objects.with_ph",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2328:745,log,logg,745,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2328,1,['log'],['logg']
Testability,"I'm trying to run BBKNN on a AnnData object built with `scanpy==1.4.6` but it's failing when getting the graph. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; sc.external.pp.bbknn(; adata,; batch_key=""batch"",; n_pcs=21,; neighbors_within_batch=5,; trim=0); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; Command error:; Traceback (most recent call last):; File ""~/sc_batch_effect_correction.py"", line 160, in <module>; trim=args.trim); File ""/opt/venv/lib/python3.7/site-packages/scanpy/external/pp/_bbknn.py"", line 120, in bbknn; **kwargs,; File ""/opt/venv/lib/python3.7/site-packages/bbknn/__init__.py"", line 281, in bbknn; approx=approx, metric=metric, **kwargs); File ""/opt/venv/lib/python3.7/site-packages/bbknn/__init__.py"", line 325, in bbknn_pca_matrix; neighbors_within_batch=neighbors_within_batch); File ""/opt/venv/lib/python3.7/site-packages/bbknn/__init__.py"", line 168, in get_graph; knn_indices[ind_from[:,None],col_range[None,:]] = ckdout[1]; ValueError: shape mismatch: value array of shape (240,4) could not be broadcast to indexing result of shape (240,5); ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.6 anndata==0.7.1 umap==0.4.1 numpy==1.18.2 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.11.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1222:1235,log,logging,1235,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1222,1,['log'],['logging']
Testability,"I'm trying to use an array for the size argument to my umap/scatterplot with the following code; ```; import scanpy.api as sc; import numpy as np; sc.settings.figdir = ""testdir""; sc.settings.file_format_figs = ""png""; sc.logging.print_versions(); ```; With these libraries; `scanpy==1.3.7 anndata==0.6.16 numpy==1.16.1 scipy==1.2.0 pandas==0.23.4 scikit-learn==0.20.2 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 `. Running the following code bit. I use some dummy variable for size.; ```; somedata = sc.datasets.paul15(); sc.pp.pca(somedata); sc.pp.neighbors(somedata, n_neighbors=4, n_pcs=20); sc.tl.umap(somedata, spread=1, min_dist=0.1, random_state=42); sc.tl.leiden(somedata, resolution=0.5, random_state=42); z = np.abs(somedata.obsm['X_pca'][:,0])**1; sc.pl.umap(somedata, color=['1110007C09Rik'], size=z, cmap='viridis', save='continuous_expr.png'); sc.pl.umap(somedata, color=['leiden'], size=z, cmap='viridis', save='group_value.png'); ```; I get the following two figure as output; ![umapcontinuous_expr](https://user-images.githubusercontent.com/715716/52612879-951a3300-2e59-11e9-9dad-a8afc60a4b54.png); ![umapgroup_value](https://user-images.githubusercontent.com/715716/52612880-95b2c980-2e59-11e9-9a44-81dd84e3274d.png). I would expect to see a similar size allocation/distribution but they are very different. I Could not really find a cause for this looking at the scatter plot function so it might be somewhere deeper. . I'm need help with getting some grasp on how to interpret this issue and if possible how to map the size argument to the same data points over different plots.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/478:169,test,testdir,169,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/478,2,"['log', 'test']","['logging', 'testdir']"
Testability,"I'm unable to complete the [Nestrorowa et al. 2016](https://nbviewer.jupyter.org/github/theislab/paga/blob/master/blood/nestorowa16/nestorowa16.ipynb) paga tutorial. On ln[3] . ```; adata.raw = adata; sc.pp.recipe_weinreb17(adata, log=False); sc.tl.pca(adata); ```. I keep getting this output:. ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-bfa4168a87e6> in <module>; 1 adata.raw = adata; ----> 2 sc.pp.recipe_weinreb17(adata, log=False); 3 sc.tl.pca(adata). /opt/anaconda3/lib/python3.7/site-packages/scanpy/preprocessing/_recipes.py in recipe_weinreb17(adata, log, mean_threshold, cv_threshold, n_pcs, svd_solver, random_state, copy); 48 ); 49 adata._inplace_subset_var(gene_subset) # this modifies the object itself; ---> 50 X_pca = pp.pca(; 51 pp.zscore_deprecated(adata.X),; 52 n_comps=n_pcs,. AttributeError: module 'scanpy.preprocessing._simple' has no attribute 'pca'; ```. Versions:; `scanpy==1.5.1 anndata==0.7.4 umap==0.4.6 numpy==1.18.1 scipy==1.4.1 pandas==1.0.1 scikit-learn==0.22.1 statsmodels==0.11.0 python-igraph==0.8.2 louvain==0.7.0 leidenalg==0.7.0`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1326:231,log,log,231,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1326,3,['log'],['log']
Testability,"I'm using Scanpy with the following software versions:. python==3.7; scanpy==1.4.4; numpy==1.17.2; anndata==0.6.22.post1. on Ubuntu 18.04. I am able to save my AnnData object just fine with . ```py; sc.write(results_file, adata); ```; and to load it again with . ```py; adata = sc.read(results_file); ```. however if I save it after I run the command . ```py; sc.tl.rank_genes_groups(adata, 'louvain12_lab', method='wilcoxon'); ```. the AnnData object will save but when I try to reload it, I get an error message:. ```pytb; ValueError Traceback (most recent call last); <ipython-input-141-159082f1696f> in <module>; 1 results_file = os.path.join(adir, '{project}.count_{count}.gene_{gene}.mito_{mito}.HVGs_{nhvgs}.TPT.{log}.scale.TEST.h5ad'.format(project=project_name, count=count_thresh, gene=gene_thresh, mito=mitothresh, nhvgs=nhvgs, log=logstatus)); 2 print(results_file); ----> 3 adata = sc.read(results_file). /opt/miniconda3/envs/py37/lib/python3.7/site-packages/scanpy/readwrite.py in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, **kwargs); 95 filename, backed=backed, sheet=sheet, ext=ext,; 96 delimiter=delimiter, first_column_names=first_column_names,; ---> 97 backup_url=backup_url, cache=cache, **kwargs,; 98 ); 99 # generate filename and read to dict. /opt/miniconda3/envs/py37/lib/python3.7/site-packages/scanpy/readwrite.py in _read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, suppress_cache_warning, **kwargs); 497 if ext in {'h5', 'h5ad'}:; 498 if sheet is None:; --> 499 return read_h5ad(filename, backed=backed); 500 else:; 501 logg.debug(f'reading sheet {sheet} from file {filename}'). /opt/miniconda3/envs/py37/lib/python3.7/site-packages/anndata/readwrite/read.py in read_h5ad(filename, backed, chunk_size); 445 else:; 446 # load everything into memory; --> 447 constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size); 448 X = constructor_args[0]; 449 dtype = None. /opt/min",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/832:720,log,log,720,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/832,4,"['TEST', 'log']","['TEST', 'log', 'logstatus']"
Testability,"IPython/core/formatters.py in __call__(self, obj); ... FileNotFoundError: [Errno 2] No such file or directory: '/Users/name/.matplotlib/fontlist-v310.json.matplotlib-lock'. ```. #### Versions. <details>. ```; -----; anndata 0.7.6; scanpy 1.7.2; sinfo 0.3.4; -----; 0294638c8bf50491b025b096f3dba0a1 NA; absl NA; anyio NA; appnope 0.1.0; astunparse 1.6.3; attr 19.3.0; babel 2.9.0; backcall 0.2.0; brotli 1.0.9; certifi 2020.06.20; cffi 1.14.5; chardet 3.0.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; gast NA; get_version 2.2; google NA; h5py 2.10.0; idna 2.10; igraph 0.8.3; ipykernel 5.3.3; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; jinja2 2.11.2; joblib 0.16.0; json5 NA; jsonschema 3.2.0; jupyter_server 1.2.2; jupyterlab_server 2.1.2; keras_preprocessing 1.1.2; kiwisolver 1.2.0; legacy_api_wrap 1.2; llvmlite 0.36.0; markupsafe 1.1.1; matplotlib 3.2.1; mpl_toolkits NA; natsort 7.1.1; nbclassic NA; nbformat 5.0.7; numba 0.53.1; numexpr 2.7.3; numpy 1.19.0; opt_einsum v3.3.0; packaging 20.4; pandas 1.2.4; parso 0.7.0; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prometheus_client NA; prompt_toolkit 3.0.5; psutil 5.8.0; ptyprocess 0.6.0; pycparser 2.20; pygments 2.6.1; pynndescent 0.5.2; pyparsing 2.4.7; pyrsistent NA; pytz 2019.3; requests 2.24.0; scipy 1.4.1; seaborn 0.10.0; send2trash NA; six 1.14.0; sklearn 0.23.1; sniffio 1.2.0; statsmodels 0.12.2; storemagic NA; swig_runtime_data4 NA; tables 3.6.1; tensorboard 2.2.2; tensorflow 2.2.0; termcolor 1.1.0; texttable 1.6.3; tornado 6.1; traitlets 4.3.3; typing_extensions NA; umap 0.5.1; urllib3 1.25.10; wcwidth 0.2.5; wrapt 1.12.1; yaml 5.3.1; zipp NA; zmq 19.0.1; -----; IPython 7.16.1; jupyter_client 6.1.6; jupyter_core 4.6.3; jupyterlab 3.0.5; notebook 6.0.3; -----; Python 3.7.7 (v3.7.7:d7c567b08f, Mar 10 2020, 02:56:16) [Clang 6.0 (clang-600.0.57)]; Darwin-20.2.0-x86_64-i386-64bit; 4 logical CPU cores, i386; -----; Session information updated at 2021-05-26 22:36. ```. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1857:2661,log,logical,2661,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1857,1,['log'],['logical']
Testability,"If plots fail on CI, this should let us see the expected, actual, and diff through azure. ~~Hopefully~~ It works!. I think this could make debugging plotting issues much easier. Here's an example of what the results look like:. <img width=""1090"" alt=""image"" src=""https://user-images.githubusercontent.com/8238804/104561575-b5814680-569b-11eb-8d1e-a9971affc645.png"">. Current issue, if tests are run in parallel, this does not work (https://github.com/pytest-dev/pytest-nunit/issues/40), which is not an immediate problem for CI, but limits applicability for local usage. I believe this is an issue with this particular pytest plugin, not necessarily this strategy.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1587:385,test,tests,385,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1587,1,['test'],['tests']
Testability,"If values of color dict are not unique, `categorical.map(non_unique)` returns a string array, which caused `to_hex` to be called on each element, not just the categories. This was quite slow. Using a dataset of 13million cells, with 38 clusters but only 20 colors, benchmarking the following line . ```python; sc.pl.umap(adata, color=""louvain""); ```. On master:. ```; CPU times: user 12.3 s, sys: 187 ms, total: 12.4 s; Wall time: 12.4 s; ```. This pr:. ```; CPU times: user 6.82 s, sys: 149 ms, total: 6.97 s; Wall time: 6.97 s; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1596:265,benchmark,benchmarking,265,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1596,1,['benchmark'],['benchmarking']
Testability,"If you use `knn=False` to calculate neighbors, any choice of metric is ignored. [Here's the offending line of code.](https://github.com/theislab/scanpy/blob/6c1daba7448be72de84dec16a038fcaeda1636ad/scanpy/neighbors/__init__.py#L706). A quick example:. ```python; import scanpy.api as sc; import numpy as np. adata = sc.datasets.krumsiek11(); adata.obs_names_make_unique(); sc.pp.pca(adata) # To get rid of warnings; adata_eucl = sc.pp.neighbors(adata, knn=False, method=""gauss"", copy=True); adata_spear = sc.pp.neighbors(adata, knn=False, method=""gauss"", copy=True, metric=""correlation""). assert np.all(adata_eucl.uns[""neighbors""][""connectivities""] == adata_spear.uns[""neighbors""][""connectivities""]); ```. Additionally, I suspect this should throw an error:. ```python; sc.pp.neighbors(adata, method=""gauss"", knn=False, metric=""not a real metric""); ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/241:589,assert,assert,589,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/241,1,['assert'],['assert']
Testability,Ignore blank lines in docstring test,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1492:32,test,test,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1492,1,['test'],['test']
Testability,Ignore dask dataframe warning in tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2852:33,test,tests,33,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2852,1,['test'],['tests']
Testability,"ImportError Traceback (most recent call last); <ipython-input-1-b6c916879140> in <module>(); 1 import numpy as np; 2 import pandas as pd; ----> 3 import scanpy as sc. ~\Anaconda3-6\lib\site-packages\scanpy\__init__.py in <module>(); 1 # some technical stuff; 2 import sys; ----> 3 from .utils import check_versions, annotate_doc_types; 4 from ._version import get_versions # version generated by versioneer; 5 . ~\Anaconda3-6\lib\site-packages\scanpy\utils.py in <module>(); 17 from pandas.api.types import CategoricalDtype; 18 ; ---> 19 from ._settings import settings; 20 from . import logging as logg; 21 import warnings. ~\Anaconda3-6\lib\site-packages\scanpy\_settings.py in <module>(); 7 from typing import Tuple, Union, Any, List, Iterable, TextIO, Optional; 8 ; ----> 9 from . import logging; 10 from .logging import _set_log_level, _set_log_file, RootLogger; 11 . ~\Anaconda3-6\lib\site-packages\scanpy\logging.py in <module>(); 7 from typing import Optional; 8 ; ----> 9 import anndata.logging; 10 ; 11 . ~\Anaconda3-6\lib\site-packages\anndata\__init__.py in <module>(); ----> 1 from .core.anndata import AnnData, Raw; 2 from .readwrite import (; 3 read_h5ad, read_loom, read_hdf,; 4 read_excel, read_umi_tools,; 5 read_csv, read_text, read_mtx,. ~\Anaconda3-6\lib\site-packages\anndata\core\anndata.py in <module>(); 46 LayersBase, Layers; 47 ); ---> 48 from .. import h5py; 49 from .views import ArrayView, SparseCSRView, SparseCSCView, DictView, DataFrameView; 50 . ~\Anaconda3-6\lib\site-packages\anndata\h5py\__init__.py in <module>(); 22 SparseDataset; 23 """"""; ---> 24 from .h5sparse import File, Group, SparseDataset, _load_h5_dataset_as_sparse; 25 from h5py import Dataset, special_dtype; 26 . ~\Anaconda3-6\lib\site-packages\anndata\h5py\h5sparse.py in <module>(); 4 from typing import Optional, Union, KeysView, NamedTuple; 5 ; ----> 6 import h5py; 7 import numpy as np; 8 import scipy.sparse as ss. ~\Anaconda3-6\lib\site-packages\h5py\__init__.py in <module>(); 34 _errors.silen",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/900:588,log,logging,588,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/900,5,['log'],"['logg', 'logging']"
Testability,ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[mean_center-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_prin_comps-10] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_neighbors-2] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[threshold-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_nor,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:20388,test,tests,20388,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot imp,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:5986,test,tests,5986,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"In my test, even we check `if isinstance(index, int) or isinstance(index, np.int64) or isinstance(index, np.int32):`, it still doesn't work on my 32-bit numpy and an _TypeErorr_ will be raised. Anyway, _isinstance(index, np.integer)_ works well and is a better choice.; Reference: [http://stackoverflow.com/questions/37726830/how-to-determine-if-a-number-is-any-type-of-int-core-or-numpy-signed-or-not](url)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/21:6,test,test,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/21,1,['test'],['test']
Testability,"In some edge cases, the control gene selection retrieves the same gene(s) that are also in the gene_list used for scoring.; As a result, when the following line is called, we end up with an empty control gene set, causing the downstream error in #2153; https://github.com/scverse/scanpy/blob/383a61b2db0c45ba622f231f01d0e7546d99566b/scanpy/tools/_score_genes.py#L173. <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2153 ; - [x] Tests included; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2875:694,Test,Tests,694,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2875,1,['Test'],['Tests']
Testability,"In the scanpy documentation for sc.pl.dotplot, it indicates that it returns a list of matplotlib.axes.Axes. However, this is not true, it returns a gridspec object instead. I noticed this because I wanted to make some subtle edits to the results to enhance the figure such as changing axis labels, adding overlapping lines to delineate the marker genes for each cell type, etc. But I am struggling to do so. I am wondering how the API intends for us to interact with the gridspec object returned to modify the figure. If I edit the code to return the figure object as well as the gridspec, I can access the axis like so. ```; ax = fig.add_subplot(gs[1,0]); ```. but I can't seem to overwrite the default axis labels or add new lines as commands like; ```; ax.set_ylabel('new label'); ```. Don't change the figure at all. This is all Scanpy 1.4.5.post1 but it was the same for 1.4.4.post1. Thanks!. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->. scanpy==1.4.5.post1 anndata==0.6.22.post1 umap==0.4.0 numpy==1.17.2 scipy==1.3.1 pandas==0.25.1 scikit-learn==0.21.3 statsmodels==0.10.1 python-igraph==0.7.1 louvain==0.6.1. but the same things happened with scanpy==1.4.4.post1; > ...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/979:936,log,logging,936,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/979,1,['log'],['logging']
Testability,Incorrect names on logistic regression gene ranking plot,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/209:19,log,logistic,19,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/209,1,['log'],['logistic']
Testability,Install packages necessary to run distributed tests.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/485:46,test,tests,46,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/485,1,['test'],['tests']
Testability,"Introduces a function to calculate marker gene overlaps between a reference set of marker genes provided as a dictionary, and data-derived marker genes as calculated by `sc.tl.rank_genes_groups()`. Currently implemented overlap functions are: overlap counts (with row or column normalization), overlap coefficient, and jaccard index. Still to do:; - write a test; - finish documentation; - allow p-value thresholding when available; - allow using top X marker genes rather than all calculated markers; - test that it works properly...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/549:358,test,test,358,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/549,2,['test'],['test']
Testability,Is it possible to test for bimodality in scanpy?,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1086:18,test,test,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1086,1,['test'],['test']
Testability,"Is there a way to test if particular genes of a single-cell-RNA-seq-dataset show bimodal distributions, in order to infer heterogeneity? ; e.g. like in: https://www.nature.com/articles/nature13437",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1086:18,test,test,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1086,1,['test'],['test']
Testability,"Is there anybody meeting the same error with me?; I used de.test.wald() to do differentially expressed genes analysis with totally 47K cells. ### Minimal code sample (that we can copy&paste without having any data). ```python; test_sf = de.test.wald(; data=adata.layers['counts'],; formula_loc=""~ 1 + disease + size_factors"",; factor_loc_totest=""disease"",; as_numeric=['size_factors'],; gene_names=adata.var_names,; sample_description=adata.obs; ); ```. ```pytb; error: 'i' format requires -2147483648 <= number <= 2147483647; ```. #### Versions. <scanpy==1.7.1 anndata==0.7.5 umap==0.4.6 numpy==1.19.2 scipy==1.5.2 pandas==1.1.3 scikit-learn==0.24.1 statsmodels==0.12.2 python-igraph==0.8.3 louvain==0.7.0 leidenalg==0.8.3>. #### It seems this error happens when cell amount is over 10K",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1874:60,test,test,60,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1874,2,['test'],['test']
Testability,"It appears that in the cell ranger code, the dispersion is calculated using the negative binomial relationship between mean and dispersion, see. https://github.com/10XGenomics/cellranger/blob/5f5a6293bbc067e1965e50f0277286914b96c908/lib/python/cellranger/analysis/stats.py#L44. Furthermore, these summary statistics are calculated on the count matrix normalized by library size, but not log-transformed. https://github.com/10XGenomics/cellranger/blob/5f5a6293bbc067e1965e50f0277286914b96c908/lib/python/cellranger/analysis/pca.py#L91-L95. As a follow-up, the ""Seurat"" flavor seems to be no longer used in Seurat. Any plans to implement their ""vst"" method?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/969:387,log,log-transformed,387,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/969,1,['log'],['log-transformed']
Testability,"It doesn't look like I can make the install process a matrix expansion, so this only tests against one version of python for now.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1005:85,test,tests,85,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1005,1,['test'],['tests']
Testability,"It is now possible to have several neighbors graphs in adata. For example,. ```py; sc.pp.neighbors(adata); sc.pp.neighbors(adata, use_rep='some', key_added='test'); sc.pp.neighbors(adata, use_rep='some1', key_added='test1'); sc.pp.neighbors(adata, key_added='test2'). sc.tl.umap(adata, neighbors_key='test'); sc.tl.diffmap(adata, neighbors_key='test1'); ```. and so on.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1118:157,test,test,157,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1118,2,['test'],['test']
Testability,"It would be nice if we had a better way of handling upstream releases. E.g. when pandas makes a release it would be good that we had tested against their release candidates, or if we had a good process for dealing with bugs if they do occur. One think we could do, is defensively pin dependencies to below their current release series. I don't like doing this since I think it's pretty restrictive when most of the time we don't have issues. Maybe we could do this for breaking releases, but that wouldn't have prevented issues like #1917. It would be nice to automate the process of testing against upstream release candidates. Basically, when something comes out, we build against it so we can report issues early and don't have to deal with it in live releases. I'm not sure how to do this with `pip search` not working anymore.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1919:133,test,tested,133,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1919,2,['test'],"['tested', 'testing']"
Testability,It's convenient to be able to specify multiple variables in combat in the R package. So I added the support for extra covariates (categorical or numeric) and converted some methods to private. There are tests for the new covariate option and also the private _design_matrix function now.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/618:203,test,tests,203,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/618,1,['test'],['tests']
Testability,It’s 3 separate unit tests in a trenchcoat. I’m only not going with `pytest.mark.parametrize` since #3263 and #3267 are making things more complicated and might cause a split anyway. The PCA code is too branched for these tests to be helpful with debugging.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3268:21,test,tests,21,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3268,2,['test'],['tests']
Testability,"I’d classify the kinds of selections we make into. - recipe/algorithm/statistical test/…; - backend/implementation package/…. Of course there’s overlap, but I think that’s broadly it. Currently, we have the following. - `flavor`. - [`sc.pp.highly_variable_genes`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html): choose algorithm/recipe (seurat, seurat_v3, cell_ranger); - [`sc.tl.louvain`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.louvain.html): choose implementation package (vtraag’s louvain package, igraph, rapids). - `method`. - [`sc.pp.neighbors`](https://scanpy.readthedocs.io/en/latest/api/generated/scanpy.pp.neighbors.html): choose algorithm to calculate connectivity (gauss or umap). kNN impl is `transformer`; - [`sc.tl.umap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.umap.html): choose implementation package (umap or rapids). > **Note**; > should probably be changed. - [`sc.tl.rank_genes_groups`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.rank_genes_groups.html): choose differential expression test (t-test, wilcoxon test, …) (also has `corr_method` for p-value correction); - [`sc.tl.marker_gene_overlap`](https://scanpy.readthedocs.io/en/latest/generated/scanpy.tl.marker_gene_overlap.html): choose how to determine overlap (overlap_count, overlap_coef, jaccard). - `backend`: _nowhere_; - `algorithm`: _nowhere_",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2828:82,test,test,82,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2828,4,['test'],['test']
Testability,LED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::te,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:2387,test,tests,2387,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"Log PCA time at info level, like other steps in the pipeline (recipes…",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/623:0,Log,Log,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/623,1,['Log'],['Log']
Testability,Log2 fold changes in rank_genes_groups are calculated from log-transformed data,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/517:59,log,log-transformed,59,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/517,1,['log'],['log-transformed']
Testability,Logging cosmetics and link to spatial tutorial,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1206:0,Log,Logging,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1206,1,['Log'],['Logging']
Testability,Logging overhaul,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/676:0,Log,Logging,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/676,1,['Log'],['Logging']
Testability,Logistic Regression in scRNA,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/95:0,Log,Logistic,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/95,1,['Log'],['Logistic']
Testability,"Louvain is being difficult to build since a new setuptools release dropped any python2 compatibility https://github.com/vtraag/louvain-igraph/issues/57. We've largely worked around this in #2063, by making louvain dependent tests optional. However, the paul15 PAGA test is difficult to extract louvian from. It checks hardcoded values based on the results of a louvain clustering. To adapt this test to use leiden, we would have to redo the tutorial and create new results. Or louvain building could be fixed, but the package is deprecated anyways.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2065:224,test,tests,224,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2065,3,['test'],"['test', 'tests']"
Testability,MAGIC in external causes test failures if its not installed,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1001:25,test,test,25,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1001,1,['test'],['test']
Testability,Make external tests for MAGIC optional,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1003:14,test,tests,14,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1003,1,['test'],['tests']
Testability,Make harmonypy test optional,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1428:15,test,test,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1428,1,['test'],['test']
Testability,Make louvain optional for tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2063:26,test,tests,26,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2063,1,['test'],['tests']
Testability,"Matplotlib 3.2 seems to have broken a number of our tests. This is me trying to update them, though I've had trouble reproducing figures compared with travis in the past. # Heatmaps. For heatmaps, the update was real bad:. ![blurry_heatmap](https://user-images.githubusercontent.com/8238804/76190007-23651200-6230-11ea-9912-d42dbbe76eb9.png). # Violin plots. Violin plots have changed as well, but I think it's for the better. They seem less likely to show density where there are no data points. In practice, where `n_genes` < 1000 was used as a cutoff, this looks like:. ![new_violin](https://user-images.githubusercontent.com/8238804/76190453-1eed2900-6231-11ea-9a6b-880ebda71a88.png). Axis ticks also changed due to this. # Everything else. For everything else that changed, I couldn't tell the difference. I think plots just moved up or down a bit, and that made them report as changed.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1090:52,test,tests,52,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1090,1,['test'],['tests']
Testability,"Maybe fixes #1736, tested with #1735 and it seemed to do the trick. @flying-sheep, you're the most familiar with the logging setup. Any thoughts?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1737:19,test,tested,19,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1737,2,"['log', 'test']","['logging', 'tested']"
Testability,"Minimal example (scanpy commit: 7266e67fe15a6320bc6d5e1642479f53e44a6d6b):; ```python; import scanpy as sc; sc.logging.print_versions(); from pypairs import __version__; print('pypairs==', __version__). adata = sc.datasets.blobs(); marker_pairs = {'G1': [('1', '2')], 'S': [('3', '4')], 'G2M': [('5', '6')]}. sc.external.tl.cyclone(adata, marker_pairs, adata.var_names, adata.obs_names); ```. ```python; scanpy==0+unknown anndata==0.6.19 umap==0.3.8 numpy==1.16.3 scipy==1.2.1 pandas==0.24.2 scikit-learn==0.20.3 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 ; pypairs== v3.1.0. ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-20-33f7b7cad989> in <module>; 7 marker_pairs = {'G1': [('1', '2')], 'S': [('3', '4')], 'G2M': [('5', '6')]}; 8 ; ----> 9 sc.external.tl.cyclone(adata, marker_pairs, adata.var_names, adata.obs_names). ~/software/scanpy/scanpy/tools/_pypairs.py in cyclone(adata, marker_pairs, gene_names, sample_names, iterations, min_iter, min_pairs); 132 ; 133 from pypairs.pairs import cyclone; --> 134 from . import settings; 135 from pypairs import settings as pp_settings; 136 . ImportError: cannot import name 'settings'; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/655:111,log,logging,111,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/655,1,['log'],['logging']
Testability,"Minimal example:; ```python; import scanpy.api as sc; sc.logging.print_versions(). adata = sc.datasets.blobs(). sc.pp.highly_variable_genes(adata); ```; Output:; ```python; **scanpy==1.3.7 anndata==0.6.17 numpy==1.15.4 scipy==1.2.0 pandas==0.24.0 scikit-learn==0.20.2 statsmodels==0.9.0 python-igraph==0.7.1 louvain==0.6.1 . ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-11-5d93fbf298b7> in <module>; 4 adata = sc.datasets.blobs(); 5 ; ----> 6 sc.pp.highly_variable_genes(adata). ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/scanpy/preprocessing/highly_variable_genes.py in highly_variable_genes(adata, min_disp, max_disp, min_mean, max_mean, n_top_genes, n_bins, flavor, subset, inplace); 115 # a normalized disperion of 1; 116 one_gene_per_bin = disp_std_bin.isnull(); --> 117 gen_indices = np.where(one_gene_per_bin[df['mean_bin']])[0].tolist(); 118 if len(gen_indices) > 0:; 119 logg.msg(. ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/series.py in __getitem__(self, key); 909 Please use .at[] or .iat[] accessors.; 910 ; --> 911 Parameters; 912 ----------; 913 index : label. ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/series.py in _get_with(self, key); 951 -------; 952 series : Series; --> 953 If label is contained, will be reference to calling Series,; 954 otherwise a new object; 955 """""". ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/series.py in reindex(self, index, **kwargs). ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/generic.py in reindex(self, *args, **kwargs); 4344 ; 4345 elif not is_list_like(value):; -> 4346 new_data = self._data.fillna(value=value, limit=limit,; 4347 inplace=inplace,; 4348 downcast=downcast). ~/miniconda3/envs/spols190117/lib/python3.6/site-packages/pandas/core/generic.py in _reindex_axes(self, axes, level, limit, tolerance, method, fill_value, copy)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/450:57,log,logging,57,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/450,2,['log'],"['logg', 'logging']"
Testability,Minimum dependency test job,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2816:19,test,test,19,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2816,1,['test'],['test']
Testability,Minor Bug: scanpy.logging.print_versions() throws Key Error,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2580:18,log,logging,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2580,1,['log'],['logging']
Testability,Move adding `--internet-tests` option back to `conftest.py`,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/685:24,test,tests,24,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/685,1,['test'],['tests']
Testability,Move to src / tests layout,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3092:14,test,tests,14,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3092,1,['test'],['tests']
Testability,"Need a file `highly_variable_genes.py` in `scanpy.preprocessing` with a function `highly_variable_genes`. This function is very similar to `filter_genes_dispersion`. However, by default, it assumes data has been logarithmized using `sc.pp.log1p`. Hence, in the “Seurat” method, an exponentiation with `expm1` is necessary (the current way in which the parameter `log` treats things is inconsistent as it doesn’t properly transform back using `expm`). Also, the new function doesn’t actually perform the filtering but simply annotates the data (`subset=False`). No need in an option `subset` in the new function. Of course, the old function remains for backwards compatibility.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/300:212,log,logarithmized,212,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/300,2,['log'],"['log', 'logarithmized']"
Testability,New logging clutters output,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/684:4,log,logging,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/684,1,['log'],['logging']
Testability,No negative logFC values after running scanpy.tl.rank_genes_groups(),MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1800:12,log,logFC,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1800,1,['log'],['logFC']
Testability,"No vendored versioneer.py anymore, no setup.cfg! This is vastly simpler. Could you please check if my logic holds?. Package metadata and content will be correctly derived from the git repo’s status. 1. before building, `setuptools_scm` will be installed through `setup_requires=['setuptools_scm']` or `[build-requires]`.; 2. during building, due to `use_scm_version=True`, it will populate the package metadata with a proper version from git. (Looks like `scanpy-1.4.5.dev60+g0adf706`). `scanpy.__version__` will be the version of scanpy you’re currently developing (if applicable) or the installed one:. 1. scanpy tries to use `setuptools_scm.get_version`; 2. if `setuptools_scm` can’t be imported or we’re not in a git repo, it will just use the version from package metadata (like `check_versions` does for other installed packages)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/798:102,log,logic,102,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/798,1,['log'],['logic']
Testability,OR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-int64] - ImportError: cannot import name 'pbmc3k',MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:16750,test,testing,16750,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,Offsets for factors were being calculated wrong. It was being done with a sum when it should have been product. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #2964; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2965:203,Test,Tests,203,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2965,1,['Test'],['Tests']
Testability,"On a test dataset I compute neighbors and then immediately compute/plot both tSNE and UMAP and show them next to each other. Sometimes, we get pretty dramatic differences such as the one attached. Is this an algorithmic difference or something wrong with my approach?. ```; sc.pp.neighbors(adata, n_pcs=n_pcs, n_neighbors=n_neighbors); sc.tl.tsne(adata, n_pcs=n_pcs, random_state=random_state); sc.tl.umap(adata). sc.pl.tsne(adata, color=genes_to_color, color_map='RdBu_r', use_raw=False, save="".png""); sc.pl.umap(adata, color=genes_to_color, color_map='RdBu_r', use_raw=False, save="".png""); ```. ![screenshot from 2018-10-22 11-57-49](https://user-images.githubusercontent.com/330899/47306454-25561300-d5f2-11e8-98e9-939703dcf61b.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/319:5,test,test,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/319,1,['test'],['test']
Testability,"On current master:. ```python; import scanpy as sc. a = sc.datasets.krumsiek11(); assert a.raw is None. sc.tl.rank_genes_groups(a, ""cell_type"", method=""wilcoxon""). a.uns[""rank_genes_groups""][""params""][""use_raw""]; # True; ```. This is bad, and causes issues with downstream plotting functions which use `use_raw` to check where they should be getting expression values from. This PR fixes that. Along with other recent bug fixes, fixes #1114.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1895:82,assert,assert,82,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1895,1,['assert'],['assert']
Testability,"On master (37851434b2) from the base of the repo, I haven't seen the following code finish running:. ```python; import scanpy.api as sc; adata = sc.read(""./data/pbmc3k_raw.h5ad""); %time sc.pp.downsample_counts(adata, 1500); ```. This PR implements an optimized version of the same thing, which gives:. ```python; %time sc.pp.downsample_counts(adata, 1500) ; CPU times: user 2.25 s, sys: 44.7 ms, total: 2.29 s; Wall time: 2.32 s; ```. ## What's changed. * I've rewritten the function to use numba along with fewer allocations; * Added a test for the function; * Added argument `replace`, which indicates whether subsampling should happen with replacement. ## Notes. To me, it makes more sense to sample without replacement, since for small changes in total counts you'll have more similar profiles. However, I've set the default for replacement to `True` to preserve the current behavior. Neither this or the previous method scale well with sampling depth, and it's maybe worth using a call to sample a multinomial or multivariate hypergeometric distribution instead.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/340:537,test,test,537,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/340,1,['test'],['test']
Testability,"Otherwise this fails with:; ```; ~/miniconda3/envs/anndata/lib/python3.8/site-packages/scanpy/plotting/_anndata.py in _prepare_dataframe(adata, var_names, groupby, use_raw, log, num_categories, layer, gene_symbols); 1828 import IPython; 1829 IPython.embed(); -> 1830 raise ValueError(; 1831 'groupby has to be a valid observation. '; 1832 f'Given {group}, is not in observations: {adata.obs_keys()}' + msg. ValueError: groupby has to be a valid observation. Given ['cell_type'], is not in observations: ['cell_type'] or index name ""index""; ```. <!-- ; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1656:173,log,log,173,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1656,1,['log'],['log']
Testability,P-values added to t-tests and wilcoxon test,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/270:20,test,tests,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/270,2,['test'],"['test', 'tests']"
Testability,"PCA, ""RuntimeWarning: divide by zero encountered in log"" and wrong PCs ordering with svd_solver arpack",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/264:52,log,log,52,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/264,1,['log'],['log']
Testability,"PI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.7.6; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 8.3.2; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; cached_property 1.5.2; cffi 1.14.6; cloudpickle 2.0.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dask 2021.09.1; dateutil 2.8.2; debugpy 1.5.0; decorator 5.1.0; defusedxml 0.7.1; entrypoints 0.3; fsspec 2021.10.0; google NA; h5py 3.4.0; ipykernel 6.4.1; ipython_genutils 0.2.0; ipywidgets 7.6.5; jedi 0.18.0; jinja2 3.0.2; joblib 1.1.0; kiwisolver 1.3.2; llvmlite 0.37.0; markupsafe 2.0.1; matplotlib 3.4.3; matplotlib_inline NA; mpl_toolkits NA; mudata 0.1.0; muon 0.1.1; natsort 7.1.1; nbinom_ufunc NA; numba 0.54.1; numexpr 2.7.3; numpy 1.20.3; packaging 21.0; pandas 1.3.3; parso 0.8.2; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 2.0.10; psutil 5.9.0; ptyprocess 0.7.0; pycparser 2.20; pydev_ipython NA; pydevconsole NA; pydevd 2.4.1; pydevd_concurrency_analyser NA; pydevd_file_utils NA; pydevd_plugins NA; pydevd_tracing NA; pygments 2.10.0; pynndescent 0.5.4; pyparsing 2.4.7; pyreadr 0.4.4; pytz 2021.3; scipy 1.7.1; seaborn 0.11.2; six 1.16.0; sklearn 1.0; sphinxcontrib NA; statsmodels 0.13.0; storemagic NA; tables 3.6.1; threadpoolctl 3.0.0; tlz 0.11.1; toolz 0.11.1; tornado 6.1; tqdm 4.62.3; traitlets 5.1.0; typing_extensions NA; umap 0.5.1; wcwidth 0.2.5; yaml 5.4.1; zipp NA; zmq 22.3.0; -----; IPython 7.28.0; jupyter_client 7.0.6; jupyter_core 4.8.1; notebook 6.4.4; -----; Python 3.7.2 (default, Dec 29 2018, 06:19:36) [GCC 7.3.0]; Linux-4.15.0-70-generic-x86_64-with-debian-buster-sid; 4 logical CPU cores, x86_64; -----; Session information updated at 2022-01-25 10:12. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2122:4559,log,logical,4559,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2122,1,['log'],['logical']
Testability,"PR #1056 added the new `is_view` property. Yet, some anndata, including those in the `sc.datasets` do not have this attribute set. . <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; adata = sc.datasets.pbmc3k(); sc.pp.scale(adata); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-5-d1141fe2ca57> in <module>; ----> 1 sc.pp.scale(adata). /scanpy/scanpy/preprocessing/_simple.py in scale(data, zero_center, max_value, copy); 910 if isinstance(data, AnnData):; 911 adata = data.copy() if copy else data; --> 912 view_to_actual(adata); 913 # need to add the following here to make inplace logic work; 914 if zero_center and issparse(adata.X):. /scanpy/scanpy/_utils.py in view_to_actual(adata); 377 ; 378 def view_to_actual(adata):; --> 379 if adata.is_view:; 380 warnings.warn(; 381 ""Revieved a view of an AnnData. Making a copy."", stacklevel=2,. AttributeError: 'AnnData' object has no attribute 'is_view'; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > Current scanpy master branch",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1151:840,log,logic,840,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1151,2,['log'],"['logging', 'logic']"
Testability,"PR to solve #1321 . ```PYTHON; marker_genes = ['S100A8', 'GNLY', 'NKG7', 'KLRB1', 'FCGR3A', 'FCER1A', 'CST3']; sc.pl.stacked_violin(adata,marker_genes,groupby='louvain', return_fig=True,log=False).style(yticklabels=True,row_palette='muted').show(); ```; ![image](https://user-images.githubusercontent.com/4964309/88898994-cbb25c00-d24d-11ea-8de2-5768752c9939.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1342:186,log,log,186,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1342,1,['log'],['log']
Testability,"PYTHON_VERSION variable is empty, so we actually pass `python=` in `conda create` so Travis always tests scanpy with latest Python in Conda distribution. Therefore Python 3.5 is actually never tested. Furthermore, conda switched to python 3.7, so now all test are run on Python 3.7. This is also the reason of weird HDF error message we get in tests.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/201:99,test,tests,99,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/201,4,['test'],"['test', 'tested', 'tests']"
Testability,Paga plotting had some half-finished support for supplying a root by its label. This is supposed to finish this. Fixes #909. @falexwolf needs to say if this corresponds to his intentions and we need to add a test.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/910:208,test,test,208,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/910,1,['test'],['test']
Testability,"Part of [scanpy 2.0](https://github.com/orgs/scverse/projects/18/views/1). <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:. I implemented a Ruff check (PLR0917) for this, but setting `max-positional-args = 3` would make this massive PR even larger, so I opted to do it in a separate one. ## Reviewers. Your main job is to check if the position of the `*` makes sense for each exported function (i.e. the ones with the `@legacy_api` decorator). I tried my best to base it on internal usage of each API, but one placement or the other might be to early. The only real logic changes are in `scanpy/tests/test_package_structure.py`. This PR:. - makes public APIs with more than 5 parameters keyword-only without breaking backwards compatibility (for now); - makes private APIs with more than 5 parameters keyword-only; - checks that we don’t internally use the old positional APIs using a warning filter with `action='error'`; - checks that APIs use our convention for the `copy` parameter (`adata` as first param, returns `adata` type or None`); - manually checked that APIs use our convention `filename: Path | str`/`path: Path | str`. ## Follow-up changes. - [ ] Set `max-positional-args = 3`; - [ ] make sure that no new public API gets introduced without being included in the `api_module_names` list; - [ ] enforce convention `show`, `return_fig`, `ax`; - [ ] enforce convention for `random_seed: AnyRandom`; - [ ] https://github.com/scverse/scanpy/issues/2331",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2702:162,Test,Tests,162,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2702,3,"['Test', 'log', 'test']","['Tests', 'logic', 'tests']"
Testability,"Ping @fidelram. ```python; import scanpy as sc. pbmc = sc.datasets.pbmc3k_processed().raw.to_adata(); sc.pl.violin(pbmc, ['CD79A', 'MS4A1'], groupby='louvain' ); ```. ```pytb; ---------------------------------------------------------------------------; AssertionError Traceback (most recent call last); <ipython-input-7-594171c15db1> in <module>; ----> 1 sc.pl.violin(pbmc, ['CD79A', 'MS4A1'], groupby='louvain' ). ~/github/scanpy/scanpy/plotting/_anndata.py in violin(adata, keys, groupby, log, use_raw, stripplot, jitter, size, layer, scale, order, multi_panel, xlabel, ylabel, rotation, show, save, ax, **kwds); 710 ; 711 if groupby is not None:; --> 712 obs_df = get.obs_df(adata, keys=[groupby] + keys, layer=layer, use_raw=use_raw); 713 if kwds.get('palette', None) is None:; 714 if not is_categorical_dtype(adata.obs[groupby]):. ~/github/scanpy/scanpy/get.py in obs_df(adata, keys, obsm_keys, layer, gene_symbols, use_raw); 200 # add var values; 201 if len(var_names) > 0:; --> 202 X = _get_obs_rep(adata, layer=layer, use_raw=use_raw); 203 if use_raw:; 204 var_idx = adata.raw.var_names.get_indexer(var_names). ~/github/scanpy/scanpy/get.py in _get_obs_rep(adata, use_raw, layer, obsm, obsp); 341 return adata.obsp[obsp]; 342 else:; --> 343 assert False, (; 344 ""That was unexpected. Please report this bug at:\n\n\t""; 345 "" https://github.com/theislab/scanpy/issues"". AssertionError: That was unexpected. Please report this bug at:. 	 https://github.com/theislab/scanpy/issues; ```. The issue seems to be that `use_raw=None` is not handled by `_get_obs_rep`. I think this should error, but the error should just be that `None` isn't a valid value for this argument. The real issue is that `sc.pl.violin` is not handling `use_raw` correctly.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1546:253,Assert,AssertionError,253,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1546,4,"['Assert', 'assert', 'log']","['AssertionError', 'assert', 'log']"
Testability,"Ping @flying-sheep @giovp @Mirkazemi. Turns out that the `sc.datasets.visium_sge` would just read in whatever images were most recently added, not the one that fit the dataset. This fixes that. Additionally, `sc.read_visium` now takes a directory as the first argument. If a reading function assumes a directory structure, that directory should be passed, not a specific path inside of it. This follows our other functions like: `sc.read_10x_mtx`. Similarly, I've rearranged how the example datasets are stored and how the test data is stored to better match the outputs from 10x pipelines. A few more changes I'd like to make:. * Restructure how elements are added to `uns`, as mentioned in https://github.com/theislab/anndata/issues/295#issuecomment-596164456; * Rename `obsm[""X_spatial""]` to `obsm[""coords""]` or `obsm[""spatial""]`.; * There is a natural connectivity for the observations from the adjacency of wells. This should be easy to add to obsp, or should just be added to obsp when `read_visum` is called. I'm thinking `""spatial_connectivity""` for the default key name.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1088:523,test,test,523,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1088,1,['test'],['test']
Testability,Possible enhancement: multithreaded (via numba) mann-whitney tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2060:61,test,tests,61,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2060,1,['test'],['tests']
Testability,"Possibly related to #275. The provided `sc.datasets.pbmc3k` does not have values for `""gene_ids""`. It'd be useful to have a standard dataset with ensembl ids and gene symbols for testing visualization functions with the `gene_symbols` argument. ```python; In [1]: import scanpy.api as sc ; ...: sc.datasets.pbmc3k().var.head() ; Out[1]: ; gene_ids; index ; MIR1302-10 NaN; FAM138A NaN; OR4F5 NaN; RP11-34P13.7 NaN; RP11-34P13.8 NaN. In [2]: import h5py ; ...: with h5py.File(""./data/pbmc3k_raw.h5ad"") as f: ; ...: print(repr(f[""var""][:])) ; ...: ; array([(b'MIR1302-10', -1), (b'FAM138A', -1), (b'OR4F5', -1), ...,; (b'CU459201.1', -1), (b'AC002321.2', -1), (b'AC002321.1', -1)],; dtype=[('index', 'S19'), ('gene_ids', 'i1')]); ```. However, if I download the source files, everything works out fine:. ```python. In [3]: !wget http://cf.10xgenomics.com/samples/cell-exp/1.1.0/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz ; ...; In [4]: !tar xzf pbmc3k_filtered_gene_bc_matrices.tar.gz; ...; In [5]: sc.read_10x_mtx(""./filtered_gene_bc_matrices/hg19"").var.head() ; Out[5]: ; gene_ids; MIR1302-10 ENSG00000243485; FAM138A ENSG00000237613; OR4F5 ENSG00000186092; RP11-34P13.7 ENSG00000238009; RP11-34P13.8 ENSG00000239945; ```. Which makes me think the file hosted at `http://falexwolf.de/data/pbmc3k_raw.h5ad` was created when there was a bug in the `read_10x_mtx` code.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/428:179,test,testing,179,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/428,1,['test'],['testing']
Testability,"Potentially fixes #1355. * Would still need tests/ further consideration.; * Need to fix missing values not being plotted below present ones. Using this branch:. ```python; import scanpy as sc; import numpy as np; import matplotlib as mpl. pbmc = sc.datasets.pbmc3k_processed(); pbmc.obs[""louvain""].iloc[::2] = np.nan; with mpl.rc_context({""figure.dpi"": 150}):; sc.pl.umap(pbmc, color=""louvain""); ```. ![image](https://user-images.githubusercontent.com/8238804/89258138-e54b0d80-d66a-11ea-8d13-e7bf975c3203.png). ```python; with mpl.rc_context({""figure.dpi"": 150}):; sc.pl.umap(pbmc, color=""louvain"", groups=list(pbmc.obs[""louvain""].cat.categories[:3])); ```. ![image](https://user-images.githubusercontent.com/8238804/89258165-f6941a00-d66a-11ea-9eaf-3a51a5a49a38.png). ## Update:. This PR expanded in scope quite a bit, so I'd like to wrap it up. Most things are implemented and seem to work. Regression tests need to be added, for these cases. - [x] Tests for all fixed cases (probably write these down as well); - [x] Decide on adding arguments, and default values; - [x] Decide on whether continuous legend update happens in this PR",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1356:44,test,tests,44,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1356,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"Preparation for more thorough testing of dask support. - [x] move `DaskArray` to `_compat` to have it available everywhere; - [x] test everything using `array_type` or similar with the same fixture; - [x] Add Dask support to `is_constant` (which uses above fixture). the code in [scanpy/metrics/_common.py](https://github.com/scverse/scanpy/pull/2595/files#diff-caabb542dafdc95621693d71cb6a514af1457c05926438e307d3f8107bf91401) has been moved from [scanpy/metrics/_gearys_c.py](https://github.com/scverse/scanpy/pull/2595/files#diff-1ff58f43272e7b1451de7df9813a0d20aba57f55b23d38b2d46e309d75c2879b) without changes. the only real meat this has is in [scanpy/_utils/compute/is_constant.py](https://github.com/scverse/scanpy/pull/2595/files#diff-e2c27335c5bfbbfb5ae9ac042c09411bfaca7d22340c257974d5d2bc68aea677):. https://github.com/scverse/scanpy/blob/f4f4185709b438e9cfe56db806a449634e214756/scanpy/_utils/compute/is_constant.py#L127-L134. it’s not a great implementation since it concatenates everything along an axis, but that makes it trivially correct.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2595:30,test,testing,30,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2595,2,['test'],"['test', 'testing']"
Testability,"Prepare release 1.4.5 with docs, logging, default parameters.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/960:33,log,logging,33,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/960,1,['log'],['logging']
Testability,Prevent oversubscription during tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2843:32,test,tests,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2843,1,['test'],['tests']
Testability,"Previously discussed in #240. A few things left to discuss:. ## Tests. These are pretty simple, ""this doesn't intrinsically throw an error"" type tests. Should the tests cover more than that? Should they be more thorough is checking arguments won't throw errors? I'm open to suggestions on other things that could be checked. Also, is there a place they'd be more appropriate?. ## Allowing storage of multiple network representations . I think this would also be a pretty simple addition, but wanted to check again before implementing it. I'm thinking of adding a `use_network` argument which would allow key access to network stored in the AnnData object – similar to the `use_rep` argument. @LuckyMD mentioned there might be some storage concerns here, though I think the user is ultimately responsible for size in this case. The value added here is different representations are useful for different analysis, and it'd be useful to not have to have two objects when the rest of the data would be shared. ## Allow more choice of partition method for `louvain-igraph` package. I'm not too fussed on this one. It's just that `""RBConfiguration""` is hard coded when other methods are available, and I'm not aware of a reason it would be the best choice.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/248:64,Test,Tests,64,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/248,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"Pytest supports two test layouts, in-package and outside-of-package. I prefer the outside-of-package mode outlined here: https://docs.pytest.org/en/6.2.x/goodpractices.html. Scanpy currently mixes test utils with tests, but pytest’s test files (`test_*.py` and `conftest.py`) aren’t Python modules one is supposed to import from. To clean things up, we can refactor scanpy to a in-package structure:. - `pyproject.toml`: add `addopts = ['--import-mode=importlib']` to `[tool.pytest.ini_options]`; - `scanpy/tests/__init__.py` during implementation, make it throw an error on import so we can make sure nobody imports things from there, then delete; - `scanpy/tests/**/__init__.py` delete; - `scanpy/test_utils/` or `scanpy/testing/`; - `__init__.py`: leave empty for now, later add public, documented test utils; - `_private.py` add private test utils that can be imported in our tests, such as the `@needs_somepackage` decorators. Later we can decide if we want to keep the in-package layout or switch to the outside-of-package layout",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2225:20,test,test,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2225,10,['test'],"['test', 'testing', 'tests']"
Testability,R scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-100] - ImportEr,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:13588,test,testing,13588,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,ROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-30-,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:14215,test,testing,14215,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,ROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-200] - I,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:14009,test,testing,14009,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,RROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_resi,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:8267,test,testing,8267,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,Random test failure of `test_plotting.py::test_paga`,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1418:7,test,test,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1418,1,['test'],['test']
Testability,Refactoring t-test default warning,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2798:14,test,test,14,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2798,1,['test'],['test']
Testability,Remove global state changes in plotting tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2150:40,test,tests,40,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2150,1,['test'],['tests']
Testability,"Removes the need for a pytables dependency. * pytables has been a source of installation heisenbugs, particularly on windows (#1468, #1284, #454); * why use two hdf5 libraries; * Makes it easier to move reading 10x files into anndata or elsewhere #1387. I've edited the code as lightly as possible, since these readers were originally contributed by someone at 10X, so I assume they had better knowledge of possible edge cases. - [ ] ~~Test with h5py 2~~; - [ ] Add release note",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2064:436,Test,Test,436,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2064,1,['Test'],['Test']
Testability,"Reorder operations to avoid overflows. Behavior Fixed:; ```py; import scanpy as sc; import numpy as np; X = np.random.randint(0,1000, size= (3000,2000)); ann = sc.AnnData(np.log(X+1)); gsize = X.shape [0] / 2; ann.obs['group'] = ['a']* int (gsize) + ['b']*int (gsize); sc.tl.rank_genes_groups(ann, 'group', method = 'wilcoxon', n_genes=2000); ```; ```pytb; ... storing 'group' as categorical; C:\Users\patou\Anaconda-p3.7\envs\py36\lib\site-packages\scanpy\tools\_rank_genes_groups.py:372: RuntimeWarning: overflow encountered in long_scalars; (ns[imask] * (n_cells - ns[imask]) * (n_cells + 1) / 12)); ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-7-bccdb587a644> in <module>; 5 gsize = X.shape [0] / 2; 6 ann.obs['group'] = ['a']* int (gsize) + ['b']*int (gsize); ----> 7 sc.tl.rank_genes_groups(ann, 'group', method = 'wilcoxon', n_genes=2000); 8; 9. ~\Anaconda-p3.7\envs\py36\lib\site-packages\scanpy\tools\_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, **kwds); 370 scores[imask, :] = (scores[imask, :] - (ns[imask] * (n_cells + 1) / 2)) / sqrt(; 371 (ns[imask] * (n_cells - ns[imask]) * (n_cells + 1) / 12)); --> 372; 373 scores[np.isnan(scores)] = 0; 374 pvals = 2 * stats.distributions.norm.sf(np.abs(scores[imask,:])). ValueError: math domain error; ```. After the fix, the same code no longer raises an error",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1062:174,log,log,174,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1062,1,['log'],['log']
Testability,Reordering categories leads to issues with `sc.tl.rank_genes_groups` when using `method='logreg'`,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/273:89,log,logreg,89,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/273,1,['log'],['logreg']
Testability,Reorganize plotting test outputs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1772:20,test,test,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1772,1,['test'],['test']
Testability,Replace `is` for `==` in string testing.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/508:32,test,testing,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/508,1,['test'],['testing']
Testability,Replace sklearn.utils.testing with numpy.testing,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1557:22,test,testing,22,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1557,2,['test'],['testing']
Testability,Replace stdout and stderr prints in ComBat with logg.info,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/552:48,log,logg,48,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/552,1,['log'],['logg']
Testability,Report pynndescent version in sc.logging.print_header,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1613:33,log,logging,33,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1613,1,['log'],['logging']
Testability,"Reproducible example. ```py; import scanpy as sc; import scanpy.external as ice; from itertools import cycle. pbmc = sc.datasets.pbmc68k_reduced(); sc.pp.pca(adata); sce.pp.bbknn(adata, batch_key='batch', copy=False,trim=0, save_knn=False)`; ```. ```pytb; TypeError Traceback (most recent call last); <ipython-input-231-50baef9a10a9> in <module>; 5 pbmc = sc.datasets.pbmc68k_reduced(); 6 sc.pp.pca(adata); ----> 7 sce.pp.bbknn(adata, batch_key='batch', copy=False,trim=0, save_knn=False). ~/Library/Python/3.7/lib/python/site-packages/scanpy/preprocessing/_bbknn.py in bbknn(adata, batch_key, save_knn, copy, **kwargs); 82 except ImportError:; 83 raise ImportError('Please install bbknn: `pip install bbknn`.'); ---> 84 return bbknn(**params, **kwargs). ~/Bioinformatics/usr/local/lib/python3.7/site-packages/bbknn/__init__.py in bbknn(adata, batch_key, approx, metric, copy, **kwargs); 281 ; 282 	logg.info('	finished', time=start,; --> 283 		deep=('added to `.uns[\'neighbors\']`\n'; 284 ' \'distances\', weighted adjacency matrix\n'; 285 		'	\'connectivities\', weighted adjacency matrix')). ~/Library/Python/3.7/lib/python/site-packages/scanpy/logging.py in info(*args, **kwargs); 17 ; 18 def info(*args, **kwargs):; ---> 19 return msg(*args, v='info', **kwargs); 20 ; 21 . TypeError: msg() got an unexpected keyword argument 'deep'`; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/770:899,log,logg,899,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/770,2,['log'],"['logg', 'logging']"
Testability,Restrict files written by tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2559:26,test,tests,26,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2559,1,['test'],['tests']
Testability,Reverts scverse/scanpy#2296 due to broken tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2422:42,test,tests,42,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2422,1,['test'],['tests']
Testability,Run benchmarks for off axis,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3147:4,benchmark,benchmarks,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3147,1,['benchmark'],['benchmarks']
Testability,"Runs static analysis concurrently with tests, while currently static analysis is run first. This cuts down on total test time, and will always test both correctness and style.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/846:39,test,tests,39,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/846,3,['test'],"['test', 'tests']"
Testability,"Scanpy 1.5.0; Out of curiousity I set min_fold_change to different values but it didn't work. Even when I set min_fold_change=100 it doesn't shorten the gene list. So is it because the filters are working in an OR logic? If that's the case, I don't think the default values for each filter should be the ones you set - they should be a very harsh condition to make sure customer-specified parameters are the bottleneck.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1447:214,log,logic,214,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1447,1,['log'],['logic']
Testability,Scanpy affecting most versions tested with 1.4.3. Python 3.6 throws `Math error` exception in windows system for in `rank gene_groups`. _rank_gene_groups.py:313; ```; scores = (scores - (n_active * (n_active + m_active + 1) / 2)) / sqrt(; (n_active * m_active * (n_active + m_active + 1) / 12)); ```. Reason `sqrt` encounters integer overflow in: ` (n_active * m_active * (n_active + m_active + 1) / 12)` for large numbers. Quick fix to avoid overflow: divide by 12 before scaling by ` (n_active + m_active + 1)`; _rank_gene_groups.py:313; ```; scores = (scores - (n_active * (n_active + m_active + 1) / 2)) / sqrt(; (n_active * m_active * (1/12.0) * (n_active + m_active + 1))); ```; Casting to float could work as well? Behavior in Unix/Linux not tested,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1061:31,test,tested,31,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1061,2,['test'],['tested']
Testability,"Scanpy vs. 1.3.6; installed using pip3; OSX 10.10.5; Jupyter lab. code:; `list_of_list_of_marker_genes = [mg1, mg2, mg3]; for mg in list_of_list_of_marker_genes:; sc.pl.stacked_violin(adata, mg, groupby = 'louvain’, rotation=90); print(mg)`. This works for some mg's but not for all; sc.pl.matrixplot works for all of them; the same for sc.pl.violin; it works also if I would combine all marker genes into one list and then run; sc.pl.stacked_violin. When I say it does not work: it typically generates one stacked plot and then; 'hangs up' with an error message for subsequent plots:. Error message:. IndexError: list index out of range. When I run sc.pl.stacked_violin for the individual mg’s, some work others don’t. It is a reproducible results. I explicitly tested whether the genes in the respective marker gene lists are present in ’n_cells’. If not, I update the lists. What am I missing here?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/405:763,test,tested,763,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/405,1,['test'],['tested']
Testability,"Seems like the logic was broken. ```; # we test for raw, but check in adata.var_names; elif use_raw and value_to_plot in adata.var_names:; color_vector = adata.raw[:, value_to_plot].X; # use_raw might be false but we still check adata.raw.var_names; elif value_to_plot in adata.raw.var_names:; color_vector = adata[:, value_to_plot].X; ```. Apart from fixing that I also simplify the code above. Fixes #577",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/579:15,log,logic,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/579,2,"['log', 'test']","['logic', 'test']"
Testability,"Separate static analysis, move tests out of the package",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1528:31,test,tests,31,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1528,1,['test'],['tests']
Testability,Separate test utils from tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2235:9,test,test,9,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2235,2,['test'],"['test', 'tests']"
Testability,Separate testing utils from tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2225:9,test,testing,9,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2225,2,['test'],"['testing', 'tests']"
Testability,Set NUMBA_THREADING_LAYER in tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1933:29,test,tests,29,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1933,1,['test'],['tests']
Testability,"Seurat uses log-transformed and scaled data for analysis, Scanpy uses raw, which method is better?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2110:12,log,log-transformed,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2110,1,['log'],['log-transformed']
Testability,"Should actually fix downloading EBI datasets. URLs for tables and count matrices had changed, and this PR fixes that. This is a bit of a band-aid, since we should probably be accessing these files through the FTP and we should be checking that already downloaded datasets are current. I've also only done a spot check on this, and tested it with a couple datasets. It's probably worth testing with a larger set.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1102:331,test,tested,331,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1102,2,['test'],"['tested', 'testing']"
Testability,"Should fix #218. I have tested it, both with all groups and with some restricted groups.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/221:24,test,tested,24,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/221,1,['test'],['tested']
Testability,Show score name in logging,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/83:19,log,logging,19,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/83,1,['log'],['logging']
Testability,Show test durations,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2786:5,test,test,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2786,1,['test'],['test']
Testability,"Simple test case; ```; data = sc.read(""pbmc3k.h5ad""); logical_ar = data.var[""name""] == ""RER1""; df = data[:, logical_ar]; df.uns = data.uns # this causes an error ; ```. Causes this error; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-16-8b2cadedfe9b> in <module>(); 1 l = data.var[""name""] == ""RER1""; 2 df = data[:, l]; ----> 3 df.uns = data.uns. /usr/local/lib/python3.6/site-packages/anndata/base.py in uns(self, value); 987 # here, we directly generate the copy; 988 adata = self._adata_ref._getitem_copy((self._oidx, self._vidx)); --> 989 self._init_as_actual(adata); 990 self._uns = value; 991 . /usr/local/lib/python3.6/site-packages/anndata/base.py in _init_as_actual(self, X, obs, var, uns, obsm, varm, raw, dtype, shape, filename, filemode); 816 self._varm = BoundRecArr(varm, self, 'varm'); 817 ; --> 818 self._check_dimensions(); 819 self._check_uniqueness(); 820 . /usr/local/lib/python3.6/site-packages/anndata/base.py in _check_dimensions(self, key); 1692 raise ValueError('Observations annot. `obs` must have number of '; 1693 'rows of `X` ({}), but has {} rows.'; -> 1694 .format(self._n_obs, self._obs.shape[0])); 1695 if 'var' in key and len(self._var) != self._n_vars:; 1696 raise ValueError('Variables annot. `var` must have number of '. ValueError: Observations annot. `obs` must have number of rows of `X` (1), but has 2638 rows.; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/323:7,test,test,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/323,1,['test'],['test']
Testability,Simplify tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2575:9,test,tests,9,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2575,1,['test'],['tests']
Testability,"Since we don’t have a chatroom yet, I’ll announce this with an issue. I created the branch stable to have the 1.4 docs without development features, but also the scanpy logo:. ```console; $ git checkout 1.4 -b stable; $ git cherry-pick 4b1504c c78de5b # the logo commits; ```. Once 1.4.1 comes along, we can simply delete it and readthedocs/stable will point to the 1.4.1 tag again",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/571:169,log,logo,169,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/571,2,['log'],['logo']
Testability,Skip louvain-dependent tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1524:23,test,tests,23,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1524,1,['test'],['tests']
Testability,"Slicing causes inconsistent state when either n_obs or n_vars == 1, resulting in a slice that can no longer be sliced again on the other axis, due to shape inconsistencies between the AnnData and X object. anndata 0.6.11, scanpy 1.3.2, WSL/Ubuntu. Test case:; ```; import scanpy.api as sc; data = sc.read('example-dataset/data.h5ad'); >>> data.shape, data.X.shape, data._X.shape; ((2638, 1838), (2638, 1838), (2638, 1838)); >>> slice = data[0, :]; >>> slice.shape, slice.X.shape, slice._X.shape; ((1, 1838), (1838,), (1, 1838)); >>> slice[:, 0]; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 1303, in __getitem__; return self._getitem_view(index); File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 1307, in _getitem_view; return AnnData(self, oidx=oidx, vidx=vidx, asview=True); File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 669, in __init__; self._init_as_view(X, oidx, vidx); File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 726, in _init_as_view; self._init_X_as_view(); File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 741, in _init_X_as_view; X = self._adata_ref.X[self._oidx, self._vidx]; IndexError: too many indices for array; >>> slice[0]; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 1303, in __getitem__; return self._getitem_view(index); File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 1307, in _getitem_view; return AnnData(self, oidx=oidx, vidx=vidx, asview=True); File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 669, in __init__; self._init_as_view(X, oidx, vidx); File ""/cellxgene/venv/lib/python3.6/site-packages/anndata/base.py"", line 726, in _init_as_view; self._init_X_as_view(); File ""/cellxgene/venv/lib/python3.6/site-packages/an",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/332:248,Test,Test,248,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/332,1,['Test'],['Test']
Testability,"So I was writing a test for `rank_genes_groups_df` from #619 when I got some results that seem pretty wrong. Here's an example:. ```python; import scanpy as sc. import numpy as np; import pandas as pd; from scipy import stats. from itertools import repeat, chain. # Making data where ""gene0"" is definitely differentially expressed. a = np.zeros((20, 3)); a[:10, 0] = 5; adata = sc.AnnData(; a,; obs=pd.DataFrame(; {""celltype"": list(chain(repeat(""a"", 10), repeat(""b"", 10)))},; index=[f""cell{i}"" for i in range(a.shape[0])]; ),; var=pd.DataFrame(index=[f""gene{i}"" for i in range(a.shape[1])]),; ). # Running differential expression with t-test:. sc.tl.rank_genes_groups(adata, groupby=""celltype""); print(adata.uns[""rank_genes_groups""][""pvals""][""a""]); # array([1., 1., 1.]) # This seems wrong. sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""t-test""); print(adata.uns[""rank_genes_groups""][""pvals""][""a""]); # array([1., 1., 1.]) # This also seems wrong. # Checking to make sure I'm not forgetting something obvious; print(stats.ttest_ind([0,0,0,0,0], [5,5,5,5,5])); # Ttest_indResult(statistic=-inf, pvalue=0.0) # This seems right. # Wilcoxon seems fine:. sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""wilcoxon""); print(adata.uns[""rank_genes_groups""][""pvals""][""a""]); # array([1.57052284e-04, 1.00000000e+00, 1.00000000e+00]) # This seems right; ```. `""logreg""` on the other hand, throws an error:. ```python; sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""logreg""); <ipython-input-7-29e46f287a31> in <module>; ----> 1 sc.tl.rank_genes_groups(adata, groupby=""celltype"", method=""logreg""). ~/github/scanpy/scanpy/tools/_rank_genes_groups.py in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, key_added, copy, method, corr_method, log_transformed, **kwds); 397 adata.uns[key_added]['scores'] = np.rec.fromarrays(; 398 [n for n in rankings_gene_scores],; --> 399 dtype=[(rn, 'float32') for rn in groups_order_save]); 400 adata.uns[key_added",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/620:19,test,test,19,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/620,3,['test'],['test']
Testability,"Some changes to @giovp #1512, just pushing here so they are visible. Still needs going through the tests to update offsets, and some doc tweaks (behaviour of `na_color`, what `spot_size` is, move `scale_factor` to be `spatial` only).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1580:99,test,tests,99,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1580,1,['test'],['tests']
Testability,Some changes to normalize_total and tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/605:36,test,tests,36,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/605,1,['test'],['tests']
Testability,"Some effort to simplify how the embedding plots are handled. Right now this consists of simplifying the `components` argument to `dimensions`. Dimensions is a list of collections of ints. Each element in this list has the length of the number of dimensions to be plotted. `components` is no longer used once it can be transformed into dimensions. What does this do?. * Let's us delete `_get_data_points`, an awful function; * Get rid of `data_points` a list of coordinates that most code assumed would only ever have one element; * Move spatial specific code to spatial specific functions; * Gets rid of edge cases where `components` was either `None` or `[None]` (not sure how). Side note, also made a modification to a testing fixture that had been making tests fail when run out of order. ## Some questions:. ### Should `dimensions` be exposed? If so, should `components` be deprecated?. I think it's weird to pass the dimensions as strings `""1,2""` as opposed to dimensions `(0, 1)`. * Why is it one indexed?; * Isn't it the same amount of keystrokes?; * How useful is `""all""`?. I also think it's weird that the amount of plots generated is the product of `components` and `color`. This differs from every other ""vectorized"" argument to `embedding`. Changing arguments and deprecating `components` would be an opportunity to change this. ### If dimensions should be exposed, how many places does this need to be implemented?. We use `components` as an argument in a number of places in the codebase. Should we think about doing a large-scale replacement?. ### I broke a plotting test. I can't tell the difference. @giovp, does this look fine to you? It's the spatial plots with no image. <details>; <summary> </summary>. Expected. ![master_spatial_visium_empty_image](https://user-images.githubusercontent.com/8238804/101748159-4f475800-3b20-11eb-9007-5a987a881828.png). Actual. ![master_spatial_visium_empty_image](https://user-images.githubusercontent.com/8238804/101748219-64bc8200-3b20-11eb-931",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1538:721,test,testing,721,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1538,2,['test'],"['testing', 'tests']"
Testability,"Some of the preprocessing recipes have a `plot` argument, but as far as I can tell, they'll only throw an error. `recipe_zheng17` and `recipe_seurat` have the lines:. ```python; if plot:; from .. import plotting as pl # should not import at the top of the file; pl.filter_genes_dispersion(filter_result, log=True); ```. But `plotting` doesn't have the function `filter_genes_dispersion` exposed. Here's an example of the error using `scanpy` pulled from github, but the same issue occurs on the release on pypi:. ```python; In [1]: import numpy as np; ...: import pandas as pd; ...: import scanpy.api as sc; ...: ; ...: sc.settings.verbosity = 3 # verbosity: errors (0), warnings (1), info (2), hints (3); ...: sc.settings.set_figure_params(dpi=80) # low dpi (dots per inch) yields small inline figures; ...: sc.logging.print_versions(); /Users/isaac/miniconda3/envs/scanpy/lib/python3.5/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.; from ._conv import register_converters as _register_converters; adatascanpy==1.0.4+91.ge9ae4ff anndata==0.6 numpy==1.14.3 scipy==1.1.0 pandas==0.22.0 scikit-learn==0.19.1 statsmodels==0.8.0 . In [2]: adata = sc.read(""./data/pbmc3k_filtered_gene_bc_matrices/hg19/matrix.mtx"").T; --> This might be very slow. Consider passing `cache=True`, which enables much faster reading from a cache file.; In [3]: sc.pp.recipe_zheng17(adata, plot=True); running recipe zheng17; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-3-c19f237f1c6e> in <module>(); ----> 1 sc.pp.recipe_zheng17(adata, plot=True). ~/github/scanpy/scanpy/preprocessing/recipes.py in recipe_zheng17(adata, n_top_genes, log, plot, copy); 106 if plot:; 107 from .. import plotting as pl # should not import at the top of the file; --> 108 pl.filter",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/153:304,log,log,304,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/153,2,['log'],"['log', 'logging']"
Testability,"Some refactoring:. - single-source AggType in aggregate tests; - fix warnings in aggregate; - fix logs in pca, umap, and tsne",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3186:56,test,tests,56,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3186,2,"['log', 'test']","['logs', 'tests']"
Testability,"Some tests are broken, here are some fixes for that. * Visium reference test was just wrong, dots should have been transparent.; * igraph 0.9.11 has different results for `""fr""` layout, updated tests accordingly (https://github.com/igraph/python-igraph/issues/545); * 32 bit PCA computation is now accurate within 32 bit rounding, so tests checking for random seed changes have been disabled",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2274:5,test,tests,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2274,4,['test'],"['test', 'tests']"
Testability,"Sometimes tests give a lot of useless output when they fail. Generally looks like this (note, this is a small part (<10%) of the output for one test failure):. <details>; <summary> </summary>. ```; return self._inner_hookexec(hook, methods, kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 84, in <lambda>; self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/callers.py"", line 187, in _multicall; res = hook_impl.function(*args); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/runner.py"", line 162, in pytest_runtest_call; item.runtest(); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/python.py"", line 1641, in runtest; self.ihook.pytest_pyfunc_call(pyfuncitem=self); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/hooks.py"", line 286, in __call__; return self._hookexec(self, self.get_hookimpls(), kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 93, in _hookexec; return self._inner_hookexec(hook, methods, kwargs); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/manager.py"", line 84, in <lambda>; self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(; File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/pluggy/callers.py"", line 187, in _multicall; res = hook_impl.function(*args); File ""/opt/hostedtoolcache/Python/3.8.8/x64/lib/python3.8/site-packages/_pytest/python.py"", line 183, in pytest_pyfunc_call; result = testfunction(**testargs); File ""/home/vsts/work/1/s/scanpy/tests/notebooks/test_paga_paul15_subsampled.py"", line 39, in test_paga_paul15_subsampled; sc.tl.draw_graph(adata); File ""/home/vsts/work/1/s/scanpy/tools/_draw_graph.py"", line 181, in draw_graph; logg.info(; File ""/home/vsts/work/1/s/scanpy/loggi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1736:10,test,tests,10,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1736,2,['test'],"['test', 'tests']"
Testability,"Spaceranger 2.1.0 will output a probe barcode matrix for probe based assays. The reasoning behind that is that v2 human probe ensemble (for both [single cell](https://support.10xgenomics.com/fixed-rna-profiling/probe-sets/overview), and [spatial](https://support.10xgenomics.com/spatial-gene-expression-ffpe/probe-sets/overview)) currently has an average of 3 probes per gene. Additionally around 1/3-rd of our probes span splice junctions and can be treated differently from other probes for various downstream analyses like gDNA characterization and RNA-velocity. This matrix will enable users to use the more fine grained probe-barcode matrix for downstream analyses. This PR does the following:; - Adds an example `raw_probe_barcode_matrix.h5` to `tests/_data/visium_data/2.1.0/raw_probe_bc_matrix.h5` (this is a probe barcode matrix downsampled to 1000 features to reduce the size); - The structure of a probe barcode h5 file is; ```; /matrix Group; /matrix/barcodes Dataset {4987}; /matrix/data Dataset {17581240/Inf}; /matrix/features Group; /matrix/features/feature_type Dataset {21178}; /matrix/features/filtered_probes Dataset {21178}; /matrix/features/gene_id Dataset {21178}; /matrix/features/gene_name Dataset {21178}; /matrix/features/genome Dataset {21178}; /matrix/features/id Dataset {21178}; /matrix/features/name Dataset {21178}; /matrix/features/probe_region Dataset {21178}; /matrix/features/target_sets Group; /matrix/features/target_sets/Visium\ Mouse\ Transcriptome\ Probe\ Set Dataset {19779}; /matrix/filtered_barcodes Dataset {4987}; /matrix/indices Dataset {17581240/Inf}; /matrix/indptr Dataset {4988}; /matrix/shape Dataset {2}; ```; - Enables `_read_v3_10x_h5` to read all the metadata that is in the output H5 files into an anndata. This is done by reading all the metadata in the `h5` files into the anndata. This changes the default behaviour of while reading 10x H5 files to read in all the metadata (the code currently reads all the metadata we usually put in - thi",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2470:752,test,tests,752,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2470,1,['test'],['tests']
Testability,Specify var subsets for stats testing,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1744:30,test,testing,30,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1744,1,['test'],['testing']
Testability,Speed up test collection,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/327:9,test,test,9,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/327,1,['test'],['test']
Testability,Split up PCA tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3268:13,test,tests,13,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3268,1,['test'],['tests']
Testability,"Still need to figure out why paga test fails. Also `simplicial_set_embedding` from umap requires data and metrics. Data is `adata.X` and i set `metrics='euclidean'`, but this is not clear. Fixes #522",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/576:34,test,test,34,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/576,1,['test'],['test']
Testability,Stop tests from writing files everywhere,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2555:5,test,tests,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2555,1,['test'],['tests']
Testability,"Suggested changes to the test function, and harmony_timeseries",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1007:25,test,test,25,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1007,1,['test'],['test']
Testability,TODO: test. Fixes #834,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/835:6,test,test,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/835,1,['test'],['test']
Testability,TODO:. - [x] tests; - [x] go over changes if they’re good or the code should be changed,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/841:13,test,tests,13,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/841,1,['test'],['tests']
Testability,Test,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2936:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2936,1,['Test'],['Test']
Testability,Test against pre-release dependencies,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2478:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2478,1,['Test'],['Test']
Testability,Test all PCA param combinations,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3294:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3294,1,['Test'],['Test']
Testability,Test case failure with test_visium_default not having any visible data points,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2048:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2048,1,['Test'],['Test']
Testability,Test codecov code annotation,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2847:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847,1,['Test'],['Test']
Testability,"Test collection was taking a while, this should cut that time by about 90%. For some reason, pytest test collection seems dependent on the number of files the `python_files` parameter matches. Having a more specific path under `testpaths` doesn't – which would be a simpler change. Should close #326.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/327:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/327,3,"['Test', 'test']","['Test', 'test', 'testpaths']"
Testability,Test failing plot,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1773:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1773,1,['Test'],['Test']
Testability,"Test full Dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2814:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2814,1,['Test'],['Test']
Testability,"Test full dask support for `log1p`, `normalize_per_cell`, `filter_cells`/`filter_genes`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2813:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813,1,['Test'],['Test']
Testability,Test hashsolo docs,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1541:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1541,1,['Test'],['Test']
Testability,Test new upperlimit for dask for rapids 24.10. ; https://github.com/scverse/rapids_singlecell/actions/runs/11325725585/job/31493220507?pr=277,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3281:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3281,1,['Test'],['Test']
Testability,Test on 3.5,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/161:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/161,1,['Test'],['Test']
Testability,Test rtd failures,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1900:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1900,1,['Test'],['Test']
Testability,Test that the fallback fr layout works,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1026:0,Test,Test,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1026,1,['Test'],['Test']
Testability,Testing codecov comment to make seeing coverage easier.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1704:0,Test,Testing,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1704,1,['Test'],['Testing']
Testability,"Testing if I did the pyproject.toml right for pep-621. Still need to decide if it's also worth updating it for the 1.8.x branch, or if this should wait until we're near `1.9`. Fixes #1776 if merged.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2042:0,Test,Testing,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2042,1,['Test'],['Testing']
Testability,Testing plotting functions,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/204:0,Test,Testing,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/204,1,['Test'],['Testing']
Testability,"Testing some azure stuff for better CI test results. Mainly:. * I don't like what `pytest-azurepipelines` does with warnings; * I'd like to have test coverage; * Azure's is a bit meh (no diffs), maybe we should use codecovs ([example usage](https://github.com/codecov/example-python/blob/74883884e480b523e0db9e92e97264908ecb9b8f/azure-pipelines.yml#L32-L34)); * I like having the test results be easy to read",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1564:0,Test,Testing,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1564,4,"['Test', 'test']","['Testing', 'test']"
Testability,Testing to see if the way versions are being retrieved is the problem,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1902:0,Test,Testing,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1902,1,['Test'],['Testing']
Testability,Testing to see if this will allow github UI for viewing codecov annotations. https://about.codecov.io/blog/announcing-line-by-line-coverage-via-github-checks/,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2847:0,Test,Testing,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2847,1,['Test'],['Testing']
Testability,Tests fail with pytest 8.1 when a `data` dir exists,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:0,Test,Tests,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['Test'],['Tests']
Testability,Tests for spatial functions,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1041:0,Test,Tests,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1041,1,['Test'],['Tests']
Testability,Tests sometimes have really long logging output,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1736:0,Test,Tests,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1736,2,"['Test', 'log']","['Tests', 'logging']"
Testability,Tests were updated to include instances of the requirements.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/304:0,Test,Tests,0,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/304,1,['Test'],['Tests']
Testability,"Thanks for your great package, it is really powerful, but I am encountered with some mistakes in installing.; My platform is Linux login-0-1.local 2.6.32-504.16.2.el6.x86_64 #1 SMP Wed Apr 22 06:48:29 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux, and Python 2.7.10。; I also try to install in win10 , neither Python 2.7.10 or Python 3.6 makes errors again. firstly, it says versioneer.py has errors, so I reinstall the package,; but when I try to install scanpy again, errors comes out again. Following picture clearly show my errors.; Thanks a lot, if you have time to see my question. ![image](https://user-images.githubusercontent.com/25199946/46243375-34d4a880-c406-11e8-9bb5-4392664fb3cc.png). ![image](https://user-images.githubusercontent.com/25199946/46243461-13c08780-c407-11e8-96c9-bfbb0d863b2f.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/276:131,log,login-,131,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/276,1,['log'],['login-']
Testability,"The PCA test `test_mask_defaults` only passed because of `float32` being to loose in some situation. When the mask randomly was `[True, True, True, True, True]` the test should have failed. Now the test works as intended.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2914:8,test,test,8,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2914,3,['test'],['test']
Testability,The `rankby_abs` parameter is ignored for `method=logreg` in the `rank_genes_groups` function.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/470:50,log,logreg,50,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/470,1,['log'],['logreg']
Testability,"The following issue occurs when running the function sc.pl.rank_gene_groups_heatmap (as in the spatial transcriptomics tutorial found at https://scanpy-tutorials.readthedocs.io/en/latest/spatial/basic-analysis.html#Cluster-marker-genes), under ""Cluster marker genes"". ```import scanpy as sc; import pandas as pd; import matplotlib.pyplot as plt; import seaborn as sns. adata = sc.datasets.visium_sge(sample_id=""V1_Human_Lymph_Node""); adata.var_names_make_unique(); adata.var[""mt""] = adata.var_names.str.startswith(""MT-""); sc.pp.calculate_qc_metrics(adata, qc_vars=[""mt""], inplace=True). sc.tl.rank_genes_groups(adata, ""clusters"", method=""t-test""); sc.pl.rank_genes_groups_heatmap(adata, groups=""5"", n_genes=10, groupby=""clusters""); ```. The results are as follows:; ```ranking genes; finished: added to `.uns['rank_genes_groups']`; 'names', sorted np.recarray to be indexed by group ids; 'scores', sorted np.recarray to be indexed by group ids; 'logfoldchanges', sorted np.recarray to be indexed by group ids; 'pvals', sorted np.recarray to be indexed by group ids; 'pvals_adj', sorted np.recarray to be indexed by group ids (0:00:02); WARNING: dendrogram data not found (using key=dendrogram_clusters). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.; using 'X_pca' with n_pcs = 50; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-19-a44c51f396af> in <module>; 2 # genes across clusters.; 3 sc.tl.rank_genes_groups(adata, ""clusters"", method=""t-test""); ----> 4 sc.pl.rank_genes_groups_heatmap(adata, groups=""5"", n_genes=10, groupby=""clusters""). ~/.pyenv/versions/3.6.9/lib/python3.6/site-packages/scanpy/plotting/_tools/__init__.py in rank_genes_groups_heatmap(adata, groups, n_genes, groupby, key, show, save, **kwds); 454 show=show,; 455 save=save,; --> 456 **kwds,; 457 ); 458 . ~/.pyenv/versions/3.6.9/lib/python3.6/site-package",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1313:640,test,test,640,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1313,2,"['log', 'test']","['logfoldchanges', 'test']"
Testability,"The rehauled logging module tends to clutter output, see, for instance; ```; import scanpy as sc; sc.settings.verbosity = 2; adata_sc = sc.datasets.pbmc68k_reduced(); sc.pp.neighbors(adata_sc); ```; which produces; ![image](https://user-images.githubusercontent.com/16916678/59159145-a56bb300-8ac5-11e9-8371-170995e43dfa.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/684:13,log,logging,13,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/684,1,['log'],['logging']
Testability,"The score_genes procedure currently uses a ranking system to split genes into bins of similar expression levels. The current approach fails with some datasets. - Currently the code doesn’t produce the expected number of bins of equal or approximately equal size, see #3168; - The code fails completely when the gene set has zero expression in some cells, see #3169. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #3168, closes #3169; - [x] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3167:471,Test,Tests,471,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3167,1,['Test'],['Tests']
Testability,"The test `test_marker_overlap` keeps failing on the travis build for python 3.5. This seems to happen on the first build from a PR, but if the build is restarted it passes. Given that my `n=3` for this, it could also be random. Grabbed the error log from #579 (build [1735.1](https://travis-ci.org/theislab/scanpy/jobs/514097606)):. ```; _____________________________ test_marker_overlap ______________________________; def test_marker_overlap():; # Test all overlap calculations on artificial data; test_data = sc.AnnData(X = np.ones((9,10))); test_data.uns['rank_genes_groups'] = dict(); test_data.uns['rank_genes_groups']['names'] = np.rec.fromarrays(; [['a', 'b','c','d','e'], ['a','f','g','h','i']]); test_data.uns['rank_genes_groups']['pvals_adj'] = np.rec.fromarrays(; [[0.001, 0.01, 0.02, 0.05, 0.6], [0.001, 0.01, 0.02, 0.05, 0.6]]); ; marker_genes = {'type 1':{'a','b','c'}, 'type 2':{'a','f','g'}}; ; t1 = sc.tl.marker_gene_overlap(test_data, marker_genes); t2 = sc.tl.marker_gene_overlap(test_data, marker_genes, normalize='reference'); t3 = sc.tl.marker_gene_overlap(test_data, marker_genes, method='overlap_coef'); t4 = sc.tl.marker_gene_overlap(test_data, marker_genes, method='jaccard'); t5 = sc.tl.marker_gene_overlap(test_data, marker_genes, top_n_markers=2); t6 = sc.tl.marker_gene_overlap(test_data, marker_genes, adj_pval_threshold=0.01); ; > assert t1.iloc[1,1] == 3.0; E assert 1.0 == 3.0; scanpy/tests/test_marker_gene_overlap.py:22: AssertionError; ```. Here's a [gist](https://gist.github.com/ivirshup/6965ebe2530c4eac67aebf41c3961959) of the full output. Any idea what's up @LuckyMD?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/580:4,test,test,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/580,7,"['Assert', 'Test', 'assert', 'log', 'test']","['AssertionError', 'Test', 'assert', 'log', 'test', 'tests']"
Testability,"The test suite can run into issues if a test generates a matplotlib figure but does not explicitly close it. Instead of having to remember that this call has to be added after every figure, I think we should just add a global test teardown that closes open figures. I think this will look like:. ```python; @pytest.fixture(autouse=True); def close_figures_on_teardown():; yield; plt.close(""all""); ```. * [Docs for yield](https://docs.pytest.org/en/stable/fixture.html#yield-fixtures-recommended); * [Docs for autouse](https://docs.pytest.org/en/stable/fixture.html#autouse-fixtures-fixtures-you-don-t-have-to-request). This looks to have an overhead of ~50µs per test, so not a big deal.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1662:4,test,test,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1662,4,['test'],['test']
Testability,"The tests and docs now fail due to https://github.com/theislab/scanpy/issues/2125.; For some reason, this https://github.com/theislab/scanpy/blob/b69015e9e7007193c9ac461d5c6fbf845b3d6962/scanpy/tools/_dendrogram.py#L139; has small values instead of 0s on the diagonal and thus fails the check of `is_valid_dm` inside `squareform` if `checks=True`. I don't understand why small values instead of 0s are there. New version of pandas? numpy?; This fix just sets `checks=False`, not sure if it is a good idea actually.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2129:4,test,tests,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2129,1,['test'],['tests']
Testability,"The tests are currently failing as scipy has updated their implementation of Mann-Whitney U tests, which we use as a reference. We should figure out what changed, and how to proceed (e.g. do we change our function, or pass different parameters to theirs in the test?). ping: @Koncopd",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1892:4,test,tests,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1892,3,['test'],"['test', 'tests']"
Testability,"The tests started failing with 4499d9460b8fe6e08fffb3c4cae0948849d40586, which obviously changed nothing that could make tests fail. So I’m sure some dependency updating is responsible (Travis started installing the newwer versions and the tests fail). We need to investigate why that is and how to fix it.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/162:4,test,tests,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/162,3,['test'],['tests']
Testability,"The tests use `group` but the code handles `obs`. TODO: should `heatmap` be changed too? Its docs actually speak of “variables or observations” and not “variables or groups”. About the test changes:. Some time ago, matplotlib made a change to font rendering. Since we have such high tolerance when comparing plots, that didn’t affect our tests. But that also means that our tests are almost useless, since the actual qualitative difference in the test that _did_ change behavior due to my PR wasn’t caught. Therefore I lowered the tolerance, which meant I had to regenerate everything with the new font rendering. | Before | After |; |--------|--------|; | ![](https://raw.githubusercontent.com/scverse/scanpy/bd758395a669c31a6c9eaa9239750fde368d3ca7/tests/_images/stacked_violin_std_scale_group/expected.png) | ![](https://raw.githubusercontent.com/scverse/scanpy/c06bbc83218ee426fa54e681ab39c8006e1668c0/tests/_images/stacked_violin_std_scale_group/expected.png) |",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3243:4,test,tests,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3243,7,['test'],"['test', 'tests']"
Testability,"These functions currently accept dask arrays, but use numpy functions on them. We have to add tests that check that they stay Dask arrays",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2813:94,test,tests,94,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2813,1,['test'],['tests']
Testability,"They kept failing. Something upstream (likely numba) or Azure’s testing machines seem to have become less consistent in calculating this. [This thread](https://github.com/scverse/scanpy/pull/1740#discussion_r596827747) came across that. @ivirshup’s final statement was. > This bug seems to be based on having nested parallelism and certain reductions. We can avoid it by just not having nested parallelism, which is what I've done for gearys_c. I don’t think exact float equality is a reasonable assumption, but if we want to continue to test for it, we need to be able to force numba to be predictable or so. Needs no release note. Added https://github.com/scverse/scanpy/issues/2688 to track this regression",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2687:64,test,testing,64,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2687,2,['test'],"['test', 'testing']"
Testability,This PR addresses #1562; A test requiring sorting was updated such that it works the same with pandas<1.2.0 or pandas>=1.2.0. The issue was caused by the test having identical values to sort.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1584:27,test,test,27,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1584,2,['test'],['test']
Testability,This PR addresses #286 and adds an extra check for valid color names. I added a test for the new functionality and took the opportunity to modify the plotting tests to mimic the way they are done for the pbmc3k tests.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/291:80,test,test,80,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/291,3,['test'],"['test', 'tests']"
Testability,"This PR addresses #646 by adding the option to pass a dict to the plotting functions heatmap, dotplot, matrixplot, tracksplot and stacked_violin. . Now, when `var_names` is a dictionary the `var_group_labels` and `var_group_positions` are set such that the dictionary key is a label and the group is the dict values. In the following example the 'brackets' plot on top of the image are prepared based on the markers dictionary:. ```PYTHON; marker_genes_dict = {'B-cell': ['CD79A', 'MS4A1'], ; 'T-cell': 'CD3D',; 'T-cell CD8+': ['CD8A', 'CD8B'],; 'NK': ['GNLY', 'NKG7'],; 'Myeloid': ['CST3', 'LYZ'],; 'Monocytes': ['FCGR3A'],; 'Dendritic': ['FCER1A']}; # use marker genes as dict to group them; ax = sc.pl.dotplot(pbmc, marker_genes_dict, groupby='bulk_labels'); ```; ![image](https://user-images.githubusercontent.com/4964309/58255475-5dcaf480-7d6d-11e9-83f6-bb4ebc8e33a7.png). This PR also introduces a small change in `sc.pl.stacked_violin` by setting `cut=0` as default parameter for `seaborn.violin`. This produces in my opinion better plots by removing the extension of the violin past extreme points. This is specially useful to avoid the violin plot to extend below zero expression values. . **Update**: I set the dependencies to `matplotlib==3.0.*` and `scipy==1.2` to solve failing tests. More details in the conversation",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/661:1291,test,tests,1291,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/661,1,['test'],['tests']
Testability,"This PR addresses https://scanpy.discourse.group/t/workflow-for-selecting-number-of-marker-genes-in-sc-queries-enrich/286. I wanted to have a simple interface to get the top n marker genes. Right now, `rank_genes_groups_df` only allows to threshold on logfc and pval, but especially for marker genes pval computation might not be statistically meaningful. It adds the following kind of functionality:; ```python; import scanpy as sc. adata = sc.datasets.pbmc68k_reduced(); sc.tl.rank_genes_groups(adata, 'louvain'). print(sc.get.rank_genes_groups_df(adata, ""1"", n_top_genes=2)); ```; output is just the top 2 genes of the list.; ```; names scores logfoldchanges pvals pvals_adj; 0 FCGR3A 47.682064 5.891937 3.275554e-141 3.579712e-139; 1 FTL 45.653259 2.497682 9.003150e-208 6.887410e-205; ```. it also works for multiple groups:. ```python; print(sc.get.rank_genes_groups_df(adata, None, n_top_genes=2)); ```; ```; group names scores logfoldchanges pvals pvals_adj; 0 0 CD3D 26.250046 3.859759 4.379061e-75 2.233321e-73; 1 0 LDHB 21.207499 2.134979 1.488480e-67 5.993089e-66; 2 1 FCGR3A 47.682064 5.891937 3.275554e-141 3.579712e-139; 3 1 FTL 45.653259 2.497682 9.003150e-208 6.887410e-205; 4 2 LYZ 38.981312 5.096991 1.697105e-172 1.298285e-169; 5 2 CST3 34.241749 4.388617 1.448193e-149 5.539337e-147; 6 3 NKG7 34.214161 6.089183 2.356710e-55 2.575547e-53; 7 3 CTSW 24.584066 5.091688 2.026294e-39 9.118324e-38; 8 4 CD79A 52.583344 6.626956 4.032974e-84 7.713062e-82; 9 4 CD79B 32.102913 4.990217 1.958507e-51 1.872822e-49; 10 5 FTL 26.084383 1.844273 1.236398e-74 2.364611e-72; 11 5 LST1 25.554073 3.170759 5.653851e-81 4.325196e-78; 12 6 LYZ 31.497107 4.328516 9.041131e-106 6.916466e-103; 13 6 CST3 23.850258 3.281016 2.491629e-83 9.530482e-81; 14 7 CST3 33.024582 4.195395 5.768439e-136 4.412856e-133; 15 7 LYZ 31.264187 4.267053 9.712334e-101 1.485987e-98; 16 8 PPIB 39.260998 3.990153 7.159966e-47 3.651583e-45; 17 8 MZB1 33.305500 8.979518 7.611322e-26 1.878278e-24; 18 9 STMN1 27.133045 5.9",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2145:252,log,logfc,252,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2145,3,['log'],"['logfc', 'logfoldchanges']"
Testability,"This PR addresses issues from #979 and #1103 related to `sc.pl.dotplot` and replaces PR #1127. Furthermore, the current PR attempts to unify common code between `dotplot`, `matrixplot` and `stacked_violin` plots while at the same time adding more flexibility to the plots. . This PR also makes possible to plot fold changes, log fold changes and p-values from `sc.tl.rank_genes_groups` as suggested in #562. To achieve this the `sc.pl.dotplot`, `sc.pl.matrixplot` and `sc.pl.stacked_violin` method had been transformed into wrappers for the new `DotPlot`, `MatrixPlot` and `StackedVioling` classes. Accessing the new classes directly allows further fine tuning of the plots. The use of the `sc.pl.dotplot`, `sc.pl.matrixplot` and `sc.pl.stacked_violin` didn't change, only the new parameter `return_fig` was added. For clarity, the relevant code has been moved to `scanpy.plotting._groupby_plots.py`. . The new plot classes are all descendants of a `BasePlot` class that captures most of the common code shared between the plots. The design of the classes follows the method chaining (as found in Pandas or Altair). This allows the addition of independent features (via well documented methods) to the plot without increasing the number parameters of a single function. This was first suggested here #956. . For example, for dotplot is now is possible to `add category totals`, define the titles for the colorbar and size legend and modify the values for edge color and edge line with for dot plot and the size exponent used (among may other options). For example:. ```PYTHON; adata = sc.datasets.pbmc68k_reduced(); markers = {'T-cell': ['CD3D', 'CD3E', 'IL32'], 'B-cell': ['CD79A', 'CD79B', 'MS4A1'], ; 'myeloid': ['CST3', 'LYZ']}; dp = sc.pl.dotplot(adata, markers, groupby='bulk_labels', return_fig=True); dp.add_totals(size=1.2)\; .legend(color_title='log(UMI count+1)', width=1.6, show_size_legend=True)\; .style(cmap='Blues', dot_edge_color='black', dot_edge_lw=1, size_exponent=1.5)\; .show(); ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1210:325,log,log,325,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1210,1,['log'],['log']
Testability,"This PR addresses part of #758. I just added a gene filtering addition to the `batch_key` variant of `sc.pp.highly_variable_genes()`. This ensures that the function does not fail because a gene is not expressed in a batch. I would welcome some feedback on setting dispersions to 0 for filtered out genes. I think this is the standard set by Seurat, and also what is implemented by @gokceneraslan in the original function. . I have tested on my own data for correct implementation. Testing for result is more difficult in this I guess...",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/824:431,test,tested,431,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/824,2,"['Test', 'test']","['Testing', 'tested']"
Testability,"This PR adds multiprocessing to the pp.regress_out function. . Here some benchmarks:. ```python; import numpy as np; import pandas as pd; import scanpy.api as sc; from anndata import AnnData; from scipy.sparse import random. # create a matrix with 20.000 cells with 3000 genes; adata = AnnData(random(20000, 3000, density=0.6, format='csr')); ```; **Benchmark using ordinal variables**; ```python; # create a categorical column and run regress out using ; # the categorical column; adata.obs['batch'] = pd.Categorical(np.random.randint(1, 4, size=adata.X.shape[0])); %timeit res = sc.pp.regress_out(adata, keys='batch', n_jobs=20, copy=True); ```; > 8.44 s ± 292 ms per loop (mean ± std. dev. of 7 runs, 1 loop each). ```python; # import previous version of the function (which I saved in the file simple_old.py); from scanpy.preprocessing.simple_old import regress_out_old; %timeit res_old = regress_out_old(adata, keys='batch', n_jobs=1, copy=True); ```; > 1min 5s ± 4.45 s per loop (mean ± std. dev. of 7 runs, 1 loop each). **Compare that the previous and the new output are the same**; ```python; np.array_equal(res.X, res_old.X); ```; > True. **Benchmark using ordinal variables**; ```python; adata.obs['percent_mito'] = np.random.rand(adata.X.shape[0]); adata.obs['n_counts'] = adata.X.sum(axis=1). %timeit res2 = sc.pp.regress_out(adata, keys=['n_counts', 'percent_mito'], n_jobs=32, copy=True); ```; > 4.99 s ± 501 ms per loop (mean ± std. dev. of 7 runs, 1 loop each). ```python; %timeit res2_old = regress_out_old(adata, keys=['n_counts', 'percent_mito'], n_jobs=1, copy=True); ```; > 41.2 s ± 7.79 s per loop (mean ± std. dev. of 7 runs, 1 loop each). ```python; np.array_equal(res2.X, res2_old.X); ```; > True",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/164:73,benchmark,benchmarks,73,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/164,3,"['Benchmark', 'benchmark']","['Benchmark', 'benchmarks']"
Testability,"This PR adds some utilities for choosing which values to use for `X` inside scanpy functions. These utilities include a getter and setter for representations of the observations and some checks for testing these functions. This approach has been applied to `sc.pp.scale` and `sc.pp.log1p` as demonstrations, and because that code was in need of a refactor. I think it results in cleaner code with more standardized behaviors. The implementation of `sc.pp.scale` is just a hammered out version of what I commented here: https://github.com/theislab/scanpy/pull/1135#issuecomment-608200735. Still todo:. - [x] Figure out how documentation should work. In particular automatic documentation with type variables; - [x] Figure out tab completion for arguments not in the default/ fallback definition. This PR would:. * Close #1089; * Supercede #1135",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1173:198,test,testing,198,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1173,1,['test'],['testing']
Testability,This PR adds the following to `rank_genes_groups_*` plots:; * Allows `n_genes` to be a negative number to plot the bottom ranked `n_genes`. Useful to check what is not being expressed on a cluster.; * Added `gene_names` to `rank_genes_groups_matrixplot` and `rank_genes_groups_dotplot`. This option is for checking a ; given list of genes instead of the top or bottom ranked genes. This allows to check for example log fold change of p-values for; the given genes.; * `gene_symbols` was not working properly. Now it is.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1529:415,log,log,415,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1529,1,['log'],['log']
Testability,"This PR allows the creation of embedding as follows:. ![image](https://user-images.githubusercontent.com/4964309/63443678-89757d80-c435-11e9-8218-5f8c82ea7629.png). sumary PR:; * Added `sc.pl.embedding` to the API. This makes possible to select any 'basis' for plotting. This name is consistent with other functions that accept 'basis' as parameter: `sc.pl.embedding_density` and `scvelo.velocity_embedding` (#762) ; * vmax and vmin now could be a list to indicate individual vmin/vmax range when using multiple plots (#775).; * vmax and vmin can indicate a quantile using the format `qNN` to indicate the NN quantile. Eg. `vmax=['q90', 'q80']` (#775); * vmax and vmin can be a user defined function. (#775); * added the ~~`add_contour`~~ `add_outline` parameter which produces figures like the one on top (I will be happy to know if there is a better name for this type of scatter plot as `contour` may refer to some specific type of plots). TODO:; - [x] Correct style; - [x] Pass tests; - [x] Add tests for new parameters; - [x] Find better name for 'contour'",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/794:982,test,tests,982,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/794,2,['test'],['tests']
Testability,"This PR contains a work in progress version of development docs. I would like to have an initial version of this in the next release. Right now we just have [CONTRIBUTING.md](), but this not particularly discoverable, complete, or up to date. The idea here is to be a useful resource both to first time developers and maintainers about development processes and how contributing works. Inspirational sources (which we can probably crib from with attribution):. * [Pandas development docs](https://pandas.pydata.org/pandas-docs/stable/development/contributing.html); * [mdanalysis contributing guide](https://userguide.mdanalysis.org/stable/contributing.html). ## Key features:. * Guidelines on external tools; * Guide for testing; * Guide for writing and building docs; * Release and merging guides",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1544:722,test,testing,722,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1544,1,['test'],['testing']
Testability,"This PR introduces the following changes:. * `swap_axes` option was added to `pl.matrixplot` and `pl.heatmap`. When `swap_axes=True`, the x axis contains cells and the y axis contains genes (#349).; * added `show_genes_labels` to `pl.heatmap`. This allows to have compact heatmaps without overlapping gene labels.; * added lines to separate categories in `pl.heatmap`.; * changed categories colors in `pl.heatmap` by the colors found in `adata.uns`; * removed empty space that was present in different plots; * added a `layer` option to specify which layer to use for plotting. ; * added a new visualization called `pl.tracksplot`. ; * changed `if <variable> is True` by `if <variable>` after @flying-sheep remarks. ; * added `setup()` from matplotlib.testing; * reduced dpi of test images to 40.; * added var_groups plot for stacked_violin when `swap_axes=True` ; * improved layout of stacked_violin (default width and linewidth of violin plots). As an example, here is how some of the changes look like. I am using the `rank_genes_groups_*` plots because they contain more visual elements. Further examples can be seen here: https://gist.github.com/fidelram/2289b7a8d6da055fb058ac9a79ed485c. **heatmap** with `swap_axes=True, show_gene_labels=False`:; ![image](https://user-images.githubusercontent.com/4964309/48777204-46358500-ecd2-11e8-8ced-e772e0987f95.png). **matrixplot** with `swap_axes=True`:. ![image](https://user-images.githubusercontent.com/4964309/48777447-dffd3200-ecd2-11e8-9720-31e084eec0f4.png). **new *tracksplot***: Each *track* contains the var (genes) values sorted and colored according to the categories used:; ![image](https://user-images.githubusercontent.com/4964309/48777284-7c730480-ecd2-11e8-8e3b-ab4a02969311.png). **tracksplot** using the results of `sc.tl.rank_genes_groups`:; ![image](https://user-images.githubusercontent.com/4964309/48777641-6fa2e080-ecd3-11e8-90be-e3742058eb99.png)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/369:752,test,testing,752,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/369,2,['test'],"['test', 'testing']"
Testability,This PR resolves the issues with:. * error when the type of a category is not `str`; * inconsistent color assigned to categories; * white space ; * horizontal lines not well aligned. Missing. - [x] Tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1603:198,Test,Tests,198,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1603,1,['Test'],['Tests']
Testability,"This PR. - makes `_utils.check_nonnegative_integers` work with Dask arrays and with that also `rank_genes_groups`; - Adds type hints that I added while re-familiarizing myself with some APIs; - adds a function pair `lazy_{and,or}` that make it possible to delay checks with dask:. ```py; >>> def fail():; ... raise AssertionError(); >>> # rhs can be a function or dask array; >>> lazy_and(False, fail); False; >>> lazy_and(False, da.array(True).map_blocks(lambda _: fail(), meta=np.bool_(True))); False; >>> # lhs can be a function or dask array for nested use; >>> # when not nested, a lhs function will be called eagerly like in `a() and b`; >>> lazy_and(False, lazy_and(fail, _)); False; >>> # will not create a recursive dask array; >>> lazy_and(da.array(True), da.array(False)).compute(); False; >>> # will complain on invalid use; >>> lazy_and(True, lambda: da.array(...)); 'AssertionError: Use lazy_*(_, da.array(...)) instead of lazy_*(_, lambda: da.array(...)).'; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2621:315,Assert,AssertionError,315,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2621,2,['Assert'],['AssertionError']
Testability,"This also fixes a few problems namely that tests are no modules, so you should use fixtures instead of importing. If we want test tools that dependent packages can use we should create a submodule like `scanpy.test_utils` or so. I forgot to add the new locations to `tool.black.exclude`, so the files got reformatted. I hope that’s OK?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1528:43,test,tests,43,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1528,2,['test'],"['test', 'tests']"
Testability,"This bug only occurred in 1.6.0 but not 1.5.0. I was running `scanpy 1.6.0` this:. `sc.tl.filter_rank_genes_groups(adata, groupby=obs,\; max_out_group_fraction=max_out_group_fraction,; min_fold_change=min_fold_change,use_raw=use_raw,; min_in_group_fraction=0.25,log=log)`. But got this error:. ```; Filtering genes using: min_in_group_fraction: 0.25 min_fold_change: 2, max_out_group_fraction: 0.25. ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-91-d477dca208af> in <module>; 2 max_out_group_fraction=max_out_group_fraction,; 3 min_fold_change=min_fold_change,use_raw=use_raw,; ----> 4 min_in_group_fraction=0.25,log=log). /usr/local/lib/python3.6/dist-packages/scanpy/tools/_rank_genes_groups.py in filter_rank_genes_groups(adata, key, groupby, use_raw, log, key_added, min_in_group_fraction, min_fold_change, max_out_group_fraction); 725 var_names,; 726 groupby='__is_in_cluster__',; --> 727 use_raw=use_raw,; 728 ); 729 . /usr/local/lib/python3.6/dist-packages/scanpy/plotting/_anndata.py in _prepare_dataframe(adata, var_names, groupby, use_raw, log, num_categories, layer, gene_symbols); 1808 matrix = adata.raw[:, var_names].X; 1809 else:; -> 1810 matrix = adata[:, var_names].X; 1811 ; 1812 if issparse(matrix):. /usr/local/lib/python3.6/dist-packages/anndata/_core/anndata.py in __getitem__(self, index); 1085 def __getitem__(self, index: Index) -> ""AnnData"":; 1086 """"""Returns a sliced view of the object.""""""; -> 1087 oidx, vidx = self._normalize_indices(index); 1088 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1089 . /usr/local/lib/python3.6/dist-packages/anndata/_core/anndata.py in _normalize_indices(self, index); 1066 ; 1067 def _normalize_indices(self, index: Optional[Index]) -> Tuple[slice, slice]:; -> 1068 return _normalize_indices(index, self.obs_names, self.var_names); 1069 ; 1070 # TODO: this is not quite complete... /usr/local/lib/python3.6/dist-packages/anndata/_core/inde",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1487:262,log,log,262,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1487,5,['log'],['log']
Testability,"This fixes #415, by allowing one to find variable genes using the `equal_frequency` option. It also adds and option to change the number of bins for cell ranger flavor. I originally tried to copy the implementation in Seurat, which would allow a test similar to what's already present for the `equal_width` implementation. However the Seurat code has an error:; ```R; else if (binning.method==""equal_frequency"") {; data_x_bin <- cut(x = gene.mean, breaks = c(-1,quantile(gene.mean[gene.mean>0],probs=seq(0,1,length.out=num.bin)))); }; ```; The `-1` in the code makes it such that there is always only one value in the first bin, which goes from -1 to the minimum value. Not sure why they have this, but then we get different answers since the Scanpy code in `highly_variable_genes` always makes bins that have only one gene significant (to correct the other error from Seurat that normally excludes these bins/genes, which often contain some highly-expressed genes). Additionally, the `cut` function in R sometimes returns bin edges with different rounding than the Seurat implementation since Seurat does not modify the default `dig.lab = 3`. In contrast, I believe pandas uses the actual cutoffs in the data.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/572:246,test,test,246,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/572,1,['test'],['test']
Testability,"This includes fixes for both #469 and #470 . #469 was a small indexing error. To fix #470, a `rankby_abs` check is included in the `logreg` section of the method that mirrors the `rankby_abs` checks in the other two methods. This PR additionally updates `select_groups` function in `scanpy/utils.py.` I was having some issues when the clusters that I was using were labelled by integers (i.e. when `adata.obs[key].cat.catagories.values.dtype` was some form of integer) AND when I was looking at a subset of the clusters (e.g. `groups=[0,1]`, not when `groups='all'`). At the start of the `rank_genes_groups` function, these cluster labels are converted into strings in the `groups_order` variable. In the `select_groups` function (line 667 of the original utils.py file), however, we call ; ``` ; np.where(adata.obs[key].cat.categories.values == name)[0][0]; ```; which fails with an error (since `name` is a string from `select_groups` and the elements of `adata.obs[key].cat.categories.values` are integers). Thus, this PR includes a check for the `dtype` of `adata.obs[key].cat.categories.values` - if it is numeric, we instead look at ; ``` ; np.where(adata.obs[key].cat.categories.values == float(name))[0][0]; ```. This error should only appear if the cluster labels are integers (since this is the only time that the cluster labels are converted to strings for `groups_order` in `rank_genes_groups`) but the above fix should also work if the cluster labels are any floating point numbers (just in case the `rank_genes_groups` is ever generalized in this way). ([Here](https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.scalars.html) is a link to the numpy type hierarchy). Edit: added a line number",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/471:132,log,logreg,132,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/471,1,['log'],['logreg']
Testability,"This is a bit of a grab bag, but is mostly `io` related. This started out as me trying to learn some vscode git integration, but turns out it's not great at figuring out what lines changed. Apologies for any weird stuff in the commits. Main changes:. * I've made the tests for `sc.datasets` more thorough. Now they actually check the data looks kinda okay, rather than whether they throw an error.; * I've removed cache-ing in a few places; * The `read_10x_*` tests, where that definitely shouldn't have been happening; * In a couple of the `sc.datasets`. I'd be willing to go back on this, but we shouldn't let them use the cache during testing.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/592:267,test,tests,267,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/592,3,['test'],"['testing', 'tests']"
Testability,"This is a fix for the issue discussed in #517. I implemented it by adding a new parameter to indicate whether the data in `adata.X` is log-transformed or not, and set it to True as a default, assuming most users will have log-transomed data at this point. This fix is assuming the transformation was done with log1p, as in `sc.pp.log1p.` The matrix is transformed back to raw counts only for the fold-change calculations - everything else is left the same to maintain the tests in log-space. I also included a fix for a bug in the indexing that was implemented in the original chunking for the wilcoxon test. This was noted in #469 and the same fix is implemented in PR #471 - thanks for catching that bug!",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/519:135,log,log-transformed,135,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/519,5,"['log', 'test']","['log-space', 'log-transformed', 'log-transomed', 'test', 'tests']"
Testability,This is a pull request to integrate the Self-Assembling Manifold (SAM) algorithm into scanpy. A brief summary of the method:; SAM iteratively rescales the expressions of genes based on their spatial variability along the intrinsic manifold of the data. Extensive benchmarking has shown this approach to improve dimensionality reduction and feature selection for both 'easy' and 'challenging' datasets. SAM is especially powerful when analyzing datasets with only subtle differences in gene expression between cell types. More information can be found in the eLife publication: https://elifesciences.org/articles/48994. I still need to write the test script as well as ensure that the added code follows the BLACK coding style. Please let me know if there are any other issues I should fix prior to merging.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/903:263,benchmark,benchmarking,263,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/903,2,"['benchmark', 'test']","['benchmarking', 'test']"
Testability,"This is a result of a change in fc840961c4a9f49cfcea975d01f79e5345fc521e. The problem is not exposed in tests since `scanpy/tests/conftest.py` overrides the default verbosity to `hint`. However, if the line in that file is commented out then the tests fail. I'm not sure of a simple way to add a regression test, but this change fixes the problem as verified by a manual test.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/486:104,test,tests,104,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/486,5,['test'],"['test', 'tests']"
Testability,"This is a small update to use numba more effectively and slightly decrease test times for calculating qc metrics. * I've enabled no python mode for `top_segment_proportions_sparse_csr`; * I've removed `numba` from functions currently only used for testing; * This mainly reduces test time. If anyone wants to use the `top_proportions` function to make `plotScater` type plots, maybe these should get re-enabled. Test times are still not great, but since it's due to numba compilation I'm not sure much can be done about it. The ideal solution is it becoming possible to have numba functions which are both parallel and cached.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/462:75,test,test,75,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/462,4,"['Test', 'test']","['Test', 'test', 'testing']"
Testability,"This is a version of Sphix-book-based scanpy docs. **What's lost?**; - Docsearch; - Edit on github button (was weird anyway as no other package does that). **What's gained?**; - Aesthetics, easier to read; - Git submodule for tutorials; - sphinx.ext.viewcode so each function has a source button (effectively replaces edit on github button). **What else changed?**; - I removed the release latest stuff, not sure what value it was adding; - API docs are split logically. View the rendered docs here:. https://icb-scanpy--2220.com.readthedocs.build/en/2220/index.html. What's left to do:. - [x] Update tutorials index page to use nbgallery feature of nbsphinx; - [x] Make home index page use a grid of cards, two columns; - [x] Add to contributing guide how to manage the git submodule (really just occasionally do `git submodule update --remote`); - [x] Annotate CSS overrides; - [x] Exchange sphinx ext viewcode for linkcode (probably in scanpydoc)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2220:460,log,logically,460,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2220,1,['log'],['logically']
Testability,This is an attempt to fix #1011. I have taken my cue from https://github.com/lmcinnes/umap/pull/259/files as suggested in the issue's thread. I have also added some tests (which focus on ensuring that results are successfully created rather than ensuring correctness). I hope this helps.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1413:165,test,tests,165,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1413,1,['test'],['tests']
Testability,"This is basically the minimum amount of changes to separate things out and fix some problems with the test setup, plus unification of how we handle optional dependencies in tests. Fixes #2225",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2235:102,test,test,102,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2235,2,['test'],"['test', 'tests']"
Testability,"This issue references the following line of code:. https://github.com/theislab/scanpy/blob/560bd5d348a502d5152eaf20f5f8bef794562a97/scanpy/plotting/_dotplot.py#L185. The documentation accurately describes the `standard_scale='var'` normalization strategy as ; ""Whether or not to standardize the given dimension between 0 and 1, meaning for each variable or group, subtract the minimum and divide each by its maximum."". Something about this normalization has bothered me for a long time, and I finally realized: it's the subtraction of the minimum value. This subtraction means that the minimum valued dot will have color = 0. Imagine a case with only two `groupby` groupings: healthy and disease. In that case, one of the dots will always have color 0, and the other will have color 1. Totally binary, no matter how close the actual values are. I feel that this kind of normalization is very misleading for scRNA-seq data!. A random example follows:. This image makes it look like these genes are very specific to one tissue or another ---------------; ![image](https://user-images.githubusercontent.com/10214815/112070104-6d6f1c00-8b43-11eb-9944-b113da55a567.png). But in reality, if we had scaled by just dividing by the max (and not first subtracting the min), then we'd see -------; ![image](https://user-images.githubusercontent.com/10214815/112070028-4add0300-8b43-11eb-8317-412b74b274aa.png). which is much more realistic, and much closer to what you'd see if you used a log-scaling instead, and made several different plots for genes expressed at different levels overall. I leave it up for discussion, but I would suggest two types of fixes:; 1. delete the above line 185 (and the other places it shows up...); 2. allow the user to specify a custom normalization function (but change the default to `x / max(x)` instead of `(x - min(x)) / max(x)`)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1757:1478,log,log-scaling,1478,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1757,1,['log'],['log-scaling']
Testability,This makes local test runs using e.g. pbmc3k faster,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3177:17,test,test,17,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3177,1,['test'],['test']
Testability,"This might be a bit of a rant, and I'm aware there are some good arguments for the way things are... but I just wasted 4 hours of my life because I wasn't aware of the default `gex_only=True` in `sc.read_10x_h5()`. Just wanted to flag that if scanpy support for multimodality becomes a thing, then this default may need to change to prevent frustration. I think moving read/write functionality to AnnData was already discussed at some point. For multimodal support, this might become more important again. If this is moved, then `read_10x_h5` should probably not default to `gex_only=True` anymore. Would it already be worth either making `gex_only` a required input? For backward compatability it could also just trigger a logging warning for now. I do think that this is quite an important thing to let people know with more and more 10X Multiome data being generated now (and CITE-seq for that matter).",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1949:724,log,logging,724,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1949,1,['log'],['logging']
Testability,This pull request contains mainly 3 changes:. 1. Implementation of Wilcoxon-Rank-Sum Test in sc.tl.rank_gene_groups; 2. Test function for pytest (including two binary files containing ground truth for test results); 3. A (preliminary) export function for the interactive SPRING exploration tool ; https://github.com/AllonKleinLab/SPRING,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/42:85,Test,Test,85,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/42,3,"['Test', 'test']","['Test', 'test']"
Testability,This removes `self` for `pynndescent` in `scrublet` and makes it reproducible for smaller datasets. I also added a test param that represent this. I also think this might help with larger datasets to remove self from the computation.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2896:115,test,test,115,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2896,1,['test'],['test']
Testability,"This replaces the random choice with iterating over all combinations. That way, if you want to debug a certain combination, you can just do so instead of rerunning the test and hoping it gets picked. Sadly AFAIK it’s not possible to have a fixture that depends on other fixture values and generates a variable amount of values depending on their arguments: either you have `fixture(params=some_list)` which creates `len(some_list)` values or not, then it creates one. Therefore I had to get rid of the fixtures and use a static list instead. It’s not that much slower to run them all:. before: 24 passed, 6 xfailed in 1.81s ; after: 56 passed, 14 xfailed in 3.41s",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3294:168,test,test,168,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3294,1,['test'],['test']
Testability,This reverts commit 284c987dedfcf2fc28dd79e682ef721ccd3ff40d. <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3153:383,Test,Tests,383,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3153,1,['Test'],['Tests']
Testability,This should allow us to use the dedicated test runner UI. See: https://github.com/tonybaloney/pytest-azurepipelines,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2111:42,test,test,42,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2111,1,['test'],['test']
Testability,This should fix the tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2650:20,test,tests,20,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2650,1,['test'],['tests']
Testability,This skips the test `test_harmony_integrate` if harmonypy is not installed.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1428:15,test,test,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1428,1,['test'],['test']
Testability,This would fix #2941 . I created some numba.njit() kernels that perform in-place substitutions based on the assumption that we only change existing values and don't add new ones (where all the scipy overhead comes from). . Benchmarks for 90k cells and 25k genes:; CSR:; old 23 s | new 1 s | 23x; CSC:; old 61 s | 1.6 s | 36x,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2942:223,Benchmark,Benchmarks,223,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2942,1,['Benchmark'],['Benchmarks']
Testability,This. - moves all the external plotting routines to `scanpy/external/pl.py`; - adds one for harmony; - Fixes a plotting bug this triggered; - Makes harmony the first tool using obsp/varp. @awnimo can you please test this? Does the plot look like you want it to?,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1004:211,test,test,211,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1004,1,['test'],['test']
Testability,"Three minor fixes:. 1. Remove noisy print statement from doc builds. Looked like it might have been left over from debugging, and doesn't seem to break anything. @flying-sheep, does that sound right?; 2. When setting `sc.settings.datasetdir`, I'd meant to use `Path.resolve` instead of `Path.absolute`.; 3. Sped up embedding density test by using a dataset where umap was precomputed. Is this fine @LuckyMD?",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/616:333,test,test,333,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/616,1,['test'],['test']
Testability,"Timer() as pass_time:; --> 296 mutated |= check(pss.run_pass, internal_state); 297 with SimpleTimer() as finalize_time:; 298 mutated |= check(pss.run_finalizer, internal_state). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/compiler_machinery.py:269, in PassManager._runPass.<locals>.check(func, compiler_state); 268 def check(func, compiler_state):; --> 269 mangled = func(compiler_state); 270 if mangled not in (True, False):; 271 msg = (""CompilerPass implementations should return True/False. ""; 272 ""CompilerPass with name '%s' did not.""). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/core/typed_passes.py:306, in ParforPass.run_pass(self, state); 295 assert state.func_ir; 296 parfor_pass = _parfor_ParforPass(state.func_ir,; 297 state.typemap,; 298 state.calltypes,; (...); 304 state.metadata,; 305 state.parfor_diagnostics); --> 306 parfor_pass.run(); 308 # check the parfor pass worked and warn if it didn't; 309 has_parfor = False. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:2926, in ParforPass.run(self); 2924 # Validate reduction in parfors.; 2925 for p in parfors:; -> 2926 get_parfor_reductions(self.func_ir, p, p.params, self.calltypes); 2928 # Validate parameters:; 2929 for p in parfors:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3549, in get_parfor_reductions(func_ir, parfor, parfor_params, calltypes, reductions, reduce_varnames, param_uses, param_nodes, var_to_param); 3547 if param_name in used_vars and param_name not in reduce_varnames:; 3548 param_nodes[param].reverse(); -> 3549 reduce_nodes = get_reduce_nodes(param, param_nodes[param], func_ir); 3550 # Certain kinds of ill-formed Python (like potentially undefined; 3551 # variables) in combination with SSA can make things look like; 3552 # reductions except that they don't have reduction operators.; 3553 # If we get to this point but don't find a reduction operator; 3554 # then assume it is this situ",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:9083,test,test,9083,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,"To elaborate a bit on my comment on pull request #284 that `sc.pp.pca(adata, use_highly_variable=True)` does not reproduce the same umap embedding as subsetting the genes. I have done the following:. ```; disp_filter = sc.pp.filter_genes_dispersion(adata.X, flavor='cell_ranger', n_top_genes=4000, log=False); adata_hvg = adata.copy(); adata_hvg = adata_hvg[:, disp_filter['gene_subset']]; sc.pp.filter_genes_dispersion(adata, flavor='cell_ranger', n_top_genes=4000, log=False, subset=False). sc.pp.pca(adata, n_comps=50, use_highly_variable=True, svd_solver='arpack'); sc.pp.neighbors(adata); sc.tl.umap(adata). sc.pp.pca(adata_hvg, n_comps=50, svd_solver='arpack'); sc.pp.neighbors(adata_hvg); sc.tl.umap(adata_hvg). sc.pl.umap(adata, color='n_counts', use_raw=False); sc.pl.umap(adata_hvg, color='n_counts', use_raw=False); ```. The umap output is:; ![screen shot 2018-10-25 at 10 37 36](https://user-images.githubusercontent.com/13019956/47487680-29c53a80-d843-11e8-8535-de3c84f3a3b3.png). There is clearly a difference between the two cases also in the tsne, draw_graph and diffmap visualisations. Only pca seems to be consistent judging by eye.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/324:298,log,log,298,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/324,2,['log'],['log']
Testability,"True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True],; [ True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True,; True, True]])]; ```; At first I was creating all dendrograms in a list comprehension and it did the same. ; I also directly inputted a list of my own and I obtained the same result....; I guess dendrogram don't detect the genes. When running functions such as ; ```python ; ## Testing with creating the dendro manually. def do_corr_mat(adata, var_names, groupby, method = ""spearman"") :; categories, obs_tidy = _prepare_dataframe(adata, var_names=var_names, groupby=groupby); mean_df = obs_tidy.groupby(level=0).mean(); ; return mean_df.T.corr(method=method). def do_dendro(corr_matrix, method=""ward"") :; z_var = linkage(corr_matrix, method=linkage); return dendrogram(z_var, labels=mean_df.index); ``` ; Everything works fine ! . Thanks by advance, ; C. #### Versions. 1.6.0. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1549:4838,Test,Testing,4838,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1549,1,['Test'],['Testing']
Testability,"Two major, and two minor, updates to qc metric calculation:. ## Tests run much faster now. `test_qc_metrics.py` used to take ~30 seconds, now takes ~2. These tests have been kinda slow for a while. This was mostly due to numba compilation. I was using `numba.njit(parallel=True)`, which cannot be cached so compilation occurred every time the tests ran. However, I expect most use cases only calculate QC metrics once in a session, and only for large datasets (at least 300,000 cells) is parallelization + compilation faster than performing the calculation in a single thread. Now a cached single threaded version is used unless the dataset is large. ## Can now calculate observation and variable metrics separately. Split the calculation of qc metrics into two functions for obs and var. These separate calls are now available as: `describe_obs` and `describe_var` after `pd.DataFrame.describe`. This is mostly to go along with my split-apply-combine experiments. In particular a use case like:. ```python; (adata; .groupby(obs=""leiden""); .apply(sc.pp.describe_var); .combine(...); ); ```. Where metrics like number of fraction of cells, mean expression, etc. are calculated within each group (useful for things like #562). ## Minor updates. * User can now choose to use expression from `layers` or `raw` instead of `adata.X`; * Doc updates 🤞 (am I polluting `sc.pp._docs.py` too much?)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/615:64,Test,Tests,64,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/615,3,"['Test', 'test']","['Tests', 'tests']"
Testability,Understanding normalization and log transformation,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1364:32,log,log,32,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1364,1,['log'],['log']
Testability,Unit tests fail with latest version of seaborn,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1420:5,test,tests,5,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1420,1,['test'],['tests']
Testability,Update contributing guide to include tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/772:37,test,tests,37,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/772,2,['test'],['tests']
Testability,Update log handling,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2855:7,log,log,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2855,1,['log'],['log']
Testability,Update tests now that 3d plots work,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1493:7,test,tests,7,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1493,1,['test'],['tests']
Testability,"Update to `downsample_counts` to allow downsampling total counts, similar to normalization by `cellranger aggr` (I'm pretty sure on this, there's a lot going on in their code). Additionally, enabled caching for the `numba`'d function, which cuts down on test time. As adding this feature meant renaming `target_counts` to `counts_per_cell`, this becomes a breaking change. Since it's breaking, I've also gone ahead and set `replace=False` by default as mentioned before (#340). Definitely willing to make changes. I've implemented this since I'm doing some integration work and figured it'd be nice to be able to try the basic `cellranger` strategy. Edit: The failing PAGA test occurs locally on master as well, but I don't think I broke that.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/474:254,test,test,254,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/474,2,['test'],['test']
Testability,Update unit test for mannwhitneyu to work with scipy 1.7,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1893:12,test,test,12,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1893,1,['test'],['test']
Testability,Upload scrublet scores on test failure,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3069:26,test,test,26,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3069,1,['test'],['test']
Testability,"Use logfoldchanges, fractions for filtering if they are in `adata.uns['rank_genes_groups']` already, otherwise calculate using the same formula as in `rank_genes_groups`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1391:4,log,logfoldchanges,4,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1391,1,['log'],['logfoldchanges']
Testability,Use matplotlib 3.1 and adapt tests,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1020:29,test,tests,29,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1020,1,['test'],['tests']
Testability,Use multiple groups as reference when testing genes,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/984:38,test,testing,38,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/984,1,['test'],['testing']
Testability,"Using `is` in a test, tests for identity and not equality, this leads to; inconsistent behaviours when testing for equality with strings. See https://stackoverflow.com/questions/1504717/why-does-comparing-strings-using-either-or-is-sometimes-produce-a-differe",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/508:16,test,test,16,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/508,3,['test'],"['test', 'testing', 'tests']"
Testability,"Vector images would be rasterized when `settings._vector_friendly` is True. This should be fixed so that when `settings._vector_friendly` is True, image is NOT rasterized, and when False, image should be rasterized. <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] Closes #1405; - [x] Tests included or not required because: simple reversion of booleans; <!-- Only check the following box if you did not include release notes -->; - [x] Release notes not necessary because: did not create a release on this",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3181:541,Test,Tests,541,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3181,1,['Test'],['Tests']
Testability,"Warning: Vertical orientation ignored with only `x` specified.; warnings.warn(single_var_warning.format(""Vertical"", ""x"")); C:\Users\laurenh\anaconda3\lib\site-packages\seaborn\_core.py:1303: UserWarning: Vertical orientation ignored with only `x` specified.; warnings.warn(single_var_warning.format(""Vertical"", ""x"")). #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]; anndata 0.7.5; scanpy 1.6.0; sinfo 0.3.1; -----; PIL 8.0.1; anndata 0.7.5; backcall 0.2.0; bottleneck 1.3.2; cairo 1.20.0; cffi 1.14.3; cloudpickle 1.6.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; cytoolz 0.11.0; dask 2.30.0; dateutil 2.8.1; decorator 4.4.2; get_version 2.1; h5py 2.10.0; igraph 0.8.3; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.1; joblib 0.17.0; kiwisolver 1.3.0; legacy_api_wrap 0.0.0; llvmlite 0.34.0; louvain 0.7.0; matplotlib 3.3.2; mkl 2.3.0; mpl_toolkits NA; natsort 7.1.1; nt NA; ntsecuritycon NA; numba 0.51.2; numexpr 2.7.1; numpy 1.19.2; packaging 20.4; pandas 1.1.3; parso 0.7.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.8; psutil 5.7.2; pycparser 2.20; pygments 2.7.2; pynndescent 0.5.1; pyparsing 2.4.7; pythoncom NA; pytz 2020.1; pywintypes NA; scanpy 1.6.0; scipy 1.5.2; seaborn 0.11.0; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; sphinxcontrib NA; statsmodels 0.12.0; storemagic NA; tables 3.6.1; tblib 1.7.0; texttable 1.6.3; tlz 0.11.0; toolz 0.11.1; tornado 6.0.4; traitlets 5.0.5; typing_extensions NA; umap 0.5.0; wcwidth 0.2.5; win32api NA; win32com NA; win32security NA; yaml 5.3.1; zmq 19.0.2; zope NA; -----; IPython 7.19.0; jupyter_client 6.1.7; jupyter_core 4.6.3; jupyterlab 2.2.6; notebook 6.1.4; -----; Python 3.8.5 (default, Sep 3 2020, 21:29:08) [MSC v.1916 64 bit (AMD64)]; Windows-10-10.0.17763-SP0; 12 logical CPU cores, Intel64 Family 6 Model 165 Stepping 2, GenuineIntel; -----; Session information updated at 2021-03-14 11:37; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1742:3626,log,logical,3626,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1742,1,['log'],['logical']
Testability,We are submitting PR for speed up of the filtering; | | Time |; | -- | -- |; | Original | 290.59 |; | Updated | 187.03 |; | Speedup | 35.63% |. Experiment was done on AWS r7i.24xlarge; <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [ ] Closes #; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3330:506,Test,Tests,506,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3330,1,['Test'],['Tests']
Testability,"We frequently use reference images for plotting tests, that is, we test against a saved copy of a plot from an older version to check that the results haven't changed much. Currently we store the reference image in git inside a directory like `scanpy/tests/_images`. Tests generate a new file with the same name as the reference image inside `scanpy/tests/figures`. These files are compared. If they're not similar enough, a file with a similar name, appended with `failed-diff` is written to the figures folder. There are a few annoyances with this setup. ### Opening the relevant files to investigate a failed test. Its not hard to open up the generated file, reference, and diff to see what changed, but it's harder than it should be. You'd have to write a function to make this at all easy. ### It's not obvious from the paths which file is the reference and which file was generated. E.g. given the paths:. ```; scanpy/tests/_images/pca.png; scanpy/tests/figures/pca.png; ```. which one is the reference?. ### Shared file names cause ambiguity. <img width=""771"" alt=""image"" src=""https://user-images.githubusercontent.com/8238804/113106711-cda24400-924e-11eb-8e00-743f178e40b8.png"">. ~~This is more of a hunch.~~ There should be three images here, but only two show up. I suspect this has to do with the missing image having a duplicated name. Update: Tested this in #1773, all images show up now (@gokceneraslan):. <img width=""364"" alt=""image"" src=""https://user-images.githubusercontent.com/8238804/113120191-0f39eb80-925d-11eb-9c99-b2630e829ecf.png"">. ## This PR. This PR addresses the three points from above. Now each reference image gets its own directory. The reference image is named `expected.png`, and is stored in git. When a test runs the generated image is stored as `actual.png`, and compared with `expected.png`. A failing diff is also written to this directory if the comparison fails. * Opening all images is now as simple as `open scanpy/tests/_images/{fig_name}/*`; * Naming conv",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1772:48,test,tests,48,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1772,8,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"We have some failing tests due to a couple bugs introduced in pandas 1.3.0:. * https://github.com/pandas-dev/pandas/issues/42380. I think this one is small in scope. Has problems when `df.agg` is called, when all columns are categorical and index is non-unique. Definitely a bug in pandas, and I don't think we do this much. Switching to `df.apply` works around the problem. * https://github.com/pandas-dev/pandas/issues/42376. Assignment of single columns `np.matrix` to dataframe columns no longer works as if the matrix were a 1d array. I think this is a bug since it's an undocumented behaviour change. Fixes are pretty easy, since we can just wrap occurrences with `np.ravel`, however I wouldn't be surprised if there were many places in the codebase that this happened. I would be good if these didn't happen.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1917:21,test,tests,21,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1917,1,['test'],['tests']
Testability,We should make the `random_state` of `make_blobs` available through our `blobs` function. This would make it easier to generate random data for testing.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1429:144,test,testing,144,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1429,1,['test'],['testing']
Testability,We should replace the whole logging module with. ```py; import logging. root_logger = logging.getLogger('scanpy'); root_logger.setLevel('INFO'); root_logger.propagate = False # Don’t pass log messages on to the root logger and its handler. handler = logging.StreamHandler(sys.stderr) # Why did we use stdout?; handler.setFormatter(logging.Formatter('%(message)s')); handler.setLevel('INFO'); root_logger.addHandler(handler). def get_logger(name):; return root_logger.getChild(name); ```. and in all submodules just do. ```py; from .logging import get_logger. logger = get_logger(__name__); ```,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/256:28,log,logging,28,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/256,9,['log'],"['log', 'logger', 'logging']"
Testability,"We want notebooks that automatically run through on readthedocs: https://nbsphinx.readthedocs.io/en/0.3.5. So that the basic tutorial (https://nbviewer.jupyter.org/github/theislab/scanpy_usage/blob/master/170505_seurat/seurat.ipynb) can be integrated into the scanpy repository in `docs/tutorials` as a notebook with all output cleared (no images etc.). It is run on the readthedocs server and will produce exactly the same output, as is guaranteed by this test: https://github.com/theislab/scanpy/blob/master/scanpy/tests/notebooks/pbmc3k.py",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/302:457,test,test,457,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/302,2,['test'],"['test', 'tests']"
Testability,"We're having trouble installing louvain on CI due to a recent setuptools release (would have been nice if setuptools had more vocal warnings about this ahead of time, but alas). See: vtraag/louvain-igraph/issues/57. This PR makes louvain optional. This was done by:. ### Skip louvain dependent tests. While these largely were tests checking that louvain works, some of these are testing other things. The biggest example here is `test_paga_paul15_subsampled.py`, which is really a test of PAGA. This should be corrected. ### Remove louvain dependency from tests. Some tests, like those for `rank_genes_groups_logreg` used louvain, but really didn't have to. `test_pbmc3k` could just have `louvain` calls replaced with `leiden` with only one plot triggering an error. ### `louvain` is no longer installed on CI. This should get around the build issue.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2063:294,test,tests,294,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2063,6,['test'],"['test', 'testing', 'tests']"
Testability,"We've been dealing with long queue times for CI builds. This is at least partially because for each PR four jobs start, each of which takes at least 12 minutes. Since travis gives us at most five concurrent jobs, only one PR can be built at a time. This becomes worse if a PR is based on a branch on the main repo, since CI runs on those too. Azure offers 10 free concurrent jobs. Seems like an easy win. * 10 free concurrent jobs; * Easier to do multiple checks per build (i.e. linting and testing can happen in the same build, but be independent checks); * Output looks easy to navigate, has good integration with github; * We could test on windows (depending on how hard this is to set up); * (possible) Some projects seem to use multiple cores for testing. Cons:. * New system, will take some time to learn; * Maybe microsoft will start being evil again",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1358:491,test,testing,491,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1358,3,['test'],"['test', 'testing']"
Testability,Weird scipy warning in t-test when there are all-zero genes,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/629:25,test,test,25,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/629,1,['test'],['test']
Testability,"What happened?. The `pca_params` fixture randomly picks one of the possible solvers, but since a little while, the `""lobpcg""` solver fails for our small test data, [as explained by its docs](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.lobpcg.html):. > The LOBPCG code internally solves eigenproblems of the size 3k on every iteration by calling the dense eigensolver eigh, so if k is not small enough compared to n, it makes no sense to call the LOBPCG code. Moreover, if one calls the LOBPCG algorithm for 5k > n, it would likely break internally, so the code calls the standard function eigh instead. It is not that n should be large for the LOBPCG to work, but rather the ratio n / k should be large. It you call LOBPCG with k=1 and n=10, it works though n is small. The method is intended for extremely large n / k. The workaround was to rerun failed tests until the fixture randomly returned another solver, which isn’t great. I therefore simply `xfail` that test for now to not block PRs in https://github.com/scverse/scanpy/pull/2745. ### Minimal code sample. ```bash; # try one of the following to reproduce (if necessary multiple times); pytest --runxfail 'scanpy/tests/test_pca.py::test_pca_warnings[scipy_csr-zero_center-valid]'; pytest --runxfail 'scanpy/tests/test_pca.py::test_pca_warnings[scipy_csc-zero_center-valid]'; ```. ### Error output. (note that since the code is run with `warnings.simplefilter('error')`, the below is an error that fails the test). ```pytb; UserWarning: The problem size 5 minus the constraints size 0 is too small relative to the block size 4. Using a dense eigensolver instead of LOBPCG iterations.No output of the history of the iterations.; ```. ### Versions. <details>. ```; -----; anndata 0.10.2; scanpy 1.10.0.dev156+gd1a2c8f8.d20231110; -----; PIL 10.0.1; asciitree NA; cloudpickle 3.0.0; cycler 0.12.1; cython_runtime NA; dask 2023.10.0; dateutil 2.8.2; fasteners 0.19; h5py 3.10.0; igraph 0.10.8; iniconfig NA; jinja2 3.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2744:1268,test,test,1268,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2744,1,['test'],['test']
Testability,What is the scanpy unit test dataset?,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1908:24,test,test,24,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1908,1,['test'],['test']
Testability,"When I run `sc.tl.rank_genes_groups` and I set the `reference` argument to one of my groups I am testing, I get the error. ```pytb; 91 groups_order = [str(n) for n in groups_order]; 92 if reference != 'rest' and reference not in set(groups_order):; ---> 93 groups_order += [reference]; 94 if (reference != 'rest'; 95 and reference not in set(adata.obs[groupby].cat.categories)):. TypeError: must be str, not list; ```. That's because 'groups_order' is not a list at this point of the code when the argument `groups` is at its default `all`. When I change this and I pass a list, e.g. ['0', '1'], then the error vanished, because `groups order` will then be a list that we can add to. This should be changed, because the setting 'all' is the default value.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/346:97,test,testing,97,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/346,1,['test'],['testing']
Testability,"When I run this. ```; import scanpy as sc. sc.logging.print_versions(). pbmc = sc.datasets.pbmc68k_reduced(); pbmc = pbmc[pbmc.obs['louvain'] == '0', :]; sc.pp.scale(pbmc); ```. I get this. ```; scanpy==1.4.3 anndata==0.6.21 umap==0.3.9 numpy==1.16.2 scipy==1.3.0 pandas==0.24.2 scikit-learn==0.21.2 statsmodels==0.9.0; /stor/home/ericb123/miniconda3/lib/python3.7/site-packages/scanpy/preprocessing/_simple.py:1120: RuntimeWarning: invalid value encountered in sqrt; scale = np.sqrt(var); Trying to set attribute `.X` of view, making a copy.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/stor/home/ericb123/miniconda3/lib/python3.7/site-packages/scanpy/preprocessing/_simple.py"", line 860, in scale; scale(adata.X, zero_center=zero_center, max_value=max_value, copy=False); File ""/stor/home/ericb123/miniconda3/lib/python3.7/site-packages/scanpy/preprocessing/_simple.py"", line 876, in scale; _scale(X, zero_center); File ""/stor/home/ericb123/miniconda3/lib/python3.7/site-packages/scanpy/preprocessing/_simple.py"", line 1126, in _scale; scale[scale == 0] = 1e-12; File ""/stor/home/ericb123/miniconda3/lib/python3.7/site-packages/anndata/base.py"", line 392, in __setitem__; getattr(adata_view, attr_name)[idx] = value; IndexError: boolean index did not match indexed array along dimension 0; dimension is 130 but corresponding boolean dimension is 765; ```. Any idea what's going on?. Thanks,. -Eric",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/699:46,log,logging,46,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/699,1,['log'],['logging']
Testability,"When an old version of tqdm ([< 4.29.1](https://github.com/nteract/papermill/issues/287)) is installed, scanpy cannot be imported. . ```bash; conda create -n test_scanpy_tqdm scanpy=1.5.1 tqdm=4.19.4; conda activate test_scanpy_tqdm; python -c ""import scanpy as sc"" ; ```. ```pytb; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/home/sturm/anaconda3/envs/test_scanpy_tqdm/lib/python3.8/site-packages/scanpy/__init__.py"", line 39, in <module>; from . import datasets, logging, queries, external, get; File ""/home/sturm/anaconda3/envs/test_scanpy_tqdm/lib/python3.8/site-packages/scanpy/datasets/__init__.py"", line 3, in <module>; from ._datasets import (; File ""/home/sturm/anaconda3/envs/test_scanpy_tqdm/lib/python3.8/site-packages/scanpy/datasets/_datasets.py"", line 8, in <module>; from tqdm.auto import tqdm; ModuleNotFoundError: No module named 'tqdm.auto'; ```. ### Suggested solution; Either ; * merge #1130 (which has the additional benefit that the [ipywidgets extension does not have to be installed when running in jupyterlab](https://stackoverflow.com/questions/53247985/tqdm-4-28-1-in-jupyter-notebook-intprogress-not-found-please-update-jupyter-an)) or ; * require a minimal version of `tqdm>=4.29.1`.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1244:501,log,logging,501,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1244,1,['log'],['logging']
Testability,"When analysing a dataset, I can make gene ranking plots using either the t-test or the logistic regression method and everything looks sane (see image below). <img width=""1101"" alt=""screen shot 2018-07-19 at 21 59 09"" src=""https://user-images.githubusercontent.com/1142918/42969897-99896fc6-8b9f-11e8-8ae6-761b89d1e6f6.png"">. However, if I then assign names to my clusters and do this again, the t-test version looks as expected but the plot using logistic regression data seems to mismatch the cluster names with their top-ranked genes. The plot titles do not match the genes that are plotted. <img width=""1102"" alt=""screen shot 2018-07-19 at 22 00 09"" src=""https://user-images.githubusercontent.com/1142918/42969968-dd19dfc8-8b9f-11e8-8b7f-f671eb42ed82.png"">. Is this a bug or am I doing something wrong? . Hope this makes sense, please let me know if you need any more information.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/209:75,test,test,75,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/209,4,"['log', 'test']","['logistic', 'test']"
Testability,"When combined with https://github.com/theislab/anndata/pull/298, fixes #1000. Unfortunately, the tests here won't pass until the PR at anndata is in a release. * Adds tests checking for copying when plotting a view; * Prevents setting color palette when it doesn't need to change",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1002:97,test,tests,97,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1002,2,['test'],['tests']
Testability,Where can I find log-fold change in gene expression for the markers,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/159:17,log,log-fold,17,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/159,1,['log'],['log-fold']
Testability,"Whether I read the data as:; `adata = sc.read('test.h5ad', backed='r')`. or:; `adata = sc.read('test.h5ad', backed='r+')`. The amount of memory used is the same (I'm measuring memory usage with `/usr/bin/time -v` and looking at `Maximum resident set size`). In my particular case, I have a very large data set and I'm only interested in `adata.obs`. My current solution is to use the `h5py` package and read only the `obs` group from the `h5ad` file.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/434:47,test,test,47,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/434,2,['test'],['test']
Testability,Which statistical test to use to see which cell types frequency differ between cohorts?,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1831:18,test,test,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1831,1,['test'],['test']
Testability,"While I run 'sc.tl.louvain', this error raised and told me I should call 'jgraph'.; Is it necessary for me to change the package name of 'igraph'to 'jgraph' manually?. ```pytb; ---------------------------------------------------------------------------; DeprecationWarning Traceback (most recent call last); <ipython-input-191-71b705e00011> in <module>; ----> 1 sc.tl.louvain(ad_2). /usr/local/lib/python3.6/dist-packages/scanpy/tools/_louvain.py in louvain(adata, resolution, random_state, restrict_to, key_added, adjacency, flavor, directed, use_weights, partition_type, partition_kwargs, copy); 112 directed = False; 113 if not directed: logg.debug(' using the undirected graph'); --> 114 g = utils.get_igraph_from_adjacency(adjacency, directed=directed); 115 if use_weights:; 116 weights = np.array(g.es[""weight""]).astype(np.float64). /usr/local/lib/python3.6/dist-packages/scanpy/utils.py in get_igraph_from_adjacency(adjacency, directed); 379 def get_igraph_from_adjacency(adjacency, directed=None):; 380 """"""Get igraph graph from adjacency matrix.""""""; --> 381 import igraph as ig; 382 sources, targets = adjacency.nonzero(); 383 weights = adjacency[sources, targets]. /usr/local/lib/python3.6/dist-packages/igraph/__init__.py in <module>; 6 __license__ = ""MIT""; 7 ; ----> 8 raise DeprecationWarning(""To avoid name collision with the igraph project, ""; 9 ""this visualization library has been renamed to ""; 10 ""'jgraph'. Please upgrade when convenient.""). DeprecationWarning: To avoid name collision with the igraph project, this visualization library has been renamed to 'jgraph'. Please upgrade when convenient.; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/807:641,log,logg,641,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/807,1,['log'],['logg']
Testability,"While testing my changes to dataset code, I saw that `sc.datasets.burczynski06()` raised the error:. ```python; ValueError: `X` needs to be of one of ndarray, MaskedArray, spmatrix, ZarrArray, ZappyArray, not <class 'dict'>.; ```. But it had a pretty easy fix.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/574:6,test,testing,6,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/574,1,['test'],['testing']
Testability,"Wilcoxon-Rank-Sum Test implementation and test function, SPRING export",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/42:18,Test,Test,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/42,2,"['Test', 'test']","['Test', 'test']"
Testability,Wilcoxon-Rank-Sum test in rank_genes_groups: suspicious code & ties not corrected,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/698:18,test,test,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/698,1,['test'],['test']
Testability,"With the new ebi single cell database release one of the files is a little different (col names/ obs_names). That part of the reader has been fixed, and I've updated the test for the reprocessed data.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/741:170,test,test,170,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/741,1,['test'],['test']
Testability,"With this PR we propose our new annotation method to Scannpy:. Annotator marks the data with cell type annotations based on marker genes.; Over-expressed genes are selected with the Mann-Whitney U tests and cell; types are assigned with the hypergeometric test. This function first selects; genes from gene expression data with the Mann Whitney U test, then annotate; them with the hypergeometric test, and finally filter out cell types that; have zero scores for all cells. The results are scores that tell how; probable each cell type is for each cell. Hope you like the method and merge it to Scampy.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/812:197,test,tests,197,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/812,4,['test'],"['test', 'tests']"
Testability,"With this PR, I tried to fix issue https://github.com/theislab/scanpy/issues/140. Needs to be tested still. Additionally, I found it useful to provide to scanpy directly the gene names when plotting violins. Use case: you have a different algorithm that is not implemented in scanpy for differential gene expression, and you want to plot its results with scanpy. Feel free to reject if there's a better way to do it currently in scanpy. I didn't find it though.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/147:94,test,tested,94,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/147,1,['test'],['tested']
Testability,XFail lobpcg with small test data,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2745:24,test,test,24,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2745,1,['test'],['test']
Testability,[Suggestion] Speed up test collection,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/326:22,test,test,22,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/326,1,['test'],['test']
Testability,"[`sklearn.neighbors.KNeighborsTransformer`](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsTransformer.html) is a good abstraction for KNN calculations. We could follow the suggestion here, then finish this PR https://github.com/frankier/sklearn-ann/issues/8#issuecomment-1609553421. ### For reviewing. - most functions were moved unchanged; - I extensively changed https://github.com/scverse/scanpy/blob/73915b4bd0dc84108df08ad83ec28e627a9a0e0d/scanpy/neighbors/__init__.py#L471; - This uncovered very grown-over-time logic: https://github.com/scverse/scanpy/blob/73915b4bd0dc84108df08ad83ec28e627a9a0e0d/scanpy/neighbors/__init__.py#L522-L523 ; *Should we change that logic for more predictability at the expense of backwards compatibility*? Especially the “euclidean” condition makes not much sense IMHO; - Another piece of weird logic: *Where to allow`knn=False`*? It would make sense for e.g. the scipy knn transformer with `algorithm='kd_tree'` … ; https://github.com/scverse/scanpy/blob/73915b4bd0dc84108df08ad83ec28e627a9a0e0d/scanpy/neighbors/__init__.py#L614-L617; - I also changed `method` to only mean “connectivity method”. `transformer_cls` alone now determines how to calculate distances. ### TODO. - [x] split of sklearn-ann part into own issue/PR; - [x] figure out what the `_more_tags` methods are ; - [x] allow specifying algorithm and/or backend; - [x] revert 75c6670, move connectivities code out of backends; - [x] switch our stuff to KNeighborsTransformer; - [x] unify selection: algorithm+backend, metric, connectivity (maybe separate out connectivity); - [x] figure out how to do connectivities: can mode be changed after fit? *no, we just use umap connectivities as before*; - [x] check out where we have coverage; - is there paga specific stuff? *not in the parts I changed*; - gauss: dense matrix when knn=True (“build a symmetric mask”, …) *not covered, but also the logic shouldn’t have changed*; - pre-computed in umap transformer; handlin",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2536:550,log,logic,550,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2536,3,['log'],['logic']
Testability,[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[mean_center-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_prin_comps-10] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[n_neighbors-2] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[threshold-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unk,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:20332,test,testing,20332,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 's,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:4034,test,tests,4034,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"\<!-- Please check (“- [x]”) and fill in the following two boxes --> ; - [x] Closes N/A; - [x] Tests included or not required because:. \<!-- Only check the following box if you did not include release nodes --> ; - [x] Release notes not necessary because: It’s a dev process PR. (made comments visible to show what PR authors see). Current design is that the jobs fail, respectively:; - If there’s no milestone; - If the “Development process” label isn’t there and the “Release notes …” checkbox is not checked, and there are not edits to the relevant release notes file. This is how it looks like if that check fails:. ![grafik](https://github.com/scverse/scanpy/assets/291575/08c324a5-a580-4b30-a838-b7f98fa9787e)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2569:95,Test,Tests,95,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2569,1,['Test'],['Tests']
Testability,"\fa2\; Complete output (30 lines):; Installing fa2 package (fastest forceatlas2 python implementation). >>>> Cython is installed?; Yes. >>>> Starting to install!. running install; running build; running build_py; creating build; creating build\lib.win-amd64-3.6; creating build\lib.win-amd64-3.6\fa2; copying fa2\fa2util.py -> build\lib.win-amd64-3.6\fa2; copying fa2\forceatlas2.py -> build\lib.win-amd64-3.6\fa2; copying fa2\__init__.py -> build\lib.win-amd64-3.6\fa2; running egg_info; writing fa2.egg-info\PKG-INFO; writing dependency_links to fa2.egg-info\dependency_links.txt; writing requirements to fa2.egg-info\requires.txt; writing top-level names to fa2.egg-info\top_level.txt; reading manifest file 'fa2.egg-info\SOURCES.txt'; reading manifest template 'MANIFEST.in'; writing manifest file 'fa2.egg-info\SOURCES.txt'; copying fa2\fa2util.c -> build\lib.win-amd64-3.6\fa2; copying fa2\fa2util.pxd -> build\lib.win-amd64-3.6\fa2; running build_ext; skipping 'fa2\fa2util.c' Cython extension (up-to-date); building 'fa2.fa2util' extension; error: Microsoft Visual C++ 14.0 is required. Get it with ""Build Tools for Visual Studio"": https://visualstudio.microsoft.com/downloads/; ----------------------------------------; ERROR: Command errored out with exit status 1: 'C:\ProgramData\Miniconda3\envs\Jayalal_2_Miniconda\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\xkalaj\\AppData\\Local\\Temp\\pip-install-golo7r_8\\fa2\\setup.py'""'""'; __file__='""'""'C:\\Users\\xkalaj\\AppData\\Local\\Temp\\pip-install-golo7r_8\\fa2\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\xkalaj\AppData\Local\Temp\pip-record-y21s2idm\install-record.txt' --single-version-externally-managed --compile --install-headers 'C:\ProgramData\Miniconda3\envs\Jayalal_2_Miniconda\Include\fa2' Check the logs for full command output",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1256:5783,log,logs,5783,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1256,1,['log'],['logs']
Testability,] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csr-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[scipy_csc-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-single] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_no_inplace[dask_array_dense-batched] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-None] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_keep_layer[cell_ranger-10] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_compare_to_upstream[seurat-hvg] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_sparse - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[numpy_ndarray] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csr] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csc] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[dask_array_dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_chunked - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_n_pcs - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_layer - ValueError: ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:1818,test,tests,1818,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability,"]['names']).head(5). path_to_h5ad_file = '~/test.h5ad' # works; adata.write_h5ad(path_to_h5ad_file) # gives ERROR bellow. ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-23-cb0bc3c267ae> in <module>; ----> 1 adata = sc.read(path_to_h5ad_file). ~/miniconda3/lib/python3.7/site-packages/scanpy/readwrite.py in read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, **kwargs); 95 filename, backed=backed, sheet=sheet, ext=ext,; 96 delimiter=delimiter, first_column_names=first_column_names,; ---> 97 backup_url=backup_url, cache=cache, **kwargs,; 98 ); 99 # generate filename and read to dict. ~/miniconda3/lib/python3.7/site-packages/scanpy/readwrite.py in _read(filename, backed, sheet, ext, delimiter, first_column_names, backup_url, cache, suppress_cache_warning, **kwargs); 497 if ext in {'h5', 'h5ad'}:; 498 if sheet is None:; --> 499 return read_h5ad(filename, backed=backed); 500 else:; 501 logg.debug(f'reading sheet {sheet} from file {filename}'). ~/miniconda3/lib/python3.7/site-packages/anndata/readwrite/read.py in read_h5ad(filename, backed, chunk_size); 445 else:; 446 # load everything into memory; --> 447 constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size); 448 X = constructor_args[0]; 449 dtype = None. ~/miniconda3/lib/python3.7/site-packages/anndata/readwrite/read.py in _read_args_from_h5ad(adata, filename, mode, chunk_size); 484 d[key] = None; 485 else:; --> 486 _read_key_value_from_h5(f, d, key, chunk_size=chunk_size); 487 # backwards compat: save X with the correct name; 488 if 'X' not in d:. ~/miniconda3/lib/python3.7/site-packages/anndata/readwrite/read.py in _read_key_value_from_h5(f, d, key, key_write, chunk_size); 508 d[key_write] = OrderedDict() if key == 'uns' else {}; 509 for k in f[key].keys():; --> 510 _",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/937:2727,log,logg,2727,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/937,1,['log'],['logg']
Testability,_0 pypi; lazy-loader 0.3 pypi_0 pypi; legacy-api-wrap 1.4 pypi_0 pypi; leidenalg 0.10.2 pypi_0 pypi; libexpat 2.6.2 h73e2aa4_0 conda-forge; libffi 3.4.2 h0d85af4_5 conda-forge; libsqlite 3.45.2 h92b6c6a_0 conda-forge; libzlib 1.2.13 h8a1eda9_5 conda-forge; llvmlite 0.42.0 pypi_0 pypi; locket 1.0.0 pypi_0 pypi; matplotlib 3.8.3 pypi_0 pypi; natsort 8.4.0 pypi_0 pypi; ncurses 6.4 h93d8f39_2 conda-forge; networkx 3.2.1 pypi_0 pypi; nodeenv 1.8.0 pypi_0 pypi; numba 0.59.0 pypi_0 pypi; numcodecs 0.12.1 pypi_0 pypi; numpy 1.26.4 pypi_0 pypi; openssl 3.2.1 hd75f5a5_0 conda-forge; packaging 24.0 pypi_0 pypi; pandas 2.2.1 pypi_0 pypi; partd 1.4.1 pypi_0 pypi; patsy 0.5.6 pypi_0 pypi; pbr 6.0.0 pypi_0 pypi; pillow 10.2.0 pypi_0 pypi; pip 24.0 pyhd8ed1ab_0 conda-forge; platformdirs 4.2.0 pypi_0 pypi; pluggy 1.4.0 pypi_0 pypi; pre-commit 3.7.0 pypi_0 pypi; profimp 0.1.0 pypi_0 pypi; pynndescent 0.5.11 pypi_0 pypi; pyparsing 3.1.2 pypi_0 pypi; pytest 8.1.1 pypi_0 pypi; pytest-cov 4.1.0 pypi_0 pypi; pytest-mock 3.12.0 pypi_0 pypi; pytest-nunit 1.0.7 pypi_0 pypi; pytest-xdist 3.5.0 pypi_0 pypi; python 3.12.2 h9f0c242_0_cpython conda-forge; python-dateutil 2.9.0.post0 pypi_0 pypi; pytz 2024.1 pypi_0 pypi; pyyaml 6.0.1 pypi_0 pypi; readline 8.2 h9e318b2_1 conda-forge; scanpy 1.10.0rc2.dev16+g60aa7180 pypi_0 pypi; scikit-image 0.22.0 pypi_0 pypi; scikit-learn 1.4.1.post1 pypi_0 pypi; scipy 1.12.0 pypi_0 pypi; seaborn 0.13.2 pypi_0 pypi; session-info 1.0.0 pypi_0 pypi; setuptools 69.2.0 pyhd8ed1ab_0 conda-forge; setuptools-scm 8.0.4 pypi_0 pypi; six 1.16.0 pypi_0 pypi; statsmodels 0.14.1 pypi_0 pypi; stdlib-list 0.10.0 pypi_0 pypi; texttable 1.7.0 pypi_0 pypi; threadpoolctl 3.3.0 pypi_0 pypi; tifffile 2024.2.12 pypi_0 pypi; tk 8.6.13 h1abcd95_1 conda-forge; toolz 0.12.1 pypi_0 pypi; tqdm 4.66.2 pypi_0 pypi; typing-extensions 4.11.0 pypi_0 pypi; tzdata 2024.1 pypi_0 pypi; umap-learn 0.5.5 pypi_0 pypi; virtualenv 20.25.1 pypi_0 pypi; wheel 0.42.0 pyhd8ed1ab_0 conda-forge; xz 5.2.6 h775f4,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:34106,mock,mock,34106,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['mock'],['mock']
Testability,"_N_CELLS]; adata.shape. sc.pp.filter_cells(adata, min_genes=min_genes_per_cell); sc.pp.filter_cells(adata, max_genes=max_genes_per_cell); sc.pp.filter_genes(adata, min_cells=min_cells_per_gene); sc.pp.normalize_total(adata, target_sum=1e4); print(""Total filter and normalize time : %s"" % (time.time()-tr)). tr=time.time(); sc.pp.log1p(adata); print(""Total log time : %s"" % (time.time()-tr)). # Select highly variable genes; sc.pp.highly_variable_genes(adata, n_top_genes=n_top_genes, flavor = ""cell_ranger""). # Retain marker gene expression; for marker in markers:; adata.obs[marker + ""_raw""] = adata.X[:, adata.var.index == marker].toarray().ravel(). # Filter matrix to only variable genes; adata = adata[:, adata.var.highly_variable]. ts=time.time(); #Regress out confounding factors (number of counts, mitochondrial gene expression); mito_genes = adata.var_names.str.startswith(MITO_GENE_PREFIX); n_counts = np.array(adata.X.sum(axis=1)); adata.obs['percent_mito'] = np.array(np.sum(adata[:, mito_genes].X, axis=1)) / n_counts; adata.obs['n_counts'] = n_counts. sc.pp.regress_out(adata, ['n_counts', 'percent_mito']); print(""Total regress out time : %s"" % (time.time()-ts)). #scale. ts=time.time(); sc.pp.scale(adata, max_value=10); print(""Total scale time : %s"" % (time.time()-ts)); t0=time.time(). sc.tl.pca(adata, n_comps=n_components). t0=time.time(); sc._settings.ScanpyConfig.n_jobs = os.cpu_count(); sc.tl.tsne(adata, n_pcs=tsne_n_pcs, use_fast_tsne=True). '''; from sklearn.manifold import TSNE; from scanpy.tools._utils import _choose_representation; X = _choose_representation(adata, n_pcs=tsne_n_pcs); X_tsne = TSNE().fit_transform(X.astype(np.float32)); adata.obsm['X_tsne'] = X_tsne; '''; print(""Tsne time:"", time.time()-t0); ``` . ; <!-- Please check (“- [x]”) and fill in the following boxes ; - [ ] Closes #; - [ ] Tests included or not required because:; -->; <!-- Only check the following box if you did not include release notes ; - [ ] Release notes not necessary because:; -->",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/3061:3943,Test,Tests,3943,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/3061,1,['Test'],['Tests']
Testability,"_all[:n_positional], args_all[n_positional:]. File C:\ProgramData\Anaconda3\envs\dl\lib\site-packages\scanpy\preprocessing\_scrublet\__init__.py:282, in scrublet(adata, adata_sim, batch_key, sim_doublet_ratio, expected_doublet_rate, stdev_doublet_rate, synthetic_doublet_umi_subsampling, knn_dist_metric, normalize_variance, log_transform, mean_center, n_prin_comps, use_approx_neighbors, get_doublet_neighbor_parents, n_neighbors, threshold, verbose, copy, random_state); 279 adata.uns[""scrublet""][""batched_by""] = batch_key; 281 else:; --> 282 scrubbed = _run_scrublet(adata_obs, adata_sim); 284 # Copy outcomes to input object from our processed version; 286 adata.obs[""doublet_score""] = scrubbed[""obs""][""doublet_score""]. File C:\ProgramData\Anaconda3\envs\dl\lib\site-packages\scanpy\preprocessing\_scrublet\__init__.py:204, in scrublet.<locals>._run_scrublet(ad_obs, ad_sim); 201 # HVG process needs log'd data.; 203 logged = pp.log1p(ad_obs, copy=True); --> 204 pp.highly_variable_genes(logged); 205 ad_obs = ad_obs[:, logged.var[""highly_variable""]].copy(); 207 # Simulate the doublets based on the raw expressions from the normalised; 208 # and filtered object. File C:\ProgramData\Anaconda3\envs\dl\lib\site-packages\legacy_api_wrap\__init__.py:80, in legacy_api.<locals>.wrapper.<locals>.fn_compatible(*args_all, **kw); 77 @wraps(fn); 78 def fn_compatible(*args_all: P.args, **kw: P.kwargs) -> R:; 79 if len(args_all) <= n_positional:; ---> 80 return fn(*args_all, **kw); 82 args_pos: P.args; 83 args_pos, args_rest = args_all[:n_positional], args_all[n_positional:]. File C:\ProgramData\Anaconda3\envs\dl\lib\site-packages\scanpy\preprocessing\_highly_variable_genes.py:648, in highly_variable_genes(***failed resolving arguments***); 645 del min_disp, max_disp, min_mean, max_mean, n_top_genes; 647 if batch_key is None:; --> 648 df = _highly_variable_genes_single_batch(; 649 adata, layer=layer, cutoff=cutoff, n_bins=n_bins, flavor=flavor; 650 ); 651 else:; 652 df = _highly_variable_genes",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/3070:8373,log,logged,8373,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/3070,2,['log'],['logged']
Testability,_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-200] - Imp,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:9586,test,testing,9586,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"_fontweight, color_map, palette, right_margin, left_margin, size, title, show, save, ax); 162 show=show,; 163 save=save,; --> 164 ax=ax); 165 ; 166 elif x in adata.var_keys() and y in adata.var_keys() and color not in adata.obs_keys():. ~/scanpy/scanpy/plotting/anndata.py in _scatter_obs(adata, x, y, color, use_raw, sort_order, alpha, basis, groups, components, projection, legend_loc, legend_fontsize, legend_fontweight, color_map, palette, right_margin, left_margin, size, title, show, save, ax); 281 ax=None):; 282 """"""See docstring of scatter.""""""; --> 283 sanitize_anndata(adata); 284 if legend_loc not in VALID_LEGENDLOCS:; 285 raise ValueError(. ~/scanpy/scanpy/utils.py in sanitize_anndata(adata); 481 # backwards compat... remove this in the future; 482 def sanitize_anndata(adata):; --> 483 adata._sanitize(); 484 ; 485 . ~/anndata/anndata/base.py in _sanitize(self); 1284 if len(c.categories) < len(c):; 1285 df[key] = c; -> 1286 df[key].cat.categories = df[key].cat.categories.astype('U'); 1287 logg.info(; 1288 '... storing \'{}\' as categorical'. ~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in __getattr__(self, name); 3608 if (name in self._internal_names_set or name in self._metadata or; 3609 name in self._accessors):; -> 3610 return object.__getattribute__(self, name); 3611 else:; 3612 if name in self._info_axis:. ~/anaconda3/lib/python3.6/site-packages/pandas/core/accessor.py in __get__(self, instance, owner); 52 # this ensures that Series.str.<method> is well defined; 53 return self.accessor_cls; ---> 54 return self.construct_accessor(instance); 55 ; 56 def __set__(self, instance, value):. ~/anaconda3/lib/python3.6/site-packages/pandas/core/categorical.py in _make_accessor(cls, data); 2209 def _make_accessor(cls, data):; 2210 if not is_categorical_dtype(data.dtype):; -> 2211 raise AttributeError(""Can only use .cat accessor with a ""; 2212 ""'category' dtype""); 2213 return CategoricalAccessor(data.values, data.index,. AttributeError: Can only use .ca",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/166:2016,log,logg,2016,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/166,1,['log'],['logg']
Testability,_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py; ERROR scanpy/tests/test_neighbors_key_added.py; ERROR scanpy/tests/test_paga.py; ERROR scanpy/tests/test_pca.py; ERROR scanpy/tests/test_plotting.py; ERROR scanpy/tests/test_preprocessing.py; ERROR scanpy/tests/test_queries.py; ERROR scanpy/tests/test_rank_genes_groups.py; ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:2911,test,tests,2911,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,_matrix-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._he,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:7491,test,tests,7491,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"_names=a.var_names[:50], groupby=""foo"", swap_axes=False, dendrogram=False) # fig. 5; # xlabels are not centered + horizntal lines are slightly shifted downwards (really have to zoom in); sc.pl.heatmap(a, var_names=a.var_names, groupby=""foo"", swap_axes=False, figsize=(50, 50)); ```; If you look closely (e.g. between fig. 2 and fig.3, or fig. 4 and fig. 5), the within group order is also broken. ```pytb; TypeError Traceback (most recent call last); <ipython-input-56-f1ba710dac43> in <module>; 9 ; 10 sc.pl.heatmap(a, var_names=a.var_names[:5], groupby=None, swap_axes=True) # is shifted to the left (fig. 1); ---> 11 sc.pl.heatmap(a, var_names=a.var_names[:5], groupby=""foo"", swap_axes=True) ; 12 ; 13 a.X[:16, :] = 0. ~/.miniconda3/envs/cellrank/lib/python3.8/site-packages/scanpy/plotting/_anndata.py in heatmap(adata, var_names, groupby, use_raw, log, num_categories, dendrogram, gene_symbols, var_group_positions, var_group_labels, var_group_rotation, layer, standard_scale, swap_axes, show_gene_labels, show, save, figsize, **kwds); 1220 groupby_cmap,; 1221 norm,; -> 1222 ) = _plot_categories_as_colorblocks(; 1223 groupby_ax, obs_tidy, colors=groupby_colors, orientation='bottom'; 1224 ). ~/.miniconda3/envs/cellrank/lib/python3.8/site-packages/scanpy/plotting/_anndata.py in _plot_categories_as_colorblocks(groupby_ax, obs_tidy, colors, orientation, cmap_name); 2361 if len(labels) > 1:; 2362 groupby_ax.set_xticks(ticks); -> 2363 if max([len(x) for x in labels]) < 3:; 2364 # if the labels are small do not rotate them; 2365 rotation = 0. ~/.miniconda3/envs/cellrank/lib/python3.8/site-packages/scanpy/plotting/_anndata.py in <listcomp>(.0); 2361 if len(labels) > 1:; 2362 groupby_ax.set_xticks(ticks); -> 2363 if max([len(x) for x in labels]) < 3:; 2364 # if the labels are small do not rotate them; 2365 rotation = 0. TypeError: object of type 'int' has no len(); ```; #### Figures; Fig. 1; ![f0](https://user-images.githubusercontent.com/46717574/104822526-6544e880-5843-11eb-8324-261e8",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1591:2527,log,log,2527,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1591,1,['log'],['log']
Testability,_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[mean_center-False] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::tes,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:19236,test,testing,19236,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:10431,test,testing,10431,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-float32] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); =========================================================== 8 failed, 670 passed, 40 skipped, 3 xfailed, 400 warnings, 130 errors in 44.70s ============================================================; ```. </details> . Now we get a ton of failures due to a failure to import test dataset helpers. -----. Pinning `pytest<8` seems to resolve the issue. @flying-sheep any ideas? Any idea w",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:24269,test,tests,24269,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: canno,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:7227,test,testing,7227,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-no_hvg-30-200] - I,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:8323,test,tests,8323,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"_paga_pie'). scanpy/tests/test_plotting.py:917: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. basename = 'master_paga_pie', tolerance = 30. def save_and_compare(basename, tolerance=None):; path_actual.mkdir(parents=True, exist_ok=True); out_path = path_actual / f'{basename}.png'; pyplot.savefig(out_path, dpi=40); pyplot.close(); if tolerance is None:; tolerance = tol; res = compare_images(; str(path_expected / f'{basename}.png'), str(out_path), tolerance; ); > assert res is None, res; E AssertionError: Error: Image files did not match.; E RMS Value: 36.26034272194439; E Expected: ; E /Users/philipp/Documents/python/scanpy/scanpy/tests/_images/master_paga_pie.png; E Actual: ; E /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie.png; E Difference:; E /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie-failed-diff.png; E Tolerance: ; E 30; E assert 'Error: Image files did not match.\n RMS Value: 36.26034272194439\n Expected: \n /Users/philipp/Documents/python... /Users/philipp/Documents/python/scanpy/scanpy/tests/figures/master_paga_pie-failed-diff.png\n Tolerance: \n 30' is None. scanpy/tests/conftest.py:35: AssertionError; ----------------------------------------------------------------------------------------------------- Captured stderr call ------------------------------------------------------------------------------------------------------; running PAGA; finished: added; 'paga/connectivities', connectivities adjacency (adata.uns); 'paga/connectivities_tree', connectivities subtree (adata.uns) (0:00:00); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> added 'pos', the PAGA positions (adata.uns['paga']); --> add",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1418:3630,test,tests,3630,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1418,1,['test'],['tests']
Testability,_pca[toarray-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_d,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:5718,test,testing,5718,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:13859,test,tests,13859,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-50-100] - ImportError: cannot import name ',MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:14694,test,tests,14694,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,_pearson_residuals_pca[toarray-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:4875,test,tests,4875,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,_scrublet_plots[scrublet] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_no_threshold] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_with_batches] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_preprocessing_distributed.py::test_write_zarr[dask] - ValueError: buffer source array is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[sparse] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ValueError: assignment destination is read-only. ```. </details>. <details>; <summary> Test failure traceback </summary>. ```pytb; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; ../..,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:3903,test,tests,3903,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability,"_uses, param_nodes, var_to_param); 3547 if param_name in used_vars and param_name not in reduce_varnames:; 3548 param_nodes[param].reverse(); -> 3549 reduce_nodes = get_reduce_nodes(param, param_nodes[param], func_ir); 3550 # Certain kinds of ill-formed Python (like potentially undefined; 3551 # variables) in combination with SSA can make things look like; 3552 # reductions except that they don't have reduction operators.; 3553 # If we get to this point but don't find a reduction operator; 3554 # then assume it is this situation and just don't treat this; 3555 # variable as a reduction.; 3556 if reduce_nodes is not None:. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3637, in get_reduce_nodes(reduction_node, nodes, func_ir); 3635 defs[lhs.name] = rhs; 3636 if isinstance(rhs, ir.Var) and rhs.name in defs:; -> 3637 rhs = lookup(rhs); 3638 if isinstance(rhs, ir.Expr):; 3639 in_vars = set(lookup(v, True).name for v in rhs.list_vars()). File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3627, in get_reduce_nodes.<locals>.lookup(var, varonly); 3625 val = defs.get(var.name, None); 3626 if isinstance(val, ir.Var):; -> 3627 return lookup(val); 3628 else:; 3629 return var if (varonly or val is None) else val. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3627, in get_reduce_nodes.<locals>.lookup(var, varonly); 3625 val = defs.get(var.name, None); 3626 if isinstance(val, ir.Var):; -> 3627 return lookup(val); 3628 else:; 3629 return var if (varonly or val is None) else val. [... skipping similar frames: get_reduce_nodes.<locals>.lookup at line 3627 (2946 times)]. File ~/miniconda3/envs/test/lib/python3.10/site-packages/numba/parfors/parfor.py:3627, in get_reduce_nodes.<locals>.lookup(var, varonly); 3625 val = defs.get(var.name, None); 3626 if isinstance(val, ir.Var):; -> 3627 return lookup(val); 3628 else:; 3629 return var if (varonly or val is None) else val. File ~/miniconda3/en",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:10555,test,test,10555,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,_variable_genes.py::test_keep_layer[cell_ranger-10] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_highly_variable_genes.py::test_compare_to_upstream[seurat-hvg] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_sparse - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[numpy_ndarray] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csr] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[scipy_csc] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_reproducible[dask_array_dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_chunked - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_n_pcs - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_pca.py::test_pca_layer - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_no_threshold] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_with_batches] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_preprocessing_distributed.py::test_write_zarr[dask] - ValueError: buffer source array is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[sparse] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::tes,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:2736,test,tests,2736,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability,_with_reference - TypeError: 'module' object is not callable; FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/tests/test_embedding.py; ERROR scanpy/tests/test_embedding_density.py; ERROR scanpy/tests/test_embedding_plots.py; ERROR scanpy/tests/test_filter_rank_genes_groups.py; ERROR scanpy/tests/test_get.py; ERROR scanpy/tests/test_highly_variable_genes.py; ERROR scanpy/tests/test_ingest.py; ERROR scanpy/tests/test_metrics.py,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:1664,test,testing,1664,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"` we have this error. I understand that this is related to `umap-learn` and not directly to `scanpy`, but I think it's worth to mention here. ```; ---------------------------------------------------------------------------; AssertionError Traceback (most recent call last); ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/errors.py in new_error_context(fmt_, *args, **kwargs); 743 try:; --> 744 yield; 745 except NumbaError as e:; ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/lowering.py in lower_block(self, block); 229 loc=self.loc, errcls_=defaulterrcls):; --> 230 self.lower_inst(inst); 231 self.post_block(block); ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/lowering.py in lower_inst(self, inst); 327 val = self.lower_assign(ty, inst); --> 328 self.storevar(val, inst.target.name); 329 ; ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/numba/core/lowering.py in storevar(self, value, name); 1277 name=name); -> 1278 raise AssertionError(msg); 1279 ; ; AssertionError: Storing i64 to ptr of i32 ('dim'). FE type int32; ; During handling of the above exception, another exception occurred:; ; LoweringError Traceback (most recent call last); <ipython-input-19-ef300851c737> in <module>; 1 n_neighbors = int(np.sqrt(adata.shape[0])/2); ----> 2 sc.pp.neighbors(adata, n_neighbors=n_neighbors, n_pcs=15); ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in neighbors(adata, n_neighbors, n_pcs, use_rep, knn, random_state, method, metric, metric_kwds, key_added, copy); 137 adata._init_as_actual(adata.copy()); 138 neighbors = Neighbors(adata); --> 139 neighbors.compute_neighbors(; 140 n_neighbors=n_neighbors,; 141 knn=knn,; ; ~/miniforge3/envs/scVelo/lib/python3.8/site-packages/scanpy/neighbors/__init__.py in compute_neighbors(self, n_neighbors, knn, n_pcs, use_rep, method, random_state, write_knn_indices, metric, metric_kwds); 806 # we need self._distances also for method == 'gauss' if we di",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1799:1166,Assert,AssertionError,1166,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1799,2,['Assert'],['AssertionError']
Testability,`NameError: name 'logg' is not defined` when using `sc.queries.mitochondrial_genes`,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/258:18,log,logg,18,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/258,1,['log'],['logg']
Testability,"```. First everything fails since `dask-expr` isn't installed. This must be someone upstream pinning dask, but is easily solvable by adding dask-expr to the environment. ```; pip install dask-expr; pytest -n auto; ```. <details>; <summary> Failures </summary>. ```; FAILED scanpy/tests/test_score_genes.py::test_score_with_reference - TypeError: 'module' object is not callable; FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[True-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-sparse] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet[False-dense] - ImportError: cannot import name '_paul15' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/external/test_harmony_integrate.py; ERROR scanpy/tests/external/test_harmony_timeseries.py; ERROR scanpy/tests/external/test_palantir.py; ERROR scanpy/tests/external/test_sam.py; ERROR scanpy/tests/external/test_scanorama_integrate.py; ERROR scanpy/tests/external/test_wishbone.py; ERROR scanpy/tests/test_aggregated.py; ERROR scanpy/tests/test_clustering.py; ERROR scanpy/tests/test_dendrogram.py; ERROR scanpy/tests/test_deprecations.py; ERROR scanpy/te",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:1347,test,testing,1347,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"```; Python 3.9.15 (main, Nov 24 2022, 14:31:59) ; [GCC 11.2.0] :: Anaconda, Inc. on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import scanpy; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/user/anaconda3/lib/python3.9/site-packages/scanpy/__init__.py"", line 16, in <module>; from . import plotting as pl; File ""/home/user/anaconda3/lib/python3.9/site-packages/scanpy/plotting/__init__.py"", line 1, in <module>; from ._anndata import (; File ""/home/user/anaconda3/lib/python3.9/site-packages/scanpy/plotting/_anndata.py"", line 28, in <module>; from . import _utils; File ""/home/user/anaconda3/lib/python3.9/site-packages/scanpy/plotting/_utils.py"", line 35, in <module>; class _AxesSubplot(Axes, axes.SubplotBase, ABC):; TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases; ```. - [ ] I have checked that this issue has not already been reported.; - [ ] I have confirmed this bug exists on the latest version of scanpy.; - [ ] (optional) I have confirmed this bug exists on the master branch of scanpy. ---. **Note**: Please read [this guide](https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; # Your code here; ```. ```pytb; [Paste the error output produced by the above code here]; ```. #### Versions. <details>. [Paste the output of scanpy.logging.print_versions() leaving a blank line after the details tag]. </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2445:1585,log,logging,1585,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2445,1,['log'],['logging']
Testability,"```; sc.tl.rank_genes_groups(adata,groupby='louvain', method='logreg'); ```; ranking genes; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/scanpy/tools/rank_genes_groups.py"", line 191, in rank_genes_groups; scores = scores_all[igroup]; IndexError: index 1 is out of bounds for axis 0 with size 1. Have tried finding similar situations online but can't seem to debug this one. ; Sorry if I'm on this issues page a lot, but I'm using scanpy relentlessly lately :P . Any suggestions appreciated.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/235:62,log,logreg,62,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/235,1,['log'],['logreg']
Testability,"```py; import scanpy as sc; adata = sc.datasets.paul15(); sc.pp.neighbors(adata); sc.tl.diffmap(adata); sc.tl.diffmap(adata); ```. gives. ```pytb; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-6-f88b34870534> in <module>; 7 sc.pp.neighbors(adata); 8 sc.tl.diffmap(adata); ----> 9 sc.tl.diffmap(adata). ~/.anaconda3/lib/python3.7/site-packages/scanpy/tools/_diffmap.py in diffmap(adata, n_comps, neighbors_key, copy); 64 raise ValueError('Provide any value greater than 2 for `n_comps`. '); 65 adata = adata.copy() if copy else adata; ---> 66 _diffmap(adata, n_comps=n_comps, neighbors_key=neighbors_key); 67 return adata if copy else None. ~/.anaconda3/lib/python3.7/site-packages/scanpy/tools/_dpt.py in _diffmap(adata, n_comps, neighbors_key); 13 def _diffmap(adata, n_comps=15, neighbors_key=None):; 14 start = logg.info(f'computing Diffusion Maps using n_comps={n_comps}(=n_dcs)'); ---> 15 dpt = DPT(adata, neighbors_key); 16 dpt.compute_transitions(); 17 dpt.compute_eigen(n_comps=n_comps). ~/.anaconda3/lib/python3.7/site-packages/scanpy/tools/_dpt.py in __init__(self, adata, n_dcs, min_group_size, n_branchings, allow_kendall_tau_shift, neighbors_key); 184 def __init__(self, adata, n_dcs=None, min_group_size=0.01,; 185 n_branchings=0, allow_kendall_tau_shift=False, neighbors_key=None):; --> 186 super(DPT, self).__init__(adata, n_dcs=n_dcs, neighbors_key=neighbors_key); 187 self.flavor = 'haghverdi16'; 188 self.n_branchings = n_branchings. ~/.anaconda3/lib/python3.7/site-packages/scanpy/neighbors/__init__.py in __init__(self, adata, n_dcs, neighbors_key); 564 self._eigen_basis = _backwards_compat_get_full_X_diffmap(adata); 565 if n_dcs is not None:; --> 566 if n_dcs > len(self._eigen_values):; 567 raise ValueError(; 568 'Cannot instantiate using `n_dcs`={}. '. TypeError: '>' not supported between instances of 'str' and 'int'; ```. because n_dcs is incorrectly set to ""neighbors"".",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1262:905,log,logg,905,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1262,1,['log'],['logg']
Testability,"```pytb; package=scanpy; pversion=1.5.1 #found in docs/release-latest.rst after git download; TOPDIR=/usr/common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; cd /usr/common/src; git clone https://github.com/theislab/scanpy.git; cd scanpy; module load python3-libraries #for PYTHONPATH; python3 ./setup.py install \; --install-scripts=$TOPDIR/bin --prefix /usr/common \; 2>&1 | tee ../install_2020_06_10.log; #setup a module ""scanpy"" which puts $TOPDIR/bin on path and; #defines PYTHONPATH, then do; module load scanpy; scanpy; /home/common/lib/python3.6/site-packages/anndata/base.py:17: FutureWarning: pandas.core.index is deprecated and will be removed in a future version. The public classes are available in the top-level namespace.; from pandas.core.index import RangeIndex; Traceback (most recent call last):; File ""/usr/common/modules/el8/x86_64/software/scanpy/1.5.1-CentOS-vanilla/bin/scanpy"", line 11, in <module>; load_entry_point('scanpy==1.5.2.dev7+ge33a2f33', 'console_scripts', 'scanpy')(); File ""/usr/common/lib/python3.6/site-packages/pkg_resources/__init__.py"", line 490, in load_entry_point; return get_distribution(dist).load_entry_point(group, name); File ""/usr/common/lib/python3.6/site-packages/pkg_resources/__init__.py"", line 2862, in load_entry_point; return ep.load(); File ""/usr/common/lib/python3.6/site-packages/pkg_resources/__init__.py"", line 2462, in load; return self.resolve(); File ""/usr/common/lib/python3.6/site-packages/pkg_resources/__init__.py"", line 2468, in resolve; module = __import__(self.module_name, fromlist=['__name__'], level=0); File ""/home/common/lib/python3.6/site-packages/scanpy-1.5.2.dev7+ge33a2f33-py3.6.egg/scanpy/__init__.py"", line 3, in <module>; from ._utils import pkg_version, check_versions, annotate_doc_types; File ""/home/common/lib/python3.6/site-packages/scanpy-1.5.2.dev7+ge33a2f33-py3.6.egg/scanpy/_utils.py"", line 17, in <module>; from anndata import AnnData; File ""/home/common/lib/python3.6/site-packages/",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1273:425,log,log,425,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1273,1,['log'],['log']
Testability,"```python; import scanpy as sc; ```. ```pytb; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_22924/912249142.py in <module>; ----> 1 import scanpy as sc. ~\Anaconda3\lib\site-packages\scanpy\__init__.py in <module>; 13 Verbosity,; 14 ) # start with settings as several tools are using it; ---> 15 from . import tools as tl; 16 from . import preprocessing as pp; 17 from . import plotting as pl. ~\Anaconda3\lib\site-packages\scanpy\tools\__init__.py in <module>; 15 from ._leiden import leiden; 16 from ._louvain import louvain; ---> 17 from ._sim import sim; 18 from ._score_genes import score_genes, score_genes_cell_cycle; 19 from ._dendrogram import dendrogram. ~\Anaconda3\lib\site-packages\scanpy\tools\_sim.py in <module>; 21 from anndata import AnnData; 22 ; ---> 23 from .. import _utils, readwrite, logging as logg; 24 from .._settings import settings; 25 from .._compat import Literal. ~\Anaconda3\lib\site-packages\scanpy\readwrite.py in <module>; 8 import pandas as pd; 9 from matplotlib.image import imread; ---> 10 import tables; 11 import anndata; 12 from anndata import (. ~\Anaconda3\lib\site-packages\tables\__init__.py in <module>; 40 # Import the user classes from the proper modules; 41 from .exceptions import *; ---> 42 from .file import File, open_file, copy_file; 43 from .node import Node; 44 from .group import Group. ~\Anaconda3\lib\site-packages\tables\file.py in <module>; 21 import numpy as np; 22 ; ---> 23 from . import hdf5extension; 24 from . import utilsextension; 25 from . import parameters. ImportError: DLL load failed: The specified procedure could not be found.; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2173:917,log,logging,917,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2173,2,['log'],"['logg', 'logging']"
Testability,"```python; import scanpy as sc; print(sc.__version__) # 1.4+222.gdd052ed; a = sc.datasets.pbmc3k(); b = sc.pp.scale(a, copy=True); # /Users/isaac/github/scanpy/scanpy/preprocessing/_simple.py:1105: RuntimeWarning: invalid value encountered in true_divide; # X /= scale; a.X.data; # array([1., 1., 2., ..., 1., 1., 3.], dtype=float32); b.X; # array([[nan, nan, nan, ..., nan, nan, nan],; # [nan, nan, nan, ..., nan, nan, nan],; # [nan, nan, nan, ..., nan, nan, nan],; # ...,; # [nan, nan, nan, ..., nan, nan, nan],; # [nan, nan, nan, ..., nan, nan, nan],; # [nan, nan, nan, ..., nan, nan, nan]], dtype=float32); ```. Seems off. Even if I've log-ed it or do it inplace the same thing happens.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/581:640,log,log-ed,640,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/581,1,['log'],['log-ed']
Testability,"`filter_rank_genes_groups` handles log values differently than the `rank_genes_groups` function. The discrepancy gives different DE gene lists when filtering genes based on `log2fc_min=1` with `get.rank_genes_groups_df` vs `min_fold_change=2` with `tl.filter_rank_genes_groups`. In rank_genes_groups, `np.expm1` is used:; ```python; foldchanges = (np.expm1(means[imask]) + 1e-9) / (np.expm1(mean_rest) + 1e-9); ```; ```python; rankings_gene_logfoldchanges.append(np.log2(foldchanges[global_indices])); ```. In filter_rank_genes_groups, `np.exp` is used:; ```python; if log:; fold_change_matrix.loc[:, cluster] = (np.exp(mean_obs.loc[True]) / np.exp(mean_obs.loc[False])).values; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/863:35,log,log,35,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/863,2,['log'],['log']
Testability,"`get.rank_genes_groups_df` didn't work when the method was ""logreg"". Now it works as intended",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2601:60,log,logreg,60,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2601,1,['log'],['logreg']
Testability,"`importlib_metadata` does not have a `__version__` attribute. This breaks `sinfo`. We can just skip getting it's version. Also, test that `print_versions` works. Fixes #1437",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/1691:128,test,test,128,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/1691,1,['test'],['test']
Testability,"`log2(TP10K+1)` values are more interpretable than `log(TP10K+1)`, which uses natural logarithm, therefore it'd be great to have an option on the base of the log. It's one of the requests also here #45 . Since neither of np.log or np.log1p accepts any base arguments(isn't this unbelievable), I did it with simple numba functions here: . https://nbviewer.ipython.org/gist/gokceneraslan/2744cfeda702fb9b9e48d0216427372c?flush_cache=true. I won't have time to send a PR, but feel free to pursue further, adapt the notebook and merge (if you have time). PS: Also see https://github.com/numpy/numpy/issues/14969.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/929:52,log,log,52,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/929,4,['log'],"['log', 'logarithm']"
Testability,"`matplotlib.colormaps` was introduced in v3.5.0, but scanpy currently specifies only v3.4+. Bump it and everything should be fine. - [x] Tests included or not required because: trivial change; - [x] Release notes not necessary because: trivial change. (this is just my own evaluation of triviality; if you want a release notes entry I am happy to add one)",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2733:137,Test,Tests,137,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2733,1,['Test'],['Tests']
Testability,"`rank_genes_groups` “returns” two recarrays, each with the shape #cells×#groups. one of them stores gene IDs, one the genes’ scores. the problem with this is that recarrays store their column index (names) in the dtype, in a place where only strings are accepted. however users (and indeed both our wilcoxon example and the tests) may choose to use numeric group IDs. genes with score 0 are unimportant anyway, so maybe we should return sparse data, in the form of a long-form recarray with something like this shape (with `<group_by>` being the `rank_genes_groups` parameter of the same name):. obs | var | <group_by> | score; -- | -- | -- | --; 0 | ENSGXXXX | 5 | 9.728; … | … | … | …. This way the three IDs can have user-defined types, and the data is easier to process via e.g. `pd.DataFrame.fromrecords(adata.obs['gene_ranking'])` . The data should probably be sorted by descending z-scores by group, i.e. if it was a DataFrame: `return gene_ranking.groupby(group_by).sort_values('score')`",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/61:324,test,tests,324,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/61,1,['test'],['tests']
Testability,"`sc.pl.stacked_violin(adata_pl, var_names=check_terms, groupby='ct_cond', swap_axes=True)`. always get the error. ```; TypeError Traceback (most recent call last); <ipython-input-40-5bc1cab6ebf2> in <module>; ----> 1 sc.pl.stacked_violin(adata_pl, var_names=check_terms, groupby='ct_cond', swap_axes=True). ~\Apps\Miniconda3\envs\work38\lib\site-packages\scanpy\plotting\_stacked_violin.py in stacked_violin(adata, var_names, groupby, log, use_raw, num_categories, title, colorbar_title, figsize, dendrogram, gene_symbols, var_group_positions, var_group_labels, standard_scale, var_group_rotation, layer, stripplot, jitter, size, scale, yticklabels, order, swap_axes, show, save, return_fig, row_palette, cmap, ax, vmin, vmax, vcenter, norm, **kwds); 717 return vp; 718 else:; --> 719 vp.make_figure(); 720 savefig_or_show(StackedViolin.DEFAULT_SAVE_PREFIX, show=show, save=save); 721 show = settings.autoshow if show is None else show. ~\Apps\Miniconda3\envs\work38\lib\site-packages\scanpy\plotting\_baseplot_class.py in make_figure(self); 738 if self.legends_width > 0:; 739 legend_ax = self.fig.add_subplot(gs[0, 1]); --> 740 self._plot_legend(legend_ax, return_ax_dict, normalize); 741 ; 742 self.ax_dict = return_ax_dict. ~\Apps\Miniconda3\envs\work38\lib\site-packages\scanpy\plotting\_baseplot_class.py in _plot_legend(self, legend_ax, return_ax_dict, normalize); 535 color_legend_ax = fig.add_subplot(legend_gs[1]); 536 ; --> 537 self._plot_colorbar(color_legend_ax, normalize); 538 return_ax_dict['color_legend_ax'] = color_legend_ax; 539 . ~\Apps\Miniconda3\envs\work38\lib\site-packages\scanpy\plotting\_baseplot_class.py in _plot_colorbar(self, color_legend_ax, normalize); 508 import matplotlib.colorbar; 509 ; --> 510 matplotlib.colorbar.Colorbar(; 511 color_legend_ax, orientation='horizontal', cmap=cmap, norm=normalize; 512 ). TypeError: __init__() missing 1 required positional argument: 'mappable'; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2118:435,log,log,435,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2118,1,['log'],['log']
Testability,"a clear and concise description of what the bug is: -->; ...When run bbknn on adata which has been calculated the pca, umap, and leiden, the AttributeError shows 'tuple' object has no attribute 'tocsr'. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; sc.pp.pca(adata); sc.pp.neighbors(adata); sc.tl.umap(adata); ...; computing PCA; on highly variable genes; with n_comps=50; finished (0:00:27); computing neighbors; using 'X_pca' with n_pcs = 50; finished: added to `.uns['neighbors']`; `.obsp['distances']`, distances for each pair of neighbors; `.obsp['connectivities']`, weighted adjacency matrix (0:00:24); computing UMAP; finished: added; 'X_umap', UMAP coordinates (adata.obsm) (0:01:27). %%time; sc.external.pp.bbknn(adata, batch_key='batch'); ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```; computing batch balanced neighbors; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-9-9b24f504f73c> in <module>(); ----> 1 get_ipython().run_cell_magic('time', '', ""sc.external.pp.bbknn(adata, batch_key='batch')""). 6 frames; <decorator-gen-60> in time(self, line, cell, local_ns). <timed eval> in <module>(). /usr/local/lib/python3.6/dist-packages/bbknn/__init__.py in compute_connectivities_umap(knn_indices, knn_dists, n_obs, n_neighbors, set_op_mix_ratio, local_connectivity); 63 distances = get_sparse_matrix_from_indices_distances_umap(knn_indices, knn_dists, n_obs, n_neighbors); 64 ; ---> 65 return distances, connectivities.tocsr(); 66 ; 67 def create_tree(data,approx,metric,use_faiss,n_trees):. AttributeError: 'tuple' object has no attribute 'tocsr'; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > ...; scanpy==1.5.1 anndata==0.7.3 umap==0.4.3 numpy==1.18.4 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.10.2 python-igraph==0.8.2 leidenalg==0.8.0",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1249:1814,log,logging,1814,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1249,1,['log'],['logging']
Testability,a' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[toarray-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-i,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:17971,test,testing,17971,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,a' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[threshold-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-hvg_opt_out-50-200] ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:21521,test,testing,21521,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,"a-adc5-4094-9bc3-7f2d894355f4.png). ```pytb; ---------------------------------------------------------------------------; RecursionError Traceback (most recent call last); Input In [6], in <cell line: 1>(); ----> 1 sc.tl.ingest(adata, adata_ref, obs='louvain'). File ~/miniconda3/envs/test/lib/python3.10/site-packages/scanpy/tools/_ingest.py:133, in ingest(adata, adata_ref, obs, embedding_method, labeling_method, neighbors_key, inplace, **kwargs); 130 ing.map_embedding(method); 132 if obs is not None:; --> 133 ing.neighbors(**kwargs); 134 for i, col in enumerate(obs):; 135 ing.map_labels(col, labeling_method[i]). File ~/miniconda3/envs/test/lib/python3.10/site-packages/scanpy/tools/_ingest.py:472, in Ingest.neighbors(self, k, queue_size, epsilon, random_state); 469 if self._use_pynndescent:; 470 self._nnd_idx.search_rng_state = rng_state; --> 472 self._indices, self._distances = self._nnd_idx.query(test, k, epsilon); 474 else:; 475 from umap.utils import deheap_sort. File ~/miniconda3/envs/test/lib/python3.10/site-packages/pynndescent/pynndescent_.py:1595, in NNDescent.query(self, query_data, k, epsilon); 1564 """"""Query the training graph_data for the k nearest neighbors; 1565 ; 1566 Parameters; (...); 1592 training graph_data.; 1593 """"""; 1594 if not hasattr(self, ""_search_graph""):; -> 1595 self._init_search_graph(); 1597 if not self._is_sparse:; 1598 # Standard case; 1599 if not hasattr(self, ""_search_function""):. File ~/miniconda3/envs/test/lib/python3.10/site-packages/pynndescent/pynndescent_.py:967, in NNDescent._init_search_graph(self); 961 self._search_forest = [; 962 convert_tree_format(tree, self._raw_data.shape[0]); 963 for tree in rp_forest; 964 ]; 965 else:; 966 # convert the best trees into a search forest; --> 967 tree_scores = [; 968 score_linked_tree(tree, self._neighbor_graph[0]); 969 for tree in self._rp_forest; 970 ]; 971 if self.verbose:; 972 print(ts(), ""Worst tree score: {:.8f}"".format(np.min(tree_scores))). File ~/miniconda3/envs/test/lib/python3.",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2191:1659,test,test,1659,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2191,1,['test'],['test']
Testability,"a.obs[groups_key].astype(str).values; 731 if reference == 'rest':. ~/miniconda3/envs/scrna/lib/python3.7/site-packages/pandas/core/frame.py in __setitem__(self, key, value); 2936 else:; 2937 # set column; -> 2938 self._set_item(key, value); 2939 ; 2940 def _setitem_slice(self, key, value):. ~/miniconda3/envs/scrna/lib/python3.7/site-packages/pandas/core/frame.py in _set_item(self, key, value); 2997 """"""; 2998 ; -> 2999 self._ensure_valid_index(value); 3000 value = self._sanitize_column(key, value); 3001 NDFrame._set_item(self, key, value). ~/miniconda3/envs/scrna/lib/python3.7/site-packages/pandas/core/frame.py in _ensure_valid_index(self, value); 3052 if not len(self.index) and is_list_like(value) and len(value):; 3053 try:; -> 3054 value = Series(value); 3055 except (ValueError, NotImplementedError, TypeError):; 3056 raise ValueError(. ~/miniconda3/envs/scrna/lib/python3.7/site-packages/pandas/core/series.py in __init__(self, data, index, dtype, name, copy, fastpath); 303 data = data.copy(); 304 else:; --> 305 data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True); 306 ; 307 data = SingleBlockManager(data, index, fastpath=True). ~/miniconda3/envs/scrna/lib/python3.7/site-packages/pandas/core/construction.py in sanitize_array(data, index, dtype, copy, raise_cast_failure); 480 elif subarr.ndim > 1:; 481 if isinstance(data, np.ndarray):; --> 482 raise Exception(""Data must be 1-dimensional""); 483 else:; 484 subarr = com.asarray_tuplesafe(data, dtype=dtype). Exception: Data must be 1-dimensional; ```. <!-- Put a minimal reproducible example that reproduces the bug in the code block below: -->; ```python; ...; ```. <!-- Put your Error output in this code block (if applicable, else delete the block): -->; ```pytb; ...; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.6 anndata==0.7.1 umap==0.4.2 numpy==1.18.3 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.8.2 louvain==0.6.2",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1199:2574,log,logging,2574,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1199,1,['log'],['logging']
Testability,a.py::test_pca_layer - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_no_threshold] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_plotting.py::test_scrublet_plots[scrublet_with_batches] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_preprocessing_distributed.py::test_write_zarr[dask] - ValueError: buffer source array is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[sparse] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet[dense] - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_batched - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_data - ValueError: assignment destination is read-only; FAILED scanpy/tests/test_scrublet.py::test_scrublet_simulate_doublets - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[normalize_variance-False] - ValueError: assignment destination is read-only; ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[log_transform-True] - ValueError: assignment destination is read-only. ```. </details>. <details>; <summary> Test failure traceback </summary>. ```pytb; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2902:3783,test,tests,3783,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2902,1,['test'],['tests']
Testability,"ackages/scanpy/preprocessing/_combat.py:269: NumbaWarning: ; Compilation is falling back to object mode WITHOUT looplifting enabled because Function ""_it_sol"" failed type inference due to: Cannot unify array(float64, 2d, C) and array(float64, 1d, C) for 'sum2', defined at /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_combat.py (311). File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_combat.py"", line 311:; def _it_sol(s_data, g_hat, d_hat, g_bar, t2, a, b, conv=0.0001) -> Tuple[float, float]:; <source elided>; g_new = (t2*n*g_hat + d_old*g_bar) / (t2*n + d_old); sum2 = s_data - g_new.reshape((g_new.shape[0], 1)) @ np.ones((1, s_data.shape[1])); ^. [1] During: typing of assignment at /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_combat.py (313). File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_combat.py"", line 313:; def _it_sol(s_data, g_hat, d_hat, g_bar, t2, a, b, conv=0.0001) -> Tuple[float, float]:; <source elided>; sum2 = sum2 ** 2; sum2 = sum2.sum(axis=1); ^. @numba.jit; /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/numba/compiler.py:742: NumbaWarning: Function ""_it_sol"" was compiled in object mode without forceobj=True. File ""../../../anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_combat.py"", line 305:; def _it_sol(s_data, g_hat, d_hat, g_bar, t2, a, b, conv=0.0001) -> Tuple[float, float]:; <source elided>; change = 1; count = 0; ^. self.func_ir.loc)); /home/auesro/anaconda3/envs/Scanpy/lib/python3.7/site-packages/scanpy/preprocessing/_combat.py:235: RuntimeWarning: divide by zero encountered in true_divide; b_prior[i],; ```. #### Versions:; <!-- Output of scanpy.logging.print_versions() -->; > scanpy==1.4.4.post1 anndata==0.6.22.post1 umap==0.3.10 numpy==1.18.1 scipy==1.4.1 pandas==1.0.3 scikit-learn==0.22.2.post1 statsmodels==0.11.1 python-igraph==0.7.1 louvain==0.6.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1164:4561,log,logging,4561,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1164,1,['log'],['logging']
Testability,"ad(""adata2.h5ad""); check_equal_adata_X(adata_run1_concat, adata_run2_concat); adata_run1_concat.X = adata_run1_concat.X.astype(np.float64); adata_run2_concat.X = adata_run2_concat.X.astype(np.float64); sc.pp.normalize_total(adata_run1_concat); sc.pp.normalize_total(adata_run2_concat); check_equal_adata_X(adata_run1_concat, adata_run2_concat); ```. Output:; ```pytb; True; True; True; True; True; True; ```. Like I said, we tested also the ""internal"" `scanpy` 10x 3k PBMC dataset. ```python; sc.datasets.pbmc3k(); pbmc3k_1 = sc.read_h5ad(""data/pbmc3k_raw.h5ad""); pbmc3k_2 = sc.read_h5ad(""data/pbmc3k_raw.h5ad""); check_equal_adata_X(pbmc3k_1, pbmc3k_2); sc.pp.normalize_total(pbmc3k_1); sc.pp.normalize_total(pbmc3k_2); check_equal_adata_X(pbmc3k_1, pbmc3k_2); ```. ```pytb; True; True; True; True; True; True; ```. #### Versions. <details>. -----; anndata 0.7.5; scanpy 1.6.1; sinfo 0.3.1; -----; anndata 0.7.5; backcall 0.1.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; get_version 2.1; h5py 2.10.0; importlib_metadata 1.6.0; ipykernel 5.2.1; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.0; joblib 0.14.1; kiwisolver 1.2.0; legacy_api_wrap 1.2; llvmlite 0.31.0; matplotlib 3.2.1; mpl_toolkits NA; natsort 7.0.1; numba 0.48.0; numexpr 2.7.1; numpy 1.18.2; packaging 20.3; pandas 1.0.3; parso 0.7.0; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.5; ptyprocess 0.6.0; pygments 2.6.1; pyparsing 2.4.7; pytz 2019.3; scanpy 1.6.1; scipy 1.4.1; setuptools_scm NA; sinfo 0.3.1; six 1.14.0; sklearn 0.22.2.post1; storemagic NA; tables 3.6.1; tornado 6.0.4; tqdm 4.45.0; traitlets 4.3.3; wcwidth NA; zipp NA; zmq 19.0.0; -----; IPython 7.13.0; jupyter_client 6.1.3; jupyter_core 4.6.3; notebook 6.0.3; -----; Python 3.7.6 | packaged by conda-forge | (default, Mar 23 2020, 23:03:20) [GCC 7.3.0]; Linux-3.10.0-1127.18.2.el7.x86_64-x86_64-with-centos-7.8.2003-Core; 36 logical CPU cores; -----; Session information updated at 2021-01-27 17:16; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1612:2993,log,logical,2993,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1612,1,['log'],['logical']
Testability,"adata_pp, counts_per_cell_after = 1e6); sc.pp.log1p(adata_pp); sc.pp.pca(adata_pp, n_comps = 15); sc.pp.neighbors(adata_pp); sc.tl.leiden(adata_pp, key_added = 'groups', resolution = 0.5); input_groups = adata_pp.obs['groups']; data_mat = adata.X.T; ```; ```python; %%R -i data_mat -i input_groups -o size_factors; size_factors = sizeFactors(computeSumFactors(SingleCellExperiment(list(counts = data_mat)), ; clusters = input_groups, ; min.mean = 0.1)); ```; ```python; del adata_pp; adata.obs['size_factors'] = size_factors; adata.layers['counts'] = adata.X.copy(); adata.X /= adata.obs['size_factors'].values[:,None]; sc.pp.log1p(adata); adata.X = sp.sparse.csr_matrix(adata.X); adata.raw = adata. sc.pp.highly_variable_genes(adata, flavor = 'cell_ranger', n_top_genes = 2000); sc.pp.pca(adata, n_comps = 50, use_highly_variable = True, svd_solver = 'arpack'); sc.pp.neighbors(adata); sc.tl.umap(adata); adata.uns['log1p'] # this produces: {'base': None}; adata.write('test.h5ad'). adata = sc.read('test.h5ad'); adata.uns['log1p'] # the now produces: {}; sc.tl.leiden(adata, key_added='leiden_r1.0'); sc.tl.rank_genes_groups(adata, groupby='leiden_r1.0', key_added='rank_genes_all', method='wilcoxon') # this causes an error; ```. ```pytb; ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); Input In [13], in <cell line: 2>(); 1 # Calculate marker genes; ----> 2 sc.tl.rank_genes_groups(adata, groupby='leiden_r1.0', key_added='rank_genes_all', method='wilcoxon', use_raw=False). File /usr/local/lib/python3.8/dist-packages/scanpy/tools/_rank_genes_groups.py:590, in rank_genes_groups(adata, groupby, use_raw, groups, reference, n_genes, rankby_abs, pts, key_added, copy, method, corr_method, tie_correct, layer, **kwds); 580 adata.uns[key_added] = {}; 581 adata.uns[key_added]['params'] = dict(; 582 groupby=groupby,; 583 reference=reference,; (...); 587 corr_method=corr_method,; 588 ); --> 590 test_obj = _RankGenes(adata, gro",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2181:3159,test,test,3159,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2181,1,['test'],['test']
Testability,adding initial tests for plotting,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/207:15,test,tests,15,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/207,1,['test'],['tests']
Testability,"ages/sphinx/builders/__init__.py"", line 545, in _write_serial; self.write_doc(docname, doctree); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/contextlib.py"", line 88, in __exit__; next(self.gen); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 219, in pending_warnings; memhandler.flushTo(logger); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 184, in flushTo; logger.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1454, in handle; self.callHandlers(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 1516, in callHandlers; hdlr.handle(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 861, in handle; rv = self.filter(record); File ""/home/docs/.pyenv/versions/3.6.8/lib/python3.6/logging/__init__.py"", line 720, in filter; result = f.filter(record); File ""/home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/envs/latest/lib/python3.6/site-packages/sphinx/util/logging.py"", line 404, in filter; raise SphinxWarning(location + "":"" + message); sphinx.errors.SphinxWarning: /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessing/_simple.py:docstring of scanpy.pp.downsample_counts:17:py:class reference target not found: numpy.random.RandomState. Warning, treated as error:; /home/docs/checkouts/readthedocs.org/user_builds/icb-scanpy/checkouts/latest/scanpy/preprocessing/_simple.py:docstring of scanpy.pp.downsample_counts:17:py:class reference target not found: numpy.random.RandomState; ```. </details>. It looks like readthedocs is failing due to `numpy.random.RandomState` not being rewritten to `numpy.random.mtrand.RandomState`. I think the transform isn't happening in the right order when the docs are built from scratch since I ca",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1057:2796,log,logging,2796,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1057,1,['log'],['logging']
Testability,"aised from /home/sunhao/.conda/envs/h5ad/lib/python3.9/site-packages/numba/core/typing/npydecl.py:254; - Of which 2 did not match due to:; Operator Overload in function 'iadd': File: unknown: Line unknown.; With argument(s): '(array(bool, 1d, C), array(int64, 1d, C))':; No match for registered cases:; * (int64, int64) -> int64; * (int64, uint64) -> int64; * (uint64, int64) -> int64; * (uint64, uint64) -> uint64; * (float32, float32) -> float32; * (float64, float64) -> float64; * (complex64, complex64) -> complex64; * (complex128, complex128) -> complex128. During: typing of intrinsic-call at /home/sunhao/.conda/envs/h5ad/lib/python3.9/site-packages/scanpy/preprocessing/_qc.py (449). File "".conda/envs/h5ad/lib/python3.9/site-packages/scanpy/preprocessing/_qc.py"", line 449:; def top_segment_proportions_sparse_csr(data, indptr, ns):; <source elided>; for j in range(ns.size):; acc += partitioned[:, prev : ns[j]].sum(axis=1); ```. ### Versions. <details>. ```; >>> import scanpy; scanpy.logging.print_versions(); -----; anndata 0.10.2; scanpy 1.9.6; -----; PIL 10.0.1; beta_ufunc NA; binom_ufunc NA; cffi 1.15.1; cloudpickle 3.0.0; colorama 0.4.6; cycler 0.12.1; cython_runtime NA; cytoolz 0.12.0; dask 2023.11.0; dateutil 2.8.2; exceptiongroup 1.1.3; fastcore 1.5.29; get_annotations NA; h5py 3.7.0; hypergeom_ufunc NA; importlib_resources NA; invgauss_ufunc NA; joblib 1.3.2; kiwisolver 1.4.4; llvmlite 0.41.1; matplotlib 3.8.1; mkl 2.4.0; mpl_toolkits NA; natsort 8.4.0; nbinom_ufunc NA; ncf_ufunc NA; nct_ufunc NA; ncx2_ufunc NA; numba 0.58.1; numpy 1.23.5; packaging 23.2; pandas 1.2.4; psutil 5.9.0; pycparser 2.21; pyparsing 3.0.9; pytz 2023.3.post1; scDenorm NA; scipy 1.10.1; session_info 1.0.0; setuptools 68.0.0; six 1.16.0; skewnorm_ufunc NA; sklearn 1.3.0; threadpoolctl 3.2.0; tlz 0.12.0; toolz 0.12.0; tqdm 4.66.1; typing_extensions NA; yaml 6.0; zipp NA; -----; Python 3.9.13 (main, Oct 13 2022, 21:15:33) [GCC 11.2.0]; Linux-3.10.0-1160.102.1.el7.x86_64-x86_64-with-glibc2.1",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2758:4100,log,logging,4100,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2758,1,['log'],['logging']
Testability,"al-bug-reports) detailing how to provide the necessary information for us to reproduce your bug. ### Minimal code sample (that we can copy&paste without having any data). ```python; sc.pl.violin(adata, ['n_genes_by_counts', 'total_counts', 'pct_counts_house'],; jitter=0.4, multi_panel=True). ```. ```pytb; /Users/banana/opt/miniconda3/lib/python3.8/site-packages/anndata/_core/anndata.py:1192: FutureWarning:. is_categorical is deprecated and will be removed in a future version. Use is_categorical_dtype instead. /Users/banana/opt/miniconda3/lib/python3.8/site-packages/seaborn/_core.py:1303: UserWarning:. Vertical orientation ignored with only `x` specified. ```. #### Versions. <details>. WARNING: If you miss a compact list, please try `print_header`!; -----; anndata 0.7.4; scanpy 1.6.0; sinfo 0.3.1; -----; PIL 8.0.1; anndata 0.7.4; appnope 0.1.0; attr 20.2.0; backcall 0.2.0; cffi 1.14.0; cycler 0.10.0; cython_runtime NA; dateutil 2.8.1; decorator 4.4.2; get_version 2.1; h5py 2.10.0; idna 2.9; ipykernel 5.3.4; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.2; joblib 0.17.0; jsonschema 3.2.0; kiwisolver 1.2.0; legacy_api_wrap 1.2; llvmlite 0.34.0; matplotlib 3.3.2; mpl_toolkits NA; natsort 7.0.1; nbformat 5.0.8; numba 0.51.2; numexpr 2.7.1; numpy 1.19.1; packaging 20.4; pandas 1.1.2; parso 0.7.1; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; plotly 4.12.0; prompt_toolkit 3.0.8; ptyprocess 0.6.0; pvectorc NA; pygments 2.7.1; pyparsing 2.4.7; pyrsistent NA; pytz 2020.1; retrying NA; scanpy 1.6.0; scipy 1.5.2; seaborn 0.11.0; setuptools_scm NA; sinfo 0.3.1; six 1.15.0; sklearn 0.23.2; statsmodels 0.12.1; storemagic NA; tables 3.6.1; tornado 6.0.4; traitlets 5.0.5; wcwidth 0.2.5; zmq 19.0.2; -----; IPython 7.18.1; jupyter_client 6.1.7; jupyter_core 4.6.3; notebook 6.1.4; -----; Python 3.8.3 (default, May 19 2020, 13:54:14) [Clang 10.0.0 ]; macOS-10.15.7-x86_64-i386-64bit; 4 logical CPU cores, i386; -----; Session information updated at 2020-11-05 17:47; </details>",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/1486:2539,log,logical,2539,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/1486,1,['log'],['logical']
Testability,alization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[csr_matrix-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-int64-params2-Pearson residuals requir,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:7643,test,testing,7643,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,alization.py::test_normalize_pearson_residuals_warnings[toarray-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[knn_dist_metric-manhattan] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:18637,test,testing,18637,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,alize_pearson_residuals_errors[toarray-float32-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearso,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:4396,test,testing,4396,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,alize_pearson_residuals_pca[csr_matrix-int64-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.t,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:13438,test,tests,13438,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,alize_pearson_residuals_recipe[csr_matrix-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-int64-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:13230,test,tests,13230,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,"all input arrays must have the same shape'); 428 ; 429 result_ndim = arrays[0].ndim + 1. ValueError: all input arrays must have the same shape; ```. ### Versions. ```; WARNING: If you miss a compact list, please try `print_header`!; The `sinfo` package has changed name and is now called `session_info` to become more discoverable and self-explanatory. The `sinfo` PyPI package will be kept around to avoid breaking old installs and you can downgrade to 0.3.2 if you want to use it without seeing this message. For the latest features and bug fixes, please install `session_info` instead. The usage and defaults also changed slightly, so please review the latest README at https://gitlab.com/joelostblom/session_info.; -----; anndata 0.8.0; scanpy 1.8.1; sinfo 0.3.4; -----; PIL 7.1.2; backcall 0.2.0; beta_ufunc NA; binom_ufunc NA; cffi 1.15.0; colorama 0.4.4; cycler 0.10.0; cython_runtime NA; dateutil 2.8.2; decorator 5.1.1; google NA; h5py 3.7.0; ipykernel 5.3.0; ipython_genutils 0.2.0; ipywidgets 7.5.1; jedi 0.17.0; joblib 1.1.0; kiwisolver 1.2.0; llvmlite 0.38.1; matplotlib 3.3.0; mpl_toolkits NA; natsort 8.1.0; nbinom_ufunc NA; netifaces 0.11.0; numba 0.55.2; numexpr 2.8.3; numpy 1.20.0; packaging 21.3; pandas 1.1.3; parso 0.7.0; pexpect 4.8.0; pickleshare 0.7.5; pkg_resources NA; prompt_toolkit 3.0.5; psutil 5.9.0; ptyprocess 0.6.0; pygments 2.6.1; pyparsing 3.0.8; pytz 2022.1; ruamel NA; scipy 1.7.0; seaborn 0.11.2; setuptools 62.1.0; simplejson 3.17.6; six 1.16.0; sklearn 1.0.1; statsmodels 0.13.2; storemagic NA; tables 3.7.0; threadpoolctl 3.1.0; tornado 6.0.4; traitlets 4.3.3; typing_extensions NA; wcwidth 0.2.5; yaml 6.0; zipp NA; zmq 19.0.1; -----; IPython 7.15.0; jupyter_client 6.1.3; jupyter_core 4.6.3; jupyterlab 2.1.4; notebook 6.1.5; -----; Python 3.7.13 (default, Aug 6 2022, 00:43:34) [GCC 9.2.0]; Linux-4.18.0-348.12.2.el8_5.x86_64-x86_64-with-centos-8.7-Green_Obsidian; 192 logical CPU cores, x86_64; -----; Session information updated at 2023-08-22 16:49; ```",MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2635:5002,log,logical,5002,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2635,1,['log'],['logical']
Testability,allowed the function to use specified var_names. <!--; Thanks for opening a PR to scanpy!; Please be sure to follow the guidelines in our contribution guide (https://scanpy.readthedocs.io/en/latest/dev/index.html) to familiarize yourself with our workflow and speed up review.; -->. <!-- Please check (“- [x]”) and fill in the following boxes -->; - [x] #1549; - [ ] Tests included or not required because:; <!-- Only check the following box if you did not include release notes -->; - [ ] Release notes not necessary because:,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/pull/2765:367,Test,Tests,367,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/pull/2765,1,['Test'],['Tests']
Testability,als_pca[csr_matrix-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:11552,test,tests,11552,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,als_pca[csr_matrix-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.te,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:11977,test,tests,11977,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,als_pca[csr_matrix-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-50-100] - ImportError: cannot import ,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:6415,test,tests,6415,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,als_pca[csr_matrix-int64-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-100] - ImportError: cannot import name 'pbmc3k' from ',MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:11337,test,tests,11337,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,als_pca[csr_matrix-int64-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_recipe[csr_matrix-float32-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.te,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:11762,test,tests,11762,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,als_pca[csr_matrix-int64-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-int64-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_opt_out-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-mask-30-200] - ImportError: cannot import name 'pbmc3k' from ',MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:15336,test,tests,15336,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
Testability,als_pca[toarray-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-float32-hvg_default-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[csr_matrix-float32-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-no_hvg-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_default-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[csr_matrix-float32-hvg_defaul,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:5506,test,testing,5506,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['testing']
Testability,als_recipe[toarray-float32-50-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_warnings[toarray-int64] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta0] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-theta1] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_errors[toarray-int64-params2-Pearson residuals require `clip>=0` or `clip=None`.] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-30-200] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_normalization.py::test_normalize_pearson_residuals_pca[toarray-int64-no_hvg-50-100] - ImportError: cannot import name 'pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[expected_doublet_rate-0.1] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERROR scanpy/tests/test_scrublet.py::test_scrublet_params[synthetic_doublet_umi_subsampling-0.8] - ImportError: cannot import name '_pbmc3k' from 'scanpy.testing._helpers.data' (unknown location); ERR,MatchSource.ISSUE,scverse,scanpy,1.10.2,https://github.com/scverse/scanpy/issues/2993:18486,test,tests,18486,https://scanpy.readthedocs.io,https://github.com/scverse/scanpy/issues/2993,1,['test'],['tests']
